

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 20 22:42:36 2022

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    22                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    23                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    24                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    25                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    26                           	psect	text0,global,reloc=2,class=CODE,delta=1
    27                           	psect	text1,global,reloc=2,class=CODE,delta=1
    28                           	psect	text2,global,reloc=2,class=CODE,delta=1
    29                           	psect	text3,global,reloc=2,class=CODE,delta=1
    30                           	psect	text4,global,reloc=2,class=CODE,delta=1
    31                           	psect	text5,global,reloc=2,class=CODE,delta=1
    32                           	psect	text6,global,reloc=2,class=CODE,delta=1
    33                           	psect	text7,global,reloc=2,class=CODE,delta=1
    34                           	psect	text8,global,reloc=2,class=CODE,delta=1
    35                           	psect	text9,global,reloc=2,class=CODE,delta=1
    36                           	psect	text10,global,reloc=2,class=CODE,delta=1
    37                           	psect	text11,global,reloc=2,class=CODE,delta=1
    38                           	psect	text12,global,reloc=2,class=CODE,delta=1
    39                           	psect	text13,global,reloc=2,class=CODE,delta=1
    40                           	psect	text14,global,reloc=2,class=CODE,delta=1
    41                           	psect	text15,global,reloc=2,class=CODE,delta=1
    42                           	psect	text16,global,reloc=2,class=CODE,delta=1
    43                           	psect	text17,global,reloc=2,class=CODE,delta=1
    44                           	psect	text18,global,reloc=2,class=CODE,delta=1
    45                           	psect	text19,global,reloc=2,class=CODE,delta=1
    46                           	psect	text20,global,reloc=2,class=CODE,delta=1
    47                           	psect	text21,global,reloc=2,class=CODE,delta=1
    48                           	psect	text22,global,reloc=2,class=CODE,delta=1
    49                           	psect	text23,global,reloc=2,class=CODE,delta=1
    50                           	psect	text24,global,reloc=2,class=CODE,delta=1
    51                           	psect	text25,global,reloc=2,class=CODE,delta=1
    52                           	psect	text26,global,reloc=2,class=CODE,delta=1
    53                           	psect	text27,global,reloc=2,class=CODE,delta=1
    54                           	psect	text28,global,reloc=2,class=CODE,delta=1
    55                           	psect	text29,global,reloc=2,class=CODE,delta=1
    56                           	psect	text30,global,reloc=2,class=CODE,delta=1
    57                           	psect	text31,global,reloc=2,class=CODE,delta=1
    58                           	psect	text32,global,reloc=2,class=CODE,delta=1
    59                           	psect	text33,global,reloc=2,class=CODE,delta=1
    60                           	psect	text34,global,reloc=2,class=CODE,delta=1
    61                           	psect	text35,global,reloc=2,class=CODE,delta=1
    62                           	psect	text36,global,reloc=2,class=CODE,delta=1
    63                           	psect	text37,global,reloc=2,class=CODE,delta=1
    64                           	psect	text38,global,reloc=2,class=CODE,delta=1
    65                           	psect	text39,global,reloc=2,class=CODE,delta=1
    66                           	psect	text40,global,reloc=2,class=CODE,delta=1
    67                           	psect	text41,global,reloc=2,class=CODE,delta=1
    68                           	psect	text42,global,reloc=2,class=CODE,delta=1
    69                           	psect	text43,global,reloc=2,class=CODE,delta=1
    70                           	psect	text44,global,reloc=2,class=CODE,delta=1
    71                           	psect	text45,global,reloc=2,class=CODE,delta=1
    72                           	psect	text46,global,reloc=2,class=CODE,delta=1
    73                           	psect	text47,global,reloc=2,class=CODE,delta=1
    74                           	psect	text48,global,reloc=2,class=CODE,delta=1
    75                           	psect	text49,global,reloc=2,class=CODE,delta=1
    76                           	psect	text50,global,reloc=2,class=CODE,delta=1
    77                           	psect	text51,global,reloc=2,class=CODE,delta=1
    78                           	psect	text52,global,reloc=2,class=CODE,delta=1
    79                           	psect	text53,global,reloc=2,class=CODE,delta=1
    80                           	psect	text54,global,reloc=2,class=CODE,delta=1
    81                           	psect	text55,global,reloc=2,class=CODE,delta=1
    82                           	psect	text56,global,reloc=2,class=CODE,delta=1
    83                           	psect	text57,global,reloc=2,class=CODE,delta=1
    84                           	psect	text58,global,reloc=2,class=CODE,delta=1
    85                           	psect	text59,global,reloc=2,class=CODE,delta=1
    86                           	psect	text60,global,reloc=2,class=CODE,delta=1
    87                           	psect	text61,global,reloc=2,class=CODE,delta=1
    88                           	psect	text62,global,reloc=2,class=CODE,delta=1
    89                           	psect	text63,global,reloc=2,class=CODE,delta=1
    90                           	psect	text64,global,reloc=2,class=CODE,delta=1
    91                           	psect	text65,global,reloc=2,class=CODE,delta=1
    92                           	psect	text66,global,reloc=2,class=CODE,delta=1
    93                           	psect	text67,global,reloc=2,class=CODE,delta=1
    94                           	psect	text68,global,reloc=2,class=CODE,delta=1
    95                           	psect	text69,global,reloc=2,class=CODE,delta=1
    96                           	psect	text70,global,reloc=2,class=CODE,delta=1
    97                           	psect	text71,global,reloc=2,class=CODE,delta=1
    98                           	psect	text72,global,reloc=2,class=CODE,delta=1
    99                           	psect	text73,global,reloc=2,class=CODE,delta=1
   100                           	psect	text74,global,reloc=2,class=CODE,delta=1
   101                           	psect	text75,global,reloc=2,class=CODE,delta=1
   102                           	psect	text76,global,reloc=2,class=CODE,delta=1
   103                           	psect	text77,global,reloc=2,class=CODE,delta=1
   104                           	psect	text78,global,reloc=2,class=CODE,delta=1
   105                           	psect	text79,global,reloc=2,class=CODE,delta=1
   106                           	psect	text80,global,reloc=2,class=CODE,delta=1
   107                           	psect	text81,global,reloc=2,class=CODE,delta=1
   108                           	psect	text82,global,reloc=2,class=CODE,delta=1
   109                           	psect	text83,global,reloc=2,class=CODE,delta=1
   110                           	psect	text84,global,reloc=2,class=CODE,delta=1
   111                           	psect	text85,global,reloc=2,class=CODE,delta=1
   112                           	psect	text86,global,reloc=2,class=CODE,delta=1
   113                           	psect	text87,global,reloc=2,class=CODE,delta=1
   114                           	psect	text88,global,reloc=2,class=CODE,delta=1
   115                           	psect	text89,global,reloc=2,class=CODE,delta=1
   116                           	psect	text90,global,reloc=2,class=CODE,delta=1
   117                           	psect	text91,global,reloc=2,class=CODE,delta=1
   118                           	psect	text92,global,reloc=2,class=CODE,delta=1
   119                           	psect	text93,global,reloc=2,class=CODE,delta=1
   120                           	psect	text94,global,reloc=2,class=CODE,delta=1
   121                           	psect	text95,global,reloc=2,class=CODE,delta=1
   122                           	psect	text96,global,reloc=2,class=CODE,delta=1
   123                           	psect	text97,global,reloc=2,class=CODE,delta=1
   124                           	psect	text98,global,reloc=2,class=CODE,delta=1
   125                           	psect	text99,global,reloc=2,class=CODE,delta=1
   126                           	psect	text100,global,reloc=2,class=CODE,delta=1
   127                           	psect	text101,global,reloc=2,class=CODE,delta=1
   128                           	psect	text102,global,reloc=2,class=CODE,delta=1
   129                           	psect	text103,global,reloc=2,class=CODE,delta=1
   130                           	psect	text104,global,reloc=2,class=CODE,delta=1
   131                           	psect	text105,global,reloc=2,class=CODE,delta=1
   132                           	psect	text106,global,reloc=2,class=CODE,delta=1
   133                           	psect	text107,global,reloc=2,class=CODE,delta=1
   134                           	psect	text108,global,reloc=2,class=CODE,delta=1
   135                           	psect	text109,global,reloc=2,class=CODE,delta=1
   136                           	psect	text110,global,reloc=2,class=CODE,delta=1
   137                           	psect	text111,global,reloc=2,class=CODE,delta=1
   138                           	psect	text112,global,reloc=2,class=CODE,delta=1
   139                           	psect	text113,global,reloc=2,class=CODE,delta=1
   140                           	psect	text114,global,reloc=2,class=CODE,delta=1
   141                           	psect	text115,global,reloc=2,class=CODE,delta=1
   142                           	psect	text116,global,reloc=2,class=CODE,delta=1
   143                           	psect	text117,global,reloc=2,class=CODE,delta=1
   144                           	psect	text118,global,reloc=2,class=CODE,delta=1
   145                           	psect	text119,global,reloc=2,class=CODE,delta=1
   146                           	psect	text120,global,reloc=2,class=CODE,delta=1
   147                           	psect	text121,global,reloc=2,class=CODE,delta=1
   148                           	psect	text122,global,reloc=2,class=CODE,delta=1
   149                           	psect	text123,global,reloc=2,class=CODE,delta=1
   150                           	psect	text124,global,reloc=2,class=CODE,delta=1
   151                           	psect	text125,global,reloc=2,class=CODE,delta=1
   152                           	psect	text126,global,reloc=2,class=CODE,delta=1
   153                           	psect	text127,global,reloc=2,class=CODE,delta=1
   154                           	psect	text128,global,reloc=2,class=CODE,delta=1
   155                           	psect	text129,global,reloc=2,class=CODE,delta=1
   156                           	psect	text130,global,reloc=2,class=CODE,delta=1
   157                           	psect	text131,global,reloc=2,class=CODE,delta=1
   158                           	psect	text132,global,reloc=2,class=CODE,delta=1
   159                           	psect	text133,global,reloc=2,class=CODE,delta=1
   160                           	psect	text134,global,reloc=2,class=CODE,delta=1
   161                           	psect	text135,global,reloc=2,class=CODE,delta=1
   162                           	psect	text136,global,reloc=2,class=CODE,delta=1
   163                           	psect	text137,global,reloc=2,class=CODE,delta=1
   164                           	psect	text138,global,reloc=2,class=CODE,delta=1
   165                           	psect	text139,global,reloc=2,class=CODE,delta=1
   166                           	psect	text140,global,reloc=2,class=CODE,delta=1
   167                           	psect	text141,global,reloc=2,class=CODE,delta=1
   168                           	psect	text142,global,reloc=2,class=CODE,delta=1
   169                           	psect	text143,global,reloc=2,class=CODE,delta=1
   170                           	psect	text144,global,reloc=2,class=CODE,delta=1
   171                           	psect	text145,global,reloc=2,class=CODE,delta=1
   172                           	psect	text146,global,reloc=2,class=CODE,delta=1
   173                           	psect	text147,global,reloc=2,class=CODE,delta=1
   174                           	psect	text148,global,reloc=2,class=CODE,delta=1
   175                           	psect	text149,global,reloc=2,class=CODE,delta=1
   176                           	psect	text150,global,reloc=2,class=CODE,delta=1
   177                           	psect	text151,global,reloc=2,class=CODE,delta=1
   178                           	psect	text152,global,reloc=2,class=CODE,delta=1
   179                           	psect	text153,global,reloc=2,class=CODE,delta=1
   180                           	psect	text154,global,reloc=2,class=CODE,delta=1
   181                           	psect	text155,global,reloc=2,class=CODE,delta=1
   182                           	psect	text156,global,reloc=2,class=CODE,delta=1
   183                           	psect	text157,global,reloc=2,class=CODE,delta=1
   184                           	psect	text158,global,reloc=2,class=CODE,delta=1
   185                           	psect	text159,global,reloc=2,class=CODE,delta=1
   186                           	psect	text160,global,reloc=2,class=CODE,delta=1
   187                           	psect	text161,global,reloc=2,class=CODE,delta=1
   188                           	psect	text162,global,reloc=2,class=CODE,delta=1
   189                           	psect	text163,global,reloc=2,class=CODE,delta=1
   190                           	psect	text164,global,reloc=2,class=CODE,delta=1
   191                           	psect	text165,global,reloc=2,class=CODE,delta=1
   192                           	psect	text166,global,reloc=2,class=CODE,delta=1
   193                           	psect	text167,global,reloc=2,class=CODE,delta=1
   194                           	psect	text168,global,reloc=2,class=CODE,delta=1
   195                           	psect	text169,global,reloc=2,class=CODE,delta=1
   196                           	psect	text170,global,reloc=2,class=CODE,delta=1
   197                           	psect	text171,global,reloc=2,class=CODE,delta=1
   198                           	psect	text172,global,reloc=2,class=CODE,delta=1
   199                           	psect	text173,global,reloc=2,class=CODE,delta=1
   200                           	psect	text174,global,reloc=2,class=CODE,delta=1
   201                           	psect	text175,global,reloc=2,class=CODE,delta=1
   202                           	psect	text176,global,reloc=2,class=CODE,delta=1
   203                           	psect	text177,global,reloc=2,class=CODE,delta=1
   204                           	psect	text178,global,reloc=2,class=CODE,delta=1
   205                           	psect	text179,global,reloc=2,class=CODE,delta=1
   206                           	psect	text180,global,reloc=2,class=CODE,delta=1
   207                           	psect	text181,global,reloc=2,class=CODE,delta=1
   208                           	psect	text182,global,reloc=2,class=CODE,delta=1
   209                           	psect	text183,global,reloc=2,class=CODE,delta=1
   210                           	psect	text184,global,reloc=2,class=CODE,delta=1
   211                           	psect	text185,global,reloc=2,class=CODE,delta=1
   212                           	psect	text186,global,reloc=2,class=CODE,delta=1
   213                           	psect	text187,global,reloc=2,class=CODE,delta=1
   214                           	psect	text188,global,reloc=2,class=CODE,delta=1
   215                           	psect	text189,global,reloc=2,class=CODE,delta=1
   216                           	psect	text190,global,reloc=2,class=CODE,delta=1
   217                           	psect	text191,global,reloc=2,class=CODE,delta=1
   218                           	psect	text192,global,reloc=2,class=CODE,delta=1
   219                           	psect	text193,global,reloc=2,class=CODE,delta=1
   220                           	psect	text194,global,reloc=2,class=CODE,delta=1
   221                           	psect	text195,global,reloc=2,class=CODE,delta=1
   222                           	psect	text196,global,reloc=2,class=CODE,delta=1
   223                           	psect	text197,global,reloc=2,class=CODE,delta=1
   224                           	psect	text198,global,reloc=2,class=CODE,delta=1
   225                           	psect	text199,global,reloc=2,class=CODE,delta=1
   226                           	psect	text200,global,reloc=2,class=CODE,delta=1
   227                           	psect	text201,global,reloc=2,class=CODE,delta=1
   228                           	psect	text202,global,reloc=2,class=CODE,delta=1
   229                           	psect	text203,global,reloc=2,class=CODE,delta=1
   230                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   231                           	psect	text205,global,reloc=2,class=CODE,delta=1
   232                           	psect	text206,global,reloc=2,class=CODE,delta=1
   233                           	psect	text207,global,reloc=2,class=CODE,delta=1
   234                           	psect	text208,global,reloc=2,class=CODE,delta=1
   235                           	psect	text209,global,reloc=2,class=CODE,delta=1
   236                           	psect	text210,global,reloc=2,class=CODE,delta=1
   237                           	psect	text211,global,reloc=2,class=CODE,delta=1
   238                           	psect	text212,global,reloc=2,class=CODE,delta=1
   239                           	psect	text213,global,reloc=2,class=CODE,delta=1
   240                           	psect	text214,global,reloc=2,class=CODE,delta=1
   241                           	psect	text215,global,reloc=2,class=CODE,delta=1
   242                           	psect	text216,global,reloc=2,class=CODE,delta=1
   243                           	psect	text217,global,reloc=2,class=CODE,delta=1
   244                           	psect	text218,global,reloc=2,class=CODE,delta=1
   245                           	psect	text219,global,reloc=2,class=CODE,delta=1
   246                           	psect	text220,global,reloc=2,class=CODE,delta=1
   247                           	psect	text221,global,reloc=2,class=CODE,delta=1
   248                           	psect	text222,global,reloc=2,class=CODE,delta=1
   249                           	psect	text223,global,reloc=2,class=CODE,delta=1
   250                           	psect	text224,global,reloc=2,class=CODE,delta=1
   251                           	psect	text225,global,reloc=2,class=CODE,delta=1
   252                           	psect	text226,global,reloc=2,class=CODE,delta=1
   253                           	psect	text227,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   255                           	psect	text228,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258  0000                     
   259 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   260  0000                     
   261 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   262  0000                     
   263 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   264 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   265 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   266 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   267 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   268 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   269 ;;_LORAWAN_LinkCheckCallback$3287	offset	0
   270 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   271 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   272 ;;_DutyCycleCallback$2264	offset	0
   273 ;;DutyCycleCallback@minim	offset	4
   274 ;;DutyCycleCallback@i	offset	8
   275 ;;DutyCycleCallback@found	offset	9
   276 ;;DutyCycleCallback@param	offset=-1 (param)
   277 ;;AutomaticReplyCallback@param	offset=-1 (param)
   278 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   279 ;;AckRetransmissionCallback@param	offset=-1 (param)
   280 ;;_param	offset=-1 (param)
   281 ;;_UpdateJoinSuccessState$3304	offset	0
   282 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   283                           
   284                           	psect	idataCOMRAM
   285  00A3CE                     __pidataCOMRAM:
   286                           	opt stack 0
   287                           
   288                           ;initializer for _ticksToScheduledInterrupt
   289  00A3CE  FFFF               	dw	65535
   290  00A3D0  FFFF               	dw	65535
   291                           
   292                           	psect	idataBANK1
   293  009E20                     __pidataBANK1:
   294                           	opt stack 0
   295                           
   296                           ;initializer for GenerateSubkey@F7870
   297  009E20  00                 	db	0
   298  009E21  00                 	db	0
   299  009E22  00                 	db	0
   300  009E23  00                 	db	0
   301  009E24  00                 	db	0
   302  009E25  00                 	db	0
   303  009E26  00                 	db	0
   304  009E27  00                 	db	0
   305  009E28  00                 	db	0
   306  009E29  00                 	db	0
   307  009E2A  00                 	db	0
   308  009E2B  00                 	db	0
   309  009E2C  00                 	db	0
   310  009E2D  00                 	db	0
   311  009E2E  00                 	db	0
   312  009E2F  87                 	db	135
   313                           
   314                           ;initializer for _devAddr
   315  009E30  5678               	dw	22136
   316  009E32  1234               	dw	4660
   317                           
   318                           ;initializer for _randx
   319  009E34  0001               	dw	1
   320  009E36  0000               	dw	0
   321                           
   322                           ;initializer for _portNumber
   323  009E38  02                 	db	2
   324                           
   325                           ;initializer for _nwkSKey
   326  009E39  75                 	db	117
   327  009E3A  E0                 	db	224
   328  009E3B  66                 	db	102
   329  009E3C  1A                 	db	26
   330  009E3D  A0                 	db	160
   331  009E3E  BC                 	db	188
   332  009E3F  21                 	db	33
   333  009E40  E4                 	db	228
   334  009E41  4B                 	db	75
   335  009E42  57                 	db	87
   336  009E43  21                 	db	33
   337  009E44  B0                 	db	176
   338  009E45  D6                 	db	214
   339  009E46  30                 	db	48
   340  009E47  F7                 	db	247
   341  009E48  B2                 	db	178
   342                           
   343                           	psect	idataBANK3
   344  00A264                     __pidataBANK3:
   345                           	opt stack 0
   346                           
   347                           ;initializer for _appSKey
   348  00A264  DD                 	db	221
   349  00A265  32                 	db	50
   350  00A266  54                 	db	84
   351  00A267  F0                 	db	240
   352  00A268  8D                 	db	141
   353  00A269  55                 	db	85
   354  00A26A  D6                 	db	214
   355  00A26B  52                 	db	82
   356  00A26C  E7                 	db	231
   357  00A26D  73                 	db	115
   358  00A26E  0B                 	db	11
   359  00A26F  BC                 	db	188
   360  00A270  26                 	db	38
   361  00A271  3E                 	db	62
   362  00A272  0A                 	db	10
   363  00A273  DA                 	db	218
   364                           
   365                           	psect	mediumconst
   366  00FE66                     __pmediumconst:
   367                           	opt stack 0
   368  00FE66  00                 	db	0
   369  00FE67                     _STable:
   370                           	opt stack 0
   371  00FE67  63                 	db	99
   372  00FE68  7C                 	db	124
   373  00FE69  77                 	db	119
   374  00FE6A  7B                 	db	123
   375  00FE6B  F2                 	db	242
   376  00FE6C  6B                 	db	107
   377  00FE6D  6F                 	db	111
   378  00FE6E  C5                 	db	197
   379  00FE6F  30                 	db	48
   380  00FE70  01                 	db	1
   381  00FE71  67                 	db	103
   382  00FE72  2B                 	db	43
   383  00FE73  FE                 	db	254
   384  00FE74  D7                 	db	215
   385  00FE75  AB                 	db	171
   386  00FE76  76                 	db	118
   387  00FE77  CA                 	db	202
   388  00FE78  82                 	db	130
   389  00FE79  C9                 	db	201
   390  00FE7A  7D                 	db	125
   391  00FE7B  FA                 	db	250
   392  00FE7C  59                 	db	89
   393  00FE7D  47                 	db	71
   394  00FE7E  F0                 	db	240
   395  00FE7F  AD                 	db	173
   396  00FE80  D4                 	db	212
   397  00FE81  A2                 	db	162
   398  00FE82  AF                 	db	175
   399  00FE83  9C                 	db	156
   400  00FE84  A4                 	db	164
   401  00FE85  72                 	db	114
   402  00FE86  C0                 	db	192
   403  00FE87  B7                 	db	183
   404  00FE88  FD                 	db	253
   405  00FE89  93                 	db	147
   406  00FE8A  26                 	db	38
   407  00FE8B  36                 	db	54
   408  00FE8C  3F                 	db	63
   409  00FE8D  F7                 	db	247
   410  00FE8E  CC                 	db	204
   411  00FE8F  34                 	db	52
   412  00FE90  A5                 	db	165
   413  00FE91  E5                 	db	229
   414  00FE92  F1                 	db	241
   415  00FE93  71                 	db	113
   416  00FE94  D8                 	db	216
   417  00FE95  31                 	db	49
   418  00FE96  15                 	db	21
   419  00FE97  04                 	db	4
   420  00FE98  C7                 	db	199
   421  00FE99  23                 	db	35
   422  00FE9A  C3                 	db	195
   423  00FE9B  18                 	db	24
   424  00FE9C  96                 	db	150
   425  00FE9D  05                 	db	5
   426  00FE9E  9A                 	db	154
   427  00FE9F  07                 	db	7
   428  00FEA0  12                 	db	18
   429  00FEA1  80                 	db	128
   430  00FEA2  E2                 	db	226
   431  00FEA3  EB                 	db	235
   432  00FEA4  27                 	db	39
   433  00FEA5  B2                 	db	178
   434  00FEA6  75                 	db	117
   435  00FEA7  09                 	db	9
   436  00FEA8  83                 	db	131
   437  00FEA9  2C                 	db	44
   438  00FEAA  1A                 	db	26
   439  00FEAB  1B                 	db	27
   440  00FEAC  6E                 	db	110
   441  00FEAD  5A                 	db	90
   442  00FEAE  A0                 	db	160
   443  00FEAF  52                 	db	82
   444  00FEB0  3B                 	db	59
   445  00FEB1  D6                 	db	214
   446  00FEB2  B3                 	db	179
   447  00FEB3  29                 	db	41
   448  00FEB4  E3                 	db	227
   449  00FEB5  2F                 	db	47
   450  00FEB6  84                 	db	132
   451  00FEB7  53                 	db	83
   452  00FEB8  D1                 	db	209
   453  00FEB9  00                 	db	0
   454  00FEBA  ED                 	db	237
   455  00FEBB  20                 	db	32
   456  00FEBC  FC                 	db	252
   457  00FEBD  B1                 	db	177
   458  00FEBE  5B                 	db	91
   459  00FEBF  6A                 	db	106
   460  00FEC0  CB                 	db	203
   461  00FEC1  BE                 	db	190
   462  00FEC2  39                 	db	57
   463  00FEC3  4A                 	db	74
   464  00FEC4  4C                 	db	76
   465  00FEC5  58                 	db	88
   466  00FEC6  CF                 	db	207
   467  00FEC7  D0                 	db	208
   468  00FEC8  EF                 	db	239
   469  00FEC9  AA                 	db	170
   470  00FECA  FB                 	db	251
   471  00FECB  43                 	db	67
   472  00FECC  4D                 	db	77
   473  00FECD  33                 	db	51
   474  00FECE  85                 	db	133
   475  00FECF  45                 	db	69
   476  00FED0  F9                 	db	249
   477  00FED1  02                 	db	2
   478  00FED2  7F                 	db	127
   479  00FED3  50                 	db	80
   480  00FED4  3C                 	db	60
   481  00FED5  9F                 	db	159
   482  00FED6  A8                 	db	168
   483  00FED7  51                 	db	81
   484  00FED8  A3                 	db	163
   485  00FED9  40                 	db	64
   486  00FEDA  8F                 	db	143
   487  00FEDB  92                 	db	146
   488  00FEDC  9D                 	db	157
   489  00FEDD  38                 	db	56
   490  00FEDE  F5                 	db	245
   491  00FEDF  BC                 	db	188
   492  00FEE0  B6                 	db	182
   493  00FEE1  DA                 	db	218
   494  00FEE2  21                 	db	33
   495  00FEE3  10                 	db	16
   496  00FEE4  FF                 	db	255
   497  00FEE5  F3                 	db	243
   498  00FEE6  D2                 	db	210
   499  00FEE7  CD                 	db	205
   500  00FEE8  0C                 	db	12
   501  00FEE9  13                 	db	19
   502  00FEEA  EC                 	db	236
   503  00FEEB  5F                 	db	95
   504  00FEEC  97                 	db	151
   505  00FEED  44                 	db	68
   506  00FEEE  17                 	db	23
   507  00FEEF  C4                 	db	196
   508  00FEF0  A7                 	db	167
   509  00FEF1  7E                 	db	126
   510  00FEF2  3D                 	db	61
   511  00FEF3  64                 	db	100
   512  00FEF4  5D                 	db	93
   513  00FEF5  19                 	db	25
   514  00FEF6  73                 	db	115
   515  00FEF7  60                 	db	96
   516  00FEF8  81                 	db	129
   517  00FEF9  4F                 	db	79
   518  00FEFA  DC                 	db	220
   519  00FEFB  22                 	db	34
   520  00FEFC  2A                 	db	42
   521  00FEFD  90                 	db	144
   522  00FEFE  88                 	db	136
   523  00FEFF  46                 	db	70
   524  00FF00  EE                 	db	238
   525  00FF01  B8                 	db	184
   526  00FF02  14                 	db	20
   527  00FF03  DE                 	db	222
   528  00FF04  5E                 	db	94
   529  00FF05  0B                 	db	11
   530  00FF06  DB                 	db	219
   531  00FF07  E0                 	db	224
   532  00FF08  32                 	db	50
   533  00FF09  3A                 	db	58
   534  00FF0A  0A                 	db	10
   535  00FF0B  49                 	db	73
   536  00FF0C  06                 	db	6
   537  00FF0D  24                 	db	36
   538  00FF0E  5C                 	db	92
   539  00FF0F  C2                 	db	194
   540  00FF10  D3                 	db	211
   541  00FF11  AC                 	db	172
   542  00FF12  62                 	db	98
   543  00FF13  91                 	db	145
   544  00FF14  95                 	db	149
   545  00FF15  E4                 	db	228
   546  00FF16  79                 	db	121
   547  00FF17  E7                 	db	231
   548  00FF18  C8                 	db	200
   549  00FF19  37                 	db	55
   550  00FF1A  6D                 	db	109
   551  00FF1B  8D                 	db	141
   552  00FF1C  D5                 	db	213
   553  00FF1D  4E                 	db	78
   554  00FF1E  A9                 	db	169
   555  00FF1F  6C                 	db	108
   556  00FF20  56                 	db	86
   557  00FF21  F4                 	db	244
   558  00FF22  EA                 	db	234
   559  00FF23  65                 	db	101
   560  00FF24  7A                 	db	122
   561  00FF25  AE                 	db	174
   562  00FF26  08                 	db	8
   563  00FF27  BA                 	db	186
   564  00FF28  78                 	db	120
   565  00FF29  25                 	db	37
   566  00FF2A  2E                 	db	46
   567  00FF2B  1C                 	db	28
   568  00FF2C  A6                 	db	166
   569  00FF2D  B4                 	db	180
   570  00FF2E  C6                 	db	198
   571  00FF2F  E8                 	db	232
   572  00FF30  DD                 	db	221
   573  00FF31  74                 	db	116
   574  00FF32  1F                 	db	31
   575  00FF33  4B                 	db	75
   576  00FF34  BD                 	db	189
   577  00FF35  8B                 	db	139
   578  00FF36  8A                 	db	138
   579  00FF37  70                 	db	112
   580  00FF38  3E                 	db	62
   581  00FF39  B5                 	db	181
   582  00FF3A  66                 	db	102
   583  00FF3B  48                 	db	72
   584  00FF3C  03                 	db	3
   585  00FF3D  F6                 	db	246
   586  00FF3E  0E                 	db	14
   587  00FF3F  61                 	db	97
   588  00FF40  35                 	db	53
   589  00FF41  57                 	db	87
   590  00FF42  B9                 	db	185
   591  00FF43  86                 	db	134
   592  00FF44  C1                 	db	193
   593  00FF45  1D                 	db	29
   594  00FF46  9E                 	db	158
   595  00FF47  E1                 	db	225
   596  00FF48  F8                 	db	248
   597  00FF49  98                 	db	152
   598  00FF4A  11                 	db	17
   599  00FF4B  69                 	db	105
   600  00FF4C  D9                 	db	217
   601  00FF4D  8E                 	db	142
   602  00FF4E  94                 	db	148
   603  00FF4F  9B                 	db	155
   604  00FF50  1E                 	db	30
   605  00FF51  87                 	db	135
   606  00FF52  E9                 	db	233
   607  00FF53  CE                 	db	206
   608  00FF54  55                 	db	85
   609  00FF55  28                 	db	40
   610  00FF56  DF                 	db	223
   611  00FF57  8C                 	db	140
   612  00FF58  A1                 	db	161
   613  00FF59  89                 	db	137
   614  00FF5A  0D                 	db	13
   615  00FF5B  BF                 	db	191
   616  00FF5C  E6                 	db	230
   617  00FF5D  42                 	db	66
   618  00FF5E  68                 	db	104
   619  00FF5F  41                 	db	65
   620  00FF60  99                 	db	153
   621  00FF61  2D                 	db	45
   622  00FF62  0F                 	db	15
   623  00FF63  B0                 	db	176
   624  00FF64  54                 	db	84
   625  00FF65  BB                 	db	187
   626  00FF66  16                 	db	22
   627  00FF67                     __end_of_STable:
   628                           	opt stack 0
   629  00FF67                     _maxPayloadSize:
   630                           	opt stack 0
   631  00FF67  33                 	db	51
   632  00FF68  33                 	db	51
   633  00FF69  33                 	db	51
   634  00FF6A  73                 	db	115
   635  00FF6B  F2                 	db	242
   636  00FF6C  F2                 	db	242
   637  00FF6D  F2                 	db	242
   638  00FF6E  38                 	db	56
   639  00FF6F                     __end_of_maxPayloadSize:
   640                           	opt stack 0
   641  00FF6F                     _modulation:
   642                           	opt stack 0
   643  00FF6F  01                 	db	1
   644  00FF70  01                 	db	1
   645  00FF71  01                 	db	1
   646  00FF72  01                 	db	1
   647  00FF73  01                 	db	1
   648  00FF74  01                 	db	1
   649  00FF75  01                 	db	1
   650  00FF76  00                 	db	0
   651  00FF77                     __end_of_modulation:
   652                           	opt stack 0
   653  00FF77                     _rxWindowOffset:
   654                           	opt stack 0
   655  00FF77  DF                 	db	223
   656  00FF78  CE                 	db	206
   657  00FF79  C6                 	db	198
   658  00FF7A  C2                 	db	194
   659  00FF7B  BE                 	db	190
   660  00FF7C  BC                 	db	188
   661  00FF7D  F1                 	db	241
   662  00FF7E  FE                 	db	254
   663  00FF7F                     __end_of_rxWindowOffset:
   664                           	opt stack 0
   665  00FF7F                     _rxWindowSize:
   666                           	opt stack 0
   667  00FF7F  08                 	db	8
   668  00FF80  0A                 	db	10
   669  00FF81  0E                 	db	14
   670  00FF82  1A                 	db	26
   671  00FF83  31                 	db	49
   672  00FF84  58                 	db	88
   673  00FF85  3C                 	db	60
   674  00FF86  08                 	db	8
   675  00FF87                     __end_of_rxWindowSize:
   676                           	opt stack 0
   677  00FF87                     _bandwidth:
   678                           	opt stack 0
   679  00FF87  07                 	db	7
   680  00FF88  07                 	db	7
   681  00FF89  07                 	db	7
   682  00FF8A  07                 	db	7
   683  00FF8B  07                 	db	7
   684  00FF8C  07                 	db	7
   685  00FF8D  08                 	db	8
   686  00FF8E                     __end_of_bandwidth:
   687                           	opt stack 0
   688  00FF8E                     _macEndDevCmdReplyLen:
   689                           	opt stack 0
   690  00FF8E  01                 	db	1
   691  00FF8F  02                 	db	2
   692  00FF90  01                 	db	1
   693  00FF91  02                 	db	2
   694  00FF92  03                 	db	3
   695  00FF93  02                 	db	2
   696  00FF94  01                 	db	1
   697  00FF95                     __end_of_macEndDevCmdReplyLen:
   698                           	opt stack 0
   699  00FF95                     _spreadingFactor:
   700                           	opt stack 0
   701  00FF95  0C                 	db	12
   702  00FF96  0B                 	db	11
   703  00FF97  0A                 	db	10
   704  00FF98  09                 	db	9
   705  00FF99  08                 	db	8
   706  00FF9A  07                 	db	7
   707  00FF9B  07                 	db	7
   708  00FF9C                     __end_of_spreadingFactor:
   709                           	opt stack 0
   710  00FF9C  0A                 	db	10
   711  00FF9D  07                 	db	7
   712  00FF9E  04                 	db	4
   713  00FF9F  01                 	db	1
   714  00FFA0  FE                 	db	254
   715  00FFA1  FB                 	db	251
   716  00FFA2                     __end_of_txPower433:
   717                           	opt stack 0
   718  00FFA2                     _txPower868:
   719                           	opt stack 0
   720  00FFA2  14                 	db	20
   721  00FFA3  0E                 	db	14
   722  00FFA4  0B                 	db	11
   723  00FFA5  08                 	db	8
   724  00FFA6  05                 	db	5
   725  00FFA7  02                 	db	2
   726  00FFA8                     __end_of_txPower868:
   727                           	opt stack 0
   728  00FFA8                     _DefaultChannels433:
   729                           	opt stack 0
   730  00FFA8  B9D8               	dw	47576
   731  00FFAA  19D1               	dw	6609
   732  00FFAC  01                 	db	1
   733  00FFAD  50                 	db	80
   734  00FFAE  012E               	dw	302
   735  00FFB0  0000               	dw	0
   736  00FFB2  0000               	dw	0
   737  00FFB4  01                 	db	1
   738  00FFB5  FF                 	db	255
   739  00FFB6  C718               	dw	50968
   740  00FFB8  19D4               	dw	6612
   741  00FFBA  01                 	db	1
   742  00FFBB  50                 	db	80
   743  00FFBC  012E               	dw	302
   744  00FFBE  0000               	dw	0
   745  00FFC0  0000               	dw	0
   746  00FFC2  01                 	db	1
   747  00FFC3  FF                 	db	255
   748  00FFC4  D458               	dw	54360
   749  00FFC6  19D7               	dw	6615
   750  00FFC8  01                 	db	1
   751  00FFC9  50                 	db	80
   752  00FFCA  012E               	dw	302
   753  00FFCC  0000               	dw	0
   754  00FFCE  0000               	dw	0
   755  00FFD0  01                 	db	1
   756  00FFD1  FF                 	db	255
   757  00FFD2                     __end_of_DefaultChannels433:
   758                           	opt stack 0
   759  00FFD2                     _DefaultChannels868:
   760                           	opt stack 0
   761  00FFD2  27A0               	dw	10144
   762  00FFD4  33BE               	dw	13246
   763  00FFD6  01                 	db	1
   764  00FFD7  50                 	db	80
   765  00FFD8  012E               	dw	302
   766  00FFDA  0000               	dw	0
   767  00FFDC  0000               	dw	0
   768  00FFDE  01                 	db	1
   769  00FFDF  FF                 	db	255
   770  00FFE0  34E0               	dw	13536
   771  00FFE2  33C1               	dw	13249
   772  00FFE4  01                 	db	1
   773  00FFE5  50                 	db	80
   774  00FFE6  012E               	dw	302
   775  00FFE8  0000               	dw	0
   776  00FFEA  0000               	dw	0
   777  00FFEC  01                 	db	1
   778  00FFED  FF                 	db	255
   779  00FFEE  4220               	dw	16928
   780  00FFF0  33C4               	dw	13252
   781  00FFF2  01                 	db	1
   782  00FFF3  50                 	db	80
   783  00FFF4  012E               	dw	302
   784  00FFF6  0000               	dw	0
   785  00FFF8  0000               	dw	0
   786  00FFFA  01                 	db	1
   787  00FFFB  FF                 	db	255
   788  00FFFC                     __end_of_DefaultChannels868:
   789                           	opt stack 0
   790  00FFFC                     _FskSyncWordBuff:
   791                           	opt stack 0
   792  00FFFC  C1                 	db	193
   793  00FFFD  94                 	db	148
   794  00FFFE  C1                 	db	193
   795  00FFFF                     __end_of_FskSyncWordBuff:
   796                           	opt stack 0
   797  00FFFF  00                 	db	0	; dummy byte at the end
   798  0000                     
   799                           	psect	nvCOMRAM
   800  00005E                     __pnvCOMRAM:
   801                           	opt stack 0
   802  00005E                     _timer1ReloadVal:
   803                           	opt stack 0
   804  00005E                     	ds	2
   805                           
   806                           	psect	nvBANK1
   807  0001E5                     __pnvBANK1:
   808                           	opt stack 0
   809  0001E5                     _INT0_InterruptHandler:
   810                           	opt stack 0
   811  0001E5                     	ds	2
   812  0001E7                     _INT1_InterruptHandler:
   813                           	opt stack 0
   814  0001E7                     	ds	2
   815  0001E9                     _INT2_InterruptHandler:
   816                           	opt stack 0
   817  0001E9                     	ds	2
   818  0001EB                     _IOCB4_InterruptHandler:
   819                           	opt stack 0
   820  0001EB                     	ds	2
   821  0001ED                     _IOCB5_InterruptHandler:
   822                           	opt stack 0
   823  0001ED                     	ds	2
   824  0001EF                     _TMR1_InterruptHandler:
   825                           	opt stack 0
   826  0001EF                     	ds	2
   827  0000                     _ANSELA	set	3896
   828  0000                     _ANSELB	set	3897
   829  0000                     _ANSELC	set	3898
   830  0000                     _ANSELCbits	set	3898
   831  0000                     _ANSELD	set	3899
   832  0000                     _ANSELDbits	set	3899
   833  0000                     _ANSELE	set	3900
   834  0000                     _ANSD0	set	31192
   835  0000                     _ANSD1	set	31193
   836  0000                     _ANSD3	set	31195
   837  0000                     _ANSD4	set	31196
   838  0000                     _CCP1MD	set	31216
   839  0000                     _CCP2MD	set	31217
   840  0000                     _CCP3MD	set	31218
   841  0000                     _CCP4MD	set	31219
   842  0000                     _CCP5MD	set	31220
   843  0000                     _CMP1MD	set	31209
   844  0000                     _CMP2MD	set	31210
   845  0000                     _CTMUMD	set	31211
   846  0000                     _MSSP1MD	set	31222
   847  0000                     _MSSP2MD	set	31223
   848  0000                     _TMR2MD	set	31225
   849  0000                     _TMR4MD	set	31227
   850  0000                     _TMR5MD	set	31228
   851  0000                     _TMR6MD	set	31229
   852  0000                     _UART1MD	set	31230
   853  0000                     _UART2MD	set	31231
   854  0000                     _TMR1	set	4046
   855  0000                     _ADCON0bits	set	4034
   856  0000                     _ADCON2bits	set	4032
   857  0000                     _ADRESH	set	4036
   858  0000                     _ADRESL	set	4035
   859  0000                     _INTCON2bits	set	4081
   860  0000                     _INTCON3bits	set	4080
   861  0000                     _INTCONbits	set	4082
   862  0000                     _IOCBbits	set	3938
   863  0000                     _LATA	set	3977
   864  0000                     _LATB	set	3978
   865  0000                     _LATBbits	set	3978
   866  0000                     _LATC	set	3979
   867  0000                     _LATCbits	set	3979
   868  0000                     _LATD	set	3980
   869  0000                     _LATDbits	set	3980
   870  0000                     _LATE	set	3981
   871  0000                     _LATEbits	set	3981
   872  0000                     _OSCCON	set	4051
   873  0000                     _OSCCON2	set	4050
   874  0000                     _OSCTUNE	set	3995
   875  0000                     _PIE1bits	set	3997
   876  0000                     _PIR1bits	set	3998
   877  0000                     _PORTAbits	set	3968
   878  0000                     _PORTBbits	set	3969
   879  0000                     _PORTCbits	set	3970
   880  0000                     _PORTDbits	set	3971
   881  0000                     _RCONbits	set	4048
   882  0000                     _SSP2ADD	set	3950
   883  0000                     _SSP2BUF	set	3951
   884  0000                     _SSP2CON1	set	3948
   885  0000                     _SSP2CON1bits	set	3948
   886  0000                     _SSP2STAT	set	3949
   887  0000                     _SSP2STATbits	set	3949
   888  0000                     _T1CON	set	4045
   889  0000                     _T1CONbits	set	4045
   890  0000                     _T1GCON	set	4044
   891  0000                     _T1GCONbits	set	4044
   892  0000                     _TMR1H	set	4047
   893  0000                     _TMR1L	set	4046
   894  0000                     _TRISA	set	3986
   895  0000                     _TRISAbits	set	3986
   896  0000                     _TRISB	set	3987
   897  0000                     _TRISBbits	set	3987
   898  0000                     _TRISC	set	3988
   899  0000                     _TRISCbits	set	3988
   900  0000                     _TRISD	set	3989
   901  0000                     _TRISDbits	set	3989
   902  0000                     _TRISE	set	3990
   903  0000                     _TRISEbits	set	3990
   904  0000                     _WPUB	set	3937
   905  0000                     _IDLEN	set	32415
   906  0000                     _LATC2	set	31834
   907  0000                     _LATD0	set	31840
   908  0000                     _LATD1	set	31841
   909  0000                     _LATD3	set	31843
   910  0000                     _LATD4	set	31844
   911  0000                     _TRISC2	set	31906
   912  0000                     _TRISD0	set	31912
   913  0000                     _TRISD1	set	31913
   914  0000                     _TRISD3	set	31915
   915  0000                     _TRISD4	set	31916
   916                           
   917                           ; #config settings
   918  0000                     
   919                           	psect	cinit
   920  007B16                     __pcinit:
   921                           	opt stack 0
   922  007B16                     start_initialization:
   923                           	opt stack 0
   924  007B16                     __initialization:
   925                           	opt stack 0
   926                           
   927                           ; Initialize objects allocated to BANK3 (16 bytes)
   928                           ; load TBLPTR registers with __pidataBANK3
   929  007B16  0E64               	movlw	low __pidataBANK3
   930  007B18  6EF6               	movwf	tblptrl,c
   931  007B1A  0EA2               	movlw	high __pidataBANK3
   932  007B1C  6EF7               	movwf	tblptrh,c
   933  007B1E  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   934  007B20  6EF8               	movwf	tblptru,c
   935  007B22  EE03  F0B4         	lfsr	0,__pdataBANK3
   936  007B26  EE20 F010          	lfsr	2,16
   937  007B2A                     copy_data0:
   938  007B2A  0009               	tblrd		*+
   939  007B2C  CFF5 FFEE          	movff	tablat,postinc0
   940  007B30  50DD               	movf	postdec2,w,c
   941  007B32  50D9               	movf	fsr2l,w,c
   942  007B34  E1FA               	bnz	copy_data0
   943                           
   944                           ; Initialize objects allocated to BANK1 (41 bytes)
   945                           ; load TBLPTR registers with __pidataBANK1
   946  007B36  0E20               	movlw	low __pidataBANK1
   947  007B38  6EF6               	movwf	tblptrl,c
   948  007B3A  0E9E               	movlw	high __pidataBANK1
   949  007B3C  6EF7               	movwf	tblptrh,c
   950  007B3E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   951  007B40  6EF8               	movwf	tblptru,c
   952  007B42  EE01  F0BC         	lfsr	0,__pdataBANK1
   953  007B46  EE20 F029          	lfsr	2,41
   954  007B4A                     copy_data1:
   955  007B4A  0009               	tblrd		*+
   956  007B4C  CFF5 FFEE          	movff	tablat,postinc0
   957  007B50  50DD               	movf	postdec2,w,c
   958  007B52  50D9               	movf	fsr2l,w,c
   959  007B54  E1FA               	bnz	copy_data1
   960                           
   961                           ; Initialize objects allocated to COMRAM (4 bytes)
   962                           ; load TBLPTR registers with __pidataCOMRAM
   963  007B56  0ECE               	movlw	low __pidataCOMRAM
   964  007B58  6EF6               	movwf	tblptrl,c
   965  007B5A  0EA3               	movlw	high __pidataCOMRAM
   966  007B5C  6EF7               	movwf	tblptrh,c
   967  007B5E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   968  007B60  6EF8               	movwf	tblptru,c
   969  007B62  EE00  F05A         	lfsr	0,__pdataCOMRAM
   970  007B66  EE20 F004          	lfsr	2,4
   971  007B6A                     copy_data2:
   972  007B6A  0009               	tblrd		*+
   973  007B6C  CFF5 FFEE          	movff	tablat,postinc0
   974  007B70  50DD               	movf	postdec2,w,c
   975  007B72  50D9               	movf	fsr2l,w,c
   976  007B74  E1FA               	bnz	copy_data2
   977                           
   978                           ; Clear objects allocated to BIGRAM (542 bytes)
   979  007B76  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   980  007B7A  EE22 F01E          	lfsr	2,542
   981  007B7E                     clear_0:
   982  007B7E  6AEE               	clrf	postinc0,c
   983  007B80  50DD               	movf	postdec2,w,c
   984  007B82  50D9               	movf	fsr2l,w,c
   985  007B84  E1FC               	bnz	clear_0
   986  007B86  50DA               	movf	fsr2h,w,c
   987  007B88  E1FA               	bnz	clear_0
   988                           
   989                           ; Clear objects allocated to BANK4 (224 bytes)
   990  007B8A  EE04  F000         	lfsr	0,__pbssBANK4
   991  007B8E  0EE0               	movlw	224
   992  007B90                     clear_1:
   993  007B90  6AEE               	clrf	postinc0,c
   994  007B92  06E8               	decf	wreg,f,c
   995  007B94  E1FD               	bnz	clear_1
   996                           
   997                           ; Clear objects allocated to BANK3 (160 bytes)
   998  007B96  EE03  F000         	lfsr	0,__pbssBANK3
   999  007B9A  0EA0               	movlw	160
  1000  007B9C                     clear_2:
  1001  007B9C  6AEE               	clrf	postinc0,c
  1002  007B9E  06E8               	decf	wreg,f,c
  1003  007BA0  E1FD               	bnz	clear_2
  1004                           
  1005                           ; Clear objects allocated to BANK2 (245 bytes)
  1006  007BA2  EE02  F000         	lfsr	0,__pbssBANK2
  1007  007BA6  0EF5               	movlw	245
  1008  007BA8                     clear_3:
  1009  007BA8  6AEE               	clrf	postinc0,c
  1010  007BAA  06E8               	decf	wreg,f,c
  1011  007BAC  E1FD               	bnz	clear_3
  1012                           
  1013                           ; Clear objects allocated to BANK1 (77 bytes)
  1014  007BAE  EE01  F06F         	lfsr	0,__pbssBANK1
  1015  007BB2  0E4D               	movlw	77
  1016  007BB4                     clear_4:
  1017  007BB4  6AEE               	clrf	postinc0,c
  1018  007BB6  06E8               	decf	wreg,f,c
  1019  007BB8  E1FD               	bnz	clear_4
  1020                           
  1021                           ; Clear objects allocated to BANK0 (8 bytes)
  1022  007BBA  EE00  F0F4         	lfsr	0,__pbssBANK0
  1023  007BBE  0E08               	movlw	8
  1024  007BC0                     clear_5:
  1025  007BC0  6AEE               	clrf	postinc0,c
  1026  007BC2  06E8               	decf	wreg,f,c
  1027  007BC4  E1FD               	bnz	clear_5
  1028                           
  1029                           ; Clear objects allocated to COMRAM (18 bytes)
  1030  007BC6  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1031  007BCA  0E12               	movlw	18
  1032  007BCC                     clear_6:
  1033  007BCC  6AEE               	clrf	postinc0,c
  1034  007BCE  06E8               	decf	wreg,f,c
  1035  007BD0  E1FD               	bnz	clear_6
  1036  007BD2                     end_of_initialization:
  1037                           	opt stack 0
  1038  007BD2                     __end_of__initialization:
  1039                           	opt stack 0
  1040  007BD2  0100               	movlb	0
  1041  007BD4  EF7A  F040         	goto	_main	;jump to C main() function
  1042                           tblptru	equ	0xFF8
  1043                           tblptrh	equ	0xFF7
  1044                           tblptrl	equ	0xFF6
  1045                           tablat	equ	0xFF5
  1046                           postinc0	equ	0xFEE
  1047                           wreg	equ	0xFE8
  1048                           postdec2	equ	0xFDD
  1049                           fsr2h	equ	0xFDA
  1050                           fsr2l	equ	0xFD9
  1051                           
  1052                           	psect	bssCOMRAM
  1053  00003C                     __pbssCOMRAM:
  1054                           	opt stack 0
  1055  00003C                     _ticksAccounted:
  1056                           	opt stack 0
  1057  00003C                     	ds	4
  1058  000040                     _ticksAdded:
  1059                           	opt stack 0
  1060  000040                     	ds	4
  1061  000044                     TMR_GetDeltaTime@tmrVal:
  1062                           	opt stack 0
  1063  000044                     	ds	2
  1064  000046                     TMR_SwapTimer@oldVal:
  1065                           	opt stack 0
  1066  000046                     	ds	2
  1067  000048                     TMR_SwapTimer@retVal:
  1068                           	opt stack 0
  1069  000048                     	ds	2
  1070  00004A                     __rcon:
  1071                           	opt stack 0
  1072  00004A                     	ds	1
  1073  00004B                     __roundCounter:
  1074                           	opt stack 0
  1075  00004B                     	ds	1
  1076  00004C                     _dioStatus:
  1077                           	opt stack 0
  1078  00004C                     	ds	1
  1079  00004D                     _timerOverflow:
  1080                           	opt stack 0
  1081  00004D                     	ds	1
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           postinc0	equ	0xFEE
  1087                           wreg	equ	0xFE8
  1088                           postdec2	equ	0xFDD
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           
  1092                           	psect	dataCOMRAM
  1093  00005A                     __pdataCOMRAM:
  1094                           	opt stack 0
  1095  00005A                     _ticksToScheduledInterrupt:
  1096                           	opt stack 0
  1097  00005A                     	ds	4
  1098                           tblptru	equ	0xFF8
  1099                           tblptrh	equ	0xFF7
  1100                           tblptrl	equ	0xFF6
  1101                           tablat	equ	0xFF5
  1102                           postinc0	equ	0xFEE
  1103                           wreg	equ	0xFE8
  1104                           postdec2	equ	0xFDD
  1105                           fsr2h	equ	0xFDA
  1106                           fsr2l	equ	0xFD9
  1107                           
  1108                           	psect	bssBANK0
  1109  0000F4                     __pbssBANK0:
  1110                           	opt stack 0
  1111  0000F4                     _rxPayload:
  1112                           	opt stack 0
  1113  0000F4                     	ds	4
  1114  0000F8                     _reloadVal:
  1115                           	opt stack 0
  1116  0000F8                     	ds	2
  1117  0000FA                     _allocatedTimers:
  1118                           	opt stack 0
  1119  0000FA                     	ds	1
  1120  0000FB                     _localDioStatus:
  1121                           	opt stack 0
  1122  0000FB                     	ds	1
  1123                           tblptru	equ	0xFF8
  1124                           tblptrh	equ	0xFF7
  1125                           tblptrl	equ	0xFF6
  1126                           tablat	equ	0xFF5
  1127                           postinc0	equ	0xFEE
  1128                           wreg	equ	0xFE8
  1129                           postdec2	equ	0xFDD
  1130                           fsr2h	equ	0xFDA
  1131                           fsr2l	equ	0xFD9
  1132                           
  1133                           	psect	bssBANK1
  1134  00016F                     __pbssBANK1:
  1135                           	opt stack 0
  1136  00016F                     TMR_GetDeltaTime@retVal:
  1137                           	opt stack 0
  1138  00016F                     	ds	4
  1139  000173                     _TimeToSend:
  1140                           	opt stack 0
  1141  000173                     	ds	1
  1142  000174                     _RadioConfiguration:
  1143                           	opt stack 0
  1144  000174                     	ds	54
  1145  0001AA                     _aesBuffer:
  1146                           	opt stack 0
  1147  0001AA                     	ds	16
  1148  0001BA                     _payload:
  1149                           	opt stack 0
  1150  0001BA                     	ds	2
  1151                           tblptru	equ	0xFF8
  1152                           tblptrh	equ	0xFF7
  1153                           tblptrl	equ	0xFF6
  1154                           tablat	equ	0xFF5
  1155                           postinc0	equ	0xFEE
  1156                           wreg	equ	0xFE8
  1157                           postdec2	equ	0xFDD
  1158                           fsr2h	equ	0xFDA
  1159                           fsr2l	equ	0xFD9
  1160                           
  1161                           	psect	dataBANK1
  1162  0001BC                     __pdataBANK1:
  1163                           	opt stack 0
  1164  0001BC                     GenerateSubkey@F7870:
  1165                           	opt stack 0
  1166  0001BC                     	ds	16
  1167  0001CC                     _devAddr:
  1168                           	opt stack 0
  1169  0001CC                     	ds	4
  1170  0001D0                     _randx:
  1171                           	opt stack 0
  1172  0001D0                     	ds	4
  1173  0001D4                     _portNumber:
  1174                           	opt stack 0
  1175  0001D4                     	ds	1
  1176  0001D5                     _nwkSKey:
  1177                           	opt stack 0
  1178  0001D5                     	ds	16
  1179                           tblptru	equ	0xFF8
  1180                           tblptrh	equ	0xFF7
  1181                           tblptrl	equ	0xFF6
  1182                           tablat	equ	0xFF5
  1183                           postinc0	equ	0xFEE
  1184                           wreg	equ	0xFE8
  1185                           postdec2	equ	0xFDD
  1186                           fsr2h	equ	0xFDA
  1187                           fsr2l	equ	0xFD9
  1188                           
  1189                           	psect	bssBANK2
  1190  000200                     __pbssBANK2:
  1191                           	opt stack 0
  1192  000200                     _loRa:
  1193                           	opt stack 0
  1194  000200                     	ds	245
  1195                           tblptru	equ	0xFF8
  1196                           tblptrh	equ	0xFF7
  1197                           tblptrl	equ	0xFF6
  1198                           tablat	equ	0xFF5
  1199                           postinc0	equ	0xFEE
  1200                           wreg	equ	0xFE8
  1201                           postdec2	equ	0xFDD
  1202                           fsr2h	equ	0xFDA
  1203                           fsr2l	equ	0xFD9
  1204                           
  1205                           	psect	bssBANK3
  1206  000300                     __pbssBANK3:
  1207                           	opt stack 0
  1208  000300                     _swTimers:
  1209                           	opt stack 0
  1210  000300                     	ds	160
  1211                           tblptru	equ	0xFF8
  1212                           tblptrh	equ	0xFF7
  1213                           tblptrl	equ	0xFF6
  1214                           tablat	equ	0xFF5
  1215                           postinc0	equ	0xFEE
  1216                           wreg	equ	0xFE8
  1217                           postdec2	equ	0xFDD
  1218                           fsr2h	equ	0xFDA
  1219                           fsr2l	equ	0xFD9
  1220                           
  1221                           	psect	dataBANK3
  1222  0003B4                     __pdataBANK3:
  1223                           	opt stack 0
  1224  0003B4                     _appSKey:
  1225                           	opt stack 0
  1226  0003B4                     	ds	16
  1227                           tblptru	equ	0xFF8
  1228                           tblptrh	equ	0xFF7
  1229                           tblptrl	equ	0xFF6
  1230                           tablat	equ	0xFF5
  1231                           postinc0	equ	0xFEE
  1232                           wreg	equ	0xFE8
  1233                           postdec2	equ	0xFDD
  1234                           fsr2h	equ	0xFDA
  1235                           fsr2l	equ	0xFD9
  1236                           
  1237                           	psect	bssBANK4
  1238  000400                     __pbssBANK4:
  1239                           	opt stack 0
  1240  000400                     _Channels:
  1241                           	opt stack 0
  1242  000400                     	ds	224
  1243                           tblptru	equ	0xFF8
  1244                           tblptrh	equ	0xFF7
  1245                           tblptrl	equ	0xFF6
  1246                           tablat	equ	0xFF5
  1247                           postinc0	equ	0xFEE
  1248                           wreg	equ	0xFE8
  1249                           postdec2	equ	0xFDD
  1250                           fsr2h	equ	0xFDA
  1251                           fsr2l	equ	0xFD9
  1252                           
  1253                           	psect	bssBIGRAM
  1254  0004E0                     __pbssBIGRAM:
  1255                           	opt stack 0
  1256  0004E0                     _macBuffer:
  1257                           	opt stack 0
  1258  0004E0                     	ds	271
  1259  0005EF                     _radioBuffer:
  1260                           	opt stack 0
  1261  0005EF                     	ds	271
  1262                           tblptru	equ	0xFF8
  1263                           tblptrh	equ	0xFF7
  1264                           tblptrl	equ	0xFF6
  1265                           tablat	equ	0xFF5
  1266                           postinc0	equ	0xFEE
  1267                           wreg	equ	0xFE8
  1268                           postdec2	equ	0xFDD
  1269                           fsr2h	equ	0xFDA
  1270                           fsr2l	equ	0xFD9
  1271                           
  1272                           	psect	cstackBANK3
  1273  0003A0                     __pcstackBANK3:
  1274                           	opt stack 0
  1275  0003A0                     LORAWAN_RxDone@fPort:
  1276                           	opt stack 0
  1277                           
  1278                           ; 1 bytes @ 0x0
  1279  0003A0                     	ds	1
  1280  0003A1                     LORAWAN_RxDone@channelIndex:
  1281                           	opt stack 0
  1282                           
  1283                           ; 1 bytes @ 0x1
  1284  0003A1                     	ds	1
  1285  0003A2                     LORAWAN_RxDone@mhdr:
  1286                           	opt stack 0
  1287                           
  1288                           ; 1 bytes @ 0x2
  1289  0003A2                     	ds	1
  1290  0003A3                     LORAWAN_RxDone@extractedMic:
  1291                           	opt stack 0
  1292                           
  1293                           ; 4 bytes @ 0x3
  1294  0003A3                     	ds	4
  1295  0003A7                     LORAWAN_RxDone@bufferIndex:
  1296                           	opt stack 0
  1297                           
  1298                           ; 1 bytes @ 0x7
  1299  0003A7                     	ds	1
  1300  0003A8                     LORAWAN_RxDone@temp:
  1301                           	opt stack 0
  1302                           
  1303                           ; 1 bytes @ 0x8
  1304  0003A8                     	ds	1
  1305  0003A9                     LORAWAN_RxDone@packet:
  1306                           	opt stack 0
  1307                           
  1308                           ; 2 bytes @ 0x9
  1309  0003A9                     	ds	2
  1310  0003AB                     LORAWAN_RxDone@computedMic:
  1311                           	opt stack 0
  1312                           
  1313                           ; 4 bytes @ 0xB
  1314  0003AB                     	ds	4
  1315  0003AF                     LORAWAN_RxDone@joinAccept:
  1316                           	opt stack 0
  1317                           
  1318                           ; 2 bytes @ 0xF
  1319  0003AF                     	ds	2
  1320  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1321                           	opt stack 0
  1322                           
  1323                           ; 1 bytes @ 0x11
  1324  0003B1                     	ds	1
  1325  0003B2                     LORAWAN_RxDone@hdr:
  1326                           	opt stack 0
  1327                           
  1328                           ; 2 bytes @ 0x12
  1329  0003B2                     	ds	2
  1330                           tblptru	equ	0xFF8
  1331                           tblptrh	equ	0xFF7
  1332                           tblptrl	equ	0xFF6
  1333                           tablat	equ	0xFF5
  1334                           postinc0	equ	0xFEE
  1335                           wreg	equ	0xFE8
  1336                           postdec2	equ	0xFDD
  1337                           fsr2h	equ	0xFDA
  1338                           fsr2l	equ	0xFD9
  1339                           
  1340                           	psect	cstackBANK1
  1341  000100                     __pcstackBANK1:
  1342                           	opt stack 0
  1343  000100                     AESCmac@k2:
  1344                           	opt stack 0
  1345                           
  1346                           ; 16 bytes @ 0x0
  1347  000100                     	ds	16
  1348  000110                     AESCmac@k1:
  1349                           	opt stack 0
  1350                           
  1351                           ; 16 bytes @ 0x10
  1352  000110                     	ds	16
  1353  000120                     AESCmac@mLast:
  1354                           	opt stack 0
  1355                           
  1356                           ; 16 bytes @ 0x20
  1357  000120                     	ds	16
  1358  000130                     AESCmac@padded:
  1359                           	opt stack 0
  1360                           
  1361                           ; 16 bytes @ 0x30
  1362  000130                     	ds	16
  1363  000140                     AESCmac@y:
  1364                           	opt stack 0
  1365                           
  1366                           ; 16 bytes @ 0x40
  1367  000140                     	ds	16
  1368  000150                     AESCmac@x:
  1369                           	opt stack 0
  1370                           
  1371                           ; 16 bytes @ 0x50
  1372  000150                     	ds	16
  1373  000160                     AESCmac@ptr:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x60
  1377  000160                     	ds	2
  1378  000162                     AESCmac@flag:
  1379                           	opt stack 0
  1380                           
  1381                           ; 1 bytes @ 0x62
  1382  000162                     	ds	1
  1383  000163                     AESCmac@n:
  1384                           	opt stack 0
  1385                           
  1386                           ; 1 bytes @ 0x63
  1387  000163                     	ds	1
  1388  000164                     AESCmac@j:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x64
  1392  000164                     	ds	1
  1393  000165                     AESCmac@i:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x65
  1397  000165                     	ds	1
  1398  000166                     ??_LORAWAN_RxDone:
  1399                           
  1400                           ; 1 bytes @ 0x66
  1401  000166                     	ds	5
  1402  00016B                     ??_RADIO_DIO0:
  1403                           
  1404                           ; 1 bytes @ 0x6B
  1405  00016B                     	ds	2
  1406  00016D                     RADIO_DIO0@dioMapping:
  1407                           	opt stack 0
  1408                           
  1409                           ; 1 bytes @ 0x6D
  1410  00016D                     	ds	1
  1411  00016E                     RADIO_DIO0@opMode:
  1412                           	opt stack 0
  1413                           
  1414                           ; 1 bytes @ 0x6E
  1415  00016E                     	ds	1
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           postinc0	equ	0xFEE
  1421                           wreg	equ	0xFE8
  1422                           postdec2	equ	0xFDD
  1423                           fsr2h	equ	0xFDA
  1424                           fsr2l	equ	0xFD9
  1425                           
  1426                           	psect	cstackBANK0
  1427  000060                     __pcstackBANK0:
  1428                           	opt stack 0
  1429  000060                     	ds	4
  1430  000064                     ??_UpdateMinMaxChDataRate:
  1431  000064                     ??_FindSmallestDataRate:
  1432  000064                     ??_CountfOptsLength:
  1433  000064                     ??_ADC_SelChannel:
  1434  000064                     ?_TMR1_ReadTimer:
  1435                           	opt stack 0
  1436  000064                     ?_ExecuteLinkCheck:
  1437                           	opt stack 0
  1438  000064                     ?_ExecuteDutyCycle:
  1439                           	opt stack 0
  1440  000064                     ?_ExecuteDevStatus:
  1441                           	opt stack 0
  1442  000064                     ?___wmul:
  1443                           	opt stack 0
  1444  000064                     ?___awdiv:
  1445                           	opt stack 0
  1446  000064                     ?_GetRx1Freq:
  1447                           	opt stack 0
  1448  000064                     ?___lldiv:
  1449                           	opt stack 0
  1450  000064                     ?___llmod:
  1451                           	opt stack 0
  1452  000064                     SwTimerCreate@retVal:
  1453                           	opt stack 0
  1454  000064                     SwTimerIsRunning@timerId:
  1455                           	opt stack 0
  1456  000064                     SwTimerStop@timerId:
  1457                           	opt stack 0
  1458  000064                     SPI2_Exchange8bit@data:
  1459                           	opt stack 0
  1460  000064                     HALResetPinOutputValue@value:
  1461                           	opt stack 0
  1462  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1463                           	opt stack 0
  1464  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1465                           	opt stack 0
  1466  000064                     RADIO_SetOutputPower@power:
  1467                           	opt stack 0
  1468  000064                     RADIO_SetCRC@crc:
  1469                           	opt stack 0
  1470  000064                     RADIO_SetIQInverted@iqInverted:
  1471                           	opt stack 0
  1472  000064                     RADIO_SetBandwidth@bandwidth:
  1473                           	opt stack 0
  1474  000064                     RADIO_SetModulation@modulation:
  1475                           	opt stack 0
  1476  000064                     ValidateDataRate@dataRate:
  1477                           	opt stack 0
  1478  000064                     ValidateTxPower@result:
  1479                           	opt stack 0
  1480  000064                     UpdateDLSettings@dlRx1DrOffset:
  1481                           	opt stack 0
  1482  000064                     UpdateDataRange@dataRangeNew:
  1483                           	opt stack 0
  1484  000064                     UpdateChannelIdStatus@statusNew:
  1485                           	opt stack 0
  1486  000064                     ValidateRxOffset@rxOffset:
  1487                           	opt stack 0
  1488  000064                     ValidateChannelId@allowedForDefaultChannels:
  1489                           	opt stack 0
  1490  000064                     ValidateChannelMaskCntl@result:
  1491                           	opt stack 0
  1492  000064                     UpdateCurrentDataRate@valueNew:
  1493                           	opt stack 0
  1494  000064                     UpdateTxPower@txPowerNew:
  1495                           	opt stack 0
  1496  000064                     UpdateJoinInProgress@state:
  1497                           	opt stack 0
  1498  000064                     INTERRUPT_GetDioStatus@a:
  1499                           	opt stack 0
  1500  000064                     ___abdiv@divisor:
  1501                           	opt stack 0
  1502  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1503                           	opt stack 0
  1504  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1505                           	opt stack 0
  1506  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1507                           	opt stack 0
  1508  000064                     SwTimerSetCallback@callback:
  1509                           	opt stack 0
  1510  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1511                           	opt stack 0
  1512  000064                     ExecuteDutyCycle@ptr:
  1513                           	opt stack 0
  1514  000064                     ExecuteDevStatus@ptr:
  1515                           	opt stack 0
  1516  000064                     UpdateDutyCycle@dutyCycleNew:
  1517                           	opt stack 0
  1518  000064                     ValidateChannelMask@channelMask:
  1519                           	opt stack 0
  1520  000064                     TMR1_WriteTimer@timerVal:
  1521                           	opt stack 0
  1522  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1523                           	opt stack 0
  1524  000064                     FillSubKey@source:
  1525                           	opt stack 0
  1526  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1527                           	opt stack 0
  1528  000064                     IOCB5_SetInterruptHandler@InterruptHandler:
  1529                           	opt stack 0
  1530  000064                     ExecuteLinkCheck@ptr:
  1531                           	opt stack 0
  1532  000064                     IncludeMacCommandsResponse@macBuffer:
  1533                           	opt stack 0
  1534  000064                     CheckFlags@hdr:
  1535                           	opt stack 0
  1536  000064                     CheckMcastFlags@hdr:
  1537                           	opt stack 0
  1538  000064                     EncKeySchedule@key:
  1539                           	opt stack 0
  1540  000064                     EncodeShiftRow@stateTable:
  1541                           	opt stack 0
  1542  000064                     ___wmul@multiplier:
  1543                           	opt stack 0
  1544  000064                     ___awdiv@dividend:
  1545                           	opt stack 0
  1546  000064                     memcpy@d1:
  1547                           	opt stack 0
  1548  000064                     memset@p1:
  1549                           	opt stack 0
  1550  000064                     SystemBlockingWaitMs@ms:
  1551                           	opt stack 0
  1552  000064                     RADIO_SetChannelFrequency@frequency:
  1553                           	opt stack 0
  1554  000064                     ValidateFrequency@frequencyNew:
  1555                           	opt stack 0
  1556  000064                     UpdateFrequency@frequencyNew:
  1557                           	opt stack 0
  1558  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1559                           	opt stack 0
  1560  000064                     UpdateReceiveWindow2Parameters@frequency:
  1561                           	opt stack 0
  1562  000064                     ___lldiv@dividend:
  1563                           	opt stack 0
  1564  000064                     ___llmod@dividend:
  1565                           	opt stack 0
  1566                           
  1567                           ; 4 bytes @ 0x4
  1568  000064                     	ds	1
  1569  000065                     ??_UpdateDataRange:
  1570  000065                     ??_UpdateChannelIdStatus:
  1571  000065                     ??___abdiv:
  1572  000065                     SwTimerIsRunning@isRunning:
  1573                           	opt stack 0
  1574  000065                     HALSPISend@data:
  1575                           	opt stack 0
  1576  000065                     ValidateDataRate@result:
  1577                           	opt stack 0
  1578  000065                     ValidateTxPower@txPowerNew:
  1579                           	opt stack 0
  1580  000065                     UpdateDLSettings@dlRx2Dr:
  1581                           	opt stack 0
  1582  000065                     ValidateRxOffset@result:
  1583                           	opt stack 0
  1584  000065                     ValidateChannelId@result:
  1585                           	opt stack 0
  1586  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1587                           	opt stack 0
  1588  000065                     UpdateMinMaxChDataRate@i:
  1589                           	opt stack 0
  1590  000065                     FindSmallestDataRate@found:
  1591                           	opt stack 0
  1592  000065                     ADC_SelChannel@c:
  1593                           	opt stack 0
  1594                           
  1595                           ; 1 bytes @ 0x5
  1596  000065                     	ds	1
  1597  000066                     ??_TMR1_ReadTimer:
  1598  000066                     ??_ValidateChannelMask:
  1599  000066                     ??_ExecuteDutyCycle:
  1600  000066                     ??_EncKeySchedule:
  1601  000066                     ?_ADC_Read:
  1602                           	opt stack 0
  1603  000066                     SwTimerSetCallback@callbackParameter:
  1604                           	opt stack 0
  1605  000066                     RADIO_RegisterWrite@value:
  1606                           	opt stack 0
  1607  000066                     RADIO_RegisterRead@reg:
  1608                           	opt stack 0
  1609  000066                     UpdateDataRange@channelId:
  1610                           	opt stack 0
  1611  000066                     UpdateChannelIdStatus@channelId:
  1612                           	opt stack 0
  1613  000066                     ValidateDataRange@result:
  1614                           	opt stack 0
  1615  000066                     ValidateChannelId@channelId:
  1616                           	opt stack 0
  1617  000066                     UpdateDutyCycle@channelId:
  1618                           	opt stack 0
  1619  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1620                           	opt stack 0
  1621  000066                     FindSmallestDataRate@i:
  1622                           	opt stack 0
  1623  000066                     EncodeShiftRow@temp:
  1624                           	opt stack 0
  1625  000066                     FillSubKey@key:
  1626                           	opt stack 0
  1627  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1628                           	opt stack 0
  1629  000066                     ___wmul@multiplicand:
  1630                           	opt stack 0
  1631  000066                     ___awdiv@divisor:
  1632                           	opt stack 0
  1633  000066                     memcpy@s1:
  1634                           	opt stack 0
  1635  000066                     memset@c:
  1636                           	opt stack 0
  1637                           
  1638                           ; 2 bytes @ 0x6
  1639  000066                     	ds	1
  1640  000067                     SwTimerSetCallback@timerId:
  1641                           	opt stack 0
  1642  000067                     RADIO_RegisterWrite@reg:
  1643                           	opt stack 0
  1644  000067                     RADIO_RegisterRead@readValue:
  1645                           	opt stack 0
  1646  000067                     UpdateDataRange@i:
  1647                           	opt stack 0
  1648  000067                     UpdateChannelIdStatus@i:
  1649                           	opt stack 0
  1650  000067                     ValidateDataRange@dataRangeNew:
  1651                           	opt stack 0
  1652  000067                     FindSmallestDataRate@dataRate:
  1653                           	opt stack 0
  1654  000067                     ___abdiv@counter:
  1655                           	opt stack 0
  1656  000067                     RxDataDone@pData:
  1657                           	opt stack 0
  1658                           
  1659                           ; 2 bytes @ 0x7
  1660  000067                     	ds	1
  1661  000068                     ??_ADC_Read:
  1662  000068                     ??_SystemBlockingWaitMs:
  1663  000068                     RADIO_WritePower@ocp:
  1664                           	opt stack 0
  1665  000068                     RADIO_UnhandledInterrupt@modulation:
  1666                           	opt stack 0
  1667  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1668                           	opt stack 0
  1669  000068                     ValidateFrequency@result:
  1670                           	opt stack 0
  1671  000068                     ValidateDataRange@dataRateMax:
  1672                           	opt stack 0
  1673  000068                     UpdateFrequency@channelId:
  1674                           	opt stack 0
  1675  000068                     ValidateChannelMask@i:
  1676                           	opt stack 0
  1677  000068                     FillSubKey@size:
  1678                           	opt stack 0
  1679  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1680                           	opt stack 0
  1681  000068                     IncludeMacCommandsResponse@bIncludeInFopts:
  1682                           	opt stack 0
  1683  000068                     ___abdiv@sign:
  1684                           	opt stack 0
  1685  000068                     ___awdiv@counter:
  1686                           	opt stack 0
  1687  000068                     EnableChannels1@channelMask:
  1688                           	opt stack 0
  1689  000068                     TMR1_ReadTimer@readVal:
  1690                           	opt stack 0
  1691  000068                     _EncKeySchedule$3853:
  1692                           	opt stack 0
  1693  000068                     ___wmul@product:
  1694                           	opt stack 0
  1695  000068                     memcpy@n:
  1696                           	opt stack 0
  1697  000068                     memset@n:
  1698                           	opt stack 0
  1699  000068                     ___lldiv@divisor:
  1700                           	opt stack 0
  1701  000068                     ___llmod@divisor:
  1702                           	opt stack 0
  1703                           
  1704                           ; 4 bytes @ 0x8
  1705  000068                     	ds	1
  1706  000069                     ??_FillSubKey:
  1707  000069                     ??_IncludeMacCommandsResponse:
  1708  000069                     ??_RADIO_DIO3:
  1709  000069                     ??_RADIO_DIO4:
  1710  000069                     ??_RADIO_DIO5:
  1711  000069                     RADIO_WriteMode@newModulation:
  1712                           	opt stack 0
  1713  000069                     RADIO_WritePower@paDac:
  1714                           	opt stack 0
  1715  000069                     LORAWAN_SetChannelIdStatus@result:
  1716                           	opt stack 0
  1717  000069                     ExecuteDutyCycle@maxDCycle:
  1718                           	opt stack 0
  1719  000069                     ValidateDataRange@dataRateMin:
  1720                           	opt stack 0
  1721  000069                     RxDataDone@dataLength:
  1722                           	opt stack 0
  1723  000069                     ___abdiv@quotient:
  1724                           	opt stack 0
  1725  000069                     ___awdiv@sign:
  1726                           	opt stack 0
  1727                           
  1728                           ; 1 bytes @ 0x9
  1729  000069                     	ds	1
  1730  00006A                     RADIO_WriteMode@blocking:
  1731                           	opt stack 0
  1732  00006A                     RADIO_WritePower@power:
  1733                           	opt stack 0
  1734  00006A                     RADIO_DIO3@dioMapping:
  1735                           	opt stack 0
  1736  00006A                     RADIO_DIO5@dioMapping:
  1737                           	opt stack 0
  1738  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1739                           	opt stack 0
  1740  00006A                     EnableChannels1@channelMaskCntl:
  1741                           	opt stack 0
  1742  00006A                     TMR1_ReadTimer@readValHigh:
  1743                           	opt stack 0
  1744  00006A                     FillSubKey@carry:
  1745                           	opt stack 0
  1746  00006A                     UpdateReceiveDelays@delay:
  1747                           	opt stack 0
  1748  00006A                     CountfOptsLength@macCommandLength:
  1749                           	opt stack 0
  1750  00006A                     RxDataDone@status:
  1751                           	opt stack 0
  1752  00006A                     ADC_Read@channel:
  1753                           	opt stack 0
  1754  00006A                     ___abdiv@dividend:
  1755                           	opt stack 0
  1756  00006A                     AESEncode@block:
  1757                           	opt stack 0
  1758  00006A                     ___awdiv@quotient:
  1759                           	opt stack 0
  1760  00006A                     memcpy@d:
  1761                           	opt stack 0
  1762  00006A                     memset@p:
  1763                           	opt stack 0
  1764                           
  1765                           ; 2 bytes @ 0xA
  1766  00006A                     	ds	1
  1767  00006B                     ??_RxDataDone:
  1768  00006B                     ?_ExecuteRxTimingSetup:
  1769                           	opt stack 0
  1770  00006B                     RADIO_WriteMode@currentModulation:
  1771                           	opt stack 0
  1772  00006B                     RADIO_DIO4@dioMapping:
  1773                           	opt stack 0
  1774  00006B                     EnableChannels1@channelIndexMin:
  1775                           	opt stack 0
  1776  00006B                     TMR1_ReadTimer@readValLow:
  1777                           	opt stack 0
  1778  00006B                     FillSubKey@i:
  1779                           	opt stack 0
  1780  00006B                     CountfOptsLength@i:
  1781                           	opt stack 0
  1782  00006B                     ExecuteRxTimingSetup@ptr:
  1783                           	opt stack 0
  1784  00006B                     ADC_Read@result:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0xB
  1788  00006B                     	ds	1
  1789  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1790  00006C                     ?_TMR_SwapTimer:
  1791                           	opt stack 0
  1792  00006C                     ?_TMR_GetDeltaTime:
  1793                           	opt stack 0
  1794  00006C                     RADIO_WriteMode@dioMapping:
  1795                           	opt stack 0
  1796  00006C                     EnableChannels1@channelIndexMax:
  1797                           	opt stack 0
  1798  00006C                     ___llmod@counter:
  1799                           	opt stack 0
  1800  00006C                     TMR_SwapTimer@timerVal:
  1801                           	opt stack 0
  1802  00006C                     AESEncode@masterKey:
  1803                           	opt stack 0
  1804  00006C                     memcpy@s:
  1805                           	opt stack 0
  1806  00006C                     ___lldiv@quotient:
  1807                           	opt stack 0
  1808                           
  1809                           ; 4 bytes @ 0xC
  1810  00006C                     	ds	1
  1811  00006D                     ??_EnableChannels1:
  1812  00006D                     RADIO_WriteMode@currentMode:
  1813                           	opt stack 0
  1814  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1815                           	opt stack 0
  1816  00006D                     ExecuteRxTimingSetup@delay:
  1817                           	opt stack 0
  1818                           
  1819                           ; 1 bytes @ 0xD
  1820  00006D                     	ds	1
  1821  00006E                     ??_AESEncode:
  1822  00006E                     ?_ExtractMic:
  1823                           	opt stack 0
  1824  00006E                     RADIO_WriteMode@newMode:
  1825                           	opt stack 0
  1826  00006E                     InitDefault868Channels@i:
  1827                           	opt stack 0
  1828  00006E                     InitDefault433Channels@i:
  1829                           	opt stack 0
  1830  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1831                           	opt stack 0
  1832  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1833                           	opt stack 0
  1834  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1835                           	opt stack 0
  1836  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1837                           	opt stack 0
  1838  00006E                     PrepareSessionKeys@sessionKey:
  1839                           	opt stack 0
  1840  00006E                     ExtractMic@buffer:
  1841                           	opt stack 0
  1842  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1843                           	opt stack 0
  1844  00006E                     AssembleEncryptionBlock@frameCounter:
  1845                           	opt stack 0
  1846                           
  1847                           ; 4 bytes @ 0xE
  1848  00006E                     	ds	1
  1849  00006F                     RADIO_WriteMode@opMode:
  1850                           	opt stack 0
  1851  00006F                     EnableChannels1@i:
  1852                           	opt stack 0
  1853                           
  1854                           ; 1 bytes @ 0xF
  1855  00006F                     	ds	1
  1856  000070                     ??_TMR_GetDeltaTime:
  1857  000070                     ?_RADIO_ReadRandom:
  1858                           	opt stack 0
  1859  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1860                           	opt stack 0
  1861  000070                     ExtractMic@bufferLength:
  1862                           	opt stack 0
  1863  000070                     ___lldiv@counter:
  1864                           	opt stack 0
  1865  000070                     EnableChannels@channelMask:
  1866                           	opt stack 0
  1867  000070                     PrepareSessionKeys@appNonce:
  1868                           	opt stack 0
  1869                           
  1870                           ; 2 bytes @ 0x10
  1871  000070                     	ds	1
  1872  000071                     IncludeMacCommandsResponse@i:
  1873                           	opt stack 0
  1874  000071                     SwTimerSetTimeout@timeout:
  1875                           	opt stack 0
  1876  000071                     RADIO_WriteFrequency@frequency:
  1877                           	opt stack 0
  1878  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1879                           	opt stack 0
  1880  000071                     RADIO_WriteFSKBitRate@bitRate:
  1881                           	opt stack 0
  1882  000071                     ConfigureRadio@freq:
  1883                           	opt stack 0
  1884                           
  1885                           ; 4 bytes @ 0x11
  1886  000071                     	ds	1
  1887  000072                     ??_ExtractMic:
  1888  000072                     ??_TMR_OverrideRemaining:
  1889  000072                     ??_RADIO_ReadRandom:
  1890  000072                     EnableChannels@channelMaskCntl:
  1891                           	opt stack 0
  1892  000072                     IncludeMacCommandsResponse@bufferIndex:
  1893                           	opt stack 0
  1894  000072                     AssembleEncryptionBlock@blockId:
  1895                           	opt stack 0
  1896  000072                     PrepareSessionKeys@networkId:
  1897                           	opt stack 0
  1898                           
  1899                           ; 2 bytes @ 0x12
  1900  000072                     	ds	1
  1901  000073                     ?_ExecuteLinkAdr:
  1902                           	opt stack 0
  1903  000073                     AssembleEncryptionBlock@firstByte:
  1904                           	opt stack 0
  1905  000073                     RADIO_ReadRandom@retVal:
  1906                           	opt stack 0
  1907  000073                     ExecuteLinkAdr@ptr:
  1908                           	opt stack 0
  1909                           
  1910                           ; 2 bytes @ 0x13
  1911  000073                     	ds	1
  1912  000074                     PrepareSessionKeys@index:
  1913                           	opt stack 0
  1914  000074                     AssembleEncryptionBlock@multicastStatus:
  1915                           	opt stack 0
  1916  000074                     TMR_OverrideRemaining@tmrVal:
  1917                           	opt stack 0
  1918                           
  1919                           ; 2 bytes @ 0x14
  1920  000074                     	ds	1
  1921  000075                     ??_SwTimerSetTimeout:
  1922  000075                     ??_ExecuteLinkAdr:
  1923  000075                     RADIO_ReadRandom@i:
  1924                           	opt stack 0
  1925  000075                     ConfigureRadio@dataRate:
  1926                           	opt stack 0
  1927  000075                     AssembleEncryptionBlock@dir:
  1928                           	opt stack 0
  1929  000075                     RADIO_WriteFrequency@num_mod:
  1930                           	opt stack 0
  1931  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1932                           	opt stack 0
  1933  000075                     RADIO_WriteFSKBitRate@num:
  1934                           	opt stack 0
  1935                           
  1936                           ; 4 bytes @ 0x15
  1937  000075                     	ds	1
  1938  000076                     AssembleEncryptionBlock@bufferIndex:
  1939                           	opt stack 0
  1940  000076                     TMR_OverrideRemaining@oldReloadVal:
  1941                           	opt stack 0
  1942  000076                     srand@x:
  1943                           	opt stack 0
  1944  000076                     ConfigureRadioTx@freq:
  1945                           	opt stack 0
  1946  000076                     ConfigureRadioRx@freq:
  1947                           	opt stack 0
  1948  000076                     ExtractMic@mic:
  1949                           	opt stack 0
  1950  000076                     AESEncode@key:
  1951                           	opt stack 0
  1952                           
  1953                           ; 16 bytes @ 0x16
  1954  000076                     	ds	1
  1955  000077                     ExecuteLinkAdr@channelMask:
  1956                           	opt stack 0
  1957                           
  1958                           ; 2 bytes @ 0x17
  1959  000077                     	ds	1
  1960  000078                     
  1961                           ; 1 bytes @ 0x18
  1962  000078                     	ds	1
  1963  000079                     SwTimerSetTimeout@timerId:
  1964                           	opt stack 0
  1965  000079                     ExecuteLinkAdr@txPower:
  1966                           	opt stack 0
  1967  000079                     RADIO_WriteFrequency@num:
  1968                           	opt stack 0
  1969                           
  1970                           ; 4 bytes @ 0x19
  1971  000079                     	ds	1
  1972  00007A                     ConfigureRadioTx@dataRate:
  1973                           	opt stack 0
  1974  00007A                     ConfigureRadioRx@dataRate:
  1975                           	opt stack 0
  1976  00007A                     ExecuteLinkAdr@redundancy:
  1977                           	opt stack 0
  1978                           
  1979                           ; 2 bytes @ 0x1A
  1980  00007A                     	ds	1
  1981  00007B                     ConfigureRadioTx@txPower:
  1982                           	opt stack 0
  1983                           
  1984                           ; 1 bytes @ 0x1B
  1985  00007B                     	ds	1
  1986  00007C                     ExecuteLinkAdr@dataRate:
  1987                           	opt stack 0
  1988                           
  1989                           ; 1 bytes @ 0x1C
  1990  00007C                     	ds	1
  1991  00007D                     RADIO_FHSSChangeChannel@irqFlags:
  1992                           	opt stack 0
  1993  00007D                     RADIO_Init@radioBuffer:
  1994                           	opt stack 0
  1995                           
  1996                           ; 2 bytes @ 0x1D
  1997  00007D                     	ds	1
  1998  00007E                     ??_RADIO_DIO2:
  1999                           
  2000                           ; 1 bytes @ 0x1E
  2001  00007E                     	ds	1
  2002  00007F                     RADIO_DIO2@opMode:
  2003                           	opt stack 0
  2004  00007F                     RADIO_Init@frequency:
  2005                           	opt stack 0
  2006                           
  2007                           ; 4 bytes @ 0x1F
  2008  00007F                     	ds	1
  2009  000080                     RADIO_DIO2@dioMapping:
  2010                           	opt stack 0
  2011                           
  2012                           ; 1 bytes @ 0x20
  2013  000080                     	ds	3
  2014  000083                     ??_RADIO_Init:
  2015                           
  2016                           ; 1 bytes @ 0x23
  2017  000083                     	ds	1
  2018  000084                     ?_SwTimersInterrupt:
  2019                           	opt stack 0
  2020                           
  2021                           ; 4 bytes @ 0x24
  2022  000084                     	ds	2
  2023  000086                     _AESEncode$3867:
  2024                           	opt stack 0
  2025                           
  2026                           ; 2 bytes @ 0x26
  2027  000086                     	ds	2
  2028  000088                     _AESEncode$3868:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x28
  2032  000088                     	ds	2
  2033  00008A                     _AESEncode$3869:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x2A
  2037  00008A                     	ds	2
  2038  00008C                     AESEncode@aux:
  2039                           	opt stack 0
  2040  00008C                     SwTimersInterrupt@timeElapsed:
  2041                           	opt stack 0
  2042                           
  2043                           ; 4 bytes @ 0x2C
  2044  00008C                     	ds	1
  2045  00008D                     AESEncode@aux2:
  2046                           	opt stack 0
  2047                           
  2048                           ; 1 bytes @ 0x2D
  2049  00008D                     	ds	1
  2050  00008E                     AESEncode@aux1:
  2051                           	opt stack 0
  2052                           
  2053                           ; 1 bytes @ 0x2E
  2054  00008E                     	ds	1
  2055  00008F                     AESEncode@aux3:
  2056                           	opt stack 0
  2057                           
  2058                           ; 1 bytes @ 0x2F
  2059  00008F                     	ds	1
  2060  000090                     AESEncode@i:
  2061                           	opt stack 0
  2062  000090                     SwTimersInterrupt@ticksToNextTimerEvent:
  2063                           	opt stack 0
  2064                           
  2065                           ; 4 bytes @ 0x30
  2066  000090                     	ds	1
  2067  000091                     AESEncodeLoRa@block:
  2068                           	opt stack 0
  2069                           
  2070                           ; 2 bytes @ 0x31
  2071  000091                     	ds	2
  2072  000093                     AESEncodeLoRa@key:
  2073                           	opt stack 0
  2074                           
  2075                           ; 2 bytes @ 0x33
  2076  000093                     	ds	1
  2077  000094                     SwTimersInterrupt@i:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x34
  2081  000094                     	ds	1
  2082  000095                     ?_SwTimerReadValue:
  2083                           	opt stack 0
  2084  000095                     AESEncodeLoRa@useKey:
  2085                           	opt stack 0
  2086                           
  2087                           ; 16 bytes @ 0x35
  2088  000095                     	ds	4
  2089  000099                     SwTimerReadValue@ticksCount:
  2090                           	opt stack 0
  2091  000099                     SwTimerStart@ticksRemaining:
  2092                           	opt stack 0
  2093                           
  2094                           ; 4 bytes @ 0x39
  2095  000099                     	ds	4
  2096  00009D                     SwTimerReadValue@timerId:
  2097                           	opt stack 0
  2098  00009D                     SwTimerStart@timerId:
  2099                           	opt stack 0
  2100                           
  2101                           ; 1 bytes @ 0x3D
  2102  00009D                     	ds	1
  2103  00009E                     ??_UpdateRetransmissionAckTimeoutState:
  2104  00009E                     ??_StartReTxTimer:
  2105  00009E                     ?___lmul:
  2106                           	opt stack 0
  2107  00009E                     ___lmul@multiplier:
  2108                           	opt stack 0
  2109                           
  2110                           ; 4 bytes @ 0x3E
  2111  00009E                     	ds	4
  2112  0000A2                     StartReTxTimer@minim:
  2113                           	opt stack 0
  2114  0000A2                     ___lmul@multiplicand:
  2115                           	opt stack 0
  2116                           
  2117                           ; 4 bytes @ 0x42
  2118  0000A2                     	ds	3
  2119  0000A5                     GenerateSubkey@key:
  2120                           	opt stack 0
  2121  0000A5                     ComputeSessionKeys@joinAcceptBuffer:
  2122                           	opt stack 0
  2123  0000A5                     EncryptFRMPayload@buffer:
  2124                           	opt stack 0
  2125                           
  2126                           ; 2 bytes @ 0x45
  2127  0000A5                     	ds	1
  2128  0000A6                     StartReTxTimer@i:
  2129                           	opt stack 0
  2130  0000A6                     ___lmul@product:
  2131                           	opt stack 0
  2132                           
  2133                           ; 4 bytes @ 0x46
  2134  0000A6                     	ds	1
  2135  0000A7                     EncryptFRMPayload@bufferLength:
  2136                           	opt stack 0
  2137  0000A7                     GenerateSubkey@k1:
  2138                           	opt stack 0
  2139                           
  2140                           ; 2 bytes @ 0x47
  2141  0000A7                     	ds	1
  2142  0000A8                     EncryptFRMPayload@dir:
  2143                           	opt stack 0
  2144                           
  2145                           ; 1 bytes @ 0x48
  2146  0000A8                     	ds	1
  2147  0000A9                     GenerateSubkey@k2:
  2148                           	opt stack 0
  2149  0000A9                     EncryptFRMPayload@frameCounter:
  2150                           	opt stack 0
  2151                           
  2152                           ; 4 bytes @ 0x49
  2153  0000A9                     	ds	1
  2154  0000AA                     ?_rand:
  2155                           	opt stack 0
  2156  0000AA                     ?_ExecuteNewChannel:
  2157                           	opt stack 0
  2158  0000AA                     ?_ExecuteRxParamSetupReq:
  2159                           	opt stack 0
  2160  0000AA                     RADIO_WriteConfiguration@symbolTimeout:
  2161                           	opt stack 0
  2162  0000AA                     ExecuteNewChannel@ptr:
  2163                           	opt stack 0
  2164  0000AA                     ExecuteRxParamSetupReq@ptr:
  2165                           	opt stack 0
  2166  0000AA                     UpdateCfList@joinAccept:
  2167                           	opt stack 0
  2168  0000AA                     LORAWAN_LinkCheckConfigure@period:
  2169                           	opt stack 0
  2170                           
  2171                           ; 2 bytes @ 0x4A
  2172  0000AA                     	ds	1
  2173  0000AB                     ??_GenerateSubkey:
  2174                           
  2175                           ; 1 bytes @ 0x4B
  2176  0000AB                     	ds	1
  2177  0000AC                     ??_LORAWAN_LinkCheckConfigure:
  2178  0000AC                     ??_RADIO_WriteConfiguration:
  2179  0000AC                     ??_ExecuteNewChannel:
  2180  0000AC                     ??_ExecuteRxParamSetupReq:
  2181  0000AC                     ?___lwmod:
  2182                           	opt stack 0
  2183  0000AC                     UpdateCfList@bufferLength:
  2184                           	opt stack 0
  2185  0000AC                     ___lwmod@dividend:
  2186                           	opt stack 0
  2187  0000AC                     GenerateSubkey@const_Rb:
  2188                           	opt stack 0
  2189                           
  2190                           ; 16 bytes @ 0x4C
  2191  0000AC                     	ds	1
  2192  0000AD                     EncryptFRMPayload@key:
  2193                           	opt stack 0
  2194  0000AD                     UpdateCfList@frequency:
  2195                           	opt stack 0
  2196                           
  2197                           ; 4 bytes @ 0x4D
  2198  0000AD                     	ds	1
  2199  0000AE                     ExecuteNewChannel@drRange:
  2200                           	opt stack 0
  2201  0000AE                     ___lwmod@divisor:
  2202                           	opt stack 0
  2203  0000AE                     ExecuteRxParamSetupReq@frequency:
  2204                           	opt stack 0
  2205                           
  2206                           ; 4 bytes @ 0x4E
  2207  0000AE                     	ds	1
  2208  0000AF                     RADIO_WriteConfiguration@i:
  2209                           	opt stack 0
  2210  0000AF                     EncryptFRMPayload@macBufferIndex:
  2211                           	opt stack 0
  2212  0000AF                     ExecuteNewChannel@frequency:
  2213                           	opt stack 0
  2214                           
  2215                           ; 4 bytes @ 0x4F
  2216  0000AF                     	ds	1
  2217  0000B0                     ___lwmod@counter:
  2218                           	opt stack 0
  2219  0000B0                     EncryptFRMPayload@bufferToBeEncrypted:
  2220                           	opt stack 0
  2221  0000B0                     RADIO_WriteConfiguration@tempValue:
  2222                           	opt stack 0
  2223  0000B0                     _LORAWAN_LinkCheckConfigure$3273:
  2224                           	opt stack 0
  2225                           
  2226                           ; 4 bytes @ 0x50
  2227  0000B0                     	ds	1
  2228  0000B1                     ?_Random:
  2229                           	opt stack 0
  2230  0000B1                     UpdateCfList@channelIndex:
  2231                           	opt stack 0
  2232  0000B1                     Random@max:
  2233                           	opt stack 0
  2234                           
  2235                           ; 2 bytes @ 0x51
  2236  0000B1                     	ds	1
  2237  0000B2                     ExecuteRxParamSetupReq@dlSettings:
  2238                           	opt stack 0
  2239  0000B2                     UpdateCfList@i:
  2240                           	opt stack 0
  2241  0000B2                     EncryptFRMPayload@multicastStatus:
  2242                           	opt stack 0
  2243                           
  2244                           ; 1 bytes @ 0x52
  2245  0000B2                     	ds	1
  2246  0000B3                     ??_EncryptFRMPayload:
  2247  0000B3                     ExecuteNewChannel@channelIndex:
  2248                           	opt stack 0
  2249  0000B3                     SearchAvailableChannel@transmissionType:
  2250                           	opt stack 0
  2251                           
  2252                           ; 1 bytes @ 0x53
  2253  0000B3                     	ds	1
  2254  0000B4                     ?_MacExecuteCommands:
  2255                           	opt stack 0
  2256  0000B4                     RADIO_WriteConfiguration@regValue:
  2257                           	opt stack 0
  2258  0000B4                     LORAWAN_LinkCheckConfigure@iCtr:
  2259                           	opt stack 0
  2260  0000B4                     SearchAvailableChannel@channelIndex:
  2261                           	opt stack 0
  2262  0000B4                     MacExecuteCommands@buffer:
  2263                           	opt stack 0
  2264                           
  2265                           ; 2 bytes @ 0x54
  2266  0000B4                     	ds	1
  2267  0000B5                     ?_RADIO_Transmit:
  2268                           	opt stack 0
  2269  0000B5                     ?_RADIO_ReceiveStart:
  2270                           	opt stack 0
  2271  0000B5                     LORAWAN_Reset@ismBandNew:
  2272                           	opt stack 0
  2273  0000B5                     RADIO_Transmit@buffer:
  2274                           	opt stack 0
  2275  0000B5                     RADIO_ReceiveStart@rxWindowSize:
  2276                           	opt stack 0
  2277                           
  2278                           ; 2 bytes @ 0x55
  2279  0000B5                     	ds	1
  2280  0000B6                     ??_SearchAvailableChannel:
  2281  0000B6                     MacExecuteCommands@fOptsLen:
  2282                           	opt stack 0
  2283  0000B6                     LORAWAN_Init@RxPayload:
  2284                           	opt stack 0
  2285                           
  2286                           ; 2 bytes @ 0x56
  2287  0000B6                     	ds	1
  2288  0000B7                     ??_MacExecuteCommands:
  2289  0000B7                     ??_RADIO_ReceiveStart:
  2290  0000B7                     RADIO_Transmit@bufferLen:
  2291                           	opt stack 0
  2292                           
  2293                           ; 1 bytes @ 0x57
  2294  0000B7                     	ds	1
  2295  0000B8                     ??_RADIO_Transmit:
  2296  0000B8                     EncryptFRMPayload@k:
  2297                           	opt stack 0
  2298  0000B8                     LORAWAN_Init@RxJoinResponse:
  2299                           	opt stack 0
  2300                           
  2301                           ; 2 bytes @ 0x58
  2302  0000B8                     	ds	1
  2303  0000B9                     MacExecuteCommands@done:
  2304                           	opt stack 0
  2305  0000B9                     EncryptFRMPayload@i:
  2306                           	opt stack 0
  2307                           
  2308                           ; 1 bytes @ 0x59
  2309  0000B9                     	ds	1
  2310  0000BA                     SearchAvailableChannel@randomNumberCopy:
  2311                           	opt stack 0
  2312  0000BA                     EncryptFRMPayload@j:
  2313                           	opt stack 0
  2314  0000BA                     MacExecuteCommands@ptr:
  2315                           	opt stack 0
  2316                           
  2317                           ; 2 bytes @ 0x5A
  2318  0000BA                     	ds	1
  2319  0000BB                     SearchAvailableChannel@result:
  2320                           	opt stack 0
  2321  0000BB                     _RADIO_ReceiveStart$1195:
  2322                           	opt stack 0
  2323                           
  2324                           ; 4 bytes @ 0x5B
  2325  0000BB                     	ds	1
  2326  0000BC                     SearchAvailableChannel@maxChannels:
  2327                           	opt stack 0
  2328  0000BC                     _RADIO_Transmit$1190:
  2329                           	opt stack 0
  2330  0000BC                     GenerateSubkey@l:
  2331                           	opt stack 0
  2332                           
  2333                           ; 16 bytes @ 0x5C
  2334  0000BC                     	ds	1
  2335  0000BD                     SearchAvailableChannel@randomNumber:
  2336                           	opt stack 0
  2337                           
  2338                           ; 1 bytes @ 0x5D
  2339  0000BD                     	ds	1
  2340  0000BE                     SearchAvailableChannel@i:
  2341                           	opt stack 0
  2342                           
  2343                           ; 1 bytes @ 0x5E
  2344  0000BE                     	ds	1
  2345  0000BF                     SelectChannelForTransmission@transmissionType:
  2346                           	opt stack 0
  2347  0000BF                     LORAWAN_TxDone@timeOnAir:
  2348                           	opt stack 0
  2349                           
  2350                           ; 2 bytes @ 0x5F
  2351  0000BF                     	ds	1
  2352  0000C0                     SelectChannelForTransmission@result:
  2353                           	opt stack 0
  2354  0000C0                     _RADIO_Transmit$1192:
  2355                           	opt stack 0
  2356                           
  2357                           ; 4 bytes @ 0x60
  2358  0000C0                     	ds	1
  2359  0000C1                     ??_LORAWAN_TxDone:
  2360  0000C1                     SelectChannelForTransmission@channelIndex:
  2361                           	opt stack 0
  2362                           
  2363                           ; 1 bytes @ 0x61
  2364  0000C1                     	ds	3
  2365  0000C4                     RADIO_Transmit@regValue:
  2366                           	opt stack 0
  2367                           
  2368                           ; 1 bytes @ 0x64
  2369  0000C4                     	ds	1
  2370  0000C5                     RADIO_Transmit@i:
  2371                           	opt stack 0
  2372                           
  2373                           ; 1 bytes @ 0x65
  2374  0000C5                     	ds	1
  2375  0000C6                     ??_LORAWAN_RxTimeout:
  2376                           
  2377                           ; 1 bytes @ 0x66
  2378  0000C6                     	ds	4
  2379  0000CA                     LORAWAN_RxTimeout@minim:
  2380                           	opt stack 0
  2381                           
  2382                           ; 4 bytes @ 0x6A
  2383  0000CA                     	ds	2
  2384  0000CC                     GenerateSubkey@i:
  2385                           	opt stack 0
  2386                           
  2387                           ; 1 bytes @ 0x6C
  2388  0000CC                     	ds	1
  2389  0000CD                     AESCmac@key:
  2390                           	opt stack 0
  2391  0000CD                     _LORAWAN_TxDone$2088:
  2392                           	opt stack 0
  2393                           
  2394                           ; 4 bytes @ 0x6D
  2395  0000CD                     	ds	1
  2396  0000CE                     LORAWAN_RxTimeout@i:
  2397                           	opt stack 0
  2398                           
  2399                           ; 1 bytes @ 0x6E
  2400  0000CE                     	ds	1
  2401  0000CF                     ??_RADIO_DIO1:
  2402  0000CF                     AESCmac@output:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x6F
  2406  0000CF                     	ds	1
  2407  0000D0                     RADIO_DIO1@dioMapping:
  2408                           	opt stack 0
  2409                           
  2410                           ; 1 bytes @ 0x70
  2411  0000D0                     	ds	1
  2412  0000D1                     AESCmac@input:
  2413                           	opt stack 0
  2414  0000D1                     _LORAWAN_TxDone$2089:
  2415                           	opt stack 0
  2416                           
  2417                           ; 4 bytes @ 0x71
  2418  0000D1                     	ds	2
  2419  0000D3                     AESCmac@size:
  2420                           	opt stack 0
  2421                           
  2422                           ; 1 bytes @ 0x73
  2423  0000D3                     	ds	1
  2424  0000D4                     ??_AESCmac:
  2425                           
  2426                           ; 1 bytes @ 0x74
  2427  0000D4                     	ds	1
  2428  0000D5                     LORAWAN_TxDone@found:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x75
  2432  0000D5                     	ds	1
  2433  0000D6                     LORAWAN_TxDone@delta:
  2434                           	opt stack 0
  2435                           
  2436                           ; 4 bytes @ 0x76
  2437  0000D6                     	ds	4
  2438  0000DA                     _LORAWAN_TxDone$6261:
  2439                           	opt stack 0
  2440                           
  2441                           ; 4 bytes @ 0x7A
  2442  0000DA                     	ds	1
  2443  0000DB                     ?_ComputeMic:
  2444                           	opt stack 0
  2445  0000DB                     AssemblePacket@port:
  2446                           	opt stack 0
  2447  0000DB                     ComputeMic@key:
  2448                           	opt stack 0
  2449                           
  2450                           ; 2 bytes @ 0x7B
  2451  0000DB                     	ds	1
  2452  0000DC                     AssemblePacket@buffer:
  2453                           	opt stack 0
  2454                           
  2455                           ; 2 bytes @ 0x7C
  2456  0000DC                     	ds	1
  2457  0000DD                     ComputeMic@buffer:
  2458                           	opt stack 0
  2459                           
  2460                           ; 2 bytes @ 0x7D
  2461  0000DD                     	ds	1
  2462  0000DE                     AssemblePacket@bufferLength:
  2463                           	opt stack 0
  2464  0000DE                     LORAWAN_TxDone@ticks:
  2465                           	opt stack 0
  2466                           
  2467                           ; 4 bytes @ 0x7E
  2468  0000DE                     	ds	1
  2469  0000DF                     ComputeMic@bufferLength:
  2470                           	opt stack 0
  2471                           
  2472                           ; 1 bytes @ 0x7F
  2473  0000DF                     	ds	1
  2474  0000E0                     ??_AssemblePacket:
  2475  0000E0                     ComputeMic@mic:
  2476                           	opt stack 0
  2477                           
  2478                           ; 4 bytes @ 0x80
  2479  0000E0                     	ds	2
  2480  0000E2                     AssemblePacket@confirmed:
  2481                           	opt stack 0
  2482  0000E2                     LORAWAN_TxDone@minim:
  2483                           	opt stack 0
  2484                           
  2485                           ; 4 bytes @ 0x82
  2486  0000E2                     	ds	1
  2487  0000E3                     AssemblePacket@mhdr:
  2488                           	opt stack 0
  2489                           
  2490                           ; 1 bytes @ 0x83
  2491  0000E3                     	ds	1
  2492  0000E4                     ??_PrepareJoinRequestFrame:
  2493  0000E4                     AssemblePacket@fCtrl:
  2494                           	opt stack 0
  2495                           
  2496                           ; 1 bytes @ 0x84
  2497  0000E4                     	ds	1
  2498  0000E5                     AssemblePacket@macCmdIdx:
  2499                           	opt stack 0
  2500                           
  2501                           ; 1 bytes @ 0x85
  2502  0000E5                     	ds	1
  2503  0000E6                     LORAWAN_TxDone@i:
  2504                           	opt stack 0
  2505  0000E6                     AssemblePacket@bufferIndex:
  2506                           	opt stack 0
  2507                           
  2508                           ; 1 bytes @ 0x86
  2509  0000E6                     	ds	1
  2510  0000E7                     ??_RADIO_TxDone:
  2511  0000E7                     ??_RADIO_FSKPacketSent:
  2512  0000E7                     LORAWAN_Send@port:
  2513                           	opt stack 0
  2514                           
  2515                           ; 1 bytes @ 0x87
  2516  0000E7                     	ds	1
  2517  0000E8                     LORAWAN_Send@buffer:
  2518                           	opt stack 0
  2519  0000E8                     PrepareJoinRequestFrame@mic:
  2520                           	opt stack 0
  2521                           
  2522                           ; 4 bytes @ 0x88
  2523  0000E8                     	ds	2
  2524  0000EA                     LORAWAN_Send@bufferLength:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x8A
  2528  0000EA                     	ds	1
  2529  0000EB                     ??_LORAWAN_Send:
  2530  0000EB                     RADIO_TxDone@timeOnAir:
  2531                           	opt stack 0
  2532  0000EB                     RADIO_FSKPacketSent@timeOnAir:
  2533                           	opt stack 0
  2534                           
  2535                           ; 4 bytes @ 0x8B
  2536  0000EB                     	ds	1
  2537  0000EC                     LORAWAN_Send@result:
  2538                           	opt stack 0
  2539  0000EC                     PrepareJoinRequestFrame@mhdr:
  2540                           	opt stack 0
  2541                           
  2542                           ; 1 bytes @ 0x8C
  2543  0000EC                     	ds	1
  2544  0000ED                     LORAWAN_Send@confirmed:
  2545                           	opt stack 0
  2546  0000ED                     PrepareJoinRequestFrame@iCtr:
  2547                           	opt stack 0
  2548                           
  2549                           ; 1 bytes @ 0x8D
  2550  0000ED                     	ds	1
  2551  0000EE                     ??_SwTimersExecute:
  2552  0000EE                     PrepareJoinRequestFrame@bufferIndex:
  2553                           	opt stack 0
  2554  0000EE                     LORAWAN_RxDone@buffer:
  2555                           	opt stack 0
  2556                           
  2557                           ; 2 bytes @ 0x8E
  2558  0000EE                     	ds	1
  2559  0000EF                     LORAWAN_Join@bufferIndex:
  2560                           	opt stack 0
  2561  0000EF                     _RADIO_TxDone$1207:
  2562                           	opt stack 0
  2563  0000EF                     _RADIO_FSKPacketSent$1211:
  2564                           	opt stack 0
  2565                           
  2566                           ; 4 bytes @ 0x8F
  2567  0000EF                     	ds	1
  2568  0000F0                     LORAWAN_Join@result:
  2569                           	opt stack 0
  2570  0000F0                     LORAWAN_RxDone@bufferLength:
  2571                           	opt stack 0
  2572                           
  2573                           ; 1 bytes @ 0x90
  2574  0000F0                     	ds	1
  2575  0000F1                     RADIO_RxDone@irqFlags:
  2576                           	opt stack 0
  2577  0000F1                     RADIO_FSKPayloadReady@irqFlags:
  2578                           	opt stack 0
  2579  0000F1                     LORAWAN_Join@activationTypeNew:
  2580                           	opt stack 0
  2581                           
  2582                           ; 1 bytes @ 0x91
  2583  0000F1                     	ds	1
  2584  0000F2                     SwTimersExecute@i:
  2585                           	opt stack 0
  2586  0000F2                     RADIO_RxDone@i:
  2587                           	opt stack 0
  2588  0000F2                     RADIO_FSKPayloadReady@i:
  2589                           	opt stack 0
  2590                           
  2591                           ; 1 bytes @ 0x92
  2592  0000F2                     	ds	1
  2593  0000F3                     RADIO_FSKPacketSent@irqFlags:
  2594                           	opt stack 0
  2595                           
  2596                           ; 1 bytes @ 0x93
  2597  0000F3                     	ds	1
  2598  0000F4                     tblptru	equ	0xFF8
  2599                           tblptrh	equ	0xFF7
  2600                           tblptrl	equ	0xFF6
  2601                           tablat	equ	0xFF5
  2602                           postinc0	equ	0xFEE
  2603                           wreg	equ	0xFE8
  2604                           postdec2	equ	0xFDD
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           
  2608                           ; 1 bytes @ 0x94
  2609                           
  2610                           	psect	cstackCOMRAM
  2611  000001                     __pcstackCOMRAM:
  2612                           	opt stack 0
  2613  000001                     ?i2_TMR1_ReadTimer:
  2614                           	opt stack 0
  2615  000001                     i2TMR1_WriteTimer@timerVal:
  2616                           	opt stack 0
  2617                           
  2618                           ; 2 bytes @ 0x0
  2619  000001                     	ds	2
  2620  000003                     ??i2_TMR1_ReadTimer:
  2621  000003                     
  2622                           ; 1 bytes @ 0x2
  2623  000003                     	ds	2
  2624  000005                     i2TMR1_ReadTimer@readVal:
  2625                           	opt stack 0
  2626                           
  2627                           ; 2 bytes @ 0x4
  2628  000005                     	ds	2
  2629  000007                     i2TMR1_ReadTimer@readValHigh:
  2630                           	opt stack 0
  2631                           
  2632                           ; 1 bytes @ 0x6
  2633  000007                     	ds	1
  2634  000008                     i2TMR1_ReadTimer@readValLow:
  2635                           	opt stack 0
  2636                           
  2637                           ; 1 bytes @ 0x7
  2638  000008                     	ds	1
  2639  000009                     ?i2_TMR_SwapTimer:
  2640                           	opt stack 0
  2641  000009                     ?i2_TMR_GetDeltaTime:
  2642                           	opt stack 0
  2643  000009                     i2TMR_SwapTimer@timerVal:
  2644                           	opt stack 0
  2645                           
  2646                           ; 2 bytes @ 0x8
  2647  000009                     	ds	2
  2648  00000B                     
  2649                           ; 1 bytes @ 0xA
  2650  00000B                     	ds	2
  2651  00000D                     ??i2_TMR_GetDeltaTime:
  2652                           
  2653                           ; 1 bytes @ 0xC
  2654  00000D                     	ds	20
  2655  000021                     ?i2_SwTimersInterrupt:
  2656                           	opt stack 0
  2657                           
  2658                           ; 4 bytes @ 0x20
  2659  000021                     	ds	4
  2660  000025                     
  2661                           ; 1 bytes @ 0x24
  2662  000025                     	ds	4
  2663  000029                     i2SwTimersInterrupt@timeElapsed:
  2664                           	opt stack 0
  2665                           
  2666                           ; 4 bytes @ 0x28
  2667  000029                     	ds	4
  2668  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2669                           	opt stack 0
  2670                           
  2671                           ; 4 bytes @ 0x2C
  2672  00002D                     	ds	4
  2673  000031                     i2SwTimersInterrupt@i:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x30
  2677  000031                     	ds	1
  2678  000032                     ??_TMR_ISR_lora:
  2679                           
  2680                           ; 1 bytes @ 0x31
  2681  000032                     	ds	2
  2682  000034                     ??_INTERRUPT_InterruptManager:
  2683                           
  2684                           ; 1 bytes @ 0x33
  2685  000034                     	ds	8
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           postinc0	equ	0xFEE
  2691                           wreg	equ	0xFE8
  2692                           postdec2	equ	0xFDD
  2693                           fsr2h	equ	0xFDA
  2694                           fsr2l	equ	0xFD9
  2695                           
  2696 ;;
  2697 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2698 ;;
  2699 ;; *************** function _main *****************
  2700 ;; Defined at:
  2701 ;;		line 48 in file "main.c"
  2702 ;; Parameters:    Size  Location     Type
  2703 ;;		None
  2704 ;; Auto vars:     Size  Location     Type
  2705 ;;		None
  2706 ;; Return value:  Size  Location     Type
  2707 ;;                  1    wreg      void 
  2708 ;; Registers used:
  2709 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2710 ;; Tracked objects:
  2711 ;;		On entry : 0/0
  2712 ;;		On exit  : 0/0
  2713 ;;		Unchanged: 0/0
  2714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2715 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;Total ram usage:        0 bytes
  2720 ;; Hardware stack levels required when called:   19
  2721 ;; This function calls:
  2722 ;;		_ADC_Init
  2723 ;;		_IO_pins_init
  2724 ;;		_LORAWAN_GetState
  2725 ;;		_LORAWAN_Init
  2726 ;;		_LORAWAN_Join
  2727 ;;		_LORAWAN_Mainloop
  2728 ;;		_LORAWAN_SetApplicationSessionKey
  2729 ;;		_LORAWAN_SetDeviceAddress
  2730 ;;		_LORAWAN_SetNetworkSessionKey
  2731 ;;		_LoRaSleep
  2732 ;;		_LoRaWakeUp
  2733 ;;		_SYSTEM_Initialize
  2734 ;;		_SysConfigSleep
  2735 ;;		_readAndSend
  2736 ;; This function is called by:
  2737 ;;		Startup code after reset
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           	psect	text0
  2742  0080F4                     __ptext0:
  2743                           	opt stack 0
  2744  0080F4                     _main:
  2745                           	opt stack 12
  2746                           
  2747                           ;main.c: 50: SYSTEM_Initialize();
  2748                           
  2749                           ;incstack = 0
  2750  0080F4  EC1E  F050         	call	_SYSTEM_Initialize	;wreg free
  2751                           
  2752                           ;main.c: 51: PORTAbits.RA4 = 1;
  2753  0080F8  8880               	bsf	3968,4,c	;volatile
  2754                           
  2755                           ;main.c: 54: (INTCONbits.GIE = 1);
  2756  0080FA  8EF2               	bsf	intcon,7,c	;volatile
  2757                           
  2758                           ;main.c: 55: (INTCONbits.PEIE = 1);
  2759  0080FC  8CF2               	bsf	intcon,6,c	;volatile
  2760                           
  2761                           ;main.c: 56: SysConfigSleep();
  2762  0080FE  ECEB  F043         	call	_SysConfigSleep	;wreg free
  2763                           
  2764                           ;main.c: 57: ADC_Init();
  2765  008102  EC67  F051         	call	_ADC_Init	;wreg free
  2766                           
  2767                           ;main.c: 58: IO_pins_init();
  2768  008106  EC29  F051         	call	_IO_pins_init	;wreg free
  2769                           
  2770                           ;main.c: 60: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2771  00810A  0E44               	movlw	low _RxDataDone
  2772  00810C  0100               	movlb	0	; () banked
  2773  00810E  6FB6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2774  008110  0E96               	movlw	high _RxDataDone
  2775  008112  0100               	movlb	0	; () banked
  2776  008114  6FB7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2777  008116  0EDA               	movlw	low _RxJoinResponse
  2778  008118  0100               	movlb	0	; () banked
  2779  00811A  6FB8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2780  00811C  0EA3               	movlw	high _RxJoinResponse
  2781  00811E  0100               	movlb	0	; () banked
  2782  008120  6FB9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2783  008122  EC03  F048         	call	_LORAWAN_Init	;wreg free
  2784                           
  2785                           ;main.c: 61: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2786  008126  0ED5               	movlw	low _nwkSKey
  2787  008128  0100               	movlb	0	; () banked
  2788  00812A  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2789  00812C  0E01               	movlw	high _nwkSKey
  2790  00812E  0100               	movlb	0	; () banked
  2791  008130  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2792  008132  ECF4  F04C         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2793                           
  2794                           ;main.c: 62: LORAWAN_SetApplicationSessionKey(appSKey);
  2795  008136  0EB4               	movlw	low _appSKey
  2796  008138  0100               	movlb	0	; () banked
  2797  00813A  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2798  00813C  0E03               	movlw	high _appSKey
  2799  00813E  0100               	movlb	0	; () banked
  2800  008140  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2801  008142  EC10  F04D         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2802                           
  2803                           ;main.c: 63: LORAWAN_SetDeviceAddress(devAddr);
  2804  008146  C1CC  F064         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2805  00814A  C1CD  F065         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2806  00814E  C1CE  F066         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2807  008152  C1CF  F067         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2808  008156  ECB2  F050         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2809                           
  2810                           ;main.c: 64: LORAWAN_Join(ABP);
  2811  00815A  0E01               	movlw	1
  2812  00815C  ECAA  F03E         	call	_LORAWAN_Join
  2813                           
  2814                           ;main.c: 67: TimeToSend = 1;
  2815  008160  0E01               	movlw	1
  2816  008162  0101               	movlb	1	; () banked
  2817  008164  6F73               	movwf	_TimeToSend& (0+255),b
  2818  008166                     l17827:
  2819                           
  2820                           ;main.c: 70: {
  2821                           ;main.c: 72: LORAWAN_Mainloop();
  2822  008166  EC39  F04C         	call	_LORAWAN_Mainloop	;wreg free
  2823                           
  2824                           ;main.c: 73: PORTAbits.RA4 = 1;
  2825  00816A  8880               	bsf	3968,4,c	;volatile
  2826                           
  2827                           ;main.c: 75: if(TimeToSend){
  2828  00816C  0101               	movlb	1	; () banked
  2829  00816E  5173               	movf	_TimeToSend& (0+255),w,b
  2830  008170  0101               	movlb	1	; () banked
  2831  008172  B4D8               	btfsc	status,2,c
  2832  008174  D007               	goto	l17839
  2833                           
  2834                           ; BSR set to: 1
  2835                           ;main.c: 76: LoRaWakeUp();
  2836  008176  EC92  F051         	call	_LoRaWakeUp	;wreg free
  2837                           
  2838                           ;main.c: 77: readAndSend();
  2839  00817A  EC8F  F04E         	call	_readAndSend	;wreg free
  2840                           
  2841                           ;main.c: 78: TimeToSend = 0;
  2842  00817E  0E00               	movlw	0
  2843  008180  0101               	movlb	1	; () banked
  2844  008182  6F73               	movwf	_TimeToSend& (0+255),b
  2845  008184                     l17839:
  2846                           
  2847                           ; BSR set to: 1
  2848                           ;main.c: 80: }
  2849                           ;main.c: 82: if(LORAWAN_GetState() == IDLE){
  2850  008184  ECD2  F051         	call	_LORAWAN_GetState	;wreg free
  2851  008188  0900               	iorlw	0
  2852  00818A  A4D8               	btfss	status,2,c
  2853  00818C  D7EC               	goto	l17827
  2854                           
  2855                           ;main.c: 83: PORTCbits.RC0 = 1;
  2856  00818E  8082               	bsf	3970,0,c	;volatile
  2857                           
  2858                           ;main.c: 84: LoRaSleep();
  2859  008190  ECD1  F04E         	call	_LoRaSleep	;wreg free
  2860                           
  2861                           ;main.c: 85: PORTDbits.RD2 = 0;
  2862  008194  9483               	bcf	3971,2,c	;volatile
  2863                           
  2864                           ;main.c: 86: PORTAbits.RA4 = 0;
  2865  008196  9880               	bcf	3968,4,c	;volatile
  2866                           
  2867                           ;main.c: 87: PORTCbits.RC0 = 0;
  2868  008198  9082               	bcf	3970,0,c	;volatile
  2869  00819A  0003               	sleep		;# 
  2870                           
  2871                           ;main.c: 89: PORTDbits.RD2 = 1;
  2872  00819C  8483               	bsf	3971,2,c	;volatile
  2873  00819E  D7E3               	goto	l17827
  2874  0081A0                     __end_of_main:
  2875                           	opt stack 0
  2876                           tblptru	equ	0xFF8
  2877                           tblptrh	equ	0xFF7
  2878                           tblptrl	equ	0xFF6
  2879                           tablat	equ	0xFF5
  2880                           intcon	equ	0xFF2
  2881                           postinc0	equ	0xFEE
  2882                           wreg	equ	0xFE8
  2883                           postdec2	equ	0xFDD
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _readAndSend *****************
  2889 ;; Defined at:
  2890 ;;		line 112 in file "main.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;		None
  2893 ;; Auto vars:     Size  Location     Type
  2894 ;;		None
  2895 ;; Return value:  Size  Location     Type
  2896 ;;                  1    wreg      void 
  2897 ;; Registers used:
  2898 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2899 ;; Tracked objects:
  2900 ;;		On entry : 0/0
  2901 ;;		On exit  : 0/0
  2902 ;;		Unchanged: 0/0
  2903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2904 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2905 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;Total ram usage:        0 bytes
  2909 ;; Hardware stack levels used:    1
  2910 ;; Hardware stack levels required when called:   14
  2911 ;; This function calls:
  2912 ;;		_ADC_Read
  2913 ;;		_LORAWAN_Send
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text1
  2920  009D1E                     __ptext1:
  2921                           	opt stack 0
  2922  009D1E                     _readAndSend:
  2923                           	opt stack 16
  2924                           
  2925                           ;main.c: 113: payload[0] = ADC_Read(37);
  2926                           
  2927                           ;incstack = 0
  2928  009D1E  0E25               	movlw	37
  2929  009D20  ECD6  F04A         	call	_ADC_Read
  2930  009D24  C066  F1BA         	movff	?_ADC_Read,_payload
  2931  009D28  C067  F1BB         	movff	?_ADC_Read+1,_payload+1
  2932                           
  2933                           ;main.c: 114: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  2934  009D2C  C1D4  F0E7         	movff	_portNumber,LORAWAN_Send@port
  2935  009D30  0EBA               	movlw	low _payload
  2936  009D32  0100               	movlb	0	; () banked
  2937  009D34  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
  2938  009D36  0E01               	movlw	high _payload
  2939  009D38  0100               	movlb	0	; () banked
  2940  009D3A  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  2941  009D3C  0E02               	movlw	2
  2942  009D3E  0100               	movlb	0	; () banked
  2943  009D40  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  2944  009D42  0E00               	movlw	0
  2945  009D44  EC4E  F03B         	call	_LORAWAN_Send
  2946  009D48  0012               	return		;funcret
  2947  009D4A                     __end_of_readAndSend:
  2948                           	opt stack 0
  2949                           tblptru	equ	0xFF8
  2950                           tblptrh	equ	0xFF7
  2951                           tblptrl	equ	0xFF6
  2952                           tablat	equ	0xFF5
  2953                           intcon	equ	0xFF2
  2954                           postinc0	equ	0xFEE
  2955                           wreg	equ	0xFE8
  2956                           postdec2	equ	0xFDD
  2957                           fsr2h	equ	0xFDA
  2958                           fsr2l	equ	0xFD9
  2959                           status	equ	0xFD8
  2960                           
  2961 ;; *************** function _ADC_Read *****************
  2962 ;; Defined at:
  2963 ;;		line 133 in file "main.c"
  2964 ;; Parameters:    Size  Location     Type
  2965 ;;  channel         1    wreg     unsigned char 
  2966 ;; Auto vars:     Size  Location     Type
  2967 ;;  channel         1   10[BANK0 ] unsigned char 
  2968 ;;  result          2   11[BANK0 ] unsigned int 
  2969 ;; Return value:  Size  Location     Type
  2970 ;;                  2    6[BANK0 ] unsigned int 
  2971 ;; Registers used:
  2972 ;;		wreg, status,2, status,0, cstack
  2973 ;; Tracked objects:
  2974 ;;		On entry : 0/0
  2975 ;;		On exit  : 0/0
  2976 ;;		Unchanged: 0/0
  2977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2978 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2979 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2980 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2981 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2982 ;;Total ram usage:        7 bytes
  2983 ;; Hardware stack levels used:    1
  2984 ;; Hardware stack levels required when called:    8
  2985 ;; This function calls:
  2986 ;;		_ADC_SelChannel
  2987 ;; This function is called by:
  2988 ;;		_readAndSend
  2989 ;; This function uses a non-reentrant model
  2990 ;;
  2991                           
  2992                           	psect	text2
  2993  0095AC                     __ptext2:
  2994                           	opt stack 0
  2995  0095AC                     _ADC_Read:
  2996                           	opt stack 21
  2997                           
  2998                           ;incstack = 0
  2999                           ;ADC_Read@channel stored from wreg
  3000  0095AC  0100               	movlb	0	; () banked
  3001  0095AE  6F6A               	movwf	ADC_Read@channel& (0+255),b
  3002                           
  3003                           ;main.c: 134: uint16_t result = 0;
  3004  0095B0  0E00               	movlw	0
  3005  0095B2  0100               	movlb	0	; () banked
  3006  0095B4  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  3007  0095B6  0E00               	movlw	0
  3008  0095B8  6F6B               	movwf	ADC_Read@result& (0+255),b
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;main.c: 135: ADCON0bits.ADON = 1;
  3012  0095BA  80C2               	bsf	4034,0,c	;volatile
  3013                           
  3014                           ; BSR set to: 0
  3015                           ;main.c: 136: ADC_SelChannel(channel);
  3016  0095BC  0100               	movlb	0	; () banked
  3017  0095BE  516A               	movf	ADC_Read@channel& (0+255),w,b
  3018  0095C0  EC96  F050         	call	_ADC_SelChannel
  3019                           
  3020                           ;main.c: 137: ADCON0bits.GO = 1;
  3021  0095C4  82C2               	bsf	4034,1,c	;volatile
  3022  0095C6                     l2674:
  3023  0095C6  B2C2               	btfsc	4034,1,c	;volatile
  3024  0095C8  D7FE               	goto	l2674
  3025                           
  3026                           ;main.c: 139: result = (ADRESH<<8) | ADRESL;
  3027  0095CA  50C3               	movf	4035,w,c	;volatile
  3028  0095CC  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  3029  0095D0  0100               	movlb	0	; () banked
  3030  0095D2  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  3031  0095D4  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  3032  0095D8  0100               	movlb	0	; () banked
  3033  0095DA  6B68               	clrf	??_ADC_Read& (0+255),b
  3034  0095DC  0100               	movlb	0	; () banked
  3035  0095DE  1168               	iorwf	??_ADC_Read& (0+255),w,b
  3036  0095E0  0100               	movlb	0	; () banked
  3037  0095E2  6F6B               	movwf	ADC_Read@result& (0+255),b
  3038  0095E4  0100               	movlb	0	; () banked
  3039  0095E6  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  3040  0095E8  0100               	movlb	0	; () banked
  3041  0095EA  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;main.c: 140: ADCON0bits.ADON = 0;
  3045  0095EC  90C2               	bcf	4034,0,c	;volatile
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;main.c: 141: return result;
  3049  0095EE  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  3050  0095F2  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  3051  0095F6  0012               	return	
  3052  0095F8                     __end_of_ADC_Read:
  3053                           	opt stack 0
  3054                           tblptru	equ	0xFF8
  3055                           tblptrh	equ	0xFF7
  3056                           tblptrl	equ	0xFF6
  3057                           tablat	equ	0xFF5
  3058                           intcon	equ	0xFF2
  3059                           postinc0	equ	0xFEE
  3060                           wreg	equ	0xFE8
  3061                           postdec2	equ	0xFDD
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _ADC_SelChannel *****************
  3067 ;; Defined at:
  3068 ;;		line 128 in file "main.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;  c               1    wreg     unsigned char 
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;  c               1    5[BANK0 ] unsigned char 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2, status,0
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        2 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    7
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_ADC_Read
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text3
  3097  00A12C                     __ptext3:
  3098                           	opt stack 0
  3099  00A12C                     _ADC_SelChannel:
  3100                           	opt stack 21
  3101                           
  3102                           ; BSR set to: 0
  3103                           ;incstack = 0
  3104                           ;ADC_SelChannel@c stored from wreg
  3105  00A12C  0100               	movlb	0	; () banked
  3106  00A12E  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  3107                           
  3108                           ;main.c: 129: ADCON0bits.CHS = c;
  3109  00A130  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  3110  00A134  0100               	movlb	0	; () banked
  3111  00A136  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3112  00A138  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3113  00A13A  50C2               	movf	4034,w,c	;volatile
  3114  00A13C  0100               	movlb	0	; () banked
  3115  00A13E  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3116  00A140  0B83               	andlw	-125
  3117  00A142  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3118  00A144  6EC2               	movwf	4034,c	;volatile
  3119  00A146  0012               	return	
  3120  00A148                     __end_of_ADC_SelChannel:
  3121                           	opt stack 0
  3122                           tblptru	equ	0xFF8
  3123                           tblptrh	equ	0xFF7
  3124                           tblptrl	equ	0xFF6
  3125                           tablat	equ	0xFF5
  3126                           intcon	equ	0xFF2
  3127                           postinc0	equ	0xFEE
  3128                           wreg	equ	0xFE8
  3129                           postdec2	equ	0xFDD
  3130                           fsr2h	equ	0xFDA
  3131                           fsr2l	equ	0xFD9
  3132                           status	equ	0xFD8
  3133                           
  3134 ;; *************** function _SysConfigSleep *****************
  3135 ;; Defined at:
  3136 ;;		line 151 in file "main.c"
  3137 ;; Parameters:    Size  Location     Type
  3138 ;;		None
  3139 ;; Auto vars:     Size  Location     Type
  3140 ;;		None
  3141 ;; Return value:  Size  Location     Type
  3142 ;;                  1    wreg      void 
  3143 ;; Registers used:
  3144 ;;		wreg, status,2
  3145 ;; Tracked objects:
  3146 ;;		On entry : 0/0
  3147 ;;		On exit  : 0/0
  3148 ;;		Unchanged: 0/0
  3149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;Total ram usage:        0 bytes
  3155 ;; Hardware stack levels used:    1
  3156 ;; Hardware stack levels required when called:    7
  3157 ;; This function calls:
  3158 ;;		Nothing
  3159 ;; This function is called by:
  3160 ;;		_main
  3161 ;; This function uses a non-reentrant model
  3162 ;;
  3163                           
  3164                           	psect	text4
  3165  0087D6                     __ptext4:
  3166                           	opt stack 0
  3167  0087D6                     _SysConfigSleep:
  3168                           	opt stack 23
  3169                           
  3170                           ;main.c: 154: UART2MD = 1;
  3171                           
  3172                           ; BSR set to: 0
  3173                           ;incstack = 0
  3174  0087D6  010F               	movlb	15	; () banked
  3175  0087D8  8F3F               	bsf	63,7,b	;volatile
  3176                           
  3177                           ;main.c: 155: UART1MD = 1;
  3178  0087DA  010F               	movlb	15	; () banked
  3179  0087DC  8D3F               	bsf	63,6,b	;volatile
  3180                           
  3181                           ;main.c: 156: TMR6MD = 1;
  3182  0087DE  010F               	movlb	15	; () banked
  3183  0087E0  8B3F               	bsf	63,5,b	;volatile
  3184                           
  3185                           ;main.c: 157: TMR5MD = 1;
  3186  0087E2  010F               	movlb	15	; () banked
  3187  0087E4  893F               	bsf	63,4,b	;volatile
  3188                           
  3189                           ;main.c: 158: TMR4MD = 1;
  3190  0087E6  010F               	movlb	15	; () banked
  3191  0087E8  873F               	bsf	63,3,b	;volatile
  3192                           
  3193                           ;main.c: 159: TMR2MD = 1;
  3194  0087EA  010F               	movlb	15	; () banked
  3195  0087EC  833F               	bsf	63,1,b	;volatile
  3196                           
  3197                           ;main.c: 160: MSSP1MD = 1;
  3198  0087EE  010F               	movlb	15	; () banked
  3199  0087F0  8D3E               	bsf	62,6,b	;volatile
  3200                           
  3201                           ;main.c: 161: CCP5MD = 1;
  3202  0087F2  010F               	movlb	15	; () banked
  3203  0087F4  893E               	bsf	62,4,b	;volatile
  3204                           
  3205                           ;main.c: 162: CCP4MD = 1;
  3206  0087F6  010F               	movlb	15	; () banked
  3207  0087F8  873E               	bsf	62,3,b	;volatile
  3208                           
  3209                           ;main.c: 163: CCP3MD = 1;
  3210  0087FA  010F               	movlb	15	; () banked
  3211  0087FC  853E               	bsf	62,2,b	;volatile
  3212                           
  3213                           ;main.c: 164: CCP2MD = 1;
  3214  0087FE  010F               	movlb	15	; () banked
  3215  008800  833E               	bsf	62,1,b	;volatile
  3216                           
  3217                           ;main.c: 165: CCP1MD = 1;
  3218  008802  010F               	movlb	15	; () banked
  3219  008804  813E               	bsf	62,0,b	;volatile
  3220                           
  3221                           ;main.c: 166: CTMUMD = 1;
  3222  008806  010F               	movlb	15	; () banked
  3223  008808  873D               	bsf	61,3,b	;volatile
  3224                           
  3225                           ;main.c: 167: CMP2MD = 1;
  3226  00880A  010F               	movlb	15	; () banked
  3227  00880C  853D               	bsf	61,2,b	;volatile
  3228                           
  3229                           ;main.c: 168: CMP1MD = 1;
  3230  00880E  010F               	movlb	15	; () banked
  3231  008810  833D               	bsf	61,1,b	;volatile
  3232                           
  3233                           ;main.c: 171: IDLEN = 0;
  3234  008812  9ED3               	bcf	4051,7,c	;volatile
  3235                           
  3236                           ; BSR set to: 15
  3237                           ;main.c: 175: TRISA = 0x00;
  3238  008814  0E00               	movlw	0
  3239  008816  6E92               	movwf	3986,c	;volatile
  3240                           
  3241                           ;main.c: 176: LATA = 0x00;
  3242  008818  0E00               	movlw	0
  3243  00881A  6E89               	movwf	3977,c	;volatile
  3244                           
  3245                           ; BSR set to: 15
  3246                           ;main.c: 179: TRISBbits.RB4 = 0;
  3247  00881C  9893               	bcf	3987,4,c	;volatile
  3248                           
  3249                           ; BSR set to: 15
  3250                           ;main.c: 180: TRISBbits.RB5 = 0;
  3251  00881E  9A93               	bcf	3987,5,c	;volatile
  3252                           
  3253                           ; BSR set to: 15
  3254                           ;main.c: 181: TRISBbits.RB6 = 0;
  3255  008820  9C93               	bcf	3987,6,c	;volatile
  3256                           
  3257                           ; BSR set to: 15
  3258                           ;main.c: 182: TRISBbits.RB7 = 0;
  3259  008822  9E93               	bcf	3987,7,c	;volatile
  3260                           
  3261                           ; BSR set to: 15
  3262                           ;main.c: 183: LATBbits.LATB4 = 0;
  3263  008824  988A               	bcf	3978,4,c	;volatile
  3264                           
  3265                           ; BSR set to: 15
  3266                           ;main.c: 184: LATBbits.LATB5 = 0;
  3267  008826  9A8A               	bcf	3978,5,c	;volatile
  3268                           
  3269                           ; BSR set to: 15
  3270                           ;main.c: 185: LATBbits.LATB6 = 0;
  3271  008828  9C8A               	bcf	3978,6,c	;volatile
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;main.c: 186: LATBbits.LATB7 = 0;
  3275  00882A  9E8A               	bcf	3978,7,c	;volatile
  3276                           
  3277                           ; BSR set to: 15
  3278                           ;main.c: 189: TRISCbits.RC0 = 0;
  3279  00882C  9094               	bcf	3988,0,c	;volatile
  3280                           
  3281                           ; BSR set to: 15
  3282                           ;main.c: 190: TRISCbits.RC1 = 0;
  3283  00882E  9294               	bcf	3988,1,c	;volatile
  3284                           
  3285                           ; BSR set to: 15
  3286                           ;main.c: 191: TRISCbits.RC3 = 0;
  3287  008830  9694               	bcf	3988,3,c	;volatile
  3288                           
  3289                           ; BSR set to: 15
  3290                           ;main.c: 192: TRISCbits.RC4 = 0;
  3291  008832  9894               	bcf	3988,4,c	;volatile
  3292                           
  3293                           ; BSR set to: 15
  3294                           ;main.c: 194: TRISCbits.RC6 = 0;
  3295  008834  9C94               	bcf	3988,6,c	;volatile
  3296                           
  3297                           ; BSR set to: 15
  3298                           ;main.c: 195: TRISCbits.RC7 = 0;
  3299  008836  9E94               	bcf	3988,7,c	;volatile
  3300                           
  3301                           ; BSR set to: 15
  3302                           ;main.c: 196: LATCbits.LATC0 = 0;
  3303  008838  908B               	bcf	3979,0,c	;volatile
  3304                           
  3305                           ; BSR set to: 15
  3306                           ;main.c: 197: LATCbits.LATC1 = 0;
  3307  00883A  928B               	bcf	3979,1,c	;volatile
  3308                           
  3309                           ; BSR set to: 15
  3310                           ;main.c: 198: LATCbits.LATC3 = 0;
  3311  00883C  968B               	bcf	3979,3,c	;volatile
  3312                           
  3313                           ; BSR set to: 15
  3314                           ;main.c: 199: LATCbits.LATC4 = 0;
  3315  00883E  988B               	bcf	3979,4,c	;volatile
  3316                           
  3317                           ; BSR set to: 15
  3318                           ;main.c: 201: LATCbits.LATC6 = 0;
  3319  008840  9C8B               	bcf	3979,6,c	;volatile
  3320                           
  3321                           ; BSR set to: 15
  3322                           ;main.c: 202: LATCbits.LATC7 = 0;
  3323  008842  9E8B               	bcf	3979,7,c	;volatile
  3324                           
  3325                           ; BSR set to: 15
  3326                           ;main.c: 205: TRISDbits.RD0 = 0;
  3327  008844  9095               	bcf	3989,0,c	;volatile
  3328                           
  3329                           ; BSR set to: 15
  3330                           ;main.c: 206: TRISDbits.RD1 = 0;
  3331  008846  9295               	bcf	3989,1,c	;volatile
  3332                           
  3333                           ; BSR set to: 15
  3334                           ;main.c: 207: TRISDbits.RD2 = 0;
  3335  008848  9495               	bcf	3989,2,c	;volatile
  3336                           
  3337                           ; BSR set to: 15
  3338                           ;main.c: 208: TRISDbits.RD4 = 0;
  3339  00884A  9895               	bcf	3989,4,c	;volatile
  3340                           
  3341                           ; BSR set to: 15
  3342                           ;main.c: 209: TRISDbits.RD5 = 0;
  3343  00884C  9A95               	bcf	3989,5,c	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;main.c: 210: TRISDbits.RD7 = 0;
  3347  00884E  9E95               	bcf	3989,7,c	;volatile
  3348                           
  3349                           ; BSR set to: 15
  3350                           ;main.c: 211: LATDbits.LATD0 = 0;
  3351  008850  908C               	bcf	3980,0,c	;volatile
  3352                           
  3353                           ; BSR set to: 15
  3354                           ;main.c: 212: LATDbits.LATD1 = 0;
  3355  008852  928C               	bcf	3980,1,c	;volatile
  3356                           
  3357                           ; BSR set to: 15
  3358                           ;main.c: 213: LATDbits.LATD2 = 0;
  3359  008854  948C               	bcf	3980,2,c	;volatile
  3360                           
  3361                           ; BSR set to: 15
  3362                           ;main.c: 214: LATDbits.LATD4 = 0;
  3363  008856  988C               	bcf	3980,4,c	;volatile
  3364                           
  3365                           ; BSR set to: 15
  3366                           ;main.c: 219: TRISEbits.RE0 = 0;
  3367  008858  9096               	bcf	3990,0,c	;volatile
  3368                           
  3369                           ; BSR set to: 15
  3370                           ;main.c: 220: TRISEbits.RE1 = 0;
  3371  00885A  9296               	bcf	3990,1,c	;volatile
  3372                           
  3373                           ; BSR set to: 15
  3374                           ;main.c: 221: TRISEbits.RE2 = 0;
  3375  00885C  9496               	bcf	3990,2,c	;volatile
  3376                           
  3377                           ; BSR set to: 15
  3378                           ;main.c: 222: LATEbits.LATE0 = 0;
  3379  00885E  908D               	bcf	3981,0,c	;volatile
  3380                           
  3381                           ; BSR set to: 15
  3382                           ;main.c: 223: LATEbits.LATE1 = 0;
  3383  008860  928D               	bcf	3981,1,c	;volatile
  3384                           
  3385                           ; BSR set to: 15
  3386                           ;main.c: 224: LATEbits.LATE2 = 0;
  3387  008862  948D               	bcf	3981,2,c	;volatile
  3388                           
  3389                           ; BSR set to: 15
  3390  008864  0012               	return		;funcret
  3391  008866                     __end_of_SysConfigSleep:
  3392                           	opt stack 0
  3393                           tblptru	equ	0xFF8
  3394                           tblptrh	equ	0xFF7
  3395                           tblptrl	equ	0xFF6
  3396                           tablat	equ	0xFF5
  3397                           intcon	equ	0xFF2
  3398                           postinc0	equ	0xFEE
  3399                           wreg	equ	0xFE8
  3400                           postdec2	equ	0xFDD
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _SYSTEM_Initialize *****************
  3406 ;; Defined at:
  3407 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2, status,0, cstack
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3421 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:   10
  3428 ;; This function calls:
  3429 ;;		_EXT_INT_Initialize
  3430 ;;		_INTERRUPT_Initialize
  3431 ;;		_LORAWAN_PlatformInit
  3432 ;;		_OSCILLATOR_Initialize
  3433 ;;		_PIN_MANAGER_Initialize
  3434 ;;		_SPI2_Initialize
  3435 ;;		_TMR1_Initialize
  3436 ;; This function is called by:
  3437 ;;		_main
  3438 ;; This function uses a non-reentrant model
  3439 ;;
  3440                           
  3441                           	psect	text5
  3442  00A03C                     __ptext5:
  3443                           	opt stack 0
  3444  00A03C                     _SYSTEM_Initialize:
  3445                           	opt stack 20
  3446                           
  3447                           ;mcc.c: 114: INTERRUPT_Initialize();
  3448                           
  3449                           ; BSR set to: 15
  3450                           ;incstack = 0
  3451  00A03C  ECEB  F051         	call	_INTERRUPT_Initialize	;wreg free
  3452                           
  3453                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3454  00A040  ECF7  F046         	call	_PIN_MANAGER_Initialize	;wreg free
  3455                           
  3456                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3457  00A044  EC52  F051         	call	_OSCILLATOR_Initialize	;wreg free
  3458                           
  3459                           ;mcc.c: 117: SPI2_Initialize();
  3460  00A048  EC59  F051         	call	_SPI2_Initialize	;wreg free
  3461                           
  3462                           ;mcc.c: 118: EXT_INT_Initialize();
  3463  00A04C  EC18  F04C         	call	_EXT_INT_Initialize	;wreg free
  3464                           
  3465                           ;mcc.c: 119: TMR1_Initialize();
  3466  00A050  ECE8  F04D         	call	_TMR1_Initialize	;wreg free
  3467                           
  3468                           ;mcc.c: 120: LORAWAN_PlatformInit();
  3469  00A054  ECCC  F04F         	call	_LORAWAN_PlatformInit	;wreg free
  3470  00A058  0012               	return		;funcret
  3471  00A05A                     __end_of_SYSTEM_Initialize:
  3472                           	opt stack 0
  3473                           tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           intcon	equ	0xFF2
  3478                           postinc0	equ	0xFEE
  3479                           wreg	equ	0xFE8
  3480                           postdec2	equ	0xFDD
  3481                           fsr2h	equ	0xFDA
  3482                           fsr2l	equ	0xFD9
  3483                           status	equ	0xFD8
  3484                           
  3485 ;; *************** function _TMR1_Initialize *****************
  3486 ;; Defined at:
  3487 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3488 ;; Parameters:    Size  Location     Type
  3489 ;;		None
  3490 ;; Auto vars:     Size  Location     Type
  3491 ;;		None
  3492 ;; Return value:  Size  Location     Type
  3493 ;;                  1    wreg      void 
  3494 ;; Registers used:
  3495 ;;		wreg, status,2, status,0, cstack
  3496 ;; Tracked objects:
  3497 ;;		On entry : 0/0
  3498 ;;		On exit  : 0/0
  3499 ;;		Unchanged: 0/0
  3500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3505 ;;Total ram usage:        0 bytes
  3506 ;; Hardware stack levels used:    1
  3507 ;; Hardware stack levels required when called:    8
  3508 ;; This function calls:
  3509 ;;		_TMR1_SetInterruptHandler
  3510 ;;		_TMR1_StartTimer
  3511 ;; This function is called by:
  3512 ;;		_SYSTEM_Initialize
  3513 ;; This function uses a non-reentrant model
  3514 ;;
  3515                           
  3516                           	psect	text6
  3517  009BD0                     __ptext6:
  3518                           	opt stack 0
  3519  009BD0                     _TMR1_Initialize:
  3520                           	opt stack 21
  3521                           
  3522                           ;tmr1.c: 67: T1CON = 0x88;
  3523                           
  3524                           ;incstack = 0
  3525  009BD0  0E88               	movlw	136
  3526  009BD2  6ECD               	movwf	4045,c	;volatile
  3527                           
  3528                           ;tmr1.c: 70: T1GCON = 0x00;
  3529  009BD4  0E00               	movlw	0
  3530  009BD6  6ECC               	movwf	4044,c	;volatile
  3531                           
  3532                           ;tmr1.c: 73: TMR1H = 0x00;
  3533  009BD8  0E00               	movlw	0
  3534  009BDA  6ECF               	movwf	4047,c	;volatile
  3535                           
  3536                           ;tmr1.c: 76: TMR1L = 0x00;
  3537  009BDC  0E00               	movlw	0
  3538  009BDE  6ECE               	movwf	4046,c	;volatile
  3539                           
  3540                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3541  009BE0  CFCE F05E          	movff	4046,_timer1ReloadVal	;volatile
  3542  009BE4  CFCF F05F          	movff	4047,_timer1ReloadVal+1	;volatile
  3543                           
  3544                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3545  009BE8  909E               	bcf	3998,0,c	;volatile
  3546                           
  3547                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3548  009BEA  809D               	bsf	3997,0,c	;volatile
  3549                           
  3550                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3551  009BEC  0EFE               	movlw	low _TMR1_DefaultInterruptHandler
  3552  009BEE  0100               	movlb	0	; () banked
  3553  009BF0  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3554  009BF2  0EA3               	movlw	high _TMR1_DefaultInterruptHandler
  3555  009BF4  0100               	movlb	0	; () banked
  3556  009BF6  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3557  009BF8  EC79  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  3558                           
  3559                           ;tmr1.c: 91: TMR1_StartTimer();
  3560  009BFC  ECE9  F051         	call	_TMR1_StartTimer	;wreg free
  3561  009C00  0012               	return		;funcret
  3562  009C02                     __end_of_TMR1_Initialize:
  3563                           	opt stack 0
  3564                           tblptru	equ	0xFF8
  3565                           tblptrh	equ	0xFF7
  3566                           tblptrl	equ	0xFF6
  3567                           tablat	equ	0xFF5
  3568                           intcon	equ	0xFF2
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           postdec2	equ	0xFDD
  3572                           fsr2h	equ	0xFDA
  3573                           fsr2l	equ	0xFD9
  3574                           status	equ	0xFD8
  3575                           
  3576 ;; *************** function _TMR1_StartTimer *****************
  3577 ;; Defined at:
  3578 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3579 ;; Parameters:    Size  Location     Type
  3580 ;;		None
  3581 ;; Auto vars:     Size  Location     Type
  3582 ;;		None
  3583 ;; Return value:  Size  Location     Type
  3584 ;;                  1    wreg      void 
  3585 ;; Registers used:
  3586 ;;		None
  3587 ;; Tracked objects:
  3588 ;;		On entry : 0/0
  3589 ;;		On exit  : 0/0
  3590 ;;		Unchanged: 0/0
  3591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3592 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3593 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;Total ram usage:        0 bytes
  3597 ;; Hardware stack levels used:    1
  3598 ;; Hardware stack levels required when called:    7
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_TMR1_Initialize
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text7
  3607  00A3D2                     __ptext7:
  3608                           	opt stack 0
  3609  00A3D2                     _TMR1_StartTimer:
  3610                           	opt stack 21
  3611                           
  3612                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3613                           
  3614                           ;incstack = 0
  3615  00A3D2  80CD               	bsf	4045,0,c	;volatile
  3616  00A3D4  0012               	return		;funcret
  3617  00A3D6                     __end_of_TMR1_StartTimer:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           intcon	equ	0xFF2
  3624                           postinc0	equ	0xFEE
  3625                           wreg	equ	0xFE8
  3626                           postdec2	equ	0xFDD
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _PIN_MANAGER_Initialize *****************
  3632 ;; Defined at:
  3633 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;		None
  3636 ;; Auto vars:     Size  Location     Type
  3637 ;;		None
  3638 ;; Return value:  Size  Location     Type
  3639 ;;                  1    wreg      void 
  3640 ;; Registers used:
  3641 ;;		wreg, status,2, status,0, cstack
  3642 ;; Tracked objects:
  3643 ;;		On entry : 0/0
  3644 ;;		On exit  : 0/0
  3645 ;;		Unchanged: 0/0
  3646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3650 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3651 ;;Total ram usage:        0 bytes
  3652 ;; Hardware stack levels used:    1
  3653 ;; Hardware stack levels required when called:    8
  3654 ;; This function calls:
  3655 ;;		_IOCB4_SetInterruptHandler
  3656 ;;		_IOCB5_SetInterruptHandler
  3657 ;; This function is called by:
  3658 ;;		_SYSTEM_Initialize
  3659 ;; This function uses a non-reentrant model
  3660 ;;
  3661                           
  3662                           	psect	text8
  3663  008DEE                     __ptext8:
  3664                           	opt stack 0
  3665  008DEE                     _PIN_MANAGER_Initialize:
  3666                           	opt stack 21
  3667                           
  3668                           ;pin_manager.c: 58: LATE = 0x00;
  3669                           
  3670                           ;incstack = 0
  3671  008DEE  0E00               	movlw	0
  3672  008DF0  6E8D               	movwf	3981,c	;volatile
  3673                           
  3674                           ;pin_manager.c: 59: LATD = 0x00;
  3675  008DF2  0E00               	movlw	0
  3676  008DF4  6E8C               	movwf	3980,c	;volatile
  3677                           
  3678                           ;pin_manager.c: 60: LATA = 0x00;
  3679  008DF6  0E00               	movlw	0
  3680  008DF8  6E89               	movwf	3977,c	;volatile
  3681                           
  3682                           ;pin_manager.c: 61: LATB = 0x00;
  3683  008DFA  0E00               	movlw	0
  3684  008DFC  6E8A               	movwf	3978,c	;volatile
  3685                           
  3686                           ;pin_manager.c: 62: LATC = 0x00;
  3687  008DFE  0E00               	movlw	0
  3688  008E00  6E8B               	movwf	3979,c	;volatile
  3689                           
  3690                           ;pin_manager.c: 67: TRISE = 0x07;
  3691  008E02  0E07               	movlw	7
  3692  008E04  6E96               	movwf	3990,c	;volatile
  3693                           
  3694                           ;pin_manager.c: 68: TRISA = 0xFF;
  3695  008E06  6892               	setf	3986,c	;volatile
  3696                           
  3697                           ;pin_manager.c: 69: TRISB = 0xFF;
  3698  008E08  6893               	setf	3987,c	;volatile
  3699                           
  3700                           ;pin_manager.c: 70: TRISC = 0xFE;
  3701  008E0A  0EFE               	movlw	254
  3702  008E0C  6E94               	movwf	3988,c	;volatile
  3703                           
  3704                           ;pin_manager.c: 71: TRISD = 0xE6;
  3705  008E0E  0EE6               	movlw	230
  3706  008E10  6E95               	movwf	3989,c	;volatile
  3707                           
  3708                           ;pin_manager.c: 76: ANSELC = 0xF8;
  3709  008E12  0EF8               	movlw	248
  3710  008E14  010F               	movlb	15	; () banked
  3711  008E16  6F3A               	movwf	58,b	;volatile
  3712                           
  3713                           ;pin_manager.c: 77: ANSELB = 0x08;
  3714  008E18  0E08               	movlw	8
  3715  008E1A  010F               	movlb	15	; () banked
  3716  008E1C  6F39               	movwf	57,b	;volatile
  3717                           
  3718                           ;pin_manager.c: 78: ANSELD = 0xE4;
  3719  008E1E  0EE4               	movlw	228
  3720  008E20  010F               	movlb	15	; () banked
  3721  008E22  6F3B               	movwf	59,b	;volatile
  3722                           
  3723                           ;pin_manager.c: 79: ANSELE = 0x07;
  3724  008E24  0E07               	movlw	7
  3725  008E26  010F               	movlb	15	; () banked
  3726  008E28  6F3C               	movwf	60,b	;volatile
  3727                           
  3728                           ;pin_manager.c: 80: ANSELA = 0x2F;
  3729  008E2A  0E2F               	movlw	47
  3730  008E2C  010F               	movlb	15	; () banked
  3731  008E2E  6F38               	movwf	56,b	;volatile
  3732                           
  3733                           ; BSR set to: 15
  3734                           ;pin_manager.c: 85: WPUB = 0xFF;
  3735  008E30  6861               	setf	3937,c	;volatile
  3736                           
  3737                           ; BSR set to: 15
  3738                           ;pin_manager.c: 86: INTCON2bits.nRBPU = 0;
  3739  008E32  9EF1               	bcf	intcon2,7,c	;volatile
  3740                           
  3741                           ; BSR set to: 15
  3742                           ;pin_manager.c: 94: IOCBbits.IOCB4 = 1;
  3743  008E34  8862               	bsf	3938,4,c	;volatile
  3744                           
  3745                           ; BSR set to: 15
  3746                           ;pin_manager.c: 95: IOCBbits.IOCB5 = 1;
  3747  008E36  8A62               	bsf	3938,5,c	;volatile
  3748                           
  3749                           ; BSR set to: 15
  3750                           ;pin_manager.c: 98: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3751  008E38  0E02               	movlw	low _IOCB4_DefaultInterruptHandler
  3752  008E3A  0100               	movlb	0	; () banked
  3753  008E3C  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3754  008E3E  0EA4               	movlw	high _IOCB4_DefaultInterruptHandler
  3755  008E40  0100               	movlb	0	; () banked
  3756  008E42  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3757  008E44  EC7E  F051         	call	_IOCB4_SetInterruptHandler	;wreg free
  3758                           
  3759                           ;pin_manager.c: 99: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  3760  008E48  0E00               	movlw	low _IOCB5_DefaultInterruptHandler
  3761  008E4A  0100               	movlb	0	; () banked
  3762  008E4C  6F64               	movwf	IOCB5_SetInterruptHandler@InterruptHandler& (0+255),b
  3763  008E4E  0EA4               	movlw	high _IOCB5_DefaultInterruptHandler
  3764  008E50  0100               	movlb	0	; () banked
  3765  008E52  6F65               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3766  008E54  EC74  F051         	call	_IOCB5_SetInterruptHandler	;wreg free
  3767                           
  3768                           ;pin_manager.c: 102: INTCONbits.RBIE = 1;
  3769  008E58  86F2               	bsf	intcon,3,c	;volatile
  3770  008E5A  0012               	return		;funcret
  3771  008E5C                     __end_of_PIN_MANAGER_Initialize:
  3772                           	opt stack 0
  3773                           tblptru	equ	0xFF8
  3774                           tblptrh	equ	0xFF7
  3775                           tblptrl	equ	0xFF6
  3776                           tablat	equ	0xFF5
  3777                           intcon	equ	0xFF2
  3778                           intcon2	equ	0xFF1
  3779                           postinc0	equ	0xFEE
  3780                           wreg	equ	0xFE8
  3781                           postdec2	equ	0xFDD
  3782                           fsr2h	equ	0xFDA
  3783                           fsr2l	equ	0xFD9
  3784                           status	equ	0xFD8
  3785                           
  3786 ;; *************** function _IOCB5_SetInterruptHandler *****************
  3787 ;; Defined at:
  3788 ;;		line 170 in file "mcc_generated_files/pin_manager.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3791 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3803 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    7
  3810 ;; This function calls:
  3811 ;;		Nothing
  3812 ;; This function is called by:
  3813 ;;		_PIN_MANAGER_Initialize
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           
  3817                           	psect	text9
  3818  00A2E8                     __ptext9:
  3819                           	opt stack 0
  3820  00A2E8                     _IOCB5_SetInterruptHandler:
  3821                           	opt stack 21
  3822                           
  3823                           ;pin_manager.c: 171: IOCB5_InterruptHandler = InterruptHandler;
  3824                           
  3825                           ;incstack = 0
  3826  00A2E8  C064  F1ED         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  3827  00A2EC  C065  F1EE         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  3828  00A2F0  0012               	return		;funcret
  3829  00A2F2                     __end_of_IOCB5_SetInterruptHandler:
  3830                           	opt stack 0
  3831                           tblptru	equ	0xFF8
  3832                           tblptrh	equ	0xFF7
  3833                           tblptrl	equ	0xFF6
  3834                           tablat	equ	0xFF5
  3835                           intcon	equ	0xFF2
  3836                           intcon2	equ	0xFF1
  3837                           postinc0	equ	0xFEE
  3838                           wreg	equ	0xFE8
  3839                           postdec2	equ	0xFDD
  3840                           fsr2h	equ	0xFDA
  3841                           fsr2l	equ	0xFD9
  3842                           status	equ	0xFD8
  3843                           
  3844 ;; *************** function _OSCILLATOR_Initialize *****************
  3845 ;; Defined at:
  3846 ;;		line 123 in file "mcc_generated_files/mcc.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;		None
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;Total ram usage:        0 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:    7
  3867 ;; This function calls:
  3868 ;;		Nothing
  3869 ;; This function is called by:
  3870 ;;		_SYSTEM_Initialize
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           	psect	text10
  3875  00A2A4                     __ptext10:
  3876                           	opt stack 0
  3877  00A2A4                     _OSCILLATOR_Initialize:
  3878                           	opt stack 22
  3879                           
  3880                           ;mcc.c: 126: OSCCON = 0x70;
  3881                           
  3882                           ;incstack = 0
  3883  00A2A4  0E70               	movlw	112
  3884  00A2A6  6ED3               	movwf	4051,c	;volatile
  3885                           
  3886                           ;mcc.c: 128: OSCCON2 = 0x04;
  3887  00A2A8  0E04               	movlw	4
  3888  00A2AA  6ED2               	movwf	4050,c	;volatile
  3889                           
  3890                           ;mcc.c: 130: OSCTUNE = 0x00;
  3891  00A2AC  0E00               	movlw	0
  3892  00A2AE  6E9B               	movwf	3995,c	;volatile
  3893  00A2B0  0012               	return		;funcret
  3894  00A2B2                     __end_of_OSCILLATOR_Initialize:
  3895                           	opt stack 0
  3896                           tblptru	equ	0xFF8
  3897                           tblptrh	equ	0xFF7
  3898                           tblptrl	equ	0xFF6
  3899                           tablat	equ	0xFF5
  3900                           intcon	equ	0xFF2
  3901                           intcon2	equ	0xFF1
  3902                           postinc0	equ	0xFEE
  3903                           wreg	equ	0xFE8
  3904                           postdec2	equ	0xFDD
  3905                           fsr2h	equ	0xFDA
  3906                           fsr2l	equ	0xFD9
  3907                           status	equ	0xFD8
  3908                           
  3909 ;; *************** function _LORAWAN_PlatformInit *****************
  3910 ;; Defined at:
  3911 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  3912 ;; Parameters:    Size  Location     Type
  3913 ;;		None
  3914 ;; Auto vars:     Size  Location     Type
  3915 ;;		None
  3916 ;; Return value:  Size  Location     Type
  3917 ;;                  1    wreg      void 
  3918 ;; Registers used:
  3919 ;;		wreg, status,2, status,0, cstack
  3920 ;; Tracked objects:
  3921 ;;		On entry : 0/0
  3922 ;;		On exit  : 0/0
  3923 ;;		Unchanged: 0/0
  3924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3929 ;;Total ram usage:        0 bytes
  3930 ;; Hardware stack levels used:    1
  3931 ;; Hardware stack levels required when called:    9
  3932 ;; This function calls:
  3933 ;;		_DIO0_ISR_Lora_Init
  3934 ;;		_DIO1_ISR_Lora_Init
  3935 ;;		_DIO2_ISR_Lora_Init
  3936 ;;		_DIO3_ISR_Lora_Init
  3937 ;;		_DIO4_ISR_Lora_Init
  3938 ;;		_DIO5_ISR_Lora_Init
  3939 ;;		_SystemTimerInit
  3940 ;;		_TMR_ISR_Lora_Init
  3941 ;; This function is called by:
  3942 ;;		_SYSTEM_Initialize
  3943 ;; This function uses a non-reentrant model
  3944 ;;
  3945                           
  3946                           	psect	text11
  3947  009F98                     __ptext11:
  3948                           	opt stack 0
  3949  009F98                     _LORAWAN_PlatformInit:
  3950                           	opt stack 20
  3951                           
  3952                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  3953                           
  3954                           ;incstack = 0
  3955  009F98  ECE1  F050         	call	_TMR_ISR_Lora_Init	;wreg free
  3956                           
  3957                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  3958  009F9C  EC05  F051         	call	_DIO0_ISR_Lora_Init	;wreg free
  3959                           
  3960                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  3961  009FA0  ECFC  F050         	call	_DIO1_ISR_Lora_Init	;wreg free
  3962                           
  3963                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  3964  009FA4  ECF3  F050         	call	_DIO2_ISR_Lora_Init	;wreg free
  3965                           
  3966                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  3967  009FA8  ECFE  F051         	call	_DIO3_ISR_Lora_Init	;wreg free
  3968                           
  3969                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  3970  009FAC  ECFD  F051         	call	_DIO4_ISR_Lora_Init	;wreg free
  3971                           
  3972                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  3973  009FB0  ECEA  F050         	call	_DIO5_ISR_Lora_Init	;wreg free
  3974                           
  3975                           ;lorawan_init.c: 81: SystemTimerInit();
  3976  009FB4  ECCE  F051         	call	_SystemTimerInit	;wreg free
  3977  009FB8  0012               	return		;funcret
  3978  009FBA                     __end_of_LORAWAN_PlatformInit:
  3979                           	opt stack 0
  3980                           tblptru	equ	0xFF8
  3981                           tblptrh	equ	0xFF7
  3982                           tblptrl	equ	0xFF6
  3983                           tablat	equ	0xFF5
  3984                           intcon	equ	0xFF2
  3985                           intcon2	equ	0xFF1
  3986                           postinc0	equ	0xFEE
  3987                           wreg	equ	0xFE8
  3988                           postdec2	equ	0xFDD
  3989                           fsr2h	equ	0xFDA
  3990                           fsr2l	equ	0xFD9
  3991                           status	equ	0xFD8
  3992                           
  3993 ;; *************** function _TMR_ISR_Lora_Init *****************
  3994 ;; Defined at:
  3995 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  3996 ;; Parameters:    Size  Location     Type
  3997 ;;		None
  3998 ;; Auto vars:     Size  Location     Type
  3999 ;;		None
  4000 ;; Return value:  Size  Location     Type
  4001 ;;                  1    wreg      void 
  4002 ;; Registers used:
  4003 ;;		wreg, status,2, status,0, cstack
  4004 ;; Tracked objects:
  4005 ;;		On entry : 0/0
  4006 ;;		On exit  : 0/0
  4007 ;;		Unchanged: 0/0
  4008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;Total ram usage:        0 bytes
  4014 ;; Hardware stack levels used:    1
  4015 ;; Hardware stack levels required when called:    8
  4016 ;; This function calls:
  4017 ;;		_TMR1_SetInterruptHandler
  4018 ;; This function is called by:
  4019 ;;		_LORAWAN_PlatformInit
  4020 ;; This function uses a non-reentrant model
  4021 ;;
  4022                           
  4023                           	psect	text12
  4024  00A1C2                     __ptext12:
  4025                           	opt stack 0
  4026  00A1C2                     _TMR_ISR_Lora_Init:
  4027                           	opt stack 20
  4028                           
  4029                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  4030                           
  4031                           ;incstack = 0
  4032  00A1C2  0E68               	movlw	low _TMR_ISR_lora
  4033  00A1C4  0100               	movlb	0	; () banked
  4034  00A1C6  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4035  00A1C8  0E93               	movlw	high _TMR_ISR_lora
  4036  00A1CA  0100               	movlb	0	; () banked
  4037  00A1CC  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4038  00A1CE  EC79  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  4039  00A1D2  0012               	return		;funcret
  4040  00A1D4                     __end_of_TMR_ISR_Lora_Init:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           intcon	equ	0xFF2
  4047                           intcon2	equ	0xFF1
  4048                           postinc0	equ	0xFEE
  4049                           wreg	equ	0xFE8
  4050                           postdec2	equ	0xFDD
  4051                           fsr2h	equ	0xFDA
  4052                           fsr2l	equ	0xFD9
  4053                           status	equ	0xFD8
  4054                           
  4055 ;; *************** function _TMR1_SetInterruptHandler *****************
  4056 ;; Defined at:
  4057 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4058 ;; Parameters:    Size  Location     Type
  4059 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4060 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      void 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4072 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;Total ram usage:        2 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:    7
  4079 ;; This function calls:
  4080 ;;		Nothing
  4081 ;; This function is called by:
  4082 ;;		_TMR_ISR_Lora_Init
  4083 ;;		_TMR1_Initialize
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text13
  4088  00A2F2                     __ptext13:
  4089                           	opt stack 0
  4090  00A2F2                     _TMR1_SetInterruptHandler:
  4091                           	opt stack 21
  4092                           
  4093                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4094                           
  4095                           ;incstack = 0
  4096  00A2F2  C064  F1EF         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4097  00A2F6  C065  F1F0         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4098  00A2FA  0012               	return		;funcret
  4099  00A2FC                     __end_of_TMR1_SetInterruptHandler:
  4100                           	opt stack 0
  4101                           tblptru	equ	0xFF8
  4102                           tblptrh	equ	0xFF7
  4103                           tblptrl	equ	0xFF6
  4104                           tablat	equ	0xFF5
  4105                           intcon	equ	0xFF2
  4106                           intcon2	equ	0xFF1
  4107                           postinc0	equ	0xFEE
  4108                           wreg	equ	0xFE8
  4109                           postdec2	equ	0xFDD
  4110                           fsr2h	equ	0xFDA
  4111                           fsr2l	equ	0xFD9
  4112                           status	equ	0xFD8
  4113                           
  4114 ;; *************** function _SystemTimerInit *****************
  4115 ;; Defined at:
  4116 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4117 ;; Parameters:    Size  Location     Type
  4118 ;;		None
  4119 ;; Auto vars:     Size  Location     Type
  4120 ;;		None
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  1    wreg      void 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4133 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4134 ;;Total ram usage:        0 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; Hardware stack levels required when called:    7
  4137 ;; This function calls:
  4138 ;;		Nothing
  4139 ;; This function is called by:
  4140 ;;		_LORAWAN_PlatformInit
  4141 ;; This function uses a non-reentrant model
  4142 ;;
  4143                           
  4144                           	psect	text14
  4145  00A39C                     __ptext14:
  4146                           	opt stack 0
  4147  00A39C                     _SystemTimerInit:
  4148                           	opt stack 21
  4149                           
  4150                           ;sw_timer.c: 137: allocatedTimers = 0;
  4151                           
  4152                           ;incstack = 0
  4153  00A39C  0E00               	movlw	0
  4154  00A39E  0100               	movlb	0	; () banked
  4155  00A3A0  6FFA               	movwf	_allocatedTimers& (0+255),b	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158  00A3A2  0012               	return		;funcret
  4159  00A3A4                     __end_of_SystemTimerInit:
  4160                           	opt stack 0
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           intcon	equ	0xFF2
  4166                           intcon2	equ	0xFF1
  4167                           postinc0	equ	0xFEE
  4168                           wreg	equ	0xFE8
  4169                           postdec2	equ	0xFDD
  4170                           fsr2h	equ	0xFDA
  4171                           fsr2l	equ	0xFD9
  4172                           status	equ	0xFD8
  4173                           
  4174 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4175 ;; Defined at:
  4176 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4177 ;; Parameters:    Size  Location     Type
  4178 ;;		None
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;		None
  4181 ;; Return value:  Size  Location     Type
  4182 ;;                  1    wreg      void 
  4183 ;; Registers used:
  4184 ;;		wreg, status,2, status,0, cstack
  4185 ;; Tracked objects:
  4186 ;;		On entry : 0/0
  4187 ;;		On exit  : 0/0
  4188 ;;		Unchanged: 0/0
  4189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4194 ;;Total ram usage:        0 bytes
  4195 ;; Hardware stack levels used:    1
  4196 ;; Hardware stack levels required when called:    8
  4197 ;; This function calls:
  4198 ;;		_INT0_SetInterruptHandler
  4199 ;; This function is called by:
  4200 ;;		_LORAWAN_PlatformInit
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text15
  4205  00A1D4                     __ptext15:
  4206                           	opt stack 0
  4207  00A1D4                     _DIO5_ISR_Lora_Init:
  4208                           	opt stack 20
  4209                           
  4210                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4211                           
  4212                           ; BSR set to: 0
  4213                           ;incstack = 0
  4214  00A1D4  0E00               	movlw	0
  4215  00A1D6  0100               	movlb	0	; () banked
  4216  00A1D8  6F64               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4217  00A1DA  0E00               	movlw	0
  4218  00A1DC  0100               	movlb	0	; () banked
  4219  00A1DE  6F65               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4220  00A1E0  EC8D  F051         	call	_INT0_SetInterruptHandler	;wreg free
  4221  00A1E4  0012               	return		;funcret
  4222  00A1E6                     __end_of_DIO5_ISR_Lora_Init:
  4223                           	opt stack 0
  4224                           tblptru	equ	0xFF8
  4225                           tblptrh	equ	0xFF7
  4226                           tblptrl	equ	0xFF6
  4227                           tablat	equ	0xFF5
  4228                           intcon	equ	0xFF2
  4229                           intcon2	equ	0xFF1
  4230                           postinc0	equ	0xFEE
  4231                           wreg	equ	0xFE8
  4232                           postdec2	equ	0xFDD
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4238 ;; Defined at:
  4239 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		None
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4257 ;;Total ram usage:        0 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; Hardware stack levels required when called:    7
  4260 ;; This function calls:
  4261 ;;		Nothing
  4262 ;; This function is called by:
  4263 ;;		_LORAWAN_PlatformInit
  4264 ;; This function uses a non-reentrant model
  4265 ;;
  4266                           
  4267                           	psect	text16
  4268  00A3FA                     __ptext16:
  4269                           	opt stack 0
  4270  00A3FA                     _DIO4_ISR_Lora_Init:
  4271                           	opt stack 21
  4272                           
  4273                           ;incstack = 0
  4274  00A3FA  0012               	return		;funcret
  4275  00A3FC                     __end_of_DIO4_ISR_Lora_Init:
  4276                           	opt stack 0
  4277                           tblptru	equ	0xFF8
  4278                           tblptrh	equ	0xFF7
  4279                           tblptrl	equ	0xFF6
  4280                           tablat	equ	0xFF5
  4281                           intcon	equ	0xFF2
  4282                           intcon2	equ	0xFF1
  4283                           postinc0	equ	0xFEE
  4284                           wreg	equ	0xFE8
  4285                           postdec2	equ	0xFDD
  4286                           fsr2h	equ	0xFDA
  4287                           fsr2l	equ	0xFD9
  4288                           status	equ	0xFD8
  4289                           
  4290 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4291 ;; Defined at:
  4292 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4293 ;; Parameters:    Size  Location     Type
  4294 ;;		None
  4295 ;; Auto vars:     Size  Location     Type
  4296 ;;		None
  4297 ;; Return value:  Size  Location     Type
  4298 ;;                  1    wreg      void 
  4299 ;; Registers used:
  4300 ;;		None
  4301 ;; Tracked objects:
  4302 ;;		On entry : 0/0
  4303 ;;		On exit  : 0/0
  4304 ;;		Unchanged: 0/0
  4305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;Total ram usage:        0 bytes
  4311 ;; Hardware stack levels used:    1
  4312 ;; Hardware stack levels required when called:    7
  4313 ;; This function calls:
  4314 ;;		Nothing
  4315 ;; This function is called by:
  4316 ;;		_LORAWAN_PlatformInit
  4317 ;; This function uses a non-reentrant model
  4318 ;;
  4319                           
  4320                           	psect	text17
  4321  00A3FC                     __ptext17:
  4322                           	opt stack 0
  4323  00A3FC                     _DIO3_ISR_Lora_Init:
  4324                           	opt stack 21
  4325                           
  4326                           ;incstack = 0
  4327  00A3FC  0012               	return		;funcret
  4328  00A3FE                     __end_of_DIO3_ISR_Lora_Init:
  4329                           	opt stack 0
  4330                           tblptru	equ	0xFF8
  4331                           tblptrh	equ	0xFF7
  4332                           tblptrl	equ	0xFF6
  4333                           tablat	equ	0xFF5
  4334                           intcon	equ	0xFF2
  4335                           intcon2	equ	0xFF1
  4336                           postinc0	equ	0xFEE
  4337                           wreg	equ	0xFE8
  4338                           postdec2	equ	0xFDD
  4339                           fsr2h	equ	0xFDA
  4340                           fsr2l	equ	0xFD9
  4341                           status	equ	0xFD8
  4342                           
  4343 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4344 ;; Defined at:
  4345 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4346 ;; Parameters:    Size  Location     Type
  4347 ;;		None
  4348 ;; Auto vars:     Size  Location     Type
  4349 ;;		None
  4350 ;; Return value:  Size  Location     Type
  4351 ;;                  1    wreg      void 
  4352 ;; Registers used:
  4353 ;;		wreg, status,2, status,0, cstack
  4354 ;; Tracked objects:
  4355 ;;		On entry : 0/0
  4356 ;;		On exit  : 0/0
  4357 ;;		Unchanged: 0/0
  4358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4362 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4363 ;;Total ram usage:        0 bytes
  4364 ;; Hardware stack levels used:    1
  4365 ;; Hardware stack levels required when called:    8
  4366 ;; This function calls:
  4367 ;;		_IOCB4_SetInterruptHandler
  4368 ;; This function is called by:
  4369 ;;		_LORAWAN_PlatformInit
  4370 ;; This function uses a non-reentrant model
  4371 ;;
  4372                           
  4373                           	psect	text18
  4374  00A1E6                     __ptext18:
  4375                           	opt stack 0
  4376  00A1E6                     _DIO2_ISR_Lora_Init:
  4377                           	opt stack 20
  4378                           
  4379                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4380                           
  4381                           ;incstack = 0
  4382  00A1E6  0EEE               	movlw	low _DIO2_ISR_Lora
  4383  00A1E8  0100               	movlb	0	; () banked
  4384  00A1EA  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4385  00A1EC  0EA3               	movlw	high _DIO2_ISR_Lora
  4386  00A1EE  0100               	movlb	0	; () banked
  4387  00A1F0  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4388  00A1F2  EC7E  F051         	call	_IOCB4_SetInterruptHandler	;wreg free
  4389  00A1F6  0012               	return		;funcret
  4390  00A1F8                     __end_of_DIO2_ISR_Lora_Init:
  4391                           	opt stack 0
  4392                           tblptru	equ	0xFF8
  4393                           tblptrh	equ	0xFF7
  4394                           tblptrl	equ	0xFF6
  4395                           tablat	equ	0xFF5
  4396                           intcon	equ	0xFF2
  4397                           intcon2	equ	0xFF1
  4398                           postinc0	equ	0xFEE
  4399                           wreg	equ	0xFE8
  4400                           postdec2	equ	0xFDD
  4401                           fsr2h	equ	0xFDA
  4402                           fsr2l	equ	0xFD9
  4403                           status	equ	0xFD8
  4404                           
  4405 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4406 ;; Defined at:
  4407 ;;		line 141 in file "mcc_generated_files/pin_manager.c"
  4408 ;; Parameters:    Size  Location     Type
  4409 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4410 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4411 ;; Auto vars:     Size  Location     Type
  4412 ;;		None
  4413 ;; Return value:  Size  Location     Type
  4414 ;;                  1    wreg      void 
  4415 ;; Registers used:
  4416 ;;		wreg, status,2, status,0
  4417 ;; Tracked objects:
  4418 ;;		On entry : 0/0
  4419 ;;		On exit  : 0/0
  4420 ;;		Unchanged: 0/0
  4421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4422 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;Total ram usage:        2 bytes
  4427 ;; Hardware stack levels used:    1
  4428 ;; Hardware stack levels required when called:    7
  4429 ;; This function calls:
  4430 ;;		Nothing
  4431 ;; This function is called by:
  4432 ;;		_PIN_MANAGER_Initialize
  4433 ;;		_DIO2_ISR_Lora_Init
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text19
  4438  00A2FC                     __ptext19:
  4439                           	opt stack 0
  4440  00A2FC                     _IOCB4_SetInterruptHandler:
  4441                           	opt stack 21
  4442                           
  4443                           ;pin_manager.c: 142: IOCB4_InterruptHandler = InterruptHandler;
  4444                           
  4445                           ;incstack = 0
  4446  00A2FC  C064  F1EB         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4447  00A300  C065  F1EC         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4448  00A304  0012               	return		;funcret
  4449  00A306                     __end_of_IOCB4_SetInterruptHandler:
  4450                           	opt stack 0
  4451                           tblptru	equ	0xFF8
  4452                           tblptrh	equ	0xFF7
  4453                           tblptrl	equ	0xFF6
  4454                           tablat	equ	0xFF5
  4455                           intcon	equ	0xFF2
  4456                           intcon2	equ	0xFF1
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           postdec2	equ	0xFDD
  4460                           fsr2h	equ	0xFDA
  4461                           fsr2l	equ	0xFD9
  4462                           status	equ	0xFD8
  4463                           
  4464 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4465 ;; Defined at:
  4466 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;		None
  4471 ;; Return value:  Size  Location     Type
  4472 ;;                  1    wreg      void 
  4473 ;; Registers used:
  4474 ;;		wreg, status,2, status,0, cstack
  4475 ;; Tracked objects:
  4476 ;;		On entry : 0/0
  4477 ;;		On exit  : 0/0
  4478 ;;		Unchanged: 0/0
  4479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;Total ram usage:        0 bytes
  4485 ;; Hardware stack levels used:    1
  4486 ;; Hardware stack levels required when called:    8
  4487 ;; This function calls:
  4488 ;;		_INT2_SetInterruptHandler
  4489 ;; This function is called by:
  4490 ;;		_LORAWAN_PlatformInit
  4491 ;; This function uses a non-reentrant model
  4492 ;;
  4493                           
  4494                           	psect	text20
  4495  00A1F8                     __ptext20:
  4496                           	opt stack 0
  4497  00A1F8                     _DIO1_ISR_Lora_Init:
  4498                           	opt stack 20
  4499                           
  4500                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4501                           
  4502                           ;incstack = 0
  4503  00A1F8  0EF2               	movlw	low _DIO1_ISR_Lora
  4504  00A1FA  0100               	movlb	0	; () banked
  4505  00A1FC  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4506  00A1FE  0EA3               	movlw	high _DIO1_ISR_Lora
  4507  00A200  0100               	movlb	0	; () banked
  4508  00A202  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4509  00A204  EC83  F051         	call	_INT2_SetInterruptHandler	;wreg free
  4510  00A208  0012               	return		;funcret
  4511  00A20A                     __end_of_DIO1_ISR_Lora_Init:
  4512                           	opt stack 0
  4513                           tblptru	equ	0xFF8
  4514                           tblptrh	equ	0xFF7
  4515                           tblptrl	equ	0xFF6
  4516                           tablat	equ	0xFF5
  4517                           intcon	equ	0xFF2
  4518                           intcon2	equ	0xFF1
  4519                           postinc0	equ	0xFEE
  4520                           wreg	equ	0xFE8
  4521                           postdec2	equ	0xFDD
  4522                           fsr2h	equ	0xFDA
  4523                           fsr2l	equ	0xFD9
  4524                           status	equ	0xFD8
  4525                           
  4526 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4527 ;; Defined at:
  4528 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4529 ;; Parameters:    Size  Location     Type
  4530 ;;		None
  4531 ;; Auto vars:     Size  Location     Type
  4532 ;;		None
  4533 ;; Return value:  Size  Location     Type
  4534 ;;                  1    wreg      void 
  4535 ;; Registers used:
  4536 ;;		wreg, status,2, status,0, cstack
  4537 ;; Tracked objects:
  4538 ;;		On entry : 0/0
  4539 ;;		On exit  : 0/0
  4540 ;;		Unchanged: 0/0
  4541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;Total ram usage:        0 bytes
  4547 ;; Hardware stack levels used:    1
  4548 ;; Hardware stack levels required when called:    8
  4549 ;; This function calls:
  4550 ;;		_INT1_SetInterruptHandler
  4551 ;; This function is called by:
  4552 ;;		_LORAWAN_PlatformInit
  4553 ;; This function uses a non-reentrant model
  4554 ;;
  4555                           
  4556                           	psect	text21
  4557  00A20A                     __ptext21:
  4558                           	opt stack 0
  4559  00A20A                     _DIO0_ISR_Lora_Init:
  4560                           	opt stack 20
  4561                           
  4562                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4563                           
  4564                           ;incstack = 0
  4565  00A20A  0EF6               	movlw	low _DIO0_ISR_Lora
  4566  00A20C  0100               	movlb	0	; () banked
  4567  00A20E  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4568  00A210  0EA3               	movlw	high _DIO0_ISR_Lora
  4569  00A212  0100               	movlb	0	; () banked
  4570  00A214  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4571  00A216  EC88  F051         	call	_INT1_SetInterruptHandler	;wreg free
  4572  00A21A  0012               	return		;funcret
  4573  00A21C                     __end_of_DIO0_ISR_Lora_Init:
  4574                           	opt stack 0
  4575                           tblptru	equ	0xFF8
  4576                           tblptrh	equ	0xFF7
  4577                           tblptrl	equ	0xFF6
  4578                           tablat	equ	0xFF5
  4579                           intcon	equ	0xFF2
  4580                           intcon2	equ	0xFF1
  4581                           postinc0	equ	0xFEE
  4582                           wreg	equ	0xFE8
  4583                           postdec2	equ	0xFDD
  4584                           fsr2h	equ	0xFDA
  4585                           fsr2l	equ	0xFD9
  4586                           status	equ	0xFD8
  4587                           
  4588 ;; *************** function _INTERRUPT_Initialize *****************
  4589 ;; Defined at:
  4590 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4591 ;; Parameters:    Size  Location     Type
  4592 ;;		None
  4593 ;; Auto vars:     Size  Location     Type
  4594 ;;		None
  4595 ;; Return value:  Size  Location     Type
  4596 ;;                  1    wreg      void 
  4597 ;; Registers used:
  4598 ;;		None
  4599 ;; Tracked objects:
  4600 ;;		On entry : 0/0
  4601 ;;		On exit  : 0/0
  4602 ;;		Unchanged: 0/0
  4603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;Total ram usage:        0 bytes
  4609 ;; Hardware stack levels used:    1
  4610 ;; Hardware stack levels required when called:    7
  4611 ;; This function calls:
  4612 ;;		Nothing
  4613 ;; This function is called by:
  4614 ;;		_SYSTEM_Initialize
  4615 ;; This function uses a non-reentrant model
  4616 ;;
  4617                           
  4618                           	psect	text22
  4619  00A3D6                     __ptext22:
  4620                           	opt stack 0
  4621  00A3D6                     _INTERRUPT_Initialize:
  4622                           	opt stack 22
  4623                           
  4624                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4625                           
  4626                           ;incstack = 0
  4627  00A3D6  9ED0               	bcf	4048,7,c	;volatile
  4628  00A3D8  0012               	return		;funcret
  4629  00A3DA                     __end_of_INTERRUPT_Initialize:
  4630                           	opt stack 0
  4631                           tblptru	equ	0xFF8
  4632                           tblptrh	equ	0xFF7
  4633                           tblptrl	equ	0xFF6
  4634                           tablat	equ	0xFF5
  4635                           intcon	equ	0xFF2
  4636                           intcon2	equ	0xFF1
  4637                           postinc0	equ	0xFEE
  4638                           wreg	equ	0xFE8
  4639                           postdec2	equ	0xFDD
  4640                           fsr2h	equ	0xFDA
  4641                           fsr2l	equ	0xFD9
  4642                           status	equ	0xFD8
  4643                           
  4644 ;; *************** function _EXT_INT_Initialize *****************
  4645 ;; Defined at:
  4646 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4647 ;; Parameters:    Size  Location     Type
  4648 ;;		None
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;		None
  4651 ;; Return value:  Size  Location     Type
  4652 ;;                  1    wreg      void 
  4653 ;; Registers used:
  4654 ;;		wreg, status,2, status,0, cstack
  4655 ;; Tracked objects:
  4656 ;;		On entry : 0/0
  4657 ;;		On exit  : 0/0
  4658 ;;		Unchanged: 0/0
  4659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4664 ;;Total ram usage:        0 bytes
  4665 ;; Hardware stack levels used:    1
  4666 ;; Hardware stack levels required when called:    8
  4667 ;; This function calls:
  4668 ;;		_INT0_SetInterruptHandler
  4669 ;;		_INT1_SetInterruptHandler
  4670 ;;		_INT2_SetInterruptHandler
  4671 ;; This function is called by:
  4672 ;;		_SYSTEM_Initialize
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text23
  4677  009830                     __ptext23:
  4678                           	opt stack 0
  4679  009830                     _EXT_INT_Initialize:
  4680                           	opt stack 21
  4681                           
  4682                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4683                           
  4684                           ;incstack = 0
  4685  009830  90F0               	bcf	intcon3,0,c	;volatile
  4686                           
  4687                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4688  009832  8AF1               	bsf	intcon2,5,c	;volatile
  4689                           
  4690                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4691  009834  0E06               	movlw	low _INT1_DefaultInterruptHandler
  4692  009836  0100               	movlb	0	; () banked
  4693  009838  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4694  00983A  0EA4               	movlw	high _INT1_DefaultInterruptHandler
  4695  00983C  0100               	movlb	0	; () banked
  4696  00983E  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4697  009840  EC88  F051         	call	_INT1_SetInterruptHandler	;wreg free
  4698                           
  4699                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4700  009844  86F0               	bsf	intcon3,3,c	;volatile
  4701                           
  4702                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4703  009846  92F0               	bcf	intcon3,1,c	;volatile
  4704                           
  4705                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4706  009848  88F1               	bsf	intcon2,4,c	;volatile
  4707                           
  4708                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4709  00984A  0E04               	movlw	low _INT2_DefaultInterruptHandler
  4710  00984C  0100               	movlb	0	; () banked
  4711  00984E  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4712  009850  0EA4               	movlw	high _INT2_DefaultInterruptHandler
  4713  009852  0100               	movlb	0	; () banked
  4714  009854  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4715  009856  EC83  F051         	call	_INT2_SetInterruptHandler	;wreg free
  4716                           
  4717                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4718  00985A  88F0               	bsf	intcon3,4,c	;volatile
  4719                           
  4720                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4721  00985C  92F2               	bcf	intcon,1,c	;volatile
  4722                           
  4723                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4724  00985E  8CF1               	bsf	intcon2,6,c	;volatile
  4725                           
  4726                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4727  009860  0E00               	movlw	0
  4728  009862  0100               	movlb	0	; () banked
  4729  009864  6F64               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4730  009866  0E00               	movlw	0
  4731  009868  0100               	movlb	0	; () banked
  4732  00986A  6F65               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4733  00986C  EC8D  F051         	call	_INT0_SetInterruptHandler	;wreg free
  4734  009870  0012               	return		;funcret
  4735  009872                     __end_of_EXT_INT_Initialize:
  4736                           	opt stack 0
  4737                           tblptru	equ	0xFF8
  4738                           tblptrh	equ	0xFF7
  4739                           tblptrl	equ	0xFF6
  4740                           tablat	equ	0xFF5
  4741                           intcon	equ	0xFF2
  4742                           intcon2	equ	0xFF1
  4743                           intcon3	equ	0xFF0
  4744                           postinc0	equ	0xFEE
  4745                           wreg	equ	0xFE8
  4746                           postdec2	equ	0xFDD
  4747                           fsr2h	equ	0xFDA
  4748                           fsr2l	equ	0xFD9
  4749                           status	equ	0xFD8
  4750                           
  4751 ;; *************** function _INT2_SetInterruptHandler *****************
  4752 ;; Defined at:
  4753 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4754 ;; Parameters:    Size  Location     Type
  4755 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4756 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4757 ;; Auto vars:     Size  Location     Type
  4758 ;;		None
  4759 ;; Return value:  Size  Location     Type
  4760 ;;                  1    wreg      void 
  4761 ;; Registers used:
  4762 ;;		wreg, status,2, status,0
  4763 ;; Tracked objects:
  4764 ;;		On entry : 0/0
  4765 ;;		On exit  : 0/0
  4766 ;;		Unchanged: 0/0
  4767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4771 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4772 ;;Total ram usage:        2 bytes
  4773 ;; Hardware stack levels used:    1
  4774 ;; Hardware stack levels required when called:    7
  4775 ;; This function calls:
  4776 ;;		Nothing
  4777 ;; This function is called by:
  4778 ;;		_EXT_INT_Initialize
  4779 ;;		_DIO1_ISR_Lora_Init
  4780 ;; This function uses a non-reentrant model
  4781 ;;
  4782                           
  4783                           	psect	text24
  4784  00A306                     __ptext24:
  4785                           	opt stack 0
  4786  00A306                     _INT2_SetInterruptHandler:
  4787                           	opt stack 20
  4788                           
  4789                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4790                           
  4791                           ;incstack = 0
  4792  00A306  C064  F1E9         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4793  00A30A  C065  F1EA         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4794  00A30E  0012               	return		;funcret
  4795  00A310                     __end_of_INT2_SetInterruptHandler:
  4796                           	opt stack 0
  4797                           tblptru	equ	0xFF8
  4798                           tblptrh	equ	0xFF7
  4799                           tblptrl	equ	0xFF6
  4800                           tablat	equ	0xFF5
  4801                           intcon	equ	0xFF2
  4802                           intcon2	equ	0xFF1
  4803                           intcon3	equ	0xFF0
  4804                           postinc0	equ	0xFEE
  4805                           wreg	equ	0xFE8
  4806                           postdec2	equ	0xFDD
  4807                           fsr2h	equ	0xFDA
  4808                           fsr2l	equ	0xFD9
  4809                           status	equ	0xFD8
  4810                           
  4811 ;; *************** function _INT1_SetInterruptHandler *****************
  4812 ;; Defined at:
  4813 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4814 ;; Parameters:    Size  Location     Type
  4815 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4816 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4817 ;; Auto vars:     Size  Location     Type
  4818 ;;		None
  4819 ;; Return value:  Size  Location     Type
  4820 ;;                  1    wreg      void 
  4821 ;; Registers used:
  4822 ;;		wreg, status,2, status,0
  4823 ;; Tracked objects:
  4824 ;;		On entry : 0/0
  4825 ;;		On exit  : 0/0
  4826 ;;		Unchanged: 0/0
  4827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4828 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4829 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4831 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4832 ;;Total ram usage:        2 bytes
  4833 ;; Hardware stack levels used:    1
  4834 ;; Hardware stack levels required when called:    7
  4835 ;; This function calls:
  4836 ;;		Nothing
  4837 ;; This function is called by:
  4838 ;;		_EXT_INT_Initialize
  4839 ;;		_DIO0_ISR_Lora_Init
  4840 ;; This function uses a non-reentrant model
  4841 ;;
  4842                           
  4843                           	psect	text25
  4844  00A310                     __ptext25:
  4845                           	opt stack 0
  4846  00A310                     _INT1_SetInterruptHandler:
  4847                           	opt stack 20
  4848                           
  4849                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4850                           
  4851                           ;incstack = 0
  4852  00A310  C064  F1E7         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4853  00A314  C065  F1E8         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4854  00A318  0012               	return		;funcret
  4855  00A31A                     __end_of_INT1_SetInterruptHandler:
  4856                           	opt stack 0
  4857                           tblptru	equ	0xFF8
  4858                           tblptrh	equ	0xFF7
  4859                           tblptrl	equ	0xFF6
  4860                           tablat	equ	0xFF5
  4861                           intcon	equ	0xFF2
  4862                           intcon2	equ	0xFF1
  4863                           intcon3	equ	0xFF0
  4864                           postinc0	equ	0xFEE
  4865                           wreg	equ	0xFE8
  4866                           postdec2	equ	0xFDD
  4867                           fsr2h	equ	0xFDA
  4868                           fsr2l	equ	0xFD9
  4869                           status	equ	0xFD8
  4870                           
  4871 ;; *************** function _INT0_SetInterruptHandler *****************
  4872 ;; Defined at:
  4873 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4876 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4877 ;; Auto vars:     Size  Location     Type
  4878 ;;		None
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  1    wreg      void 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4888 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4891 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4892 ;;Total ram usage:        2 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    7
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_EXT_INT_Initialize
  4899 ;;		_DIO5_ISR_Lora_Init
  4900 ;; This function uses a non-reentrant model
  4901 ;;
  4902                           
  4903                           	psect	text26
  4904  00A31A                     __ptext26:
  4905                           	opt stack 0
  4906  00A31A                     _INT0_SetInterruptHandler:
  4907                           	opt stack 20
  4908                           
  4909                           ;ext_int.c: 155: INT0_InterruptHandler = InterruptHandler;
  4910                           
  4911                           ;incstack = 0
  4912  00A31A  C064  F1E5         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  4913  00A31E  C065  F1E6         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  4914  00A322  0012               	return		;funcret
  4915  00A324                     __end_of_INT0_SetInterruptHandler:
  4916                           	opt stack 0
  4917                           tblptru	equ	0xFF8
  4918                           tblptrh	equ	0xFF7
  4919                           tblptrl	equ	0xFF6
  4920                           tablat	equ	0xFF5
  4921                           intcon	equ	0xFF2
  4922                           intcon2	equ	0xFF1
  4923                           intcon3	equ	0xFF0
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           postdec2	equ	0xFDD
  4927                           fsr2h	equ	0xFDA
  4928                           fsr2l	equ	0xFD9
  4929                           status	equ	0xFD8
  4930                           
  4931 ;; *************** function _LoRaWakeUp *****************
  4932 ;; Defined at:
  4933 ;;		line 258 in file "main.c"
  4934 ;; Parameters:    Size  Location     Type
  4935 ;;		None
  4936 ;; Auto vars:     Size  Location     Type
  4937 ;;		None
  4938 ;; Return value:  Size  Location     Type
  4939 ;;                  1    wreg      void 
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;Total ram usage:        0 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    8
  4954 ;; This function calls:
  4955 ;;		_SPI2_Initialize
  4956 ;; This function is called by:
  4957 ;;		_main
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           	psect	text27
  4962  00A324                     __ptext27:
  4963                           	opt stack 0
  4964  00A324                     _LoRaWakeUp:
  4965                           	opt stack 22
  4966                           
  4967                           ;main.c: 260: MSSP2MD = 0;
  4968                           
  4969                           ;incstack = 0
  4970  00A324  010F               	movlb	15	; () banked
  4971  00A326  9F3E               	bcf	62,7,b	;volatile
  4972                           
  4973                           ; BSR set to: 15
  4974                           ;main.c: 261: SPI2_Initialize();
  4975  00A328  EC59  F051         	call	_SPI2_Initialize	;wreg free
  4976  00A32C  0012               	return		;funcret
  4977  00A32E                     __end_of_LoRaWakeUp:
  4978                           	opt stack 0
  4979                           tblptru	equ	0xFF8
  4980                           tblptrh	equ	0xFF7
  4981                           tblptrl	equ	0xFF6
  4982                           tablat	equ	0xFF5
  4983                           intcon	equ	0xFF2
  4984                           intcon2	equ	0xFF1
  4985                           intcon3	equ	0xFF0
  4986                           postinc0	equ	0xFEE
  4987                           wreg	equ	0xFE8
  4988                           postdec2	equ	0xFDD
  4989                           fsr2h	equ	0xFDA
  4990                           fsr2l	equ	0xFD9
  4991                           status	equ	0xFD8
  4992                           
  4993 ;; *************** function _SPI2_Initialize *****************
  4994 ;; Defined at:
  4995 ;;		line 63 in file "mcc_generated_files/spi2.c"
  4996 ;; Parameters:    Size  Location     Type
  4997 ;;		None
  4998 ;; Auto vars:     Size  Location     Type
  4999 ;;		None
  5000 ;; Return value:  Size  Location     Type
  5001 ;;                  1    wreg      void 
  5002 ;; Registers used:
  5003 ;;		wreg, status,2
  5004 ;; Tracked objects:
  5005 ;;		On entry : 0/0
  5006 ;;		On exit  : 0/0
  5007 ;;		Unchanged: 0/0
  5008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;Total ram usage:        0 bytes
  5014 ;; Hardware stack levels used:    1
  5015 ;; Hardware stack levels required when called:    7
  5016 ;; This function calls:
  5017 ;;		Nothing
  5018 ;; This function is called by:
  5019 ;;		_SYSTEM_Initialize
  5020 ;;		_LoRaWakeUp
  5021 ;; This function uses a non-reentrant model
  5022 ;;
  5023                           
  5024                           	psect	text28
  5025  00A2B2                     __ptext28:
  5026                           	opt stack 0
  5027  00A2B2                     _SPI2_Initialize:
  5028                           	opt stack 22
  5029                           
  5030                           ;spi2.c: 68: SSP2STAT = 0x40;
  5031                           
  5032                           ;incstack = 0
  5033  00A2B2  0E40               	movlw	64
  5034  00A2B4  6E6D               	movwf	3949,c	;volatile
  5035                           
  5036                           ;spi2.c: 71: SSP2CON1 = 0x20;
  5037  00A2B6  0E20               	movlw	32
  5038  00A2B8  6E6C               	movwf	3948,c	;volatile
  5039                           
  5040                           ;spi2.c: 74: SSP2ADD = 0x00;
  5041  00A2BA  0E00               	movlw	0
  5042  00A2BC  6E6E               	movwf	3950,c	;volatile
  5043  00A2BE  0012               	return		;funcret
  5044  00A2C0                     __end_of_SPI2_Initialize:
  5045                           	opt stack 0
  5046                           tblptru	equ	0xFF8
  5047                           tblptrh	equ	0xFF7
  5048                           tblptrl	equ	0xFF6
  5049                           tablat	equ	0xFF5
  5050                           intcon	equ	0xFF2
  5051                           intcon2	equ	0xFF1
  5052                           intcon3	equ	0xFF0
  5053                           postinc0	equ	0xFEE
  5054                           wreg	equ	0xFE8
  5055                           postdec2	equ	0xFDD
  5056                           fsr2h	equ	0xFDA
  5057                           fsr2l	equ	0xFD9
  5058                           status	equ	0xFD8
  5059                           
  5060 ;; *************** function _LoRaSleep *****************
  5061 ;; Defined at:
  5062 ;;		line 228 in file "main.c"
  5063 ;; Parameters:    Size  Location     Type
  5064 ;;		None
  5065 ;; Auto vars:     Size  Location     Type
  5066 ;;		None
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  1    wreg      void 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5080 ;;Total ram usage:        0 bytes
  5081 ;; Hardware stack levels used:    1
  5082 ;; Hardware stack levels required when called:    7
  5083 ;; This function calls:
  5084 ;;		Nothing
  5085 ;; This function is called by:
  5086 ;;		_main
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text29
  5091  009DA2                     __ptext29:
  5092                           	opt stack 0
  5093  009DA2                     _LoRaSleep:
  5094                           	opt stack 23
  5095                           
  5096                           ;main.c: 231: SSP2CON1 = 0x00;
  5097                           
  5098                           ;incstack = 0
  5099  009DA2  0E00               	movlw	0
  5100  009DA4  6E6C               	movwf	3948,c	;volatile
  5101                           
  5102                           ;main.c: 234: MSSP2MD = 1;
  5103  009DA6  010F               	movlb	15	; () banked
  5104  009DA8  8F3E               	bsf	62,7,b	;volatile
  5105                           
  5106                           ; BSR set to: 15
  5107                           ;main.c: 238: ANSD3 = 0;
  5108  009DAA  010F               	movlb	15	; () banked
  5109  009DAC  973B               	bcf	59,3,b	;volatile
  5110                           
  5111                           ; BSR set to: 15
  5112                           ;main.c: 239: TRISD3 = 0;
  5113  009DAE  9695               	bcf	3989,3,c	;volatile
  5114                           
  5115                           ; BSR set to: 15
  5116                           ;main.c: 240: LATD3 = 1;
  5117  009DB0  868C               	bsf	3980,3,c	;volatile
  5118                           
  5119                           ; BSR set to: 15
  5120                           ;main.c: 243: ANSD1 = 0;
  5121  009DB2  010F               	movlb	15	; () banked
  5122  009DB4  933B               	bcf	59,1,b	;volatile
  5123                           
  5124                           ; BSR set to: 15
  5125                           ;main.c: 244: TRISD1 = 0;
  5126  009DB6  9295               	bcf	3989,1,c	;volatile
  5127                           
  5128                           ; BSR set to: 15
  5129                           ;main.c: 245: LATD1 = 0;
  5130  009DB8  928C               	bcf	3980,1,c	;volatile
  5131                           
  5132                           ; BSR set to: 15
  5133                           ;main.c: 248: ANSD4 = 0;
  5134  009DBA  010F               	movlb	15	; () banked
  5135  009DBC  993B               	bcf	59,4,b	;volatile
  5136                           
  5137                           ; BSR set to: 15
  5138                           ;main.c: 249: TRISD4 = 0;
  5139  009DBE  9895               	bcf	3989,4,c	;volatile
  5140                           
  5141                           ; BSR set to: 15
  5142                           ;main.c: 250: LATD4 = 0;
  5143  009DC0  988C               	bcf	3980,4,c	;volatile
  5144                           
  5145                           ; BSR set to: 15
  5146                           ;main.c: 253: ANSD0 = 0;
  5147  009DC2  010F               	movlb	15	; () banked
  5148  009DC4  913B               	bcf	59,0,b	;volatile
  5149                           
  5150                           ; BSR set to: 15
  5151                           ;main.c: 254: TRISD0 = 0;
  5152  009DC6  9095               	bcf	3989,0,c	;volatile
  5153                           
  5154                           ; BSR set to: 15
  5155                           ;main.c: 255: LATD0 = 0;
  5156  009DC8  908C               	bcf	3980,0,c	;volatile
  5157                           
  5158                           ; BSR set to: 15
  5159  009DCA  0012               	return		;funcret
  5160  009DCC                     __end_of_LoRaSleep:
  5161                           	opt stack 0
  5162                           tblptru	equ	0xFF8
  5163                           tblptrh	equ	0xFF7
  5164                           tblptrl	equ	0xFF6
  5165                           tablat	equ	0xFF5
  5166                           intcon	equ	0xFF2
  5167                           intcon2	equ	0xFF1
  5168                           intcon3	equ	0xFF0
  5169                           postinc0	equ	0xFEE
  5170                           wreg	equ	0xFE8
  5171                           postdec2	equ	0xFDD
  5172                           fsr2h	equ	0xFDA
  5173                           fsr2l	equ	0xFD9
  5174                           status	equ	0xFD8
  5175                           
  5176 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5177 ;; Defined at:
  5178 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5179 ;; Parameters:    Size  Location     Type
  5180 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5181 ;;		 -> nwkSKey(16), 
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        2 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    8
  5200 ;; This function calls:
  5201 ;;		_memcpy
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text30
  5208  0099E8                     __ptext30:
  5209                           	opt stack 0
  5210  0099E8                     _LORAWAN_SetNetworkSessionKey:
  5211                           	opt stack 22
  5212                           
  5213                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5214                           
  5215                           ; BSR set to: 15
  5216                           ;incstack = 0
  5217  0099E8  0100               	movlb	0	; () banked
  5218  0099EA  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5219  0099EC  0100               	movlb	0	; () banked
  5220  0099EE  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5221  0099F0  B4D8               	btfsc	status,2,c
  5222  0099F2  0012               	return	
  5223                           
  5224                           ; BSR set to: 0
  5225                           ;lorawan.c: 382: {
  5226                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5227  0099F4  0E22               	movlw	low (_loRa+34)
  5228  0099F6  0100               	movlb	0	; () banked
  5229  0099F8  6F64               	movwf	memcpy@d1& (0+255),b
  5230  0099FA  0E02               	movlw	high (_loRa+34)
  5231  0099FC  0100               	movlb	0	; () banked
  5232  0099FE  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5233  009A00  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5234  009A04  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5235  009A08  0E00               	movlw	0
  5236  009A0A  0100               	movlb	0	; () banked
  5237  009A0C  6F69               	movwf	(memcpy@n+1)& (0+255),b
  5238  009A0E  0E10               	movlw	16
  5239  009A10  6F68               	movwf	memcpy@n& (0+255),b
  5240  009A12  ECCA  F048         	call	_memcpy	;wreg free
  5241                           
  5242                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5243  009A16  0102               	movlb	2	; () banked
  5244  009A18  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5245                           
  5246                           ; BSR set to: 2
  5247                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5248  009A1A  0102               	movlb	2	; () banked
  5249  009A1C  9902               	bcf	(_loRa+2)& (0+255),4,b
  5250  009A1E  0012               	return	
  5251  009A20                     __end_of_LORAWAN_SetNetworkSessionKey:
  5252                           	opt stack 0
  5253                           tblptru	equ	0xFF8
  5254                           tblptrh	equ	0xFF7
  5255                           tblptrl	equ	0xFF6
  5256                           tablat	equ	0xFF5
  5257                           intcon	equ	0xFF2
  5258                           intcon2	equ	0xFF1
  5259                           intcon3	equ	0xFF0
  5260                           postinc0	equ	0xFEE
  5261                           wreg	equ	0xFE8
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5268 ;; Defined at:
  5269 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5272 ;; Auto vars:     Size  Location     Type
  5273 ;;		None
  5274 ;; Return value:  Size  Location     Type
  5275 ;;                  1    wreg      void 
  5276 ;; Registers used:
  5277 ;;		None
  5278 ;; Tracked objects:
  5279 ;;		On entry : 0/0
  5280 ;;		On exit  : 0/0
  5281 ;;		Unchanged: 0/0
  5282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5286 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;Total ram usage:        4 bytes
  5288 ;; Hardware stack levels used:    1
  5289 ;; Hardware stack levels required when called:    7
  5290 ;; This function calls:
  5291 ;;		Nothing
  5292 ;; This function is called by:
  5293 ;;		_main
  5294 ;; This function uses a non-reentrant model
  5295 ;;
  5296                           
  5297                           	psect	text31
  5298  00A164                     __ptext31:
  5299                           	opt stack 0
  5300  00A164                     _LORAWAN_SetDeviceAddress:
  5301                           	opt stack 23
  5302                           
  5303                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5304                           
  5305                           ;incstack = 0
  5306  00A164  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5307  00A168  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5308  00A16C  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5309  00A170  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5310                           
  5311                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5312  00A174  0102               	movlb	2	; () banked
  5313  00A176  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5314                           
  5315                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5316  00A178  0102               	movlb	2	; () banked
  5317  00A17A  9902               	bcf	(_loRa+2)& (0+255),4,b
  5318                           
  5319                           ; BSR set to: 2
  5320  00A17C  0012               	return		;funcret
  5321  00A17E                     __end_of_LORAWAN_SetDeviceAddress:
  5322                           	opt stack 0
  5323                           tblptru	equ	0xFF8
  5324                           tblptrh	equ	0xFF7
  5325                           tblptrl	equ	0xFF6
  5326                           tablat	equ	0xFF5
  5327                           intcon	equ	0xFF2
  5328                           intcon2	equ	0xFF1
  5329                           intcon3	equ	0xFF0
  5330                           postinc0	equ	0xFEE
  5331                           wreg	equ	0xFE8
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5338 ;; Defined at:
  5339 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5342 ;;		 -> appSKey(16), 
  5343 ;; Auto vars:     Size  Location     Type
  5344 ;;		None
  5345 ;; Return value:  Size  Location     Type
  5346 ;;                  1    wreg      void 
  5347 ;; Registers used:
  5348 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5349 ;; Tracked objects:
  5350 ;;		On entry : 0/0
  5351 ;;		On exit  : 0/0
  5352 ;;		Unchanged: 0/0
  5353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5354 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5357 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5358 ;;Total ram usage:        2 bytes
  5359 ;; Hardware stack levels used:    1
  5360 ;; Hardware stack levels required when called:    8
  5361 ;; This function calls:
  5362 ;;		_memcpy
  5363 ;; This function is called by:
  5364 ;;		_main
  5365 ;; This function uses a non-reentrant model
  5366 ;;
  5367                           
  5368                           	psect	text32
  5369  009A20                     __ptext32:
  5370                           	opt stack 0
  5371  009A20                     _LORAWAN_SetApplicationSessionKey:
  5372                           	opt stack 22
  5373                           
  5374                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5375                           
  5376                           ; BSR set to: 2
  5377                           ;incstack = 0
  5378  009A20  0100               	movlb	0	; () banked
  5379  009A22  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5380  009A24  0100               	movlb	0	; () banked
  5381  009A26  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5382  009A28  B4D8               	btfsc	status,2,c
  5383  009A2A  0012               	return	
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;lorawan.c: 397: {
  5387                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5388  009A2C  0E32               	movlw	low (_loRa+50)
  5389  009A2E  0100               	movlb	0	; () banked
  5390  009A30  6F64               	movwf	memcpy@d1& (0+255),b
  5391  009A32  0E02               	movlw	high (_loRa+50)
  5392  009A34  0100               	movlb	0	; () banked
  5393  009A36  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5394  009A38  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5395  009A3C  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5396  009A40  0E00               	movlw	0
  5397  009A42  0100               	movlb	0	; () banked
  5398  009A44  6F69               	movwf	(memcpy@n+1)& (0+255),b
  5399  009A46  0E10               	movlw	16
  5400  009A48  6F68               	movwf	memcpy@n& (0+255),b
  5401  009A4A  ECCA  F048         	call	_memcpy	;wreg free
  5402                           
  5403                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5404  009A4E  0102               	movlb	2	; () banked
  5405  009A50  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5406                           
  5407                           ; BSR set to: 2
  5408                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5409  009A52  0102               	movlb	2	; () banked
  5410  009A54  9902               	bcf	(_loRa+2)& (0+255),4,b
  5411  009A56  0012               	return	
  5412  009A58                     __end_of_LORAWAN_SetApplicationSessionKey:
  5413                           	opt stack 0
  5414                           tblptru	equ	0xFF8
  5415                           tblptrh	equ	0xFF7
  5416                           tblptrl	equ	0xFF6
  5417                           tablat	equ	0xFF5
  5418                           intcon	equ	0xFF2
  5419                           intcon2	equ	0xFF1
  5420                           intcon3	equ	0xFF0
  5421                           postinc0	equ	0xFEE
  5422                           wreg	equ	0xFE8
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428 ;; *************** function _LORAWAN_Mainloop *****************
  5429 ;; Defined at:
  5430 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;		None
  5435 ;; Return value:  Size  Location     Type
  5436 ;;                  1    wreg      void 
  5437 ;; Registers used:
  5438 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5447 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;Total ram usage:        0 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:   18
  5451 ;; This function calls:
  5452 ;;		_INTERRUPT_GetDioStatus
  5453 ;;		_RADIO_DIO0
  5454 ;;		_RADIO_DIO1
  5455 ;;		_RADIO_DIO2
  5456 ;;		_RADIO_DIO3
  5457 ;;		_RADIO_DIO4
  5458 ;;		_RADIO_DIO5
  5459 ;;		_SwTimersExecute
  5460 ;; This function is called by:
  5461 ;;		_main
  5462 ;; This function uses a non-reentrant model
  5463 ;;
  5464                           
  5465                           	psect	text33
  5466  009872                     __ptext33:
  5467                           	opt stack 0
  5468  009872                     _LORAWAN_Mainloop:
  5469                           	opt stack 12
  5470                           
  5471                           ;lorawan.c: 2240: SwTimersExecute();
  5472                           
  5473                           ;incstack = 0
  5474  009872  ECD2  F03A         	call	_SwTimersExecute	;wreg free
  5475                           
  5476                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5477  009876  EC17  F051         	call	_INTERRUPT_GetDioStatus	;wreg free
  5478  00987A  0100               	movlb	0	; () banked
  5479  00987C  6FFB               	movwf	_localDioStatus& (0+255),b
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5483  00987E  0100               	movlb	0	; () banked
  5484  009880  B1FB               	btfsc	_localDioStatus& (0+255),0,b
  5485                           
  5486                           ; BSR set to: 0
  5487                           ;lorawan.c: 2246: {
  5488                           ;lorawan.c: 2247: RADIO_DIO0();
  5489  009882  EC7B  F041         	call	_RADIO_DIO0	;wreg free
  5490                           
  5491                           ;lorawan.c: 2248: }
  5492                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5493  009886  0100               	movlb	0	; () banked
  5494  009888  B3FB               	btfsc	_localDioStatus& (0+255),1,b
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;lorawan.c: 2250: {
  5498                           ;lorawan.c: 2251: RADIO_DIO1();
  5499  00988A  EC89  F049         	call	_RADIO_DIO1	;wreg free
  5500                           
  5501                           ;lorawan.c: 2252: }
  5502                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5503  00988E  0100               	movlb	0	; () banked
  5504  009890  B5FB               	btfsc	_localDioStatus& (0+255),2,b
  5505                           
  5506                           ; BSR set to: 0
  5507                           ;lorawan.c: 2254: {
  5508                           ;lorawan.c: 2255: RADIO_DIO2();
  5509  009892  EC2B  F049         	call	_RADIO_DIO2	;wreg free
  5510                           
  5511                           ;lorawan.c: 2256: }
  5512                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5513  009896  0100               	movlb	0	; () banked
  5514  009898  B7FB               	btfsc	_localDioStatus& (0+255),3,b
  5515                           
  5516                           ; BSR set to: 0
  5517                           ;lorawan.c: 2258: {
  5518                           ;lorawan.c: 2259: RADIO_DIO3();
  5519  00989A  EC60  F04F         	call	_RADIO_DIO3	;wreg free
  5520                           
  5521                           ;lorawan.c: 2260: }
  5522                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5523  00989E  0100               	movlb	0	; () banked
  5524  0098A0  B9FB               	btfsc	_localDioStatus& (0+255),4,b
  5525                           
  5526                           ; BSR set to: 0
  5527                           ;lorawan.c: 2262: {
  5528                           ;lorawan.c: 2263: RADIO_DIO4();
  5529  0098A2  EC99  F04C         	call	_RADIO_DIO4	;wreg free
  5530                           
  5531                           ;lorawan.c: 2264: }
  5532                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5533  0098A6  0100               	movlb	0	; () banked
  5534  0098A8  ABFB               	btfss	_localDioStatus& (0+255),5,b
  5535  0098AA  0012               	return	
  5536                           
  5537                           ; BSR set to: 0
  5538                           ;lorawan.c: 2266: {
  5539                           ;lorawan.c: 2267: RADIO_DIO5();
  5540  0098AC  EC4A  F04E         	call	_RADIO_DIO5	;wreg free
  5541  0098B0  0012               	return	
  5542  0098B2                     __end_of_LORAWAN_Mainloop:
  5543                           	opt stack 0
  5544                           tblptru	equ	0xFF8
  5545                           tblptrh	equ	0xFF7
  5546                           tblptrl	equ	0xFF6
  5547                           tablat	equ	0xFF5
  5548                           intcon	equ	0xFF2
  5549                           intcon2	equ	0xFF1
  5550                           intcon3	equ	0xFF0
  5551                           postinc0	equ	0xFEE
  5552                           wreg	equ	0xFE8
  5553                           postdec2	equ	0xFDD
  5554                           fsr2h	equ	0xFDA
  5555                           fsr2l	equ	0xFD9
  5556                           status	equ	0xFD8
  5557                           
  5558 ;; *************** function _SwTimersExecute *****************
  5559 ;; Defined at:
  5560 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5561 ;; Parameters:    Size  Location     Type
  5562 ;;		None
  5563 ;; Auto vars:     Size  Location     Type
  5564 ;;  i               1  146[BANK0 ] unsigned char 
  5565 ;; Return value:  Size  Location     Type
  5566 ;;                  1    wreg      void 
  5567 ;; Registers used:
  5568 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5569 ;; Tracked objects:
  5570 ;;		On entry : 0/0
  5571 ;;		On exit  : 0/0
  5572 ;;		Unchanged: 0/0
  5573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5574 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5575 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5576 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5577 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5578 ;;Total ram usage:        5 bytes
  5579 ;; Hardware stack levels used:    1
  5580 ;; Hardware stack levels required when called:   17
  5581 ;; This function calls:
  5582 ;;		Absolute function
  5583 ;;		_AckRetransmissionCallback
  5584 ;;		_AutomaticReplyCallback
  5585 ;;		_DutyCycleCallback
  5586 ;;		_LORAWAN_LinkCheckCallback
  5587 ;;		_LORAWAN_ReceiveWindow1Callback
  5588 ;;		_LORAWAN_ReceiveWindow2Callback
  5589 ;;		_RADIO_RxFSKTimeout
  5590 ;;		_RADIO_WatchdogTimeout
  5591 ;;		_UnconfirmedTransmissionCallback
  5592 ;;		_UpdateJoinSuccessState
  5593 ;; This function is called by:
  5594 ;;		_LORAWAN_Mainloop
  5595 ;; This function uses a non-reentrant model
  5596 ;;
  5597                           
  5598                           	psect	text34
  5599  0075A4                     __ptext34:
  5600                           	opt stack 0
  5601  0075A4                     _SwTimersExecute:
  5602                           	opt stack 12
  5603                           
  5604                           ;sw_timer.c: 262: uint8_t i;
  5605                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5606                           
  5607                           ;incstack = 0
  5608  0075A4  9EF2               	bcf	intcon,7,c	;volatile
  5609                           
  5610                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5611  0075A6  0E00               	movlw	0
  5612  0075A8  0100               	movlb	0	; () banked
  5613  0075AA  6FF2               	movwf	SwTimersExecute@i& (0+255),b
  5614  0075AC  D06F               	goto	l17705
  5615  0075AE                     l17691:
  5616                           
  5617                           ; BSR set to: 0
  5618                           ;sw_timer.c: 266: {
  5619                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5620  0075AE  0100               	movlb	0	; () banked
  5621  0075B0  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5622  0075B2  0D08               	mullw	8
  5623  0075B4  0E04               	movlw	4
  5624  0075B6  26F3               	addwf	prodl,f,c
  5625  0075B8  0E00               	movlw	0
  5626  0075BA  22F4               	addwfc	prodh,f,c
  5627  0075BC  0E00               	movlw	low _swTimers
  5628  0075BE  24F3               	addwf	prodl,w,c
  5629  0075C0  6ED9               	movwf	fsr2l,c
  5630  0075C2  0E03               	movlw	high _swTimers
  5631  0075C4  20F4               	addwfc	prodh,w,c
  5632  0075C6  6EDA               	movwf	fsr2h,c
  5633  0075C8  04DE               	decf	postinc2,w,c
  5634  0075CA  A4D8               	btfss	status,2,c
  5635  0075CC  D05D               	goto	l17703
  5636                           
  5637                           ; BSR set to: 0
  5638                           ;sw_timer.c: 270: {
  5639                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5640  0075CE  0100               	movlb	0	; () banked
  5641  0075D0  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5642  0075D2  0D08               	mullw	8
  5643  0075D4  0E00               	movlw	low _swTimers
  5644  0075D6  24F3               	addwf	prodl,w,c
  5645  0075D8  6ED9               	movwf	fsr2l,c
  5646  0075DA  0E03               	movlw	high _swTimers
  5647  0075DC  20F4               	addwfc	prodh,w,c
  5648  0075DE  6EDA               	movwf	fsr2h,c
  5649  0075E0  50DE               	movf	postinc2,w,c
  5650  0075E2  10DE               	iorwf	postinc2,w,c
  5651  0075E4  10DE               	iorwf	postinc2,w,c
  5652  0075E6  10DE               	iorwf	postinc2,w,c
  5653  0075E8  A4D8               	btfss	status,2,c
  5654  0075EA  D04E               	goto	l17703
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;sw_timer.c: 272: {
  5658                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5659  0075EC  0100               	movlb	0	; () banked
  5660  0075EE  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5661  0075F0  0D08               	mullw	8
  5662  0075F2  0E04               	movlw	4
  5663  0075F4  26F3               	addwf	prodl,f,c
  5664  0075F6  0E00               	movlw	0
  5665  0075F8  22F4               	addwfc	prodh,f,c
  5666  0075FA  0E00               	movlw	low _swTimers
  5667  0075FC  24F3               	addwf	prodl,w,c
  5668  0075FE  6ED9               	movwf	fsr2l,c
  5669  007600  0E03               	movlw	high _swTimers
  5670  007602  20F4               	addwfc	prodh,w,c
  5671  007604  6EDA               	movwf	fsr2h,c
  5672  007606  0E00               	movlw	0
  5673  007608  6EDF               	movwf	indf2,c
  5674                           
  5675                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5676  00760A  0100               	movlb	0	; () banked
  5677  00760C  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5678  00760E  0D08               	mullw	8
  5679  007610  0E06               	movlw	6
  5680  007612  26F3               	addwf	prodl,f,c
  5681  007614  0E00               	movlw	0
  5682  007616  22F4               	addwfc	prodh,f,c
  5683  007618  0E00               	movlw	low _swTimers
  5684  00761A  24F3               	addwf	prodl,w,c
  5685  00761C  6ED9               	movwf	fsr2l,c
  5686  00761E  0E03               	movlw	high _swTimers
  5687  007620  20F4               	addwfc	prodh,w,c
  5688  007622  6EDA               	movwf	fsr2h,c
  5689  007624  50DE               	movf	postinc2,w,c
  5690  007626  10DE               	iorwf	postinc2,w,c
  5691  007628  B4D8               	btfsc	status,2,c
  5692  00762A  D02E               	goto	l17703
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;sw_timer.c: 275: {
  5696                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5697  00762C  8EF2               	bsf	intcon,7,c	;volatile
  5698                           
  5699                           ; BSR set to: 0
  5700                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5701  00762E  0100               	movlb	0	; () banked
  5702  007630  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5703  007632  0D08               	mullw	8
  5704  007634  0E05               	movlw	5
  5705  007636  26F3               	addwf	prodl,f,c
  5706  007638  0E00               	movlw	0
  5707  00763A  22F4               	addwfc	prodh,f,c
  5708  00763C  0E00               	movlw	low _swTimers
  5709  00763E  24F3               	addwf	prodl,w,c
  5710  007640  6ED9               	movwf	fsr2l,c
  5711  007642  0E03               	movlw	high _swTimers
  5712  007644  20F4               	addwfc	prodh,w,c
  5713  007646  6EDA               	movwf	fsr2h,c
  5714  007648  50DF               	movf	indf2,w,c
  5715  00764A  6EE6               	movwf	postinc1,c
  5716  00764C  0100               	movlb	0	; () banked
  5717  00764E  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5718  007650  0D08               	mullw	8
  5719  007652  0E06               	movlw	6
  5720  007654  26F3               	addwf	prodl,f,c
  5721  007656  0E00               	movlw	0
  5722  007658  22F4               	addwfc	prodh,f,c
  5723  00765A  0E00               	movlw	low _swTimers
  5724  00765C  24F3               	addwf	prodl,w,c
  5725  00765E  6ED9               	movwf	fsr2l,c
  5726  007660  0E03               	movlw	high _swTimers
  5727  007662  20F4               	addwfc	prodh,w,c
  5728  007664  6EDA               	movwf	fsr2h,c
  5729  007666  CFDE F0EE          	movff	postinc2,??_SwTimersExecute
  5730  00766A  CFDD F0EF          	movff	postdec2,??_SwTimersExecute+1
  5731  00766E  D801               	call	u21978
  5732  007670  D00A               	goto	l17701
  5733  007672                     u21978:
  5734  007672  0005               	push	
  5735  007674  6EFA               	movwf	pclath,c
  5736  007676  0100               	movlb	0	; () banked
  5737  007678  51EE               	movf	??_SwTimersExecute& (0+255),w,b
  5738  00767A  6EFD               	movwf	tosl,c
  5739  00767C  51EF               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5740  00767E  6EFE               	movwf	tosh,c
  5741  007680  6AFF               	clrf	tosu,c
  5742  007682  50FA               	movf	pclath,w,c
  5743  007684  0012               	return		;indir
  5744  007686                     l17701:
  5745                           
  5746                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5747  007686  9EF2               	bcf	intcon,7,c	;volatile
  5748  007688                     l17703:
  5749  007688  0100               	movlb	0	; () banked
  5750  00768A  2BF2               	incf	SwTimersExecute@i& (0+255),f,b
  5751  00768C                     l17705:
  5752                           
  5753                           ; BSR set to: 0
  5754  00768C  0100               	movlb	0	; () banked
  5755  00768E  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5756  007690  0100               	movlb	0	; () banked
  5757  007692  5DF2               	subwf	SwTimersExecute@i& (0+255),w,b
  5758  007694  A0D8               	btfss	status,0,c
  5759  007696  D78B               	goto	l17691
  5760                           
  5761                           ; BSR set to: 0
  5762                           ;sw_timer.c: 279: }
  5763                           ;sw_timer.c: 280: }
  5764                           ;sw_timer.c: 281: }
  5765                           ;sw_timer.c: 282: }
  5766                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5767  007698  8EF2               	bsf	intcon,7,c	;volatile
  5768                           
  5769                           ; BSR set to: 0
  5770  00769A  0012               	return		;funcret
  5771  00769C                     __end_of_SwTimersExecute:
  5772                           	opt stack 0
  5773                           tosu	equ	0xFFF
  5774                           tosh	equ	0xFFE
  5775                           tosl	equ	0xFFD
  5776                           pclath	equ	0xFFA
  5777                           tblptru	equ	0xFF8
  5778                           tblptrh	equ	0xFF7
  5779                           tblptrl	equ	0xFF6
  5780                           tablat	equ	0xFF5
  5781                           prodh	equ	0xFF4
  5782                           prodl	equ	0xFF3
  5783                           intcon	equ	0xFF2
  5784                           intcon2	equ	0xFF1
  5785                           intcon3	equ	0xFF0
  5786                           postinc0	equ	0xFEE
  5787                           wreg	equ	0xFE8
  5788                           postinc1	equ	0xFE6
  5789                           indf2	equ	0xFDF
  5790                           postinc2	equ	0xFDE
  5791                           postdec2	equ	0xFDD
  5792                           fsr2h	equ	0xFDA
  5793                           fsr2l	equ	0xFD9
  5794                           status	equ	0xFD8
  5795                           
  5796 ;; *************** function _DutyCycleCallback *****************
  5797 ;; Defined at:
  5798 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5799 ;; Parameters:    Size  Location     Type
  5800 ;;  param           1  [STACK] unsigned char 
  5801 ;; Auto vars:     Size  Location     Type
  5802 ;;  minim           4  [STACK] unsigned long 
  5803 ;;  i               1  [STACK] unsigned char 
  5804 ;;  found           1  [STACK] unsigned char 
  5805 ;; Return value:  Size  Location     Type
  5806 ;;                  1  [STACK] void 
  5807 ;; Registers used:
  5808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  5809 ;; Tracked objects:
  5810 ;;		On entry : F/0
  5811 ;;		On exit  : 0/0
  5812 ;;		Unchanged: 0/0
  5813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5814 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5817 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5818 ;;Total ram usage:        0 bytes
  5819 ;; Hardware stack levels used:    1
  5820 ;; Hardware stack levels required when called:   11
  5821 ;; This function calls:
  5822 ;;		_SwTimerSetTimeout
  5823 ;;		_SwTimerStart
  5824 ;;		___lldiv
  5825 ;; This function is called by:
  5826 ;;		_SetCallbackSoftwareTimers
  5827 ;;		_SwTimersExecute
  5828 ;; This function uses a reentrant model
  5829 ;;
  5830                           
  5831                           	psect	text35
  5832  003E6E                     __ptext35:
  5833                           	opt stack 0
  5834  003E6E                     _DutyCycleCallback:
  5835                           	opt stack 0
  5836                           
  5837                           ; BSR set to: 0
  5838                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5839  003E6E  0E0A               	movlw	10
  5840  003E70  26E1               	addwf	fsr1l,f,c
  5841  003E72  0E00               	movlw	0
  5842  003E74  22E2               	addwfc	fsr1h,f,c
  5843                           
  5844                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5845                           
  5846                           ;incstack = 0
  5847  003E76  0EFF               	movlw	255
  5848  003E78  6E56               	movwf	btemp+8,c
  5849  003E7A  0EFF               	movlw	255
  5850  003E7C  6E57               	movwf	btemp+9,c
  5851  003E7E  0EFF               	movlw	255
  5852  003E80  6E58               	movwf	btemp+10,c
  5853  003E82  0EFF               	movlw	255
  5854  003E84  6E59               	movwf	btemp+11,c
  5855                           
  5856                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5857  003E86  0EFA               	movlw	-6
  5858  003E88  C056  FFE3         	movff	btemp+8,plusw1
  5859  003E8C  0EFB               	movlw	-5
  5860  003E8E  C057  FFE3         	movff	btemp+9,plusw1
  5861  003E92  0EFC               	movlw	-4
  5862  003E94  C058  FFE3         	movff	btemp+10,plusw1
  5863  003E98  0EFD               	movlw	-3
  5864  003E9A  C059  FFE3         	movff	btemp+11,plusw1
  5865                           
  5866                           ;lorawan_eu.c: 1224: bool found = 0;
  5867                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5868  003E9E  0EFF               	movlw	-1
  5869  003EA0  6AE3               	clrf	plusw1,c
  5870                           
  5871                           ;lorawan_eu.c: 1225: uint8_t i;
  5872                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5873                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5874  003EA2  0EFE               	movlw	-2
  5875  003EA4  6AE3               	clrf	plusw1,c
  5876  003EA6                     l16367:
  5877                           
  5878                           ;lorawan_eu.c: 1228: {
  5879                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5880                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5881  003EA6  0EFE               	movlw	-2
  5882  003EA8  50E3               	movf	plusw1,w,c
  5883  003EAA  0D0E               	mullw	14
  5884  003EAC  0E04               	movlw	low (_Channels+4)
  5885  003EAE  24F3               	addwf	prodl,w,c
  5886  003EB0  6ED9               	movwf	fsr2l,c
  5887  003EB2  0E04               	movlw	high (_Channels+4)
  5888  003EB4  20F4               	addwfc	prodh,w,c
  5889  003EB6  6EDA               	movwf	fsr2h,c
  5890  003EB8  04DE               	decf	postinc2,w,c
  5891  003EBA  A4D8               	btfss	status,2,c
  5892  003EBC  D0B4               	goto	l16385
  5893                           
  5894                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5895  003EBE  0EFE               	movlw	-2
  5896  003EC0  50E3               	movf	plusw1,w,c
  5897  003EC2  0D0E               	mullw	14
  5898  003EC4  0E08               	movlw	low (_Channels+8)
  5899  003EC6  24F3               	addwf	prodl,w,c
  5900  003EC8  6ED9               	movwf	fsr2l,c
  5901  003ECA  0E04               	movlw	high (_Channels+8)
  5902  003ECC  20F4               	addwfc	prodh,w,c
  5903  003ECE  6EDA               	movwf	fsr2h,c
  5904  003ED0  50DE               	movf	postinc2,w,c
  5905  003ED2  10DE               	iorwf	postinc2,w,c
  5906  003ED4  10DE               	iorwf	postinc2,w,c
  5907  003ED6  10DE               	iorwf	postinc2,w,c
  5908  003ED8  B4D8               	btfsc	status,2,c
  5909  003EDA  D0A5               	goto	l16385
  5910                           
  5911                           ;lorawan_eu.c: 1231: {
  5912                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  5913                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5914  003EDC  0EFE               	movlw	-2
  5915  003EDE  50E3               	movf	plusw1,w,c
  5916  003EE0  0D0E               	mullw	14
  5917  003EE2  0E08               	movlw	low (_Channels+8)
  5918  003EE4  24F3               	addwf	prodl,w,c
  5919  003EE6  6ED9               	movwf	fsr2l,c
  5920  003EE8  0E04               	movlw	high (_Channels+8)
  5921  003EEA  20F4               	addwfc	prodh,w,c
  5922  003EEC  6EDA               	movwf	fsr2h,c
  5923  003EEE  50DE               	movf	postinc2,w,c
  5924  003EF0  0102               	movlb	2	; () banked
  5925  003EF2  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  5926  003EF4  50DE               	movf	postinc2,w,c
  5927  003EF6  0102               	movlb	2	; () banked
  5928  003EF8  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  5929  003EFA  50DE               	movf	postinc2,w,c
  5930  003EFC  0102               	movlb	2	; () banked
  5931  003EFE  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  5932  003F00  50DE               	movf	postinc2,w,c
  5933  003F02  0102               	movlb	2	; () banked
  5934  003F04  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  5935  003F06  B0D8               	btfsc	status,0,c
  5936  003F08  D033               	goto	l16375
  5937                           
  5938                           ; BSR set to: 2
  5939                           ;lorawan_eu.c: 1233: {
  5940                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  5941                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5942  003F0A  0EFE               	movlw	-2
  5943  003F0C  50E3               	movf	plusw1,w,c
  5944  003F0E  0D0E               	mullw	14
  5945  003F10  0E08               	movlw	low (_Channels+8)
  5946  003F12  24F3               	addwf	prodl,w,c
  5947  003F14  6ED9               	movwf	fsr2l,c
  5948  003F16  0E04               	movlw	high (_Channels+8)
  5949  003F18  20F4               	addwfc	prodh,w,c
  5950  003F1A  6EDA               	movwf	fsr2h,c
  5951  003F1C  CFDE F056          	movff	postinc2,btemp+8
  5952  003F20  CFDE F057          	movff	postinc2,btemp+9
  5953  003F24  CFDE F058          	movff	postinc2,btemp+10
  5954  003F28  CFDE F059          	movff	postinc2,btemp+11
  5955  003F2C  0102               	movlb	2	; () banked
  5956  003F2E  51C8               	movf	(_loRa+200)& (0+255),w,b
  5957  003F30  5C56               	subwf	btemp+8,w,c
  5958  003F32  6E52               	movwf	btemp+4,c
  5959  003F34  0102               	movlb	2	; () banked
  5960  003F36  51C9               	movf	(_loRa+201)& (0+255),w,b
  5961  003F38  5857               	subwfb	btemp+9,w,c
  5962  003F3A  6E53               	movwf	btemp+5,c
  5963  003F3C  0102               	movlb	2	; () banked
  5964  003F3E  51CA               	movf	(_loRa+202)& (0+255),w,b
  5965  003F40  5858               	subwfb	btemp+10,w,c
  5966  003F42  6E54               	movwf	btemp+6,c
  5967  003F44  0102               	movlb	2	; () banked
  5968  003F46  51CB               	movf	(_loRa+203)& (0+255),w,b
  5969  003F48  5859               	subwfb	btemp+11,w,c
  5970  003F4A  6E55               	movwf	btemp+7,c
  5971                           
  5972                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5973  003F4C  0EFE               	movlw	-2
  5974  003F4E  50E3               	movf	plusw1,w,c
  5975  003F50  0D0E               	mullw	14
  5976  003F52  0E08               	movlw	low (_Channels+8)
  5977  003F54  24F3               	addwf	prodl,w,c
  5978  003F56  6ED9               	movwf	fsr2l,c
  5979  003F58  0E04               	movlw	high (_Channels+8)
  5980  003F5A  20F4               	addwfc	prodh,w,c
  5981  003F5C  6EDA               	movwf	fsr2h,c
  5982  003F5E  C052  FFDE         	movff	btemp+4,postinc2
  5983  003F62  C053  FFDE         	movff	btemp+5,postinc2
  5984  003F66  C054  FFDE         	movff	btemp+6,postinc2
  5985  003F6A  C055  FFDE         	movff	btemp+7,postinc2
  5986                           
  5987                           ;lorawan_eu.c: 1235: }
  5988  003F6E  D00D               	goto	l16377
  5989  003F70                     l16375:
  5990                           
  5991                           ; BSR set to: 2
  5992                           ;lorawan_eu.c: 1236: else
  5993                           ;lorawan_eu.c: 1237: {
  5994                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  5995                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5996  003F70  0EFE               	movlw	-2
  5997  003F72  50E3               	movf	plusw1,w,c
  5998  003F74  0D0E               	mullw	14
  5999  003F76  0E08               	movlw	low (_Channels+8)
  6000  003F78  24F3               	addwf	prodl,w,c
  6001  003F7A  6ED9               	movwf	fsr2l,c
  6002  003F7C  0E04               	movlw	high (_Channels+8)
  6003  003F7E  20F4               	addwfc	prodh,w,c
  6004  003F80  6EDA               	movwf	fsr2h,c
  6005  003F82  6ADE               	clrf	postinc2,c
  6006  003F84  6ADE               	clrf	postinc2,c
  6007  003F86  6ADE               	clrf	postinc2,c
  6008  003F88  6ADD               	clrf	postdec2,c
  6009  003F8A                     l16377:
  6010                           
  6011                           ; BSR set to: 2
  6012                           ;lorawan_eu.c: 1239: }
  6013                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  6014                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6015  003F8A  0EFE               	movlw	-2
  6016  003F8C  50E3               	movf	plusw1,w,c
  6017  003F8E  0D0E               	mullw	14
  6018  003F90  0E08               	movlw	low (_Channels+8)
  6019  003F92  24F3               	addwf	prodl,w,c
  6020  003F94  6ED9               	movwf	fsr2l,c
  6021  003F96  0E04               	movlw	high (_Channels+8)
  6022  003F98  20F4               	addwfc	prodh,w,c
  6023  003F9A  6EDA               	movwf	fsr2h,c
  6024                           
  6025                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6026  003F9C  0EFA               	movlw	-6
  6027  003F9E  CFE3 F04E          	movff	plusw1,btemp
  6028  003FA2  50DE               	movf	postinc2,w,c
  6029  003FA4  5C4E               	subwf	btemp,w,c
  6030  003FA6  0EFB               	movlw	-5
  6031  003FA8  CFE3 F04E          	movff	plusw1,btemp
  6032  003FAC  50DE               	movf	postinc2,w,c
  6033  003FAE  584E               	subwfb	btemp,w,c
  6034  003FB0  0EFC               	movlw	-4
  6035  003FB2  CFE3 F04E          	movff	plusw1,btemp
  6036  003FB6  50DE               	movf	postinc2,w,c
  6037  003FB8  584E               	subwfb	btemp,w,c
  6038  003FBA  0EFD               	movlw	-3
  6039  003FBC  CFE3 F04E          	movff	plusw1,btemp
  6040  003FC0  50DE               	movf	postinc2,w,c
  6041  003FC2  584E               	subwfb	btemp,w,c
  6042  003FC4  A0D8               	btfss	status,0,c
  6043  003FC6  D02F               	goto	l16385
  6044                           
  6045                           ; BSR set to: 2
  6046                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6047  003FC8  0EFE               	movlw	-2
  6048  003FCA  50E3               	movf	plusw1,w,c
  6049  003FCC  0D0E               	mullw	14
  6050  003FCE  0E08               	movlw	low (_Channels+8)
  6051  003FD0  24F3               	addwf	prodl,w,c
  6052  003FD2  6ED9               	movwf	fsr2l,c
  6053  003FD4  0E04               	movlw	high (_Channels+8)
  6054  003FD6  20F4               	addwfc	prodh,w,c
  6055  003FD8  6EDA               	movwf	fsr2h,c
  6056  003FDA  50DE               	movf	postinc2,w,c
  6057  003FDC  10DE               	iorwf	postinc2,w,c
  6058  003FDE  10DE               	iorwf	postinc2,w,c
  6059  003FE0  10DE               	iorwf	postinc2,w,c
  6060  003FE2  B4D8               	btfsc	status,2,c
  6061  003FE4  D020               	goto	l16385
  6062                           
  6063                           ; BSR set to: 2
  6064                           ;lorawan_eu.c: 1241: {
  6065                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  6066                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6067  003FE6  0EFE               	movlw	-2
  6068  003FE8  50E3               	movf	plusw1,w,c
  6069  003FEA  0D0E               	mullw	14
  6070  003FEC  0E08               	movlw	low (_Channels+8)
  6071  003FEE  24F3               	addwf	prodl,w,c
  6072  003FF0  6ED9               	movwf	fsr2l,c
  6073  003FF2  0E04               	movlw	high (_Channels+8)
  6074  003FF4  20F4               	addwfc	prodh,w,c
  6075  003FF6  6EDA               	movwf	fsr2h,c
  6076  003FF8  CFDE F056          	movff	postinc2,btemp+8
  6077  003FFC  CFDE F057          	movff	postinc2,btemp+9
  6078  004000  CFDE F058          	movff	postinc2,btemp+10
  6079  004004  CFDE F059          	movff	postinc2,btemp+11
  6080                           
  6081                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6082  004008  0EFA               	movlw	-6
  6083  00400A  C056  FFE3         	movff	btemp+8,plusw1
  6084  00400E  0EFB               	movlw	-5
  6085  004010  C057  FFE3         	movff	btemp+9,plusw1
  6086  004014  0EFC               	movlw	-4
  6087  004016  C058  FFE3         	movff	btemp+10,plusw1
  6088  00401A  0EFD               	movlw	-3
  6089  00401C  C059  FFE3         	movff	btemp+11,plusw1
  6090                           
  6091                           ; BSR set to: 2
  6092                           ;lorawan_eu.c: 1243: found = 1;
  6093                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6094  004020  0EFF               	movlw	-1
  6095  004022  6AE3               	clrf	plusw1,c
  6096  004024  2AE3               	incf	plusw1,f,c
  6097  004026                     l16385:
  6098                           
  6099                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6100  004026  0EFE               	movlw	-2
  6101  004028  2AE3               	incf	plusw1,f,c
  6102                           
  6103                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6104  00402A  0EFE               	movlw	-2
  6105  00402C  CFE3 F04E          	movff	plusw1,btemp
  6106  004030  0E0F               	movlw	15
  6107  004032  644E               	cpfsgt	btemp,c
  6108  004034  D738               	goto	l16367
  6109                           
  6110                           ;lorawan_eu.c: 1244: }
  6111                           ;lorawan_eu.c: 1245: }
  6112                           ;lorawan_eu.c: 1246: }
  6113                           ;lorawan_eu.c: 1247: if ( found == 1 )
  6114                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6115  004036  0EFF               	movlw	-1
  6116  004038  04E3               	decf	plusw1,w,c
  6117  00403A  A4D8               	btfss	status,2,c
  6118  00403C  D09D               	goto	l1295
  6119                           
  6120                           ;lorawan_eu.c: 1248: {
  6121                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6122                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6123  00403E  50E1               	movf	fsr1l,w,c
  6124  004040  0FFA               	addlw	-6
  6125  004042  6ED9               	movwf	fsr2l,c
  6126  004044  50E2               	movf	fsr1h,w,c
  6127  004046  6EDA               	movwf	fsr2h,c
  6128  004048  0EFF               	movlw	255
  6129  00404A  22DA               	addwfc	fsr2h,f,c
  6130  00404C  CFDE F2C8          	movff	postinc2,_loRa+200
  6131  004050  CFDE F2C9          	movff	postinc2,_loRa+201
  6132  004054  CFDE F2CA          	movff	postinc2,_loRa+202
  6133  004058  CFDE F2CB          	movff	postinc2,_loRa+203
  6134                           
  6135                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6136                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6137  00405C  0EFD               	movlw	-3
  6138  00405E  50E3               	movf	plusw1,w,c
  6139  004060  E10E               	bnz	u19690
  6140  004062  0EFA               	movlw	-6
  6141  004064  28E3               	incf	plusw1,w,c
  6142  004066  0EFB               	movlw	-5
  6143  004068  CFE3 F04E          	movff	plusw1,btemp
  6144  00406C  0EFF               	movlw	255
  6145  00406E  5A4E               	subwfb	btemp,f,c
  6146  004070  0EFC               	movlw	-4
  6147  004072  CFE3 F04E          	movff	plusw1,btemp
  6148  004076  0E0F               	movlw	15
  6149  004078  5A4E               	subwfb	btemp,f,c
  6150  00407A  A0D8               	btfss	status,0,c
  6151  00407C  D02B               	goto	l16397
  6152  00407E                     u19690:
  6153                           
  6154                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6155  00407E  50E1               	movf	fsr1l,w,c
  6156  004080  0FFA               	addlw	-6
  6157  004082  6ED9               	movwf	fsr2l,c
  6158  004084  50E2               	movf	fsr1h,w,c
  6159  004086  6EDA               	movwf	fsr2h,c
  6160  004088  0EFF               	movlw	255
  6161  00408A  22DA               	addwfc	fsr2h,f,c
  6162  00408C  CFDE F064          	movff	postinc2,___lldiv@dividend
  6163  004090  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6164  004094  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6165  004098  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6166  00409C  0E7D               	movlw	125
  6167  00409E  0100               	movlb	0	; () banked
  6168  0040A0  6F68               	movwf	___lldiv@divisor& (0+255),b
  6169  0040A2  0E00               	movlw	0
  6170  0040A4  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6171  0040A6  0E00               	movlw	0
  6172  0040A8  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6173  0040AA  0E00               	movlw	0
  6174  0040AC  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6175  0040AE  EC08  F03F         	call	___lldiv	;wreg free
  6176  0040B2  C064  F056         	movff	?___lldiv,btemp+8
  6177  0040B6  C065  F057         	movff	?___lldiv+1,btemp+9
  6178  0040BA  C066  F058         	movff	?___lldiv+2,btemp+10
  6179  0040BE  C067  F059         	movff	?___lldiv+3,btemp+11
  6180  0040C2  0E0C               	movlw	12
  6181  0040C4                     u19705:
  6182  0040C4  90D8               	bcf	status,0,c
  6183  0040C6  3656               	rlcf	btemp+8,f,c
  6184  0040C8  3657               	rlcf	btemp+9,f,c
  6185  0040CA  3658               	rlcf	btemp+10,f,c
  6186  0040CC  3659               	rlcf	btemp+11,f,c
  6187  0040CE  2EE8               	decfsz	wreg,f,c
  6188  0040D0  D7F9               	goto	u19705
  6189  0040D2  D02F               	goto	L1
  6190  0040D4                     l16397:
  6191                           
  6192                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6193  0040D4  0EFA               	movlw	-6
  6194  0040D6  CFE3 F056          	movff	plusw1,btemp+8
  6195  0040DA  0EFB               	movlw	-5
  6196  0040DC  CFE3 F057          	movff	plusw1,btemp+9
  6197  0040E0  0EFC               	movlw	-4
  6198  0040E2  CFE3 F058          	movff	plusw1,btemp+10
  6199  0040E6  0EFD               	movlw	-3
  6200  0040E8  CFE3 F059          	movff	plusw1,btemp+11
  6201  0040EC  0E0C               	movlw	12
  6202  0040EE                     u19715:
  6203  0040EE  90D8               	bcf	status,0,c
  6204  0040F0  3656               	rlcf	btemp+8,f,c
  6205  0040F2  3657               	rlcf	btemp+9,f,c
  6206  0040F4  3658               	rlcf	btemp+10,f,c
  6207  0040F6  3659               	rlcf	btemp+11,f,c
  6208  0040F8  2EE8               	decfsz	wreg,f,c
  6209  0040FA  D7F9               	goto	u19715
  6210  0040FC  C056  F064         	movff	btemp+8,___lldiv@dividend
  6211  004100  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  6212  004104  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  6213  004108  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  6214  00410C  0E7D               	movlw	125
  6215  00410E  0100               	movlb	0	; () banked
  6216  004110  6F68               	movwf	___lldiv@divisor& (0+255),b
  6217  004112  0E00               	movlw	0
  6218  004114  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6219  004116  0E00               	movlw	0
  6220  004118  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6221  00411A  0E00               	movlw	0
  6222  00411C  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6223  00411E  EC08  F03F         	call	___lldiv	;wreg free
  6224  004122  C064  F056         	movff	?___lldiv,btemp+8
  6225  004126  C065  F057         	movff	?___lldiv+1,btemp+9
  6226  00412A  C066  F058         	movff	?___lldiv+2,btemp+10
  6227  00412E  C067  F059         	movff	?___lldiv+3,btemp+11
  6228  004132                     L1:
  6229                           
  6230                           ;stkvar	_DutyCycleCallback$2264 @ sp[(-10)+0]
  6231  004132  0EF6               	movlw	-10
  6232  004134  C056  FFE3         	movff	btemp+8,plusw1
  6233  004138  0EF7               	movlw	-9
  6234  00413A  C057  FFE3         	movff	btemp+9,plusw1
  6235  00413E  0EF8               	movlw	-8
  6236  004140  C058  FFE3         	movff	btemp+10,plusw1
  6237  004144  0EF9               	movlw	-7
  6238  004146  C059  FFE3         	movff	btemp+11,plusw1
  6239                           
  6240                           ;stkvar	_DutyCycleCallback$2264 @ sp[(-10)+0]
  6241  00414A  50E1               	movf	fsr1l,w,c
  6242  00414C  0FF6               	addlw	-10
  6243  00414E  6ED9               	movwf	fsr2l,c
  6244  004150  50E2               	movf	fsr1h,w,c
  6245  004152  6EDA               	movwf	fsr2h,c
  6246  004154  0EFF               	movlw	255
  6247  004156  22DA               	addwfc	fsr2h,f,c
  6248  004158  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6249  00415C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6250  004160  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6251  004164  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6252  004168  0102               	movlb	2	; () banked
  6253  00416A  51E9               	movf	(_loRa+233)& (0+255),w,b
  6254  00416C  EC33  F04A         	call	_SwTimerSetTimeout
  6255                           
  6256                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6257  004170  0102               	movlb	2	; () banked
  6258  004172  51E9               	movf	(_loRa+233)& (0+255),w,b
  6259  004174  ECCB  F041         	call	_SwTimerStart
  6260  004178                     l1295:
  6261                           
  6262                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6263  004178  0EF5               	movlw	245
  6264  00417A  26E1               	addwf	fsr1l,f,c
  6265  00417C  0EFF               	movlw	255
  6266  00417E  22E2               	addwfc	fsr1h,f,c
  6267  004180  0012               	return		;funcret
  6268  004182                     __end_of_DutyCycleCallback:
  6269                           	opt stack 0
  6270                           tosu	equ	0xFFF
  6271                           tosh	equ	0xFFE
  6272                           tosl	equ	0xFFD
  6273                           pclath	equ	0xFFA
  6274                           tblptru	equ	0xFF8
  6275                           tblptrh	equ	0xFF7
  6276                           tblptrl	equ	0xFF6
  6277                           tablat	equ	0xFF5
  6278                           prodh	equ	0xFF4
  6279                           prodl	equ	0xFF3
  6280                           intcon	equ	0xFF2
  6281                           intcon2	equ	0xFF1
  6282                           intcon3	equ	0xFF0
  6283                           postinc0	equ	0xFEE
  6284                           wreg	equ	0xFE8
  6285                           postinc1	equ	0xFE6
  6286                           plusw1	equ	0xFE3
  6287                           fsr1h	equ	0xFE2
  6288                           fsr1l	equ	0xFE1
  6289                           indf2	equ	0xFDF
  6290                           postinc2	equ	0xFDE
  6291                           postdec2	equ	0xFDD
  6292                           fsr2h	equ	0xFDA
  6293                           fsr2l	equ	0xFD9
  6294                           status	equ	0xFD8
  6295                           
  6296 ;; *************** function _UpdateJoinSuccessState *****************
  6297 ;; Defined at:
  6298 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  param           1  [STACK] unsigned char 
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1  [STACK] void 
  6305 ;; Registers used:
  6306 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used:    1
  6318 ;; Hardware stack levels required when called:   11
  6319 ;; This function calls:
  6320 ;;		_RxJoinResponse
  6321 ;;		_SwTimerSetTimeout
  6322 ;;		_SwTimerStart
  6323 ;;		___lldiv
  6324 ;; This function is called by:
  6325 ;;		_SetCallbackSoftwareTimers
  6326 ;;		_LORAWAN_RxDone
  6327 ;;		_SwTimersExecute
  6328 ;; This function uses a reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text36
  6332  0065B0                     __ptext36:
  6333                           	opt stack 0
  6334  0065B0                     _UpdateJoinSuccessState:
  6335                           	opt stack 0
  6336                           
  6337                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6338  0065B0  52E6               	movf	postinc1,f,c
  6339  0065B2  52E6               	movf	postinc1,f,c
  6340  0065B4  52E6               	movf	postinc1,f,c
  6341  0065B6  52E6               	movf	postinc1,f,c
  6342                           
  6343                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6344                           
  6345                           ;incstack = 0
  6346  0065B8  0102               	movlb	2	; () banked
  6347  0065BA  9500               	bcf	_loRa& (0+255),2,b
  6348                           
  6349                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6350  0065BC  0102               	movlb	2	; () banked
  6351  0065BE  8902               	bsf	(_loRa+2)& (0+255),4,b
  6352                           
  6353                           ; BSR set to: 2
  6354                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6355  0065C0  0EF0               	movlw	-16
  6356  0065C2  0102               	movlb	2	; () banked
  6357  0065C4  1702               	andwf	(_loRa+2)& (0+255),f,b
  6358                           
  6359                           ; BSR set to: 2
  6360                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6361  0065C6  0102               	movlb	2	; () banked
  6362  0065C8  6BD0               	clrf	(_loRa+208)& (0+255),b
  6363  0065CA  6BD1               	clrf	(_loRa+209)& (0+255),b
  6364                           
  6365                           ; BSR set to: 2
  6366                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6367  0065CC  0102               	movlb	2	; () banked
  6368  0065CE  6BEE               	clrf	(_loRa+238)& (0+255),b
  6369                           
  6370                           ; BSR set to: 2
  6371                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6372  0065D0  0102               	movlb	2	; () banked
  6373  0065D2  A503               	btfss	(_loRa+3)& (0+255),2,b
  6374  0065D4  D07F               	goto	l15285
  6375                           
  6376                           ; BSR set to: 2
  6377                           ;lorawan.c: 1052: {
  6378                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6379  0065D6  0102               	movlb	2	; () banked
  6380  0065D8  51CF               	movf	(_loRa+207)& (0+255),w,b
  6381  0065DA  E10A               	bnz	u17640
  6382  0065DC  0102               	movlb	2	; () banked
  6383  0065DE  29CC               	incf	(_loRa+204)& (0+255),w,b
  6384  0065E0  0EFF               	movlw	255
  6385  0065E2  0102               	movlb	2	; () banked
  6386  0065E4  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6387  0065E6  0E0F               	movlw	15
  6388  0065E8  0102               	movlb	2	; () banked
  6389  0065EA  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6390  0065EC  A0D8               	btfss	status,0,c
  6391  0065EE  D024               	goto	l15279
  6392  0065F0                     u17640:
  6393                           
  6394                           ; BSR set to: 2
  6395  0065F0  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6396  0065F4  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6397  0065F8  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6398  0065FC  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6399  006600  0E7D               	movlw	125
  6400  006602  0100               	movlb	0	; () banked
  6401  006604  6F68               	movwf	___lldiv@divisor& (0+255),b
  6402  006606  0E00               	movlw	0
  6403  006608  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6404  00660A  0E00               	movlw	0
  6405  00660C  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6406  00660E  0E00               	movlw	0
  6407  006610  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6408  006612  EC08  F03F         	call	___lldiv	;wreg free
  6409  006616  C064  F056         	movff	?___lldiv,btemp+8
  6410  00661A  C065  F057         	movff	?___lldiv+1,btemp+9
  6411  00661E  C066  F058         	movff	?___lldiv+2,btemp+10
  6412  006622  C067  F059         	movff	?___lldiv+3,btemp+11
  6413  006626  0E0C               	movlw	12
  6414  006628                     u17655:
  6415  006628  90D8               	bcf	status,0,c
  6416  00662A  3656               	rlcf	btemp+8,f,c
  6417  00662C  3657               	rlcf	btemp+9,f,c
  6418  00662E  3658               	rlcf	btemp+10,f,c
  6419  006630  3659               	rlcf	btemp+11,f,c
  6420  006632  2EE8               	decfsz	wreg,f,c
  6421  006634  D7F9               	goto	u17655
  6422  006636  D02B               	goto	L2
  6423  006638                     l15279:
  6424                           
  6425                           ; BSR set to: 2
  6426  006638  C2CC  F056         	movff	_loRa+204,btemp+8
  6427  00663C  C2CD  F057         	movff	_loRa+205,btemp+9
  6428  006640  C2CE  F058         	movff	_loRa+206,btemp+10
  6429  006644  C2CF  F059         	movff	_loRa+207,btemp+11
  6430  006648  0E0C               	movlw	12
  6431  00664A                     u17665:
  6432  00664A  90D8               	bcf	status,0,c
  6433  00664C  3656               	rlcf	btemp+8,f,c
  6434  00664E  3657               	rlcf	btemp+9,f,c
  6435  006650  3658               	rlcf	btemp+10,f,c
  6436  006652  3659               	rlcf	btemp+11,f,c
  6437  006654  2EE8               	decfsz	wreg,f,c
  6438  006656  D7F9               	goto	u17665
  6439  006658  C056  F064         	movff	btemp+8,___lldiv@dividend
  6440  00665C  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  6441  006660  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  6442  006664  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  6443  006668  0E7D               	movlw	125
  6444  00666A  0100               	movlb	0	; () banked
  6445  00666C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6446  00666E  0E00               	movlw	0
  6447  006670  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6448  006672  0E00               	movlw	0
  6449  006674  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6450  006676  0E00               	movlw	0
  6451  006678  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6452  00667A  EC08  F03F         	call	___lldiv	;wreg free
  6453  00667E  C064  F056         	movff	?___lldiv,btemp+8
  6454  006682  C065  F057         	movff	?___lldiv+1,btemp+9
  6455  006686  C066  F058         	movff	?___lldiv+2,btemp+10
  6456  00668A  C067  F059         	movff	?___lldiv+3,btemp+11
  6457  00668E                     L2:
  6458                           
  6459                           ;stkvar	_UpdateJoinSuccessState$3304 @ sp[(-4)+0]
  6460  00668E  0EFC               	movlw	-4
  6461  006690  C056  FFE3         	movff	btemp+8,plusw1
  6462  006694  0EFD               	movlw	-3
  6463  006696  C057  FFE3         	movff	btemp+9,plusw1
  6464  00669A  0EFE               	movlw	-2
  6465  00669C  C058  FFE3         	movff	btemp+10,plusw1
  6466  0066A0  0EFF               	movlw	-1
  6467  0066A2  C059  FFE3         	movff	btemp+11,plusw1
  6468                           
  6469                           ;stkvar	_UpdateJoinSuccessState$3304 @ sp[(-4)+0]
  6470  0066A6  50E1               	movf	fsr1l,w,c
  6471  0066A8  0FFC               	addlw	-4
  6472  0066AA  6ED9               	movwf	fsr2l,c
  6473  0066AC  50E2               	movf	fsr1h,w,c
  6474  0066AE  6EDA               	movwf	fsr2h,c
  6475  0066B0  0EFF               	movlw	255
  6476  0066B2  22DA               	addwfc	fsr2h,f,c
  6477  0066B4  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6478  0066B8  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6479  0066BC  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6480  0066C0  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6481  0066C4  0102               	movlb	2	; () banked
  6482  0066C6  51E7               	movf	(_loRa+231)& (0+255),w,b
  6483  0066C8  EC33  F04A         	call	_SwTimerSetTimeout
  6484                           
  6485                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6486  0066CC  0102               	movlb	2	; () banked
  6487  0066CE  51E7               	movf	(_loRa+231)& (0+255),w,b
  6488  0066D0  ECCB  F041         	call	_SwTimerStart
  6489  0066D4                     l15285:
  6490                           
  6491                           ;lorawan.c: 1055: }
  6492                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6493  0066D4  0100               	movlb	0	; () banked
  6494  0066D6  51F6               	movf	(_rxPayload+2)& (0+255),w,b
  6495  0066D8  0100               	movlb	0	; () banked
  6496  0066DA  11F7               	iorwf	(_rxPayload+3)& (0+255),w,b
  6497  0066DC  B4D8               	btfsc	status,2,c
  6498  0066DE  D00D               	goto	l2038
  6499                           
  6500                           ; BSR set to: 0
  6501                           ;lorawan.c: 1058: {
  6502                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6503  0066E0  D801               	call	u17688
  6504  0066E2  D00B               	goto	l2038
  6505  0066E4                     u17688:
  6506  0066E4  0005               	push	
  6507  0066E6  6EFA               	movwf	pclath,c
  6508  0066E8  0100               	movlb	0	; () banked
  6509  0066EA  51F6               	movf	(_rxPayload+2)& (0+255),w,b
  6510  0066EC  6EFD               	movwf	tosl,c
  6511  0066EE  51F7               	movf	(_rxPayload+3)& (0+255),w,b
  6512  0066F0  6EFE               	movwf	tosh,c
  6513  0066F2  6AFF               	clrf	tosu,c
  6514  0066F4  50FA               	movf	pclath,w,c
  6515  0066F6  0E01               	movlw	1
  6516  0066F8  0012               	return		;indir
  6517  0066FA                     l2038:
  6518                           
  6519                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6520  0066FA  0EFB               	movlw	251
  6521  0066FC  26E1               	addwf	fsr1l,f,c
  6522  0066FE  0EFF               	movlw	255
  6523  006700  22E2               	addwfc	fsr1h,f,c
  6524  006702  0012               	return		;funcret
  6525  006704                     __end_of_UpdateJoinSuccessState:
  6526                           	opt stack 0
  6527                           tosu	equ	0xFFF
  6528                           tosh	equ	0xFFE
  6529                           tosl	equ	0xFFD
  6530                           pclath	equ	0xFFA
  6531                           tblptru	equ	0xFF8
  6532                           tblptrh	equ	0xFF7
  6533                           tblptrl	equ	0xFF6
  6534                           tablat	equ	0xFF5
  6535                           prodh	equ	0xFF4
  6536                           prodl	equ	0xFF3
  6537                           intcon	equ	0xFF2
  6538                           intcon2	equ	0xFF1
  6539                           intcon3	equ	0xFF0
  6540                           postinc0	equ	0xFEE
  6541                           wreg	equ	0xFE8
  6542                           postinc1	equ	0xFE6
  6543                           plusw1	equ	0xFE3
  6544                           fsr1h	equ	0xFE2
  6545                           fsr1l	equ	0xFE1
  6546                           indf2	equ	0xFDF
  6547                           postinc2	equ	0xFDE
  6548                           postdec2	equ	0xFDD
  6549                           fsr2h	equ	0xFDA
  6550                           fsr2l	equ	0xFD9
  6551                           status	equ	0xFD8
  6552                           
  6553 ;; *************** function _AutomaticReplyCallback *****************
  6554 ;; Defined at:
  6555 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6556 ;; Parameters:    Size  Location     Type
  6557 ;;  param           1  [STACK] unsigned char 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;		None
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1  [STACK] void 
  6562 ;; Registers used:
  6563 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6564 ;; Tracked objects:
  6565 ;;		On entry : F/0
  6566 ;;		On exit  : F/2
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6573 ;;Total ram usage:        0 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; Hardware stack levels required when called:   14
  6576 ;; This function calls:
  6577 ;;		_LORAWAN_Send
  6578 ;; This function is called by:
  6579 ;;		_SetCallbackSoftwareTimers
  6580 ;;		_SwTimersExecute
  6581 ;; This function uses a reentrant model
  6582 ;;
  6583                           
  6584                           	psect	text37
  6585  009D4A                     __ptext37:
  6586                           	opt stack 0
  6587  009D4A                     _AutomaticReplyCallback:
  6588                           	opt stack 14
  6589                           
  6590                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6591                           
  6592                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6593                           ;incstack = 0
  6594  009D4A  0EF0               	movlw	-16
  6595  009D4C  0102               	movlb	2	; () banked
  6596  009D4E  1702               	andwf	(_loRa+2)& (0+255),f,b
  6597                           
  6598                           ; BSR set to: 2
  6599                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6600  009D50  0E00               	movlw	0
  6601  009D52  0100               	movlb	0	; () banked
  6602  009D54  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
  6603  009D56  0E00               	movlw	0
  6604  009D58  0100               	movlb	0	; () banked
  6605  009D5A  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
  6606  009D5C  0E00               	movlw	0
  6607  009D5E  0100               	movlb	0	; () banked
  6608  009D60  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6609  009D62  0E00               	movlw	0
  6610  009D64  0100               	movlb	0	; () banked
  6611  009D66  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6612  009D68  0E00               	movlw	0
  6613  009D6A  EC4E  F03B         	call	_LORAWAN_Send
  6614                           
  6615                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6616  009D6E  0102               	movlb	2	; () banked
  6617  009D70  9700               	bcf	_loRa& (0+255),3,b
  6618                           
  6619                           ; BSR set to: 2
  6620                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6621  009D72  52E5               	movf	postdec1,f,c
  6622  009D74  0012               	return		;funcret
  6623  009D76                     __end_of_AutomaticReplyCallback:
  6624                           	opt stack 0
  6625                           tosu	equ	0xFFF
  6626                           tosh	equ	0xFFE
  6627                           tosl	equ	0xFFD
  6628                           pclath	equ	0xFFA
  6629                           tblptru	equ	0xFF8
  6630                           tblptrh	equ	0xFF7
  6631                           tblptrl	equ	0xFF6
  6632                           tablat	equ	0xFF5
  6633                           prodh	equ	0xFF4
  6634                           prodl	equ	0xFF3
  6635                           intcon	equ	0xFF2
  6636                           intcon2	equ	0xFF1
  6637                           intcon3	equ	0xFF0
  6638                           postinc0	equ	0xFEE
  6639                           wreg	equ	0xFE8
  6640                           postinc1	equ	0xFE6
  6641                           postdec1	equ	0xFE5
  6642                           plusw1	equ	0xFE3
  6643                           fsr1h	equ	0xFE2
  6644                           fsr1l	equ	0xFE1
  6645                           indf2	equ	0xFDF
  6646                           postinc2	equ	0xFDE
  6647                           postdec2	equ	0xFDD
  6648                           fsr2h	equ	0xFDA
  6649                           fsr2l	equ	0xFD9
  6650                           status	equ	0xFD8
  6651                           
  6652 ;; *************** function _AckRetransmissionCallback *****************
  6653 ;; Defined at:
  6654 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6655 ;; Parameters:    Size  Location     Type
  6656 ;;  param           1  [STACK] unsigned char 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  maximumPacke    1  [STACK] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;                  1  [STACK] void 
  6661 ;; Registers used:
  6662 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : F/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6668 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;Total ram usage:        0 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:   13
  6675 ;; This function calls:
  6676 ;;		_FindSmallestDataRate
  6677 ;;		_LORAWAN_GetMaxPayloadSize
  6678 ;;		_RADIO_Transmit
  6679 ;;		_ResetParametersForConfirmedTransmission
  6680 ;;		_RxDataDone
  6681 ;;		_SelectChannelForTransmission
  6682 ;;		_UpdateRetransmissionAckTimeoutState
  6683 ;; This function is called by:
  6684 ;;		_SetCallbackSoftwareTimers
  6685 ;;		_SwTimersExecute
  6686 ;; This function uses a reentrant model
  6687 ;;
  6688                           
  6689                           	psect	text38
  6690  00699C                     __ptext38:
  6691                           	opt stack 0
  6692  00699C                     _AckRetransmissionCallback:
  6693                           	opt stack 0
  6694                           
  6695                           ; BSR set to: 2
  6696                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6697  00699C  52E6               	movf	postinc1,f,c
  6698                           
  6699                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6700                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6701                           
  6702                           ;incstack = 0
  6703  00699E  0102               	movlb	2	; () banked
  6704  0069A0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6705  0069A2  D099               	goto	l16503
  6706                           
  6707                           ; BSR set to: 2
  6708                           ;lorawan.c: 939: {
  6709                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6710  0069A4  0102               	movlb	2	; () banked
  6711  0069A6  51D9               	movf	(_loRa+217)& (0+255),w,b
  6712  0069A8  0102               	movlb	2	; () banked
  6713  0069AA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6714  0069AC  A0D8               	btfss	status,0,c
  6715  0069AE  D06A               	goto	l16493
  6716                           
  6717                           ; BSR set to: 2
  6718                           ;lorawan.c: 941: {
  6719                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6720  0069B0  EC9B  F047         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6721  0069B4  6E59               	movwf	btemp+11,c
  6722  0069B6  0E0D               	movlw	13
  6723  0069B8  2659               	addwf	btemp+11,f,c
  6724                           
  6725                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6726  0069BA  0EFF               	movlw	-1
  6727  0069BC  C059  FFE3         	movff	btemp+11,plusw1
  6728                           
  6729                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6730                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6731  0069C0  0EFF               	movlw	-1
  6732  0069C2  50E3               	movf	plusw1,w,c
  6733  0069C4  6E4F               	movwf	btemp+1,c
  6734  0069C6  6A50               	clrf	btemp+2,c
  6735  0069C8  0102               	movlb	2	; () banked
  6736  0069CA  51D4               	movf	(_loRa+212)& (0+255),w,b
  6737  0069CC  5C4F               	subwf	btemp+1,w,c
  6738  0069CE  0102               	movlb	2	; () banked
  6739  0069D0  51D5               	movf	(_loRa+213)& (0+255),w,b
  6740  0069D2  5850               	subwfb	btemp+2,w,c
  6741  0069D4  A0D8               	btfss	status,0,c
  6742  0069D6  D03F               	goto	l16487
  6743                           
  6744                           ; BSR set to: 2
  6745                           ;lorawan.c: 946: {
  6746                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6747  0069D8  0E01               	movlw	1
  6748  0069DA  EC47  F046         	call	_SelectChannelForTransmission
  6749  0069DE  0900               	iorlw	0
  6750  0069E0  A4D8               	btfss	status,2,c
  6751  0069E2  D036               	goto	l16483
  6752                           
  6753                           ;lorawan.c: 948: {
  6754                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6755  0069E4  0EF0               	movlw	low (_macBuffer+16)
  6756  0069E6  0100               	movlb	0	; () banked
  6757  0069E8  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
  6758  0069EA  0E04               	movlw	high (_macBuffer+16)
  6759  0069EC  0100               	movlb	0	; () banked
  6760  0069EE  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6761  0069F0  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6762  0069F4  ECD3  F025         	call	_RADIO_Transmit	;wreg free
  6763  0069F8  C0B5  F04F         	movff	?_RADIO_Transmit,btemp+1
  6764  0069FC  C0B6  F050         	movff	?_RADIO_Transmit+1,btemp+2
  6765  006A00  504F               	movf	btemp+1,w,c
  6766  006A02  1050               	iorwf	btemp+2,w,c
  6767  006A04  A4D8               	btfss	status,2,c
  6768  006A06  D024               	goto	l16483
  6769                           
  6770                           ;lorawan.c: 951: {
  6771                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6772  006A08  0102               	movlb	2	; () banked
  6773  006A0A  5102               	movf	(_loRa+2)& (0+255),w,b
  6774  006A0C  0BF0               	andlw	-16
  6775  006A0E  0901               	iorlw	1
  6776  006A10  6F02               	movwf	(_loRa+2)& (0+255),b
  6777                           
  6778                           ; BSR set to: 2
  6779                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6780  006A12  0102               	movlb	2	; () banked
  6781  006A14  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6782                           
  6783                           ; BSR set to: 2
  6784                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6785  006A16  0102               	movlb	2	; () banked
  6786  006A18  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6787  006A1A  D05F               	goto	l2011
  6788                           
  6789                           ; BSR set to: 2
  6790  006A1C  0102               	movlb	2	; () banked
  6791  006A1E  51DF               	movf	(_loRa+223)& (0+255),w,b
  6792  006A20  B4D8               	btfsc	status,2,c
  6793  006A22  D05B               	goto	l2011
  6794                           
  6795                           ; BSR set to: 2
  6796  006A24  0102               	movlb	2	; () banked
  6797  006A26  51D9               	movf	(_loRa+217)& (0+255),w,b
  6798  006A28  6E4F               	movwf	btemp+1,c
  6799  006A2A  6A50               	clrf	btemp+2,c
  6800  006A2C  0102               	movlb	2	; () banked
  6801  006A2E  51D7               	movf	(_loRa+215)& (0+255),w,b
  6802  006A30  6E58               	movwf	btemp+10,c
  6803  006A32  6A59               	clrf	btemp+11,c
  6804  006A34  0E01               	movlw	1
  6805  006A36  2658               	addwf	btemp+10,f,c
  6806  006A38  0E00               	movlw	0
  6807  006A3A  2259               	addwfc	btemp+11,f,c
  6808  006A3C  504F               	movf	btemp+1,w,c
  6809  006A3E  1858               	xorwf	btemp+10,w,c
  6810  006A40  E104               	bnz	u19920
  6811  006A42  5050               	movf	btemp+2,w,c
  6812  006A44  1859               	xorwf	btemp+11,w,c
  6813  006A46  B4D8               	btfsc	status,2,c
  6814  006A48  D048               	goto	l2011
  6815  006A4A                     u19920:
  6816                           
  6817                           ; BSR set to: 2
  6818                           ;lorawan.c: 957: {
  6819                           ;lorawan.c: 958: FindSmallestDataRate();
  6820  006A4A  ECCF  F038         	call	_FindSmallestDataRate	;wreg free
  6821  006A4E  D045               	goto	l2011
  6822  006A50                     l16483:
  6823                           
  6824                           ;lorawan.c: 961: else
  6825                           ;lorawan.c: 962: {
  6826                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6827  006A50  ECCB  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6828  006A54  D042               	goto	l2011
  6829  006A56                     l16487:
  6830                           
  6831                           ; BSR set to: 2
  6832                           ;lorawan.c: 973: else
  6833                           ;lorawan.c: 974: {
  6834                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6835  006A56  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6836                           
  6837                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6838  006A5A  0100               	movlb	0	; () banked
  6839  006A5C  51F4               	movf	_rxPayload& (0+255),w,b
  6840  006A5E  0100               	movlb	0	; () banked
  6841  006A60  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
  6842  006A62  B4D8               	btfsc	status,2,c
  6843  006A64  D03A               	goto	l2011
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;lorawan.c: 977: {
  6847                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6848  006A66  0E00               	movlw	0
  6849  006A68  0100               	movlb	0	; () banked
  6850  006A6A  6F67               	movwf	RxDataDone@pData& (0+255),b
  6851  006A6C  0E00               	movlw	0
  6852  006A6E  0100               	movlb	0	; () banked
  6853  006A70  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  6854  006A72  0E00               	movlw	0
  6855  006A74  0100               	movlb	0	; () banked
  6856  006A76  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  6857  006A78  0E04               	movlw	4
  6858  006A7A  0100               	movlb	0	; () banked
  6859  006A7C  6F6A               	movwf	RxDataDone@status& (0+255),b
  6860  006A7E  D801               	call	u19948
  6861  006A80  D02C               	goto	l2011
  6862  006A82                     u19948:
  6863  006A82  D01F               	goto	u19988
  6864  006A84                     l16493:
  6865                           
  6866                           ; BSR set to: 2
  6867                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6868  006A84  0102               	movlb	2	; () banked
  6869  006A86  51D9               	movf	(_loRa+217)& (0+255),w,b
  6870  006A88  0102               	movlb	2	; () banked
  6871  006A8A  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6872  006A8C  B0D8               	btfsc	status,0,c
  6873  006A8E  D025               	goto	l2011
  6874                           
  6875                           ; BSR set to: 2
  6876  006A90  0102               	movlb	2	; () banked
  6877  006A92  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6878  006A94  D022               	goto	l2011
  6879                           
  6880                           ; BSR set to: 2
  6881                           ;lorawan.c: 983: {
  6882                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  6883  006A96  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6884                           
  6885                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  6886  006A9A  0100               	movlb	0	; () banked
  6887  006A9C  51F4               	movf	_rxPayload& (0+255),w,b
  6888  006A9E  0100               	movlb	0	; () banked
  6889  006AA0  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
  6890  006AA2  B4D8               	btfsc	status,2,c
  6891  006AA4  D01A               	goto	l2011
  6892                           
  6893                           ; BSR set to: 0
  6894                           ;lorawan.c: 986: {
  6895                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  6896  006AA6  0E00               	movlw	0
  6897  006AA8  0100               	movlb	0	; () banked
  6898  006AAA  6F67               	movwf	RxDataDone@pData& (0+255),b
  6899  006AAC  0E00               	movlw	0
  6900  006AAE  0100               	movlb	0	; () banked
  6901  006AB0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  6902  006AB2  0E00               	movlw	0
  6903  006AB4  0100               	movlb	0	; () banked
  6904  006AB6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  6905  006AB8  0E00               	movlw	0
  6906  006ABA  0100               	movlb	0	; () banked
  6907  006ABC  6F6A               	movwf	RxDataDone@status& (0+255),b
  6908  006ABE  D801               	call	u19988
  6909  006AC0  D00C               	goto	l2011
  6910  006AC2                     u19988:
  6911  006AC2  0005               	push	
  6912  006AC4  6EFA               	movwf	pclath,c
  6913  006AC6  0100               	movlb	0	; () banked
  6914  006AC8  51F4               	movf	_rxPayload& (0+255),w,b
  6915  006ACA  6EFD               	movwf	tosl,c
  6916  006ACC  51F5               	movf	(_rxPayload+1)& (0+255),w,b
  6917  006ACE  6EFE               	movwf	tosh,c
  6918  006AD0  6AFF               	clrf	tosu,c
  6919  006AD2  50FA               	movf	pclath,w,c
  6920  006AD4  0012               	return		;indir
  6921  006AD6                     l16503:
  6922                           
  6923                           ; BSR set to: 2
  6924                           ;lorawan.c: 991: else
  6925                           ;lorawan.c: 992: {
  6926                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  6927  006AD6  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6928  006ADA                     l2011:
  6929                           
  6930                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  6931  006ADA  52E5               	movf	postdec1,f,c
  6932  006ADC  52E5               	movf	postdec1,f,c
  6933  006ADE  0012               	return		;funcret
  6934  006AE0                     __end_of_AckRetransmissionCallback:
  6935                           	opt stack 0
  6936                           tosu	equ	0xFFF
  6937                           tosh	equ	0xFFE
  6938                           tosl	equ	0xFFD
  6939                           pclath	equ	0xFFA
  6940                           tblptru	equ	0xFF8
  6941                           tblptrh	equ	0xFF7
  6942                           tblptrl	equ	0xFF6
  6943                           tablat	equ	0xFF5
  6944                           prodh	equ	0xFF4
  6945                           prodl	equ	0xFF3
  6946                           intcon	equ	0xFF2
  6947                           intcon2	equ	0xFF1
  6948                           intcon3	equ	0xFF0
  6949                           postinc0	equ	0xFEE
  6950                           wreg	equ	0xFE8
  6951                           postinc1	equ	0xFE6
  6952                           postdec1	equ	0xFE5
  6953                           plusw1	equ	0xFE3
  6954                           fsr1h	equ	0xFE2
  6955                           fsr1l	equ	0xFE1
  6956                           indf2	equ	0xFDF
  6957                           postinc2	equ	0xFDE
  6958                           postdec2	equ	0xFDD
  6959                           fsr2h	equ	0xFDA
  6960                           fsr2l	equ	0xFD9
  6961                           status	equ	0xFD8
  6962                           
  6963 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  6964 ;; Defined at:
  6965 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  param           1  [STACK] unsigned char 
  6968 ;; Auto vars:     Size  Location     Type
  6969 ;;  iCtr            1  [STACK] unsigned char 
  6970 ;; Return value:  Size  Location     Type
  6971 ;;                  1  [STACK] void 
  6972 ;; Registers used:
  6973 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  6974 ;; Tracked objects:
  6975 ;;		On entry : F/0
  6976 ;;		On exit  : 0/0
  6977 ;;		Unchanged: 0/0
  6978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6982 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6983 ;;Total ram usage:        0 bytes
  6984 ;; Hardware stack levels used:    1
  6985 ;; Hardware stack levels required when called:   11
  6986 ;; This function calls:
  6987 ;;		_SwTimerSetTimeout
  6988 ;;		_SwTimerStart
  6989 ;;		___lldiv
  6990 ;; This function is called by:
  6991 ;;		_SetCallbackSoftwareTimers
  6992 ;;		_SwTimersExecute
  6993 ;; This function uses a reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text39
  6997  005CF2                     __ptext39:
  6998                           	opt stack 0
  6999  005CF2                     _LORAWAN_LinkCheckCallback:
  7000                           	opt stack 0
  7001                           
  7002                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7003  005CF2  0E05               	movlw	5
  7004  005CF4  26E1               	addwf	fsr1l,f,c
  7005  005CF6  0E00               	movlw	0
  7006  005CF8  22E2               	addwfc	fsr1h,f,c
  7007                           
  7008                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  7009                           
  7010                           ;incstack = 0
  7011  005CFA  0102               	movlb	2	; () banked
  7012  005CFC  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7013  005CFE  D035               	goto	l16447
  7014                           
  7015                           ; BSR set to: 2
  7016  005D00  0102               	movlb	2	; () banked
  7017  005D02  A503               	btfss	(_loRa+3)& (0+255),2,b
  7018  005D04  D032               	goto	l16447
  7019                           
  7020                           ; BSR set to: 2
  7021                           ;lorawan.c: 886: {
  7022                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  7023                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7024  005D06  0EFF               	movlw	-1
  7025  005D08  6AE3               	clrf	plusw1,c
  7026  005D0A  D00F               	goto	l16437
  7027  005D0C                     l16431:
  7028                           
  7029                           ; BSR set to: 2
  7030                           ;lorawan.c: 889: {
  7031                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  7032                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7033  005D0C  0EFF               	movlw	-1
  7034  005D0E  50E3               	movf	plusw1,w,c
  7035  005D10  0D02               	mullw	2
  7036  005D12  0EA8               	movlw	low (_loRa+168)
  7037  005D14  24F3               	addwf	prodl,w,c
  7038  005D16  6ED9               	movwf	fsr2l,c
  7039  005D18  0E02               	movlw	high (_loRa+168)
  7040  005D1A  20F4               	addwfc	prodh,w,c
  7041  005D1C  6EDA               	movwf	fsr2h,c
  7042  005D1E  0E02               	movlw	2
  7043  005D20  18DE               	xorwf	postinc2,w,c
  7044  005D22  B4D8               	btfsc	status,2,c
  7045  005D24  D00A               	goto	l16439
  7046                           
  7047                           ; BSR set to: 2
  7048                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7049  005D26  0EFF               	movlw	-1
  7050  005D28  2AE3               	incf	plusw1,f,c
  7051  005D2A                     l16437:
  7052                           
  7053                           ; BSR set to: 2
  7054                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7055  005D2A  0EFF               	movlw	-1
  7056  005D2C  CFE3 F04E          	movff	plusw1,btemp
  7057  005D30  0102               	movlb	2	; () banked
  7058  005D32  51A7               	movf	(_loRa+167)& (0+255),w,b
  7059  005D34  5C4E               	subwf	btemp,w,c
  7060  005D36  A0D8               	btfss	status,0,c
  7061  005D38  D7E9               	goto	l16431
  7062  005D3A                     l16439:
  7063                           
  7064                           ; BSR set to: 2
  7065                           ;lorawan.c: 893: }
  7066                           ;lorawan.c: 894: }
  7067                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  7068                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7069  005D3A  0EFF               	movlw	-1
  7070  005D3C  0102               	movlb	2	; () banked
  7071  005D3E  50E3               	movf	plusw1,w,c
  7072  005D40  0102               	movlb	2	; () banked
  7073  005D42  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  7074  005D44  A4D8               	btfss	status,2,c
  7075  005D46  D011               	goto	l16447
  7076                           
  7077                           ; BSR set to: 2
  7078                           ;lorawan.c: 897: {
  7079                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  7080  005D48  0102               	movlb	2	; () banked
  7081  005D4A  51A7               	movf	(_loRa+167)& (0+255),w,b
  7082  005D4C  0D02               	mullw	2
  7083  005D4E  0EA8               	movlw	low (_loRa+168)
  7084  005D50  24F3               	addwf	prodl,w,c
  7085  005D52  6ED9               	movwf	fsr2l,c
  7086  005D54  0E02               	movlw	high (_loRa+168)
  7087  005D56  20F4               	addwfc	prodh,w,c
  7088  005D58  6EDA               	movwf	fsr2h,c
  7089  005D5A  0E02               	movlw	2
  7090  005D5C  6EDF               	movwf	indf2,c
  7091                           
  7092                           ; BSR set to: 2
  7093                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  7094  005D5E  0E10               	movlw	16
  7095  005D60  0102               	movlb	2	; () banked
  7096  005D62  61A7               	cpfslt	(_loRa+167)& (0+255),b
  7097  005D64  D002               	goto	l16447
  7098                           
  7099                           ; BSR set to: 2
  7100                           ;lorawan.c: 901: {
  7101                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  7102  005D66  0102               	movlb	2	; () banked
  7103  005D68  2BA7               	incf	(_loRa+167)& (0+255),f,b
  7104  005D6A                     l16447:
  7105                           
  7106                           ; BSR set to: 2
  7107                           ;lorawan.c: 903: }
  7108                           ;lorawan.c: 904: }
  7109                           ;lorawan.c: 905: }
  7110                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  7111  005D6A  0102               	movlb	2	; () banked
  7112  005D6C  A503               	btfss	(_loRa+3)& (0+255),2,b
  7113  005D6E  D07F               	goto	l1989
  7114                           
  7115                           ; BSR set to: 2
  7116                           ;lorawan.c: 909: {
  7117                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  7118  005D70  0102               	movlb	2	; () banked
  7119  005D72  51CF               	movf	(_loRa+207)& (0+255),w,b
  7120  005D74  E10A               	bnz	u19820
  7121  005D76  0102               	movlb	2	; () banked
  7122  005D78  29CC               	incf	(_loRa+204)& (0+255),w,b
  7123  005D7A  0EFF               	movlw	255
  7124  005D7C  0102               	movlb	2	; () banked
  7125  005D7E  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  7126  005D80  0E0F               	movlw	15
  7127  005D82  0102               	movlb	2	; () banked
  7128  005D84  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  7129  005D86  A0D8               	btfss	status,0,c
  7130  005D88  D024               	goto	l16453
  7131  005D8A                     u19820:
  7132                           
  7133                           ; BSR set to: 2
  7134  005D8A  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  7135  005D8E  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  7136  005D92  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  7137  005D96  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  7138  005D9A  0E7D               	movlw	125
  7139  005D9C  0100               	movlb	0	; () banked
  7140  005D9E  6F68               	movwf	___lldiv@divisor& (0+255),b
  7141  005DA0  0E00               	movlw	0
  7142  005DA2  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  7143  005DA4  0E00               	movlw	0
  7144  005DA6  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  7145  005DA8  0E00               	movlw	0
  7146  005DAA  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  7147  005DAC  EC08  F03F         	call	___lldiv	;wreg free
  7148  005DB0  C064  F056         	movff	?___lldiv,btemp+8
  7149  005DB4  C065  F057         	movff	?___lldiv+1,btemp+9
  7150  005DB8  C066  F058         	movff	?___lldiv+2,btemp+10
  7151  005DBC  C067  F059         	movff	?___lldiv+3,btemp+11
  7152  005DC0  0E0C               	movlw	12
  7153  005DC2                     u19835:
  7154  005DC2  90D8               	bcf	status,0,c
  7155  005DC4  3656               	rlcf	btemp+8,f,c
  7156  005DC6  3657               	rlcf	btemp+9,f,c
  7157  005DC8  3658               	rlcf	btemp+10,f,c
  7158  005DCA  3659               	rlcf	btemp+11,f,c
  7159  005DCC  2EE8               	decfsz	wreg,f,c
  7160  005DCE  D7F9               	goto	u19835
  7161  005DD0  D02B               	goto	L3
  7162  005DD2                     l16453:
  7163                           
  7164                           ; BSR set to: 2
  7165  005DD2  C2CC  F056         	movff	_loRa+204,btemp+8
  7166  005DD6  C2CD  F057         	movff	_loRa+205,btemp+9
  7167  005DDA  C2CE  F058         	movff	_loRa+206,btemp+10
  7168  005DDE  C2CF  F059         	movff	_loRa+207,btemp+11
  7169  005DE2  0E0C               	movlw	12
  7170  005DE4                     u19845:
  7171  005DE4  90D8               	bcf	status,0,c
  7172  005DE6  3656               	rlcf	btemp+8,f,c
  7173  005DE8  3657               	rlcf	btemp+9,f,c
  7174  005DEA  3658               	rlcf	btemp+10,f,c
  7175  005DEC  3659               	rlcf	btemp+11,f,c
  7176  005DEE  2EE8               	decfsz	wreg,f,c
  7177  005DF0  D7F9               	goto	u19845
  7178  005DF2  C056  F064         	movff	btemp+8,___lldiv@dividend
  7179  005DF6  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  7180  005DFA  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  7181  005DFE  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  7182  005E02  0E7D               	movlw	125
  7183  005E04  0100               	movlb	0	; () banked
  7184  005E06  6F68               	movwf	___lldiv@divisor& (0+255),b
  7185  005E08  0E00               	movlw	0
  7186  005E0A  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  7187  005E0C  0E00               	movlw	0
  7188  005E0E  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  7189  005E10  0E00               	movlw	0
  7190  005E12  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  7191  005E14  EC08  F03F         	call	___lldiv	;wreg free
  7192  005E18  C064  F056         	movff	?___lldiv,btemp+8
  7193  005E1C  C065  F057         	movff	?___lldiv+1,btemp+9
  7194  005E20  C066  F058         	movff	?___lldiv+2,btemp+10
  7195  005E24  C067  F059         	movff	?___lldiv+3,btemp+11
  7196  005E28                     L3:
  7197                           
  7198                           ;stkvar	_LORAWAN_LinkCheckCallback$3287 @ sp[(-5)+0]
  7199  005E28  0EFB               	movlw	-5
  7200  005E2A  C056  FFE3         	movff	btemp+8,plusw1
  7201  005E2E  0EFC               	movlw	-4
  7202  005E30  C057  FFE3         	movff	btemp+9,plusw1
  7203  005E34  0EFD               	movlw	-3
  7204  005E36  C058  FFE3         	movff	btemp+10,plusw1
  7205  005E3A  0EFE               	movlw	-2
  7206  005E3C  C059  FFE3         	movff	btemp+11,plusw1
  7207                           
  7208                           ;stkvar	_LORAWAN_LinkCheckCallback$3287 @ sp[(-5)+0]
  7209  005E40  50E1               	movf	fsr1l,w,c
  7210  005E42  0FFB               	addlw	-5
  7211  005E44  6ED9               	movwf	fsr2l,c
  7212  005E46  50E2               	movf	fsr1h,w,c
  7213  005E48  6EDA               	movwf	fsr2h,c
  7214  005E4A  0EFF               	movlw	255
  7215  005E4C  22DA               	addwfc	fsr2h,f,c
  7216  005E4E  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7217  005E52  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7218  005E56  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7219  005E5A  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7220  005E5E  0102               	movlb	2	; () banked
  7221  005E60  51E7               	movf	(_loRa+231)& (0+255),w,b
  7222  005E62  EC33  F04A         	call	_SwTimerSetTimeout
  7223                           
  7224                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7225  005E66  0102               	movlb	2	; () banked
  7226  005E68  51E7               	movf	(_loRa+231)& (0+255),w,b
  7227  005E6A  ECCB  F041         	call	_SwTimerStart
  7228  005E6E                     l1989:
  7229                           
  7230                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7231  005E6E  0EFA               	movlw	250
  7232  005E70  26E1               	addwf	fsr1l,f,c
  7233  005E72  0EFF               	movlw	255
  7234  005E74  22E2               	addwfc	fsr1h,f,c
  7235  005E76  0012               	return		;funcret
  7236  005E78                     __end_of_LORAWAN_LinkCheckCallback:
  7237                           	opt stack 0
  7238                           tosu	equ	0xFFF
  7239                           tosh	equ	0xFFE
  7240                           tosl	equ	0xFFD
  7241                           pclath	equ	0xFFA
  7242                           tblptru	equ	0xFF8
  7243                           tblptrh	equ	0xFF7
  7244                           tblptrl	equ	0xFF6
  7245                           tablat	equ	0xFF5
  7246                           prodh	equ	0xFF4
  7247                           prodl	equ	0xFF3
  7248                           intcon	equ	0xFF2
  7249                           intcon2	equ	0xFF1
  7250                           intcon3	equ	0xFF0
  7251                           postinc0	equ	0xFEE
  7252                           wreg	equ	0xFE8
  7253                           postinc1	equ	0xFE6
  7254                           postdec1	equ	0xFE5
  7255                           plusw1	equ	0xFE3
  7256                           fsr1h	equ	0xFE2
  7257                           fsr1l	equ	0xFE1
  7258                           indf2	equ	0xFDF
  7259                           postinc2	equ	0xFDE
  7260                           postdec2	equ	0xFDD
  7261                           fsr2h	equ	0xFDA
  7262                           fsr2l	equ	0xFD9
  7263                           status	equ	0xFD8
  7264                           
  7265 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7266 ;; Defined at:
  7267 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7268 ;; Parameters:    Size  Location     Type
  7269 ;;  param           1  [STACK] unsigned char 
  7270 ;; Auto vars:     Size  Location     Type
  7271 ;;  freq            4  [STACK] unsigned long 
  7272 ;; Return value:  Size  Location     Type
  7273 ;;                  1  [STACK] void 
  7274 ;; Registers used:
  7275 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7276 ;; Tracked objects:
  7277 ;;		On entry : F/0
  7278 ;;		On exit  : 0/0
  7279 ;;		Unchanged: 0/0
  7280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7281 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7282 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7284 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7285 ;;Total ram usage:        0 bytes
  7286 ;; Hardware stack levels used:    1
  7287 ;; Hardware stack levels required when called:   13
  7288 ;; This function calls:
  7289 ;;		_ConfigureRadioRx
  7290 ;;		_GetRx1Freq
  7291 ;;		_RADIO_ReceiveStart
  7292 ;;		_RADIO_ReceiveStop
  7293 ;;		_RADIO_ReleaseData
  7294 ;; This function is called by:
  7295 ;;		_SetCallbackSoftwareTimers
  7296 ;;		_SwTimersExecute
  7297 ;; This function uses a reentrant model
  7298 ;;
  7299                           
  7300                           	psect	text40
  7301  007A52                     __ptext40:
  7302                           	opt stack 0
  7303  007A52                     _LORAWAN_ReceiveWindow1Callback:
  7304                           	opt stack 0
  7305                           
  7306                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7307  007A52  52E6               	movf	postinc1,f,c
  7308  007A54  52E6               	movf	postinc1,f,c
  7309  007A56  52E6               	movf	postinc1,f,c
  7310  007A58  52E6               	movf	postinc1,f,c
  7311                           
  7312                           ;lorawan.c: 798: uint32_t freq;
  7313                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7314                           
  7315                           ;incstack = 0
  7316  007A5A  0102               	movlb	2	; () banked
  7317  007A5C  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7318  007A5E  D056               	goto	l1962
  7319                           
  7320                           ; BSR set to: 2
  7321                           ;lorawan.c: 801: {
  7322                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7323  007A60  0E02               	movlw	2
  7324  007A62  0102               	movlb	2	; () banked
  7325  007A64  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7326  007A66  B4D8               	btfsc	status,2,c
  7327                           
  7328                           ; BSR set to: 2
  7329                           ;lorawan.c: 803: {
  7330                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7331  007A68  ECEE  F04F         	call	_RADIO_ReceiveStop	;wreg free
  7332                           
  7333                           ;lorawan.c: 805: }
  7334                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7335  007A6C  0102               	movlb	2	; () banked
  7336  007A6E  51EF               	movf	(_loRa+239)& (0+255),w,b
  7337  007A70  0102               	movlb	2	; () banked
  7338  007A72  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7339  007A74  A0D8               	btfss	status,0,c
  7340  007A76  D007               	goto	l1960
  7341                           
  7342                           ; BSR set to: 2
  7343                           ;lorawan.c: 807: {
  7344                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7345  007A78  0102               	movlb	2	; () banked
  7346  007A7A  51EF               	movf	(_loRa+239)& (0+255),w,b
  7347  007A7C  0102               	movlb	2	; () banked
  7348  007A7E  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7349  007A80  0102               	movlb	2	; () banked
  7350  007A82  6F17               	movwf	(_loRa+23)& (0+255),b
  7351                           
  7352                           ;lorawan.c: 809: }
  7353  007A84  D002               	goto	l16413
  7354  007A86                     l1960:
  7355                           
  7356                           ; BSR set to: 2
  7357                           ;lorawan.c: 810: else
  7358                           ;lorawan.c: 811: {
  7359                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7360  007A86  0102               	movlb	2	; () banked
  7361  007A88  6B17               	clrf	(_loRa+23)& (0+255),b
  7362  007A8A                     l16413:
  7363                           
  7364                           ; BSR set to: 2
  7365                           ;lorawan.c: 813: }
  7366                           ;lorawan.c: 815: freq = GetRx1Freq();
  7367  007A8A  EC0E  F051         	call	_GetRx1Freq	;wreg free
  7368  007A8E  C064  F056         	movff	?_GetRx1Freq,btemp+8
  7369  007A92  C065  F057         	movff	?_GetRx1Freq+1,btemp+9
  7370  007A96  C066  F058         	movff	?_GetRx1Freq+2,btemp+10
  7371  007A9A  C067  F059         	movff	?_GetRx1Freq+3,btemp+11
  7372                           
  7373                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7374  007A9E  0EFC               	movlw	-4
  7375  007AA0  C056  FFE3         	movff	btemp+8,plusw1
  7376  007AA4  0EFD               	movlw	-3
  7377  007AA6  C057  FFE3         	movff	btemp+9,plusw1
  7378  007AAA  0EFE               	movlw	-2
  7379  007AAC  C058  FFE3         	movff	btemp+10,plusw1
  7380  007AB0  0EFF               	movlw	-1
  7381  007AB2  C059  FFE3         	movff	btemp+11,plusw1
  7382                           
  7383                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7384  007AB6  0102               	movlb	2	; () banked
  7385  007AB8  5102               	movf	(_loRa+2)& (0+255),w,b
  7386  007ABA  0BF0               	andlw	-16
  7387  007ABC  0903               	iorlw	3
  7388  007ABE  6F02               	movwf	(_loRa+2)& (0+255),b
  7389                           
  7390                           ; BSR set to: 2
  7391                           ;lorawan.c: 819: RADIO_ReleaseData();
  7392  007AC0  ECE4  F051         	call	_RADIO_ReleaseData	;wreg free
  7393                           
  7394                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7395                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7396  007AC4  50E1               	movf	fsr1l,w,c
  7397  007AC6  0FFC               	addlw	-4
  7398  007AC8  6ED9               	movwf	fsr2l,c
  7399  007ACA  50E2               	movf	fsr1h,w,c
  7400  007ACC  6EDA               	movwf	fsr2h,c
  7401  007ACE  0EFF               	movlw	255
  7402  007AD0  22DA               	addwfc	fsr2h,f,c
  7403  007AD2  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7404  007AD6  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7405  007ADA  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7406  007ADE  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7407  007AE2  0102               	movlb	2	; () banked
  7408  007AE4  5117               	movf	(_loRa+23)& (0+255),w,b
  7409  007AE6  ECFB  F04E         	call	_ConfigureRadioRx
  7410                           
  7411                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7412  007AEA  0E7F               	movlw	low _rxWindowSize
  7413  007AEC  0102               	movlb	2	; () banked
  7414  007AEE  2517               	addwf	(_loRa+23)& (0+255),w,b
  7415  007AF0  6EF6               	movwf	tblptrl,c
  7416  007AF2  6AF7               	clrf	tblptrh,c
  7417  007AF4  0EFF               	movlw	high _rxWindowSize
  7418  007AF6  22F7               	addwfc	tblptrh,f,c
  7419  007AF8                     	if	1	;There are 3 active tblptr bytes
  7420  007AF8  6AF8               	clrf	tblptru,c
  7421  007AFA  0E00               	movlw	low (__mediumconst shr (0+16))
  7422  007AFC  22F8               	addwfc	tblptru,f,c
  7423  007AFE                     	endif
  7424  007AFE  0008               	tblrd		*
  7425  007B00  50F5               	movf	tablat,w,c
  7426  007B02  0100               	movlb	0	; () banked
  7427  007B04  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7428  007B06  6BB6               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7429  007B08  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
  7430  007B0C                     l1962:
  7431                           
  7432                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7433  007B0C  0EFB               	movlw	251
  7434  007B0E  26E1               	addwf	fsr1l,f,c
  7435  007B10  0EFF               	movlw	255
  7436  007B12  22E2               	addwfc	fsr1h,f,c
  7437  007B14  0012               	return		;funcret
  7438  007B16                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7439                           	opt stack 0
  7440                           tosu	equ	0xFFF
  7441                           tosh	equ	0xFFE
  7442                           tosl	equ	0xFFD
  7443                           pclath	equ	0xFFA
  7444                           tblptru	equ	0xFF8
  7445                           tblptrh	equ	0xFF7
  7446                           tblptrl	equ	0xFF6
  7447                           tablat	equ	0xFF5
  7448                           prodh	equ	0xFF4
  7449                           prodl	equ	0xFF3
  7450                           intcon	equ	0xFF2
  7451                           intcon2	equ	0xFF1
  7452                           intcon3	equ	0xFF0
  7453                           postinc0	equ	0xFEE
  7454                           wreg	equ	0xFE8
  7455                           postinc1	equ	0xFE6
  7456                           postdec1	equ	0xFE5
  7457                           plusw1	equ	0xFE3
  7458                           fsr1h	equ	0xFE2
  7459                           fsr1l	equ	0xFE1
  7460                           indf2	equ	0xFDF
  7461                           postinc2	equ	0xFDE
  7462                           postdec2	equ	0xFDD
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7468 ;; Defined at:
  7469 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;  param           1  [STACK] unsigned char 
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;		None
  7474 ;; Return value:  Size  Location     Type
  7475 ;;                  1  [STACK] void 
  7476 ;; Registers used:
  7477 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7478 ;; Tracked objects:
  7479 ;;		On entry : D/0
  7480 ;;		On exit  : 0/0
  7481 ;;		Unchanged: 0/0
  7482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7483 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7484 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7486 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7487 ;;Total ram usage:        0 bytes
  7488 ;; Hardware stack levels used:    1
  7489 ;; Hardware stack levels required when called:   14
  7490 ;; This function calls:
  7491 ;;		_ConfigureRadioRx
  7492 ;;		_LORAWAN_EnterContinuousReceive
  7493 ;;		_RADIO_GetStatus
  7494 ;;		_RADIO_ReceiveStart
  7495 ;;		_RADIO_ReceiveStop
  7496 ;;		_RADIO_ReleaseData
  7497 ;;		_ResetParametersForConfirmedTransmission
  7498 ;;		_ResetParametersForUnconfirmedTransmission
  7499 ;;		_RxDataDone
  7500 ;; This function is called by:
  7501 ;;		_LORAWAN_RxTimeout
  7502 ;;		_SetCallbackSoftwareTimers
  7503 ;;		_SwTimersExecute
  7504 ;; This function uses a reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text41
  7508  007882                     __ptext41:
  7509                           	opt stack 0
  7510  007882                     _LORAWAN_ReceiveWindow2Callback:
  7511                           	opt stack 12
  7512                           
  7513                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7514                           
  7515                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7516                           ;incstack = 0
  7517  007882  0102               	movlb	2	; () banked
  7518  007884  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7519  007886  D065               	goto	l1965
  7520                           
  7521                           ; BSR set to: 2
  7522                           ;lorawan.c: 831: {
  7523                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7524  007888  ECE1  F051         	call	_RADIO_GetStatus	;wreg free
  7525  00788C  6E59               	movwf	btemp+11,c
  7526  00788E  B259               	btfsc	btemp+11,1,c
  7527  007890  D05C               	goto	l15135
  7528                           
  7529                           ;lorawan.c: 833: {
  7530                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7531  007892  0102               	movlb	2	; () banked
  7532  007894  5102               	movf	(_loRa+2)& (0+255),w,b
  7533  007896  0BF0               	andlw	-16
  7534  007898  0905               	iorlw	5
  7535  00789A  6F02               	movwf	(_loRa+2)& (0+255),b
  7536                           
  7537                           ; BSR set to: 2
  7538                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7539  00789C  ECEE  F04F         	call	_RADIO_ReceiveStop	;wreg free
  7540                           
  7541                           ;lorawan.c: 837: RADIO_ReleaseData();
  7542  0078A0  ECE4  F051         	call	_RADIO_ReleaseData	;wreg free
  7543                           
  7544                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7545  0078A4  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7546  0078A8  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7547  0078AC  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7548  0078B0  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7549  0078B4  0102               	movlb	2	; () banked
  7550  0078B6  511C               	movf	(_loRa+28)& (0+255),w,b
  7551  0078B8  ECFB  F04E         	call	_ConfigureRadioRx
  7552                           
  7553                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7554  0078BC  0102               	movlb	2	; () banked
  7555  0078BE  5112               	movf	(_loRa+18)& (0+255),w,b
  7556  0078C0  A4D8               	btfss	status,2,c
  7557  0078C2  D03B               	goto	l15131
  7558                           
  7559                           ; BSR set to: 2
  7560                           ;lorawan.c: 842: {
  7561                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7562  0078C4  0E7F               	movlw	low _rxWindowSize
  7563  0078C6  0102               	movlb	2	; () banked
  7564  0078C8  251C               	addwf	(_loRa+28)& (0+255),w,b
  7565  0078CA  6EF6               	movwf	tblptrl,c
  7566  0078CC  6AF7               	clrf	tblptrh,c
  7567  0078CE  0EFF               	movlw	high _rxWindowSize
  7568  0078D0  22F7               	addwfc	tblptrh,f,c
  7569  0078D2                     	if	1	;There are 3 active tblptr bytes
  7570  0078D2  6AF8               	clrf	tblptru,c
  7571  0078D4  0E00               	movlw	low (__mediumconst shr (0+16))
  7572  0078D6  22F8               	addwfc	tblptru,f,c
  7573  0078D8                     	endif
  7574  0078D8  0008               	tblrd		*
  7575  0078DA  50F5               	movf	tablat,w,c
  7576  0078DC  0100               	movlb	0	; () banked
  7577  0078DE  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7578  0078E0  6BB6               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7579  0078E2  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
  7580  0078E6  C0B5  F04F         	movff	?_RADIO_ReceiveStart,btemp+1
  7581  0078EA  C0B6  F050         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7582  0078EE  504F               	movf	btemp+1,w,c
  7583  0078F0  1050               	iorwf	btemp+2,w,c
  7584  0078F2  B4D8               	btfsc	status,2,c
  7585  0078F4  D039               	goto	l1974
  7586                           
  7587                           ;lorawan.c: 844: {
  7588                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7589  0078F6  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7590                           
  7591                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7592  0078FA  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7593                           
  7594                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7595  0078FE  0100               	movlb	0	; () banked
  7596  007900  51F4               	movf	_rxPayload& (0+255),w,b
  7597  007902  0100               	movlb	0	; () banked
  7598  007904  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
  7599  007906  B4D8               	btfsc	status,2,c
  7600  007908  D02F               	goto	l1974
  7601                           
  7602                           ; BSR set to: 0
  7603                           ;lorawan.c: 848: {
  7604                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7605  00790A  0E00               	movlw	0
  7606  00790C  0100               	movlb	0	; () banked
  7607  00790E  6F67               	movwf	RxDataDone@pData& (0+255),b
  7608  007910  0E00               	movlw	0
  7609  007912  0100               	movlb	0	; () banked
  7610  007914  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  7611  007916  0E00               	movlw	0
  7612  007918  0100               	movlb	0	; () banked
  7613  00791A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  7614  00791C  0E00               	movlw	0
  7615  00791E  0100               	movlb	0	; () banked
  7616  007920  6F6A               	movwf	RxDataDone@status& (0+255),b
  7617  007922  D801               	call	u17318
  7618  007924  D021               	goto	l1974
  7619  007926                     u17318:
  7620  007926  0005               	push	
  7621  007928  6EFA               	movwf	pclath,c
  7622  00792A  0100               	movlb	0	; () banked
  7623  00792C  51F4               	movf	_rxPayload& (0+255),w,b
  7624  00792E  6EFD               	movwf	tosl,c
  7625  007930  51F5               	movf	(_rxPayload+1)& (0+255),w,b
  7626  007932  6EFE               	movwf	tosh,c
  7627  007934  6AFF               	clrf	tosu,c
  7628  007936  50FA               	movf	pclath,w,c
  7629  007938  0012               	return		;indir
  7630  00793A                     l15131:
  7631                           
  7632                           ; BSR set to: 2
  7633                           ;lorawan.c: 853: else
  7634                           ;lorawan.c: 854: {
  7635                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7636  00793A  0102               	movlb	2	; () banked
  7637  00793C  5102               	movf	(_loRa+2)& (0+255),w,b
  7638  00793E  0BF0               	andlw	-16
  7639  007940  0909               	iorlw	9
  7640  007942  6F02               	movwf	(_loRa+2)& (0+255),b
  7641                           
  7642                           ; BSR set to: 2
  7643                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7644  007944  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7645  007948  D00F               	goto	l1974
  7646  00794A                     l15135:
  7647                           
  7648                           ;lorawan.c: 859: else
  7649                           ;lorawan.c: 860: {
  7650                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7651  00794A  0E01               	movlw	1
  7652  00794C  0102               	movlb	2	; () banked
  7653  00794E  6FF1               	movwf	(_loRa+241)& (0+255),b
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;lorawan.c: 864: }
  7657                           ;lorawan.c: 865: }
  7658  007950  D00B               	goto	l1974
  7659  007952                     l1965:
  7660                           
  7661                           ; BSR set to: 2
  7662                           ;lorawan.c: 866: else
  7663                           ;lorawan.c: 867: {
  7664                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7665  007952  0102               	movlb	2	; () banked
  7666  007954  A500               	btfss	_loRa& (0+255),2,b
  7667  007956  D004               	goto	l15139
  7668                           
  7669                           ; BSR set to: 2
  7670                           ;lorawan.c: 871: {
  7671                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7672  007958  0102               	movlb	2	; () banked
  7673  00795A  9500               	bcf	_loRa& (0+255),2,b
  7674                           
  7675                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7676  00795C  0102               	movlb	2	; () banked
  7677  00795E  9902               	bcf	(_loRa+2)& (0+255),4,b
  7678  007960                     l15139:
  7679                           
  7680                           ; BSR set to: 2
  7681                           ;lorawan.c: 874: }
  7682                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7683  007960  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7684                           
  7685                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7686  007964  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7687  007968                     l1974:
  7688                           
  7689                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7690  007968  52E5               	movf	postdec1,f,c
  7691  00796A  0012               	return		;funcret
  7692  00796C                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7693                           	opt stack 0
  7694                           tosu	equ	0xFFF
  7695                           tosh	equ	0xFFE
  7696                           tosl	equ	0xFFD
  7697                           pclath	equ	0xFFA
  7698                           tblptru	equ	0xFF8
  7699                           tblptrh	equ	0xFF7
  7700                           tblptrl	equ	0xFF6
  7701                           tablat	equ	0xFF5
  7702                           prodh	equ	0xFF4
  7703                           prodl	equ	0xFF3
  7704                           intcon	equ	0xFF2
  7705                           intcon2	equ	0xFF1
  7706                           intcon3	equ	0xFF0
  7707                           postinc0	equ	0xFEE
  7708                           wreg	equ	0xFE8
  7709                           postinc1	equ	0xFE6
  7710                           postdec1	equ	0xFE5
  7711                           plusw1	equ	0xFE3
  7712                           fsr1h	equ	0xFE2
  7713                           fsr1l	equ	0xFE1
  7714                           indf2	equ	0xFDF
  7715                           postinc2	equ	0xFDE
  7716                           postdec2	equ	0xFDD
  7717                           fsr2h	equ	0xFDA
  7718                           fsr2l	equ	0xFD9
  7719                           status	equ	0xFD8
  7720                           
  7721 ;; *************** function _RADIO_WatchdogTimeout *****************
  7722 ;; Defined at:
  7723 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  param           1  [STACK] unsigned char 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;		None
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1  [STACK] void 
  7730 ;; Registers used:
  7731 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : F/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7737 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7738 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7739 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7740 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7741 ;;Total ram usage:        0 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:   16
  7744 ;; This function calls:
  7745 ;;		_LORAWAN_RxTimeout
  7746 ;;		_LORAWAN_TxDone
  7747 ;;		_RADIO_WriteMode
  7748 ;; This function is called by:
  7749 ;;		_RADIO_Init
  7750 ;;		_SwTimersExecute
  7751 ;; This function uses a reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text42
  7755  00955E                     __ptext42:
  7756                           	opt stack 0
  7757  00955E                     _RADIO_WatchdogTimeout:
  7758                           	opt stack 12
  7759                           
  7760                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7761                           
  7762                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7763                           ;incstack = 0
  7764  00955E  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7765  009562  0E01               	movlw	1
  7766  009564  0100               	movlb	0	; () banked
  7767  009566  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7768  009568  0E01               	movlw	1
  7769  00956A  EC70  F035         	call	_RADIO_WriteMode
  7770                           
  7771                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7772  00956E  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7773  009572  0E00               	movlw	0
  7774  009574  0100               	movlb	0	; () banked
  7775  009576  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7776  009578  0E00               	movlw	0
  7777  00957A  EC70  F035         	call	_RADIO_WriteMode
  7778                           
  7779                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7780  00957E  0101               	movlb	1	; () banked
  7781  009580  8997               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7782                           
  7783                           ; BSR set to: 1
  7784                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7785  009582  0101               	movlb	1	; () banked
  7786  009584  A397               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7787  009586  D005               	goto	l671
  7788                           
  7789                           ; BSR set to: 1
  7790                           ;radio_driver_SX1276.c: 1414: {
  7791                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7792  009588  0101               	movlb	1	; () banked
  7793  00958A  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7794                           
  7795                           ; BSR set to: 1
  7796                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7797  00958C  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  7798                           
  7799                           ;radio_driver_SX1276.c: 1417: }
  7800  009590  D00B               	goto	l674
  7801  009592                     l671:
  7802                           
  7803                           ; BSR set to: 1
  7804                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7805  009592  0101               	movlb	1	; () banked
  7806  009594  A197               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7807  009596  D008               	goto	l674
  7808                           
  7809                           ; BSR set to: 1
  7810                           ;radio_driver_SX1276.c: 1419: {
  7811                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7812  009598  0101               	movlb	1	; () banked
  7813  00959A  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7814                           
  7815                           ; BSR set to: 1
  7816                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7817  00959C  C19E  F0BF         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7818  0095A0  C19F  F0C0         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7819  0095A4  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
  7820  0095A8                     l674:
  7821                           
  7822                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7823  0095A8  52E5               	movf	postdec1,f,c
  7824  0095AA  0012               	return		;funcret
  7825  0095AC                     __end_of_RADIO_WatchdogTimeout:
  7826                           	opt stack 0
  7827                           tosu	equ	0xFFF
  7828                           tosh	equ	0xFFE
  7829                           tosl	equ	0xFFD
  7830                           pclath	equ	0xFFA
  7831                           tblptru	equ	0xFF8
  7832                           tblptrh	equ	0xFF7
  7833                           tblptrl	equ	0xFF6
  7834                           tablat	equ	0xFF5
  7835                           prodh	equ	0xFF4
  7836                           prodl	equ	0xFF3
  7837                           intcon	equ	0xFF2
  7838                           intcon2	equ	0xFF1
  7839                           intcon3	equ	0xFF0
  7840                           postinc0	equ	0xFEE
  7841                           wreg	equ	0xFE8
  7842                           postinc1	equ	0xFE6
  7843                           postdec1	equ	0xFE5
  7844                           plusw1	equ	0xFE3
  7845                           fsr1h	equ	0xFE2
  7846                           fsr1l	equ	0xFE1
  7847                           indf2	equ	0xFDF
  7848                           postinc2	equ	0xFDE
  7849                           postdec2	equ	0xFDD
  7850                           fsr2h	equ	0xFDA
  7851                           fsr2l	equ	0xFD9
  7852                           status	equ	0xFD8
  7853                           
  7854 ;; *************** function _RADIO_RxFSKTimeout *****************
  7855 ;; Defined at:
  7856 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7857 ;; Parameters:    Size  Location     Type
  7858 ;;  param           1  [STACK] unsigned char 
  7859 ;; Auto vars:     Size  Location     Type
  7860 ;;  irqFlags        1  [STACK] unsigned char 
  7861 ;; Return value:  Size  Location     Type
  7862 ;;                  1  [STACK] void 
  7863 ;; Registers used:
  7864 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7865 ;; Tracked objects:
  7866 ;;		On entry : F/0
  7867 ;;		On exit  : 0/0
  7868 ;;		Unchanged: 0/0
  7869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7874 ;;Total ram usage:        0 bytes
  7875 ;; Hardware stack levels used:    1
  7876 ;; Hardware stack levels required when called:   16
  7877 ;; This function calls:
  7878 ;;		_LORAWAN_RxTimeout
  7879 ;;		_RADIO_RegisterRead
  7880 ;;		_RADIO_WriteMode
  7881 ;;		_SwTimerStop
  7882 ;; This function is called by:
  7883 ;;		_RADIO_Init
  7884 ;;		_SwTimersExecute
  7885 ;; This function uses a reentrant model
  7886 ;;
  7887                           
  7888                           	psect	text43
  7889  009970                     __ptext43:
  7890                           	opt stack 0
  7891  009970                     _RADIO_RxFSKTimeout:
  7892                           	opt stack 0
  7893                           
  7894                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7895  009970  52E6               	movf	postinc1,f,c
  7896                           
  7897                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  7898                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  7899                           
  7900                           ;incstack = 0
  7901  009972  0E3E               	movlw	62
  7902  009974  EC25  F04F         	call	_RADIO_RegisterRead
  7903  009978  6E59               	movwf	btemp+11,c
  7904                           
  7905                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7906  00997A  0EFF               	movlw	-1
  7907  00997C  C059  FFE3         	movff	btemp+11,plusw1
  7908                           
  7909                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  7910                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  7911  009980  0EFF               	movlw	-1
  7912  009982  B0E3               	btfsc	plusw1,0,c
  7913  009984  D010               	goto	l668
  7914                           
  7915                           ;radio_driver_SX1276.c: 1397: {
  7916                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7917  009986  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7918  00998A  0E00               	movlw	0
  7919  00998C  0100               	movlb	0	; () banked
  7920  00998E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7921  009990  0E00               	movlw	0
  7922  009992  EC70  F035         	call	_RADIO_WriteMode
  7923                           
  7924                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  7925  009996  0101               	movlb	1	; () banked
  7926  009998  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  7927  00999A  EC39  F04F         	call	_SwTimerStop
  7928                           
  7929                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  7930  00999E  0101               	movlb	1	; () banked
  7931  0099A0  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  7935  0099A2  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  7936  0099A6                     l668:
  7937                           
  7938                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  7939  0099A6  52E5               	movf	postdec1,f,c
  7940  0099A8  52E5               	movf	postdec1,f,c
  7941  0099AA  0012               	return		;funcret
  7942  0099AC                     __end_of_RADIO_RxFSKTimeout:
  7943                           	opt stack 0
  7944                           tosu	equ	0xFFF
  7945                           tosh	equ	0xFFE
  7946                           tosl	equ	0xFFD
  7947                           pclath	equ	0xFFA
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           prodh	equ	0xFF4
  7953                           prodl	equ	0xFF3
  7954                           intcon	equ	0xFF2
  7955                           intcon2	equ	0xFF1
  7956                           intcon3	equ	0xFF0
  7957                           postinc0	equ	0xFEE
  7958                           wreg	equ	0xFE8
  7959                           postinc1	equ	0xFE6
  7960                           postdec1	equ	0xFE5
  7961                           plusw1	equ	0xFE3
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           indf2	equ	0xFDF
  7965                           postinc2	equ	0xFDE
  7966                           postdec2	equ	0xFDD
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _UnconfirmedTransmissionCallback *****************
  7972 ;; Defined at:
  7973 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  param           1  [STACK] unsigned char 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;		None
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1  [STACK] void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : F/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   13
  7994 ;; This function calls:
  7995 ;;		_RADIO_Transmit
  7996 ;;		_ResetParametersForUnconfirmedTransmission
  7997 ;;		_RxDataDone
  7998 ;;		_SelectChannelForTransmission
  7999 ;; This function is called by:
  8000 ;;		_SetCallbackSoftwareTimers
  8001 ;;		_SwTimersExecute
  8002 ;; This function uses a reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text44
  8006  008A0A                     __ptext44:
  8007                           	opt stack 0
  8008  008A0A                     _UnconfirmedTransmissionCallback:
  8009                           	opt stack 15
  8010                           
  8011                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  8012                           
  8013                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8014                           ;incstack = 0
  8015  008A0A  0E01               	movlw	1
  8016  008A0C  EC47  F046         	call	_SelectChannelForTransmission
  8017  008A10  0900               	iorlw	0
  8018  008A12  A4D8               	btfss	status,2,c
  8019  008A14  D01A               	goto	l16513
  8020  008A16  0EF0               	movlw	low (_macBuffer+16)
  8021  008A18  0100               	movlb	0	; () banked
  8022  008A1A  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
  8023  008A1C  0E04               	movlw	high (_macBuffer+16)
  8024  008A1E  0100               	movlb	0	; () banked
  8025  008A20  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8026  008A22  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8027  008A26  ECD3  F025         	call	_RADIO_Transmit	;wreg free
  8028  008A2A  C0B5  F04F         	movff	?_RADIO_Transmit,btemp+1
  8029  008A2E  C0B6  F050         	movff	?_RADIO_Transmit+1,btemp+2
  8030  008A32  504F               	movf	btemp+1,w,c
  8031  008A34  1050               	iorwf	btemp+2,w,c
  8032  008A36  A4D8               	btfss	status,2,c
  8033  008A38  D008               	goto	l16513
  8034                           
  8035                           ;lorawan.c: 1001: {
  8036                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  8037  008A3A  0102               	movlb	2	; () banked
  8038  008A3C  2BD8               	incf	(_loRa+216)& (0+255),f,b
  8039                           
  8040                           ; BSR set to: 2
  8041                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8042  008A3E  0102               	movlb	2	; () banked
  8043  008A40  5102               	movf	(_loRa+2)& (0+255),w,b
  8044  008A42  0BF0               	andlw	-16
  8045  008A44  0901               	iorlw	1
  8046  008A46  6F02               	movwf	(_loRa+2)& (0+255),b
  8047                           
  8048                           ;lorawan.c: 1005: }
  8049  008A48  D020               	goto	l2017
  8050  008A4A                     l16513:
  8051                           
  8052                           ;lorawan.c: 1006: else
  8053                           ;lorawan.c: 1008: {
  8054                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  8055  008A4A  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  8056                           
  8057                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  8058  008A4E  0100               	movlb	0	; () banked
  8059  008A50  51F4               	movf	_rxPayload& (0+255),w,b
  8060  008A52  0100               	movlb	0	; () banked
  8061  008A54  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
  8062  008A56  B4D8               	btfsc	status,2,c
  8063  008A58  D018               	goto	l2017
  8064                           
  8065                           ; BSR set to: 0
  8066                           ;lorawan.c: 1011: {
  8067                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  8068  008A5A  0E00               	movlw	0
  8069  008A5C  0100               	movlb	0	; () banked
  8070  008A5E  6F67               	movwf	RxDataDone@pData& (0+255),b
  8071  008A60  0E00               	movlw	0
  8072  008A62  0100               	movlb	0	; () banked
  8073  008A64  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  8074  008A66  0E00               	movlw	0
  8075  008A68  0100               	movlb	0	; () banked
  8076  008A6A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  8077  008A6C  0E00               	movlw	0
  8078  008A6E  0100               	movlb	0	; () banked
  8079  008A70  6F6A               	movwf	RxDataDone@status& (0+255),b
  8080  008A72  D801               	call	u20028
  8081  008A74  D00A               	goto	l2017
  8082  008A76                     u20028:
  8083  008A76  0005               	push	
  8084  008A78  6EFA               	movwf	pclath,c
  8085  008A7A  0100               	movlb	0	; () banked
  8086  008A7C  51F4               	movf	_rxPayload& (0+255),w,b
  8087  008A7E  6EFD               	movwf	tosl,c
  8088  008A80  51F5               	movf	(_rxPayload+1)& (0+255),w,b
  8089  008A82  6EFE               	movwf	tosh,c
  8090  008A84  6AFF               	clrf	tosu,c
  8091  008A86  50FA               	movf	pclath,w,c
  8092  008A88  0012               	return		;indir
  8093  008A8A                     l2017:
  8094                           
  8095                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  8096  008A8A  52E5               	movf	postdec1,f,c
  8097  008A8C  0012               	return		;funcret
  8098  008A8E                     __end_of_UnconfirmedTransmissionCallback:
  8099                           	opt stack 0
  8100                           tosu	equ	0xFFF
  8101                           tosh	equ	0xFFE
  8102                           tosl	equ	0xFFD
  8103                           pclath	equ	0xFFA
  8104                           tblptru	equ	0xFF8
  8105                           tblptrh	equ	0xFF7
  8106                           tblptrl	equ	0xFF6
  8107                           tablat	equ	0xFF5
  8108                           prodh	equ	0xFF4
  8109                           prodl	equ	0xFF3
  8110                           intcon	equ	0xFF2
  8111                           intcon2	equ	0xFF1
  8112                           intcon3	equ	0xFF0
  8113                           postinc0	equ	0xFEE
  8114                           wreg	equ	0xFE8
  8115                           postinc1	equ	0xFE6
  8116                           postdec1	equ	0xFE5
  8117                           plusw1	equ	0xFE3
  8118                           fsr1h	equ	0xFE2
  8119                           fsr1l	equ	0xFE1
  8120                           indf2	equ	0xFDF
  8121                           postinc2	equ	0xFDE
  8122                           postdec2	equ	0xFDD
  8123                           fsr2h	equ	0xFDA
  8124                           fsr2l	equ	0xFD9
  8125                           status	equ	0xFD8
  8126                           
  8127 ;; *************** function _GetRx1Freq *****************
  8128 ;; Defined at:
  8129 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8130 ;; Parameters:    Size  Location     Type
  8131 ;;		None
  8132 ;; Auto vars:     Size  Location     Type
  8133 ;;		None
  8134 ;; Return value:  Size  Location     Type
  8135 ;;                  4    4[BANK0 ] unsigned long 
  8136 ;; Registers used:
  8137 ;;		None
  8138 ;; Tracked objects:
  8139 ;;		On entry : 0/0
  8140 ;;		On exit  : 0/0
  8141 ;;		Unchanged: 0/0
  8142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8143 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8144 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8145 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8146 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8147 ;;Total ram usage:        4 bytes
  8148 ;; Hardware stack levels used:    1
  8149 ;; Hardware stack levels required when called:    7
  8150 ;; This function calls:
  8151 ;;		Nothing
  8152 ;; This function is called by:
  8153 ;;		_LORAWAN_ReceiveWindow1Callback
  8154 ;; This function uses a non-reentrant model
  8155 ;;
  8156                           
  8157                           	psect	text45
  8158  00A21C                     __ptext45:
  8159                           	opt stack 0
  8160  00A21C                     _GetRx1Freq:
  8161                           	opt stack 20
  8162                           
  8163                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  8164                           
  8165                           ;incstack = 0
  8166  00A21C  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  8167  00A220  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  8168  00A224  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  8169  00A228  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  8170  00A22C  0012               	return		;funcret
  8171  00A22E                     __end_of_GetRx1Freq:
  8172                           	opt stack 0
  8173                           tosu	equ	0xFFF
  8174                           tosh	equ	0xFFE
  8175                           tosl	equ	0xFFD
  8176                           pclath	equ	0xFFA
  8177                           tblptru	equ	0xFF8
  8178                           tblptrh	equ	0xFF7
  8179                           tblptrl	equ	0xFF6
  8180                           tablat	equ	0xFF5
  8181                           prodh	equ	0xFF4
  8182                           prodl	equ	0xFF3
  8183                           intcon	equ	0xFF2
  8184                           intcon2	equ	0xFF1
  8185                           intcon3	equ	0xFF0
  8186                           postinc0	equ	0xFEE
  8187                           wreg	equ	0xFE8
  8188                           postinc1	equ	0xFE6
  8189                           postdec1	equ	0xFE5
  8190                           plusw1	equ	0xFE3
  8191                           fsr1h	equ	0xFE2
  8192                           fsr1l	equ	0xFE1
  8193                           indf2	equ	0xFDF
  8194                           postinc2	equ	0xFDE
  8195                           postdec2	equ	0xFDD
  8196                           fsr2h	equ	0xFDA
  8197                           fsr2l	equ	0xFD9
  8198                           status	equ	0xFD8
  8199                           
  8200 ;; *************** function _RADIO_DIO5 *****************
  8201 ;; Defined at:
  8202 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  dioMapping      1   10[BANK0 ] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      void 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0, cstack
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8219 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8220 ;;Total ram usage:        2 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:   11
  8223 ;; This function calls:
  8224 ;;		_RADIO_RegisterRead
  8225 ;;		_RADIO_UnhandledInterrupt
  8226 ;; This function is called by:
  8227 ;;		_LORAWAN_Mainloop
  8228 ;; This function uses a non-reentrant model
  8229 ;;
  8230                           
  8231                           	psect	text46
  8232  009C94                     __ptext46:
  8233                           	opt stack 0
  8234  009C94                     _RADIO_DIO5:
  8235                           	opt stack 18
  8236                           
  8237                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8238                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8239                           
  8240                           ;incstack = 0
  8241  009C94  0E41               	movlw	65
  8242  009C96  EC25  F04F         	call	_RADIO_RegisterRead
  8243  009C9A  0100               	movlb	0	; () banked
  8244  009C9C  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8245  009C9E  0100               	movlb	0	; () banked
  8246  009CA0  3969               	swapf	??_RADIO_DIO5& (0+255),w,b
  8247  009CA2  0B0F               	andlw	15
  8248  009CA4  0B03               	andlw	3
  8249  009CA6  0100               	movlb	0	; () banked
  8250  009CA8  6F6A               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  8251                           
  8252                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8253  009CAA  0E01               	movlw	1
  8254  009CAC  EC25  F04F         	call	_RADIO_RegisterRead
  8255  009CB0  0100               	movlb	0	; () banked
  8256  009CB2  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8257  009CB4  0100               	movlb	0	; () banked
  8258  009CB6  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8259  009CB8  0012               	return	
  8260                           
  8261                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8262                           
  8263                           ; BSR set to: 0
  8264                           
  8265                           ;radio_driver_SX1276.c: 1354: {
  8266                           ;radio_driver_SX1276.c: 1355: default:
  8267                           
  8268                           ; BSR set to: 0
  8269                           ;radio_driver_SX1276.c: 1351: {
  8270                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  8271  009CBA  0E01               	movlw	1
  8272  009CBC  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  8273                           
  8274                           ;radio_driver_SX1276.c: 1358: }
  8275                           
  8276                           ;radio_driver_SX1276.c: 1357: break;
  8277  009CC0  0012               	return	
  8278  009CC2                     __end_of_RADIO_DIO5:
  8279                           	opt stack 0
  8280                           tosu	equ	0xFFF
  8281                           tosh	equ	0xFFE
  8282                           tosl	equ	0xFFD
  8283                           pclath	equ	0xFFA
  8284                           tblptru	equ	0xFF8
  8285                           tblptrh	equ	0xFF7
  8286                           tblptrl	equ	0xFF6
  8287                           tablat	equ	0xFF5
  8288                           prodh	equ	0xFF4
  8289                           prodl	equ	0xFF3
  8290                           intcon	equ	0xFF2
  8291                           intcon2	equ	0xFF1
  8292                           intcon3	equ	0xFF0
  8293                           postinc0	equ	0xFEE
  8294                           wreg	equ	0xFE8
  8295                           postinc1	equ	0xFE6
  8296                           postdec1	equ	0xFE5
  8297                           plusw1	equ	0xFE3
  8298                           fsr1h	equ	0xFE2
  8299                           fsr1l	equ	0xFE1
  8300                           indf2	equ	0xFDF
  8301                           postinc2	equ	0xFDE
  8302                           postdec2	equ	0xFDD
  8303                           fsr2h	equ	0xFDA
  8304                           fsr2l	equ	0xFD9
  8305                           status	equ	0xFD8
  8306                           
  8307 ;; *************** function _RADIO_DIO4 *****************
  8308 ;; Defined at:
  8309 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8310 ;; Parameters:    Size  Location     Type
  8311 ;;		None
  8312 ;; Auto vars:     Size  Location     Type
  8313 ;;  dioMapping      1   11[BANK0 ] unsigned char 
  8314 ;; Return value:  Size  Location     Type
  8315 ;;                  1    wreg      void 
  8316 ;; Registers used:
  8317 ;;		wreg, status,2, status,0, cstack
  8318 ;; Tracked objects:
  8319 ;;		On entry : 0/0
  8320 ;;		On exit  : 0/0
  8321 ;;		Unchanged: 0/0
  8322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8324 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8325 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8326 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8327 ;;Total ram usage:        3 bytes
  8328 ;; Hardware stack levels used:    1
  8329 ;; Hardware stack levels required when called:   11
  8330 ;; This function calls:
  8331 ;;		_RADIO_RegisterRead
  8332 ;;		_RADIO_UnhandledInterrupt
  8333 ;; This function is called by:
  8334 ;;		_LORAWAN_Mainloop
  8335 ;; This function uses a non-reentrant model
  8336 ;;
  8337                           
  8338                           	psect	text47
  8339  009932                     __ptext47:
  8340                           	opt stack 0
  8341  009932                     _RADIO_DIO4:
  8342                           	opt stack 18
  8343                           
  8344                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8345                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8346                           
  8347                           ;incstack = 0
  8348  009932  0E41               	movlw	65
  8349  009934  EC25  F04F         	call	_RADIO_RegisterRead
  8350  009938  0100               	movlb	0	; () banked
  8351  00993A  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8352  00993C  0E06               	movlw	6
  8353  00993E  0100               	movlb	0	; () banked
  8354  009940  6F6A               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  8355  009942                     u20195:
  8356  009942  0100               	movlb	0	; () banked
  8357  009944  90D8               	bcf	status,0,c
  8358  009946  3369               	rrcf	??_RADIO_DIO4& (0+255),f,b
  8359  009948  0100               	movlb	0	; () banked
  8360  00994A  2F6A               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  8361  00994C  D7FA               	goto	u20195
  8362  00994E  0100               	movlb	0	; () banked
  8363  009950  5169               	movf	??_RADIO_DIO4& (0+255),w,b
  8364  009952  0B03               	andlw	3
  8365  009954  0100               	movlb	0	; () banked
  8366  009956  6F6B               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  8367                           
  8368                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8369  009958  0E01               	movlw	1
  8370  00995A  EC25  F04F         	call	_RADIO_RegisterRead
  8371  00995E  0100               	movlb	0	; () banked
  8372  009960  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8373  009962  0100               	movlb	0	; () banked
  8374  009964  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8375  009966  0012               	return	
  8376                           
  8377                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8378                           
  8379                           ; BSR set to: 0
  8380                           
  8381                           ;radio_driver_SX1276.c: 1331: {
  8382                           ;radio_driver_SX1276.c: 1332: default:
  8383                           
  8384                           ; BSR set to: 0
  8385                           ;radio_driver_SX1276.c: 1328: {
  8386                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  8387  009968  0E01               	movlw	1
  8388  00996A  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  8389                           
  8390                           ;radio_driver_SX1276.c: 1335: }
  8391                           
  8392                           ;radio_driver_SX1276.c: 1334: break;
  8393  00996E  0012               	return	
  8394  009970                     __end_of_RADIO_DIO4:
  8395                           	opt stack 0
  8396                           tosu	equ	0xFFF
  8397                           tosh	equ	0xFFE
  8398                           tosl	equ	0xFFD
  8399                           pclath	equ	0xFFA
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           prodh	equ	0xFF4
  8405                           prodl	equ	0xFF3
  8406                           intcon	equ	0xFF2
  8407                           intcon2	equ	0xFF1
  8408                           intcon3	equ	0xFF0
  8409                           postinc0	equ	0xFEE
  8410                           wreg	equ	0xFE8
  8411                           postinc1	equ	0xFE6
  8412                           postdec1	equ	0xFE5
  8413                           plusw1	equ	0xFE3
  8414                           fsr1h	equ	0xFE2
  8415                           fsr1l	equ	0xFE1
  8416                           indf2	equ	0xFDF
  8417                           postinc2	equ	0xFDE
  8418                           postdec2	equ	0xFDD
  8419                           fsr2h	equ	0xFDA
  8420                           fsr2l	equ	0xFD9
  8421                           status	equ	0xFD8
  8422                           
  8423 ;; *************** function _RADIO_DIO3 *****************
  8424 ;; Defined at:
  8425 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8426 ;; Parameters:    Size  Location     Type
  8427 ;;		None
  8428 ;; Auto vars:     Size  Location     Type
  8429 ;;  dioMapping      1   10[BANK0 ] unsigned char 
  8430 ;; Return value:  Size  Location     Type
  8431 ;;                  1    wreg      void 
  8432 ;; Registers used:
  8433 ;;		wreg, status,2, status,0, cstack
  8434 ;; Tracked objects:
  8435 ;;		On entry : 0/0
  8436 ;;		On exit  : 0/0
  8437 ;;		Unchanged: 0/0
  8438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8439 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;Total ram usage:        2 bytes
  8444 ;; Hardware stack levels used:    1
  8445 ;; Hardware stack levels required when called:   11
  8446 ;; This function calls:
  8447 ;;		_RADIO_RegisterRead
  8448 ;;		_RADIO_UnhandledInterrupt
  8449 ;; This function is called by:
  8450 ;;		_LORAWAN_Mainloop
  8451 ;; This function uses a non-reentrant model
  8452 ;;
  8453                           
  8454                           	psect	text48
  8455  009EC0                     __ptext48:
  8456                           	opt stack 0
  8457  009EC0                     _RADIO_DIO3:
  8458                           	opt stack 18
  8459                           
  8460                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8461                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8462                           
  8463                           ;incstack = 0
  8464  009EC0  0E40               	movlw	64
  8465  009EC2  EC25  F04F         	call	_RADIO_RegisterRead
  8466  009EC6  0B03               	andlw	3
  8467  009EC8  0100               	movlb	0	; () banked
  8468  009ECA  6F6A               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  8469                           
  8470                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8471  009ECC  0E01               	movlw	1
  8472  009ECE  EC25  F04F         	call	_RADIO_RegisterRead
  8473  009ED2  0100               	movlb	0	; () banked
  8474  009ED4  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8475  009ED6  0100               	movlb	0	; () banked
  8476  009ED8  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8477  009EDA  0012               	return	
  8478                           
  8479                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8480                           
  8481                           ; BSR set to: 0
  8482                           
  8483                           ;radio_driver_SX1276.c: 1308: {
  8484                           ;radio_driver_SX1276.c: 1309: default:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;radio_driver_SX1276.c: 1305: {
  8488                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  8489  009EDC  0E01               	movlw	1
  8490  009EDE  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  8491                           
  8492                           ;radio_driver_SX1276.c: 1312: }
  8493                           
  8494                           ;radio_driver_SX1276.c: 1311: break;
  8495  009EE2  0012               	return	
  8496  009EE4                     __end_of_RADIO_DIO3:
  8497                           	opt stack 0
  8498                           tosu	equ	0xFFF
  8499                           tosh	equ	0xFFE
  8500                           tosl	equ	0xFFD
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           intcon	equ	0xFF2
  8509                           intcon2	equ	0xFF1
  8510                           intcon3	equ	0xFF0
  8511                           postinc0	equ	0xFEE
  8512                           wreg	equ	0xFE8
  8513                           postinc1	equ	0xFE6
  8514                           postdec1	equ	0xFE5
  8515                           plusw1	equ	0xFE3
  8516                           fsr1h	equ	0xFE2
  8517                           fsr1l	equ	0xFE1
  8518                           indf2	equ	0xFDF
  8519                           postinc2	equ	0xFDE
  8520                           postdec2	equ	0xFDD
  8521                           fsr2h	equ	0xFDA
  8522                           fsr2l	equ	0xFD9
  8523                           status	equ	0xFD8
  8524                           
  8525 ;; *************** function _RADIO_DIO2 *****************
  8526 ;; Defined at:
  8527 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8528 ;; Parameters:    Size  Location     Type
  8529 ;;		None
  8530 ;; Auto vars:     Size  Location     Type
  8531 ;;  dioMapping      1   32[BANK0 ] unsigned char 
  8532 ;;  opMode          1   31[BANK0 ] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  1    wreg      void 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0, cstack
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8545 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8546 ;;Total ram usage:        3 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:   12
  8549 ;; This function calls:
  8550 ;;		_RADIO_FHSSChangeChannel
  8551 ;;		_RADIO_RegisterRead
  8552 ;;		_RADIO_UnhandledInterrupt
  8553 ;; This function is called by:
  8554 ;;		_LORAWAN_Mainloop
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text49
  8559  009256                     __ptext49:
  8560                           	opt stack 0
  8561  009256                     _RADIO_DIO2:
  8562                           	opt stack 17
  8563                           
  8564                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8565                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8566                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8567                           
  8568                           ;incstack = 0
  8569  009256  0E40               	movlw	64
  8570  009258  EC25  F04F         	call	_RADIO_RegisterRead
  8571  00925C  0100               	movlb	0	; () banked
  8572  00925E  6F7E               	movwf	??_RADIO_DIO2& (0+255),b
  8573  009260  0100               	movlb	0	; () banked
  8574  009262  90D8               	bcf	status,0,c
  8575  009264  337E               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8576  009266  0100               	movlb	0	; () banked
  8577  009268  90D8               	bcf	status,0,c
  8578  00926A  317E               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8579  00926C  0B03               	andlw	3
  8580  00926E  0100               	movlb	0	; () banked
  8581  009270  6F80               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8582                           
  8583                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8584  009272  0E01               	movlw	1
  8585  009274  EC25  F04F         	call	_RADIO_RegisterRead
  8586  009278  0100               	movlb	0	; () banked
  8587  00927A  6F7F               	movwf	RADIO_DIO2@opMode& (0+255),b
  8588                           
  8589                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8590  00927C  0E01               	movlw	1
  8591  00927E  EC25  F04F         	call	_RADIO_RegisterRead
  8592  009282  0100               	movlb	0	; () banked
  8593  009284  6F7E               	movwf	??_RADIO_DIO2& (0+255),b
  8594  009286  0100               	movlb	0	; () banked
  8595  009288  AF7E               	btfss	??_RADIO_DIO2& (0+255),7,b
  8596  00928A  0012               	return	
  8597  00928C  D007               	goto	l16613
  8598  00928E                     l16607:
  8599                           
  8600                           ; BSR set to: 0
  8601                           ;radio_driver_SX1276.c: 1283: case 0x01:
  8602                           ;radio_driver_SX1276.c: 1284: case 0x02:
  8603                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  8604  00928E  EC47  F04B         	call	_RADIO_FHSSChangeChannel	;wreg free
  8605                           
  8606                           ;radio_driver_SX1276.c: 1286: break;
  8607  009292  0012               	return	
  8608  009294                     l16609:
  8609                           
  8610                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8611  009294  0E01               	movlw	1
  8612  009296  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  8613                           
  8614                           ;radio_driver_SX1276.c: 1290: }
  8615                           
  8616                           ;radio_driver_SX1276.c: 1289: break;
  8617  00929A  0012               	return	
  8618  00929C                     l16613:
  8619  00929C  0100               	movlb	0	; () banked
  8620  00929E  5180               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8621                           
  8622                           ; Switch size 1, requested type "space"
  8623                           ; Number of cases is 3, Range of values is 0 to 2
  8624                           ; switch strategies available:
  8625                           ; Name         Instructions Cycles
  8626                           ; simple_byte           10     6 (average)
  8627                           ;	Chosen strategy is simple_byte
  8628  0092A0  0A00               	xorlw	0	; case 0
  8629  0092A2  B4D8               	btfsc	status,2,c
  8630  0092A4  D7F4               	goto	l16607
  8631  0092A6  0A01               	xorlw	1	; case 1
  8632  0092A8  B4D8               	btfsc	status,2,c
  8633  0092AA  D7F1               	goto	l16607
  8634  0092AC  0A03               	xorlw	3	; case 2
  8635  0092AE  B4D8               	btfsc	status,2,c
  8636  0092B0  D7EE               	goto	l16607
  8637  0092B2  D7F0               	goto	l16609
  8638  0092B4                     __end_of_RADIO_DIO2:
  8639                           	opt stack 0
  8640                           tosu	equ	0xFFF
  8641                           tosh	equ	0xFFE
  8642                           tosl	equ	0xFFD
  8643                           pclath	equ	0xFFA
  8644                           tblptru	equ	0xFF8
  8645                           tblptrh	equ	0xFF7
  8646                           tblptrl	equ	0xFF6
  8647                           tablat	equ	0xFF5
  8648                           prodh	equ	0xFF4
  8649                           prodl	equ	0xFF3
  8650                           intcon	equ	0xFF2
  8651                           intcon2	equ	0xFF1
  8652                           intcon3	equ	0xFF0
  8653                           postinc0	equ	0xFEE
  8654                           wreg	equ	0xFE8
  8655                           postinc1	equ	0xFE6
  8656                           postdec1	equ	0xFE5
  8657                           plusw1	equ	0xFE3
  8658                           fsr1h	equ	0xFE2
  8659                           fsr1l	equ	0xFE1
  8660                           indf2	equ	0xFDF
  8661                           postinc2	equ	0xFDE
  8662                           postdec2	equ	0xFDD
  8663                           fsr2h	equ	0xFDA
  8664                           fsr2l	equ	0xFD9
  8665                           status	equ	0xFD8
  8666                           
  8667 ;; *************** function _RADIO_DIO1 *****************
  8668 ;; Defined at:
  8669 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;  dioMapping      1  112[BANK0 ] unsigned char 
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8685 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8686 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8687 ;;Total ram usage:        2 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:   17
  8690 ;; This function calls:
  8691 ;;		_RADIO_FHSSChangeChannel
  8692 ;;		_RADIO_RegisterRead
  8693 ;;		_RADIO_RxTimeout
  8694 ;;		_RADIO_UnhandledInterrupt
  8695 ;; This function is called by:
  8696 ;;		_LORAWAN_Mainloop
  8697 ;; This function uses a non-reentrant model
  8698 ;;
  8699                           
  8700                           	psect	text50
  8701  009312                     __ptext50:
  8702                           	opt stack 0
  8703  009312                     _RADIO_DIO1:
  8704                           	opt stack 12
  8705                           
  8706                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8707                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8708                           
  8709                           ;incstack = 0
  8710  009312  0E40               	movlw	64
  8711  009314  EC25  F04F         	call	_RADIO_RegisterRead
  8712  009318  0100               	movlb	0	; () banked
  8713  00931A  6FCF               	movwf	??_RADIO_DIO1& (0+255),b
  8714  00931C  0100               	movlb	0	; () banked
  8715  00931E  39CF               	swapf	??_RADIO_DIO1& (0+255),w,b
  8716  009320  0B0F               	andlw	15
  8717  009322  0B03               	andlw	3
  8718  009324  0100               	movlb	0	; () banked
  8719  009326  6FD0               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8720                           
  8721                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8722  009328  0E01               	movlw	1
  8723  00932A  EC25  F04F         	call	_RADIO_RegisterRead
  8724  00932E  0100               	movlb	0	; () banked
  8725  009330  6FCF               	movwf	??_RADIO_DIO1& (0+255),b
  8726  009332  0100               	movlb	0	; () banked
  8727  009334  BFCF               	btfsc	??_RADIO_DIO1& (0+255),7,b
  8728  009336  D00B               	goto	l16597
  8729  009338  D013               	goto	l16601
  8730  00933A                     l16589:
  8731                           
  8732                           ; BSR set to: 0
  8733                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  8734  00933A  EC61  F04E         	call	_RADIO_RxTimeout	;wreg free
  8735                           
  8736                           ;radio_driver_SX1276.c: 1244: break;
  8737  00933E  0012               	return	
  8738  009340                     l16591:
  8739                           
  8740                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  8741  009340  EC47  F04B         	call	_RADIO_FHSSChangeChannel	;wreg free
  8742                           
  8743                           ;radio_driver_SX1276.c: 1247: break;
  8744  009344  0012               	return	
  8745  009346                     l16593:
  8746                           
  8747                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8748  009346  0E01               	movlw	1
  8749  009348  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  8750                           
  8751                           ;radio_driver_SX1276.c: 1251: }
  8752                           
  8753                           ;radio_driver_SX1276.c: 1250: break;
  8754  00934C  0012               	return	
  8755  00934E                     l16597:
  8756  00934E  0100               	movlb	0	; () banked
  8757  009350  51D0               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8758                           
  8759                           ; Switch size 1, requested type "space"
  8760                           ; Number of cases is 2, Range of values is 0 to 1
  8761                           ; switch strategies available:
  8762                           ; Name         Instructions Cycles
  8763                           ; simple_byte            7     4 (average)
  8764                           ;	Chosen strategy is simple_byte
  8765  009352  0A00               	xorlw	0	; case 0
  8766  009354  B4D8               	btfsc	status,2,c
  8767  009356  D7F1               	goto	l16589
  8768  009358  0A01               	xorlw	1	; case 1
  8769  00935A  B4D8               	btfsc	status,2,c
  8770  00935C  D7F1               	goto	l16591
  8771  00935E  D7F3               	goto	l16593
  8772  009360                     l16601:
  8773                           
  8774                           ; BSR set to: 0
  8775  009360  0100               	movlb	0	; () banked
  8776  009362  51D0               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8777                           
  8778                           ; Switch size 1, requested type "space"
  8779                           ; Number of cases is 1, Range of values is 0 to 0
  8780                           ; switch strategies available:
  8781                           ; Name         Instructions Cycles
  8782                           ; simple_byte            4     3 (average)
  8783                           ;	Chosen strategy is simple_byte
  8784  009364  0A00               	xorlw	0	; case 0
  8785                           
  8786                           ; BSR set to: 0
  8787  009366  0012               	return	
  8788  009368                     __end_of_RADIO_DIO1:
  8789                           	opt stack 0
  8790                           tosu	equ	0xFFF
  8791                           tosh	equ	0xFFE
  8792                           tosl	equ	0xFFD
  8793                           pclath	equ	0xFFA
  8794                           tblptru	equ	0xFF8
  8795                           tblptrh	equ	0xFF7
  8796                           tblptrl	equ	0xFF6
  8797                           tablat	equ	0xFF5
  8798                           prodh	equ	0xFF4
  8799                           prodl	equ	0xFF3
  8800                           intcon	equ	0xFF2
  8801                           intcon2	equ	0xFF1
  8802                           intcon3	equ	0xFF0
  8803                           postinc0	equ	0xFEE
  8804                           wreg	equ	0xFE8
  8805                           postinc1	equ	0xFE6
  8806                           postdec1	equ	0xFE5
  8807                           plusw1	equ	0xFE3
  8808                           fsr1h	equ	0xFE2
  8809                           fsr1l	equ	0xFE1
  8810                           indf2	equ	0xFDF
  8811                           postinc2	equ	0xFDE
  8812                           postdec2	equ	0xFDD
  8813                           fsr2h	equ	0xFDA
  8814                           fsr2l	equ	0xFD9
  8815                           status	equ	0xFD8
  8816                           
  8817 ;; *************** function _RADIO_RxTimeout *****************
  8818 ;; Defined at:
  8819 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8820 ;; Parameters:    Size  Location     Type
  8821 ;;		None
  8822 ;; Auto vars:     Size  Location     Type
  8823 ;;		None
  8824 ;; Return value:  Size  Location     Type
  8825 ;;                  1    wreg      void 
  8826 ;; Registers used:
  8827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8828 ;; Tracked objects:
  8829 ;;		On entry : 0/0
  8830 ;;		On exit  : 0/0
  8831 ;;		Unchanged: 0/0
  8832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8834 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8836 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8837 ;;Total ram usage:        0 bytes
  8838 ;; Hardware stack levels used:    1
  8839 ;; Hardware stack levels required when called:   16
  8840 ;; This function calls:
  8841 ;;		_LORAWAN_RxTimeout
  8842 ;;		_RADIO_RegisterWrite
  8843 ;;		_RADIO_WriteMode
  8844 ;;		_SwTimerStop
  8845 ;; This function is called by:
  8846 ;;		_RADIO_DIO1
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text51
  8851  009CC2                     __ptext51:
  8852                           	opt stack 0
  8853  009CC2                     _RADIO_RxTimeout:
  8854                           	opt stack 12
  8855                           
  8856                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8857                           
  8858                           ;incstack = 0
  8859  009CC2  0101               	movlb	1	; () banked
  8860  009CC4  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8861  009CC6  EC39  F04F         	call	_SwTimerStop
  8862                           
  8863                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8864  009CCA  0E80               	movlw	128
  8865  009CCC  0100               	movlb	0	; () banked
  8866  009CCE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8867  009CD0  0E12               	movlw	18
  8868  009CD2  ECFE  F04F         	call	_RADIO_RegisterWrite
  8869                           
  8870                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8871  009CD6  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8872  009CDA  0E00               	movlw	0
  8873  009CDC  0100               	movlb	0	; () banked
  8874  009CDE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8875  009CE0  0E00               	movlw	0
  8876  009CE2  EC70  F035         	call	_RADIO_WriteMode
  8877                           
  8878                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8879  009CE6  0101               	movlb	1	; () banked
  8880  009CE8  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8881                           
  8882                           ; BSR set to: 1
  8883                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8884  009CEA  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  8885  009CEE  0012               	return		;funcret
  8886  009CF0                     __end_of_RADIO_RxTimeout:
  8887                           	opt stack 0
  8888                           tosu	equ	0xFFF
  8889                           tosh	equ	0xFFE
  8890                           tosl	equ	0xFFD
  8891                           pclath	equ	0xFFA
  8892                           tblptru	equ	0xFF8
  8893                           tblptrh	equ	0xFF7
  8894                           tblptrl	equ	0xFF6
  8895                           tablat	equ	0xFF5
  8896                           prodh	equ	0xFF4
  8897                           prodl	equ	0xFF3
  8898                           intcon	equ	0xFF2
  8899                           intcon2	equ	0xFF1
  8900                           intcon3	equ	0xFF0
  8901                           postinc0	equ	0xFEE
  8902                           wreg	equ	0xFE8
  8903                           postinc1	equ	0xFE6
  8904                           postdec1	equ	0xFE5
  8905                           plusw1	equ	0xFE3
  8906                           fsr1h	equ	0xFE2
  8907                           fsr1l	equ	0xFE1
  8908                           indf2	equ	0xFDF
  8909                           postinc2	equ	0xFDE
  8910                           postdec2	equ	0xFDD
  8911                           fsr2h	equ	0xFDA
  8912                           fsr2l	equ	0xFD9
  8913                           status	equ	0xFD8
  8914                           
  8915 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8916 ;; Defined at:
  8917 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;  irqFlags        1   29[BANK0 ] unsigned char 
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      void 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8935 ;;Total ram usage:        1 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:   11
  8938 ;; This function calls:
  8939 ;;		_RADIO_RegisterRead
  8940 ;;		_RADIO_RegisterWrite
  8941 ;;		_RADIO_WriteFrequency
  8942 ;; This function is called by:
  8943 ;;		_RADIO_DIO1
  8944 ;;		_RADIO_DIO2
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text52
  8949  00968E                     __ptext52:
  8950                           	opt stack 0
  8951  00968E                     _RADIO_FHSSChangeChannel:
  8952                           	opt stack 17
  8953                           
  8954                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8955                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8956                           
  8957                           ;incstack = 0
  8958  00968E  0E12               	movlw	18
  8959  009690  EC25  F04F         	call	_RADIO_RegisterRead
  8960  009694  0100               	movlb	0	; () banked
  8961  009696  6F7D               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  8962                           
  8963                           ; BSR set to: 0
  8964                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8965  009698  0101               	movlb	1	; () banked
  8966  00969A  5192               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8967  00969C  0101               	movlb	1	; () banked
  8968  00969E  1193               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8969  0096A0  B4D8               	btfsc	status,2,c
  8970  0096A2  D011               	goto	l590
  8971                           
  8972                           ; BSR set to: 1
  8973                           ;radio_driver_SX1276.c: 1164: {
  8974                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8975  0096A4  0101               	movlb	1	; () banked
  8976  0096A6  51A3               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8977  0096A8  0101               	movlb	1	; () banked
  8978  0096AA  11A4               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8979  0096AC  B4D8               	btfsc	status,2,c
  8980  0096AE  D00B               	goto	l590
  8981                           
  8982                           ; BSR set to: 1
  8983                           ;radio_driver_SX1276.c: 1166: {
  8984                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8985  0096B0  0E00               	movlw	0
  8986  0096B2  0100               	movlb	0	; () banked
  8987  0096B4  6F71               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  8988  0096B6  0E00               	movlw	0
  8989  0096B8  6F72               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8990  0096BA  0E00               	movlw	0
  8991  0096BC  6F73               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  8992  0096BE  0E00               	movlw	0
  8993  0096C0  6F74               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  8994  0096C2  ECD1  F039         	call	_RADIO_WriteFrequency	;wreg free
  8995  0096C6                     l590:
  8996                           
  8997                           ;radio_driver_SX1276.c: 1168: }
  8998                           ;radio_driver_SX1276.c: 1169: }
  8999                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  9000  0096C6  0E02               	movlw	2
  9001  0096C8  0100               	movlb	0	; () banked
  9002  0096CA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9003  0096CC  0E12               	movlw	18
  9004  0096CE  ECFE  F04F         	call	_RADIO_RegisterWrite
  9005  0096D2  0012               	return		;funcret
  9006  0096D4                     __end_of_RADIO_FHSSChangeChannel:
  9007                           	opt stack 0
  9008                           tosu	equ	0xFFF
  9009                           tosh	equ	0xFFE
  9010                           tosl	equ	0xFFD
  9011                           pclath	equ	0xFFA
  9012                           tblptru	equ	0xFF8
  9013                           tblptrh	equ	0xFF7
  9014                           tblptrl	equ	0xFF6
  9015                           tablat	equ	0xFF5
  9016                           prodh	equ	0xFF4
  9017                           prodl	equ	0xFF3
  9018                           intcon	equ	0xFF2
  9019                           intcon2	equ	0xFF1
  9020                           intcon3	equ	0xFF0
  9021                           postinc0	equ	0xFEE
  9022                           wreg	equ	0xFE8
  9023                           postinc1	equ	0xFE6
  9024                           postdec1	equ	0xFE5
  9025                           plusw1	equ	0xFE3
  9026                           fsr1h	equ	0xFE2
  9027                           fsr1l	equ	0xFE1
  9028                           indf2	equ	0xFDF
  9029                           postinc2	equ	0xFDE
  9030                           postdec2	equ	0xFDD
  9031                           fsr2h	equ	0xFDA
  9032                           fsr2l	equ	0xFD9
  9033                           status	equ	0xFD8
  9034                           
  9035 ;; *************** function _RADIO_DIO0 *****************
  9036 ;; Defined at:
  9037 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9038 ;; Parameters:    Size  Location     Type
  9039 ;;		None
  9040 ;; Auto vars:     Size  Location     Type
  9041 ;;  opMode          1  110[BANK1 ] unsigned char 
  9042 ;;  dioMapping      1  109[BANK1 ] unsigned char 
  9043 ;; Return value:  Size  Location     Type
  9044 ;;                  1    wreg      void 
  9045 ;; Registers used:
  9046 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9047 ;; Tracked objects:
  9048 ;;		On entry : 0/0
  9049 ;;		On exit  : 0/0
  9050 ;;		Unchanged: 0/0
  9051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9052 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9053 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9054 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9055 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9056 ;;Total ram usage:        4 bytes
  9057 ;; Hardware stack levels used:    1
  9058 ;; Hardware stack levels required when called:   17
  9059 ;; This function calls:
  9060 ;;		_RADIO_FSKPacketSent
  9061 ;;		_RADIO_FSKPayloadReady
  9062 ;;		_RADIO_RegisterRead
  9063 ;;		_RADIO_RxDone
  9064 ;;		_RADIO_TxDone
  9065 ;;		_RADIO_UnhandledInterrupt
  9066 ;; This function is called by:
  9067 ;;		_LORAWAN_Mainloop
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text53
  9072  0082F6                     __ptext53:
  9073                           	opt stack 0
  9074  0082F6                     _RADIO_DIO0:
  9075                           	opt stack 12
  9076                           
  9077                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  9078                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  9079                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  9080                           
  9081                           ;incstack = 0
  9082  0082F6  0E40               	movlw	64
  9083  0082F8  EC25  F04F         	call	_RADIO_RegisterRead
  9084  0082FC  0101               	movlb	1	; () banked
  9085  0082FE  6F6B               	movwf	??_RADIO_DIO0& (0+255),b
  9086  008300  0E06               	movlw	6
  9087  008302  0101               	movlb	1	; () banked
  9088  008304  6F6C               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  9089  008306                     u20125:
  9090  008306  0101               	movlb	1	; () banked
  9091  008308  90D8               	bcf	status,0,c
  9092  00830A  336B               	rrcf	??_RADIO_DIO0& (0+255),f,b
  9093  00830C  0101               	movlb	1	; () banked
  9094  00830E  2F6C               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  9095  008310  D7FA               	goto	u20125
  9096  008312  0101               	movlb	1	; () banked
  9097  008314  516B               	movf	??_RADIO_DIO0& (0+255),w,b
  9098  008316  0B03               	andlw	3
  9099  008318  0101               	movlb	1	; () banked
  9100  00831A  6F6D               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  9101                           
  9102                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  9103  00831C  0E01               	movlw	1
  9104  00831E  EC25  F04F         	call	_RADIO_RegisterRead
  9105  008322  0101               	movlb	1	; () banked
  9106  008324  6F6E               	movwf	RADIO_DIO0@opMode& (0+255),b
  9107                           
  9108                           ; BSR set to: 1
  9109                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  9110  008326  0101               	movlb	1	; () banked
  9111  008328  BF6E               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  9112  00832A  D00B               	goto	l16567
  9113  00832C  D02E               	goto	l16583
  9114  00832E                     l16559:
  9115                           
  9116                           ; BSR set to: 1
  9117                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  9118  00832E  ECCA  F03B         	call	_RADIO_RxDone	;wreg free
  9119                           
  9120                           ;radio_driver_SX1276.c: 1191: break;
  9121  008332  0012               	return	
  9122  008334                     l16561:
  9123                           
  9124                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  9125  008334  EC2B  F034         	call	_RADIO_TxDone	;wreg free
  9126                           
  9127                           ;radio_driver_SX1276.c: 1194: break;
  9128  008338  0012               	return	
  9129  00833A                     l16563:
  9130                           
  9131                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9132  00833A  0E01               	movlw	1
  9133  00833C  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  9134                           
  9135                           ;radio_driver_SX1276.c: 1198: }
  9136                           
  9137                           ;radio_driver_SX1276.c: 1197: break;
  9138  008340  0012               	return	
  9139  008342                     l16567:
  9140  008342  0101               	movlb	1	; () banked
  9141  008344  516D               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9142                           
  9143                           ; Switch size 1, requested type "space"
  9144                           ; Number of cases is 2, Range of values is 0 to 1
  9145                           ; switch strategies available:
  9146                           ; Name         Instructions Cycles
  9147                           ; simple_byte            7     4 (average)
  9148                           ;	Chosen strategy is simple_byte
  9149  008346  0A00               	xorlw	0	; case 0
  9150  008348  B4D8               	btfsc	status,2,c
  9151  00834A  D7F1               	goto	l16559
  9152  00834C  0A01               	xorlw	1	; case 1
  9153  00834E  B4D8               	btfsc	status,2,c
  9154  008350  D7F1               	goto	l16561
  9155  008352  D7F3               	goto	l16563
  9156  008354                     l16569:
  9157                           
  9158                           ; BSR set to: 1
  9159                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  9160  008354  0E07               	movlw	7
  9161  008356  0101               	movlb	1	; () banked
  9162  008358  176E               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  9163                           
  9164                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  9165  00835A  0E03               	movlw	3
  9166  00835C  0101               	movlb	1	; () banked
  9167  00835E  196E               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9168  008360  A4D8               	btfss	status,2,c
  9169  008362  D003               	goto	l16573
  9170                           
  9171                           ; BSR set to: 1
  9172                           ;radio_driver_SX1276.c: 1209: {
  9173                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  9174  008364  EC82  F033         	call	_RADIO_FSKPacketSent	;wreg free
  9175                           
  9176                           ;radio_driver_SX1276.c: 1212: }
  9177  008368  0012               	return	
  9178  00836A                     l16573:
  9179                           
  9180                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  9181  00836A  0E05               	movlw	5
  9182  00836C  0101               	movlb	1	; () banked
  9183  00836E  196E               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9184  008370  A4D8               	btfss	status,2,c
  9185  008372  D003               	goto	l16577
  9186                           
  9187                           ; BSR set to: 1
  9188                           ;radio_driver_SX1276.c: 1214: {
  9189                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  9190  008374  ECEC  F03D         	call	_RADIO_FSKPayloadReady	;wreg free
  9191                           
  9192                           ;radio_driver_SX1276.c: 1217: }
  9193  008378  0012               	return	
  9194  00837A                     l16577:
  9195                           
  9196                           ;radio_driver_SX1276.c: 1218: else
  9197                           ;radio_driver_SX1276.c: 1219: {
  9198                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9199  00837A  0E00               	movlw	0
  9200  00837C  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  9201                           
  9202                           ;radio_driver_SX1276.c: 1221: }
  9203                           ;radio_driver_SX1276.c: 1222: break;
  9204  008380  0012               	return	
  9205  008382                     l16579:
  9206                           
  9207                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9208  008382  0E00               	movlw	0
  9209  008384  EC9A  F04D         	call	_RADIO_UnhandledInterrupt
  9210                           
  9211                           ;radio_driver_SX1276.c: 1226: }
  9212                           
  9213                           ;radio_driver_SX1276.c: 1225: break;
  9214  008388  0012               	return	
  9215  00838A                     l16583:
  9216  00838A  0101               	movlb	1	; () banked
  9217  00838C  516D               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9218                           
  9219                           ; Switch size 1, requested type "space"
  9220                           ; Number of cases is 1, Range of values is 0 to 0
  9221                           ; switch strategies available:
  9222                           ; Name         Instructions Cycles
  9223                           ; simple_byte            4     3 (average)
  9224                           ;	Chosen strategy is simple_byte
  9225  00838E  0A00               	xorlw	0	; case 0
  9226  008390  B4D8               	btfsc	status,2,c
  9227  008392  D7E0               	goto	l16569
  9228  008394  D7F6               	goto	l16579
  9229  008396                     __end_of_RADIO_DIO0:
  9230                           	opt stack 0
  9231                           tosu	equ	0xFFF
  9232                           tosh	equ	0xFFE
  9233                           tosl	equ	0xFFD
  9234                           pclath	equ	0xFFA
  9235                           tblptru	equ	0xFF8
  9236                           tblptrh	equ	0xFF7
  9237                           tblptrl	equ	0xFF6
  9238                           tablat	equ	0xFF5
  9239                           prodh	equ	0xFF4
  9240                           prodl	equ	0xFF3
  9241                           intcon	equ	0xFF2
  9242                           intcon2	equ	0xFF1
  9243                           intcon3	equ	0xFF0
  9244                           postinc0	equ	0xFEE
  9245                           wreg	equ	0xFE8
  9246                           postinc1	equ	0xFE6
  9247                           postdec1	equ	0xFE5
  9248                           plusw1	equ	0xFE3
  9249                           fsr1h	equ	0xFE2
  9250                           fsr1l	equ	0xFE1
  9251                           indf2	equ	0xFDF
  9252                           postinc2	equ	0xFDE
  9253                           postdec2	equ	0xFDD
  9254                           fsr2h	equ	0xFDA
  9255                           fsr2l	equ	0xFD9
  9256                           status	equ	0xFD8
  9257                           
  9258 ;; *************** function _RADIO_UnhandledInterrupt *****************
  9259 ;; Defined at:
  9260 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9261 ;; Parameters:    Size  Location     Type
  9262 ;;  modulation      1    wreg     enum E7751
  9263 ;; Auto vars:     Size  Location     Type
  9264 ;;  modulation      1    8[BANK0 ] enum E7751
  9265 ;; Return value:  Size  Location     Type
  9266 ;;                  1    wreg      void 
  9267 ;; Registers used:
  9268 ;;		wreg, status,2, status,0, cstack
  9269 ;; Tracked objects:
  9270 ;;		On entry : 0/0
  9271 ;;		On exit  : 0/0
  9272 ;;		Unchanged: 0/0
  9273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9274 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9275 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9277 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9278 ;;Total ram usage:        1 bytes
  9279 ;; Hardware stack levels used:    1
  9280 ;; Hardware stack levels required when called:   10
  9281 ;; This function calls:
  9282 ;;		_RADIO_RegisterWrite
  9283 ;; This function is called by:
  9284 ;;		_RADIO_DIO0
  9285 ;;		_RADIO_DIO1
  9286 ;;		_RADIO_DIO2
  9287 ;;		_RADIO_DIO3
  9288 ;;		_RADIO_DIO4
  9289 ;;		_RADIO_DIO5
  9290 ;; This function uses a non-reentrant model
  9291 ;;
  9292                           
  9293                           	psect	text54
  9294  009B34                     __ptext54:
  9295                           	opt stack 0
  9296  009B34                     _RADIO_UnhandledInterrupt:
  9297                           	opt stack 18
  9298                           
  9299                           ;incstack = 0
  9300                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  9301  009B34  0100               	movlb	0	; () banked
  9302  009B36  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  9303                           
  9304                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  9305  009B38  0100               	movlb	0	; () banked
  9306  009B3A  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  9307  009B3C  A4D8               	btfss	status,2,c
  9308  009B3E  D007               	goto	l16257
  9309                           
  9310                           ; BSR set to: 0
  9311                           ;radio_driver_SX1276.c: 1145: {
  9312                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  9313  009B40  0EFF               	movlw	255
  9314  009B42  0100               	movlb	0	; () banked
  9315  009B44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9316  009B46  0E12               	movlw	18
  9317  009B48  ECFE  F04F         	call	_RADIO_RegisterWrite
  9318                           
  9319                           ;radio_driver_SX1276.c: 1147: }
  9320  009B4C  0012               	return	
  9321  009B4E                     l16257:
  9322                           
  9323                           ;radio_driver_SX1276.c: 1148: else
  9324                           ;radio_driver_SX1276.c: 1149: {
  9325                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  9326  009B4E  0EFF               	movlw	255
  9327  009B50  0100               	movlb	0	; () banked
  9328  009B52  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9329  009B54  0E3E               	movlw	62
  9330  009B56  ECFE  F04F         	call	_RADIO_RegisterWrite
  9331                           
  9332                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  9333  009B5A  0EFF               	movlw	255
  9334  009B5C  0100               	movlb	0	; () banked
  9335  009B5E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9336  009B60  0E3F               	movlw	63
  9337  009B62  ECFE  F04F         	call	_RADIO_RegisterWrite
  9338  009B66  0012               	return	
  9339  009B68                     __end_of_RADIO_UnhandledInterrupt:
  9340                           	opt stack 0
  9341                           tosu	equ	0xFFF
  9342                           tosh	equ	0xFFE
  9343                           tosl	equ	0xFFD
  9344                           pclath	equ	0xFFA
  9345                           tblptru	equ	0xFF8
  9346                           tblptrh	equ	0xFF7
  9347                           tblptrl	equ	0xFF6
  9348                           tablat	equ	0xFF5
  9349                           prodh	equ	0xFF4
  9350                           prodl	equ	0xFF3
  9351                           intcon	equ	0xFF2
  9352                           intcon2	equ	0xFF1
  9353                           intcon3	equ	0xFF0
  9354                           postinc0	equ	0xFEE
  9355                           wreg	equ	0xFE8
  9356                           postinc1	equ	0xFE6
  9357                           postdec1	equ	0xFE5
  9358                           plusw1	equ	0xFE3
  9359                           fsr1h	equ	0xFE2
  9360                           fsr1l	equ	0xFE1
  9361                           indf2	equ	0xFDF
  9362                           postinc2	equ	0xFDE
  9363                           postdec2	equ	0xFDD
  9364                           fsr2h	equ	0xFDA
  9365                           fsr2l	equ	0xFD9
  9366                           status	equ	0xFD8
  9367                           
  9368 ;; *************** function _RADIO_TxDone *****************
  9369 ;; Defined at:
  9370 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9371 ;; Parameters:    Size  Location     Type
  9372 ;;		None
  9373 ;; Auto vars:     Size  Location     Type
  9374 ;;  timeOnAir       4  139[BANK0 ] unsigned long 
  9375 ;; Return value:  Size  Location     Type
  9376 ;;                  1    wreg      void 
  9377 ;; Registers used:
  9378 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9379 ;; Tracked objects:
  9380 ;;		On entry : 0/0
  9381 ;;		On exit  : 0/0
  9382 ;;		Unchanged: 0/0
  9383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9385 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9386 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9387 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9388 ;;Total ram usage:       12 bytes
  9389 ;; Hardware stack levels used:    1
  9390 ;; Hardware stack levels required when called:   15
  9391 ;; This function calls:
  9392 ;;		_LORAWAN_TxDone
  9393 ;;		_RADIO_RegisterWrite
  9394 ;;		_RADIO_WriteMode
  9395 ;;		_SwTimerReadValue
  9396 ;;		_SwTimerStop
  9397 ;;		___lmul
  9398 ;; This function is called by:
  9399 ;;		_RADIO_DIO0
  9400 ;; This function uses a non-reentrant model
  9401 ;;
  9402                           
  9403                           	psect	text55
  9404  006856                     __ptext55:
  9405                           	opt stack 0
  9406  006856                     _RADIO_TxDone:
  9407                           	opt stack 13
  9408                           
  9409                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  9410                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9411                           
  9412                           ;incstack = 0
  9413  006856  0101               	movlb	1	; () banked
  9414  006858  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9415  00685A  EC39  F04F         	call	_SwTimerStop
  9416                           
  9417                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  9418  00685E  0E08               	movlw	8
  9419  006860  0100               	movlb	0	; () banked
  9420  006862  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9421  006864  0E12               	movlw	18
  9422  006866  ECFE  F04F         	call	_RADIO_RegisterWrite
  9423                           
  9424                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9425  00686A  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9426  00686E  0E00               	movlw	0
  9427  006870  0100               	movlb	0	; () banked
  9428  006872  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9429  006874  0E00               	movlw	0
  9430  006876  EC70  F035         	call	_RADIO_WriteMode
  9431                           
  9432                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9433  00687A  0101               	movlb	1	; () banked
  9434  00687C  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9435                           
  9436                           ; BSR set to: 1
  9437                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9438  00687E  0101               	movlb	1	; () banked
  9439  006880  B997               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9440  006882  0012               	return	
  9441                           
  9442                           ; BSR set to: 1
  9443                           ;radio_driver_SX1276.c: 1087: {
  9444                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9445  006884  0101               	movlb	1	; () banked
  9446  006886  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9447  006888  EC59  F04C         	call	_SwTimerReadValue
  9448  00688C  0100               	movlb	0	; () banked
  9449  00688E  5198               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9450  006890  E10B               	bnz	u19370
  9451  006892  0E1F               	movlw	31
  9452  006894  0100               	movlb	0	; () banked
  9453  006896  5D95               	subwf	?_SwTimerReadValue& (0+255),w,b
  9454  006898  0EAC               	movlw	172
  9455  00689A  0100               	movlb	0	; () banked
  9456  00689C  5996               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9457  00689E  0EDF               	movlw	223
  9458  0068A0  0100               	movlb	0	; () banked
  9459  0068A2  5997               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9460  0068A4  A0D8               	btfss	status,0,c
  9461  0068A6  D023               	goto	l16223
  9462  0068A8                     u19370:
  9463                           
  9464                           ; BSR set to: 0
  9465  0068A8  0101               	movlb	1	; () banked
  9466  0068AA  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9467  0068AC  EC59  F04C         	call	_SwTimerReadValue
  9468  0068B0  0E0D               	movlw	13
  9469  0068B2  D007               	goto	u19380
  9470  0068B4                     u19385:
  9471  0068B4  0100               	movlb	0	; () banked
  9472  0068B6  90D8               	bcf	status,0,c
  9473  0068B8  3398               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9474  0068BA  3397               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9475  0068BC  0100               	movlb	0	; () banked
  9476  0068BE  3396               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9477  0068C0  3395               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9478  0068C2                     u19380:
  9479  0068C2  2EE8               	decfsz	wreg,f,c
  9480  0068C4  D7F7               	goto	u19385
  9481  0068C6  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
  9482  0068CA  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9483  0068CE  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9484  0068D2  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9485  0068D6  0E7D               	movlw	125
  9486  0068D8  0100               	movlb	0	; () banked
  9487  0068DA  6FA2               	movwf	___lmul@multiplicand& (0+255),b
  9488  0068DC  0E00               	movlw	0
  9489  0068DE  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9490  0068E0  0E00               	movlw	0
  9491  0068E2  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9492  0068E4  0E00               	movlw	0
  9493  0068E6  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9494  0068E8  EC82  F046         	call	___lmul	;wreg free
  9495  0068EC  D022               	goto	L4
  9496  0068EE                     l16223:
  9497  0068EE  0101               	movlb	1	; () banked
  9498  0068F0  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9499  0068F2  EC59  F04C         	call	_SwTimerReadValue
  9500  0068F6  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
  9501  0068FA  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9502  0068FE  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9503  006902  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9504  006906  0E7D               	movlw	125
  9505  006908  0100               	movlb	0	; () banked
  9506  00690A  6FA2               	movwf	___lmul@multiplicand& (0+255),b
  9507  00690C  0E00               	movlw	0
  9508  00690E  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9509  006910  0E00               	movlw	0
  9510  006912  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9511  006914  0E00               	movlw	0
  9512  006916  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9513  006918  EC82  F046         	call	___lmul	;wreg free
  9514  00691C  0E0D               	movlw	13
  9515  00691E  D007               	goto	u19390
  9516  006920                     u19395:
  9517  006920  0100               	movlb	0	; () banked
  9518  006922  90D8               	bcf	status,0,c
  9519  006924  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
  9520  006926  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
  9521  006928  0100               	movlb	0	; () banked
  9522  00692A  339F               	rrcf	(?___lmul+1)& (0+255),f,b
  9523  00692C  339E               	rrcf	?___lmul& (0+255),f,b
  9524  00692E                     u19390:
  9525  00692E  2EE8               	decfsz	wreg,f,c
  9526  006930  D7F7               	goto	u19395
  9527  006932                     L4:
  9528  006932  C09E  F0EF         	movff	?___lmul,_RADIO_TxDone$1207
  9529  006936  C09F  F0F0         	movff	?___lmul+1,_RADIO_TxDone$1207+1
  9530  00693A  C0A0  F0F1         	movff	?___lmul+2,_RADIO_TxDone$1207+2
  9531  00693E  C0A1  F0F2         	movff	?___lmul+3,_RADIO_TxDone$1207+3
  9532                           
  9533                           ; BSR set to: 0
  9534  006942  C0EF  F0E7         	movff	_RADIO_TxDone$1207,??_RADIO_TxDone
  9535  006946  C0F0  F0E8         	movff	_RADIO_TxDone$1207+1,??_RADIO_TxDone+1
  9536  00694A  C0F1  F0E9         	movff	_RADIO_TxDone$1207+2,??_RADIO_TxDone+2
  9537  00694E  C0F2  F0EA         	movff	_RADIO_TxDone$1207+3,??_RADIO_TxDone+3
  9538  006952  0100               	movlb	0	; () banked
  9539  006954  1FE7               	comf	??_RADIO_TxDone& (0+255),f,b
  9540  006956  1FE8               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  9541  006958  1FE9               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  9542  00695A  1FEA               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  9543  00695C  2BE7               	incf	??_RADIO_TxDone& (0+255),f,b
  9544  00695E  0E00               	movlw	0
  9545  006960  23E8               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  9546  006962  23E9               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9547  006964  23EA               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9548  006966  0E20               	movlw	32
  9549  006968  0100               	movlb	0	; () banked
  9550  00696A  25E7               	addwf	??_RADIO_TxDone& (0+255),w,b
  9551  00696C  0100               	movlb	0	; () banked
  9552  00696E  6FEB               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9553  006970  0E4E               	movlw	78
  9554  006972  0100               	movlb	0	; () banked
  9555  006974  21E8               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  9556  006976  0100               	movlb	0	; () banked
  9557  006978  6FEC               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9558  00697A  0E00               	movlw	0
  9559  00697C  0100               	movlb	0	; () banked
  9560  00697E  21E9               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  9561  006980  0100               	movlb	0	; () banked
  9562  006982  6FED               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9563  006984  0E00               	movlw	0
  9564  006986  0100               	movlb	0	; () banked
  9565  006988  21EA               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  9566  00698A  0100               	movlb	0	; () banked
  9567  00698C  6FEE               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9568                           
  9569                           ; BSR set to: 0
  9570                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9571  00698E  C0EB  F0BF         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9572  006992  C0EC  F0C0         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9573  006996  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
  9574  00699A  0012               	return	
  9575  00699C                     __end_of_RADIO_TxDone:
  9576                           	opt stack 0
  9577                           tosu	equ	0xFFF
  9578                           tosh	equ	0xFFE
  9579                           tosl	equ	0xFFD
  9580                           pclath	equ	0xFFA
  9581                           tblptru	equ	0xFF8
  9582                           tblptrh	equ	0xFF7
  9583                           tblptrl	equ	0xFF6
  9584                           tablat	equ	0xFF5
  9585                           prodh	equ	0xFF4
  9586                           prodl	equ	0xFF3
  9587                           intcon	equ	0xFF2
  9588                           intcon2	equ	0xFF1
  9589                           intcon3	equ	0xFF0
  9590                           postinc0	equ	0xFEE
  9591                           wreg	equ	0xFE8
  9592                           postinc1	equ	0xFE6
  9593                           postdec1	equ	0xFE5
  9594                           plusw1	equ	0xFE3
  9595                           fsr1h	equ	0xFE2
  9596                           fsr1l	equ	0xFE1
  9597                           indf2	equ	0xFDF
  9598                           postinc2	equ	0xFDE
  9599                           postdec2	equ	0xFDD
  9600                           fsr2h	equ	0xFDA
  9601                           fsr2l	equ	0xFD9
  9602                           status	equ	0xFD8
  9603                           
  9604 ;; *************** function _RADIO_RxDone *****************
  9605 ;; Defined at:
  9606 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9607 ;; Parameters:    Size  Location     Type
  9608 ;;		None
  9609 ;; Auto vars:     Size  Location     Type
  9610 ;;  i               1  146[BANK0 ] unsigned char 
  9611 ;;  irqFlags        1  145[BANK0 ] unsigned char 
  9612 ;; Return value:  Size  Location     Type
  9613 ;;                  1    wreg      void 
  9614 ;; Registers used:
  9615 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9616 ;; Tracked objects:
  9617 ;;		On entry : 0/0
  9618 ;;		On exit  : 0/0
  9619 ;;		Unchanged: 0/0
  9620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9622 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9624 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9625 ;;Total ram usage:        2 bytes
  9626 ;; Hardware stack levels used:    1
  9627 ;; Hardware stack levels required when called:   16
  9628 ;; This function calls:
  9629 ;;		_HALSPICSAssert
  9630 ;;		_HALSPICSDeassert
  9631 ;;		_HALSPISend
  9632 ;;		_LORAWAN_RxDone
  9633 ;;		_RADIO_RegisterRead
  9634 ;;		_RADIO_RegisterWrite
  9635 ;;		_RADIO_WriteMode
  9636 ;;		_SwTimerStop
  9637 ;;		___abdiv
  9638 ;; This function is called by:
  9639 ;;		_RADIO_DIO0
  9640 ;; This function uses a non-reentrant model
  9641 ;;
  9642                           
  9643                           	psect	text56
  9644  007794                     __ptext56:
  9645                           	opt stack 0
  9646  007794                     _RADIO_RxDone:
  9647                           	opt stack 12
  9648                           
  9649                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9650                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9651                           
  9652                           ;incstack = 0
  9653  007794  0E12               	movlw	18
  9654  007796  EC25  F04F         	call	_RADIO_RegisterRead
  9655  00779A  0100               	movlb	0	; () banked
  9656  00779C  6FF1               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9657                           
  9658                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9659  00779E  0E70               	movlw	112
  9660  0077A0  0100               	movlb	0	; () banked
  9661  0077A2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9662  0077A4  0E12               	movlw	18
  9663  0077A6  ECFE  F04F         	call	_RADIO_RegisterWrite
  9664                           
  9665                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9666  0077AA  0100               	movlb	0	; () banked
  9667  0077AC  51F1               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9668  0077AE  0B50               	andlw	80
  9669  0077B0  0A50               	xorlw	80
  9670  0077B2  A4D8               	btfss	status,2,c
  9671  0077B4  0012               	return	
  9672                           
  9673                           ; BSR set to: 0
  9674                           ;radio_driver_SX1276.c: 969: {
  9675                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9676  0077B6  0101               	movlb	1	; () banked
  9677  0077B8  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9678  0077BA  EC39  F04F         	call	_SwTimerStop
  9679                           
  9680                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9681  0077BE  0E1C               	movlw	28
  9682  0077C0  EC25  F04F         	call	_RADIO_RegisterRead
  9683  0077C4  0100               	movlb	0	; () banked
  9684  0077C6  6FF2               	movwf	RADIO_RxDone@i& (0+255),b
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9688  0077C8  0101               	movlb	1	; () banked
  9689  0077CA  5190               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9690  0077CC  B4D8               	btfsc	status,2,c
  9691  0077CE  D006               	goto	l16125
  9692                           
  9693                           ; BSR set to: 1
  9694  0077D0  0100               	movlb	0	; () banked
  9695  0077D2  BBF1               	btfsc	RADIO_RxDone@irqFlags& (0+255),5,b
  9696  0077D4  D041               	goto	l16147
  9697                           
  9698                           ; BSR set to: 0
  9699  0077D6  0100               	movlb	0	; () banked
  9700  0077D8  ADF2               	btfss	RADIO_RxDone@i& (0+255),6,b
  9701  0077DA  D03E               	goto	l16147
  9702  0077DC                     l16125:
  9703                           
  9704                           ;radio_driver_SX1276.c: 976: {
  9705                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9706  0077DC  0E13               	movlw	19
  9707  0077DE  EC25  F04F         	call	_RADIO_RegisterRead
  9708  0077E2  0101               	movlb	1	; () banked
  9709  0077E4  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
  9710                           
  9711                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9712  0077E6  0E00               	movlw	0
  9713  0077E8  0100               	movlb	0	; () banked
  9714  0077EA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9715  0077EC  0E0D               	movlw	13
  9716  0077EE  ECFE  F04F         	call	_RADIO_RegisterWrite
  9717                           
  9718                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9719  0077F2  ECF1  F051         	call	_HALSPICSAssert	;wreg free
  9720                           
  9721                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9722  0077F6  0E00               	movlw	0
  9723  0077F8  EC60  F051         	call	_HALSPISend
  9724                           
  9725                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9726  0077FC  0E00               	movlw	0
  9727  0077FE  0100               	movlb	0	; () banked
  9728  007800  6FF2               	movwf	RADIO_RxDone@i& (0+255),b
  9729  007802  D011               	goto	l16137
  9730  007804                     l16133:
  9731                           
  9732                           ; BSR set to: 0
  9733                           ;radio_driver_SX1276.c: 990: {
  9734                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9735  007804  0100               	movlb	0	; () banked
  9736  007806  51F2               	movf	RADIO_RxDone@i& (0+255),w,b
  9737  007808  0D01               	mullw	1
  9738  00780A  50F3               	movf	prodl,w,c
  9739  00780C  0101               	movlb	1	; () banked
  9740  00780E  2599               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9741  007810  6ED9               	movwf	fsr2l,c
  9742  007812  50F4               	movf	prodh,w,c
  9743  007814  0101               	movlb	1	; () banked
  9744  007816  219A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9745  007818  6EDA               	movwf	fsr2h,c
  9746  00781A  0EFF               	movlw	255
  9747  00781C  EC60  F051         	call	_HALSPISend
  9748  007820  6EDF               	movwf	indf2,c
  9749  007822  0100               	movlb	0	; () banked
  9750  007824  2BF2               	incf	RADIO_RxDone@i& (0+255),f,b
  9751  007826                     l16137:
  9752                           
  9753                           ; BSR set to: 0
  9754  007826  0101               	movlb	1	; () banked
  9755  007828  5198               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9756  00782A  0100               	movlb	0	; () banked
  9757  00782C  5DF2               	subwf	RADIO_RxDone@i& (0+255),w,b
  9758  00782E  A0D8               	btfss	status,0,c
  9759  007830  D7E9               	goto	l16133
  9760                           
  9761                           ; BSR set to: 0
  9762                           ;radio_driver_SX1276.c: 992: }
  9763                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9764                           
  9765                           ; BSR set to: 0
  9766  007832  ECEF  F051         	call	_HALSPICSDeassert	;wreg free
  9767                           
  9768                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9769  007836  0101               	movlb	1	; () banked
  9770  007838  8597               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9771                           
  9772                           ; BSR set to: 1
  9773                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9774  00783A  0E19               	movlw	25
  9775  00783C  EC25  F04F         	call	_RADIO_RegisterRead
  9776  007840  0101               	movlb	1	; () banked
  9777  007842  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
  9778                           
  9779                           ; BSR set to: 1
  9780                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9781  007844  0E04               	movlw	4
  9782  007846  0100               	movlb	0	; () banked
  9783  007848  6F64               	movwf	___abdiv@divisor& (0+255),b
  9784  00784A  0101               	movlb	1	; () banked
  9785  00784C  51A6               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9786  00784E  ECBB  F042         	call	___abdiv
  9787  007852  0101               	movlb	1	; () banked
  9788  007854  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
  9789                           
  9790                           ;radio_driver_SX1276.c: 998: }
  9791  007856  D002               	goto	l16149
  9792  007858                     l16147:
  9793                           
  9794                           ;radio_driver_SX1276.c: 999: else
  9795                           ;radio_driver_SX1276.c: 1000: {
  9796                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9797  007858  0101               	movlb	1	; () banked
  9798  00785A  8797               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9799  00785C                     l16149:
  9800                           
  9801                           ; BSR set to: 1
  9802                           ;radio_driver_SX1276.c: 1003: }
  9803                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9804  00785C  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9805  007860  0E00               	movlw	0
  9806  007862  0100               	movlb	0	; () banked
  9807  007864  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9808  007866  0E00               	movlw	0
  9809  007868  EC70  F035         	call	_RADIO_WriteMode
  9810                           
  9811                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9812  00786C  0101               	movlb	1	; () banked
  9813  00786E  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9814                           
  9815                           ; BSR set to: 1
  9816                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9817  007870  C199  F0EE         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9818  007874  C19A  F0EF         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9819  007878  C198  F0F0         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9820  00787C  EC44  F000         	call	_LORAWAN_RxDone	;wreg free
  9821  007880  0012               	return	
  9822  007882                     __end_of_RADIO_RxDone:
  9823                           	opt stack 0
  9824                           tosu	equ	0xFFF
  9825                           tosh	equ	0xFFE
  9826                           tosl	equ	0xFFD
  9827                           pclath	equ	0xFFA
  9828                           tblptru	equ	0xFF8
  9829                           tblptrh	equ	0xFF7
  9830                           tblptrl	equ	0xFF6
  9831                           tablat	equ	0xFF5
  9832                           prodh	equ	0xFF4
  9833                           prodl	equ	0xFF3
  9834                           intcon	equ	0xFF2
  9835                           intcon2	equ	0xFF1
  9836                           intcon3	equ	0xFF0
  9837                           postinc0	equ	0xFEE
  9838                           wreg	equ	0xFE8
  9839                           postinc1	equ	0xFE6
  9840                           postdec1	equ	0xFE5
  9841                           plusw1	equ	0xFE3
  9842                           fsr1h	equ	0xFE2
  9843                           fsr1l	equ	0xFE1
  9844                           indf2	equ	0xFDF
  9845                           postinc2	equ	0xFDE
  9846                           postdec2	equ	0xFDD
  9847                           fsr2h	equ	0xFDA
  9848                           fsr2l	equ	0xFD9
  9849                           status	equ	0xFD8
  9850                           
  9851 ;; *************** function ___abdiv *****************
  9852 ;; Defined at:
  9853 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9854 ;; Parameters:    Size  Location     Type
  9855 ;;  dividend        1    wreg     char 
  9856 ;;  divisor         1    4[BANK0 ] char 
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;  dividend        1   10[BANK0 ] char 
  9859 ;;  quotient        1    9[BANK0 ] char 
  9860 ;;  sign            1    8[BANK0 ] unsigned char 
  9861 ;;  counter         1    7[BANK0 ] unsigned char 
  9862 ;; Return value:  Size  Location     Type
  9863 ;;                  1    wreg      char 
  9864 ;; Registers used:
  9865 ;;		wreg, status,2, status,0
  9866 ;; Tracked objects:
  9867 ;;		On entry : 0/0
  9868 ;;		On exit  : 0/0
  9869 ;;		Unchanged: 0/0
  9870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9871 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9872 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9873 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9874 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9875 ;;Total ram usage:        7 bytes
  9876 ;; Hardware stack levels used:    1
  9877 ;; Hardware stack levels required when called:    7
  9878 ;; This function calls:
  9879 ;;		Nothing
  9880 ;; This function is called by:
  9881 ;;		_RADIO_RxDone
  9882 ;; This function uses a non-reentrant model
  9883 ;;
  9884                           
  9885                           	psect	text57
  9886  008576                     __ptext57:
  9887                           	opt stack 0
  9888  008576                     ___abdiv:
  9889                           	opt stack 20
  9890                           
  9891                           ;incstack = 0
  9892                           ;___abdiv@dividend stored from wreg
  9893  008576  0100               	movlb	0	; () banked
  9894  008578  6F6A               	movwf	___abdiv@dividend& (0+255),b
  9895  00857A  0E00               	movlw	0
  9896  00857C  0100               	movlb	0	; () banked
  9897  00857E  6F68               	movwf	___abdiv@sign& (0+255),b
  9898                           
  9899                           ; BSR set to: 0
  9900  008580  0100               	movlb	0	; () banked
  9901  008582  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9902  008584  D005               	goto	l16037
  9903                           
  9904                           ; BSR set to: 0
  9905  008586  0100               	movlb	0	; () banked
  9906  008588  6D64               	negf	___abdiv@divisor& (0+255),b
  9907                           
  9908                           ; BSR set to: 0
  9909  00858A  0E01               	movlw	1
  9910  00858C  0100               	movlb	0	; () banked
  9911  00858E  6F68               	movwf	___abdiv@sign& (0+255),b
  9912  008590                     l16037:
  9913                           
  9914                           ; BSR set to: 0
  9915  008590  0100               	movlb	0	; () banked
  9916  008592  AF6A               	btfss	___abdiv@dividend& (0+255),7,b
  9917  008594  D005               	goto	l16043
  9918                           
  9919                           ; BSR set to: 0
  9920  008596  0100               	movlb	0	; () banked
  9921  008598  6D6A               	negf	___abdiv@dividend& (0+255),b
  9922                           
  9923                           ; BSR set to: 0
  9924  00859A  0E01               	movlw	1
  9925  00859C  0100               	movlb	0	; () banked
  9926  00859E  1B68               	xorwf	___abdiv@sign& (0+255),f,b
  9927  0085A0                     l16043:
  9928                           
  9929                           ; BSR set to: 0
  9930  0085A0  0E00               	movlw	0
  9931  0085A2  0100               	movlb	0	; () banked
  9932  0085A4  6F69               	movwf	___abdiv@quotient& (0+255),b
  9933                           
  9934                           ; BSR set to: 0
  9935  0085A6  0100               	movlb	0	; () banked
  9936  0085A8  5164               	movf	___abdiv@divisor& (0+255),w,b
  9937  0085AA  0100               	movlb	0	; () banked
  9938  0085AC  B4D8               	btfsc	status,2,c
  9939  0085AE  D027               	goto	l16065
  9940                           
  9941                           ; BSR set to: 0
  9942  0085B0  0E01               	movlw	1
  9943  0085B2  0100               	movlb	0	; () banked
  9944  0085B4  6F67               	movwf	___abdiv@counter& (0+255),b
  9945  0085B6  D005               	goto	l16053
  9946  0085B8                     l16049:
  9947                           
  9948                           ; BSR set to: 0
  9949  0085B8  0100               	movlb	0	; () banked
  9950  0085BA  90D8               	bcf	status,0,c
  9951  0085BC  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9952                           
  9953                           ; BSR set to: 0
  9954  0085BE  0100               	movlb	0	; () banked
  9955  0085C0  2B67               	incf	___abdiv@counter& (0+255),f,b
  9956  0085C2                     l16053:
  9957                           
  9958                           ; BSR set to: 0
  9959  0085C2  C064  F065         	movff	___abdiv@divisor,??___abdiv
  9960  0085C6  0100               	movlb	0	; () banked
  9961  0085C8  6B66               	clrf	(??___abdiv+1)& (0+255),b
  9962  0085CA  BF65               	btfsc	??___abdiv& (0+255),7,b
  9963  0085CC  0766               	decf	(??___abdiv+1)& (0+255),f,b
  9964  0085CE  0100               	movlb	0	; () banked
  9965  0085D0  AF65               	btfss	??___abdiv& (0+255),7,b
  9966  0085D2  D7F2               	goto	l16049
  9967  0085D4                     l16055:
  9968                           
  9969                           ; BSR set to: 0
  9970  0085D4  0100               	movlb	0	; () banked
  9971  0085D6  90D8               	bcf	status,0,c
  9972  0085D8  3769               	rlcf	___abdiv@quotient& (0+255),f,b
  9973  0085DA  0100               	movlb	0	; () banked
  9974  0085DC  5164               	movf	___abdiv@divisor& (0+255),w,b
  9975  0085DE  0100               	movlb	0	; () banked
  9976  0085E0  5D6A               	subwf	___abdiv@dividend& (0+255),w,b
  9977  0085E2  A0D8               	btfss	status,0,c
  9978  0085E4  D006               	goto	l16061
  9979                           
  9980                           ; BSR set to: 0
  9981  0085E6  0100               	movlb	0	; () banked
  9982  0085E8  5164               	movf	___abdiv@divisor& (0+255),w,b
  9983  0085EA  0100               	movlb	0	; () banked
  9984  0085EC  5F6A               	subwf	___abdiv@dividend& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 0
  9987  0085EE  0100               	movlb	0	; () banked
  9988  0085F0  8169               	bsf	___abdiv@quotient& (0+255),0,b
  9989  0085F2                     l16061:
  9990                           
  9991                           ; BSR set to: 0
  9992  0085F2  0100               	movlb	0	; () banked
  9993  0085F4  90D8               	bcf	status,0,c
  9994  0085F6  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9995                           
  9996                           ; BSR set to: 0
  9997  0085F8  0100               	movlb	0	; () banked
  9998  0085FA  2F67               	decfsz	___abdiv@counter& (0+255),f,b
  9999  0085FC  D7EB               	goto	l16055
 10000  0085FE                     l16065:
 10001                           
 10002                           ; BSR set to: 0
 10003  0085FE  0100               	movlb	0	; () banked
 10004  008600  5168               	movf	___abdiv@sign& (0+255),w,b
 10005  008602  0100               	movlb	0	; () banked
 10006  008604  B4D8               	btfsc	status,2,c
 10007  008606  D002               	goto	l16069
 10008                           
 10009                           ; BSR set to: 0
 10010  008608  0100               	movlb	0	; () banked
 10011  00860A  6D69               	negf	___abdiv@quotient& (0+255),b
 10012  00860C                     l16069:
 10013                           
 10014                           ; BSR set to: 0
 10015  00860C  0100               	movlb	0	; () banked
 10016  00860E  5169               	movf	___abdiv@quotient& (0+255),w,b
 10017  008610  0012               	return	
 10018  008612                     __end_of___abdiv:
 10019                           	opt stack 0
 10020                           tosu	equ	0xFFF
 10021                           tosh	equ	0xFFE
 10022                           tosl	equ	0xFFD
 10023                           pclath	equ	0xFFA
 10024                           tblptru	equ	0xFF8
 10025                           tblptrh	equ	0xFF7
 10026                           tblptrl	equ	0xFF6
 10027                           tablat	equ	0xFF5
 10028                           prodh	equ	0xFF4
 10029                           prodl	equ	0xFF3
 10030                           intcon	equ	0xFF2
 10031                           intcon2	equ	0xFF1
 10032                           intcon3	equ	0xFF0
 10033                           postinc0	equ	0xFEE
 10034                           wreg	equ	0xFE8
 10035                           postinc1	equ	0xFE6
 10036                           postdec1	equ	0xFE5
 10037                           plusw1	equ	0xFE3
 10038                           fsr1h	equ	0xFE2
 10039                           fsr1l	equ	0xFE1
 10040                           indf2	equ	0xFDF
 10041                           postinc2	equ	0xFDE
 10042                           postdec2	equ	0xFDD
 10043                           fsr2h	equ	0xFDA
 10044                           fsr2l	equ	0xFD9
 10045                           status	equ	0xFD8
 10046                           
 10047 ;; *************** function _RADIO_FSKPayloadReady *****************
 10048 ;; Defined at:
 10049 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10050 ;; Parameters:    Size  Location     Type
 10051 ;;		None
 10052 ;; Auto vars:     Size  Location     Type
 10053 ;;  i               1  146[BANK0 ] unsigned char 
 10054 ;;  irqFlags        1  145[BANK0 ] unsigned char 
 10055 ;; Return value:  Size  Location     Type
 10056 ;;                  1    wreg      void 
 10057 ;; Registers used:
 10058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10059 ;; Tracked objects:
 10060 ;;		On entry : 0/0
 10061 ;;		On exit  : 0/0
 10062 ;;		Unchanged: 0/0
 10063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10065 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10067 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10068 ;;Total ram usage:        2 bytes
 10069 ;; Hardware stack levels used:    1
 10070 ;; Hardware stack levels required when called:   16
 10071 ;; This function calls:
 10072 ;;		_HALSPICSAssert
 10073 ;;		_HALSPICSDeassert
 10074 ;;		_HALSPISend
 10075 ;;		_LORAWAN_RxDone
 10076 ;;		_LORAWAN_RxTimeout
 10077 ;;		_RADIO_RegisterRead
 10078 ;;		_RADIO_WriteMode
 10079 ;;		_SwTimerStop
 10080 ;; This function is called by:
 10081 ;;		_RADIO_DIO0
 10082 ;; This function uses a non-reentrant model
 10083 ;;
 10084                           
 10085                           	psect	text58
 10086  007BD8                     __ptext58:
 10087                           	opt stack 0
 10088  007BD8                     _RADIO_FSKPayloadReady:
 10089                           	opt stack 12
 10090                           
 10091                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 10092                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 10093                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 10094                           
 10095                           ; BSR set to: 0
 10096                           ;incstack = 0
 10097  007BD8  0E3F               	movlw	63
 10098  007BDA  EC25  F04F         	call	_RADIO_RegisterRead
 10099  007BDE  0100               	movlb	0	; () banked
 10100  007BE0  6FF1               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 10101                           
 10102                           ; BSR set to: 0
 10103                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 10104  007BE2  0100               	movlb	0	; () banked
 10105  007BE4  A5F1               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 10106  007BE6  0012               	return	
 10107                           
 10108                           ; BSR set to: 0
 10109                           ;radio_driver_SX1276.c: 1017: {
 10110                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10111  007BE8  0101               	movlb	1	; () banked
 10112  007BEA  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10113  007BEC  EC39  F04F         	call	_SwTimerStop
 10114                           
 10115                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 10116  007BF0  0101               	movlb	1	; () banked
 10117  007BF2  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 10118  007BF4  EC39  F04F         	call	_SwTimerStop
 10119                           
 10120                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 10121  007BF8  ECF1  F051         	call	_HALSPICSAssert	;wreg free
 10122                           
 10123                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 10124  007BFC  0E00               	movlw	0
 10125  007BFE  EC60  F051         	call	_HALSPISend
 10126                           
 10127                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 10128  007C02  0EFF               	movlw	255
 10129  007C04  EC60  F051         	call	_HALSPISend
 10130  007C08  0101               	movlb	1	; () banked
 10131  007C0A  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
 10132                           
 10133                           ; BSR set to: 1
 10134                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 10135  007C0C  0E00               	movlw	0
 10136  007C0E  0100               	movlb	0	; () banked
 10137  007C10  6FF2               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 10138  007C12  D011               	goto	l16173
 10139  007C14                     l16169:
 10140                           
 10141                           ; BSR set to: 0
 10142                           ;radio_driver_SX1276.c: 1029: {
 10143                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 10144  007C14  0100               	movlb	0	; () banked
 10145  007C16  51F2               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10146  007C18  0D01               	mullw	1
 10147  007C1A  50F3               	movf	prodl,w,c
 10148  007C1C  0101               	movlb	1	; () banked
 10149  007C1E  2599               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 10150  007C20  6ED9               	movwf	fsr2l,c
 10151  007C22  50F4               	movf	prodh,w,c
 10152  007C24  0101               	movlb	1	; () banked
 10153  007C26  219A               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 10154  007C28  6EDA               	movwf	fsr2h,c
 10155  007C2A  0EFF               	movlw	255
 10156  007C2C  EC60  F051         	call	_HALSPISend
 10157  007C30  6EDF               	movwf	indf2,c
 10158  007C32  0100               	movlb	0	; () banked
 10159  007C34  2BF2               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 10160  007C36                     l16173:
 10161                           
 10162                           ; BSR set to: 0
 10163  007C36  0101               	movlb	1	; () banked
 10164  007C38  5198               	movf	(_RadioConfiguration+36)& (0+255),w,b
 10165  007C3A  0100               	movlb	0	; () banked
 10166  007C3C  5DF2               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10167  007C3E  A0D8               	btfss	status,0,c
 10168  007C40  D7E9               	goto	l16169
 10169                           
 10170                           ; BSR set to: 0
 10171                           ;radio_driver_SX1276.c: 1031: }
 10172                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 10173                           
 10174                           ; BSR set to: 0
 10175  007C42  ECEF  F051         	call	_HALSPICSDeassert	;wreg free
 10176                           
 10177                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10178  007C46  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10179  007C4A  0E00               	movlw	0
 10180  007C4C  0100               	movlb	0	; () banked
 10181  007C4E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10182  007C50  0E00               	movlw	0
 10183  007C52  EC70  F035         	call	_RADIO_WriteMode
 10184                           
 10185                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 10186  007C56  0101               	movlb	1	; () banked
 10187  007C58  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10188                           
 10189                           ; BSR set to: 1
 10190                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 10191  007C5A  0E80               	movlw	128
 10192  007C5C  0101               	movlb	1	; () banked
 10193  007C5E  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
 10194                           
 10195                           ; BSR set to: 1
 10196                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 10197  007C60  0101               	movlb	1	; () banked
 10198  007C62  0590               	decf	(_RadioConfiguration+28)& (0+255),w,b
 10199  007C64  A4D8               	btfss	status,2,c
 10200  007C66  D006               	goto	l16191
 10201                           
 10202                           ; BSR set to: 1
 10203                           ;radio_driver_SX1276.c: 1040: {
 10204                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 10205  007C68  0100               	movlb	0	; () banked
 10206  007C6A  B3F1               	btfsc	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 10207  007C6C  D003               	goto	l16191
 10208                           
 10209                           ;radio_driver_SX1276.c: 1045: else
 10210                           ;radio_driver_SX1276.c: 1046: {
 10211                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 10212                           
 10213                           ; BSR set to: 1
 10214                           
 10215                           ;radio_driver_SX1276.c: 1044: }
 10216                           
 10217                           ; BSR set to: 0
 10218                           ;radio_driver_SX1276.c: 1042: {
 10219                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 10220  007C6E  0101               	movlb	1	; () banked
 10221  007C70  9597               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 10222                           
 10223                           ; BSR set to: 1
 10224                           ;radio_driver_SX1276.c: 1048: }
 10225                           ;radio_driver_SX1276.c: 1049: }
 10226  007C72  D002               	goto	l16193
 10227  007C74                     l16191:
 10228                           
 10229                           ; BSR set to: 1
 10230                           ;radio_driver_SX1276.c: 1050: else
 10231                           ;radio_driver_SX1276.c: 1051: {
 10232                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 10233  007C74  0101               	movlb	1	; () banked
 10234  007C76  8597               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 10235  007C78                     l16193:
 10236                           
 10237                           ; BSR set to: 1
 10238                           ;radio_driver_SX1276.c: 1053: }
 10239                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 10240  007C78  0101               	movlb	1	; () banked
 10241  007C7A  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 10242  007C7C  D009               	goto	l16197
 10243                           
 10244                           ; BSR set to: 1
 10245                           ;radio_driver_SX1276.c: 1056: {
 10246                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 10247  007C7E  C199  F0EE         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 10248  007C82  C19A  F0EF         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 10249  007C86  C198  F0F0         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 10250  007C8A  EC44  F000         	call	_LORAWAN_RxDone	;wreg free
 10251                           
 10252                           ;radio_driver_SX1276.c: 1058: }
 10253  007C8E  0012               	return	
 10254  007C90                     l16197:
 10255                           
 10256                           ;radio_driver_SX1276.c: 1059: else
 10257                           ;radio_driver_SX1276.c: 1060: {
 10258                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 10259  007C90  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
 10260  007C94  0012               	return	
 10261  007C96                     __end_of_RADIO_FSKPayloadReady:
 10262                           	opt stack 0
 10263                           tosu	equ	0xFFF
 10264                           tosh	equ	0xFFE
 10265                           tosl	equ	0xFFD
 10266                           pclath	equ	0xFFA
 10267                           tblptru	equ	0xFF8
 10268                           tblptrh	equ	0xFF7
 10269                           tblptrl	equ	0xFF6
 10270                           tablat	equ	0xFF5
 10271                           prodh	equ	0xFF4
 10272                           prodl	equ	0xFF3
 10273                           intcon	equ	0xFF2
 10274                           intcon2	equ	0xFF1
 10275                           intcon3	equ	0xFF0
 10276                           postinc0	equ	0xFEE
 10277                           wreg	equ	0xFE8
 10278                           postinc1	equ	0xFE6
 10279                           postdec1	equ	0xFE5
 10280                           plusw1	equ	0xFE3
 10281                           fsr1h	equ	0xFE2
 10282                           fsr1l	equ	0xFE1
 10283                           indf2	equ	0xFDF
 10284                           postinc2	equ	0xFDE
 10285                           postdec2	equ	0xFDD
 10286                           fsr2h	equ	0xFDA
 10287                           fsr2l	equ	0xFD9
 10288                           status	equ	0xFD8
 10289                           
 10290 ;; *************** function _LORAWAN_RxTimeout *****************
 10291 ;; Defined at:
 10292 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10293 ;; Parameters:    Size  Location     Type
 10294 ;;		None
 10295 ;; Auto vars:     Size  Location     Type
 10296 ;;  minim           4  106[BANK0 ] unsigned long 
 10297 ;;  i               1  110[BANK0 ] unsigned char 
 10298 ;; Return value:  Size  Location     Type
 10299 ;;                  1    wreg      void 
 10300 ;; Registers used:
 10301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10302 ;; Tracked objects:
 10303 ;;		On entry : 0/0
 10304 ;;		On exit  : 0/0
 10305 ;;		Unchanged: 0/0
 10306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10308 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10309 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10310 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10311 ;;Total ram usage:        9 bytes
 10312 ;; Hardware stack levels used:    1
 10313 ;; Hardware stack levels required when called:   15
 10314 ;; This function calls:
 10315 ;;		_LORAWAN_ReceiveWindow2Callback
 10316 ;;		_RADIO_Transmit
 10317 ;;		_ResetParametersForConfirmedTransmission
 10318 ;;		_ResetParametersForUnconfirmedTransmission
 10319 ;;		_RxDataDone
 10320 ;;		_SelectChannelForTransmission
 10321 ;;		_SetJoinFailState
 10322 ;;		_SwTimerSetTimeout
 10323 ;;		_SwTimerStart
 10324 ;;		___lldiv
 10325 ;; This function is called by:
 10326 ;;		_RADIO_FSKPayloadReady
 10327 ;;		_RADIO_RxTimeout
 10328 ;;		_RADIO_RxFSKTimeout
 10329 ;;		_RADIO_WatchdogTimeout
 10330 ;; This function uses a non-reentrant model
 10331 ;;
 10332                           
 10333                           	psect	text59
 10334  003084                     __ptext59:
 10335                           	opt stack 0
 10336  003084                     _LORAWAN_RxTimeout:
 10337                           	opt stack 12
 10338                           
 10339                           ;lorawan_eu.c: 466: uint8_t i;
 10340                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 10341                           
 10342                           ;incstack = 0
 10343  003084  0100               	movlb	0	; () banked
 10344  003086  69CA               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 10345  003088  69CB               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 10346  00308A  69CC               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 10347  00308C  69CD               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 10348                           
 10349                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 10350  00308E  0102               	movlb	2	; () banked
 10351  003090  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10352  003092  D1C3               	goto	l15931
 10353                           
 10354                           ; BSR set to: 2
 10355                           ;lorawan_eu.c: 470: {
 10356                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 10357  003094  0102               	movlb	2	; () banked
 10358  003096  5102               	movf	(_loRa+2)& (0+255),w,b
 10359  003098  0B0F               	andlw	15
 10360  00309A  0A03               	xorlw	3
 10361  00309C  A4D8               	btfss	status,2,c
 10362  00309E  D014               	goto	l1047
 10363                           
 10364                           ; BSR set to: 2
 10365                           ;lorawan_eu.c: 473: {
 10366                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 10367  0030A0  0102               	movlb	2	; () banked
 10368  0030A2  5112               	movf	(_loRa+18)& (0+255),w,b
 10369  0030A4  A4D8               	btfss	status,2,c
 10370  0030A6  D006               	goto	l15865
 10371                           
 10372                           ; BSR set to: 2
 10373                           ;lorawan_eu.c: 475: {
 10374                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 10375  0030A8  0102               	movlb	2	; () banked
 10376  0030AA  5102               	movf	(_loRa+2)& (0+255),w,b
 10377  0030AC  0BF0               	andlw	-16
 10378  0030AE  0904               	iorlw	4
 10379  0030B0  6F02               	movwf	(_loRa+2)& (0+255),b
 10380                           
 10381                           ;lorawan_eu.c: 477: }
 10382  0030B2  0012               	return	
 10383  0030B4                     l15865:
 10384                           
 10385                           ; BSR set to: 2
 10386                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 10387  0030B4  0E02               	movlw	2
 10388  0030B6  0102               	movlb	2	; () banked
 10389  0030B8  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10390  0030BA  A4D8               	btfss	status,2,c
 10391  0030BC  0012               	return	
 10392                           
 10393                           ; BSR set to: 2
 10394                           ;lorawan_eu.c: 479: {
 10395                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 10396  0030BE  0E00               	movlw	0
 10397  0030C0  6EE6               	movwf	postinc1,c
 10398  0030C2  EC41  F03C         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 10399                           
 10400                           ;lorawan_eu.c: 481: }
 10401                           ;lorawan_eu.c: 482: }
 10402  0030C6  0012               	return	
 10403  0030C8                     l1047:
 10404                           
 10405                           ; BSR set to: 2
 10406                           ;lorawan_eu.c: 483: else
 10407                           ;lorawan_eu.c: 484: {
 10408                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 10409  0030C8  0102               	movlb	2	; () banked
 10410  0030CA  A500               	btfss	_loRa& (0+255),2,b
 10411  0030CC  D003               	goto	l1052
 10412                           
 10413                           ; BSR set to: 2
 10414                           ;lorawan_eu.c: 487: {
 10415                           ;lorawan_eu.c: 488: SetJoinFailState();
 10416  0030CE  EC2C  F04D         	call	_SetJoinFailState	;wreg free
 10417                           
 10418                           ;lorawan_eu.c: 489: }
 10419  0030D2  0012               	return	
 10420  0030D4                     l1052:
 10421                           
 10422                           ; BSR set to: 2
 10423                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 10424  0030D4  0102               	movlb	2	; () banked
 10425  0030D6  A902               	btfss	(_loRa+2)& (0+255),4,b
 10426  0030D8  0012               	return	
 10427                           
 10428                           ; BSR set to: 2
 10429                           ;lorawan_eu.c: 492: {
 10430                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 10431  0030DA  0102               	movlb	2	; () banked
 10432  0030DC  A100               	btfss	_loRa& (0+255),0,b
 10433  0030DE  D064               	goto	l15887
 10434                           
 10435                           ; BSR set to: 2
 10436                           ;lorawan_eu.c: 494: {
 10437                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 10438  0030E0  0102               	movlb	2	; () banked
 10439  0030E2  51D9               	movf	(_loRa+217)& (0+255),w,b
 10440  0030E4  0102               	movlb	2	; () banked
 10441  0030E6  5DD7               	subwf	(_loRa+215)& (0+255),w,b
 10442  0030E8  A0D8               	btfss	status,0,c
 10443  0030EA  D03E               	goto	l15881
 10444                           
 10445                           ; BSR set to: 2
 10446                           ;lorawan_eu.c: 496: {
 10447                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10448  0030EC  0102               	movlb	2	; () banked
 10449  0030EE  5102               	movf	(_loRa+2)& (0+255),w,b
 10450  0030F0  0BF0               	andlw	-16
 10451  0030F2  0906               	iorlw	6
 10452  0030F4  6F02               	movwf	(_loRa+2)& (0+255),b
 10453                           
 10454                           ; BSR set to: 2
 10455                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 10456  0030F6  0102               	movlb	2	; () banked
 10457  0030F8  51A0               	movf	(_loRa+160)& (0+255),w,b
 10458  0030FA  0100               	movlb	0	; () banked
 10459  0030FC  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10460  0030FE  0102               	movlb	2	; () banked
 10461  003100  51A1               	movf	(_loRa+161)& (0+255),w,b
 10462  003102  0100               	movlb	0	; () banked
 10463  003104  6FC7               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 10464  003106  0100               	movlb	0	; () banked
 10465  003108  6BC8               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 10466  00310A  0100               	movlb	0	; () banked
 10467  00310C  6BC9               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 10468  00310E  0E0C               	movlw	12
 10469  003110                     u18715:
 10470  003110  90D8               	bcf	status,0,c
 10471  003112  0100               	movlb	0	; () banked
 10472  003114  37C6               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10473  003116  37C7               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10474  003118  37C8               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10475  00311A  37C9               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10476  00311C  2EE8               	decfsz	wreg,f,c
 10477  00311E  D7F8               	goto	u18715
 10478  003120  C0C6  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 10479  003124  C0C7  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 10480  003128  C0C8  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 10481  00312C  C0C9  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 10482  003130  0E7D               	movlw	125
 10483  003132  0100               	movlb	0	; () banked
 10484  003134  6F68               	movwf	___lldiv@divisor& (0+255),b
 10485  003136  0E00               	movlw	0
 10486  003138  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 10487  00313A  0E00               	movlw	0
 10488  00313C  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 10489  00313E  0E00               	movlw	0
 10490  003140  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 10491  003142  EC08  F03F         	call	___lldiv	;wreg free
 10492  003146  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10493  00314A  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10494  00314E  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10495  003152  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10496  003156  0102               	movlb	2	; () banked
 10497  003158  51E8               	movf	(_loRa+232)& (0+255),w,b
 10498  00315A  EC33  F04A         	call	_SwTimerSetTimeout
 10499                           
 10500                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10501  00315E  0102               	movlb	2	; () banked
 10502  003160  51E8               	movf	(_loRa+232)& (0+255),w,b
 10503  003162  ECCB  F041         	call	_SwTimerStart
 10504                           
 10505                           ;lorawan_eu.c: 500: }
 10506  003166  0012               	return	
 10507  003168                     l15881:
 10508                           
 10509                           ;lorawan_eu.c: 501: else
 10510                           ;lorawan_eu.c: 502: {
 10511                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10512  003168  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10513                           
 10514                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10515  00316C  0100               	movlb	0	; () banked
 10516  00316E  51F4               	movf	_rxPayload& (0+255),w,b
 10517  003170  0100               	movlb	0	; () banked
 10518  003172  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 10519  003174  B4D8               	btfsc	status,2,c
 10520  003176  0012               	return	
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;lorawan_eu.c: 505: {
 10524                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10525  003178  0E00               	movlw	0
 10526  00317A  0100               	movlb	0	; () banked
 10527  00317C  6F67               	movwf	RxDataDone@pData& (0+255),b
 10528  00317E  0E00               	movlw	0
 10529  003180  0100               	movlb	0	; () banked
 10530  003182  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10531  003184  0E00               	movlw	0
 10532  003186  0100               	movlb	0	; () banked
 10533  003188  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10534  00318A  0E00               	movlw	0
 10535  00318C  0100               	movlb	0	; () banked
 10536  00318E  6F6A               	movwf	RxDataDone@status& (0+255),b
 10537  003190  D801               	call	u18738
 10538  003192  0012               	return	
 10539  003194                     u18738:
 10540  003194  0005               	push	
 10541  003196  6EFA               	movwf	pclath,c
 10542  003198  0100               	movlb	0	; () banked
 10543  00319A  51F4               	movf	_rxPayload& (0+255),w,b
 10544  00319C  6EFD               	movwf	tosl,c
 10545  00319E  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 10546  0031A0  6EFE               	movwf	tosh,c
 10547  0031A2  6AFF               	clrf	tosu,c
 10548  0031A4  50FA               	movf	pclath,w,c
 10549  0031A6  0012               	return		;indir
 10550  0031A8                     l15887:
 10551                           
 10552                           ;lorawan_eu.c: 511: else
 10553                           ;lorawan_eu.c: 512: {
 10554                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10555  0031A8  0102               	movlb	2	; () banked
 10556  0031AA  51D8               	movf	(_loRa+216)& (0+255),w,b
 10557  0031AC  0102               	movlb	2	; () banked
 10558  0031AE  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10559  0031B0  A0D8               	btfss	status,0,c
 10560  0031B2  D113               	goto	l15925
 10561                           
 10562                           ; BSR set to: 2
 10563                           ;lorawan_eu.c: 514: {
 10564                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10565  0031B4  0102               	movlb	2	; () banked
 10566  0031B6  5102               	movf	(_loRa+2)& (0+255),w,b
 10567  0031B8  0BF0               	andlw	-16
 10568  0031BA  0906               	iorlw	6
 10569  0031BC  6F02               	movwf	(_loRa+2)& (0+255),b
 10570                           
 10571                           ; BSR set to: 2
 10572                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10573  0031BE  0E01               	movlw	1
 10574  0031C0  EC47  F046         	call	_SelectChannelForTransmission
 10575  0031C4  0900               	iorlw	0
 10576  0031C6  A4D8               	btfss	status,2,c
 10577  0031C8  D038               	goto	l15905
 10578                           
 10579                           ;lorawan_eu.c: 517: {
 10580                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10581  0031CA  0EF0               	movlw	low (_macBuffer+16)
 10582  0031CC  0100               	movlb	0	; () banked
 10583  0031CE  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 10584  0031D0  0E04               	movlw	high (_macBuffer+16)
 10585  0031D2  0100               	movlb	0	; () banked
 10586  0031D4  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10587  0031D6  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10588  0031DA  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 10589  0031DE  0100               	movlb	0	; () banked
 10590  0031E0  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 10591  0031E2  0100               	movlb	0	; () banked
 10592  0031E4  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10593  0031E6  A4D8               	btfss	status,2,c
 10594  0031E8  D008               	goto	l15899
 10595                           
 10596                           ; BSR set to: 0
 10597                           ;lorawan_eu.c: 520: {
 10598                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10599  0031EA  0102               	movlb	2	; () banked
 10600  0031EC  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10601                           
 10602                           ; BSR set to: 2
 10603                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10604  0031EE  0102               	movlb	2	; () banked
 10605  0031F0  5102               	movf	(_loRa+2)& (0+255),w,b
 10606  0031F2  0BF0               	andlw	-16
 10607  0031F4  0901               	iorlw	1
 10608  0031F6  6F02               	movwf	(_loRa+2)& (0+255),b
 10609                           
 10610                           ;lorawan_eu.c: 523: }
 10611  0031F8  0012               	return	
 10612  0031FA                     l15899:
 10613                           
 10614                           ;lorawan_eu.c: 524: else
 10615                           ;lorawan_eu.c: 526: {
 10616                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10617  0031FA  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10618                           
 10619                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10620  0031FE  0100               	movlb	0	; () banked
 10621  003200  51F4               	movf	_rxPayload& (0+255),w,b
 10622  003202  0100               	movlb	0	; () banked
 10623  003204  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 10624  003206  B4D8               	btfsc	status,2,c
 10625  003208  0012               	return	
 10626                           
 10627                           ; BSR set to: 0
 10628                           ;lorawan_eu.c: 529: {
 10629                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 10630  00320A  0E00               	movlw	0
 10631  00320C  0100               	movlb	0	; () banked
 10632  00320E  6F67               	movwf	RxDataDone@pData& (0+255),b
 10633  003210  0E00               	movlw	0
 10634  003212  0100               	movlb	0	; () banked
 10635  003214  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10636  003216  0E00               	movlw	0
 10637  003218  0100               	movlb	0	; () banked
 10638  00321A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10639  00321C  0E00               	movlw	0
 10640  00321E  0100               	movlb	0	; () banked
 10641  003220  6F6A               	movwf	RxDataDone@status& (0+255),b
 10642  003222  D801               	call	u18788
 10643  003224  0012               	return	
 10644  003226                     u18788:
 10645  003226  0005               	push	
 10646  003228  6EFA               	movwf	pclath,c
 10647  00322A  0100               	movlb	0	; () banked
 10648  00322C  51F4               	movf	_rxPayload& (0+255),w,b
 10649  00322E  6EFD               	movwf	tosl,c
 10650  003230  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 10651  003232  6EFE               	movwf	tosh,c
 10652  003234  6AFF               	clrf	tosu,c
 10653  003236  50FA               	movf	pclath,w,c
 10654  003238  0012               	return		;indir
 10655  00323A                     l15905:
 10656                           
 10657                           ;lorawan_eu.c: 534: else
 10658                           ;lorawan_eu.c: 535: {
 10659                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10660  00323A  0E00               	movlw	0
 10661  00323C  0100               	movlb	0	; () banked
 10662  00323E  6FCE               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 10663  003240  D085               	goto	l15921
 10664  003242                     l15907:
 10665                           
 10666                           ;lorawan_eu.c: 538: {
 10667                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10668  003242  0100               	movlb	0	; () banked
 10669  003244  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10670  003246  0D0E               	mullw	14
 10671  003248  0E04               	movlw	4
 10672  00324A  26F3               	addwf	prodl,f,c
 10673  00324C  0E00               	movlw	0
 10674  00324E  22F4               	addwfc	prodh,f,c
 10675  003250  0E00               	movlw	low _Channels
 10676  003252  24F3               	addwf	prodl,w,c
 10677  003254  6ED9               	movwf	fsr2l,c
 10678  003256  0E04               	movlw	high _Channels
 10679  003258  20F4               	addwfc	prodh,w,c
 10680  00325A  6EDA               	movwf	fsr2h,c
 10681  00325C  04DE               	decf	postinc2,w,c
 10682  00325E  A4D8               	btfss	status,2,c
 10683  003260  D073               	goto	l15919
 10684                           
 10685                           ; BSR set to: 0
 10686  003262  0100               	movlb	0	; () banked
 10687  003264  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10688  003266  0D0E               	mullw	14
 10689  003268  0E08               	movlw	8
 10690  00326A  26F3               	addwf	prodl,f,c
 10691  00326C  0E00               	movlw	0
 10692  00326E  22F4               	addwfc	prodh,f,c
 10693  003270  0E00               	movlw	low _Channels
 10694  003272  24F3               	addwf	prodl,w,c
 10695  003274  6ED9               	movwf	fsr2l,c
 10696  003276  0E04               	movlw	high _Channels
 10697  003278  20F4               	addwfc	prodh,w,c
 10698  00327A  6EDA               	movwf	fsr2h,c
 10699  00327C  50DE               	movf	postinc2,w,c
 10700  00327E  10DE               	iorwf	postinc2,w,c
 10701  003280  10DE               	iorwf	postinc2,w,c
 10702  003282  10DE               	iorwf	postinc2,w,c
 10703  003284  B4D8               	btfsc	status,2,c
 10704  003286  D060               	goto	l15919
 10705                           
 10706                           ; BSR set to: 0
 10707  003288  0100               	movlb	0	; () banked
 10708  00328A  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10709  00328C  0D0E               	mullw	14
 10710  00328E  0E08               	movlw	8
 10711  003290  26F3               	addwf	prodl,f,c
 10712  003292  0E00               	movlw	0
 10713  003294  22F4               	addwfc	prodh,f,c
 10714  003296  0E00               	movlw	low _Channels
 10715  003298  24F3               	addwf	prodl,w,c
 10716  00329A  6ED9               	movwf	fsr2l,c
 10717  00329C  0E04               	movlw	high _Channels
 10718  00329E  20F4               	addwfc	prodh,w,c
 10719  0032A0  6EDA               	movwf	fsr2h,c
 10720  0032A2  50DE               	movf	postinc2,w,c
 10721  0032A4  0100               	movlb	0	; () banked
 10722  0032A6  5DCA               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10723  0032A8  50DE               	movf	postinc2,w,c
 10724  0032AA  0100               	movlb	0	; () banked
 10725  0032AC  59CB               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10726  0032AE  50DE               	movf	postinc2,w,c
 10727  0032B0  0100               	movlb	0	; () banked
 10728  0032B2  59CC               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10729  0032B4  50DE               	movf	postinc2,w,c
 10730  0032B6  0100               	movlb	0	; () banked
 10731  0032B8  59CD               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10732  0032BA  A0D8               	btfss	status,0,c
 10733  0032BC  D045               	goto	l15919
 10734                           
 10735                           ; BSR set to: 0
 10736  0032BE  0100               	movlb	0	; () banked
 10737  0032C0  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10738  0032C2  0D0E               	mullw	14
 10739  0032C4  0E05               	movlw	5
 10740  0032C6  26F3               	addwf	prodl,f,c
 10741  0032C8  0E00               	movlw	0
 10742  0032CA  22F4               	addwfc	prodh,f,c
 10743  0032CC  0E00               	movlw	low _Channels
 10744  0032CE  24F3               	addwf	prodl,w,c
 10745  0032D0  6ED9               	movwf	fsr2l,c
 10746  0032D2  0E04               	movlw	high _Channels
 10747  0032D4  20F4               	addwfc	prodh,w,c
 10748  0032D6  6EDA               	movwf	fsr2h,c
 10749  0032D8  0104               	movlb	4	; () banked
 10750  0032DA  50DF               	movf	223,w,c
 10751  0032DC  0B0F               	andlw	15
 10752  0032DE  0100               	movlb	0	; () banked
 10753  0032E0  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10754  0032E2  0100               	movlb	0	; () banked
 10755  0032E4  51C6               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10756  0032E6  0102               	movlb	2	; () banked
 10757  0032E8  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10758  0032EA  A0D8               	btfss	status,0,c
 10759  0032EC  D02D               	goto	l15919
 10760                           
 10761                           ; BSR set to: 2
 10762  0032EE  0100               	movlb	0	; () banked
 10763  0032F0  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10764  0032F2  0D0E               	mullw	14
 10765  0032F4  0E05               	movlw	5
 10766  0032F6  26F3               	addwf	prodl,f,c
 10767  0032F8  0E00               	movlw	0
 10768  0032FA  22F4               	addwfc	prodh,f,c
 10769  0032FC  0E00               	movlw	low _Channels
 10770  0032FE  24F3               	addwf	prodl,w,c
 10771  003300  6ED9               	movwf	fsr2l,c
 10772  003302  0E04               	movlw	high _Channels
 10773  003304  20F4               	addwfc	prodh,w,c
 10774  003306  6EDA               	movwf	fsr2h,c
 10775  003308  0104               	movlb	4	; () banked
 10776  00330A  38DF               	swapf	223,w,c
 10777  00330C  0B0F               	andlw	15
 10778  00330E  0100               	movlb	0	; () banked
 10779  003310  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10780  003312  0102               	movlb	2	; () banked
 10781  003314  51DF               	movf	(_loRa+223)& (0+255),w,b
 10782  003316  0100               	movlb	0	; () banked
 10783  003318  5DC6               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10784  00331A  A0D8               	btfss	status,0,c
 10785  00331C  D015               	goto	l15919
 10786                           
 10787                           ; BSR set to: 0
 10788                           ;lorawan_eu.c: 540: {
 10789                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10790  00331E  0100               	movlb	0	; () banked
 10791  003320  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10792  003322  0D0E               	mullw	14
 10793  003324  0E08               	movlw	8
 10794  003326  26F3               	addwf	prodl,f,c
 10795  003328  0E00               	movlw	0
 10796  00332A  22F4               	addwfc	prodh,f,c
 10797  00332C  0E00               	movlw	low _Channels
 10798  00332E  24F3               	addwf	prodl,w,c
 10799  003330  6ED9               	movwf	fsr2l,c
 10800  003332  0E04               	movlw	high _Channels
 10801  003334  20F4               	addwfc	prodh,w,c
 10802  003336  6EDA               	movwf	fsr2h,c
 10803  003338  CFDE F0CA          	movff	postinc2,LORAWAN_RxTimeout@minim
 10804  00333C  CFDE F0CB          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10805  003340  CFDE F0CC          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10806  003344  CFDE F0CD          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10807  003348                     l15919:
 10808  003348  0100               	movlb	0	; () banked
 10809  00334A  2BCE               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10810  00334C                     l15921:
 10811                           
 10812                           ; BSR set to: 0
 10813  00334C  0100               	movlb	0	; () banked
 10814  00334E  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10815  003350  0102               	movlb	2	; () banked
 10816  003352  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10817  003354  B0D8               	btfsc	status,0,c
 10818  003356  D775               	goto	l15907
 10819                           
 10820                           ; BSR set to: 2
 10821                           ;lorawan_eu.c: 542: }
 10822                           ;lorawan_eu.c: 543: }
 10823                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10824                           
 10825                           ; BSR set to: 2
 10826  003358  C0CA  F0C6         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10827  00335C  C0CB  F0C7         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10828  003360  C0CC  F0C8         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10829  003364  C0CD  F0C9         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10830  003368  0E0C               	movlw	12
 10831  00336A                     u18855:
 10832  00336A  90D8               	bcf	status,0,c
 10833  00336C  0100               	movlb	0	; () banked
 10834  00336E  37C6               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10835  003370  37C7               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10836  003372  37C8               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10837  003374  37C9               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10838  003376  2EE8               	decfsz	wreg,f,c
 10839  003378  D7F8               	goto	u18855
 10840  00337A  0E00               	movlw	0
 10841  00337C  0100               	movlb	0	; () banked
 10842  00337E  25C6               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10843  003380  0100               	movlb	0	; () banked
 10844  003382  6F64               	movwf	___lldiv@dividend& (0+255),b
 10845  003384  0E20               	movlw	32
 10846  003386  0100               	movlb	0	; () banked
 10847  003388  21C7               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10848  00338A  0100               	movlb	0	; () banked
 10849  00338C  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10850  00338E  0E03               	movlw	3
 10851  003390  0100               	movlb	0	; () banked
 10852  003392  21C8               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10853  003394  0100               	movlb	0	; () banked
 10854  003396  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10855  003398  0E00               	movlw	0
 10856  00339A  0100               	movlb	0	; () banked
 10857  00339C  21C9               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10858  00339E  0100               	movlb	0	; () banked
 10859  0033A0  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10860  0033A2  0E7D               	movlw	125
 10861  0033A4  0100               	movlb	0	; () banked
 10862  0033A6  6F68               	movwf	___lldiv@divisor& (0+255),b
 10863  0033A8  0E00               	movlw	0
 10864  0033AA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 10865  0033AC  0E00               	movlw	0
 10866  0033AE  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 10867  0033B0  0E00               	movlw	0
 10868  0033B2  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 10869  0033B4  EC08  F03F         	call	___lldiv	;wreg free
 10870  0033B8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10871  0033BC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10872  0033C0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10873  0033C4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10874  0033C8  0102               	movlb	2	; () banked
 10875  0033CA  51EA               	movf	(_loRa+234)& (0+255),w,b
 10876  0033CC  EC33  F04A         	call	_SwTimerSetTimeout
 10877                           
 10878                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10879  0033D0  0102               	movlb	2	; () banked
 10880  0033D2  51EA               	movf	(_loRa+234)& (0+255),w,b
 10881  0033D4  ECCB  F041         	call	_SwTimerStart
 10882                           
 10883                           ;lorawan_eu.c: 546: }
 10884                           ;lorawan_eu.c: 547: }
 10885  0033D8  0012               	return	
 10886  0033DA                     l15925:
 10887                           
 10888                           ;lorawan_eu.c: 548: else
 10889                           ;lorawan_eu.c: 549: {
 10890                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10891  0033DA  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10892                           
 10893                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10894  0033DE  0100               	movlb	0	; () banked
 10895  0033E0  51F4               	movf	_rxPayload& (0+255),w,b
 10896  0033E2  0100               	movlb	0	; () banked
 10897  0033E4  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 10898  0033E6  B4D8               	btfsc	status,2,c
 10899  0033E8  0012               	return	
 10900                           
 10901                           ; BSR set to: 0
 10902                           ;lorawan_eu.c: 552: {
 10903                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10904  0033EA  0E00               	movlw	0
 10905  0033EC  0100               	movlb	0	; () banked
 10906  0033EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 10907  0033F0  0E00               	movlw	0
 10908  0033F2  0100               	movlb	0	; () banked
 10909  0033F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10910  0033F6  0E00               	movlw	0
 10911  0033F8  0100               	movlb	0	; () banked
 10912  0033FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10913  0033FC  0E01               	movlw	1
 10914  0033FE  0100               	movlb	0	; () banked
 10915  003400  6F6A               	movwf	RxDataDone@status& (0+255),b
 10916  003402  D801               	call	u18878
 10917  003404  0012               	return	
 10918  003406                     u18878:
 10919  003406  0005               	push	
 10920  003408  6EFA               	movwf	pclath,c
 10921  00340A  0100               	movlb	0	; () banked
 10922  00340C  51F4               	movf	_rxPayload& (0+255),w,b
 10923  00340E  6EFD               	movwf	tosl,c
 10924  003410  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 10925  003412  6EFE               	movwf	tosh,c
 10926  003414  6AFF               	clrf	tosu,c
 10927  003416  50FA               	movf	pclath,w,c
 10928  003418  0012               	return		;indir
 10929  00341A                     l15931:
 10930                           
 10931                           ;lorawan_eu.c: 560: else
 10932                           ;lorawan_eu.c: 561: {
 10933                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10934  00341A  0100               	movlb	0	; () banked
 10935  00341C  51F4               	movf	_rxPayload& (0+255),w,b
 10936  00341E  0100               	movlb	0	; () banked
 10937  003420  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 10938  003422  B4D8               	btfsc	status,2,c
 10939  003424  0012               	return	
 10940                           
 10941                           ; BSR set to: 0
 10942                           ;lorawan_eu.c: 564: {
 10943                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10944  003426  0E00               	movlw	0
 10945  003428  0100               	movlb	0	; () banked
 10946  00342A  6F67               	movwf	RxDataDone@pData& (0+255),b
 10947  00342C  0E00               	movlw	0
 10948  00342E  0100               	movlb	0	; () banked
 10949  003430  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10950  003432  0E00               	movlw	0
 10951  003434  0100               	movlb	0	; () banked
 10952  003436  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10953  003438  0E02               	movlw	2
 10954  00343A  0100               	movlb	0	; () banked
 10955  00343C  6F6A               	movwf	RxDataDone@status& (0+255),b
 10956  00343E  D801               	call	u18898
 10957  003440  0012               	return	
 10958  003442                     u18898:
 10959  003442  0005               	push	
 10960  003444  6EFA               	movwf	pclath,c
 10961  003446  0100               	movlb	0	; () banked
 10962  003448  51F4               	movf	_rxPayload& (0+255),w,b
 10963  00344A  6EFD               	movwf	tosl,c
 10964  00344C  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 10965  00344E  6EFE               	movwf	tosh,c
 10966  003450  6AFF               	clrf	tosu,c
 10967  003452  50FA               	movf	pclath,w,c
 10968  003454  0012               	return		;indir
 10969  003456                     __end_of_LORAWAN_RxTimeout:
 10970                           	opt stack 0
 10971                           tosu	equ	0xFFF
 10972                           tosh	equ	0xFFE
 10973                           tosl	equ	0xFFD
 10974                           pclath	equ	0xFFA
 10975                           tblptru	equ	0xFF8
 10976                           tblptrh	equ	0xFF7
 10977                           tblptrl	equ	0xFF6
 10978                           tablat	equ	0xFF5
 10979                           prodh	equ	0xFF4
 10980                           prodl	equ	0xFF3
 10981                           intcon	equ	0xFF2
 10982                           intcon2	equ	0xFF1
 10983                           intcon3	equ	0xFF0
 10984                           postinc0	equ	0xFEE
 10985                           wreg	equ	0xFE8
 10986                           postinc1	equ	0xFE6
 10987                           postdec1	equ	0xFE5
 10988                           plusw1	equ	0xFE3
 10989                           fsr1h	equ	0xFE2
 10990                           fsr1l	equ	0xFE1
 10991                           indf2	equ	0xFDF
 10992                           postinc2	equ	0xFDE
 10993                           postdec2	equ	0xFDD
 10994                           fsr2h	equ	0xFDA
 10995                           fsr2l	equ	0xFD9
 10996                           status	equ	0xFD8
 10997                           
 10998 ;; *************** function _LORAWAN_RxDone *****************
 10999 ;; Defined at:
 11000 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11001 ;; Parameters:    Size  Location     Type
 11002 ;;  buffer          2  142[BANK0 ] PTR unsigned char 
 11003 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11004 ;;  bufferLength    1  144[BANK0 ] unsigned char 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  hdr             2   18[BANK3 ] PTR struct .
 11007 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11008 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 11009 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11010 ;;  computedMic     4   11[BANK3 ] unsigned long 
 11011 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 11012 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 11013 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 11014 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 11015 ;;  temp            1    8[BANK3 ] unsigned char 
 11016 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 11017 ;;  mhdr            1    2[BANK3 ] struct .
 11018 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 11019 ;;  fPort           1    0[BANK3 ] unsigned char 
 11020 ;; Return value:  Size  Location     Type
 11021 ;;                  1    wreg      enum E8200
 11022 ;; Registers used:
 11023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11024 ;; Tracked objects:
 11025 ;;		On entry : 0/0
 11026 ;;		On exit  : 0/0
 11027 ;;		Unchanged: 0/0
 11028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11029 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11030 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11031 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11032 ;;      Totals:         0       3       5       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11033 ;;Total ram usage:       28 bytes
 11034 ;; Hardware stack levels used:    1
 11035 ;; Hardware stack levels required when called:   15
 11036 ;; This function calls:
 11037 ;;		_AESCmac
 11038 ;;		_AESEncodeLoRa
 11039 ;;		_AssembleEncryptionBlock
 11040 ;;		_CheckFlags
 11041 ;;		_CheckMcastFlags
 11042 ;;		_ComputeMic
 11043 ;;		_ComputeSessionKeys
 11044 ;;		_EncryptFRMPayload
 11045 ;;		_ExtractMic
 11046 ;;		_LORAWAN_EnterContinuousReceive
 11047 ;;		_LORAWAN_Send
 11048 ;;		_MacExecuteCommands
 11049 ;;		_RADIO_GetStatus
 11050 ;;		_RADIO_ReleaseData
 11051 ;;		_RxDataDone
 11052 ;;		_SearchAvailableChannel
 11053 ;;		_SetJoinFailState
 11054 ;;		_SetReceptionNotOkState
 11055 ;;		_StartReTxTimer
 11056 ;;		_SwTimerStop
 11057 ;;		_UpdateCfList
 11058 ;;		_UpdateDLSettings
 11059 ;;		_UpdateJoinSuccessState
 11060 ;;		_UpdateReceiveDelays
 11061 ;;		_UpdateRetransmissionAckTimeoutState
 11062 ;;		_memcpy
 11063 ;; This function is called by:
 11064 ;;		_RADIO_RxDone
 11065 ;;		_RADIO_FSKPayloadReady
 11066 ;; This function uses a non-reentrant model
 11067 ;;
 11068                           
 11069                           	psect	text60
 11070  000088                     __ptext60:
 11071                           	opt stack 0
 11072  000088                     _LORAWAN_RxDone:
 11073                           	opt stack 12
 11074                           
 11075                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 11076                           ;lorawan.c: 1124: Mhdr_t mhdr;
 11077                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 11078                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 11079                           ;lorawan.c: 1127: uint8_t *packet;
 11080                           ;lorawan.c: 1128: uint8_t temp;
 11081                           ;lorawan.c: 1130: RADIO_ReleaseData();
 11082                           
 11083                           ;incstack = 0
 11084  000088  ECE4  F051         	call	_RADIO_ReleaseData	;wreg free
 11085                           
 11086                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 11087  00008C  0102               	movlb	2	; () banked
 11088  00008E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 11089  000090  EF65  F007         	goto	l15847
 11090                           
 11091                           ; BSR set to: 2
 11092                           ;lorawan.c: 1133: {
 11093                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 11094  000094  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11095  000098  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11096  00009C  50DF               	movf	indf2,w,c
 11097  00009E  0103               	movlb	3	; () banked
 11098  0000A0  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 11099                           
 11100                           ; BSR set to: 3
 11101                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 11102  0000A2  0103               	movlb	3	; () banked
 11103  0000A4  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11104  0000A6  32E8               	rrcf	wreg,f,c
 11105  0000A8  0B07               	andlw	7
 11106  0000AA  06E8               	decf	wreg,f,c
 11107  0000AC  A4D8               	btfss	status,2,c
 11108  0000AE  D0F8               	goto	l15507
 11109                           
 11110                           ; BSR set to: 3
 11111  0000B0  0102               	movlb	2	; () banked
 11112  0000B2  511D               	movf	(_loRa+29)& (0+255),w,b
 11113  0000B4  A4D8               	btfss	status,2,c
 11114  0000B6  D0F4               	goto	l15507
 11115                           
 11116                           ; BSR set to: 2
 11117                           ;lorawan.c: 1136: {
 11118                           ;lorawan.c: 1137: temp = bufferLength - 1;
 11119  0000B8  0100               	movlb	0	; () banked
 11120  0000BA  05F0               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11121  0000BC  D034               	goto	L5
 11122  0000BE                     l15457:
 11123                           
 11124                           ; BSR set to: 3
 11125                           ;lorawan.c: 1139: {
 11126                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 11127  0000BE  0103               	movlb	3	; () banked
 11128  0000C0  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 11129  0000C2  0101               	movlb	1	; () banked
 11130  0000C4  6F66               	movwf	??_LORAWAN_RxDone& (0+255),b
 11131  0000C6  6B67               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11132  0000C8  0101               	movlb	1	; () banked
 11133  0000CA  1F66               	comf	??_LORAWAN_RxDone& (0+255),f,b
 11134  0000CC  1F67               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11135  0000CE  4B66               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 11136  0000D0  2B67               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11137  0000D2  0100               	movlb	0	; () banked
 11138  0000D4  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11139  0000D6  0101               	movlb	1	; () banked
 11140  0000D8  6F68               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11141  0000DA  6B69               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11142  0000DC  0101               	movlb	1	; () banked
 11143  0000DE  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11144  0000E0  0101               	movlb	1	; () banked
 11145  0000E2  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11146  0000E4  0101               	movlb	1	; () banked
 11147  0000E6  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11148  0000E8  0101               	movlb	1	; () banked
 11149  0000EA  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11150  0000EC  0101               	movlb	1	; () banked
 11151  0000EE  5168               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11152  0000F0  0100               	movlb	0	; () banked
 11153  0000F2  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11154  0000F4  0100               	movlb	0	; () banked
 11155  0000F6  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 11156  0000F8  0101               	movlb	1	; () banked
 11157  0000FA  5169               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11158  0000FC  0100               	movlb	0	; () banked
 11159  0000FE  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11160  000100  0100               	movlb	0	; () banked
 11161  000102  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 11162  000104  0E42               	movlw	low (_loRa+66)
 11163  000106  0100               	movlb	0	; () banked
 11164  000108  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 11165  00010A  0E02               	movlw	high (_loRa+66)
 11166  00010C  0100               	movlb	0	; () banked
 11167  00010E  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 11168  000110  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 11169                           
 11170                           ;lorawan.c: 1142: if (temp > 16)
 11171  000114  0E10               	movlw	16
 11172  000116  0103               	movlb	3	; () banked
 11173  000118  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 11174  00011A  D004               	goto	l15463
 11175                           
 11176                           ; BSR set to: 3
 11177                           ;lorawan.c: 1143: {
 11178                           ;lorawan.c: 1144: temp -= 16;
 11179  00011C  0E10               	movlw	16
 11180  00011E  0103               	movlb	3	; () banked
 11181  000120  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 11182                           
 11183                           ;lorawan.c: 1145: }
 11184  000122  D003               	goto	l2067
 11185  000124                     l15463:
 11186                           
 11187                           ; BSR set to: 3
 11188                           ;lorawan.c: 1146: else
 11189                           ;lorawan.c: 1147: {
 11190                           ;lorawan.c: 1148: temp = 0;
 11191  000124  0E00               	movlw	0
 11192  000126                     L5:
 11193  000126  0103               	movlb	3	; () banked
 11194  000128  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 11195  00012A                     l2067:
 11196                           
 11197                           ; BSR set to: 3
 11198  00012A  0103               	movlb	3	; () banked
 11199  00012C  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 11200  00012E  0103               	movlb	3	; () banked
 11201  000130  A4D8               	btfss	status,2,c
 11202  000132  D7C5               	goto	l15457
 11203                           
 11204                           ; BSR set to: 3
 11205                           ;lorawan.c: 1149: }
 11206                           ;lorawan.c: 1150: }
 11207                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 11208                           
 11209                           ; BSR set to: 3
 11210  000134  0E42               	movlw	low (_loRa+66)
 11211  000136  0100               	movlb	0	; () banked
 11212  000138  6FDB               	movwf	ComputeMic@key& (0+255),b
 11213  00013A  0E02               	movlw	high (_loRa+66)
 11214  00013C  0100               	movlb	0	; () banked
 11215  00013E  6FDC               	movwf	(ComputeMic@key+1)& (0+255),b
 11216  000140  C0EE  F0DD         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 11217  000144  C0EF  F0DE         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 11218  000148  0100               	movlb	0	; () banked
 11219  00014A  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11220  00014C  0FFC               	addlw	252
 11221  00014E  0100               	movlb	0	; () banked
 11222  000150  6FDF               	movwf	ComputeMic@bufferLength& (0+255),b
 11223  000152  EC2E  F047         	call	_ComputeMic	;wreg free
 11224  000156  C0DB  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 11225  00015A  C0DC  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 11226  00015E  C0DD  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 11227  000162  C0DE  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 11228                           
 11229                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 11230  000166  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11231  00016A  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11232  00016E  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11233  000172  EC09  F046         	call	_ExtractMic	;wreg free
 11234  000176  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11235  00017A  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11236  00017E  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11237  000182  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11238                           
 11239                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 11240  000186  0103               	movlb	3	; () banked
 11241  000188  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11242  00018A  0103               	movlb	3	; () banked
 11243  00018C  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11244  00018E  E110               	bnz	u17950
 11245  000190  0103               	movlb	3	; () banked
 11246  000192  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11247  000194  0103               	movlb	3	; () banked
 11248  000196  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11249  000198  E10B               	bnz	u17950
 11250  00019A  0103               	movlb	3	; () banked
 11251  00019C  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11252  00019E  0103               	movlb	3	; () banked
 11253  0001A0  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11254  0001A2  E106               	bnz	u17950
 11255  0001A4  0103               	movlb	3	; () banked
 11256  0001A6  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11257  0001A8  0103               	movlb	3	; () banked
 11258  0001AA  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11259  0001AC  B4D8               	btfsc	status,2,c
 11260  0001AE  D013               	goto	l15481
 11261  0001B0                     u17950:
 11262                           
 11263                           ; BSR set to: 3
 11264                           ;lorawan.c: 1156: {
 11265                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 11266  0001B0  0102               	movlb	2	; () banked
 11267  0001B2  5102               	movf	(_loRa+2)& (0+255),w,b
 11268  0001B4  0B0F               	andlw	15
 11269  0001B6  0A05               	xorlw	5
 11270  0001B8  B4D8               	btfsc	status,2,c
 11271  0001BA  D00A               	goto	l15477
 11272                           
 11273                           ; BSR set to: 2
 11274  0001BC  0102               	movlb	2	; () banked
 11275  0001BE  5102               	movf	(_loRa+2)& (0+255),w,b
 11276  0001C0  0B0F               	andlw	15
 11277  0001C2  0A03               	xorlw	3
 11278  0001C4  A4D8               	btfss	status,2,c
 11279  0001C6  0012               	return	
 11280                           
 11281                           ; BSR set to: 2
 11282  0001C8  0102               	movlb	2	; () banked
 11283  0001CA  51F1               	movf	(_loRa+241)& (0+255),w,b
 11284  0001CC  B4D8               	btfsc	status,2,c
 11285  0001CE  0012               	return	
 11286  0001D0                     l15477:
 11287                           
 11288                           ; BSR set to: 2
 11289                           ;lorawan.c: 1158: {
 11290                           ;lorawan.c: 1159: SetJoinFailState();
 11291  0001D0  EC2C  F04D         	call	_SetJoinFailState	;wreg free
 11292                           
 11293                           ;lorawan.c: 1160: }
 11294                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 11295                           ;	Return value of _LORAWAN_RxDone is never used
 11296  0001D4  0012               	return	
 11297  0001D6                     l15481:
 11298                           
 11299                           ;lorawan.c: 1163: }
 11300                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 11301  0001D6  0102               	movlb	2	; () banked
 11302  0001D8  5102               	movf	(_loRa+2)& (0+255),w,b
 11303  0001DA  0B0F               	andlw	15
 11304  0001DC  0A03               	xorlw	3
 11305  0001DE  A4D8               	btfss	status,2,c
 11306  0001E0  D004               	goto	l15485
 11307                           
 11308                           ; BSR set to: 2
 11309                           ;lorawan.c: 1167: {
 11310                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 11311  0001E2  0102               	movlb	2	; () banked
 11312  0001E4  51E3               	movf	(_loRa+227)& (0+255),w,b
 11313  0001E6  EC39  F04F         	call	_SwTimerStop
 11314  0001EA                     l15485:
 11315                           
 11316                           ;lorawan.c: 1169: }
 11317                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 11318                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 11319  0001EA  C0EE  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 11320  0001EE  C0EF  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 11321                           
 11322                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 11323  0001F2  0103               	movlb	3	; () banked
 11324  0001F4  EE20 F007          	lfsr	2,7
 11325  0001F8  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11326  0001FA  26D9               	addwf	fsr2l,f,c
 11327  0001FC  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11328  0001FE  22DA               	addwfc	fsr2h,f,c
 11329  000200  CFDE F21E          	movff	postinc2,_loRa+30
 11330  000204  CFDE F21F          	movff	postinc2,_loRa+31
 11331  000208  CFDE F220          	movff	postinc2,_loRa+32
 11332  00020C  CFDE F221          	movff	postinc2,_loRa+33
 11333                           
 11334                           ; BSR set to: 3
 11335                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 11336  000210  0103               	movlb	3	; () banked
 11337  000212  EE20 F00C          	lfsr	2,12
 11338  000216  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11339  000218  26D9               	addwf	fsr2l,f,c
 11340  00021A  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11341  00021C  22DA               	addwfc	fsr2h,f,c
 11342  00021E  50DF               	movf	indf2,w,c
 11343  000220  0B0F               	andlw	15
 11344  000222  ECFC  F04A         	call	_UpdateReceiveDelays
 11345                           
 11346                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 11347  000226  0103               	movlb	3	; () banked
 11348  000228  EE20 F00B          	lfsr	2,11
 11349  00022C  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11350  00022E  26D9               	addwf	fsr2l,f,c
 11351  000230  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11352  000232  22DA               	addwfc	fsr2h,f,c
 11353  000234  0103               	movlb	3	; () banked
 11354  000236  38DF               	swapf	223,w,c
 11355  000238  0B07               	andlw	7
 11356  00023A  0100               	movlb	0	; () banked
 11357  00023C  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 11358  00023E  0103               	movlb	3	; () banked
 11359  000240  EE20 F00B          	lfsr	2,11
 11360  000244  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11361  000246  26D9               	addwf	fsr2l,f,c
 11362  000248  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11363  00024A  22DA               	addwfc	fsr2h,f,c
 11364  00024C  0103               	movlb	3	; () banked
 11365  00024E  50DF               	movf	223,w,c
 11366  000250  0B0F               	andlw	15
 11367  000252  EC2D  F050         	call	_UpdateDLSettings
 11368                           
 11369                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 11370  000256  C3AF  F0AA         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 11371  00025A  C3B0  F0AB         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 11372  00025E  0100               	movlb	0	; () banked
 11373  000260  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11374  000262  EC6D  F023         	call	_UpdateCfList
 11375                           
 11376                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 11377  000266  C3AF  F0A5         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 11378  00026A  C3B0  F0A6         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 11379  00026E  EC1F  F040         	call	_ComputeSessionKeys	;wreg free
 11380                           
 11381                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 11382  000272  0E00               	movlw	0
 11383  000274  6EE6               	movwf	postinc1,c
 11384  000276  ECD8  F032         	call	_UpdateJoinSuccessState	;wreg free
 11385                           
 11386                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 11387  00027A  0E00               	movlw	0
 11388  00027C  0102               	movlb	2	; () banked
 11389  00027E  6F06               	movwf	(_loRa+6)& (0+255),b
 11390  000280  0E00               	movlw	0
 11391  000282  6F07               	movwf	(_loRa+7)& (0+255),b
 11392  000284  0E00               	movlw	0
 11393  000286  6F08               	movwf	(_loRa+8)& (0+255),b
 11394  000288  0E00               	movlw	0
 11395  00028A  6F09               	movwf	(_loRa+9)& (0+255),b
 11396                           
 11397                           ; BSR set to: 2
 11398                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 11399  00028C  0E00               	movlw	0
 11400  00028E  0102               	movlb	2	; () banked
 11401  000290  6F0A               	movwf	(_loRa+10)& (0+255),b
 11402  000292  0E00               	movlw	0
 11403  000294  6F0B               	movwf	(_loRa+11)& (0+255),b
 11404  000296  0E00               	movlw	0
 11405  000298  6F0C               	movwf	(_loRa+12)& (0+255),b
 11406  00029A  0E00               	movlw	0
 11407  00029C  6F0D               	movwf	(_loRa+13)& (0+255),b
 11408                           
 11409                           ; BSR set to: 2
 11410                           ;lorawan.c: 1190: }
 11411                           
 11412                           ; BSR set to: 2
 11413                           ;lorawan.c: 1189: return OK;
 11414                           ;	Return value of _LORAWAN_RxDone is never used
 11415  00029E  0012               	return	
 11416  0002A0                     l15507:
 11417                           
 11418                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 11419  0002A0  0103               	movlb	3	; () banked
 11420  0002A2  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11421  0002A4  32E8               	rrcf	wreg,f,c
 11422  0002A6  0B07               	andlw	7
 11423  0002A8  0A03               	xorlw	3
 11424  0002AA  B4D8               	btfsc	status,2,c
 11425  0002AC  D008               	goto	l15511
 11426                           
 11427                           ; BSR set to: 3
 11428  0002AE  0103               	movlb	3	; () banked
 11429  0002B0  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11430  0002B2  32E8               	rrcf	wreg,f,c
 11431  0002B4  0B07               	andlw	7
 11432  0002B6  0A05               	xorlw	5
 11433  0002B8  A4D8               	btfss	status,2,c
 11434  0002BA  EF62  F007         	goto	l15843
 11435  0002BE                     l15511:
 11436                           
 11437                           ; BSR set to: 3
 11438                           ;lorawan.c: 1192: {
 11439                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 11440  0002BE  0E00               	movlw	0
 11441  0002C0  0102               	movlb	2	; () banked
 11442  0002C2  6FA7               	movwf	(_loRa+167)& (0+255),b
 11443                           
 11444                           ; BSR set to: 2
 11445                           ;lorawan.c: 1195: Hdr_t *hdr;
 11446                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 11447  0002C4  C0EE  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 11448  0002C8  C0EF  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 11449                           
 11450                           ; BSR set to: 2
 11451                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 11452  0002CC  0E02               	movlw	2
 11453  0002CE  0102               	movlb	2	; () banked
 11454  0002D0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11455  0002D2  A4D8               	btfss	status,2,c
 11456  0002D4  D263               	goto	l15637
 11457                           
 11458                           ; BSR set to: 2
 11459  0002D6  0103               	movlb	3	; () banked
 11460  0002D8  EE20 F001          	lfsr	2,1
 11461  0002DC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11462  0002DE  26D9               	addwf	fsr2l,f,c
 11463  0002E0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11464  0002E2  22DA               	addwfc	fsr2h,f,c
 11465  0002E4  0102               	movlb	2	; () banked
 11466  0002E6  5162               	movf	(_loRa+98)& (0+255),w,b
 11467  0002E8  18DE               	xorwf	postinc2,w,c
 11468  0002EA  E10C               	bnz	u18031
 11469  0002EC  0102               	movlb	2	; () banked
 11470  0002EE  5163               	movf	(_loRa+99)& (0+255),w,b
 11471  0002F0  18DE               	xorwf	postinc2,w,c
 11472  0002F2  E108               	bnz	u18031
 11473  0002F4  0102               	movlb	2	; () banked
 11474  0002F6  5164               	movf	(_loRa+100)& (0+255),w,b
 11475  0002F8  18DE               	xorwf	postinc2,w,c
 11476  0002FA  E104               	bnz	u18031
 11477  0002FC  0102               	movlb	2	; () banked
 11478  0002FE  5165               	movf	(_loRa+101)& (0+255),w,b
 11479  000300  18DE               	xorwf	postinc2,w,c
 11480  000302  A4D8               	btfss	status,2,c
 11481  000304                     u18031:
 11482  000304  D24B               	goto	l15637
 11483                           
 11484                           ; BSR set to: 2
 11485  000306  0102               	movlb	2	; () banked
 11486  000308  A504               	btfss	(_loRa+4)& (0+255),2,b
 11487  00030A  D248               	goto	l15637
 11488                           
 11489                           ; BSR set to: 2
 11490                           ;lorawan.c: 1200: {
 11491                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 11492  00030C  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 11493  000310  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 11494  000314  EC33  F044         	call	_CheckMcastFlags	;wreg free
 11495  000318  0900               	iorlw	0
 11496  00031A  A4D8               	btfss	status,2,c
 11497  00031C  D008               	goto	l15529
 11498                           
 11499                           ;lorawan.c: 1203: {
 11500                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11501  00031E  0102               	movlb	2	; () banked
 11502  000320  5102               	movf	(_loRa+2)& (0+255),w,b
 11503  000322  0BF0               	andlw	-16
 11504  000324  0909               	iorlw	9
 11505  000326  6F02               	movwf	(_loRa+2)& (0+255),b
 11506                           
 11507                           ; BSR set to: 2
 11508                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 11509  000328  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11510                           
 11511                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 11512                           ;	Return value of _LORAWAN_RxDone is never used
 11513  00032C  0012               	return	
 11514  00032E                     l15529:
 11515                           
 11516                           ;lorawan.c: 1207: }
 11517                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 11518  00032E  0103               	movlb	3	; () banked
 11519  000330  EE20 F006          	lfsr	2,6
 11520  000334  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11521  000336  26D9               	addwf	fsr2l,f,c
 11522  000338  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11523  00033A  22DA               	addwfc	fsr2h,f,c
 11524  00033C  CFDE F166          	movff	postinc2,??_LORAWAN_RxDone
 11525  000340  CFDD F167          	movff	postdec2,??_LORAWAN_RxDone+1
 11526  000344  C166  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11527  000348  C167  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11528  00034C  0100               	movlb	0	; () banked
 11529  00034E  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11530  000350  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11531  000352  0100               	movlb	0	; () banked
 11532  000354  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11533  000356  0FFC               	addlw	252
 11534  000358  0100               	movlb	0	; () banked
 11535  00035A  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11536  00035C  0E49               	movlw	73
 11537  00035E  0100               	movlb	0	; () banked
 11538  000360  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11539  000362  0E01               	movlw	1
 11540  000364  0100               	movlb	0	; () banked
 11541  000366  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11542  000368  0E01               	movlw	1
 11543  00036A  EC0F  F036         	call	_AssembleEncryptionBlock
 11544                           
 11545                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11546  00036E  0EEF               	movlw	low _radioBuffer
 11547  000370  0100               	movlb	0	; () banked
 11548  000372  6F64               	movwf	memcpy@d1& (0+255),b
 11549  000374  0E05               	movlw	high _radioBuffer
 11550  000376  0100               	movlb	0	; () banked
 11551  000378  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11552  00037A  0EAA               	movlw	low _aesBuffer
 11553  00037C  0100               	movlb	0	; () banked
 11554  00037E  6F66               	movwf	memcpy@s1& (0+255),b
 11555  000380  0E01               	movlw	high _aesBuffer
 11556  000382  0100               	movlb	0	; () banked
 11557  000384  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11558  000386  0E00               	movlw	0
 11559  000388  0100               	movlb	0	; () banked
 11560  00038A  6F69               	movwf	(memcpy@n+1)& (0+255),b
 11561  00038C  0E10               	movlw	16
 11562  00038E  6F68               	movwf	memcpy@n& (0+255),b
 11563  000390  ECCA  F048         	call	_memcpy	;wreg free
 11564                           
 11565                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11566  000394  0EFF               	movlw	low (_radioBuffer+16)
 11567  000396  0100               	movlb	0	; () banked
 11568  000398  6F64               	movwf	memcpy@d1& (0+255),b
 11569  00039A  0E05               	movlw	high (_radioBuffer+16)
 11570  00039C  0100               	movlb	0	; () banked
 11571  00039E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11572  0003A0  C0EE  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11573  0003A4  C0EF  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11574  0003A8  0EFC               	movlw	252
 11575  0003AA  0100               	movlb	0	; () banked
 11576  0003AC  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11577  0003AE  0100               	movlb	0	; () banked
 11578  0003B0  6F68               	movwf	memcpy@n& (0+255),b
 11579  0003B2  0100               	movlb	0	; () banked
 11580  0003B4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11581  0003B6  0EFF               	movlw	255
 11582  0003B8  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11583  0003BA  ECCA  F048         	call	_memcpy	;wreg free
 11584                           
 11585                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11586  0003BE  0E66               	movlw	low (_loRa+102)
 11587  0003C0  0100               	movlb	0	; () banked
 11588  0003C2  6FCD               	movwf	AESCmac@key& (0+255),b
 11589  0003C4  0E02               	movlw	high (_loRa+102)
 11590  0003C6  0100               	movlb	0	; () banked
 11591  0003C8  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 11592  0003CA  0EAA               	movlw	low _aesBuffer
 11593  0003CC  0100               	movlb	0	; () banked
 11594  0003CE  6FCF               	movwf	AESCmac@output& (0+255),b
 11595  0003D0  0E01               	movlw	high _aesBuffer
 11596  0003D2  0100               	movlb	0	; () banked
 11597  0003D4  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 11598  0003D6  0EEF               	movlw	low _radioBuffer
 11599  0003D8  0100               	movlb	0	; () banked
 11600  0003DA  6FD1               	movwf	AESCmac@input& (0+255),b
 11601  0003DC  0E05               	movlw	high _radioBuffer
 11602  0003DE  0100               	movlb	0	; () banked
 11603  0003E0  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 11604  0003E2  0100               	movlb	0	; () banked
 11605  0003E4  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11606  0003E6  0F0C               	addlw	12
 11607  0003E8  0100               	movlb	0	; () banked
 11608  0003EA  6FD3               	movwf	AESCmac@size& (0+255),b
 11609  0003EC  EC13  F016         	call	_AESCmac	;wreg free
 11610                           
 11611                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11612  0003F0  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11613  0003F2  0100               	movlb	0	; () banked
 11614  0003F4  6F64               	movwf	memcpy@d1& (0+255),b
 11615  0003F6  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11616  0003F8  0100               	movlb	0	; () banked
 11617  0003FA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11618  0003FC  0EAA               	movlw	low _aesBuffer
 11619  0003FE  0100               	movlb	0	; () banked
 11620  000400  6F66               	movwf	memcpy@s1& (0+255),b
 11621  000402  0E01               	movlw	high _aesBuffer
 11622  000404  0100               	movlb	0	; () banked
 11623  000406  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11624  000408  0E00               	movlw	0
 11625  00040A  0100               	movlb	0	; () banked
 11626  00040C  6F69               	movwf	(memcpy@n+1)& (0+255),b
 11627  00040E  0E04               	movlw	4
 11628  000410  6F68               	movwf	memcpy@n& (0+255),b
 11629  000412  ECCA  F048         	call	_memcpy	;wreg free
 11630                           
 11631                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11632  000416  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11633  00041A  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11634  00041E  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11635  000422  EC09  F046         	call	_ExtractMic	;wreg free
 11636  000426  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11637  00042A  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11638  00042E  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11639  000432  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11640                           
 11641                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 11642  000436  0103               	movlb	3	; () banked
 11643  000438  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11644  00043A  0103               	movlb	3	; () banked
 11645  00043C  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11646  00043E  E110               	bnz	u18060
 11647  000440  0103               	movlb	3	; () banked
 11648  000442  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11649  000444  0103               	movlb	3	; () banked
 11650  000446  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11651  000448  E10B               	bnz	u18060
 11652  00044A  0103               	movlb	3	; () banked
 11653  00044C  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11654  00044E  0103               	movlb	3	; () banked
 11655  000450  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11656  000452  E106               	bnz	u18060
 11657  000454  0103               	movlb	3	; () banked
 11658  000456  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11659  000458  0103               	movlb	3	; () banked
 11660  00045A  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11661  00045C  B4D8               	btfsc	status,2,c
 11662  00045E  D008               	goto	l15547
 11663  000460                     u18060:
 11664                           
 11665                           ; BSR set to: 3
 11666                           ;lorawan.c: 1218: {
 11667                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11668  000460  0102               	movlb	2	; () banked
 11669  000462  5102               	movf	(_loRa+2)& (0+255),w,b
 11670  000464  0BF0               	andlw	-16
 11671  000466  0909               	iorlw	9
 11672  000468  6F02               	movwf	(_loRa+2)& (0+255),b
 11673                           
 11674                           ; BSR set to: 2
 11675                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 11676  00046A  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11677                           
 11678                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 11679                           ;	Return value of _LORAWAN_RxDone is never used
 11680  00046E  0012               	return	
 11681  000470                     l15547:
 11682                           
 11683                           ;lorawan.c: 1222: }
 11684                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 11685  000470  0103               	movlb	3	; () banked
 11686  000472  EE20 F006          	lfsr	2,6
 11687  000476  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11688  000478  26D9               	addwf	fsr2l,f,c
 11689  00047A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11690  00047C  22DA               	addwfc	fsr2h,f,c
 11691  00047E  0102               	movlb	2	; () banked
 11692  000480  510E               	movf	(_loRa+14)& (0+255),w,b
 11693  000482  5CDE               	subwf	postinc2,w,c
 11694  000484  0102               	movlb	2	; () banked
 11695  000486  510F               	movf	(_loRa+15)& (0+255),w,b
 11696  000488  58DE               	subwfb	postinc2,w,c
 11697  00048A  A0D8               	btfss	status,0,c
 11698  00048C  D05A               	goto	l15565
 11699                           
 11700                           ; BSR set to: 2
 11701                           ;lorawan.c: 1225: {
 11702                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 11703  00048E  0103               	movlb	3	; () banked
 11704  000490  EE20 F006          	lfsr	2,6
 11705  000494  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11706  000496  26D9               	addwf	fsr2l,f,c
 11707  000498  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11708  00049A  22DA               	addwfc	fsr2h,f,c
 11709  00049C  CFDE F166          	movff	postinc2,??_LORAWAN_RxDone
 11710  0004A0  CFDD F167          	movff	postdec2,??_LORAWAN_RxDone+1
 11711  0004A4  EE22  F00E         	lfsr	2,_loRa+14
 11712  0004A8  CFDE F168          	movff	postinc2,??_LORAWAN_RxDone+2
 11713  0004AC  CFDD F169          	movff	postdec2,??_LORAWAN_RxDone+3
 11714  0004B0  0101               	movlb	1	; () banked
 11715  0004B2  1F68               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11716  0004B4  1F69               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11717  0004B6  4B68               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11718  0004B8  2B69               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11719  0004BA  0101               	movlb	1	; () banked
 11720  0004BC  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11721  0004BE  0101               	movlb	1	; () banked
 11722  0004C0  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11723  0004C2  0101               	movlb	1	; () banked
 11724  0004C4  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11725  0004C6  0101               	movlb	1	; () banked
 11726  0004C8  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11727  0004CA  0101               	movlb	1	; () banked
 11728  0004CC  5168               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11729  0004CE  0102               	movlb	2	; () banked
 11730  0004D0  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 11731  0004D2  0101               	movlb	1	; () banked
 11732  0004D4  5169               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11733  0004D6  0102               	movlb	2	; () banked
 11734  0004D8  599F               	subwfb	(_loRa+159)& (0+255),w,b
 11735  0004DA  B0D8               	btfsc	status,0,c
 11736  0004DC  D026               	goto	l15563
 11737                           
 11738                           ; BSR set to: 2
 11739                           ;lorawan.c: 1227: {
 11740                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 11741  0004DE  0100               	movlb	0	; () banked
 11742  0004E0  51F4               	movf	_rxPayload& (0+255),w,b
 11743  0004E2  0100               	movlb	0	; () banked
 11744  0004E4  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 11745  0004E6  B4D8               	btfsc	status,2,c
 11746  0004E8  D018               	goto	l15555
 11747                           
 11748                           ; BSR set to: 0
 11749                           ;lorawan.c: 1229: {
 11750                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11751  0004EA  0E00               	movlw	0
 11752  0004EC  0100               	movlb	0	; () banked
 11753  0004EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 11754  0004F0  0E00               	movlw	0
 11755  0004F2  0100               	movlb	0	; () banked
 11756  0004F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11757  0004F6  0E00               	movlw	0
 11758  0004F8  0100               	movlb	0	; () banked
 11759  0004FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11760  0004FC  0E05               	movlw	5
 11761  0004FE  0100               	movlb	0	; () banked
 11762  000500  6F6A               	movwf	RxDataDone@status& (0+255),b
 11763  000502  D801               	call	u18108
 11764  000504  D00A               	goto	l15555
 11765  000506                     u18108:
 11766  000506  0005               	push	
 11767  000508  6EFA               	movwf	pclath,c
 11768  00050A  0100               	movlb	0	; () banked
 11769  00050C  51F4               	movf	_rxPayload& (0+255),w,b
 11770  00050E  6EFD               	movwf	tosl,c
 11771  000510  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 11772  000512  6EFE               	movwf	tosh,c
 11773  000514  6AFF               	clrf	tosu,c
 11774  000516  50FA               	movf	pclath,w,c
 11775  000518  0012               	return		;indir
 11776  00051A                     l15555:
 11777                           
 11778                           ;lorawan.c: 1231: }
 11779                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11780  00051A  0102               	movlb	2	; () banked
 11781  00051C  5102               	movf	(_loRa+2)& (0+255),w,b
 11782  00051E  0BF0               	andlw	-16
 11783  000520  0909               	iorlw	9
 11784  000522  6F02               	movwf	(_loRa+2)& (0+255),b
 11785                           
 11786                           ; BSR set to: 2
 11787                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 11788  000524  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11789                           
 11790                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 11791                           ;	Return value of _LORAWAN_RxDone is never used
 11792  000528  0012               	return	
 11793  00052A                     l15563:
 11794                           
 11795                           ;lorawan.c: 1237: else
 11796                           ;lorawan.c: 1238: {
 11797                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11798  00052A  0103               	movlb	3	; () banked
 11799  00052C  EE20 F006          	lfsr	2,6
 11800  000530  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11801  000532  26D9               	addwf	fsr2l,f,c
 11802  000534  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11803  000536  22DA               	addwfc	fsr2h,f,c
 11804  000538  CFDE F20E          	movff	postinc2,_loRa+14
 11805  00053C  CFDD F20F          	movff	postdec2,_loRa+15
 11806                           
 11807                           ; BSR set to: 3
 11808                           ;lorawan.c: 1240: }
 11809                           ;lorawan.c: 1241: }
 11810  000540  D041               	goto	l15583
 11811  000542                     l15565:
 11812                           
 11813                           ;lorawan.c: 1242: else
 11814                           ;lorawan.c: 1243: {
 11815                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11816  000542  0103               	movlb	3	; () banked
 11817  000544  EE20 F006          	lfsr	2,6
 11818  000548  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11819  00054A  26D9               	addwf	fsr2l,f,c
 11820  00054C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11821  00054E  22DA               	addwfc	fsr2h,f,c
 11822  000550  50DE               	movf	postinc2,w,c
 11823  000552  10DE               	iorwf	postinc2,w,c
 11824  000554  A4D8               	btfss	status,2,c
 11825  000556  D010               	goto	l15573
 11826                           
 11827                           ; BSR set to: 3
 11828  000558  0102               	movlb	2	; () banked
 11829  00055A  290E               	incf	(_loRa+14)& (0+255),w,b
 11830  00055C  E10D               	bnz	l15573
 11831  00055E  0102               	movlb	2	; () banked
 11832  000560  290F               	incf	(_loRa+15)& (0+255),w,b
 11833  000562  A4D8               	btfss	status,2,c
 11834  000564  D009               	goto	l15573
 11835                           
 11836                           ; BSR set to: 2
 11837                           ;lorawan.c: 1245: {
 11838                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11839  000566  0E00               	movlw	0
 11840  000568  0102               	movlb	2	; () banked
 11841  00056A  6F0F               	movwf	(_loRa+15)& (0+255),b
 11842  00056C  0E00               	movlw	0
 11843  00056E  6F0E               	movwf	(_loRa+14)& (0+255),b
 11844                           
 11845                           ; BSR set to: 2
 11846                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11847  000570  0102               	movlb	2	; () banked
 11848  000572  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11849  000574  2B11               	incf	(_loRa+17)& (0+255),f,b
 11850                           
 11851                           ;lorawan.c: 1248: }
 11852  000576  D026               	goto	l15583
 11853  000578                     l15573:
 11854                           
 11855                           ;lorawan.c: 1249: else
 11856                           ;lorawan.c: 1250: {
 11857                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 11858  000578  0100               	movlb	0	; () banked
 11859  00057A  51F4               	movf	_rxPayload& (0+255),w,b
 11860  00057C  0100               	movlb	0	; () banked
 11861  00057E  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 11862  000580  B4D8               	btfsc	status,2,c
 11863  000582  D018               	goto	l15577
 11864                           
 11865                           ; BSR set to: 0
 11866                           ;lorawan.c: 1252: {
 11867                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11868  000584  0E00               	movlw	0
 11869  000586  0100               	movlb	0	; () banked
 11870  000588  6F67               	movwf	RxDataDone@pData& (0+255),b
 11871  00058A  0E00               	movlw	0
 11872  00058C  0100               	movlb	0	; () banked
 11873  00058E  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11874  000590  0E00               	movlw	0
 11875  000592  0100               	movlb	0	; () banked
 11876  000594  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11877  000596  0E05               	movlw	5
 11878  000598  0100               	movlb	0	; () banked
 11879  00059A  6F6A               	movwf	RxDataDone@status& (0+255),b
 11880  00059C  D801               	call	u18148
 11881  00059E  D00A               	goto	l15577
 11882  0005A0                     u18148:
 11883  0005A0  0005               	push	
 11884  0005A2  6EFA               	movwf	pclath,c
 11885  0005A4  0100               	movlb	0	; () banked
 11886  0005A6  51F4               	movf	_rxPayload& (0+255),w,b
 11887  0005A8  6EFD               	movwf	tosl,c
 11888  0005AA  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 11889  0005AC  6EFE               	movwf	tosh,c
 11890  0005AE  6AFF               	clrf	tosu,c
 11891  0005B0  50FA               	movf	pclath,w,c
 11892  0005B2  0012               	return		;indir
 11893  0005B4                     l15577:
 11894                           
 11895                           ;lorawan.c: 1254: }
 11896                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11897  0005B4  0102               	movlb	2	; () banked
 11898  0005B6  5102               	movf	(_loRa+2)& (0+255),w,b
 11899  0005B8  0BF0               	andlw	-16
 11900  0005BA  0909               	iorlw	9
 11901  0005BC  6F02               	movwf	(_loRa+2)& (0+255),b
 11902                           
 11903                           ; BSR set to: 2
 11904                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 11905  0005BE  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11906                           
 11907                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 11908                           ;	Return value of _LORAWAN_RxDone is never used
 11909  0005C2  0012               	return	
 11910  0005C4                     l15583:
 11911                           
 11912                           ;lorawan.c: 1259: }
 11913                           ;lorawan.c: 1260: }
 11914                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11915  0005C4  0102               	movlb	2	; () banked
 11916  0005C6  290E               	incf	(_loRa+14)& (0+255),w,b
 11917  0005C8  E130               	bnz	l15595
 11918  0005CA  0102               	movlb	2	; () banked
 11919  0005CC  290F               	incf	(_loRa+15)& (0+255),w,b
 11920  0005CE  E12D               	bnz	l15595
 11921  0005D0  0102               	movlb	2	; () banked
 11922  0005D2  2910               	incf	(_loRa+16)& (0+255),w,b
 11923  0005D4  E12A               	bnz	l15595
 11924  0005D6  0102               	movlb	2	; () banked
 11925  0005D8  2911               	incf	(_loRa+17)& (0+255),w,b
 11926  0005DA  A4D8               	btfss	status,2,c
 11927  0005DC  D026               	goto	l15595
 11928                           
 11929                           ; BSR set to: 2
 11930                           ;lorawan.c: 1263: {
 11931                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 11932  0005DE  0100               	movlb	0	; () banked
 11933  0005E0  51F4               	movf	_rxPayload& (0+255),w,b
 11934  0005E2  0100               	movlb	0	; () banked
 11935  0005E4  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 11936  0005E6  B4D8               	btfsc	status,2,c
 11937  0005E8  D018               	goto	l15589
 11938                           
 11939                           ; BSR set to: 0
 11940                           ;lorawan.c: 1265: {
 11941                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11942  0005EA  0E00               	movlw	0
 11943  0005EC  0100               	movlb	0	; () banked
 11944  0005EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 11945  0005F0  0E00               	movlw	0
 11946  0005F2  0100               	movlb	0	; () banked
 11947  0005F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11948  0005F6  0E00               	movlw	0
 11949  0005F8  0100               	movlb	0	; () banked
 11950  0005FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11951  0005FC  0E05               	movlw	5
 11952  0005FE  0100               	movlb	0	; () banked
 11953  000600  6F6A               	movwf	RxDataDone@status& (0+255),b
 11954  000602  D801               	call	u18178
 11955  000604  D00A               	goto	l15589
 11956  000606                     u18178:
 11957  000606  0005               	push	
 11958  000608  6EFA               	movwf	pclath,c
 11959  00060A  0100               	movlb	0	; () banked
 11960  00060C  51F4               	movf	_rxPayload& (0+255),w,b
 11961  00060E  6EFD               	movwf	tosl,c
 11962  000610  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 11963  000612  6EFE               	movwf	tosh,c
 11964  000614  6AFF               	clrf	tosu,c
 11965  000616  50FA               	movf	pclath,w,c
 11966  000618  0012               	return		;indir
 11967  00061A                     l15589:
 11968                           
 11969                           ;lorawan.c: 1267: }
 11970                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11971  00061A  0102               	movlb	2	; () banked
 11972  00061C  5102               	movf	(_loRa+2)& (0+255),w,b
 11973  00061E  0BF0               	andlw	-16
 11974  000620  0909               	iorlw	9
 11975  000622  6F02               	movwf	(_loRa+2)& (0+255),b
 11976                           
 11977                           ; BSR set to: 2
 11978                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 11979  000624  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11980                           
 11981                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 11982                           ;	Return value of _LORAWAN_RxDone is never used
 11983  000628  0012               	return	
 11984  00062A                     l15595:
 11985                           
 11986                           ;lorawan.c: 1272: }
 11987                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11988  00062A  0102               	movlb	2	; () banked
 11989  00062C  5102               	movf	(_loRa+2)& (0+255),w,b
 11990  00062E  0B0F               	andlw	15
 11991  000630  0A08               	xorlw	8
 11992  000632  A4D8               	btfss	status,2,c
 11993  000634  D009               	goto	l15599
 11994                           
 11995                           ; BSR set to: 2
 11996                           ;lorawan.c: 1275: {
 11997                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11998  000636  0102               	movlb	2	; () banked
 11999  000638  51E4               	movf	(_loRa+228)& (0+255),w,b
 12000  00063A  EC39  F04F         	call	_SwTimerStop
 12001                           
 12002                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 12003  00063E  0102               	movlb	2	; () banked
 12004  000640  51E5               	movf	(_loRa+229)& (0+255),w,b
 12005  000642  EC39  F04F         	call	_SwTimerStop
 12006                           
 12007                           ;lorawan.c: 1278: }
 12008  000646  D00A               	goto	l15603
 12009  000648                     l15599:
 12010                           
 12011                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 12012  000648  0102               	movlb	2	; () banked
 12013  00064A  5102               	movf	(_loRa+2)& (0+255),w,b
 12014  00064C  0B0F               	andlw	15
 12015  00064E  0A03               	xorlw	3
 12016  000650  A4D8               	btfss	status,2,c
 12017  000652  D004               	goto	l15603
 12018                           
 12019                           ; BSR set to: 2
 12020                           ;lorawan.c: 1280: {
 12021                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 12022  000654  0102               	movlb	2	; () banked
 12023  000656  51E5               	movf	(_loRa+229)& (0+255),w,b
 12024  000658  EC39  F04F         	call	_SwTimerStop
 12025  00065C                     l15603:
 12026                           
 12027                           ;lorawan.c: 1282: }
 12028                           ;lorawan.c: 1284: buffer = buffer + 8;
 12029  00065C  0E08               	movlw	8
 12030  00065E  0100               	movlb	0	; () banked
 12031  000660  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12032  000662  0100               	movlb	0	; () banked
 12033  000664  6FEE               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12034  000666  0E00               	movlw	0
 12035  000668  0100               	movlb	0	; () banked
 12036  00066A  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12037  00066C  0100               	movlb	0	; () banked
 12038  00066E  6FEF               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12042  000670  0100               	movlb	0	; () banked
 12043  000672  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12044  000674  0101               	movlb	1	; () banked
 12045  000676  6F66               	movwf	??_LORAWAN_RxDone& (0+255),b
 12046  000678  6B67               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12047  00067A  0103               	movlb	3	; () banked
 12048  00067C  EE20 F005          	lfsr	2,5
 12049  000680  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12050  000682  26D9               	addwf	fsr2l,f,c
 12051  000684  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12052  000686  22DA               	addwfc	fsr2h,f,c
 12053  000688  0103               	movlb	3	; () banked
 12054  00068A  50DF               	movf	223,w,c
 12055  00068C  0B0F               	andlw	15
 12056  00068E  0101               	movlb	1	; () banked
 12057  000690  6F68               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12058  000692  6B69               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12059  000694  0E0C               	movlw	12
 12060  000696  0101               	movlb	1	; () banked
 12061  000698  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12062  00069A  0E00               	movlw	0
 12063  00069C  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12064  00069E  0101               	movlb	1	; () banked
 12065  0006A0  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12066  0006A2  0101               	movlb	1	; () banked
 12067  0006A4  1968               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12068  0006A6  E106               	bnz	u18200
 12069  0006A8  0101               	movlb	1	; () banked
 12070  0006AA  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12071  0006AC  0101               	movlb	1	; () banked
 12072  0006AE  1969               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12073  0006B0  B4D8               	btfsc	status,2,c
 12074  0006B2  D041               	goto	l15619
 12075  0006B4                     u18200:
 12076                           
 12077                           ; BSR set to: 1
 12078                           ;lorawan.c: 1287: {
 12079                           ;lorawan.c: 1288: fPort = *(buffer++);
 12080  0006B4  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12081  0006B8  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12082  0006BC  50DF               	movf	indf2,w,c
 12083  0006BE  0103               	movlb	3	; () banked
 12084  0006C0  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12085                           
 12086                           ; BSR set to: 3
 12087  0006C2  0100               	movlb	0	; () banked
 12088  0006C4  4BEE               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12089  0006C6  2BEF               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12090                           
 12091                           ; BSR set to: 0
 12092                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 12093  0006C8  0100               	movlb	0	; () banked
 12094  0006CA  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12095  0006CC  0FF4               	addlw	244
 12096  0006CE  0103               	movlb	3	; () banked
 12097  0006D0  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12098                           
 12099                           ; BSR set to: 3
 12100                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 12101  0006D2  0E19               	movlw	25
 12102  0006D4  0103               	movlb	3	; () banked
 12103  0006D6  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12104                           
 12105                           ; BSR set to: 3
 12106                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 12107  0006D8  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12108  0006DC  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12109  0006E0  0103               	movlb	3	; () banked
 12110  0006E2  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12111  0006E4  0100               	movlb	0	; () banked
 12112  0006E6  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12113  0006E8  0E01               	movlw	1
 12114  0006EA  0100               	movlb	0	; () banked
 12115  0006EC  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 12116  0006EE  C20E  F0A9         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 12117  0006F2  C20F  F0AA         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 12118  0006F6  C210  F0AB         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 12119  0006FA  C211  F0AC         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 12120  0006FE  0E76               	movlw	low (_loRa+118)
 12121  000700  0100               	movlb	0	; () banked
 12122  000702  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 12123  000704  0E02               	movlw	high (_loRa+118)
 12124  000706  0100               	movlb	0	; () banked
 12125  000708  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12126  00070A  C3A7  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12127  00070E  0EEF               	movlw	low _radioBuffer
 12128  000710  0100               	movlb	0	; () banked
 12129  000712  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12130  000714  0E05               	movlw	high _radioBuffer
 12131  000716  0100               	movlb	0	; () banked
 12132  000718  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12133  00071A  0E01               	movlw	1
 12134  00071C  0100               	movlb	0	; () banked
 12135  00071E  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12136  000720  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 12137                           
 12138                           ;lorawan.c: 1294: packet = buffer - 1;
 12139  000724  0EFF               	movlw	255
 12140  000726  0100               	movlb	0	; () banked
 12141  000728  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12142  00072A  0103               	movlb	3	; () banked
 12143  00072C  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12144  00072E  0EFF               	movlw	255
 12145  000730  0100               	movlb	0	; () banked
 12146  000732  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12147  000734  D007               	goto	L6
 12148  000736                     l15619:
 12149                           
 12150                           ;lorawan.c: 1296: else
 12151                           ;lorawan.c: 1297: {
 12152                           ;lorawan.c: 1298: frmPayloadLength = 0;
 12153  000736  0E00               	movlw	0
 12154  000738  0103               	movlb	3	; () banked
 12155  00073A  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12156                           
 12157                           ; BSR set to: 3
 12158                           ;lorawan.c: 1299: packet = (0);
 12159  00073C  0E00               	movlw	0
 12160  00073E  0103               	movlb	3	; () banked
 12161  000740  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12162  000742  0E00               	movlw	0
 12163  000744                     L6:
 12164  000744  0103               	movlb	3	; () banked
 12165  000746  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12166                           
 12167                           ; BSR set to: 3
 12168                           ;lorawan.c: 1300: }
 12169                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 12170                           
 12171                           ; BSR set to: 3
 12172  000748  0102               	movlb	2	; () banked
 12173  00074A  8303               	bsf	(_loRa+3)& (0+255),1,b
 12174                           
 12175                           ; BSR set to: 2
 12176                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 12177  00074C  0102               	movlb	2	; () banked
 12178  00074E  9102               	bcf	(_loRa+2)& (0+255),0,b
 12179  000750  9302               	bcf	(_loRa+2)& (0+255),1,b
 12180  000752  9502               	bcf	(_loRa+2)& (0+255),2,b
 12181  000754  9702               	bcf	(_loRa+2)& (0+255),3,b
 12182                           
 12183                           ; BSR set to: 2
 12184                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 12185  000756  0100               	movlb	0	; () banked
 12186  000758  51F4               	movf	_rxPayload& (0+255),w,b
 12187  00075A  0100               	movlb	0	; () banked
 12188  00075C  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 12189  00075E  B4D8               	btfsc	status,2,c
 12190  000760  D015               	goto	l15631
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;lorawan.c: 1306: {
 12194                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12195  000762  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12196  000766  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12197  00076A  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12198  00076E  0E01               	movlw	1
 12199  000770  0100               	movlb	0	; () banked
 12200  000772  6F6A               	movwf	RxDataDone@status& (0+255),b
 12201  000774  D801               	call	u18228
 12202  000776  D00A               	goto	l15631
 12203  000778                     u18228:
 12204  000778  0005               	push	
 12205  00077A  6EFA               	movwf	pclath,c
 12206  00077C  0100               	movlb	0	; () banked
 12207  00077E  51F4               	movf	_rxPayload& (0+255),w,b
 12208  000780  6EFD               	movwf	tosl,c
 12209  000782  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 12210  000784  6EFE               	movwf	tosh,c
 12211  000786  6AFF               	clrf	tosu,c
 12212  000788  50FA               	movf	pclath,w,c
 12213  00078A  0012               	return		;indir
 12214  00078C                     l15631:
 12215                           
 12216                           ;lorawan.c: 1308: }
 12217                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12218  00078C  0102               	movlb	2	; () banked
 12219  00078E  5102               	movf	(_loRa+2)& (0+255),w,b
 12220  000790  0BF0               	andlw	-16
 12221  000792  0909               	iorlw	9
 12222  000794  6F02               	movwf	(_loRa+2)& (0+255),b
 12223                           
 12224                           ; BSR set to: 2
 12225                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 12226  000796  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12227                           
 12228                           ;lorawan.c: 1312: return MAC_OK;
 12229                           ;	Return value of _LORAWAN_RxDone is never used
 12230  00079A  0012               	return	
 12231  00079C                     l15637:
 12232                           
 12233                           ;lorawan.c: 1313: }
 12234                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 12235  00079C  0103               	movlb	3	; () banked
 12236  00079E  EE20 F001          	lfsr	2,1
 12237  0007A2  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12238  0007A4  26D9               	addwf	fsr2l,f,c
 12239  0007A6  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12240  0007A8  22DA               	addwfc	fsr2h,f,c
 12241  0007AA  0102               	movlb	2	; () banked
 12242  0007AC  511E               	movf	(_loRa+30)& (0+255),w,b
 12243  0007AE  18DE               	xorwf	postinc2,w,c
 12244  0007B0  E10D               	bnz	u18230
 12245  0007B2  0102               	movlb	2	; () banked
 12246  0007B4  511F               	movf	(_loRa+31)& (0+255),w,b
 12247  0007B6  18DE               	xorwf	postinc2,w,c
 12248  0007B8  E109               	bnz	u18230
 12249  0007BA  0102               	movlb	2	; () banked
 12250  0007BC  5120               	movf	(_loRa+32)& (0+255),w,b
 12251  0007BE  18DE               	xorwf	postinc2,w,c
 12252  0007C0  E105               	bnz	u18230
 12253  0007C2  0102               	movlb	2	; () banked
 12254  0007C4  5121               	movf	(_loRa+33)& (0+255),w,b
 12255  0007C6  18DE               	xorwf	postinc2,w,c
 12256  0007C8  B4D8               	btfsc	status,2,c
 12257  0007CA  D00F               	goto	l15649
 12258  0007CC                     u18230:
 12259                           
 12260                           ; BSR set to: 2
 12261                           ;lorawan.c: 1317: {
 12262                           ;lorawan.c: 1318: SetReceptionNotOkState();
 12263  0007CC  ECA1  F043         	call	_SetReceptionNotOkState	;wreg free
 12264                           
 12265                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 12266  0007D0  0E02               	movlw	2
 12267  0007D2  0102               	movlb	2	; () banked
 12268  0007D4  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12269  0007D6  A4D8               	btfss	status,2,c
 12270  0007D8  0012               	return	
 12271                           
 12272                           ; BSR set to: 2
 12273                           ;lorawan.c: 1320: {
 12274                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12275  0007DA  0102               	movlb	2	; () banked
 12276  0007DC  5102               	movf	(_loRa+2)& (0+255),w,b
 12277  0007DE  0BF0               	andlw	-16
 12278  0007E0  0909               	iorlw	9
 12279  0007E2  6F02               	movwf	(_loRa+2)& (0+255),b
 12280                           
 12281                           ; BSR set to: 2
 12282                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 12283  0007E4  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12284                           
 12285                           ;lorawan.c: 1323: }
 12286                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 12287                           ;	Return value of _LORAWAN_RxDone is never used
 12288  0007E8  0012               	return	
 12289  0007EA                     l15649:
 12290                           
 12291                           ;lorawan.c: 1325: }
 12292                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 12293  0007EA  0103               	movlb	3	; () banked
 12294  0007EC  EE20 F006          	lfsr	2,6
 12295  0007F0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12296  0007F2  26D9               	addwf	fsr2l,f,c
 12297  0007F4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12298  0007F6  22DA               	addwfc	fsr2h,f,c
 12299  0007F8  CFDE F166          	movff	postinc2,??_LORAWAN_RxDone
 12300  0007FC  CFDD F167          	movff	postdec2,??_LORAWAN_RxDone+1
 12301  000800  C166  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12302  000804  C167  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12303  000808  0100               	movlb	0	; () banked
 12304  00080A  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12305  00080C  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12306  00080E  0100               	movlb	0	; () banked
 12307  000810  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12308  000812  0FFC               	addlw	252
 12309  000814  0100               	movlb	0	; () banked
 12310  000816  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12311  000818  0E49               	movlw	73
 12312  00081A  0100               	movlb	0	; () banked
 12313  00081C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12314  00081E  0E00               	movlw	0
 12315  000820  0100               	movlb	0	; () banked
 12316  000822  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12317  000824  0E01               	movlw	1
 12318  000826  EC0F  F036         	call	_AssembleEncryptionBlock
 12319                           
 12320                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12321  00082A  0EEF               	movlw	low _radioBuffer
 12322  00082C  0100               	movlb	0	; () banked
 12323  00082E  6F64               	movwf	memcpy@d1& (0+255),b
 12324  000830  0E05               	movlw	high _radioBuffer
 12325  000832  0100               	movlb	0	; () banked
 12326  000834  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12327  000836  0EAA               	movlw	low _aesBuffer
 12328  000838  0100               	movlb	0	; () banked
 12329  00083A  6F66               	movwf	memcpy@s1& (0+255),b
 12330  00083C  0E01               	movlw	high _aesBuffer
 12331  00083E  0100               	movlb	0	; () banked
 12332  000840  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 12333  000842  0E00               	movlw	0
 12334  000844  0100               	movlb	0	; () banked
 12335  000846  6F69               	movwf	(memcpy@n+1)& (0+255),b
 12336  000848  0E10               	movlw	16
 12337  00084A  6F68               	movwf	memcpy@n& (0+255),b
 12338  00084C  ECCA  F048         	call	_memcpy	;wreg free
 12339                           
 12340                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12341  000850  0EFF               	movlw	low (_radioBuffer+16)
 12342  000852  0100               	movlb	0	; () banked
 12343  000854  6F64               	movwf	memcpy@d1& (0+255),b
 12344  000856  0E05               	movlw	high (_radioBuffer+16)
 12345  000858  0100               	movlb	0	; () banked
 12346  00085A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12347  00085C  C0EE  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12348  000860  C0EF  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12349  000864  0EFC               	movlw	252
 12350  000866  0100               	movlb	0	; () banked
 12351  000868  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12352  00086A  0100               	movlb	0	; () banked
 12353  00086C  6F68               	movwf	memcpy@n& (0+255),b
 12354  00086E  0100               	movlb	0	; () banked
 12355  000870  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12356  000872  0EFF               	movlw	255
 12357  000874  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 12358  000876  ECCA  F048         	call	_memcpy	;wreg free
 12359                           
 12360                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12361  00087A  0E22               	movlw	low (_loRa+34)
 12362  00087C  0100               	movlb	0	; () banked
 12363  00087E  6FCD               	movwf	AESCmac@key& (0+255),b
 12364  000880  0E02               	movlw	high (_loRa+34)
 12365  000882  0100               	movlb	0	; () banked
 12366  000884  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 12367  000886  0EAA               	movlw	low _aesBuffer
 12368  000888  0100               	movlb	0	; () banked
 12369  00088A  6FCF               	movwf	AESCmac@output& (0+255),b
 12370  00088C  0E01               	movlw	high _aesBuffer
 12371  00088E  0100               	movlb	0	; () banked
 12372  000890  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 12373  000892  0EEF               	movlw	low _radioBuffer
 12374  000894  0100               	movlb	0	; () banked
 12375  000896  6FD1               	movwf	AESCmac@input& (0+255),b
 12376  000898  0E05               	movlw	high _radioBuffer
 12377  00089A  0100               	movlb	0	; () banked
 12378  00089C  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 12379  00089E  0100               	movlb	0	; () banked
 12380  0008A0  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12381  0008A2  0F0C               	addlw	12
 12382  0008A4  0100               	movlb	0	; () banked
 12383  0008A6  6FD3               	movwf	AESCmac@size& (0+255),b
 12384  0008A8  EC13  F016         	call	_AESCmac	;wreg free
 12385                           
 12386                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12387  0008AC  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 12388  0008AE  0100               	movlb	0	; () banked
 12389  0008B0  6F64               	movwf	memcpy@d1& (0+255),b
 12390  0008B2  0E03               	movlw	high LORAWAN_RxDone@computedMic
 12391  0008B4  0100               	movlb	0	; () banked
 12392  0008B6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12393  0008B8  0EAA               	movlw	low _aesBuffer
 12394  0008BA  0100               	movlb	0	; () banked
 12395  0008BC  6F66               	movwf	memcpy@s1& (0+255),b
 12396  0008BE  0E01               	movlw	high _aesBuffer
 12397  0008C0  0100               	movlb	0	; () banked
 12398  0008C2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 12399  0008C4  0E00               	movlw	0
 12400  0008C6  0100               	movlb	0	; () banked
 12401  0008C8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 12402  0008CA  0E04               	movlw	4
 12403  0008CC  6F68               	movwf	memcpy@n& (0+255),b
 12404  0008CE  ECCA  F048         	call	_memcpy	;wreg free
 12405                           
 12406                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12407  0008D2  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12408  0008D6  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12409  0008DA  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12410  0008DE  EC09  F046         	call	_ExtractMic	;wreg free
 12411  0008E2  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12412  0008E6  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12413  0008EA  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12414  0008EE  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12415                           
 12416                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 12417  0008F2  0103               	movlb	3	; () banked
 12418  0008F4  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12419  0008F6  0103               	movlb	3	; () banked
 12420  0008F8  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12421  0008FA  E110               	bnz	u18250
 12422  0008FC  0103               	movlb	3	; () banked
 12423  0008FE  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12424  000900  0103               	movlb	3	; () banked
 12425  000902  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12426  000904  E10B               	bnz	u18250
 12427  000906  0103               	movlb	3	; () banked
 12428  000908  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12429  00090A  0103               	movlb	3	; () banked
 12430  00090C  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12431  00090E  E106               	bnz	u18250
 12432  000910  0103               	movlb	3	; () banked
 12433  000912  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12434  000914  0103               	movlb	3	; () banked
 12435  000916  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12436  000918  B4D8               	btfsc	status,2,c
 12437  00091A  D00F               	goto	l15671
 12438  00091C                     u18250:
 12439                           
 12440                           ; BSR set to: 3
 12441                           ;lorawan.c: 1337: {
 12442                           ;lorawan.c: 1338: SetReceptionNotOkState();
 12443  00091C  ECA1  F043         	call	_SetReceptionNotOkState	;wreg free
 12444                           
 12445                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 12446  000920  0E02               	movlw	2
 12447  000922  0102               	movlb	2	; () banked
 12448  000924  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12449  000926  A4D8               	btfss	status,2,c
 12450  000928  0012               	return	
 12451                           
 12452                           ; BSR set to: 2
 12453                           ;lorawan.c: 1340: {
 12454                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12455  00092A  0102               	movlb	2	; () banked
 12456  00092C  5102               	movf	(_loRa+2)& (0+255),w,b
 12457  00092E  0BF0               	andlw	-16
 12458  000930  0909               	iorlw	9
 12459  000932  6F02               	movwf	(_loRa+2)& (0+255),b
 12460                           
 12461                           ; BSR set to: 2
 12462                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 12463  000934  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12464                           
 12465                           ;lorawan.c: 1343: }
 12466                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 12467                           ;	Return value of _LORAWAN_RxDone is never used
 12468  000938  0012               	return	
 12469  00093A                     l15671:
 12470                           
 12471                           ;lorawan.c: 1345: }
 12472                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 12473  00093A  0103               	movlb	3	; () banked
 12474  00093C  EE20 F006          	lfsr	2,6
 12475  000940  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12476  000942  26D9               	addwf	fsr2l,f,c
 12477  000944  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12478  000946  22DA               	addwfc	fsr2h,f,c
 12479  000948  0102               	movlb	2	; () banked
 12480  00094A  510A               	movf	(_loRa+10)& (0+255),w,b
 12481  00094C  5CDE               	subwf	postinc2,w,c
 12482  00094E  0102               	movlb	2	; () banked
 12483  000950  510B               	movf	(_loRa+11)& (0+255),w,b
 12484  000952  58DE               	subwfb	postinc2,w,c
 12485  000954  A0D8               	btfss	status,0,c
 12486  000956  D06C               	goto	l15699
 12487                           
 12488                           ; BSR set to: 2
 12489                           ;lorawan.c: 1349: {
 12490                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 12491  000958  0103               	movlb	3	; () banked
 12492  00095A  EE20 F006          	lfsr	2,6
 12493  00095E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12494  000960  26D9               	addwf	fsr2l,f,c
 12495  000962  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12496  000964  22DA               	addwfc	fsr2h,f,c
 12497  000966  CFDE F166          	movff	postinc2,??_LORAWAN_RxDone
 12498  00096A  CFDD F167          	movff	postdec2,??_LORAWAN_RxDone+1
 12499  00096E  EE22  F00A         	lfsr	2,_loRa+10
 12500  000972  CFDE F168          	movff	postinc2,??_LORAWAN_RxDone+2
 12501  000976  CFDD F169          	movff	postdec2,??_LORAWAN_RxDone+3
 12502  00097A  0101               	movlb	1	; () banked
 12503  00097C  1F68               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12504  00097E  1F69               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12505  000980  4B68               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12506  000982  2B69               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12507  000984  0101               	movlb	1	; () banked
 12508  000986  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12509  000988  0101               	movlb	1	; () banked
 12510  00098A  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12511  00098C  0101               	movlb	1	; () banked
 12512  00098E  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12513  000990  0101               	movlb	1	; () banked
 12514  000992  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12515  000994  0101               	movlb	1	; () banked
 12516  000996  5168               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12517  000998  0102               	movlb	2	; () banked
 12518  00099A  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 12519  00099C  0101               	movlb	1	; () banked
 12520  00099E  5169               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12521  0009A0  0102               	movlb	2	; () banked
 12522  0009A2  599D               	subwfb	(_loRa+157)& (0+255),w,b
 12523  0009A4  B0D8               	btfsc	status,0,c
 12524  0009A6  D038               	goto	l15697
 12525                           
 12526                           ; BSR set to: 2
 12527                           ;lorawan.c: 1351: {
 12528                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12529  0009A8  0102               	movlb	2	; () banked
 12530  0009AA  9100               	bcf	_loRa& (0+255),0,b
 12531                           
 12532                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 12533  0009AC  0102               	movlb	2	; () banked
 12534  0009AE  9102               	bcf	(_loRa+2)& (0+255),0,b
 12535  0009B0  9302               	bcf	(_loRa+2)& (0+255),1,b
 12536  0009B2  9502               	bcf	(_loRa+2)& (0+255),2,b
 12537  0009B4  9702               	bcf	(_loRa+2)& (0+255),3,b
 12538                           
 12539                           ; BSR set to: 2
 12540                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 12541  0009B6  0100               	movlb	0	; () banked
 12542  0009B8  51F4               	movf	_rxPayload& (0+255),w,b
 12543  0009BA  0100               	movlb	0	; () banked
 12544  0009BC  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 12545  0009BE  B4D8               	btfsc	status,2,c
 12546  0009C0  D01A               	goto	l15683
 12547                           
 12548                           ; BSR set to: 0
 12549                           ;lorawan.c: 1355: {
 12550                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 12551  0009C2  0102               	movlb	2	; () banked
 12552  0009C4  9B00               	bcf	_loRa& (0+255),5,b
 12553                           
 12554                           ; BSR set to: 2
 12555                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 12556  0009C6  0E00               	movlw	0
 12557  0009C8  0100               	movlb	0	; () banked
 12558  0009CA  6F67               	movwf	RxDataDone@pData& (0+255),b
 12559  0009CC  0E00               	movlw	0
 12560  0009CE  0100               	movlb	0	; () banked
 12561  0009D0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 12562  0009D2  0E00               	movlw	0
 12563  0009D4  0100               	movlb	0	; () banked
 12564  0009D6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 12565  0009D8  0E00               	movlw	0
 12566  0009DA  0100               	movlb	0	; () banked
 12567  0009DC  6F6A               	movwf	RxDataDone@status& (0+255),b
 12568  0009DE  D801               	call	u18308
 12569  0009E0  D00A               	goto	l15683
 12570  0009E2                     u18308:
 12571  0009E2  0005               	push	
 12572  0009E4  6EFA               	movwf	pclath,c
 12573  0009E6  0100               	movlb	0	; () banked
 12574  0009E8  51F4               	movf	_rxPayload& (0+255),w,b
 12575  0009EA  6EFD               	movwf	tosl,c
 12576  0009EC  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 12577  0009EE  6EFE               	movwf	tosh,c
 12578  0009F0  6AFF               	clrf	tosu,c
 12579  0009F2  50FA               	movf	pclath,w,c
 12580  0009F4  0012               	return		;indir
 12581  0009F6                     l15683:
 12582                           
 12583                           ;lorawan.c: 1358: }
 12584                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 12585  0009F6  0102               	movlb	2	; () banked
 12586  0009F8  9303               	bcf	(_loRa+3)& (0+255),1,b
 12587                           
 12588                           ; BSR set to: 2
 12589                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 12590  0009FA  0102               	movlb	2	; () banked
 12591  0009FC  8304               	bsf	(_loRa+4)& (0+255),1,b
 12592                           
 12593                           ; BSR set to: 2
 12594                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 12595  0009FE  0E02               	movlw	2
 12596  000A00  0102               	movlb	2	; () banked
 12597  000A02  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12598  000A04  A4D8               	btfss	status,2,c
 12599  000A06  0012               	return	
 12600                           
 12601                           ; BSR set to: 2
 12602                           ;lorawan.c: 1364: {
 12603                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12604  000A08  0102               	movlb	2	; () banked
 12605  000A0A  5102               	movf	(_loRa+2)& (0+255),w,b
 12606  000A0C  0BF0               	andlw	-16
 12607  000A0E  0909               	iorlw	9
 12608  000A10  6F02               	movwf	(_loRa+2)& (0+255),b
 12609                           
 12610                           ; BSR set to: 2
 12611                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 12612  000A12  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12613                           
 12614                           ;lorawan.c: 1367: }
 12615                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12616                           ;	Return value of _LORAWAN_RxDone is never used
 12617  000A16  0012               	return	
 12618  000A18                     l15697:
 12619                           
 12620                           ;lorawan.c: 1370: else
 12621                           ;lorawan.c: 1371: {
 12622                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12623  000A18  0103               	movlb	3	; () banked
 12624  000A1A  EE20 F006          	lfsr	2,6
 12625  000A1E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12626  000A20  26D9               	addwf	fsr2l,f,c
 12627  000A22  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12628  000A24  22DA               	addwfc	fsr2h,f,c
 12629  000A26  CFDE F20A          	movff	postinc2,_loRa+10
 12630  000A2A  CFDD F20B          	movff	postdec2,_loRa+11
 12631                           
 12632                           ; BSR set to: 3
 12633                           ;lorawan.c: 1373: }
 12634                           ;lorawan.c: 1374: }
 12635  000A2E  D030               	goto	l15717
 12636  000A30                     l15699:
 12637                           
 12638                           ;lorawan.c: 1375: else
 12639                           ;lorawan.c: 1376: {
 12640                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 12641  000A30  0103               	movlb	3	; () banked
 12642  000A32  EE20 F006          	lfsr	2,6
 12643  000A36  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12644  000A38  26D9               	addwf	fsr2l,f,c
 12645  000A3A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12646  000A3C  22DA               	addwfc	fsr2h,f,c
 12647  000A3E  50DE               	movf	postinc2,w,c
 12648  000A40  10DE               	iorwf	postinc2,w,c
 12649  000A42  A4D8               	btfss	status,2,c
 12650  000A44  D016               	goto	l15707
 12651                           
 12652                           ; BSR set to: 3
 12653  000A46  0102               	movlb	2	; () banked
 12654  000A48  290A               	incf	(_loRa+10)& (0+255),w,b
 12655  000A4A  E113               	bnz	l15707
 12656  000A4C  0102               	movlb	2	; () banked
 12657  000A4E  290B               	incf	(_loRa+11)& (0+255),w,b
 12658  000A50  A4D8               	btfss	status,2,c
 12659  000A52  D00F               	goto	l15707
 12660                           
 12661                           ; BSR set to: 2
 12662                           ;lorawan.c: 1378: {
 12663                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12664  000A54  0103               	movlb	3	; () banked
 12665  000A56  EE20 F006          	lfsr	2,6
 12666  000A5A  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12667  000A5C  26D9               	addwf	fsr2l,f,c
 12668  000A5E  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12669  000A60  22DA               	addwfc	fsr2h,f,c
 12670  000A62  CFDE F20A          	movff	postinc2,_loRa+10
 12671  000A66  CFDD F20B          	movff	postdec2,_loRa+11
 12672                           
 12673                           ; BSR set to: 3
 12674                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 12675  000A6A  0102               	movlb	2	; () banked
 12676  000A6C  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 12677  000A6E  2B0D               	incf	(_loRa+13)& (0+255),f,b
 12678                           
 12679                           ;lorawan.c: 1382: }
 12680  000A70  D00F               	goto	l15717
 12681  000A72                     l15707:
 12682                           
 12683                           ;lorawan.c: 1383: else
 12684                           ;lorawan.c: 1384: {
 12685                           ;lorawan.c: 1385: SetReceptionNotOkState();
 12686  000A72  ECA1  F043         	call	_SetReceptionNotOkState	;wreg free
 12687                           
 12688                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 12689  000A76  0E02               	movlw	2
 12690  000A78  0102               	movlb	2	; () banked
 12691  000A7A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12692  000A7C  A4D8               	btfss	status,2,c
 12693  000A7E  0012               	return	
 12694                           
 12695                           ; BSR set to: 2
 12696                           ;lorawan.c: 1387: {
 12697                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12698  000A80  0102               	movlb	2	; () banked
 12699  000A82  5102               	movf	(_loRa+2)& (0+255),w,b
 12700  000A84  0BF0               	andlw	-16
 12701  000A86  0909               	iorlw	9
 12702  000A88  6F02               	movwf	(_loRa+2)& (0+255),b
 12703                           
 12704                           ; BSR set to: 2
 12705                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 12706  000A8A  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12707                           
 12708                           ;lorawan.c: 1390: }
 12709                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 12710                           ;	Return value of _LORAWAN_RxDone is never used
 12711  000A8E  0012               	return	
 12712  000A90                     l15717:
 12713                           
 12714                           ;lorawan.c: 1393: }
 12715                           ;lorawan.c: 1394: }
 12716                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 12717  000A90  0102               	movlb	2	; () banked
 12718  000A92  290A               	incf	(_loRa+10)& (0+255),w,b
 12719  000A94  E119               	bnz	l15729
 12720  000A96  0102               	movlb	2	; () banked
 12721  000A98  290B               	incf	(_loRa+11)& (0+255),w,b
 12722  000A9A  E116               	bnz	l15729
 12723  000A9C  0102               	movlb	2	; () banked
 12724  000A9E  290C               	incf	(_loRa+12)& (0+255),w,b
 12725  000AA0  E113               	bnz	l15729
 12726  000AA2  0102               	movlb	2	; () banked
 12727  000AA4  290D               	incf	(_loRa+13)& (0+255),w,b
 12728  000AA6  A4D8               	btfss	status,2,c
 12729  000AA8  D00F               	goto	l15729
 12730                           
 12731                           ; BSR set to: 2
 12732                           ;lorawan.c: 1397: {
 12733                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 12734  000AAA  0102               	movlb	2	; () banked
 12735  000AAC  8304               	bsf	(_loRa+4)& (0+255),1,b
 12736                           
 12737                           ; BSR set to: 2
 12738                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 12739  000AAE  0E02               	movlw	2
 12740  000AB0  0102               	movlb	2	; () banked
 12741  000AB2  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12742  000AB4  A4D8               	btfss	status,2,c
 12743  000AB6  0012               	return	
 12744                           
 12745                           ; BSR set to: 2
 12746                           ;lorawan.c: 1402: {
 12747                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12748  000AB8  0102               	movlb	2	; () banked
 12749  000ABA  5102               	movf	(_loRa+2)& (0+255),w,b
 12750  000ABC  0BF0               	andlw	-16
 12751  000ABE  0909               	iorlw	9
 12752  000AC0  6F02               	movwf	(_loRa+2)& (0+255),b
 12753                           
 12754                           ; BSR set to: 2
 12755                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 12756  000AC2  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12757                           
 12758                           ;lorawan.c: 1405: }
 12759                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12760                           ;	Return value of _LORAWAN_RxDone is never used
 12761  000AC6  0012               	return	
 12762  000AC8                     l15729:
 12763                           
 12764                           ;lorawan.c: 1407: }
 12765                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 12766  000AC8  0102               	movlb	2	; () banked
 12767  000ACA  5102               	movf	(_loRa+2)& (0+255),w,b
 12768  000ACC  0B0F               	andlw	15
 12769  000ACE  0A03               	xorlw	3
 12770  000AD0  A4D8               	btfss	status,2,c
 12771  000AD2  D004               	goto	l15733
 12772                           
 12773                           ; BSR set to: 2
 12774                           ;lorawan.c: 1411: {
 12775                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 12776  000AD4  0102               	movlb	2	; () banked
 12777  000AD6  51E5               	movf	(_loRa+229)& (0+255),w,b
 12778  000AD8  EC39  F04F         	call	_SwTimerStop
 12779  000ADC                     l15733:
 12780                           
 12781                           ;lorawan.c: 1413: }
 12782                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12783  000ADC  0E01               	movlw	1
 12784  000ADE  0102               	movlb	2	; () banked
 12785  000AE0  6FD8               	movwf	(_loRa+216)& (0+255),b
 12786                           
 12787                           ; BSR set to: 2
 12788                           ;lorawan.c: 1417: CheckFlags (hdr);
 12789  000AE2  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 12790  000AE6  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 12791  000AEA  EC36  F048         	call	_CheckFlags	;wreg free
 12792                           
 12793                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 12794  000AEE  0103               	movlb	3	; () banked
 12795  000AF0  EE20 F005          	lfsr	2,5
 12796  000AF4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12797  000AF6  26D9               	addwf	fsr2l,f,c
 12798  000AF8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12799  000AFA  22DA               	addwfc	fsr2h,f,c
 12800  000AFC  0103               	movlb	3	; () banked
 12801  000AFE  50DF               	movf	223,w,c
 12802  000B00  0B0F               	andlw	15
 12803  000B02  0900               	iorlw	0
 12804  000B04  B4D8               	btfsc	status,2,c
 12805  000B06  D01D               	goto	l15741
 12806                           
 12807                           ; BSR set to: 3
 12808                           ;lorawan.c: 1420: {
 12809                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 12810  000B08  0E08               	movlw	8
 12811  000B0A  0103               	movlb	3	; () banked
 12812  000B0C  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 12813  000B0E  0100               	movlb	0	; () banked
 12814  000B10  6FB4               	movwf	MacExecuteCommands@buffer& (0+255),b
 12815  000B12  0E00               	movlw	0
 12816  000B14  0103               	movlb	3	; () banked
 12817  000B16  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12818  000B18  0100               	movlb	0	; () banked
 12819  000B1A  6FB5               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 12820  000B1C  0103               	movlb	3	; () banked
 12821  000B1E  EE20 F005          	lfsr	2,5
 12822  000B22  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12823  000B24  26D9               	addwf	fsr2l,f,c
 12824  000B26  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12825  000B28  22DA               	addwfc	fsr2h,f,c
 12826  000B2A  0103               	movlb	3	; () banked
 12827  000B2C  50DF               	movf	223,w,c
 12828  000B2E  0B0F               	andlw	15
 12829  000B30  0100               	movlb	0	; () banked
 12830  000B32  6FB6               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12831  000B34  EC2B  F01A         	call	_MacExecuteCommands	;wreg free
 12832  000B38  C0B4  F0EE         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12833  000B3C  C0B5  F0EF         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12834                           
 12835                           ;lorawan.c: 1422: }
 12836  000B40  D00A               	goto	l15743
 12837  000B42                     l15741:
 12838                           
 12839                           ;lorawan.c: 1423: else
 12840                           ;lorawan.c: 1424: {
 12841                           ;lorawan.c: 1425: buffer = buffer + 8;
 12842  000B42  0E08               	movlw	8
 12843  000B44  0100               	movlb	0	; () banked
 12844  000B46  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12845  000B48  0100               	movlb	0	; () banked
 12846  000B4A  6FEE               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12847  000B4C  0E00               	movlw	0
 12848  000B4E  0100               	movlb	0	; () banked
 12849  000B50  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12850  000B52  0100               	movlb	0	; () banked
 12851  000B54  6FEF               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12852  000B56                     l15743:
 12853                           
 12854                           ;lorawan.c: 1426: }
 12855                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12856  000B56  0100               	movlb	0	; () banked
 12857  000B58  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12858  000B5A  0101               	movlb	1	; () banked
 12859  000B5C  6F66               	movwf	??_LORAWAN_RxDone& (0+255),b
 12860  000B5E  6B67               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12861  000B60  0103               	movlb	3	; () banked
 12862  000B62  EE20 F005          	lfsr	2,5
 12863  000B66  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12864  000B68  26D9               	addwf	fsr2l,f,c
 12865  000B6A  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12866  000B6C  22DA               	addwfc	fsr2h,f,c
 12867  000B6E  0103               	movlb	3	; () banked
 12868  000B70  50DF               	movf	223,w,c
 12869  000B72  0B0F               	andlw	15
 12870  000B74  0101               	movlb	1	; () banked
 12871  000B76  6F68               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12872  000B78  6B69               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12873  000B7A  0E0C               	movlw	12
 12874  000B7C  0101               	movlb	1	; () banked
 12875  000B7E  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12876  000B80  0E00               	movlw	0
 12877  000B82  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12878  000B84  0101               	movlb	1	; () banked
 12879  000B86  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12880  000B88  0101               	movlb	1	; () banked
 12881  000B8A  1968               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12882  000B8C  E106               	bnz	u18390
 12883  000B8E  0101               	movlb	1	; () banked
 12884  000B90  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12885  000B92  0101               	movlb	1	; () banked
 12886  000B94  1969               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12887  000B96  B4D8               	btfsc	status,2,c
 12888  000B98  D0BE               	goto	l15769
 12889  000B9A                     u18390:
 12890                           
 12891                           ; BSR set to: 1
 12892                           ;lorawan.c: 1428: {
 12893                           ;lorawan.c: 1429: fPort = *(buffer++);
 12894  000B9A  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12895  000B9E  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12896  000BA2  50DF               	movf	indf2,w,c
 12897  000BA4  0103               	movlb	3	; () banked
 12898  000BA6  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12899                           
 12900                           ; BSR set to: 3
 12901  000BA8  0100               	movlb	0	; () banked
 12902  000BAA  4BEE               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12903  000BAC  2BEF               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12904                           
 12905                           ; BSR set to: 0
 12906                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 12907  000BAE  0103               	movlb	3	; () banked
 12908  000BB0  EE20 F005          	lfsr	2,5
 12909  000BB4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12910  000BB6  26D9               	addwf	fsr2l,f,c
 12911  000BB8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12912  000BBA  22DA               	addwfc	fsr2h,f,c
 12913  000BBC  0103               	movlb	3	; () banked
 12914  000BBE  50DF               	movf	223,w,c
 12915  000BC0  0B0F               	andlw	15
 12916  000BC2  0800               	sublw	0
 12917  000BC4  0100               	movlb	0	; () banked
 12918  000BC6  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12919  000BC8  0FF4               	addlw	244
 12920  000BCA  0103               	movlb	3	; () banked
 12921  000BCC  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12922                           
 12923                           ; BSR set to: 3
 12924                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 12925  000BCE  0103               	movlb	3	; () banked
 12926  000BD0  EE20 F005          	lfsr	2,5
 12927  000BD4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12928  000BD6  26D9               	addwf	fsr2l,f,c
 12929  000BD8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12930  000BDA  22DA               	addwfc	fsr2h,f,c
 12931  000BDC  0103               	movlb	3	; () banked
 12932  000BDE  50DF               	movf	223,w,c
 12933  000BE0  0B0F               	andlw	15
 12934  000BE2  0F19               	addlw	25
 12935  000BE4  0103               	movlb	3	; () banked
 12936  000BE6  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12937                           
 12938                           ; BSR set to: 3
 12939                           ;lorawan.c: 1434: if (fPort != 0)
 12940  000BE8  0103               	movlb	3	; () banked
 12941  000BEA  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 12942  000BEC  0103               	movlb	3	; () banked
 12943  000BEE  B4D8               	btfsc	status,2,c
 12944  000BF0  D02F               	goto	l15759
 12945                           
 12946                           ; BSR set to: 3
 12947                           ;lorawan.c: 1435: {
 12948                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 12949  000BF2  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12950  000BF6  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12951  000BFA  0103               	movlb	3	; () banked
 12952  000BFC  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12953  000BFE  0100               	movlb	0	; () banked
 12954  000C00  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12955  000C02  0E01               	movlw	1
 12956  000C04  0100               	movlb	0	; () banked
 12957  000C06  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 12958  000C08  C20A  F0A9         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 12959  000C0C  C20B  F0AA         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 12960  000C10  C20C  F0AB         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 12961  000C14  C20D  F0AC         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 12962  000C18  0E32               	movlw	low (_loRa+50)
 12963  000C1A  0100               	movlb	0	; () banked
 12964  000C1C  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 12965  000C1E  0E02               	movlw	high (_loRa+50)
 12966  000C20  0100               	movlb	0	; () banked
 12967  000C22  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12968  000C24  C3A7  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12969  000C28  0EEF               	movlw	low _radioBuffer
 12970  000C2A  0100               	movlb	0	; () banked
 12971  000C2C  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12972  000C2E  0E05               	movlw	high _radioBuffer
 12973  000C30  0100               	movlb	0	; () banked
 12974  000C32  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12975  000C34  0E00               	movlw	0
 12976  000C36  0100               	movlb	0	; () banked
 12977  000C38  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12978  000C3A  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 12979                           
 12980                           ;lorawan.c: 1437: packet = buffer - 1;
 12981  000C3E  0EFF               	movlw	255
 12982  000C40  0100               	movlb	0	; () banked
 12983  000C42  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12984  000C44  0103               	movlb	3	; () banked
 12985  000C46  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12986  000C48  0EFF               	movlw	255
 12987  000C4A  0100               	movlb	0	; () banked
 12988  000C4C  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12989  000C4E  D060               	goto	L7
 12990  000C50                     l15759:
 12991                           
 12992                           ; BSR set to: 3
 12993                           ;lorawan.c: 1439: else
 12994                           ;lorawan.c: 1440: {
 12995                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 12996  000C50  0100               	movlb	0	; () banked
 12997  000C52  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12998  000C54  0101               	movlb	1	; () banked
 12999  000C56  6F66               	movwf	??_LORAWAN_RxDone& (0+255),b
 13000  000C58  6B67               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13001  000C5A  0103               	movlb	3	; () banked
 13002  000C5C  EE20 F005          	lfsr	2,5
 13003  000C60  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13004  000C62  26D9               	addwf	fsr2l,f,c
 13005  000C64  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13006  000C66  22DA               	addwfc	fsr2h,f,c
 13007  000C68  0103               	movlb	3	; () banked
 13008  000C6A  50DF               	movf	223,w,c
 13009  000C6C  0B0F               	andlw	15
 13010  000C6E  0101               	movlb	1	; () banked
 13011  000C70  6F68               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13012  000C72  6B69               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13013  000C74  0E0D               	movlw	13
 13014  000C76  0101               	movlb	1	; () banked
 13015  000C78  2768               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13016  000C7A  0E00               	movlw	0
 13017  000C7C  2369               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13018  000C7E  0101               	movlb	1	; () banked
 13019  000C80  5166               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13020  000C82  0101               	movlb	1	; () banked
 13021  000C84  5D68               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13022  000C86  0101               	movlb	1	; () banked
 13023  000C88  5169               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13024  000C8A  0A80               	xorlw	128
 13025  000C8C  0101               	movlb	1	; () banked
 13026  000C8E  6F6A               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 13027  000C90  0101               	movlb	1	; () banked
 13028  000C92  5167               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13029  000C94  0A80               	xorlw	128
 13030  000C96  0101               	movlb	1	; () banked
 13031  000C98  596A               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 13032  000C9A  B0D8               	btfsc	status,0,c
 13033  000C9C  D03C               	goto	l15769
 13034                           
 13035                           ; BSR set to: 1
 13036                           ;lorawan.c: 1443: {
 13037                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 13038  000C9E  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13039  000CA2  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13040  000CA6  0103               	movlb	3	; () banked
 13041  000CA8  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13042  000CAA  0100               	movlb	0	; () banked
 13043  000CAC  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13044  000CAE  0E01               	movlw	1
 13045  000CB0  0100               	movlb	0	; () banked
 13046  000CB2  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 13047  000CB4  C20A  F0A9         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13048  000CB8  C20B  F0AA         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13049  000CBC  C20C  F0AB         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13050  000CC0  C20D  F0AC         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13051  000CC4  0E22               	movlw	low (_loRa+34)
 13052  000CC6  0100               	movlb	0	; () banked
 13053  000CC8  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 13054  000CCA  0E02               	movlw	high (_loRa+34)
 13055  000CCC  0100               	movlb	0	; () banked
 13056  000CCE  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13057  000CD0  C3A7  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13058  000CD4  0EEF               	movlw	low _radioBuffer
 13059  000CD6  0100               	movlb	0	; () banked
 13060  000CD8  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13061  000CDA  0E05               	movlw	high _radioBuffer
 13062  000CDC  0100               	movlb	0	; () banked
 13063  000CDE  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13064  000CE0  0E00               	movlw	0
 13065  000CE2  0100               	movlb	0	; () banked
 13066  000CE4  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13067  000CE6  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 13068                           
 13069                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 13070  000CEA  C0EE  F0B4         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 13071  000CEE  C0EF  F0B5         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 13072  000CF2  0103               	movlb	3	; () banked
 13073  000CF4  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13074  000CF6  0100               	movlb	0	; () banked
 13075  000CF8  6FB6               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13076  000CFA  EC2B  F01A         	call	_MacExecuteCommands	;wreg free
 13077  000CFE  C0B4  F0EE         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13078  000D02  C0B5  F0EF         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13079  000D06  D007               	goto	l15769
 13080  000D08                     l15767:
 13081                           
 13082                           ; BSR set to: 3
 13083                           ;lorawan.c: 1450: packet = (0);
 13084  000D08  0E00               	movlw	0
 13085  000D0A  0103               	movlb	3	; () banked
 13086  000D0C  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13087  000D0E  0E00               	movlw	0
 13088  000D10                     L7:
 13089  000D10  0103               	movlb	3	; () banked
 13090  000D12  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13091                           
 13092                           ; BSR set to: 3
 13093                           ;lorawan.c: 1451: }
 13094                           ;lorawan.c: 1452: }
 13095  000D14  D004               	goto	l15773
 13096  000D16                     l15769:
 13097                           
 13098                           ;lorawan.c: 1453: else
 13099                           ;lorawan.c: 1454: {
 13100                           ;lorawan.c: 1455: frmPayloadLength = 0;
 13101  000D16  0E00               	movlw	0
 13102  000D18  0103               	movlb	3	; () banked
 13103  000D1A  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13104  000D1C  D7F5               	goto	l15767
 13105  000D1E                     l15773:
 13106                           
 13107                           ; BSR set to: 3
 13108                           ;lorawan.c: 1457: }
 13109                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13110  000D1E  0E01               	movlw	1
 13111  000D20  0102               	movlb	2	; () banked
 13112  000D22  6FD8               	movwf	(_loRa+216)& (0+255),b
 13113                           
 13114                           ; BSR set to: 2
 13115                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 13116  000D24  0E00               	movlw	0
 13117  000D26  0102               	movlb	2	; () banked
 13118  000D28  6FD1               	movwf	(_loRa+209)& (0+255),b
 13119  000D2A  0E00               	movlw	0
 13120  000D2C  6FD0               	movwf	(_loRa+208)& (0+255),b
 13121                           
 13122                           ; BSR set to: 2
 13123                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 13124  000D2E  0E00               	movlw	0
 13125  000D30  0102               	movlb	2	; () banked
 13126  000D32  6FEE               	movwf	(_loRa+238)& (0+255),b
 13127                           
 13128                           ; BSR set to: 2
 13129                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 13130  000D34  0102               	movlb	2	; () banked
 13131  000D36  9900               	bcf	_loRa& (0+255),4,b
 13132                           
 13133                           ; BSR set to: 2
 13134                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 13135  000D38  0102               	movlb	2	; () banked
 13136  000D3A  8303               	bsf	(_loRa+3)& (0+255),1,b
 13137                           
 13138                           ; BSR set to: 2
 13139                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 13140  000D3C  0102               	movlb	2	; () banked
 13141  000D3E  A100               	btfss	_loRa& (0+255),0,b
 13142  000D40  D062               	goto	l2124
 13143                           
 13144                           ; BSR set to: 2
 13145                           ;lorawan.c: 1468: {
 13146                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 13147  000D42  0103               	movlb	3	; () banked
 13148  000D44  EE20 F005          	lfsr	2,5
 13149  000D48  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13150  000D4A  26D9               	addwf	fsr2l,f,c
 13151  000D4C  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13152  000D4E  22DA               	addwfc	fsr2h,f,c
 13153  000D50  0103               	movlb	3	; () banked
 13154  000D52  AADF               	btfss	indf2,5,c
 13155  000D54  D055               	goto	l15813
 13156                           
 13157                           ; BSR set to: 3
 13158                           ;lorawan.c: 1470: {
 13159                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13160  000D56  0102               	movlb	2	; () banked
 13161  000D58  9100               	bcf	_loRa& (0+255),0,b
 13162                           
 13163                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 13164  000D5A  0102               	movlb	2	; () banked
 13165  000D5C  9102               	bcf	(_loRa+2)& (0+255),0,b
 13166  000D5E  9302               	bcf	(_loRa+2)& (0+255),1,b
 13167  000D60  9502               	bcf	(_loRa+2)& (0+255),2,b
 13168  000D62  9702               	bcf	(_loRa+2)& (0+255),3,b
 13169                           
 13170                           ; BSR set to: 2
 13171                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 13172  000D64  0100               	movlb	0	; () banked
 13173  000D66  51F4               	movf	_rxPayload& (0+255),w,b
 13174  000D68  0100               	movlb	0	; () banked
 13175  000D6A  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 13176  000D6C  B4D8               	btfsc	status,2,c
 13177  000D6E  D017               	goto	l15795
 13178                           
 13179                           ; BSR set to: 0
 13180                           ;lorawan.c: 1474: {
 13181                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 13182  000D70  0102               	movlb	2	; () banked
 13183  000D72  9B00               	bcf	_loRa& (0+255),5,b
 13184                           
 13185                           ; BSR set to: 2
 13186                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13187  000D74  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 13188  000D78  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 13189  000D7C  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 13190  000D80  0E01               	movlw	1
 13191  000D82  0100               	movlb	0	; () banked
 13192  000D84  6F6A               	movwf	RxDataDone@status& (0+255),b
 13193  000D86  D801               	call	u18458
 13194  000D88  D00A               	goto	l15795
 13195  000D8A                     u18458:
 13196  000D8A  0005               	push	
 13197  000D8C  6EFA               	movwf	pclath,c
 13198  000D8E  0100               	movlb	0	; () banked
 13199  000D90  51F4               	movf	_rxPayload& (0+255),w,b
 13200  000D92  6EFD               	movwf	tosl,c
 13201  000D94  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 13202  000D96  6EFE               	movwf	tosh,c
 13203  000D98  6AFF               	clrf	tosu,c
 13204  000D9A  50FA               	movf	pclath,w,c
 13205  000D9C  0012               	return		;indir
 13206  000D9E                     l15795:
 13207                           
 13208                           ;lorawan.c: 1477: }
 13209                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 13210  000D9E  0102               	movlb	2	; () banked
 13211  000DA0  9303               	bcf	(_loRa+3)& (0+255),1,b
 13212                           
 13213                           ; BSR set to: 2
 13214                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13215  000DA2  0102               	movlb	2	; () banked
 13216  000DA4  AB02               	btfss	(_loRa+2)& (0+255),5,b
 13217  000DA6  D081               	goto	l15837
 13218                           
 13219                           ; BSR set to: 2
 13220  000DA8  0102               	movlb	2	; () banked
 13221  000DAA  BB00               	btfsc	_loRa& (0+255),5,b
 13222  000DAC  D07E               	goto	l15837
 13223                           
 13224                           ; BSR set to: 2
 13225  000DAE  0102               	movlb	2	; () banked
 13226  000DB0  B300               	btfsc	_loRa& (0+255),1,b
 13227  000DB2  D003               	goto	l15805
 13228                           
 13229                           ; BSR set to: 2
 13230  000DB4  0102               	movlb	2	; () banked
 13231  000DB6  A700               	btfss	_loRa& (0+255),3,b
 13232  000DB8  D078               	goto	l15837
 13233  000DBA                     l15805:
 13234                           
 13235                           ; BSR set to: 2
 13236                           ;lorawan.c: 1480: {
 13237                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 13238  000DBA  0E01               	movlw	1
 13239  000DBC  0100               	movlb	0	; () banked
 13240  000DBE  6FB3               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13241  000DC0  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 13242  000DC2  0100               	movlb	0	; () banked
 13243  000DC4  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13244  000DC6  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 13245  000DC8  0100               	movlb	0	; () banked
 13246  000DCA  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13247  000DCC  0102               	movlb	2	; () banked
 13248  000DCE  51ED               	movf	(_loRa+237)& (0+255),w,b
 13249  000DD0  EC29  F032         	call	_SearchAvailableChannel
 13250  000DD4  0900               	iorlw	0
 13251  000DD6  A4D8               	btfss	status,2,c
 13252  000DD8  D010               	goto	l15811
 13253                           
 13254                           ;lorawan.c: 1482: {
 13255                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 13256  000DDA  0E00               	movlw	0
 13257  000DDC  0100               	movlb	0	; () banked
 13258  000DDE  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
 13259  000DE0  0E00               	movlw	0
 13260  000DE2  0100               	movlb	0	; () banked
 13261  000DE4  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
 13262  000DE6  0E00               	movlw	0
 13263  000DE8  0100               	movlb	0	; () banked
 13264  000DEA  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13265  000DEC  0E00               	movlw	0
 13266  000DEE  0100               	movlb	0	; () banked
 13267  000DF0  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13268  000DF2  0E00               	movlw	0
 13269  000DF4  EC4E  F03B         	call	_LORAWAN_Send
 13270  000DF8  D053               	goto	l15833
 13271  000DFA                     l15811:
 13272                           
 13273                           ;lorawan.c: 1486: else
 13274                           ;lorawan.c: 1487: {
 13275                           ;lorawan.c: 1489: StartReTxTimer();
 13276  000DFA  EC1A  F02C         	call	_StartReTxTimer	;wreg free
 13277                           
 13278                           ;lorawan.c: 1490: }
 13279                           ;lorawan.c: 1491: }
 13280                           ;lorawan.c: 1492: }
 13281  000DFE  D055               	goto	l15837
 13282  000E00                     l15813:
 13283                           
 13284                           ;lorawan.c: 1494: else
 13285                           ;lorawan.c: 1495: {
 13286                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 13287  000E00  ECCB  F045         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 13288                           
 13289                           ;lorawan.c: 1497: }
 13290                           ;lorawan.c: 1498: }
 13291  000E04  D052               	goto	l15837
 13292  000E06                     l2124:
 13293                           
 13294                           ; BSR set to: 2
 13295                           ;lorawan.c: 1499: else
 13296                           ;lorawan.c: 1500: {
 13297                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 13298  000E06  0102               	movlb	2	; () banked
 13299  000E08  9102               	bcf	(_loRa+2)& (0+255),0,b
 13300  000E0A  9302               	bcf	(_loRa+2)& (0+255),1,b
 13301  000E0C  9502               	bcf	(_loRa+2)& (0+255),2,b
 13302  000E0E  9702               	bcf	(_loRa+2)& (0+255),3,b
 13303                           
 13304                           ; BSR set to: 2
 13305                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 13306  000E10  0100               	movlb	0	; () banked
 13307  000E12  51F4               	movf	_rxPayload& (0+255),w,b
 13308  000E14  0100               	movlb	0	; () banked
 13309  000E16  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 13310  000E18  B4D8               	btfsc	status,2,c
 13311  000E1A  D017               	goto	l15821
 13312                           
 13313                           ; BSR set to: 0
 13314                           ;lorawan.c: 1504: {
 13315                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 13316  000E1C  0102               	movlb	2	; () banked
 13317  000E1E  9B00               	bcf	_loRa& (0+255),5,b
 13318                           
 13319                           ; BSR set to: 2
 13320                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13321  000E20  C3A9  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 13322  000E24  C3AA  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 13323  000E28  C3B1  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 13324  000E2C  0E01               	movlw	1
 13325  000E2E  0100               	movlb	0	; () banked
 13326  000E30  6F6A               	movwf	RxDataDone@status& (0+255),b
 13327  000E32  D801               	call	u18528
 13328  000E34  D00A               	goto	l15821
 13329  000E36                     u18528:
 13330  000E36  0005               	push	
 13331  000E38  6EFA               	movwf	pclath,c
 13332  000E3A  0100               	movlb	0	; () banked
 13333  000E3C  51F4               	movf	_rxPayload& (0+255),w,b
 13334  000E3E  6EFD               	movwf	tosl,c
 13335  000E40  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 13336  000E42  6EFE               	movwf	tosh,c
 13337  000E44  6AFF               	clrf	tosu,c
 13338  000E46  50FA               	movf	pclath,w,c
 13339  000E48  0012               	return		;indir
 13340  000E4A                     l15821:
 13341                           
 13342                           ;lorawan.c: 1507: }
 13343                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13344  000E4A  0102               	movlb	2	; () banked
 13345  000E4C  AB02               	btfss	(_loRa+2)& (0+255),5,b
 13346  000E4E  D02D               	goto	l15837
 13347                           
 13348                           ; BSR set to: 2
 13349  000E50  0102               	movlb	2	; () banked
 13350  000E52  BB00               	btfsc	_loRa& (0+255),5,b
 13351  000E54  D02A               	goto	l15837
 13352                           
 13353                           ; BSR set to: 2
 13354  000E56  0102               	movlb	2	; () banked
 13355  000E58  B300               	btfsc	_loRa& (0+255),1,b
 13356  000E5A  D003               	goto	l15829
 13357                           
 13358                           ; BSR set to: 2
 13359  000E5C  0102               	movlb	2	; () banked
 13360  000E5E  A700               	btfss	_loRa& (0+255),3,b
 13361  000E60  D024               	goto	l15837
 13362  000E62                     l15829:
 13363                           
 13364                           ; BSR set to: 2
 13365                           ;lorawan.c: 1510: {
 13366                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 13367  000E62  0E01               	movlw	1
 13368  000E64  0100               	movlb	0	; () banked
 13369  000E66  6FB3               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13370  000E68  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 13371  000E6A  0100               	movlb	0	; () banked
 13372  000E6C  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13373  000E6E  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 13374  000E70  0100               	movlb	0	; () banked
 13375  000E72  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13376  000E74  0102               	movlb	2	; () banked
 13377  000E76  51ED               	movf	(_loRa+237)& (0+255),w,b
 13378  000E78  EC29  F032         	call	_SearchAvailableChannel
 13379  000E7C  0900               	iorlw	0
 13380  000E7E  A4D8               	btfss	status,2,c
 13381  000E80  D012               	goto	l15835
 13382                           
 13383                           ;lorawan.c: 1512: {
 13384                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 13385  000E82  0E00               	movlw	0
 13386  000E84  0100               	movlb	0	; () banked
 13387  000E86  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
 13388  000E88  0E00               	movlw	0
 13389  000E8A  0100               	movlb	0	; () banked
 13390  000E8C  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
 13391  000E8E  0E00               	movlw	0
 13392  000E90  0100               	movlb	0	; () banked
 13393  000E92  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13394  000E94  0E00               	movlw	0
 13395  000E96  0100               	movlb	0	; () banked
 13396  000E98  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13397  000E9A  0E00               	movlw	0
 13398  000E9C  EC4E  F03B         	call	_LORAWAN_Send
 13399  000EA0                     l15833:
 13400                           
 13401                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 13402  000EA0  0102               	movlb	2	; () banked
 13403  000EA2  9700               	bcf	_loRa& (0+255),3,b
 13404                           
 13405                           ;lorawan.c: 1515: }
 13406  000EA4  D002               	goto	l15837
 13407  000EA6                     l15835:
 13408                           
 13409                           ;lorawan.c: 1516: else
 13410                           ;lorawan.c: 1517: {
 13411                           ;lorawan.c: 1519: StartReTxTimer();
 13412  000EA6  EC1A  F02C         	call	_StartReTxTimer	;wreg free
 13413  000EAA                     l15837:
 13414                           
 13415                           ;lorawan.c: 1520: }
 13416                           ;lorawan.c: 1521: }
 13417                           ;lorawan.c: 1522: }
 13418                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 13419  000EAA  0E02               	movlw	2
 13420  000EAC  0102               	movlb	2	; () banked
 13421  000EAE  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13422  000EB0  A4D8               	btfss	status,2,c
 13423  000EB2  0012               	return	
 13424                           
 13425                           ; BSR set to: 2
 13426                           ;lorawan.c: 1525: {
 13427                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13428  000EB4  0102               	movlb	2	; () banked
 13429  000EB6  5102               	movf	(_loRa+2)& (0+255),w,b
 13430  000EB8  0BF0               	andlw	-16
 13431  000EBA  0909               	iorlw	9
 13432  000EBC  6F02               	movwf	(_loRa+2)& (0+255),b
 13433                           
 13434                           ; BSR set to: 2
 13435                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 13436  000EBE  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13437                           
 13438                           ;lorawan.c: 1528: }
 13439                           ;lorawan.c: 1529: }
 13440  000EC2  0012               	return	
 13441  000EC4                     l15843:
 13442                           
 13443                           ;lorawan.c: 1530: else
 13444                           ;lorawan.c: 1531: {
 13445                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 13446  000EC4  ECA1  F043         	call	_SetReceptionNotOkState	;wreg free
 13447                           
 13448                           ;lorawan.c: 1535: }
 13449                           ;lorawan.c: 1536: }
 13450                           
 13451                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 13452                           ;	Return value of _LORAWAN_RxDone is never used
 13453  000EC8  0012               	return	
 13454  000ECA                     l15847:
 13455                           
 13456                           ;lorawan.c: 1537: else
 13457                           ;lorawan.c: 1538: {
 13458                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 13459  000ECA  0100               	movlb	0	; () banked
 13460  000ECC  51F4               	movf	_rxPayload& (0+255),w,b
 13461  000ECE  0100               	movlb	0	; () banked
 13462  000ED0  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 13463  000ED2  B4D8               	btfsc	status,2,c
 13464  000ED4  0012               	return	
 13465                           
 13466                           ; BSR set to: 0
 13467                           ;lorawan.c: 1541: {
 13468                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13469  000ED6  ECE1  F051         	call	_RADIO_GetStatus	;wreg free
 13470  000EDA  0101               	movlb	1	; () banked
 13471  000EDC  6F66               	movwf	??_LORAWAN_RxDone& (0+255),b
 13472  000EDE  0101               	movlb	1	; () banked
 13473  000EE0  B766               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13474  000EE2  D015               	goto	l15853
 13475                           
 13476                           ; BSR set to: 1
 13477                           ;lorawan.c: 1543: {
 13478                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 13479  000EE4  C0EE  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 13480  000EE8  C0EF  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 13481  000EEC  C0F0  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 13482  000EF0  0E03               	movlw	3
 13483  000EF2  0100               	movlb	0	; () banked
 13484  000EF4  6F6A               	movwf	RxDataDone@status& (0+255),b
 13485  000EF6  D801               	call	u18618
 13486  000EF8  0012               	return	
 13487  000EFA                     u18618:
 13488  000EFA  0005               	push	
 13489  000EFC  6EFA               	movwf	pclath,c
 13490  000EFE  0100               	movlb	0	; () banked
 13491  000F00  51F4               	movf	_rxPayload& (0+255),w,b
 13492  000F02  6EFD               	movwf	tosl,c
 13493  000F04  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 13494  000F06  6EFE               	movwf	tosh,c
 13495  000F08  6AFF               	clrf	tosu,c
 13496  000F0A  50FA               	movf	pclath,w,c
 13497  000F0C  0012               	return		;indir
 13498  000F0E                     l15853:
 13499                           
 13500                           ;lorawan.c: 1546: else
 13501                           ;lorawan.c: 1547: {
 13502                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 13503  000F0E  C0EE  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 13504  000F12  C0EF  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 13505  000F16  C0F0  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 13506  000F1A  0E02               	movlw	2
 13507  000F1C  0100               	movlb	0	; () banked
 13508  000F1E  6F6A               	movwf	RxDataDone@status& (0+255),b
 13509  000F20  D801               	call	u18628
 13510  000F22  0012               	return	
 13511  000F24                     u18628:
 13512  000F24  0005               	push	
 13513  000F26  6EFA               	movwf	pclath,c
 13514  000F28  0100               	movlb	0	; () banked
 13515  000F2A  51F4               	movf	_rxPayload& (0+255),w,b
 13516  000F2C  6EFD               	movwf	tosl,c
 13517  000F2E  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 13518  000F30  6EFE               	movwf	tosh,c
 13519  000F32  6AFF               	clrf	tosu,c
 13520  000F34  50FA               	movf	pclath,w,c
 13521  000F36  0012               	return		;indir
 13522  000F38                     __end_of_LORAWAN_RxDone:
 13523                           	opt stack 0
 13524                           tosu	equ	0xFFF
 13525                           tosh	equ	0xFFE
 13526                           tosl	equ	0xFFD
 13527                           pclath	equ	0xFFA
 13528                           tblptru	equ	0xFF8
 13529                           tblptrh	equ	0xFF7
 13530                           tblptrl	equ	0xFF6
 13531                           tablat	equ	0xFF5
 13532                           prodh	equ	0xFF4
 13533                           prodl	equ	0xFF3
 13534                           intcon	equ	0xFF2
 13535                           intcon2	equ	0xFF1
 13536                           intcon3	equ	0xFF0
 13537                           postinc0	equ	0xFEE
 13538                           wreg	equ	0xFE8
 13539                           postinc1	equ	0xFE6
 13540                           postdec1	equ	0xFE5
 13541                           plusw1	equ	0xFE3
 13542                           fsr1h	equ	0xFE2
 13543                           fsr1l	equ	0xFE1
 13544                           indf2	equ	0xFDF
 13545                           postinc2	equ	0xFDE
 13546                           postdec2	equ	0xFDD
 13547                           fsr2h	equ	0xFDA
 13548                           fsr2l	equ	0xFD9
 13549                           status	equ	0xFD8
 13550                           
 13551 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 13552 ;; Defined at:
 13553 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13554 ;; Parameters:    Size  Location     Type
 13555 ;;		None
 13556 ;; Auto vars:     Size  Location     Type
 13557 ;;		None
 13558 ;; Return value:  Size  Location     Type
 13559 ;;                  1    wreg      void 
 13560 ;; Registers used:
 13561 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13562 ;; Tracked objects:
 13563 ;;		On entry : 0/0
 13564 ;;		On exit  : 0/0
 13565 ;;		Unchanged: 0/0
 13566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13568 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13569 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13570 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13571 ;;Total ram usage:        4 bytes
 13572 ;; Hardware stack levels used:    1
 13573 ;; Hardware stack levels required when called:   11
 13574 ;; This function calls:
 13575 ;;		_SwTimerSetTimeout
 13576 ;;		_SwTimerStart
 13577 ;;		___lldiv
 13578 ;; This function is called by:
 13579 ;;		_AckRetransmissionCallback
 13580 ;;		_LORAWAN_RxDone
 13581 ;; This function uses a non-reentrant model
 13582 ;;
 13583                           
 13584                           	psect	text61
 13585  008B96                     __ptext61:
 13586                           	opt stack 0
 13587  008B96                     _UpdateRetransmissionAckTimeoutState:
 13588                           	opt stack 16
 13589                           
 13590                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13591                           
 13592                           ;incstack = 0
 13593  008B96  0102               	movlb	2	; () banked
 13594  008B98  5102               	movf	(_loRa+2)& (0+255),w,b
 13595  008B9A  0BF0               	andlw	-16
 13596  008B9C  0906               	iorlw	6
 13597  008B9E  6F02               	movwf	(_loRa+2)& (0+255),b
 13598                           
 13599                           ; BSR set to: 2
 13600                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 13601  008BA0  0102               	movlb	2	; () banked
 13602  008BA2  51A0               	movf	(_loRa+160)& (0+255),w,b
 13603  008BA4  0100               	movlb	0	; () banked
 13604  008BA6  6F9E               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 13605  008BA8  0102               	movlb	2	; () banked
 13606  008BAA  51A1               	movf	(_loRa+161)& (0+255),w,b
 13607  008BAC  0100               	movlb	0	; () banked
 13608  008BAE  6F9F               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 13609  008BB0  0100               	movlb	0	; () banked
 13610  008BB2  6BA0               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 13611  008BB4  0100               	movlb	0	; () banked
 13612  008BB6  6BA1               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 13613  008BB8  0E0C               	movlw	12
 13614  008BBA                     u17625:
 13615  008BBA  90D8               	bcf	status,0,c
 13616  008BBC  0100               	movlb	0	; () banked
 13617  008BBE  379E               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 13618  008BC0  379F               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 13619  008BC2  37A0               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 13620  008BC4  37A1               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 13621  008BC6  2EE8               	decfsz	wreg,f,c
 13622  008BC8  D7F8               	goto	u17625
 13623  008BCA  C09E  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 13624  008BCE  C09F  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 13625  008BD2  C0A0  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 13626  008BD6  C0A1  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 13627  008BDA  0E7D               	movlw	125
 13628  008BDC  0100               	movlb	0	; () banked
 13629  008BDE  6F68               	movwf	___lldiv@divisor& (0+255),b
 13630  008BE0  0E00               	movlw	0
 13631  008BE2  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 13632  008BE4  0E00               	movlw	0
 13633  008BE6  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 13634  008BE8  0E00               	movlw	0
 13635  008BEA  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 13636  008BEC  EC08  F03F         	call	___lldiv	;wreg free
 13637  008BF0  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13638  008BF4  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13639  008BF8  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13640  008BFC  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13641  008C00  0102               	movlb	2	; () banked
 13642  008C02  51E8               	movf	(_loRa+232)& (0+255),w,b
 13643  008C04  EC33  F04A         	call	_SwTimerSetTimeout
 13644                           
 13645                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 13646  008C08  0102               	movlb	2	; () banked
 13647  008C0A  51E8               	movf	(_loRa+232)& (0+255),w,b
 13648  008C0C  ECCB  F041         	call	_SwTimerStart
 13649  008C10  0012               	return		;funcret
 13650  008C12                     __end_of_UpdateRetransmissionAckTimeoutState:
 13651                           	opt stack 0
 13652                           tosu	equ	0xFFF
 13653                           tosh	equ	0xFFE
 13654                           tosl	equ	0xFFD
 13655                           pclath	equ	0xFFA
 13656                           tblptru	equ	0xFF8
 13657                           tblptrh	equ	0xFF7
 13658                           tblptrl	equ	0xFF6
 13659                           tablat	equ	0xFF5
 13660                           prodh	equ	0xFF4
 13661                           prodl	equ	0xFF3
 13662                           intcon	equ	0xFF2
 13663                           intcon2	equ	0xFF1
 13664                           intcon3	equ	0xFF0
 13665                           postinc0	equ	0xFEE
 13666                           wreg	equ	0xFE8
 13667                           postinc1	equ	0xFE6
 13668                           postdec1	equ	0xFE5
 13669                           plusw1	equ	0xFE3
 13670                           fsr1h	equ	0xFE2
 13671                           fsr1l	equ	0xFE1
 13672                           indf2	equ	0xFDF
 13673                           postinc2	equ	0xFDE
 13674                           postdec2	equ	0xFDD
 13675                           fsr2h	equ	0xFDA
 13676                           fsr2l	equ	0xFD9
 13677                           status	equ	0xFD8
 13678                           
 13679 ;; *************** function _UpdateDLSettings *****************
 13680 ;; Defined at:
 13681 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13682 ;; Parameters:    Size  Location     Type
 13683 ;;  dlRx2Dr         1    wreg     unsigned char 
 13684 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 13685 ;; Auto vars:     Size  Location     Type
 13686 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 13687 ;; Return value:  Size  Location     Type
 13688 ;;                  1    wreg      void 
 13689 ;; Registers used:
 13690 ;;		wreg, status,2, status,0
 13691 ;; Tracked objects:
 13692 ;;		On entry : 0/0
 13693 ;;		On exit  : 0/0
 13694 ;;		Unchanged: 0/0
 13695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13696 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13697 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13699 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13700 ;;Total ram usage:        2 bytes
 13701 ;; Hardware stack levels used:    1
 13702 ;; Hardware stack levels required when called:    7
 13703 ;; This function calls:
 13704 ;;		Nothing
 13705 ;; This function is called by:
 13706 ;;		_LORAWAN_RxDone
 13707 ;; This function uses a non-reentrant model
 13708 ;;
 13709                           
 13710                           	psect	text62
 13711  00A05A                     __ptext62:
 13712                           	opt stack 0
 13713  00A05A                     _UpdateDLSettings:
 13714                           	opt stack 19
 13715                           
 13716                           ;incstack = 0
 13717                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 13718  00A05A  0100               	movlb	0	; () banked
 13719  00A05C  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 13720                           
 13721                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 13722  00A05E  0E08               	movlw	8
 13723  00A060  0100               	movlb	0	; () banked
 13724  00A062  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 13725  00A064  D002               	goto	l15179
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;lorawan_eu.c: 891: {
 13729                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 13730  00A066  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 13731  00A06A                     l15179:
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;lorawan_eu.c: 893: }
 13735                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 13736  00A06A  0E06               	movlw	6
 13737  00A06C  0100               	movlb	0	; () banked
 13738  00A06E  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 13739  00A070  0012               	return	
 13740                           
 13741                           ; BSR set to: 0
 13742                           ;lorawan_eu.c: 896: {
 13743                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 13744  00A072  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 13745  00A076  0012               	return	
 13746  00A078                     __end_of_UpdateDLSettings:
 13747                           	opt stack 0
 13748                           tosu	equ	0xFFF
 13749                           tosh	equ	0xFFE
 13750                           tosl	equ	0xFFD
 13751                           pclath	equ	0xFFA
 13752                           tblptru	equ	0xFF8
 13753                           tblptrh	equ	0xFF7
 13754                           tblptrl	equ	0xFF6
 13755                           tablat	equ	0xFF5
 13756                           prodh	equ	0xFF4
 13757                           prodl	equ	0xFF3
 13758                           intcon	equ	0xFF2
 13759                           intcon2	equ	0xFF1
 13760                           intcon3	equ	0xFF0
 13761                           postinc0	equ	0xFEE
 13762                           wreg	equ	0xFE8
 13763                           postinc1	equ	0xFE6
 13764                           postdec1	equ	0xFE5
 13765                           plusw1	equ	0xFE3
 13766                           fsr1h	equ	0xFE2
 13767                           fsr1l	equ	0xFE1
 13768                           indf2	equ	0xFDF
 13769                           postinc2	equ	0xFDE
 13770                           postdec2	equ	0xFDD
 13771                           fsr2h	equ	0xFDA
 13772                           fsr2l	equ	0xFD9
 13773                           status	equ	0xFD8
 13774                           
 13775 ;; *************** function _UpdateCfList *****************
 13776 ;; Defined at:
 13777 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;  bufferLength    1    wreg     unsigned char 
 13780 ;;  joinAccept      2   74[BANK0 ] PTR struct .
 13781 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13782 ;; Auto vars:     Size  Location     Type
 13783 ;;  bufferLength    1   76[BANK0 ] unsigned char 
 13784 ;;  frequency       4   77[BANK0 ] unsigned long 
 13785 ;;  i               1   82[BANK0 ] unsigned char 
 13786 ;;  channelIndex    1   81[BANK0 ] unsigned char 
 13787 ;; Return value:  Size  Location     Type
 13788 ;;                  1    wreg      void 
 13789 ;; Registers used:
 13790 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13791 ;; Tracked objects:
 13792 ;;		On entry : 0/0
 13793 ;;		On exit  : 0/0
 13794 ;;		Unchanged: 0/0
 13795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13797 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13799 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13800 ;;Total ram usage:        9 bytes
 13801 ;; Hardware stack levels used:    1
 13802 ;; Hardware stack levels required when called:    9
 13803 ;; This function calls:
 13804 ;;		_LORAWAN_SetChannelIdStatus
 13805 ;;		_ValidateFrequency
 13806 ;;		___lmul
 13807 ;;		___wmul
 13808 ;;		_memcpy
 13809 ;; This function is called by:
 13810 ;;		_LORAWAN_RxDone
 13811 ;; This function uses a non-reentrant model
 13812 ;;
 13813                           
 13814                           	psect	text63
 13815  0046DA                     __ptext63:
 13816                           	opt stack 0
 13817  0046DA                     _UpdateCfList:
 13818                           	opt stack 17
 13819                           
 13820                           ; BSR set to: 0
 13821                           ;incstack = 0
 13822                           ;UpdateCfList@bufferLength stored from wreg
 13823  0046DA  0100               	movlb	0	; () banked
 13824  0046DC  6FAC               	movwf	UpdateCfList@bufferLength& (0+255),b
 13825                           
 13826                           ;lorawan_eu.c: 826: uint8_t i;
 13827                           ;lorawan_eu.c: 827: uint32_t frequency;
 13828                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 13829                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 13830  0046DE  0E21               	movlw	33
 13831  0046E0  0100               	movlb	0	; () banked
 13832  0046E2  19AC               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 13833  0046E4  A4D8               	btfss	status,2,c
 13834  0046E6  0012               	return	
 13835                           
 13836                           ; BSR set to: 0
 13837                           ;lorawan_eu.c: 831: {
 13838                           ;lorawan_eu.c: 833: channelIndex = 3;
 13839  0046E8  0E03               	movlw	3
 13840  0046EA  0100               	movlb	0	; () banked
 13841  0046EC  6FB1               	movwf	UpdateCfList@channelIndex& (0+255),b
 13842                           
 13843                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 13844  0046EE  0E00               	movlw	0
 13845  0046F0  0100               	movlb	0	; () banked
 13846  0046F2  6FB2               	movwf	UpdateCfList@i& (0+255),b
 13847  0046F4                     l15151:
 13848                           
 13849                           ; BSR set to: 0
 13850  0046F4  0E04               	movlw	4
 13851  0046F6  0100               	movlb	0	; () banked
 13852  0046F8  65B2               	cpfsgt	UpdateCfList@i& (0+255),b
 13853  0046FA  D001               	goto	l15155
 13854  0046FC  D11E               	goto	l1150
 13855  0046FE                     l15155:
 13856                           
 13857                           ; BSR set to: 0
 13858                           ;lorawan_eu.c: 836: {
 13859                           ;lorawan_eu.c: 837: frequency = 0;
 13860  0046FE  0E00               	movlw	0
 13861  004700  0100               	movlb	0	; () banked
 13862  004702  6FAD               	movwf	UpdateCfList@frequency& (0+255),b
 13863  004704  0E00               	movlw	0
 13864  004706  6FAE               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 13865  004708  0E00               	movlw	0
 13866  00470A  6FAF               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 13867  00470C  0E00               	movlw	0
 13868  00470E  6FB0               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 13869                           
 13870                           ; BSR set to: 0
 13871                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 13872  004710  0EAD               	movlw	low UpdateCfList@frequency
 13873  004712  0100               	movlb	0	; () banked
 13874  004714  6F64               	movwf	memcpy@d1& (0+255),b
 13875  004716  0E00               	movlw	high UpdateCfList@frequency
 13876  004718  0100               	movlb	0	; () banked
 13877  00471A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 13878  00471C  0100               	movlb	0	; () banked
 13879  00471E  51B2               	movf	UpdateCfList@i& (0+255),w,b
 13880  004720  0D03               	mullw	3
 13881  004722  0E0D               	movlw	13
 13882  004724  26F3               	addwf	prodl,f,c
 13883  004726  0E00               	movlw	0
 13884  004728  22F4               	addwfc	prodh,f,c
 13885  00472A  50F3               	movf	prodl,w,c
 13886  00472C  0100               	movlb	0	; () banked
 13887  00472E  25AA               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 13888  004730  0100               	movlb	0	; () banked
 13889  004732  6F66               	movwf	memcpy@s1& (0+255),b
 13890  004734  50F4               	movf	prodh,w,c
 13891  004736  0100               	movlb	0	; () banked
 13892  004738  21AB               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 13893  00473A  0100               	movlb	0	; () banked
 13894  00473C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 13895  00473E  0E00               	movlw	0
 13896  004740  0100               	movlb	0	; () banked
 13897  004742  6F69               	movwf	(memcpy@n+1)& (0+255),b
 13898  004744  0E03               	movlw	3
 13899  004746  6F68               	movwf	memcpy@n& (0+255),b
 13900  004748  ECCA  F048         	call	_memcpy	;wreg free
 13901                           
 13902                           ;lorawan_eu.c: 839: frequency *= 100;
 13903  00474C  C0AD  F09E         	movff	UpdateCfList@frequency,___lmul@multiplier
 13904  004750  C0AE  F09F         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 13905  004754  C0AF  F0A0         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 13906  004758  C0B0  F0A1         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 13907  00475C  0E64               	movlw	100
 13908  00475E  0100               	movlb	0	; () banked
 13909  004760  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 13910  004762  0E00               	movlw	0
 13911  004764  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 13912  004766  0E00               	movlw	0
 13913  004768  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 13914  00476A  0E00               	movlw	0
 13915  00476C  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 13916  00476E  EC82  F046         	call	___lmul	;wreg free
 13917  004772  C09E  F0AD         	movff	?___lmul,UpdateCfList@frequency
 13918  004776  C09F  F0AE         	movff	?___lmul+1,UpdateCfList@frequency+1
 13919  00477A  C0A0  F0AF         	movff	?___lmul+2,UpdateCfList@frequency+2
 13920  00477E  C0A1  F0B0         	movff	?___lmul+3,UpdateCfList@frequency+3
 13921                           
 13922                           ;lorawan_eu.c: 840: if (frequency != 0)
 13923  004782  0100               	movlb	0	; () banked
 13924  004784  51AD               	movf	UpdateCfList@frequency& (0+255),w,b
 13925  004786  0100               	movlb	0	; () banked
 13926  004788  11AE               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 13927  00478A  0100               	movlb	0	; () banked
 13928  00478C  11AF               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 13929  00478E  0100               	movlb	0	; () banked
 13930  004790  11B0               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 13931  004792  B4D8               	btfsc	status,2,c
 13932  004794  D0C6               	goto	l15169
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;lorawan_eu.c: 841: {
 13936                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 13937  004796  C0AD  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 13938  00479A  C0AE  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 13939  00479E  C0AF  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 13940  0047A2  C0B0  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 13941  0047A6  EC47  F045         	call	_ValidateFrequency	;wreg free
 13942  0047AA  0900               	iorlw	0
 13943  0047AC  A4D8               	btfss	status,2,c
 13944  0047AE  D0C2               	goto	l15171
 13945                           
 13946                           ;lorawan_eu.c: 843: {
 13947                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 13948  0047B0  0100               	movlb	0	; () banked
 13949  0047B2  51B2               	movf	UpdateCfList@i& (0+255),w,b
 13950  0047B4  0100               	movlb	0	; () banked
 13951  0047B6  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13952  0047B8  0100               	movlb	0	; () banked
 13953  0047BA  6F64               	movwf	___wmul@multiplier& (0+255),b
 13954  0047BC  0100               	movlb	0	; () banked
 13955  0047BE  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 13956  0047C0  0100               	movlb	0	; () banked
 13957  0047C2  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13958  0047C4  0E00               	movlw	0
 13959  0047C6  0100               	movlb	0	; () banked
 13960  0047C8  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13961  0047CA  0E0E               	movlw	14
 13962  0047CC  6F66               	movwf	___wmul@multiplicand& (0+255),b
 13963  0047CE  EC64  F04D         	call	___wmul	;wreg free
 13964  0047D2  0E00               	movlw	low _Channels
 13965  0047D4  0100               	movlb	0	; () banked
 13966  0047D6  2564               	addwf	?___wmul& (0+255),w,b
 13967  0047D8  6ED9               	movwf	fsr2l,c
 13968  0047DA  0E04               	movlw	high _Channels
 13969  0047DC  0100               	movlb	0	; () banked
 13970  0047DE  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 13971  0047E0  6EDA               	movwf	fsr2h,c
 13972  0047E2  C0AD  FFDE         	movff	UpdateCfList@frequency,postinc2
 13973  0047E6  C0AE  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 13974  0047EA  C0AF  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 13975  0047EE  C0B0  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 13976                           
 13977                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 13978  0047F2  0100               	movlb	0	; () banked
 13979  0047F4  51B2               	movf	UpdateCfList@i& (0+255),w,b
 13980  0047F6  0100               	movlb	0	; () banked
 13981  0047F8  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13982  0047FA  0100               	movlb	0	; () banked
 13983  0047FC  6F64               	movwf	___wmul@multiplier& (0+255),b
 13984  0047FE  0100               	movlb	0	; () banked
 13985  004800  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 13986  004802  0100               	movlb	0	; () banked
 13987  004804  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 13988  004806  0E00               	movlw	0
 13989  004808  0100               	movlb	0	; () banked
 13990  00480A  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13991  00480C  0E0E               	movlw	14
 13992  00480E  6F66               	movwf	___wmul@multiplicand& (0+255),b
 13993  004810  EC64  F04D         	call	___wmul	;wreg free
 13994  004814  0E05               	movlw	5
 13995  004816  0100               	movlb	0	; () banked
 13996  004818  2764               	addwf	?___wmul& (0+255),f,b
 13997  00481A  0E00               	movlw	0
 13998  00481C  0100               	movlb	0	; () banked
 13999  00481E  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14000  004820  0E00               	movlw	low _Channels
 14001  004822  0100               	movlb	0	; () banked
 14002  004824  2564               	addwf	?___wmul& (0+255),w,b
 14003  004826  6ED9               	movwf	fsr2l,c
 14004  004828  0E04               	movlw	high _Channels
 14005  00482A  0100               	movlb	0	; () banked
 14006  00482C  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14007  00482E  6EDA               	movwf	fsr2h,c
 14008  004830  0104               	movlb	4	; () banked
 14009  004832  50DF               	movf	223,w,c
 14010  004834  0B0F               	andlw	-241
 14011  004836  0950               	iorlw	80
 14012  004838  6EDF               	movwf	223,c
 14013                           
 14014                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 14015  00483A  0100               	movlb	0	; () banked
 14016  00483C  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14017  00483E  0100               	movlb	0	; () banked
 14018  004840  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14019  004842  0100               	movlb	0	; () banked
 14020  004844  6F64               	movwf	___wmul@multiplier& (0+255),b
 14021  004846  0100               	movlb	0	; () banked
 14022  004848  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14023  00484A  0100               	movlb	0	; () banked
 14024  00484C  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14025  00484E  0E00               	movlw	0
 14026  004850  0100               	movlb	0	; () banked
 14027  004852  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14028  004854  0E0E               	movlw	14
 14029  004856  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14030  004858  EC64  F04D         	call	___wmul	;wreg free
 14031  00485C  0E05               	movlw	5
 14032  00485E  0100               	movlb	0	; () banked
 14033  004860  2764               	addwf	?___wmul& (0+255),f,b
 14034  004862  0E00               	movlw	0
 14035  004864  0100               	movlb	0	; () banked
 14036  004866  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14037  004868  0E00               	movlw	low _Channels
 14038  00486A  0100               	movlb	0	; () banked
 14039  00486C  2564               	addwf	?___wmul& (0+255),w,b
 14040  00486E  6ED9               	movwf	fsr2l,c
 14041  004870  0E04               	movlw	high _Channels
 14042  004872  0100               	movlb	0	; () banked
 14043  004874  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14044  004876  6EDA               	movwf	fsr2h,c
 14045  004878  0104               	movlb	4	; () banked
 14046  00487A  90DF               	bcf	223,0,c
 14047  00487C  92DF               	bcf	223,1,c
 14048  00487E  94DF               	bcf	223,2,c
 14049  004880  96DF               	bcf	223,3,c
 14050                           
 14051                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 14052  004882  0100               	movlb	0	; () banked
 14053  004884  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14054  004886  0100               	movlb	0	; () banked
 14055  004888  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14056  00488A  0100               	movlb	0	; () banked
 14057  00488C  6F64               	movwf	___wmul@multiplier& (0+255),b
 14058  00488E  0100               	movlb	0	; () banked
 14059  004890  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14060  004892  0100               	movlb	0	; () banked
 14061  004894  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14062  004896  0E00               	movlw	0
 14063  004898  0100               	movlb	0	; () banked
 14064  00489A  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14065  00489C  0E0E               	movlw	14
 14066  00489E  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14067  0048A0  EC64  F04D         	call	___wmul	;wreg free
 14068  0048A4  0E06               	movlw	6
 14069  0048A6  0100               	movlb	0	; () banked
 14070  0048A8  2764               	addwf	?___wmul& (0+255),f,b
 14071  0048AA  0E00               	movlw	0
 14072  0048AC  0100               	movlb	0	; () banked
 14073  0048AE  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14074  0048B0  0E00               	movlw	low _Channels
 14075  0048B2  0100               	movlb	0	; () banked
 14076  0048B4  2564               	addwf	?___wmul& (0+255),w,b
 14077  0048B6  6ED9               	movwf	fsr2l,c
 14078  0048B8  0E04               	movlw	high _Channels
 14079  0048BA  0100               	movlb	0	; () banked
 14080  0048BC  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14081  0048BE  6EDA               	movwf	fsr2h,c
 14082  0048C0  0EE7               	movlw	231
 14083  0048C2  6EDE               	movwf	postinc2,c
 14084  0048C4  0E03               	movlw	3
 14085  0048C6  6EDD               	movwf	postdec2,c
 14086                           
 14087                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 14088  0048C8  0100               	movlb	0	; () banked
 14089  0048CA  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14090  0048CC  0100               	movlb	0	; () banked
 14091  0048CE  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14092  0048D0  0100               	movlb	0	; () banked
 14093  0048D2  6F64               	movwf	___wmul@multiplier& (0+255),b
 14094  0048D4  0100               	movlb	0	; () banked
 14095  0048D6  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14096  0048D8  0100               	movlb	0	; () banked
 14097  0048DA  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14098  0048DC  0E00               	movlw	0
 14099  0048DE  0100               	movlb	0	; () banked
 14100  0048E0  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14101  0048E2  0E0E               	movlw	14
 14102  0048E4  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14103  0048E6  EC64  F04D         	call	___wmul	;wreg free
 14104  0048EA  0E0D               	movlw	13
 14105  0048EC  0100               	movlb	0	; () banked
 14106  0048EE  2764               	addwf	?___wmul& (0+255),f,b
 14107  0048F0  0E00               	movlw	0
 14108  0048F2  0100               	movlb	0	; () banked
 14109  0048F4  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14110  0048F6  0E00               	movlw	low _Channels
 14111  0048F8  0100               	movlb	0	; () banked
 14112  0048FA  2564               	addwf	?___wmul& (0+255),w,b
 14113  0048FC  6ED9               	movwf	fsr2l,c
 14114  0048FE  0E04               	movlw	high _Channels
 14115  004900  0100               	movlb	0	; () banked
 14116  004902  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14117  004904  6EDA               	movwf	fsr2h,c
 14118  004906  0EFF               	movlw	255
 14119  004908  6EDF               	movwf	indf2,c
 14120                           
 14121                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 14122  00490A  0E01               	movlw	1
 14123  00490C  0100               	movlb	0	; () banked
 14124  00490E  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14125  004910  0100               	movlb	0	; () banked
 14126  004912  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14127  004914  0100               	movlb	0	; () banked
 14128  004916  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14129  004918  ECFB  F048         	call	_LORAWAN_SetChannelIdStatus
 14130                           
 14131                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 14132  00491C  0102               	movlb	2	; () banked
 14133  00491E  8703               	bsf	(_loRa+3)& (0+255),3,b
 14134                           
 14135                           ; BSR set to: 2
 14136                           ;lorawan_eu.c: 851: }
 14137                           ;lorawan_eu.c: 852: }
 14138  004920  D009               	goto	l15171
 14139  004922                     l15169:
 14140                           
 14141                           ;lorawan_eu.c: 853: else
 14142                           ;lorawan_eu.c: 854: {
 14143                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 14144  004922  0E00               	movlw	0
 14145  004924  0100               	movlb	0	; () banked
 14146  004926  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14147  004928  0100               	movlb	0	; () banked
 14148  00492A  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14149  00492C  0100               	movlb	0	; () banked
 14150  00492E  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14151  004930  ECFB  F048         	call	_LORAWAN_SetChannelIdStatus
 14152  004934                     l15171:
 14153  004934  0100               	movlb	0	; () banked
 14154  004936  2BB2               	incf	UpdateCfList@i& (0+255),f,b
 14155  004938  D6DD               	goto	l15151
 14156  00493A                     l1150:
 14157                           
 14158                           ; BSR set to: 0
 14159                           ;lorawan_eu.c: 856: }
 14160                           ;lorawan_eu.c: 857: }
 14161                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 14162  00493A  0102               	movlb	2	; () banked
 14163  00493C  8703               	bsf	(_loRa+3)& (0+255),3,b
 14164  00493E  0012               	return	
 14165  004940                     __end_of_UpdateCfList:
 14166                           	opt stack 0
 14167                           tosu	equ	0xFFF
 14168                           tosh	equ	0xFFE
 14169                           tosl	equ	0xFFD
 14170                           pclath	equ	0xFFA
 14171                           tblptru	equ	0xFF8
 14172                           tblptrh	equ	0xFF7
 14173                           tblptrl	equ	0xFF6
 14174                           tablat	equ	0xFF5
 14175                           prodh	equ	0xFF4
 14176                           prodl	equ	0xFF3
 14177                           intcon	equ	0xFF2
 14178                           intcon2	equ	0xFF1
 14179                           intcon3	equ	0xFF0
 14180                           postinc0	equ	0xFEE
 14181                           wreg	equ	0xFE8
 14182                           postinc1	equ	0xFE6
 14183                           postdec1	equ	0xFE5
 14184                           plusw1	equ	0xFE3
 14185                           fsr1h	equ	0xFE2
 14186                           fsr1l	equ	0xFE1
 14187                           indf2	equ	0xFDF
 14188                           postinc2	equ	0xFDE
 14189                           postdec2	equ	0xFDD
 14190                           fsr2h	equ	0xFDA
 14191                           fsr2l	equ	0xFD9
 14192                           status	equ	0xFD8
 14193                           
 14194 ;; *************** function _StartReTxTimer *****************
 14195 ;; Defined at:
 14196 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14197 ;; Parameters:    Size  Location     Type
 14198 ;;		None
 14199 ;; Auto vars:     Size  Location     Type
 14200 ;;  minim           4   66[BANK0 ] unsigned long 
 14201 ;;  i               1   70[BANK0 ] unsigned char 
 14202 ;; Return value:  Size  Location     Type
 14203 ;;                  1    wreg      void 
 14204 ;; Registers used:
 14205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14206 ;; Tracked objects:
 14207 ;;		On entry : 0/0
 14208 ;;		On exit  : 0/0
 14209 ;;		Unchanged: 0/0
 14210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14212 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14213 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14214 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14215 ;;Total ram usage:        9 bytes
 14216 ;; Hardware stack levels used:    1
 14217 ;; Hardware stack levels required when called:   11
 14218 ;; This function calls:
 14219 ;;		_SwTimerSetTimeout
 14220 ;;		_SwTimerStart
 14221 ;;		___lldiv
 14222 ;; This function is called by:
 14223 ;;		_LORAWAN_RxDone
 14224 ;; This function uses a non-reentrant model
 14225 ;;
 14226                           
 14227                           	psect	text64
 14228  005834                     __ptext64:
 14229                           	opt stack 0
 14230  005834                     _StartReTxTimer:
 14231                           	opt stack 15
 14232                           
 14233                           ;lorawan_eu.c: 904: uint8_t i;
 14234                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 14235                           
 14236                           ;incstack = 0
 14237  005834  0100               	movlb	0	; () banked
 14238  005836  69A2               	setf	StartReTxTimer@minim& (0+255),b
 14239  005838  69A3               	setf	(StartReTxTimer@minim+1)& (0+255),b
 14240  00583A  69A4               	setf	(StartReTxTimer@minim+2)& (0+255),b
 14241  00583C  69A5               	setf	(StartReTxTimer@minim+3)& (0+255),b
 14242                           
 14243                           ; BSR set to: 0
 14244                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 14245  00583E  0E00               	movlw	0
 14246  005840  0100               	movlb	0	; () banked
 14247  005842  6FA6               	movwf	StartReTxTimer@i& (0+255),b
 14248  005844  D085               	goto	l15201
 14249  005846                     l15187:
 14250                           
 14251                           ;lorawan_eu.c: 908: {
 14252                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 14253  005846  0100               	movlb	0	; () banked
 14254  005848  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14255  00584A  0D0E               	mullw	14
 14256  00584C  0E04               	movlw	4
 14257  00584E  26F3               	addwf	prodl,f,c
 14258  005850  0E00               	movlw	0
 14259  005852  22F4               	addwfc	prodh,f,c
 14260  005854  0E00               	movlw	low _Channels
 14261  005856  24F3               	addwf	prodl,w,c
 14262  005858  6ED9               	movwf	fsr2l,c
 14263  00585A  0E04               	movlw	high _Channels
 14264  00585C  20F4               	addwfc	prodh,w,c
 14265  00585E  6EDA               	movwf	fsr2h,c
 14266  005860  04DE               	decf	postinc2,w,c
 14267  005862  A4D8               	btfss	status,2,c
 14268  005864  D073               	goto	l15199
 14269                           
 14270                           ; BSR set to: 0
 14271  005866  0100               	movlb	0	; () banked
 14272  005868  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14273  00586A  0D0E               	mullw	14
 14274  00586C  0E08               	movlw	8
 14275  00586E  26F3               	addwf	prodl,f,c
 14276  005870  0E00               	movlw	0
 14277  005872  22F4               	addwfc	prodh,f,c
 14278  005874  0E00               	movlw	low _Channels
 14279  005876  24F3               	addwf	prodl,w,c
 14280  005878  6ED9               	movwf	fsr2l,c
 14281  00587A  0E04               	movlw	high _Channels
 14282  00587C  20F4               	addwfc	prodh,w,c
 14283  00587E  6EDA               	movwf	fsr2h,c
 14284  005880  50DE               	movf	postinc2,w,c
 14285  005882  10DE               	iorwf	postinc2,w,c
 14286  005884  10DE               	iorwf	postinc2,w,c
 14287  005886  10DE               	iorwf	postinc2,w,c
 14288  005888  B4D8               	btfsc	status,2,c
 14289  00588A  D060               	goto	l15199
 14290                           
 14291                           ; BSR set to: 0
 14292  00588C  0100               	movlb	0	; () banked
 14293  00588E  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14294  005890  0D0E               	mullw	14
 14295  005892  0E08               	movlw	8
 14296  005894  26F3               	addwf	prodl,f,c
 14297  005896  0E00               	movlw	0
 14298  005898  22F4               	addwfc	prodh,f,c
 14299  00589A  0E00               	movlw	low _Channels
 14300  00589C  24F3               	addwf	prodl,w,c
 14301  00589E  6ED9               	movwf	fsr2l,c
 14302  0058A0  0E04               	movlw	high _Channels
 14303  0058A2  20F4               	addwfc	prodh,w,c
 14304  0058A4  6EDA               	movwf	fsr2h,c
 14305  0058A6  50DE               	movf	postinc2,w,c
 14306  0058A8  0100               	movlb	0	; () banked
 14307  0058AA  5DA2               	subwf	StartReTxTimer@minim& (0+255),w,b
 14308  0058AC  50DE               	movf	postinc2,w,c
 14309  0058AE  0100               	movlb	0	; () banked
 14310  0058B0  59A3               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 14311  0058B2  50DE               	movf	postinc2,w,c
 14312  0058B4  0100               	movlb	0	; () banked
 14313  0058B6  59A4               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 14314  0058B8  50DE               	movf	postinc2,w,c
 14315  0058BA  0100               	movlb	0	; () banked
 14316  0058BC  59A5               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 14317  0058BE  A0D8               	btfss	status,0,c
 14318  0058C0  D045               	goto	l15199
 14319                           
 14320                           ; BSR set to: 0
 14321  0058C2  0100               	movlb	0	; () banked
 14322  0058C4  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14323  0058C6  0D0E               	mullw	14
 14324  0058C8  0E05               	movlw	5
 14325  0058CA  26F3               	addwf	prodl,f,c
 14326  0058CC  0E00               	movlw	0
 14327  0058CE  22F4               	addwfc	prodh,f,c
 14328  0058D0  0E00               	movlw	low _Channels
 14329  0058D2  24F3               	addwf	prodl,w,c
 14330  0058D4  6ED9               	movwf	fsr2l,c
 14331  0058D6  0E04               	movlw	high _Channels
 14332  0058D8  20F4               	addwfc	prodh,w,c
 14333  0058DA  6EDA               	movwf	fsr2h,c
 14334  0058DC  0104               	movlb	4	; () banked
 14335  0058DE  50DF               	movf	223,w,c
 14336  0058E0  0B0F               	andlw	15
 14337  0058E2  0100               	movlb	0	; () banked
 14338  0058E4  6F9E               	movwf	??_StartReTxTimer& (0+255),b
 14339  0058E6  0100               	movlb	0	; () banked
 14340  0058E8  519E               	movf	??_StartReTxTimer& (0+255),w,b
 14341  0058EA  0102               	movlb	2	; () banked
 14342  0058EC  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 14343  0058EE  A0D8               	btfss	status,0,c
 14344  0058F0  D02D               	goto	l15199
 14345                           
 14346                           ; BSR set to: 2
 14347  0058F2  0100               	movlb	0	; () banked
 14348  0058F4  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14349  0058F6  0D0E               	mullw	14
 14350  0058F8  0E05               	movlw	5
 14351  0058FA  26F3               	addwf	prodl,f,c
 14352  0058FC  0E00               	movlw	0
 14353  0058FE  22F4               	addwfc	prodh,f,c
 14354  005900  0E00               	movlw	low _Channels
 14355  005902  24F3               	addwf	prodl,w,c
 14356  005904  6ED9               	movwf	fsr2l,c
 14357  005906  0E04               	movlw	high _Channels
 14358  005908  20F4               	addwfc	prodh,w,c
 14359  00590A  6EDA               	movwf	fsr2h,c
 14360  00590C  0104               	movlb	4	; () banked
 14361  00590E  38DF               	swapf	223,w,c
 14362  005910  0B0F               	andlw	15
 14363  005912  0100               	movlb	0	; () banked
 14364  005914  6F9E               	movwf	??_StartReTxTimer& (0+255),b
 14365  005916  0102               	movlb	2	; () banked
 14366  005918  51DF               	movf	(_loRa+223)& (0+255),w,b
 14367  00591A  0100               	movlb	0	; () banked
 14368  00591C  5D9E               	subwf	??_StartReTxTimer& (0+255),w,b
 14369  00591E  A0D8               	btfss	status,0,c
 14370  005920  D015               	goto	l15199
 14371                           
 14372                           ; BSR set to: 0
 14373                           ;lorawan_eu.c: 910: {
 14374                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 14375  005922  0100               	movlb	0	; () banked
 14376  005924  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14377  005926  0D0E               	mullw	14
 14378  005928  0E08               	movlw	8
 14379  00592A  26F3               	addwf	prodl,f,c
 14380  00592C  0E00               	movlw	0
 14381  00592E  22F4               	addwfc	prodh,f,c
 14382  005930  0E00               	movlw	low _Channels
 14383  005932  24F3               	addwf	prodl,w,c
 14384  005934  6ED9               	movwf	fsr2l,c
 14385  005936  0E04               	movlw	high _Channels
 14386  005938  20F4               	addwfc	prodh,w,c
 14387  00593A  6EDA               	movwf	fsr2h,c
 14388  00593C  CFDE F0A2          	movff	postinc2,StartReTxTimer@minim
 14389  005940  CFDE F0A3          	movff	postinc2,StartReTxTimer@minim+1
 14390  005944  CFDE F0A4          	movff	postinc2,StartReTxTimer@minim+2
 14391  005948  CFDE F0A5          	movff	postinc2,StartReTxTimer@minim+3
 14392  00594C                     l15199:
 14393  00594C  0100               	movlb	0	; () banked
 14394  00594E  2BA6               	incf	StartReTxTimer@i& (0+255),f,b
 14395  005950                     l15201:
 14396                           
 14397                           ; BSR set to: 0
 14398  005950  0100               	movlb	0	; () banked
 14399  005952  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14400  005954  0102               	movlb	2	; () banked
 14401  005956  5DED               	subwf	(_loRa+237)& (0+255),w,b
 14402  005958  B0D8               	btfsc	status,0,c
 14403  00595A  D775               	goto	l15187
 14404                           
 14405                           ; BSR set to: 2
 14406                           ;lorawan_eu.c: 912: }
 14407                           ;lorawan_eu.c: 913: }
 14408                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 14409                           
 14410                           ; BSR set to: 2
 14411  00595C  0102               	movlb	2	; () banked
 14412  00595E  5102               	movf	(_loRa+2)& (0+255),w,b
 14413  005960  0BF0               	andlw	-16
 14414  005962  0906               	iorlw	6
 14415  005964  6F02               	movwf	(_loRa+2)& (0+255),b
 14416                           
 14417                           ; BSR set to: 2
 14418                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 14419  005966  C0A2  F09E         	movff	StartReTxTimer@minim,??_StartReTxTimer
 14420  00596A  C0A3  F09F         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 14421  00596E  C0A4  F0A0         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 14422  005972  C0A5  F0A1         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 14423  005976  0E0C               	movlw	12
 14424  005978                     u17485:
 14425  005978  90D8               	bcf	status,0,c
 14426  00597A  0100               	movlb	0	; () banked
 14427  00597C  379E               	rlcf	??_StartReTxTimer& (0+255),f,b
 14428  00597E  379F               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 14429  005980  37A0               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 14430  005982  37A1               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 14431  005984  2EE8               	decfsz	wreg,f,c
 14432  005986  D7F8               	goto	u17485
 14433  005988  C09E  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 14434  00598C  C09F  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 14435  005990  C0A0  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 14436  005994  C0A1  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 14437  005998  0E7D               	movlw	125
 14438  00599A  0100               	movlb	0	; () banked
 14439  00599C  6F68               	movwf	___lldiv@divisor& (0+255),b
 14440  00599E  0E00               	movlw	0
 14441  0059A0  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 14442  0059A2  0E00               	movlw	0
 14443  0059A4  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 14444  0059A6  0E00               	movlw	0
 14445  0059A8  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 14446  0059AA  EC08  F03F         	call	___lldiv	;wreg free
 14447  0059AE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14448  0059B2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14449  0059B6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14450  0059BA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14451  0059BE  0102               	movlb	2	; () banked
 14452  0059C0  51E6               	movf	(_loRa+230)& (0+255),w,b
 14453  0059C2  EC33  F04A         	call	_SwTimerSetTimeout
 14454                           
 14455                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 14456  0059C6  0102               	movlb	2	; () banked
 14457  0059C8  51E6               	movf	(_loRa+230)& (0+255),w,b
 14458  0059CA  ECCB  F041         	call	_SwTimerStart
 14459  0059CE  0012               	return		;funcret
 14460  0059D0                     __end_of_StartReTxTimer:
 14461                           	opt stack 0
 14462                           tosu	equ	0xFFF
 14463                           tosh	equ	0xFFE
 14464                           tosl	equ	0xFFD
 14465                           pclath	equ	0xFFA
 14466                           tblptru	equ	0xFF8
 14467                           tblptrh	equ	0xFF7
 14468                           tblptrl	equ	0xFF6
 14469                           tablat	equ	0xFF5
 14470                           prodh	equ	0xFF4
 14471                           prodl	equ	0xFF3
 14472                           intcon	equ	0xFF2
 14473                           intcon2	equ	0xFF1
 14474                           intcon3	equ	0xFF0
 14475                           postinc0	equ	0xFEE
 14476                           wreg	equ	0xFE8
 14477                           postinc1	equ	0xFE6
 14478                           postdec1	equ	0xFE5
 14479                           plusw1	equ	0xFE3
 14480                           fsr1h	equ	0xFE2
 14481                           fsr1l	equ	0xFE1
 14482                           indf2	equ	0xFDF
 14483                           postinc2	equ	0xFDE
 14484                           postdec2	equ	0xFDD
 14485                           fsr2h	equ	0xFDA
 14486                           fsr2l	equ	0xFD9
 14487                           status	equ	0xFD8
 14488                           
 14489 ;; *************** function _SetReceptionNotOkState *****************
 14490 ;; Defined at:
 14491 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14492 ;; Parameters:    Size  Location     Type
 14493 ;;		None
 14494 ;; Auto vars:     Size  Location     Type
 14495 ;;		None
 14496 ;; Return value:  Size  Location     Type
 14497 ;;                  1    wreg      void 
 14498 ;; Registers used:
 14499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14500 ;; Tracked objects:
 14501 ;;		On entry : 0/0
 14502 ;;		On exit  : 0/0
 14503 ;;		Unchanged: 0/0
 14504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14509 ;;Total ram usage:        0 bytes
 14510 ;; Hardware stack levels used:    1
 14511 ;; Hardware stack levels required when called:   14
 14512 ;; This function calls:
 14513 ;;		_LORAWAN_EnterContinuousReceive
 14514 ;;		_RxDataDone
 14515 ;; This function is called by:
 14516 ;;		_LORAWAN_RxDone
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text65
 14521  008742                     __ptext65:
 14522                           	opt stack 0
 14523  008742                     _SetReceptionNotOkState:
 14524                           	opt stack 12
 14525                           
 14526                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 14527                           
 14528                           ;incstack = 0
 14529  008742  0102               	movlb	2	; () banked
 14530  008744  5102               	movf	(_loRa+2)& (0+255),w,b
 14531  008746  0B0F               	andlw	15
 14532  008748  0A05               	xorlw	5
 14533  00874A  B4D8               	btfsc	status,2,c
 14534  00874C  D00A               	goto	l2255
 14535                           
 14536                           ; BSR set to: 2
 14537  00874E  0102               	movlb	2	; () banked
 14538  008750  5102               	movf	(_loRa+2)& (0+255),w,b
 14539  008752  0B0F               	andlw	15
 14540  008754  0A03               	xorlw	3
 14541  008756  A4D8               	btfss	status,2,c
 14542  008758  D031               	goto	l15365
 14543                           
 14544                           ; BSR set to: 2
 14545  00875A  0102               	movlb	2	; () banked
 14546  00875C  51F1               	movf	(_loRa+241)& (0+255),w,b
 14547  00875E  B4D8               	btfsc	status,2,c
 14548  008760  D02D               	goto	l15365
 14549  008762                     l2255:
 14550                           
 14551                           ; BSR set to: 2
 14552                           ;lorawan.c: 2000: {
 14553                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 14554  008762  0102               	movlb	2	; () banked
 14555  008764  9100               	bcf	_loRa& (0+255),0,b
 14556                           
 14557                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14558  008766  0102               	movlb	2	; () banked
 14559  008768  9102               	bcf	(_loRa+2)& (0+255),0,b
 14560  00876A  9302               	bcf	(_loRa+2)& (0+255),1,b
 14561  00876C  9502               	bcf	(_loRa+2)& (0+255),2,b
 14562  00876E  9702               	bcf	(_loRa+2)& (0+255),3,b
 14563                           
 14564                           ; BSR set to: 2
 14565                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14566  008770  0102               	movlb	2	; () banked
 14567  008772  5112               	movf	(_loRa+18)& (0+255),w,b
 14568  008774  A4D8               	btfss	status,2,c
 14569  008776  D020               	goto	l15363
 14570                           
 14571                           ; BSR set to: 2
 14572  008778  0100               	movlb	0	; () banked
 14573  00877A  51F4               	movf	_rxPayload& (0+255),w,b
 14574  00877C  0100               	movlb	0	; () banked
 14575  00877E  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 14576  008780  B4D8               	btfsc	status,2,c
 14577  008782  D01A               	goto	l15363
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;lorawan.c: 2005: {
 14581                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14582  008784  0102               	movlb	2	; () banked
 14583  008786  9B00               	bcf	_loRa& (0+255),5,b
 14584                           
 14585                           ; BSR set to: 2
 14586                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14587  008788  0E00               	movlw	0
 14588  00878A  0100               	movlb	0	; () banked
 14589  00878C  6F67               	movwf	RxDataDone@pData& (0+255),b
 14590  00878E  0E00               	movlw	0
 14591  008790  0100               	movlb	0	; () banked
 14592  008792  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 14593  008794  0E00               	movlw	0
 14594  008796  0100               	movlb	0	; () banked
 14595  008798  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 14596  00879A  0E00               	movlw	0
 14597  00879C  0100               	movlb	0	; () banked
 14598  00879E  6F6A               	movwf	RxDataDone@status& (0+255),b
 14599  0087A0  D801               	call	u17808
 14600  0087A2  D00A               	goto	l15363
 14601  0087A4                     u17808:
 14602  0087A4  0005               	push	
 14603  0087A6  6EFA               	movwf	pclath,c
 14604  0087A8  0100               	movlb	0	; () banked
 14605  0087AA  51F4               	movf	_rxPayload& (0+255),w,b
 14606  0087AC  6EFD               	movwf	tosl,c
 14607  0087AE  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 14608  0087B0  6EFE               	movwf	tosh,c
 14609  0087B2  6AFF               	clrf	tosu,c
 14610  0087B4  50FA               	movf	pclath,w,c
 14611  0087B6  0012               	return		;indir
 14612  0087B8                     l15363:
 14613                           
 14614                           ;lorawan.c: 2008: }
 14615                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14616  0087B8  0102               	movlb	2	; () banked
 14617  0087BA  9303               	bcf	(_loRa+3)& (0+255),1,b
 14618  0087BC                     l15365:
 14619                           
 14620                           ; BSR set to: 2
 14621                           ;lorawan.c: 2010: }
 14622                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14623  0087BC  0E02               	movlw	2
 14624  0087BE  0102               	movlb	2	; () banked
 14625  0087C0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 14626  0087C2  A4D8               	btfss	status,2,c
 14627  0087C4  0012               	return	
 14628                           
 14629                           ; BSR set to: 2
 14630                           ;lorawan.c: 2013: {
 14631                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14632  0087C6  0102               	movlb	2	; () banked
 14633  0087C8  5102               	movf	(_loRa+2)& (0+255),w,b
 14634  0087CA  0BF0               	andlw	-16
 14635  0087CC  0909               	iorlw	9
 14636  0087CE  6F02               	movwf	(_loRa+2)& (0+255),b
 14637                           
 14638                           ; BSR set to: 2
 14639                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14640  0087D0  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14641  0087D4  0012               	return	
 14642  0087D6                     __end_of_SetReceptionNotOkState:
 14643                           	opt stack 0
 14644                           tosu	equ	0xFFF
 14645                           tosh	equ	0xFFE
 14646                           tosl	equ	0xFFD
 14647                           pclath	equ	0xFFA
 14648                           tblptru	equ	0xFF8
 14649                           tblptrh	equ	0xFF7
 14650                           tblptrl	equ	0xFF6
 14651                           tablat	equ	0xFF5
 14652                           prodh	equ	0xFF4
 14653                           prodl	equ	0xFF3
 14654                           intcon	equ	0xFF2
 14655                           intcon2	equ	0xFF1
 14656                           intcon3	equ	0xFF0
 14657                           postinc0	equ	0xFEE
 14658                           wreg	equ	0xFE8
 14659                           postinc1	equ	0xFE6
 14660                           postdec1	equ	0xFE5
 14661                           plusw1	equ	0xFE3
 14662                           fsr1h	equ	0xFE2
 14663                           fsr1l	equ	0xFE1
 14664                           indf2	equ	0xFDF
 14665                           postinc2	equ	0xFDE
 14666                           postdec2	equ	0xFDD
 14667                           fsr2h	equ	0xFDA
 14668                           fsr2l	equ	0xFD9
 14669                           status	equ	0xFD8
 14670                           
 14671 ;; *************** function _SetJoinFailState *****************
 14672 ;; Defined at:
 14673 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14674 ;; Parameters:    Size  Location     Type
 14675 ;;		None
 14676 ;; Auto vars:     Size  Location     Type
 14677 ;;		None
 14678 ;; Return value:  Size  Location     Type
 14679 ;;                  1    wreg      void 
 14680 ;; Registers used:
 14681 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 14682 ;; Tracked objects:
 14683 ;;		On entry : 0/0
 14684 ;;		On exit  : 0/0
 14685 ;;		Unchanged: 0/0
 14686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14690 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14691 ;;Total ram usage:        0 bytes
 14692 ;; Hardware stack levels used:    1
 14693 ;; Hardware stack levels required when called:    8
 14694 ;; This function calls:
 14695 ;;		_RxJoinResponse
 14696 ;; This function is called by:
 14697 ;;		_LORAWAN_RxTimeout
 14698 ;;		_LORAWAN_RxDone
 14699 ;; This function uses a non-reentrant model
 14700 ;;
 14701                           
 14702                           	psect	text66
 14703  009A58                     __ptext66:
 14704                           	opt stack 0
 14705  009A58                     _SetJoinFailState:
 14706                           	opt stack 18
 14707                           
 14708                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14709                           
 14710                           ;incstack = 0
 14711  009A58  0102               	movlb	2	; () banked
 14712  009A5A  9902               	bcf	(_loRa+2)& (0+255),4,b
 14713                           
 14714                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14715  009A5C  0102               	movlb	2	; () banked
 14716  009A5E  9500               	bcf	_loRa& (0+255),2,b
 14717                           
 14718                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14719  009A60  0102               	movlb	2	; () banked
 14720  009A62  9102               	bcf	(_loRa+2)& (0+255),0,b
 14721  009A64  9302               	bcf	(_loRa+2)& (0+255),1,b
 14722  009A66  9502               	bcf	(_loRa+2)& (0+255),2,b
 14723  009A68  9702               	bcf	(_loRa+2)& (0+255),3,b
 14724                           
 14725                           ; BSR set to: 2
 14726                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14727  009A6A  0100               	movlb	0	; () banked
 14728  009A6C  51F6               	movf	(_rxPayload+2)& (0+255),w,b
 14729  009A6E  0100               	movlb	0	; () banked
 14730  009A70  11F7               	iorwf	(_rxPayload+3)& (0+255),w,b
 14731  009A72  B4D8               	btfsc	status,2,c
 14732  009A74  0012               	return	
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;lorawan.c: 1110: {
 14736                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14737  009A76  D801               	call	u17348
 14738  009A78  0012               	return	
 14739  009A7A                     u17348:
 14740  009A7A  0005               	push	
 14741  009A7C  6EFA               	movwf	pclath,c
 14742  009A7E  0100               	movlb	0	; () banked
 14743  009A80  51F6               	movf	(_rxPayload+2)& (0+255),w,b
 14744  009A82  6EFD               	movwf	tosl,c
 14745  009A84  51F7               	movf	(_rxPayload+3)& (0+255),w,b
 14746  009A86  6EFE               	movwf	tosh,c
 14747  009A88  6AFF               	clrf	tosu,c
 14748  009A8A  50FA               	movf	pclath,w,c
 14749  009A8C  0E00               	movlw	0
 14750  009A8E  0012               	return		;indir
 14751  009A90                     __end_of_SetJoinFailState:
 14752                           	opt stack 0
 14753                           tosu	equ	0xFFF
 14754                           tosh	equ	0xFFE
 14755                           tosl	equ	0xFFD
 14756                           pclath	equ	0xFFA
 14757                           tblptru	equ	0xFF8
 14758                           tblptrh	equ	0xFF7
 14759                           tblptrl	equ	0xFF6
 14760                           tablat	equ	0xFF5
 14761                           prodh	equ	0xFF4
 14762                           prodl	equ	0xFF3
 14763                           intcon	equ	0xFF2
 14764                           intcon2	equ	0xFF1
 14765                           intcon3	equ	0xFF0
 14766                           postinc0	equ	0xFEE
 14767                           wreg	equ	0xFE8
 14768                           postinc1	equ	0xFE6
 14769                           postdec1	equ	0xFE5
 14770                           plusw1	equ	0xFE3
 14771                           fsr1h	equ	0xFE2
 14772                           fsr1l	equ	0xFE1
 14773                           indf2	equ	0xFDF
 14774                           postinc2	equ	0xFDE
 14775                           postdec2	equ	0xFDD
 14776                           fsr2h	equ	0xFDA
 14777                           fsr2l	equ	0xFD9
 14778                           status	equ	0xFD8
 14779                           
 14780 ;; *************** function _RxJoinResponse *****************
 14781 ;; Defined at:
 14782 ;;		line 107 in file "main.c"
 14783 ;; Parameters:    Size  Location     Type
 14784 ;;  status          1    wreg     unsigned char 
 14785 ;; Auto vars:     Size  Location     Type
 14786 ;;  status          1    0[COMRAM] unsigned char 
 14787 ;; Return value:  Size  Location     Type
 14788 ;;                  1    wreg      void 
 14789 ;; Registers used:
 14790 ;;		wreg
 14791 ;; Tracked objects:
 14792 ;;		On entry : 0/0
 14793 ;;		On exit  : 0/0
 14794 ;;		Unchanged: 0/0
 14795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14800 ;;Total ram usage:        0 bytes
 14801 ;; Hardware stack levels used:    1
 14802 ;; Hardware stack levels required when called:    7
 14803 ;; This function calls:
 14804 ;;		Nothing
 14805 ;; This function is called by:
 14806 ;;		_main
 14807 ;;		_SetJoinFailState
 14808 ;;		_UpdateJoinSuccessState
 14809 ;; This function uses a non-reentrant model
 14810 ;;
 14811                           
 14812                           	psect	text67
 14813  00A3DA                     __ptext67:
 14814                           	opt stack 0
 14815  00A3DA                     _RxJoinResponse:
 14816                           	opt stack 20
 14817                           
 14818                           ;main.c: 109: PORTAbits.RA4 = 0;
 14819                           
 14820                           ;incstack = 0
 14821  00A3DA  9880               	bcf	3968,4,c	;volatile
 14822  00A3DC  0012               	return		;funcret
 14823  00A3DE                     __end_of_RxJoinResponse:
 14824                           	opt stack 0
 14825                           tosu	equ	0xFFF
 14826                           tosh	equ	0xFFE
 14827                           tosl	equ	0xFFD
 14828                           pclath	equ	0xFFA
 14829                           tblptru	equ	0xFF8
 14830                           tblptrh	equ	0xFF7
 14831                           tblptrl	equ	0xFF6
 14832                           tablat	equ	0xFF5
 14833                           prodh	equ	0xFF4
 14834                           prodl	equ	0xFF3
 14835                           intcon	equ	0xFF2
 14836                           intcon2	equ	0xFF1
 14837                           intcon3	equ	0xFF0
 14838                           postinc0	equ	0xFEE
 14839                           wreg	equ	0xFE8
 14840                           postinc1	equ	0xFE6
 14841                           postdec1	equ	0xFE5
 14842                           plusw1	equ	0xFE3
 14843                           fsr1h	equ	0xFE2
 14844                           fsr1l	equ	0xFE1
 14845                           indf2	equ	0xFDF
 14846                           postinc2	equ	0xFDE
 14847                           postdec2	equ	0xFDD
 14848                           fsr2h	equ	0xFDA
 14849                           fsr2l	equ	0xFD9
 14850                           status	equ	0xFD8
 14851                           
 14852 ;; *************** function _MacExecuteCommands *****************
 14853 ;; Defined at:
 14854 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14855 ;; Parameters:    Size  Location     Type
 14856 ;;  buffer          2   84[BANK0 ] PTR unsigned char 
 14857 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14858 ;;  fOptsLen        1   86[BANK0 ] unsigned char 
 14859 ;; Auto vars:     Size  Location     Type
 14860 ;;  ptr             2   90[BANK0 ] PTR unsigned char 
 14861 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14862 ;;  done            1   89[BANK0 ] unsigned char 
 14863 ;; Return value:  Size  Location     Type
 14864 ;;                  2   84[BANK0 ] PTR unsigned char 
 14865 ;; Registers used:
 14866 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14867 ;; Tracked objects:
 14868 ;;		On entry : 0/0
 14869 ;;		On exit  : 0/0
 14870 ;;		Unchanged: 0/0
 14871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14872 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14873 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14874 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14875 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14876 ;;Total ram usage:        8 bytes
 14877 ;; Hardware stack levels used:    1
 14878 ;; Hardware stack levels required when called:   11
 14879 ;; This function calls:
 14880 ;;		_ExecuteDevStatus
 14881 ;;		_ExecuteDutyCycle
 14882 ;;		_ExecuteLinkAdr
 14883 ;;		_ExecuteLinkCheck
 14884 ;;		_ExecuteNewChannel
 14885 ;;		_ExecuteRxParamSetupReq
 14886 ;;		_ExecuteRxTimingSetup
 14887 ;; This function is called by:
 14888 ;;		_LORAWAN_RxDone
 14889 ;; This function uses a non-reentrant model
 14890 ;;
 14891                           
 14892                           	psect	text68
 14893  003456                     __ptext68:
 14894                           	opt stack 0
 14895  003456                     _MacExecuteCommands:
 14896                           	opt stack 15
 14897                           
 14898                           ;lorawan.c: 1577: bool done = 0;
 14899                           
 14900                           ;incstack = 0
 14901  003456  0E00               	movlw	0
 14902  003458  0100               	movlb	0	; () banked
 14903  00345A  6FB9               	movwf	MacExecuteCommands@done& (0+255),b
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;lorawan.c: 1578: uint8_t *ptr;
 14907                           ;lorawan.c: 1579: ptr = buffer;
 14908  00345C  C0B4  F0BA         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 14909  003460  C0B5  F0BB         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 14910                           
 14911                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 14912  003464  D199               	goto	l15427
 14913  003466                     l15391:
 14914                           
 14915                           ; BSR set to: 0
 14916                           ;lorawan.c: 1581: {
 14917                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 14918  003466  0102               	movlb	2	; () banked
 14919  003468  51A7               	movf	(_loRa+167)& (0+255),w,b
 14920  00346A  0D02               	mullw	2
 14921  00346C  0E00               	movlw	low _loRa
 14922  00346E  0100               	movlb	0	; () banked
 14923  003470  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 14924  003472  0E02               	movlw	high _loRa
 14925  003474  0100               	movlb	0	; () banked
 14926  003476  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14927  003478  0EA8               	movlw	168
 14928  00347A  0100               	movlb	0	; () banked
 14929  00347C  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14930  00347E  0E00               	movlw	0
 14931  003480  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14932  003482  50F3               	movf	prodl,w,c
 14933  003484  0100               	movlb	0	; () banked
 14934  003486  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14935  003488  50F4               	movf	prodh,w,c
 14936  00348A  0100               	movlb	0	; () banked
 14937  00348C  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14938  00348E  0E01               	movlw	1
 14939  003490  0100               	movlb	0	; () banked
 14940  003492  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 14941  003494  6ED9               	movwf	fsr2l,c
 14942  003496  0E00               	movlw	0
 14943  003498  0100               	movlb	0	; () banked
 14944  00349A  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14945  00349C  6EDA               	movwf	fsr2h,c
 14946  00349E  0102               	movlb	2	; () banked
 14947  0034A0  90DF               	bcf	indf2,0,c
 14948                           
 14949                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 14950  0034A2  0102               	movlb	2	; () banked
 14951  0034A4  51A7               	movf	(_loRa+167)& (0+255),w,b
 14952  0034A6  0D02               	mullw	2
 14953  0034A8  0E00               	movlw	low _loRa
 14954  0034AA  0100               	movlb	0	; () banked
 14955  0034AC  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 14956  0034AE  0E02               	movlw	high _loRa
 14957  0034B0  0100               	movlb	0	; () banked
 14958  0034B2  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14959  0034B4  0EA8               	movlw	168
 14960  0034B6  0100               	movlb	0	; () banked
 14961  0034B8  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14962  0034BA  0E00               	movlw	0
 14963  0034BC  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14964  0034BE  50F3               	movf	prodl,w,c
 14965  0034C0  0100               	movlb	0	; () banked
 14966  0034C2  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14967  0034C4  50F4               	movf	prodh,w,c
 14968  0034C6  0100               	movlb	0	; () banked
 14969  0034C8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14970  0034CA  0E01               	movlw	1
 14971  0034CC  0100               	movlb	0	; () banked
 14972  0034CE  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 14973  0034D0  6ED9               	movwf	fsr2l,c
 14974  0034D2  0E00               	movlw	0
 14975  0034D4  0100               	movlb	0	; () banked
 14976  0034D6  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 14977  0034D8  6EDA               	movwf	fsr2h,c
 14978  0034DA  0102               	movlb	2	; () banked
 14979  0034DC  92DF               	bcf	indf2,1,c
 14980                           
 14981                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 14982  0034DE  0102               	movlb	2	; () banked
 14983  0034E0  51A7               	movf	(_loRa+167)& (0+255),w,b
 14984  0034E2  0D02               	mullw	2
 14985  0034E4  0E00               	movlw	low _loRa
 14986  0034E6  0100               	movlb	0	; () banked
 14987  0034E8  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 14988  0034EA  0E02               	movlw	high _loRa
 14989  0034EC  0100               	movlb	0	; () banked
 14990  0034EE  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14991  0034F0  0EA8               	movlw	168
 14992  0034F2  0100               	movlb	0	; () banked
 14993  0034F4  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14994  0034F6  0E00               	movlw	0
 14995  0034F8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 14996  0034FA  50F3               	movf	prodl,w,c
 14997  0034FC  0100               	movlb	0	; () banked
 14998  0034FE  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 14999  003500  50F4               	movf	prodh,w,c
 15000  003502  0100               	movlb	0	; () banked
 15001  003504  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15002  003506  0E01               	movlw	1
 15003  003508  0100               	movlb	0	; () banked
 15004  00350A  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15005  00350C  6ED9               	movwf	fsr2l,c
 15006  00350E  0E00               	movlw	0
 15007  003510  0100               	movlb	0	; () banked
 15008  003512  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15009  003514  6EDA               	movwf	fsr2h,c
 15010  003516  0102               	movlb	2	; () banked
 15011  003518  94DF               	bcf	indf2,2,c
 15012                           
 15013                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15014  00351A  0102               	movlb	2	; () banked
 15015  00351C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15016  00351E  0D02               	mullw	2
 15017  003520  0E00               	movlw	low _loRa
 15018  003522  0100               	movlb	0	; () banked
 15019  003524  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15020  003526  0E02               	movlw	high _loRa
 15021  003528  0100               	movlb	0	; () banked
 15022  00352A  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15023  00352C  0EA8               	movlw	168
 15024  00352E  0100               	movlb	0	; () banked
 15025  003530  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15026  003532  0E00               	movlw	0
 15027  003534  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15028  003536  50F3               	movf	prodl,w,c
 15029  003538  0100               	movlb	0	; () banked
 15030  00353A  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15031  00353C  50F4               	movf	prodh,w,c
 15032  00353E  0100               	movlb	0	; () banked
 15033  003540  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15034  003542  0E01               	movlw	1
 15035  003544  0100               	movlb	0	; () banked
 15036  003546  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15037  003548  6ED9               	movwf	fsr2l,c
 15038  00354A  0E00               	movlw	0
 15039  00354C  0100               	movlb	0	; () banked
 15040  00354E  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15041  003550  6EDA               	movwf	fsr2h,c
 15042  003552  0102               	movlb	2	; () banked
 15043  003554  96DF               	bcf	indf2,3,c
 15044                           
 15045                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15046  003556  0102               	movlb	2	; () banked
 15047  003558  51A7               	movf	(_loRa+167)& (0+255),w,b
 15048  00355A  0D02               	mullw	2
 15049  00355C  0E00               	movlw	low _loRa
 15050  00355E  0100               	movlb	0	; () banked
 15051  003560  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15052  003562  0E02               	movlw	high _loRa
 15053  003564  0100               	movlb	0	; () banked
 15054  003566  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15055  003568  0EA8               	movlw	168
 15056  00356A  0100               	movlb	0	; () banked
 15057  00356C  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15058  00356E  0E00               	movlw	0
 15059  003570  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15060  003572  50F3               	movf	prodl,w,c
 15061  003574  0100               	movlb	0	; () banked
 15062  003576  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15063  003578  50F4               	movf	prodh,w,c
 15064  00357A  0100               	movlb	0	; () banked
 15065  00357C  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15066  00357E  0E01               	movlw	1
 15067  003580  0100               	movlb	0	; () banked
 15068  003582  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15069  003584  6ED9               	movwf	fsr2l,c
 15070  003586  0E00               	movlw	0
 15071  003588  0100               	movlb	0	; () banked
 15072  00358A  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15073  00358C  6EDA               	movwf	fsr2h,c
 15074  00358E  0102               	movlb	2	; () banked
 15075  003590  98DF               	bcf	indf2,4,c
 15076                           
 15077                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15078  003592  0102               	movlb	2	; () banked
 15079  003594  51A7               	movf	(_loRa+167)& (0+255),w,b
 15080  003596  0D02               	mullw	2
 15081  003598  0E00               	movlw	low _loRa
 15082  00359A  0100               	movlb	0	; () banked
 15083  00359C  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15084  00359E  0E02               	movlw	high _loRa
 15085  0035A0  0100               	movlb	0	; () banked
 15086  0035A2  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15087  0035A4  0EA8               	movlw	168
 15088  0035A6  0100               	movlb	0	; () banked
 15089  0035A8  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15090  0035AA  0E00               	movlw	0
 15091  0035AC  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15092  0035AE  50F3               	movf	prodl,w,c
 15093  0035B0  0100               	movlb	0	; () banked
 15094  0035B2  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15095  0035B4  50F4               	movf	prodh,w,c
 15096  0035B6  0100               	movlb	0	; () banked
 15097  0035B8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15098  0035BA  0E01               	movlw	1
 15099  0035BC  0100               	movlb	0	; () banked
 15100  0035BE  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15101  0035C0  6ED9               	movwf	fsr2l,c
 15102  0035C2  0E00               	movlw	0
 15103  0035C4  0100               	movlb	0	; () banked
 15104  0035C6  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15105  0035C8  6EDA               	movwf	fsr2h,c
 15106  0035CA  0102               	movlb	2	; () banked
 15107  0035CC  9ADF               	bcf	indf2,5,c
 15108                           
 15109                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15110  0035CE  0102               	movlb	2	; () banked
 15111  0035D0  51A7               	movf	(_loRa+167)& (0+255),w,b
 15112  0035D2  0D02               	mullw	2
 15113  0035D4  0E00               	movlw	low _loRa
 15114  0035D6  0100               	movlb	0	; () banked
 15115  0035D8  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15116  0035DA  0E02               	movlw	high _loRa
 15117  0035DC  0100               	movlb	0	; () banked
 15118  0035DE  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15119  0035E0  0EA8               	movlw	168
 15120  0035E2  0100               	movlb	0	; () banked
 15121  0035E4  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15122  0035E6  0E00               	movlw	0
 15123  0035E8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15124  0035EA  50F3               	movf	prodl,w,c
 15125  0035EC  0100               	movlb	0	; () banked
 15126  0035EE  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15127  0035F0  50F4               	movf	prodh,w,c
 15128  0035F2  0100               	movlb	0	; () banked
 15129  0035F4  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15130  0035F6  0E01               	movlw	1
 15131  0035F8  0100               	movlb	0	; () banked
 15132  0035FA  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15133  0035FC  6ED9               	movwf	fsr2l,c
 15134  0035FE  0E00               	movlw	0
 15135  003600  0100               	movlb	0	; () banked
 15136  003602  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15137  003604  6EDA               	movwf	fsr2h,c
 15138  003606  0102               	movlb	2	; () banked
 15139  003608  9CDF               	bcf	indf2,6,c
 15140                           
 15141                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15142  00360A  0102               	movlb	2	; () banked
 15143  00360C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15144  00360E  0D02               	mullw	2
 15145  003610  0E00               	movlw	low _loRa
 15146  003612  0100               	movlb	0	; () banked
 15147  003614  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15148  003616  0E02               	movlw	high _loRa
 15149  003618  0100               	movlb	0	; () banked
 15150  00361A  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15151  00361C  0EA8               	movlw	168
 15152  00361E  0100               	movlb	0	; () banked
 15153  003620  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15154  003622  0E00               	movlw	0
 15155  003624  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15156  003626  50F3               	movf	prodl,w,c
 15157  003628  0100               	movlb	0	; () banked
 15158  00362A  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15159  00362C  50F4               	movf	prodh,w,c
 15160  00362E  0100               	movlb	0	; () banked
 15161  003630  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15162  003632  0E01               	movlw	1
 15163  003634  0100               	movlb	0	; () banked
 15164  003636  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15165  003638  6ED9               	movwf	fsr2l,c
 15166  00363A  0E00               	movlw	0
 15167  00363C  0100               	movlb	0	; () banked
 15168  00363E  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15169  003640  6EDA               	movwf	fsr2h,c
 15170  003642  0102               	movlb	2	; () banked
 15171  003644  9EDF               	bcf	indf2,7,c
 15172                           
 15173                           ; BSR set to: 2
 15174                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 15175  003646  C0BA  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15176  00364A  C0BB  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15177  00364E  0102               	movlb	2	; () banked
 15178  003650  51A7               	movf	(_loRa+167)& (0+255),w,b
 15179  003652  0D02               	mullw	2
 15180  003654  0EA8               	movlw	low (_loRa+168)
 15181  003656  24F3               	addwf	prodl,w,c
 15182  003658  6EE9               	movwf	fsr0l,c
 15183  00365A  0E02               	movlw	high (_loRa+168)
 15184  00365C  20F4               	addwfc	prodh,w,c
 15185  00365E  6EEA               	movwf	fsr0h,c
 15186  003660  CFDF FFEF          	movff	indf2,indf0
 15187                           
 15188                           ;lorawan.c: 1595: switch (*ptr ++)
 15189  003664  D069               	goto	l15419
 15190  003666                     l15395:
 15191                           
 15192                           ;lorawan.c: 1598: {
 15193                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 15194  003666  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 15195  00366A  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 15196  00366E  EC01  F04E         	call	_ExecuteLinkCheck
 15197  003672  C064  F0BA         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 15198  003676  C065  F0BB         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 15199  00367A  D052               	goto	l15415
 15200  00367C                     l15399:
 15201                           
 15202                           ;lorawan.c: 1605: {
 15203                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 15204  00367C  C0BA  F073         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 15205  003680  C0BB  F074         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 15206  003684  ECED  F01B         	call	_ExecuteLinkAdr	;wreg free
 15207  003688  C073  F0BA         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 15208  00368C  C074  F0BB         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 15209                           
 15210                           ;lorawan.c: 1607: } break;
 15211  003690  D071               	goto	l15421
 15212  003692                     l15401:
 15213                           
 15214                           ;lorawan.c: 1610: {
 15215                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 15216  003692  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 15217  003696  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 15218  00369A  EC68  F048         	call	_ExecuteDutyCycle	;wreg free
 15219  00369E  C064  F0BA         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 15220  0036A2  C065  F0BB         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 15221                           
 15222                           ;lorawan.c: 1612: } break;
 15223  0036A6  D066               	goto	l15421
 15224  0036A8                     l15403:
 15225                           
 15226                           ;lorawan.c: 1615: {
 15227                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 15228  0036A8  C0BA  F0AA         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 15229  0036AC  C0BB  F0AB         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 15230  0036B0  EC32  F022         	call	_ExecuteRxParamSetupReq	;wreg free
 15231  0036B4  C0AA  F0BA         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 15232  0036B8  C0AB  F0BB         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 15233                           
 15234                           ;lorawan.c: 1617: } break;
 15235  0036BC  D05B               	goto	l15421
 15236  0036BE                     l15405:
 15237                           
 15238                           ;lorawan.c: 1620: {
 15239                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 15240  0036BE  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 15241  0036C2  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 15242  0036C6  EC9C  F051         	call	_ExecuteDevStatus	;wreg free
 15243  0036CA  C064  F0BA         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 15244  0036CE  C065  F0BB         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 15245                           
 15246                           ;lorawan.c: 1622: } break;
 15247  0036D2  D050               	goto	l15421
 15248  0036D4                     l15407:
 15249                           
 15250                           ;lorawan.c: 1625: {
 15251                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 15252  0036D4  C0BA  F0AA         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 15253  0036D8  C0BB  F0AB         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 15254  0036DC  ECC1  F020         	call	_ExecuteNewChannel	;wreg free
 15255  0036E0  C0AA  F0BA         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 15256  0036E4  C0AB  F0BB         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 15257                           
 15258                           ;lorawan.c: 1628: } break;
 15259  0036E8  D045               	goto	l15421
 15260  0036EA                     l15409:
 15261                           
 15262                           ;lorawan.c: 1631: {
 15263                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 15264  0036EA  C0BA  F06B         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 15265  0036EE  C0BB  F06C         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 15266  0036F2  ECBB  F04E         	call	_ExecuteRxTimingSetup	;wreg free
 15267  0036F6  C06B  F0BA         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 15268  0036FA  C06C  F0BB         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 15269                           
 15270                           ;lorawan.c: 1633: } break;
 15271  0036FE  D03A               	goto	l15421
 15272  003700                     l15411:
 15273                           
 15274                           ;lorawan.c: 1636: {
 15275                           ;lorawan.c: 1637: done = 1;
 15276  003700  0E01               	movlw	1
 15277  003702  0100               	movlb	0	; () banked
 15278  003704  6FB9               	movwf	MacExecuteCommands@done& (0+255),b
 15279                           
 15280                           ; BSR set to: 0
 15281                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 15282  003706  0100               	movlb	0	; () banked
 15283  003708  51B6               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15284  00370A  0D01               	mullw	1
 15285  00370C  50F3               	movf	prodl,w,c
 15286  00370E  0100               	movlb	0	; () banked
 15287  003710  25B4               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15288  003712  0100               	movlb	0	; () banked
 15289  003714  6FBA               	movwf	MacExecuteCommands@ptr& (0+255),b
 15290  003716  50F4               	movf	prodh,w,c
 15291  003718  0100               	movlb	0	; () banked
 15292  00371A  21B5               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15293  00371C  0100               	movlb	0	; () banked
 15294  00371E  6FBB               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 15295  003720                     l15415:
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 15299  003720  0102               	movlb	2	; () banked
 15300  003722  51A7               	movf	(_loRa+167)& (0+255),w,b
 15301  003724  0D02               	mullw	2
 15302  003726  0EA8               	movlw	low (_loRa+168)
 15303  003728  24F3               	addwf	prodl,w,c
 15304  00372A  6ED9               	movwf	fsr2l,c
 15305  00372C  0E02               	movlw	high (_loRa+168)
 15306  00372E  20F4               	addwfc	prodh,w,c
 15307  003730  6EDA               	movwf	fsr2h,c
 15308  003732  0EFF               	movlw	255
 15309  003734  6EDF               	movwf	indf2,c
 15310                           
 15311                           ; BSR set to: 2
 15312                           ;lorawan.c: 1641: }
 15313                           
 15314                           ;lorawan.c: 1640: } break;
 15315  003736  D01E               	goto	l15421
 15316  003738                     l15419:
 15317                           
 15318                           ; BSR set to: 2
 15319  003738  C0BA  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15320  00373C  C0BB  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15321  003740  0100               	movlb	0	; () banked
 15322  003742  4BBA               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 15323  003744  2BBB               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 15324  003746  50DF               	movf	indf2,w,c
 15325                           
 15326                           ; Switch size 1, requested type "space"
 15327                           ; Number of cases is 7, Range of values is 2 to 8
 15328                           ; switch strategies available:
 15329                           ; Name         Instructions Cycles
 15330                           ; simple_byte           22    12 (average)
 15331                           ;	Chosen strategy is simple_byte
 15332  003748  0A02               	xorlw	2	; case 2
 15333  00374A  B4D8               	btfsc	status,2,c
 15334  00374C  D78C               	goto	l15395
 15335  00374E  0A01               	xorlw	1	; case 3
 15336  003750  B4D8               	btfsc	status,2,c
 15337  003752  D794               	goto	l15399
 15338  003754  0A07               	xorlw	7	; case 4
 15339  003756  B4D8               	btfsc	status,2,c
 15340  003758  D79C               	goto	l15401
 15341  00375A  0A01               	xorlw	1	; case 5
 15342  00375C  B4D8               	btfsc	status,2,c
 15343  00375E  D7A4               	goto	l15403
 15344  003760  0A03               	xorlw	3	; case 6
 15345  003762  B4D8               	btfsc	status,2,c
 15346  003764  D7AC               	goto	l15405
 15347  003766  0A01               	xorlw	1	; case 7
 15348  003768  B4D8               	btfsc	status,2,c
 15349  00376A  D7B4               	goto	l15407
 15350  00376C  0A0F               	xorlw	15	; case 8
 15351  00376E  B4D8               	btfsc	status,2,c
 15352  003770  D7BC               	goto	l15409
 15353  003772  D7C6               	goto	l15411
 15354  003774                     l15421:
 15355                           
 15356                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 15357                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 15358  003774  0102               	movlb	2	; () banked
 15359  003776  51A7               	movf	(_loRa+167)& (0+255),w,b
 15360  003778  0D02               	mullw	2
 15361  00377A  0EA8               	movlw	low (_loRa+168)
 15362  00377C  24F3               	addwf	prodl,w,c
 15363  00377E  6ED9               	movwf	fsr2l,c
 15364  003780  0E02               	movlw	high (_loRa+168)
 15365  003782  20F4               	addwfc	prodh,w,c
 15366  003784  6EDA               	movwf	fsr2h,c
 15367  003786  28DE               	incf	postinc2,w,c
 15368  003788  B4D8               	btfsc	status,2,c
 15369  00378A  D006               	goto	l15427
 15370                           
 15371                           ; BSR set to: 2
 15372  00378C  0E10               	movlw	16
 15373  00378E  0102               	movlb	2	; () banked
 15374  003790  61A7               	cpfslt	(_loRa+167)& (0+255),b
 15375  003792  D002               	goto	l15427
 15376                           
 15377                           ; BSR set to: 2
 15378                           ;lorawan.c: 1645: {
 15379                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 15380  003794  0102               	movlb	2	; () banked
 15381  003796  2BA7               	incf	(_loRa+167)& (0+255),f,b
 15382  003798                     l15427:
 15383  003798  0100               	movlb	0	; () banked
 15384  00379A  51B6               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15385  00379C  0D01               	mullw	1
 15386  00379E  C0B4  F0B7         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 15387  0037A2  C0B5  F0B8         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 15388  0037A6  50F3               	movf	prodl,w,c
 15389  0037A8  0100               	movlb	0	; () banked
 15390  0037AA  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15391  0037AC  50F4               	movf	prodh,w,c
 15392  0037AE  0100               	movlb	0	; () banked
 15393  0037B0  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15394  0037B2  0100               	movlb	0	; () banked
 15395  0037B4  51B7               	movf	??_MacExecuteCommands& (0+255),w,b
 15396  0037B6  0100               	movlb	0	; () banked
 15397  0037B8  5DBA               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 15398  0037BA  0100               	movlb	0	; () banked
 15399  0037BC  51B8               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 15400  0037BE  0100               	movlb	0	; () banked
 15401  0037C0  59BB               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 15402  0037C2  B0D8               	btfsc	status,0,c
 15403  0037C4  D005               	goto	l15431
 15404                           
 15405                           ; BSR set to: 0
 15406  0037C6  0100               	movlb	0	; () banked
 15407  0037C8  51B9               	movf	MacExecuteCommands@done& (0+255),w,b
 15408  0037CA  0100               	movlb	0	; () banked
 15409  0037CC  B4D8               	btfsc	status,2,c
 15410  0037CE  D64B               	goto	l15391
 15411  0037D0                     l15431:
 15412                           
 15413                           ; BSR set to: 0
 15414                           ;lorawan.c: 1647: }
 15415                           ;lorawan.c: 1648: }
 15416                           ;lorawan.c: 1649: return ptr;
 15417  0037D0  C0BA  F0B4         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 15418  0037D4  C0BB  F0B5         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 15419  0037D8  0012               	return	
 15420  0037DA                     __end_of_MacExecuteCommands:
 15421                           	opt stack 0
 15422                           tosu	equ	0xFFF
 15423                           tosh	equ	0xFFE
 15424                           tosl	equ	0xFFD
 15425                           pclath	equ	0xFFA
 15426                           tblptru	equ	0xFF8
 15427                           tblptrh	equ	0xFF7
 15428                           tblptrl	equ	0xFF6
 15429                           tablat	equ	0xFF5
 15430                           prodh	equ	0xFF4
 15431                           prodl	equ	0xFF3
 15432                           intcon	equ	0xFF2
 15433                           intcon2	equ	0xFF1
 15434                           intcon3	equ	0xFF0
 15435                           indf0	equ	0xFEF
 15436                           postinc0	equ	0xFEE
 15437                           fsr0h	equ	0xFEA
 15438                           fsr0l	equ	0xFE9
 15439                           wreg	equ	0xFE8
 15440                           postinc1	equ	0xFE6
 15441                           postdec1	equ	0xFE5
 15442                           plusw1	equ	0xFE3
 15443                           fsr1h	equ	0xFE2
 15444                           fsr1l	equ	0xFE1
 15445                           indf2	equ	0xFDF
 15446                           postinc2	equ	0xFDE
 15447                           postdec2	equ	0xFDD
 15448                           fsr2h	equ	0xFDA
 15449                           fsr2l	equ	0xFD9
 15450                           status	equ	0xFD8
 15451                           
 15452 ;; *************** function _ExecuteRxTimingSetup *****************
 15453 ;; Defined at:
 15454 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15455 ;; Parameters:    Size  Location     Type
 15456 ;;  ptr             2   11[BANK0 ] PTR unsigned char 
 15457 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  delay           1   13[BANK0 ] unsigned char 
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  2   11[BANK0 ] PTR unsigned char 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15469 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15470 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15472 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15473 ;;Total ram usage:        3 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    9
 15476 ;; This function calls:
 15477 ;;		_UpdateReceiveDelays
 15478 ;; This function is called by:
 15479 ;;		_MacExecuteCommands
 15480 ;; This function uses a non-reentrant model
 15481 ;;
 15482                           
 15483                           	psect	text69
 15484  009D76                     __ptext69:
 15485                           	opt stack 0
 15486  009D76                     _ExecuteRxTimingSetup:
 15487                           	opt stack 16
 15488                           
 15489                           ;lorawan.c: 1661: uint8_t delay;
 15490                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 15491                           
 15492                           ; BSR set to: 0
 15493                           ;incstack = 0
 15494  009D76  C06B  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 15495  009D7A  C06C  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 15496  009D7E  50DF               	movf	indf2,w,c
 15497  009D80  0B0F               	andlw	15
 15498  009D82  0100               	movlb	0	; () banked
 15499  009D84  6F6D               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 15500                           
 15501                           ; BSR set to: 0
 15502                           ;lorawan.c: 1664: ptr++;
 15503  009D86  0100               	movlb	0	; () banked
 15504  009D88  4B6B               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 15505  009D8A  2B6C               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 15506                           
 15507                           ; BSR set to: 0
 15508                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 15509  009D8C  0100               	movlb	0	; () banked
 15510  009D8E  516D               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 15511  009D90  ECFC  F04A         	call	_UpdateReceiveDelays
 15512                           
 15513                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 15514  009D94  0102               	movlb	2	; () banked
 15515  009D96  8104               	bsf	(_loRa+4)& (0+255),0,b
 15516                           
 15517                           ; BSR set to: 2
 15518                           ;lorawan.c: 1669: return ptr;
 15519  009D98  C06B  F06B         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 15520  009D9C  C06C  F06C         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 15521  009DA0  0012               	return	
 15522  009DA2                     __end_of_ExecuteRxTimingSetup:
 15523                           	opt stack 0
 15524                           tosu	equ	0xFFF
 15525                           tosh	equ	0xFFE
 15526                           tosl	equ	0xFFD
 15527                           pclath	equ	0xFFA
 15528                           tblptru	equ	0xFF8
 15529                           tblptrh	equ	0xFF7
 15530                           tblptrl	equ	0xFF6
 15531                           tablat	equ	0xFF5
 15532                           prodh	equ	0xFF4
 15533                           prodl	equ	0xFF3
 15534                           intcon	equ	0xFF2
 15535                           intcon2	equ	0xFF1
 15536                           intcon3	equ	0xFF0
 15537                           indf0	equ	0xFEF
 15538                           postinc0	equ	0xFEE
 15539                           fsr0h	equ	0xFEA
 15540                           fsr0l	equ	0xFE9
 15541                           wreg	equ	0xFE8
 15542                           postinc1	equ	0xFE6
 15543                           postdec1	equ	0xFE5
 15544                           plusw1	equ	0xFE3
 15545                           fsr1h	equ	0xFE2
 15546                           fsr1l	equ	0xFE1
 15547                           indf2	equ	0xFDF
 15548                           postinc2	equ	0xFDE
 15549                           postdec2	equ	0xFDD
 15550                           fsr2h	equ	0xFDA
 15551                           fsr2l	equ	0xFD9
 15552                           status	equ	0xFD8
 15553                           
 15554 ;; *************** function _UpdateReceiveDelays *****************
 15555 ;; Defined at:
 15556 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15557 ;; Parameters:    Size  Location     Type
 15558 ;;  delay           1    wreg     unsigned char 
 15559 ;; Auto vars:     Size  Location     Type
 15560 ;;  delay           1   10[BANK0 ] unsigned char 
 15561 ;; Return value:  Size  Location     Type
 15562 ;;                  1    wreg      void 
 15563 ;; Registers used:
 15564 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15565 ;; Tracked objects:
 15566 ;;		On entry : 0/0
 15567 ;;		On exit  : 0/0
 15568 ;;		Unchanged: 0/0
 15569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15573 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15574 ;;Total ram usage:        1 bytes
 15575 ;; Hardware stack levels used:    1
 15576 ;; Hardware stack levels required when called:    8
 15577 ;; This function calls:
 15578 ;;		___wmul
 15579 ;; This function is called by:
 15580 ;;		_LORAWAN_RxDone
 15581 ;;		_ExecuteRxTimingSetup
 15582 ;; This function uses a non-reentrant model
 15583 ;;
 15584                           
 15585                           	psect	text70
 15586  0095F8                     __ptext70:
 15587                           	opt stack 0
 15588  0095F8                     _UpdateReceiveDelays:
 15589                           	opt stack 18
 15590                           
 15591                           ; BSR set to: 2
 15592                           ;incstack = 0
 15593                           ;UpdateReceiveDelays@delay stored from wreg
 15594  0095F8  0100               	movlb	0	; () banked
 15595  0095FA  6F6A               	movwf	UpdateReceiveDelays@delay& (0+255),b
 15596                           
 15597                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 15598  0095FC  C06A  F064         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 15599  009600  0100               	movlb	0	; () banked
 15600  009602  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 15601  009604  0E03               	movlw	3
 15602  009606  0100               	movlb	0	; () banked
 15603  009608  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15604  00960A  0EE8               	movlw	232
 15605  00960C  6F66               	movwf	___wmul@multiplicand& (0+255),b
 15606  00960E  EC64  F04D         	call	___wmul	;wreg free
 15607  009612  C064  F294         	movff	?___wmul,_loRa+148
 15608  009616  C065  F295         	movff	?___wmul+1,_loRa+149
 15609                           
 15610                           ;lorawan.c: 2029: if (delay == 0)
 15611  00961A  0100               	movlb	0	; () banked
 15612  00961C  516A               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 15613  00961E  0100               	movlb	0	; () banked
 15614  009620  A4D8               	btfss	status,2,c
 15615  009622  D005               	goto	l14467
 15616                           
 15617                           ; BSR set to: 0
 15618                           ;lorawan.c: 2030: {
 15619                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15620  009624  0E03               	movlw	3
 15621  009626  0102               	movlb	2	; () banked
 15622  009628  6F95               	movwf	(_loRa+149)& (0+255),b
 15623  00962A  0EE8               	movlw	232
 15624  00962C  6F94               	movwf	(_loRa+148)& (0+255),b
 15625  00962E                     l14467:
 15626                           
 15627                           ;lorawan.c: 2032: }
 15628                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 15629  00962E  0EE8               	movlw	232
 15630  009630  0102               	movlb	2	; () banked
 15631  009632  2594               	addwf	(_loRa+148)& (0+255),w,b
 15632  009634  0102               	movlb	2	; () banked
 15633  009636  6F96               	movwf	(_loRa+150)& (0+255),b
 15634  009638  0E03               	movlw	3
 15635  00963A  0102               	movlb	2	; () banked
 15636  00963C  2195               	addwfc	(_loRa+149)& (0+255),w,b
 15637  00963E  0102               	movlb	2	; () banked
 15638  009640  6F97               	movwf	(_loRa+151)& (0+255),b
 15639                           
 15640                           ; BSR set to: 2
 15641  009642  0012               	return		;funcret
 15642  009644                     __end_of_UpdateReceiveDelays:
 15643                           	opt stack 0
 15644                           tosu	equ	0xFFF
 15645                           tosh	equ	0xFFE
 15646                           tosl	equ	0xFFD
 15647                           pclath	equ	0xFFA
 15648                           tblptru	equ	0xFF8
 15649                           tblptrh	equ	0xFF7
 15650                           tblptrl	equ	0xFF6
 15651                           tablat	equ	0xFF5
 15652                           prodh	equ	0xFF4
 15653                           prodl	equ	0xFF3
 15654                           intcon	equ	0xFF2
 15655                           intcon2	equ	0xFF1
 15656                           intcon3	equ	0xFF0
 15657                           indf0	equ	0xFEF
 15658                           postinc0	equ	0xFEE
 15659                           fsr0h	equ	0xFEA
 15660                           fsr0l	equ	0xFE9
 15661                           wreg	equ	0xFE8
 15662                           postinc1	equ	0xFE6
 15663                           postdec1	equ	0xFE5
 15664                           plusw1	equ	0xFE3
 15665                           fsr1h	equ	0xFE2
 15666                           fsr1l	equ	0xFE1
 15667                           indf2	equ	0xFDF
 15668                           postinc2	equ	0xFDE
 15669                           postdec2	equ	0xFDD
 15670                           fsr2h	equ	0xFDA
 15671                           fsr2l	equ	0xFD9
 15672                           status	equ	0xFD8
 15673                           
 15674 ;; *************** function ___wmul *****************
 15675 ;; Defined at:
 15676 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15677 ;; Parameters:    Size  Location     Type
 15678 ;;  multiplier      2    4[BANK0 ] unsigned int 
 15679 ;;  multiplicand    2    6[BANK0 ] unsigned int 
 15680 ;; Auto vars:     Size  Location     Type
 15681 ;;  product         2    8[BANK0 ] unsigned int 
 15682 ;; Return value:  Size  Location     Type
 15683 ;;                  2    4[BANK0 ] unsigned int 
 15684 ;; Registers used:
 15685 ;;		wreg, status,2, status,0, prodl, prodh
 15686 ;; Tracked objects:
 15687 ;;		On entry : 0/0
 15688 ;;		On exit  : 0/0
 15689 ;;		Unchanged: 0/0
 15690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15691 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15694 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;Total ram usage:        6 bytes
 15696 ;; Hardware stack levels used:    1
 15697 ;; Hardware stack levels required when called:    7
 15698 ;; This function calls:
 15699 ;;		Nothing
 15700 ;; This function is called by:
 15701 ;;		_UpdateCfList
 15702 ;;		_UpdateReceiveDelays
 15703 ;; This function uses a non-reentrant model
 15704 ;;
 15705                           
 15706                           	psect	text71
 15707  009AC8                     __ptext71:
 15708                           	opt stack 0
 15709  009AC8                     ___wmul:
 15710                           	opt stack 18
 15711                           
 15712                           ; BSR set to: 2
 15713                           ;incstack = 0
 15714  009AC8  0100               	movlb	0	; () banked
 15715  009ACA  5164               	movf	___wmul@multiplier& (0+255),w,b
 15716  009ACC  0100               	movlb	0	; () banked
 15717  009ACE  0366               	mulwf	___wmul@multiplicand& (0+255),b
 15718  009AD0  CFF3 F068          	movff	prodl,___wmul@product
 15719  009AD4  CFF4 F069          	movff	prodh,___wmul@product+1
 15720  009AD8  0100               	movlb	0	; () banked
 15721  009ADA  5164               	movf	___wmul@multiplier& (0+255),w,b
 15722  009ADC  0100               	movlb	0	; () banked
 15723  009ADE  0367               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15724  009AE0  50F3               	movf	prodl,w,c
 15725  009AE2  0100               	movlb	0	; () banked
 15726  009AE4  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 15727  009AE6  0100               	movlb	0	; () banked
 15728  009AE8  5165               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15729  009AEA  0100               	movlb	0	; () banked
 15730  009AEC  0366               	mulwf	___wmul@multiplicand& (0+255),b
 15731  009AEE  50F3               	movf	prodl,w,c
 15732  009AF0  0100               	movlb	0	; () banked
 15733  009AF2  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 15734                           
 15735                           ; BSR set to: 0
 15736  009AF4  C068  F064         	movff	___wmul@product,?___wmul
 15737  009AF8  C069  F065         	movff	___wmul@product+1,?___wmul+1
 15738  009AFC  0012               	return	
 15739  009AFE                     __end_of___wmul:
 15740                           	opt stack 0
 15741                           tosu	equ	0xFFF
 15742                           tosh	equ	0xFFE
 15743                           tosl	equ	0xFFD
 15744                           pclath	equ	0xFFA
 15745                           tblptru	equ	0xFF8
 15746                           tblptrh	equ	0xFF7
 15747                           tblptrl	equ	0xFF6
 15748                           tablat	equ	0xFF5
 15749                           prodh	equ	0xFF4
 15750                           prodl	equ	0xFF3
 15751                           intcon	equ	0xFF2
 15752                           intcon2	equ	0xFF1
 15753                           intcon3	equ	0xFF0
 15754                           indf0	equ	0xFEF
 15755                           postinc0	equ	0xFEE
 15756                           fsr0h	equ	0xFEA
 15757                           fsr0l	equ	0xFE9
 15758                           wreg	equ	0xFE8
 15759                           postinc1	equ	0xFE6
 15760                           postdec1	equ	0xFE5
 15761                           plusw1	equ	0xFE3
 15762                           fsr1h	equ	0xFE2
 15763                           fsr1l	equ	0xFE1
 15764                           indf2	equ	0xFDF
 15765                           postinc2	equ	0xFDE
 15766                           postdec2	equ	0xFDD
 15767                           fsr2h	equ	0xFDA
 15768                           fsr2l	equ	0xFD9
 15769                           status	equ	0xFD8
 15770                           
 15771 ;; *************** function _ExecuteRxParamSetupReq *****************
 15772 ;; Defined at:
 15773 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15774 ;; Parameters:    Size  Location     Type
 15775 ;;  ptr             2   74[BANK0 ] PTR unsigned char 
 15776 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15777 ;; Auto vars:     Size  Location     Type
 15778 ;;  frequency       4   78[BANK0 ] unsigned long 
 15779 ;;  dlSettings      1   82[BANK0 ] struct .
 15780 ;; Return value:  Size  Location     Type
 15781 ;;                  2   74[BANK0 ] PTR unsigned char 
 15782 ;; Registers used:
 15783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15784 ;; Tracked objects:
 15785 ;;		On entry : 0/0
 15786 ;;		On exit  : 0/0
 15787 ;;		Unchanged: 0/0
 15788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15789 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15790 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15791 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15792 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15793 ;;Total ram usage:        9 bytes
 15794 ;; Hardware stack levels used:    1
 15795 ;; Hardware stack levels required when called:    8
 15796 ;; This function calls:
 15797 ;;		_UpdateReceiveWindow2Parameters
 15798 ;;		_ValidateDataRate
 15799 ;;		_ValidateFrequency
 15800 ;;		_ValidateRxOffset
 15801 ;;		___lmul
 15802 ;; This function is called by:
 15803 ;;		_MacExecuteCommands
 15804 ;; This function uses a non-reentrant model
 15805 ;;
 15806                           
 15807                           	psect	text72
 15808  004464                     __ptext72:
 15809                           	opt stack 0
 15810  004464                     _ExecuteRxParamSetupReq:
 15811                           	opt stack 17
 15812                           
 15813                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 15814                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 15815                           
 15816                           ; BSR set to: 0
 15817                           ;incstack = 0
 15818  004464  0E00               	movlw	0
 15819  004466  0100               	movlb	0	; () banked
 15820  004468  6FAE               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15821  00446A  0E00               	movlw	0
 15822  00446C  6FAF               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15823  00446E  0E00               	movlw	0
 15824  004470  6FB0               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15825  004472  0E00               	movlw	0
 15826  004474  6FB1               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15827                           
 15828                           ; BSR set to: 0
 15829                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 15830  004476  C0AA  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15831  00447A  C0AB  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15832  00447E  50DF               	movf	indf2,w,c
 15833  004480  0100               	movlb	0	; () banked
 15834  004482  6FB2               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15835                           
 15836                           ; BSR set to: 0
 15837  004484  0100               	movlb	0	; () banked
 15838  004486  4BAA               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15839  004488  2BAB               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15840                           
 15841                           ; BSR set to: 0
 15842                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15843  00448A  C0AA  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15844  00448E  C0AB  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15845  004492  0EFF               	movlw	255
 15846  004494  14DE               	andwf	postinc2,w,c
 15847  004496  0100               	movlb	0	; () banked
 15848  004498  6FAE               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15849  00449A  0EFF               	movlw	255
 15850  00449C  14DE               	andwf	postinc2,w,c
 15851  00449E  0100               	movlb	0	; () banked
 15852  0044A0  6FAF               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15853  0044A2  0EFF               	movlw	255
 15854  0044A4  14DE               	andwf	postinc2,w,c
 15855  0044A6  0100               	movlb	0	; () banked
 15856  0044A8  6FB0               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15857  0044AA  0E00               	movlw	0
 15858  0044AC  14DE               	andwf	postinc2,w,c
 15859  0044AE  0100               	movlb	0	; () banked
 15860  0044B0  6FB1               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15861                           
 15862                           ; BSR set to: 0
 15863                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 15864  0044B2  C0AE  F09E         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15865  0044B6  C0AF  F09F         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15866  0044BA  C0B0  F0A0         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15867  0044BE  C0B1  F0A1         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15868  0044C2  0E64               	movlw	100
 15869  0044C4  0100               	movlb	0	; () banked
 15870  0044C6  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 15871  0044C8  0E00               	movlw	0
 15872  0044CA  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15873  0044CC  0E00               	movlw	0
 15874  0044CE  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15875  0044D0  0E00               	movlw	0
 15876  0044D2  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15877  0044D4  EC82  F046         	call	___lmul	;wreg free
 15878  0044D8  C09E  F0AE         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15879  0044DC  C09F  F0AF         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15880  0044E0  C0A0  F0B0         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15881  0044E4  C0A1  F0B1         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15882                           
 15883                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 15884  0044E8  0E03               	movlw	3
 15885  0044EA  0100               	movlb	0	; () banked
 15886  0044EC  25AA               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 15887  0044EE  0100               	movlb	0	; () banked
 15888  0044F0  6FAA               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 15889  0044F2  0E00               	movlw	0
 15890  0044F4  0100               	movlb	0	; () banked
 15891  0044F6  21AB               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 15892  0044F8  0100               	movlb	0	; () banked
 15893  0044FA  6FAB               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 15894                           
 15895                           ; BSR set to: 0
 15896                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 15897  0044FC  C0AE  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15898  004500  C0AF  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15899  004504  C0B0  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15900  004508  C0B1  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15901  00450C  EC47  F045         	call	_ValidateFrequency	;wreg free
 15902  004510  0900               	iorlw	0
 15903  004512  A4D8               	btfss	status,2,c
 15904  004514  D01E               	goto	l14899
 15905                           
 15906                           ;lorawan_eu.c: 754: {
 15907                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 15908  004516  0102               	movlb	2	; () banked
 15909  004518  51A7               	movf	(_loRa+167)& (0+255),w,b
 15910  00451A  0D02               	mullw	2
 15911  00451C  0E00               	movlw	low _loRa
 15912  00451E  0100               	movlb	0	; () banked
 15913  004520  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15914  004522  0E02               	movlw	high _loRa
 15915  004524  0100               	movlb	0	; () banked
 15916  004526  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15917  004528  0EA8               	movlw	168
 15918  00452A  0100               	movlb	0	; () banked
 15919  00452C  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15920  00452E  0E00               	movlw	0
 15921  004530  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15922  004532  50F3               	movf	prodl,w,c
 15923  004534  0100               	movlb	0	; () banked
 15924  004536  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15925  004538  50F4               	movf	prodh,w,c
 15926  00453A  0100               	movlb	0	; () banked
 15927  00453C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15928  00453E  0E01               	movlw	1
 15929  004540  0100               	movlb	0	; () banked
 15930  004542  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15931  004544  6ED9               	movwf	fsr2l,c
 15932  004546  0E00               	movlw	0
 15933  004548  0100               	movlb	0	; () banked
 15934  00454A  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15935  00454C  6EDA               	movwf	fsr2h,c
 15936  00454E  0102               	movlb	2	; () banked
 15937  004550  86DF               	bsf	indf2,3,c
 15938  004552                     l14899:
 15939                           
 15940                           ;lorawan_eu.c: 756: }
 15941                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 15942  004552  0100               	movlb	0	; () banked
 15943  004554  51B2               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15944  004556  0B0F               	andlw	15
 15945  004558  EC5A  F050         	call	_ValidateDataRate
 15946  00455C  0900               	iorlw	0
 15947  00455E  A4D8               	btfss	status,2,c
 15948  004560  D01E               	goto	l14903
 15949                           
 15950                           ;lorawan_eu.c: 759: {
 15951                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 15952  004562  0102               	movlb	2	; () banked
 15953  004564  51A7               	movf	(_loRa+167)& (0+255),w,b
 15954  004566  0D02               	mullw	2
 15955  004568  0E00               	movlw	low _loRa
 15956  00456A  0100               	movlb	0	; () banked
 15957  00456C  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 15958  00456E  0E02               	movlw	high _loRa
 15959  004570  0100               	movlb	0	; () banked
 15960  004572  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 15961  004574  0EA8               	movlw	168
 15962  004576  0100               	movlb	0	; () banked
 15963  004578  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15964  00457A  0E00               	movlw	0
 15965  00457C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15966  00457E  50F3               	movf	prodl,w,c
 15967  004580  0100               	movlb	0	; () banked
 15968  004582  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 15969  004584  50F4               	movf	prodh,w,c
 15970  004586  0100               	movlb	0	; () banked
 15971  004588  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 15972  00458A  0E01               	movlw	1
 15973  00458C  0100               	movlb	0	; () banked
 15974  00458E  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 15975  004590  6ED9               	movwf	fsr2l,c
 15976  004592  0E00               	movlw	0
 15977  004594  0100               	movlb	0	; () banked
 15978  004596  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 15979  004598  6EDA               	movwf	fsr2h,c
 15980  00459A  0102               	movlb	2	; () banked
 15981  00459C  88DF               	bsf	indf2,4,c
 15982  00459E                     l14903:
 15983                           
 15984                           ;lorawan_eu.c: 761: }
 15985                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 15986  00459E  0100               	movlb	0	; () banked
 15987  0045A0  39B2               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15988  0045A2  0B07               	andlw	7
 15989  0045A4  EC3C  F050         	call	_ValidateRxOffset
 15990  0045A8  0900               	iorlw	0
 15991  0045AA  A4D8               	btfss	status,2,c
 15992  0045AC  D01E               	goto	l1125
 15993                           
 15994                           ;lorawan_eu.c: 764: {
 15995                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 15996  0045AE  0102               	movlb	2	; () banked
 15997  0045B0  51A7               	movf	(_loRa+167)& (0+255),w,b
 15998  0045B2  0D02               	mullw	2
 15999  0045B4  0E00               	movlw	low _loRa
 16000  0045B6  0100               	movlb	0	; () banked
 16001  0045B8  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16002  0045BA  0E02               	movlw	high _loRa
 16003  0045BC  0100               	movlb	0	; () banked
 16004  0045BE  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16005  0045C0  0EA8               	movlw	168
 16006  0045C2  0100               	movlb	0	; () banked
 16007  0045C4  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16008  0045C6  0E00               	movlw	0
 16009  0045C8  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16010  0045CA  50F3               	movf	prodl,w,c
 16011  0045CC  0100               	movlb	0	; () banked
 16012  0045CE  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16013  0045D0  50F4               	movf	prodh,w,c
 16014  0045D2  0100               	movlb	0	; () banked
 16015  0045D4  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16016  0045D6  0E01               	movlw	1
 16017  0045D8  0100               	movlb	0	; () banked
 16018  0045DA  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16019  0045DC  6ED9               	movwf	fsr2l,c
 16020  0045DE  0E00               	movlw	0
 16021  0045E0  0100               	movlb	0	; () banked
 16022  0045E2  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16023  0045E4  6EDA               	movwf	fsr2h,c
 16024  0045E6  0102               	movlb	2	; () banked
 16025  0045E8  8ADF               	bsf	indf2,5,c
 16026  0045EA                     l1125:
 16027                           
 16028                           ;lorawan_eu.c: 766: }
 16029                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 16030  0045EA  0102               	movlb	2	; () banked
 16031  0045EC  51A7               	movf	(_loRa+167)& (0+255),w,b
 16032  0045EE  0D02               	mullw	2
 16033  0045F0  0E00               	movlw	low _loRa
 16034  0045F2  0100               	movlb	0	; () banked
 16035  0045F4  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16036  0045F6  0E02               	movlw	high _loRa
 16037  0045F8  0100               	movlb	0	; () banked
 16038  0045FA  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16039  0045FC  0EA8               	movlw	168
 16040  0045FE  0100               	movlb	0	; () banked
 16041  004600  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16042  004602  0E00               	movlw	0
 16043  004604  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16044  004606  50F3               	movf	prodl,w,c
 16045  004608  0100               	movlb	0	; () banked
 16046  00460A  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16047  00460C  50F4               	movf	prodh,w,c
 16048  00460E  0100               	movlb	0	; () banked
 16049  004610  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16050  004612  0E01               	movlw	1
 16051  004614  0100               	movlb	0	; () banked
 16052  004616  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16053  004618  6ED9               	movwf	fsr2l,c
 16054  00461A  0E00               	movlw	0
 16055  00461C  0100               	movlb	0	; () banked
 16056  00461E  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16057  004620  6EDA               	movwf	fsr2h,c
 16058  004622  0102               	movlb	2	; () banked
 16059  004624  A8DF               	btfss	indf2,4,c
 16060  004626  D054               	goto	l14917
 16061                           
 16062                           ; BSR set to: 2
 16063  004628  0102               	movlb	2	; () banked
 16064  00462A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16065  00462C  0D02               	mullw	2
 16066  00462E  0E00               	movlw	low _loRa
 16067  004630  0100               	movlb	0	; () banked
 16068  004632  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16069  004634  0E02               	movlw	high _loRa
 16070  004636  0100               	movlb	0	; () banked
 16071  004638  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16072  00463A  0EA8               	movlw	168
 16073  00463C  0100               	movlb	0	; () banked
 16074  00463E  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16075  004640  0E00               	movlw	0
 16076  004642  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16077  004644  50F3               	movf	prodl,w,c
 16078  004646  0100               	movlb	0	; () banked
 16079  004648  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16080  00464A  50F4               	movf	prodh,w,c
 16081  00464C  0100               	movlb	0	; () banked
 16082  00464E  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16083  004650  0E01               	movlw	1
 16084  004652  0100               	movlb	0	; () banked
 16085  004654  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16086  004656  6ED9               	movwf	fsr2l,c
 16087  004658  0E00               	movlw	0
 16088  00465A  0100               	movlb	0	; () banked
 16089  00465C  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16090  00465E  6EDA               	movwf	fsr2h,c
 16091  004660  0102               	movlb	2	; () banked
 16092  004662  A6DF               	btfss	indf2,3,c
 16093  004664  D035               	goto	l14917
 16094                           
 16095                           ; BSR set to: 2
 16096  004666  0102               	movlb	2	; () banked
 16097  004668  51A7               	movf	(_loRa+167)& (0+255),w,b
 16098  00466A  0D02               	mullw	2
 16099  00466C  0E00               	movlw	low _loRa
 16100  00466E  0100               	movlb	0	; () banked
 16101  004670  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16102  004672  0E02               	movlw	high _loRa
 16103  004674  0100               	movlb	0	; () banked
 16104  004676  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16105  004678  0EA8               	movlw	168
 16106  00467A  0100               	movlb	0	; () banked
 16107  00467C  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16108  00467E  0E00               	movlw	0
 16109  004680  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16110  004682  50F3               	movf	prodl,w,c
 16111  004684  0100               	movlb	0	; () banked
 16112  004686  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16113  004688  50F4               	movf	prodh,w,c
 16114  00468A  0100               	movlb	0	; () banked
 16115  00468C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16116  00468E  0E01               	movlw	1
 16117  004690  0100               	movlb	0	; () banked
 16118  004692  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16119  004694  6ED9               	movwf	fsr2l,c
 16120  004696  0E00               	movlw	0
 16121  004698  0100               	movlb	0	; () banked
 16122  00469A  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16123  00469C  6EDA               	movwf	fsr2h,c
 16124  00469E  0102               	movlb	2	; () banked
 16125  0046A0  AADF               	btfss	indf2,5,c
 16126  0046A2  D016               	goto	l14917
 16127                           
 16128                           ; BSR set to: 2
 16129                           ;lorawan_eu.c: 769: {
 16130                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 16131  0046A4  0100               	movlb	0	; () banked
 16132  0046A6  39B2               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16133  0046A8  0B07               	andlw	7
 16134  0046AA  0102               	movlb	2	; () banked
 16135  0046AC  6FEF               	movwf	(_loRa+239)& (0+255),b
 16136                           
 16137                           ; BSR set to: 2
 16138                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 16139  0046AE  C0AE  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 16140  0046B2  C0AF  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 16141  0046B6  C0B0  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 16142  0046BA  C0B1  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 16143  0046BE  0100               	movlb	0	; () banked
 16144  0046C0  51B2               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16145  0046C2  0B0F               	andlw	15
 16146  0046C4  0100               	movlb	0	; () banked
 16147  0046C6  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 16148  0046C8  ECCB  F050         	call	_UpdateReceiveWindow2Parameters	;wreg free
 16149                           
 16150                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 16151  0046CC  0102               	movlb	2	; () banked
 16152  0046CE  8F03               	bsf	(_loRa+3)& (0+255),7,b
 16153  0046D0                     l14917:
 16154                           
 16155                           ; BSR set to: 2
 16156                           ;lorawan_eu.c: 773: }
 16157                           ;lorawan_eu.c: 775: return ptr;
 16158  0046D0  C0AA  F0AA         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 16159  0046D4  C0AB  F0AB         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 16160  0046D8  0012               	return	
 16161  0046DA                     __end_of_ExecuteRxParamSetupReq:
 16162                           	opt stack 0
 16163                           tosu	equ	0xFFF
 16164                           tosh	equ	0xFFE
 16165                           tosl	equ	0xFFD
 16166                           pclath	equ	0xFFA
 16167                           tblptru	equ	0xFF8
 16168                           tblptrh	equ	0xFF7
 16169                           tblptrl	equ	0xFF6
 16170                           tablat	equ	0xFF5
 16171                           prodh	equ	0xFF4
 16172                           prodl	equ	0xFF3
 16173                           intcon	equ	0xFF2
 16174                           intcon2	equ	0xFF1
 16175                           intcon3	equ	0xFF0
 16176                           indf0	equ	0xFEF
 16177                           postinc0	equ	0xFEE
 16178                           fsr0h	equ	0xFEA
 16179                           fsr0l	equ	0xFE9
 16180                           wreg	equ	0xFE8
 16181                           postinc1	equ	0xFE6
 16182                           postdec1	equ	0xFE5
 16183                           plusw1	equ	0xFE3
 16184                           fsr1h	equ	0xFE2
 16185                           fsr1l	equ	0xFE1
 16186                           indf2	equ	0xFDF
 16187                           postinc2	equ	0xFDE
 16188                           postdec2	equ	0xFDD
 16189                           fsr2h	equ	0xFDA
 16190                           fsr2l	equ	0xFD9
 16191                           status	equ	0xFD8
 16192                           
 16193 ;; *************** function _ValidateRxOffset *****************
 16194 ;; Defined at:
 16195 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16196 ;; Parameters:    Size  Location     Type
 16197 ;;  rxOffset        1    wreg     unsigned char 
 16198 ;; Auto vars:     Size  Location     Type
 16199 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 16200 ;;  result          1    5[BANK0 ] enum E8016
 16201 ;; Return value:  Size  Location     Type
 16202 ;;                  1    wreg      enum E8016
 16203 ;; Registers used:
 16204 ;;		wreg, status,2, status,0
 16205 ;; Tracked objects:
 16206 ;;		On entry : 0/0
 16207 ;;		On exit  : 0/0
 16208 ;;		Unchanged: 0/0
 16209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16210 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16211 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16212 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16213 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16214 ;;Total ram usage:        2 bytes
 16215 ;; Hardware stack levels used:    1
 16216 ;; Hardware stack levels required when called:    7
 16217 ;; This function calls:
 16218 ;;		Nothing
 16219 ;; This function is called by:
 16220 ;;		_ExecuteRxParamSetupReq
 16221 ;; This function uses a non-reentrant model
 16222 ;;
 16223                           
 16224                           	psect	text73
 16225  00A078                     __ptext73:
 16226                           	opt stack 0
 16227  00A078                     _ValidateRxOffset:
 16228                           	opt stack 17
 16229                           
 16230                           ; BSR set to: 2
 16231                           ;incstack = 0
 16232                           ;ValidateRxOffset@rxOffset stored from wreg
 16233  00A078  0100               	movlb	0	; () banked
 16234  00A07A  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 16235                           
 16236                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 16237  00A07C  0E00               	movlw	0
 16238  00A07E  0100               	movlb	0	; () banked
 16239  00A080  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 16243  00A082  0E05               	movlw	5
 16244  00A084  0100               	movlb	0	; () banked
 16245  00A086  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 16246  00A088  D003               	goto	l1221
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;lorawan_eu.c: 1081: {
 16250                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 16251  00A08A  0E03               	movlw	3
 16252  00A08C  0100               	movlb	0	; () banked
 16253  00A08E  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 16254  00A090                     l1221:
 16255                           
 16256                           ; BSR set to: 0
 16257                           ;lorawan_eu.c: 1083: }
 16258                           ;lorawan_eu.c: 1085: return result;
 16259  00A090  0100               	movlb	0	; () banked
 16260  00A092  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 16261  00A094  0012               	return	
 16262  00A096                     __end_of_ValidateRxOffset:
 16263                           	opt stack 0
 16264                           tosu	equ	0xFFF
 16265                           tosh	equ	0xFFE
 16266                           tosl	equ	0xFFD
 16267                           pclath	equ	0xFFA
 16268                           tblptru	equ	0xFF8
 16269                           tblptrh	equ	0xFF7
 16270                           tblptrl	equ	0xFF6
 16271                           tablat	equ	0xFF5
 16272                           prodh	equ	0xFF4
 16273                           prodl	equ	0xFF3
 16274                           intcon	equ	0xFF2
 16275                           intcon2	equ	0xFF1
 16276                           intcon3	equ	0xFF0
 16277                           indf0	equ	0xFEF
 16278                           postinc0	equ	0xFEE
 16279                           fsr0h	equ	0xFEA
 16280                           fsr0l	equ	0xFE9
 16281                           wreg	equ	0xFE8
 16282                           postinc1	equ	0xFE6
 16283                           postdec1	equ	0xFE5
 16284                           plusw1	equ	0xFE3
 16285                           fsr1h	equ	0xFE2
 16286                           fsr1l	equ	0xFE1
 16287                           indf2	equ	0xFDF
 16288                           postinc2	equ	0xFDE
 16289                           postdec2	equ	0xFDD
 16290                           fsr2h	equ	0xFDA
 16291                           fsr2l	equ	0xFD9
 16292                           status	equ	0xFD8
 16293                           
 16294 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 16295 ;; Defined at:
 16296 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16297 ;; Parameters:    Size  Location     Type
 16298 ;;  frequency       4    4[BANK0 ] unsigned long 
 16299 ;;  dataRate        1    8[BANK0 ] unsigned char 
 16300 ;; Auto vars:     Size  Location     Type
 16301 ;;		None
 16302 ;; Return value:  Size  Location     Type
 16303 ;;                  1    wreg      void 
 16304 ;; Registers used:
 16305 ;;		None
 16306 ;; Tracked objects:
 16307 ;;		On entry : 0/0
 16308 ;;		On exit  : 0/0
 16309 ;;		Unchanged: 0/0
 16310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16311 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16312 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16313 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16314 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16315 ;;Total ram usage:        5 bytes
 16316 ;; Hardware stack levels used:    1
 16317 ;; Hardware stack levels required when called:    7
 16318 ;; This function calls:
 16319 ;;		Nothing
 16320 ;; This function is called by:
 16321 ;;		_ExecuteRxParamSetupReq
 16322 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16323 ;; This function uses a non-reentrant model
 16324 ;;
 16325                           
 16326                           	psect	text74
 16327  00A196                     __ptext74:
 16328                           	opt stack 0
 16329  00A196                     _UpdateReceiveWindow2Parameters:
 16330                           	opt stack 17
 16331                           
 16332                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 16333                           
 16334                           ; BSR set to: 0
 16335                           ;incstack = 0
 16336  00A196  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 16337                           
 16338                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 16339  00A19A  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 16340  00A19E  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 16341  00A1A2  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 16342  00A1A6  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 16343  00A1AA  0012               	return		;funcret
 16344  00A1AC                     __end_of_UpdateReceiveWindow2Parameters:
 16345                           	opt stack 0
 16346                           tosu	equ	0xFFF
 16347                           tosh	equ	0xFFE
 16348                           tosl	equ	0xFFD
 16349                           pclath	equ	0xFFA
 16350                           tblptru	equ	0xFF8
 16351                           tblptrh	equ	0xFF7
 16352                           tblptrl	equ	0xFF6
 16353                           tablat	equ	0xFF5
 16354                           prodh	equ	0xFF4
 16355                           prodl	equ	0xFF3
 16356                           intcon	equ	0xFF2
 16357                           intcon2	equ	0xFF1
 16358                           intcon3	equ	0xFF0
 16359                           indf0	equ	0xFEF
 16360                           postinc0	equ	0xFEE
 16361                           fsr0h	equ	0xFEA
 16362                           fsr0l	equ	0xFE9
 16363                           wreg	equ	0xFE8
 16364                           postinc1	equ	0xFE6
 16365                           postdec1	equ	0xFE5
 16366                           plusw1	equ	0xFE3
 16367                           fsr1h	equ	0xFE2
 16368                           fsr1l	equ	0xFE1
 16369                           indf2	equ	0xFDF
 16370                           postinc2	equ	0xFDE
 16371                           postdec2	equ	0xFDD
 16372                           fsr2h	equ	0xFDA
 16373                           fsr2l	equ	0xFD9
 16374                           status	equ	0xFD8
 16375                           
 16376 ;; *************** function _ExecuteNewChannel *****************
 16377 ;; Defined at:
 16378 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16379 ;; Parameters:    Size  Location     Type
 16380 ;;  ptr             2   74[BANK0 ] PTR unsigned char 
 16381 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16382 ;; Auto vars:     Size  Location     Type
 16383 ;;  frequency       4   79[BANK0 ] unsigned long 
 16384 ;;  channelIndex    1   83[BANK0 ] unsigned char 
 16385 ;;  drRange         1   78[BANK0 ] struct .
 16386 ;; Return value:  Size  Location     Type
 16387 ;;                  2   74[BANK0 ] PTR unsigned char 
 16388 ;; Registers used:
 16389 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16390 ;; Tracked objects:
 16391 ;;		On entry : 0/0
 16392 ;;		On exit  : 0/0
 16393 ;;		Unchanged: 0/0
 16394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16395 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16396 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16397 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16398 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16399 ;;Total ram usage:       10 bytes
 16400 ;; Hardware stack levels used:    1
 16401 ;; Hardware stack levels required when called:    9
 16402 ;; This function calls:
 16403 ;;		_LORAWAN_SetChannelIdStatus
 16404 ;;		_UpdateChannelIdStatus
 16405 ;;		_UpdateDataRange
 16406 ;;		_UpdateDutyCycle
 16407 ;;		_UpdateFrequency
 16408 ;;		_ValidateChannelId
 16409 ;;		_ValidateDataRange
 16410 ;;		_ValidateFrequency
 16411 ;;		___lmul
 16412 ;; This function is called by:
 16413 ;;		_MacExecuteCommands
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text75
 16418  004182                     __ptext75:
 16419                           	opt stack 0
 16420  004182                     _ExecuteNewChannel:
 16421                           	opt stack 16
 16422                           
 16423                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 16424                           ;lorawan_eu.c: 680: DataRange_t drRange;
 16425                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 16426                           
 16427                           ;incstack = 0
 16428  004182  0E00               	movlw	0
 16429  004184  0100               	movlb	0	; () banked
 16430  004186  6FAF               	movwf	ExecuteNewChannel@frequency& (0+255),b
 16431  004188  0E00               	movlw	0
 16432  00418A  6FB0               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 16433  00418C  0E00               	movlw	0
 16434  00418E  6FB1               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 16435  004190  0E00               	movlw	0
 16436  004192  6FB2               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16437                           
 16438                           ; BSR set to: 0
 16439                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 16440  004194  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16441  004198  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16442  00419C  50DF               	movf	indf2,w,c
 16443  00419E  0100               	movlb	0	; () banked
 16444  0041A0  6FB3               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 16445                           
 16446                           ; BSR set to: 0
 16447  0041A2  0100               	movlb	0	; () banked
 16448  0041A4  4BAA               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16449  0041A6  2BAB               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 16453  0041A8  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16454  0041AC  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16455  0041B0  0EFF               	movlw	255
 16456  0041B2  14DE               	andwf	postinc2,w,c
 16457  0041B4  0100               	movlb	0	; () banked
 16458  0041B6  6FAF               	movwf	ExecuteNewChannel@frequency& (0+255),b
 16459  0041B8  0EFF               	movlw	255
 16460  0041BA  14DE               	andwf	postinc2,w,c
 16461  0041BC  0100               	movlb	0	; () banked
 16462  0041BE  6FB0               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 16463  0041C0  0EFF               	movlw	255
 16464  0041C2  14DE               	andwf	postinc2,w,c
 16465  0041C4  0100               	movlb	0	; () banked
 16466  0041C6  6FB1               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 16467  0041C8  0E00               	movlw	0
 16468  0041CA  14DE               	andwf	postinc2,w,c
 16469  0041CC  0100               	movlb	0	; () banked
 16470  0041CE  6FB2               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16471                           
 16472                           ; BSR set to: 0
 16473                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 16474  0041D0  C0AF  F09E         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 16475  0041D4  C0B0  F09F         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 16476  0041D8  C0B1  F0A0         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 16477  0041DC  C0B2  F0A1         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 16478  0041E0  0E64               	movlw	100
 16479  0041E2  0100               	movlb	0	; () banked
 16480  0041E4  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 16481  0041E6  0E00               	movlw	0
 16482  0041E8  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16483  0041EA  0E00               	movlw	0
 16484  0041EC  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16485  0041EE  0E00               	movlw	0
 16486  0041F0  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16487  0041F2  EC82  F046         	call	___lmul	;wreg free
 16488  0041F6  C09E  F0AF         	movff	?___lmul,ExecuteNewChannel@frequency
 16489  0041FA  C09F  F0B0         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 16490  0041FE  C0A0  F0B1         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 16491  004202  C0A1  F0B2         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 16492                           
 16493                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 16494  004206  0E03               	movlw	3
 16495  004208  0100               	movlb	0	; () banked
 16496  00420A  25AA               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 16497  00420C  0100               	movlb	0	; () banked
 16498  00420E  6FAA               	movwf	ExecuteNewChannel@ptr& (0+255),b
 16499  004210  0E00               	movlw	0
 16500  004212  0100               	movlb	0	; () banked
 16501  004214  21AB               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 16502  004216  0100               	movlb	0	; () banked
 16503  004218  6FAB               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 16504                           
 16505                           ; BSR set to: 0
 16506                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 16507  00421A  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16508  00421E  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16509  004222  50DF               	movf	indf2,w,c
 16510  004224  0100               	movlb	0	; () banked
 16511  004226  6FAE               	movwf	ExecuteNewChannel@drRange& (0+255),b
 16512                           
 16513                           ; BSR set to: 0
 16514  004228  0100               	movlb	0	; () banked
 16515  00422A  4BAA               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16516  00422C  2BAB               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16517                           
 16518                           ; BSR set to: 0
 16519                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 16520  00422E  0E00               	movlw	0
 16521  004230  0100               	movlb	0	; () banked
 16522  004232  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16523  004234  0100               	movlb	0	; () banked
 16524  004236  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16525  004238  EC1A  F04E         	call	_ValidateChannelId
 16526  00423C  0900               	iorlw	0
 16527  00423E  A4D8               	btfss	status,2,c
 16528  004240  D05A               	goto	l1108
 16529                           
 16530                           ;lorawan_eu.c: 692: {
 16531                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 16532  004242  C0AF  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 16533  004246  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 16534  00424A  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 16535  00424E  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 16536  004252  EC47  F045         	call	_ValidateFrequency	;wreg free
 16537  004256  0900               	iorlw	0
 16538  004258  B4D8               	btfsc	status,2,c
 16539  00425A  D00A               	goto	l14855
 16540  00425C  0100               	movlb	0	; () banked
 16541  00425E  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16542  004260  0100               	movlb	0	; () banked
 16543  004262  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16544  004264  0100               	movlb	0	; () banked
 16545  004266  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16546  004268  0100               	movlb	0	; () banked
 16547  00426A  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16548  00426C  A4D8               	btfss	status,2,c
 16549  00426E  D01E               	goto	l14857
 16550  004270                     l14855:
 16551                           
 16552                           ;lorawan_eu.c: 694: {
 16553                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 16554  004270  0102               	movlb	2	; () banked
 16555  004272  51A7               	movf	(_loRa+167)& (0+255),w,b
 16556  004274  0D02               	mullw	2
 16557  004276  0E00               	movlw	low _loRa
 16558  004278  0100               	movlb	0	; () banked
 16559  00427A  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16560  00427C  0E02               	movlw	high _loRa
 16561  00427E  0100               	movlb	0	; () banked
 16562  004280  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16563  004282  0EA8               	movlw	168
 16564  004284  0100               	movlb	0	; () banked
 16565  004286  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16566  004288  0E00               	movlw	0
 16567  00428A  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16568  00428C  50F3               	movf	prodl,w,c
 16569  00428E  0100               	movlb	0	; () banked
 16570  004290  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16571  004292  50F4               	movf	prodh,w,c
 16572  004294  0100               	movlb	0	; () banked
 16573  004296  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16574  004298  0E01               	movlw	1
 16575  00429A  0100               	movlb	0	; () banked
 16576  00429C  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16577  00429E  6ED9               	movwf	fsr2l,c
 16578  0042A0  0E00               	movlw	0
 16579  0042A2  0100               	movlb	0	; () banked
 16580  0042A4  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16581  0042A6  6EDA               	movwf	fsr2h,c
 16582  0042A8  0102               	movlb	2	; () banked
 16583  0042AA  8EDF               	bsf	indf2,7,c
 16584  0042AC                     l14857:
 16585                           
 16586                           ;lorawan_eu.c: 696: }
 16587                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 16588  0042AC  0100               	movlb	0	; () banked
 16589  0042AE  51AE               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 16590  0042B0  ECDF  F049         	call	_ValidateDataRange
 16591  0042B4  0900               	iorlw	0
 16592  0042B6  A4D8               	btfss	status,2,c
 16593  0042B8  D01E               	goto	l1108
 16594                           
 16595                           ;lorawan_eu.c: 699: {
 16596                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 16597  0042BA  0102               	movlb	2	; () banked
 16598  0042BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 16599  0042BE  0D02               	mullw	2
 16600  0042C0  0E00               	movlw	low _loRa
 16601  0042C2  0100               	movlb	0	; () banked
 16602  0042C4  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16603  0042C6  0E02               	movlw	high _loRa
 16604  0042C8  0100               	movlb	0	; () banked
 16605  0042CA  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16606  0042CC  0EA8               	movlw	168
 16607  0042CE  0100               	movlb	0	; () banked
 16608  0042D0  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16609  0042D2  0E00               	movlw	0
 16610  0042D4  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16611  0042D6  50F3               	movf	prodl,w,c
 16612  0042D8  0100               	movlb	0	; () banked
 16613  0042DA  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16614  0042DC  50F4               	movf	prodh,w,c
 16615  0042DE  0100               	movlb	0	; () banked
 16616  0042E0  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16617  0042E2  0E01               	movlw	1
 16618  0042E4  0100               	movlb	0	; () banked
 16619  0042E6  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16620  0042E8  6ED9               	movwf	fsr2l,c
 16621  0042EA  0E00               	movlw	0
 16622  0042EC  0100               	movlb	0	; () banked
 16623  0042EE  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16624  0042F0  6EDA               	movwf	fsr2h,c
 16625  0042F2  0102               	movlb	2	; () banked
 16626  0042F4  8CDF               	bsf	indf2,6,c
 16627  0042F6                     l1108:
 16628                           
 16629                           ;lorawan_eu.c: 701: }
 16630                           ;lorawan_eu.c: 702: }
 16631                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 16632  0042F6  0102               	movlb	2	; () banked
 16633  0042F8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16634  0042FA  0D02               	mullw	2
 16635  0042FC  0E00               	movlw	low _loRa
 16636  0042FE  0100               	movlb	0	; () banked
 16637  004300  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16638  004302  0E02               	movlw	high _loRa
 16639  004304  0100               	movlb	0	; () banked
 16640  004306  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16641  004308  0EA8               	movlw	168
 16642  00430A  0100               	movlb	0	; () banked
 16643  00430C  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16644  00430E  0E00               	movlw	0
 16645  004310  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16646  004312  50F3               	movf	prodl,w,c
 16647  004314  0100               	movlb	0	; () banked
 16648  004316  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16649  004318  50F4               	movf	prodh,w,c
 16650  00431A  0100               	movlb	0	; () banked
 16651  00431C  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16652  00431E  0E01               	movlw	1
 16653  004320  0100               	movlb	0	; () banked
 16654  004322  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16655  004324  6ED9               	movwf	fsr2l,c
 16656  004326  0E00               	movlw	0
 16657  004328  0100               	movlb	0	; () banked
 16658  00432A  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16659  00432C  6EDA               	movwf	fsr2h,c
 16660  00432E  0102               	movlb	2	; () banked
 16661  004330  AEDF               	btfss	indf2,7,c
 16662  004332  D093               	goto	l14879
 16663                           
 16664                           ; BSR set to: 2
 16665  004334  0102               	movlb	2	; () banked
 16666  004336  51A7               	movf	(_loRa+167)& (0+255),w,b
 16667  004338  0D02               	mullw	2
 16668  00433A  0E00               	movlw	low _loRa
 16669  00433C  0100               	movlb	0	; () banked
 16670  00433E  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16671  004340  0E02               	movlw	high _loRa
 16672  004342  0100               	movlb	0	; () banked
 16673  004344  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16674  004346  0EA8               	movlw	168
 16675  004348  0100               	movlb	0	; () banked
 16676  00434A  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16677  00434C  0E00               	movlw	0
 16678  00434E  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16679  004350  50F3               	movf	prodl,w,c
 16680  004352  0100               	movlb	0	; () banked
 16681  004354  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16682  004356  50F4               	movf	prodh,w,c
 16683  004358  0100               	movlb	0	; () banked
 16684  00435A  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16685  00435C  0E01               	movlw	1
 16686  00435E  0100               	movlb	0	; () banked
 16687  004360  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16688  004362  6ED9               	movwf	fsr2l,c
 16689  004364  0E00               	movlw	0
 16690  004366  0100               	movlb	0	; () banked
 16691  004368  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16692  00436A  6EDA               	movwf	fsr2h,c
 16693  00436C  0102               	movlb	2	; () banked
 16694  00436E  ACDF               	btfss	indf2,6,c
 16695  004370  D074               	goto	l14879
 16696                           
 16697                           ; BSR set to: 2
 16698                           ;lorawan_eu.c: 705: {
 16699                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 16700  004372  0E10               	movlw	16
 16701  004374  0102               	movlb	2	; () banked
 16702  004376  61DA               	cpfslt	(_loRa+218)& (0+255),b
 16703  004378  D035               	goto	l14871
 16704                           
 16705                           ; BSR set to: 2
 16706                           ;lorawan_eu.c: 707: {
 16707                           ;lorawan_eu.c: 708: if (frequency != 0)
 16708  00437A  0100               	movlb	0	; () banked
 16709  00437C  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16710  00437E  0100               	movlb	0	; () banked
 16711  004380  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16712  004382  0100               	movlb	0	; () banked
 16713  004384  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16714  004386  0100               	movlb	0	; () banked
 16715  004388  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16716  00438A  B4D8               	btfsc	status,2,c
 16717  00438C  D023               	goto	l14869
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;lorawan_eu.c: 709: {
 16721                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 16722  00438E  C0AF  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16723  004392  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16724  004396  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16725  00439A  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16726  00439E  0100               	movlb	0	; () banked
 16727  0043A0  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16728  0043A2  EC6A  F04B         	call	_UpdateFrequency
 16729                           
 16730                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 16731  0043A6  C0AE  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16732  0043AA  0100               	movlb	0	; () banked
 16733  0043AC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16734  0043AE  EC78  F031         	call	_UpdateDataRange
 16735                           
 16736                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 16737  0043B2  0E01               	movlw	1
 16738  0043B4  0100               	movlb	0	; () banked
 16739  0043B6  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16740  0043B8  0E2E               	movlw	46
 16741  0043BA  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16742  0043BC  0100               	movlb	0	; () banked
 16743  0043BE  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16744  0043C0  EC8D  F04B         	call	_UpdateDutyCycle
 16745                           
 16746                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 16747  0043C4  0E01               	movlw	1
 16748  0043C6  0100               	movlb	0	; () banked
 16749  0043C8  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16750  0043CA  0100               	movlb	0	; () banked
 16751  0043CC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16752  0043CE  ECFF  F02F         	call	_UpdateChannelIdStatus
 16753                           
 16754                           ;lorawan_eu.c: 714: }
 16755  0043D2  D041               	goto	l14877
 16756  0043D4                     l14869:
 16757                           
 16758                           ;lorawan_eu.c: 715: else
 16759                           ;lorawan_eu.c: 716: {
 16760                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 16761  0043D4  0E00               	movlw	0
 16762  0043D6  0100               	movlb	0	; () banked
 16763  0043D8  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16764  0043DA  0100               	movlb	0	; () banked
 16765  0043DC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16766  0043DE  ECFB  F048         	call	_LORAWAN_SetChannelIdStatus
 16767                           
 16768                           ;lorawan_eu.c: 718: }
 16769                           ;lorawan_eu.c: 719: }
 16770  0043E2  D039               	goto	l14877
 16771  0043E4                     l14871:
 16772                           
 16773                           ;lorawan_eu.c: 720: else
 16774                           ;lorawan_eu.c: 721: {
 16775                           ;lorawan_eu.c: 722: if (frequency != 0)
 16776  0043E4  0100               	movlb	0	; () banked
 16777  0043E6  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16778  0043E8  0100               	movlb	0	; () banked
 16779  0043EA  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16780  0043EC  0100               	movlb	0	; () banked
 16781  0043EE  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16782  0043F0  0100               	movlb	0	; () banked
 16783  0043F2  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16784  0043F4  B4D8               	btfsc	status,2,c
 16785  0043F6  D027               	goto	l14875
 16786                           
 16787                           ; BSR set to: 0
 16788                           ;lorawan_eu.c: 723: {
 16789                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 16790  0043F8  C0AF  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16791  0043FC  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16792  004400  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16793  004404  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16794  004408  0100               	movlb	0	; () banked
 16795  00440A  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16796  00440C  0F10               	addlw	16
 16797  00440E  EC6A  F04B         	call	_UpdateFrequency
 16798                           
 16799                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 16800  004412  C0AE  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16801  004416  0100               	movlb	0	; () banked
 16802  004418  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16803  00441A  0F10               	addlw	16
 16804  00441C  EC78  F031         	call	_UpdateDataRange
 16805                           
 16806                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 16807  004420  0E01               	movlw	1
 16808  004422  0100               	movlb	0	; () banked
 16809  004424  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16810  004426  0E2E               	movlw	46
 16811  004428  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16812  00442A  0100               	movlb	0	; () banked
 16813  00442C  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16814  00442E  0F10               	addlw	16
 16815  004430  EC8D  F04B         	call	_UpdateDutyCycle
 16816                           
 16817                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 16818  004434  0E01               	movlw	1
 16819  004436  0100               	movlb	0	; () banked
 16820  004438  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16821  00443A  0100               	movlb	0	; () banked
 16822  00443C  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16823  00443E  0F10               	addlw	16
 16824  004440  ECFF  F02F         	call	_UpdateChannelIdStatus
 16825                           
 16826                           ;lorawan_eu.c: 728: }
 16827  004444  D008               	goto	l14877
 16828  004446                     l14875:
 16829                           
 16830                           ;lorawan_eu.c: 729: else
 16831                           ;lorawan_eu.c: 730: {
 16832                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 16833  004446  0E00               	movlw	0
 16834  004448  0100               	movlb	0	; () banked
 16835  00444A  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16836  00444C  0100               	movlb	0	; () banked
 16837  00444E  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16838  004450  0F10               	addlw	16
 16839  004452  ECFB  F048         	call	_LORAWAN_SetChannelIdStatus
 16840  004456                     l14877:
 16841                           
 16842                           ;lorawan_eu.c: 732: }
 16843                           ;lorawan_eu.c: 733: }
 16844                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 16845  004456  0102               	movlb	2	; () banked
 16846  004458  8703               	bsf	(_loRa+3)& (0+255),3,b
 16847  00445A                     l14879:
 16848                           
 16849                           ; BSR set to: 2
 16850                           ;lorawan_eu.c: 736: }
 16851                           ;lorawan_eu.c: 737: return ptr;
 16852  00445A  C0AA  F0AA         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16853  00445E  C0AB  F0AB         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16854  004462  0012               	return	
 16855  004464                     __end_of_ExecuteNewChannel:
 16856                           	opt stack 0
 16857                           tosu	equ	0xFFF
 16858                           tosh	equ	0xFFE
 16859                           tosl	equ	0xFFD
 16860                           pclath	equ	0xFFA
 16861                           tblptru	equ	0xFF8
 16862                           tblptrh	equ	0xFF7
 16863                           tblptrl	equ	0xFF6
 16864                           tablat	equ	0xFF5
 16865                           prodh	equ	0xFF4
 16866                           prodl	equ	0xFF3
 16867                           intcon	equ	0xFF2
 16868                           intcon2	equ	0xFF1
 16869                           intcon3	equ	0xFF0
 16870                           indf0	equ	0xFEF
 16871                           postinc0	equ	0xFEE
 16872                           fsr0h	equ	0xFEA
 16873                           fsr0l	equ	0xFE9
 16874                           wreg	equ	0xFE8
 16875                           postinc1	equ	0xFE6
 16876                           postdec1	equ	0xFE5
 16877                           plusw1	equ	0xFE3
 16878                           fsr1h	equ	0xFE2
 16879                           fsr1l	equ	0xFE1
 16880                           indf2	equ	0xFDF
 16881                           postinc2	equ	0xFDE
 16882                           postdec2	equ	0xFDD
 16883                           fsr2h	equ	0xFDA
 16884                           fsr2l	equ	0xFD9
 16885                           status	equ	0xFD8
 16886                           
 16887 ;; *************** function _ValidateFrequency *****************
 16888 ;; Defined at:
 16889 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16890 ;; Parameters:    Size  Location     Type
 16891 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 16892 ;; Auto vars:     Size  Location     Type
 16893 ;;  result          1    8[BANK0 ] enum E8016
 16894 ;; Return value:  Size  Location     Type
 16895 ;;                  1    wreg      enum E8016
 16896 ;; Registers used:
 16897 ;;		wreg, status,2, status,0
 16898 ;; Tracked objects:
 16899 ;;		On entry : 0/0
 16900 ;;		On exit  : 0/0
 16901 ;;		Unchanged: 0/0
 16902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16903 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16904 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16906 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16907 ;;Total ram usage:        5 bytes
 16908 ;; Hardware stack levels used:    1
 16909 ;; Hardware stack levels required when called:    7
 16910 ;; This function calls:
 16911 ;;		Nothing
 16912 ;; This function is called by:
 16913 ;;		_ExecuteNewChannel
 16914 ;;		_ExecuteRxParamSetupReq
 16915 ;;		_UpdateCfList
 16916 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16917 ;;		_LORAWAN_SetFrequency
 16918 ;; This function uses a non-reentrant model
 16919 ;;
 16920                           
 16921                           	psect	text76
 16922  008A8E                     __ptext76:
 16923                           	opt stack 0
 16924  008A8E                     _ValidateFrequency:
 16925                           	opt stack 18
 16926                           
 16927                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 16928                           
 16929                           ; BSR set to: 2
 16930                           ;incstack = 0
 16931  008A8E  0E00               	movlw	0
 16932  008A90  0100               	movlb	0	; () banked
 16933  008A92  6F68               	movwf	ValidateFrequency@result& (0+255),b
 16934                           
 16935                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 16936  008A94  0102               	movlb	2	; () banked
 16937  008A96  51A4               	movf	(_loRa+164)& (0+255),w,b
 16938  008A98  A4D8               	btfss	status,2,c
 16939  008A9A  D019               	goto	l14109
 16940                           
 16941                           ; BSR set to: 2
 16942                           ;lorawan_eu.c: 1093: {
 16943                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 16944  008A9C  0E81               	movlw	129
 16945  008A9E  0100               	movlb	0	; () banked
 16946  008AA0  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16947  008AA2  0E25               	movlw	37
 16948  008AA4  0100               	movlb	0	; () banked
 16949  008AA6  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16950  008AA8  0EDB               	movlw	219
 16951  008AAA  0100               	movlb	0	; () banked
 16952  008AAC  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16953  008AAE  0E33               	movlw	51
 16954  008AB0  0100               	movlb	0	; () banked
 16955  008AB2  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16956  008AB4  B0D8               	btfsc	status,0,c
 16957  008AB6  D027               	goto	l14113
 16958                           
 16959                           ; BSR set to: 0
 16960  008AB8  0EC0               	movlw	192
 16961  008ABA  0100               	movlb	0	; () banked
 16962  008ABC  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16963  008ABE  0E55               	movlw	85
 16964  008AC0  0100               	movlb	0	; () banked
 16965  008AC2  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16966  008AC4  0E70               	movlw	112
 16967  008AC6  0100               	movlb	0	; () banked
 16968  008AC8  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16969  008ACA  0E33               	movlw	51
 16970  008ACC  D018               	goto	L8
 16971  008ACE                     l14109:
 16972                           
 16973                           ;lorawan_eu.c: 1099: else
 16974                           ;lorawan_eu.c: 1100: {
 16975                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 16976  008ACE  0E71               	movlw	113
 16977  008AD0  0100               	movlb	0	; () banked
 16978  008AD2  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16979  008AD4  0E5E               	movlw	94
 16980  008AD6  0100               	movlb	0	; () banked
 16981  008AD8  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16982  008ADA  0EEA               	movlw	234
 16983  008ADC  0100               	movlb	0	; () banked
 16984  008ADE  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 16985  008AE0  0E19               	movlw	25
 16986  008AE2  0100               	movlb	0	; () banked
 16987  008AE4  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 16988  008AE6  B0D8               	btfsc	status,0,c
 16989  008AE8  D00E               	goto	l14113
 16990                           
 16991                           ; BSR set to: 0
 16992  008AEA  0E90               	movlw	144
 16993  008AEC  0100               	movlb	0	; () banked
 16994  008AEE  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 16995  008AF0  0ED1               	movlw	209
 16996  008AF2  0100               	movlb	0	; () banked
 16997  008AF4  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 16998  008AF6  0ECF               	movlw	207
 16999  008AF8  0100               	movlb	0	; () banked
 17000  008AFA  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17001  008AFC  0E19               	movlw	25
 17002  008AFE                     L8:
 17003  008AFE  0100               	movlb	0	; () banked
 17004  008B00  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17005  008B02  B0D8               	btfsc	status,0,c
 17006  008B04  D003               	goto	l1229
 17007  008B06                     l14113:
 17008                           
 17009                           ; BSR set to: 0
 17010                           ;lorawan_eu.c: 1102: {
 17011                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 17012  008B06  0E03               	movlw	3
 17013  008B08  0100               	movlb	0	; () banked
 17014  008B0A  6F68               	movwf	ValidateFrequency@result& (0+255),b
 17015  008B0C                     l1229:
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;lorawan_eu.c: 1104: }
 17019                           ;lorawan_eu.c: 1105: }
 17020                           ;lorawan_eu.c: 1107: return result;
 17021  008B0C  0100               	movlb	0	; () banked
 17022  008B0E  5168               	movf	ValidateFrequency@result& (0+255),w,b
 17023  008B10  0012               	return	
 17024  008B12                     __end_of_ValidateFrequency:
 17025                           	opt stack 0
 17026                           tosu	equ	0xFFF
 17027                           tosh	equ	0xFFE
 17028                           tosl	equ	0xFFD
 17029                           pclath	equ	0xFFA
 17030                           tblptru	equ	0xFF8
 17031                           tblptrh	equ	0xFF7
 17032                           tblptrl	equ	0xFF6
 17033                           tablat	equ	0xFF5
 17034                           prodh	equ	0xFF4
 17035                           prodl	equ	0xFF3
 17036                           intcon	equ	0xFF2
 17037                           intcon2	equ	0xFF1
 17038                           intcon3	equ	0xFF0
 17039                           indf0	equ	0xFEF
 17040                           postinc0	equ	0xFEE
 17041                           fsr0h	equ	0xFEA
 17042                           fsr0l	equ	0xFE9
 17043                           wreg	equ	0xFE8
 17044                           postinc1	equ	0xFE6
 17045                           postdec1	equ	0xFE5
 17046                           plusw1	equ	0xFE3
 17047                           fsr1h	equ	0xFE2
 17048                           fsr1l	equ	0xFE1
 17049                           indf2	equ	0xFDF
 17050                           postinc2	equ	0xFDE
 17051                           postdec2	equ	0xFDD
 17052                           fsr2h	equ	0xFDA
 17053                           fsr2l	equ	0xFD9
 17054                           status	equ	0xFD8
 17055                           
 17056 ;; *************** function _ValidateDataRange *****************
 17057 ;; Defined at:
 17058 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17059 ;; Parameters:    Size  Location     Type
 17060 ;;  dataRangeNew    1    wreg     unsigned char 
 17061 ;; Auto vars:     Size  Location     Type
 17062 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 17063 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 17064 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 17065 ;;  result          1    6[BANK0 ] enum E8016
 17066 ;; Return value:  Size  Location     Type
 17067 ;;                  1    wreg      enum E8016
 17068 ;; Registers used:
 17069 ;;		wreg, status,2, status,0, cstack
 17070 ;; Tracked objects:
 17071 ;;		On entry : 0/0
 17072 ;;		On exit  : 0/0
 17073 ;;		Unchanged: 0/0
 17074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17076 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17078 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17079 ;;Total ram usage:        4 bytes
 17080 ;; Hardware stack levels used:    1
 17081 ;; Hardware stack levels required when called:    8
 17082 ;; This function calls:
 17083 ;;		_ValidateDataRate
 17084 ;; This function is called by:
 17085 ;;		_ExecuteNewChannel
 17086 ;;		_LORAWAN_SetDataRange
 17087 ;; This function uses a non-reentrant model
 17088 ;;
 17089                           
 17090                           	psect	text77
 17091  0093BE                     __ptext77:
 17092                           	opt stack 0
 17093  0093BE                     _ValidateDataRange:
 17094                           	opt stack 16
 17095                           
 17096                           ; BSR set to: 0
 17097                           ;incstack = 0
 17098                           ;ValidateDataRange@dataRangeNew stored from wreg
 17099  0093BE  0100               	movlb	0	; () banked
 17100  0093C0  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 17101                           
 17102                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 17103  0093C2  0E00               	movlw	0
 17104  0093C4  0100               	movlb	0	; () banked
 17105  0093C6  6F66               	movwf	ValidateDataRange@result& (0+255),b
 17106                           
 17107                           ; BSR set to: 0
 17108                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 17109                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 17110  0093C8  0100               	movlb	0	; () banked
 17111  0093CA  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17112  0093CC  0B0F               	andlw	15
 17113  0093CE  0100               	movlb	0	; () banked
 17114  0093D0  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 17115                           
 17116                           ; BSR set to: 0
 17117                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 17118  0093D2  0100               	movlb	0	; () banked
 17119  0093D4  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17120  0093D6  0B0F               	andlw	15
 17121  0093D8  0B0F               	andlw	15
 17122  0093DA  0100               	movlb	0	; () banked
 17123  0093DC  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 17124                           
 17125                           ; BSR set to: 0
 17126                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 17127  0093DE  0100               	movlb	0	; () banked
 17128  0093E0  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 17129  0093E2  EC5A  F050         	call	_ValidateDataRate
 17130  0093E6  0900               	iorlw	0
 17131  0093E8  A4D8               	btfss	status,2,c
 17132  0093EA  D00D               	goto	l14131
 17133  0093EC  0100               	movlb	0	; () banked
 17134  0093EE  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17135  0093F0  EC5A  F050         	call	_ValidateDataRate
 17136  0093F4  0900               	iorlw	0
 17137  0093F6  A4D8               	btfss	status,2,c
 17138  0093F8  D006               	goto	l14131
 17139  0093FA  0100               	movlb	0	; () banked
 17140  0093FC  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17141  0093FE  0100               	movlb	0	; () banked
 17142  009400  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 17143  009402  B0D8               	btfsc	status,0,c
 17144  009404  D003               	goto	l1236
 17145  009406                     l14131:
 17146                           
 17147                           ;lorawan_eu.c: 1119: {
 17148                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 17149  009406  0E03               	movlw	3
 17150  009408  0100               	movlb	0	; () banked
 17151  00940A  6F66               	movwf	ValidateDataRange@result& (0+255),b
 17152  00940C                     l1236:
 17153                           
 17154                           ; BSR set to: 0
 17155                           ;lorawan_eu.c: 1121: }
 17156                           ;lorawan_eu.c: 1122: return result;
 17157  00940C  0100               	movlb	0	; () banked
 17158  00940E  5166               	movf	ValidateDataRange@result& (0+255),w,b
 17159  009410  0012               	return	
 17160  009412                     __end_of_ValidateDataRange:
 17161                           	opt stack 0
 17162                           tosu	equ	0xFFF
 17163                           tosh	equ	0xFFE
 17164                           tosl	equ	0xFFD
 17165                           pclath	equ	0xFFA
 17166                           tblptru	equ	0xFF8
 17167                           tblptrh	equ	0xFF7
 17168                           tblptrl	equ	0xFF6
 17169                           tablat	equ	0xFF5
 17170                           prodh	equ	0xFF4
 17171                           prodl	equ	0xFF3
 17172                           intcon	equ	0xFF2
 17173                           intcon2	equ	0xFF1
 17174                           intcon3	equ	0xFF0
 17175                           indf0	equ	0xFEF
 17176                           postinc0	equ	0xFEE
 17177                           fsr0h	equ	0xFEA
 17178                           fsr0l	equ	0xFE9
 17179                           wreg	equ	0xFE8
 17180                           postinc1	equ	0xFE6
 17181                           postdec1	equ	0xFE5
 17182                           plusw1	equ	0xFE3
 17183                           fsr1h	equ	0xFE2
 17184                           fsr1l	equ	0xFE1
 17185                           indf2	equ	0xFDF
 17186                           postinc2	equ	0xFDE
 17187                           postdec2	equ	0xFDD
 17188                           fsr2h	equ	0xFDA
 17189                           fsr2l	equ	0xFD9
 17190                           status	equ	0xFD8
 17191                           
 17192 ;; *************** function _UpdateFrequency *****************
 17193 ;; Defined at:
 17194 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17195 ;; Parameters:    Size  Location     Type
 17196 ;;  channelId       1    wreg     unsigned char 
 17197 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  channelId       1    8[BANK0 ] unsigned char 
 17200 ;; Return value:  Size  Location     Type
 17201 ;;                  1    wreg      void 
 17202 ;; Registers used:
 17203 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17209 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17210 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17212 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17213 ;;Total ram usage:        5 bytes
 17214 ;; Hardware stack levels used:    1
 17215 ;; Hardware stack levels required when called:    7
 17216 ;; This function calls:
 17217 ;;		Nothing
 17218 ;; This function is called by:
 17219 ;;		_ExecuteNewChannel
 17220 ;;		_LORAWAN_SetFrequency
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text78
 17225  0096D4                     __ptext78:
 17226                           	opt stack 0
 17227  0096D4                     _UpdateFrequency:
 17228                           	opt stack 17
 17229                           
 17230                           ; BSR set to: 0
 17231                           ;incstack = 0
 17232                           ;UpdateFrequency@channelId stored from wreg
 17233  0096D4  0100               	movlb	0	; () banked
 17234  0096D6  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 17235                           
 17236                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 17237  0096D8  0100               	movlb	0	; () banked
 17238  0096DA  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 17239  0096DC  0D0E               	mullw	14
 17240  0096DE  0E00               	movlw	low _Channels
 17241  0096E0  24F3               	addwf	prodl,w,c
 17242  0096E2  6ED9               	movwf	fsr2l,c
 17243  0096E4  0E04               	movlw	high _Channels
 17244  0096E6  20F4               	addwfc	prodh,w,c
 17245  0096E8  6EDA               	movwf	fsr2h,c
 17246  0096EA  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 17247  0096EE  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 17248  0096F2  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 17249  0096F6  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 17250                           
 17251                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 17252  0096FA  0100               	movlb	0	; () banked
 17253  0096FC  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 17254  0096FE  0D0E               	mullw	14
 17255  009700  0E0D               	movlw	13
 17256  009702  26F3               	addwf	prodl,f,c
 17257  009704  0E00               	movlw	0
 17258  009706  22F4               	addwfc	prodh,f,c
 17259  009708  0E00               	movlw	low _Channels
 17260  00970A  24F3               	addwf	prodl,w,c
 17261  00970C  6ED9               	movwf	fsr2l,c
 17262  00970E  0E04               	movlw	high _Channels
 17263  009710  20F4               	addwfc	prodh,w,c
 17264  009712  6EDA               	movwf	fsr2h,c
 17265  009714  0E00               	movlw	0
 17266  009716  80DB               	bsf	plusw2,0,c
 17267                           
 17268                           ; BSR set to: 0
 17269  009718  0012               	return		;funcret
 17270  00971A                     __end_of_UpdateFrequency:
 17271                           	opt stack 0
 17272                           tosu	equ	0xFFF
 17273                           tosh	equ	0xFFE
 17274                           tosl	equ	0xFFD
 17275                           pclath	equ	0xFFA
 17276                           tblptru	equ	0xFF8
 17277                           tblptrh	equ	0xFF7
 17278                           tblptrl	equ	0xFF6
 17279                           tablat	equ	0xFF5
 17280                           prodh	equ	0xFF4
 17281                           prodl	equ	0xFF3
 17282                           intcon	equ	0xFF2
 17283                           intcon2	equ	0xFF1
 17284                           intcon3	equ	0xFF0
 17285                           indf0	equ	0xFEF
 17286                           postinc0	equ	0xFEE
 17287                           fsr0h	equ	0xFEA
 17288                           fsr0l	equ	0xFE9
 17289                           wreg	equ	0xFE8
 17290                           postinc1	equ	0xFE6
 17291                           postdec1	equ	0xFE5
 17292                           plusw1	equ	0xFE3
 17293                           fsr1h	equ	0xFE2
 17294                           fsr1l	equ	0xFE1
 17295                           indf2	equ	0xFDF
 17296                           postinc2	equ	0xFDE
 17297                           postdec2	equ	0xFDD
 17298                           plusw2	equ	0xFDB
 17299                           fsr2h	equ	0xFDA
 17300                           fsr2l	equ	0xFD9
 17301                           status	equ	0xFD8
 17302                           
 17303 ;; *************** function _UpdateDutyCycle *****************
 17304 ;; Defined at:
 17305 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17306 ;; Parameters:    Size  Location     Type
 17307 ;;  channelId       1    wreg     unsigned char 
 17308 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 17309 ;; Auto vars:     Size  Location     Type
 17310 ;;  channelId       1    6[BANK0 ] unsigned char 
 17311 ;; Return value:  Size  Location     Type
 17312 ;;                  1    wreg      void 
 17313 ;; Registers used:
 17314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17315 ;; Tracked objects:
 17316 ;;		On entry : 0/0
 17317 ;;		On exit  : 0/0
 17318 ;;		Unchanged: 0/0
 17319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17320 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17321 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17323 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17324 ;;Total ram usage:        3 bytes
 17325 ;; Hardware stack levels used:    1
 17326 ;; Hardware stack levels required when called:    7
 17327 ;; This function calls:
 17328 ;;		Nothing
 17329 ;; This function is called by:
 17330 ;;		_ExecuteNewChannel
 17331 ;;		_LORAWAN_SetDutyCycle
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335                           	psect	text79
 17336  00971A                     __ptext79:
 17337                           	opt stack 0
 17338  00971A                     _UpdateDutyCycle:
 17339                           	opt stack 17
 17340                           
 17341                           ; BSR set to: 0
 17342                           ;incstack = 0
 17343                           ;UpdateDutyCycle@channelId stored from wreg
 17344  00971A  0100               	movlb	0	; () banked
 17345  00971C  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 17346                           
 17347                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 17348  00971E  0100               	movlb	0	; () banked
 17349  009720  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 17350  009722  0D0E               	mullw	14
 17351  009724  0E06               	movlw	6
 17352  009726  26F3               	addwf	prodl,f,c
 17353  009728  0E00               	movlw	0
 17354  00972A  22F4               	addwfc	prodh,f,c
 17355  00972C  0E00               	movlw	low _Channels
 17356  00972E  24F3               	addwf	prodl,w,c
 17357  009730  6ED9               	movwf	fsr2l,c
 17358  009732  0E04               	movlw	high _Channels
 17359  009734  20F4               	addwfc	prodh,w,c
 17360  009736  6EDA               	movwf	fsr2h,c
 17361  009738  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 17362  00973C  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 17363                           
 17364                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 17365  009740  0100               	movlb	0	; () banked
 17366  009742  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 17367  009744  0D0E               	mullw	14
 17368  009746  0E0D               	movlw	13
 17369  009748  26F3               	addwf	prodl,f,c
 17370  00974A  0E00               	movlw	0
 17371  00974C  22F4               	addwfc	prodh,f,c
 17372  00974E  0E00               	movlw	low _Channels
 17373  009750  24F3               	addwf	prodl,w,c
 17374  009752  6ED9               	movwf	fsr2l,c
 17375  009754  0E04               	movlw	high _Channels
 17376  009756  20F4               	addwfc	prodh,w,c
 17377  009758  6EDA               	movwf	fsr2h,c
 17378  00975A  0E00               	movlw	0
 17379  00975C  84DB               	bsf	plusw2,2,c
 17380                           
 17381                           ; BSR set to: 0
 17382  00975E  0012               	return		;funcret
 17383  009760                     __end_of_UpdateDutyCycle:
 17384                           	opt stack 0
 17385                           tosu	equ	0xFFF
 17386                           tosh	equ	0xFFE
 17387                           tosl	equ	0xFFD
 17388                           pclath	equ	0xFFA
 17389                           tblptru	equ	0xFF8
 17390                           tblptrh	equ	0xFF7
 17391                           tblptrl	equ	0xFF6
 17392                           tablat	equ	0xFF5
 17393                           prodh	equ	0xFF4
 17394                           prodl	equ	0xFF3
 17395                           intcon	equ	0xFF2
 17396                           intcon2	equ	0xFF1
 17397                           intcon3	equ	0xFF0
 17398                           indf0	equ	0xFEF
 17399                           postinc0	equ	0xFEE
 17400                           fsr0h	equ	0xFEA
 17401                           fsr0l	equ	0xFE9
 17402                           wreg	equ	0xFE8
 17403                           postinc1	equ	0xFE6
 17404                           postdec1	equ	0xFE5
 17405                           plusw1	equ	0xFE3
 17406                           fsr1h	equ	0xFE2
 17407                           fsr1l	equ	0xFE1
 17408                           indf2	equ	0xFDF
 17409                           postinc2	equ	0xFDE
 17410                           postdec2	equ	0xFDD
 17411                           plusw2	equ	0xFDB
 17412                           fsr2h	equ	0xFDA
 17413                           fsr2l	equ	0xFD9
 17414                           status	equ	0xFD8
 17415                           
 17416 ;; *************** function _UpdateDataRange *****************
 17417 ;; Defined at:
 17418 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17419 ;; Parameters:    Size  Location     Type
 17420 ;;  channelId       1    wreg     unsigned char 
 17421 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 17422 ;; Auto vars:     Size  Location     Type
 17423 ;;  channelId       1    6[BANK0 ] unsigned char 
 17424 ;;  i               1    7[BANK0 ] unsigned char 
 17425 ;; Return value:  Size  Location     Type
 17426 ;;                  1    wreg      void 
 17427 ;; Registers used:
 17428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17429 ;; Tracked objects:
 17430 ;;		On entry : 0/0
 17431 ;;		On exit  : 0/0
 17432 ;;		Unchanged: 0/0
 17433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17434 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17437 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;Total ram usage:        4 bytes
 17439 ;; Hardware stack levels used:    1
 17440 ;; Hardware stack levels required when called:    7
 17441 ;; This function calls:
 17442 ;;		Nothing
 17443 ;; This function is called by:
 17444 ;;		_ExecuteNewChannel
 17445 ;;		_LORAWAN_SetDataRange
 17446 ;; This function uses a non-reentrant model
 17447 ;;
 17448                           
 17449                           	psect	text80
 17450  0062F0                     __ptext80:
 17451                           	opt stack 0
 17452  0062F0                     _UpdateDataRange:
 17453                           	opt stack 17
 17454                           
 17455                           ; BSR set to: 0
 17456                           ;incstack = 0
 17457                           ;UpdateDataRange@channelId stored from wreg
 17458  0062F0  0100               	movlb	0	; () banked
 17459  0062F2  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 17460                           
 17461                           ;lorawan_eu.c: 1011: uint8_t i;
 17462                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 17463  0062F4  0E07               	movlw	7
 17464  0062F6  0102               	movlb	2	; () banked
 17465  0062F8  6FEB               	movwf	(_loRa+235)& (0+255),b
 17466                           
 17467                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 17468  0062FA  0E00               	movlw	0
 17469  0062FC  0102               	movlb	2	; () banked
 17470  0062FE  6FEC               	movwf	(_loRa+236)& (0+255),b
 17471                           
 17472                           ; BSR set to: 2
 17473                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 17474  006300  0100               	movlb	0	; () banked
 17475  006302  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 17476  006304  0D0E               	mullw	14
 17477  006306  0E05               	movlw	5
 17478  006308  26F3               	addwf	prodl,f,c
 17479  00630A  0E00               	movlw	0
 17480  00630C  22F4               	addwfc	prodh,f,c
 17481  00630E  0E00               	movlw	low _Channels
 17482  006310  24F3               	addwf	prodl,w,c
 17483  006312  6ED9               	movwf	fsr2l,c
 17484  006314  0E04               	movlw	high _Channels
 17485  006316  20F4               	addwfc	prodh,w,c
 17486  006318  6EDA               	movwf	fsr2h,c
 17487  00631A  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 17491  00631E  0100               	movlb	0	; () banked
 17492  006320  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 17493  006322  0D0E               	mullw	14
 17494  006324  0E0D               	movlw	13
 17495  006326  26F3               	addwf	prodl,f,c
 17496  006328  0E00               	movlw	0
 17497  00632A  22F4               	addwfc	prodh,f,c
 17498  00632C  0E00               	movlw	low _Channels
 17499  00632E  24F3               	addwf	prodl,w,c
 17500  006330  6ED9               	movwf	fsr2l,c
 17501  006332  0E04               	movlw	high _Channels
 17502  006334  20F4               	addwfc	prodh,w,c
 17503  006336  6EDA               	movwf	fsr2h,c
 17504  006338  0E00               	movlw	0
 17505  00633A  82DB               	bsf	plusw2,1,c
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 17509  00633C  0E00               	movlw	0
 17510  00633E  0100               	movlb	0	; () banked
 17511  006340  6F67               	movwf	UpdateDataRange@i& (0+255),b
 17512  006342  D071               	goto	l14155
 17513  006344                     l14143:
 17514                           
 17515                           ; BSR set to: 0
 17516                           ;lorawan_eu.c: 1020: {
 17517                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17518  006344  0100               	movlb	0	; () banked
 17519  006346  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17520  006348  0D0E               	mullw	14
 17521  00634A  0E05               	movlw	5
 17522  00634C  26F3               	addwf	prodl,f,c
 17523  00634E  0E00               	movlw	0
 17524  006350  22F4               	addwfc	prodh,f,c
 17525  006352  0E00               	movlw	low _Channels
 17526  006354  24F3               	addwf	prodl,w,c
 17527  006356  6ED9               	movwf	fsr2l,c
 17528  006358  0E04               	movlw	high _Channels
 17529  00635A  20F4               	addwfc	prodh,w,c
 17530  00635C  6EDA               	movwf	fsr2h,c
 17531  00635E  0104               	movlb	4	; () banked
 17532  006360  50DF               	movf	223,w,c
 17533  006362  0B0F               	andlw	15
 17534  006364  0100               	movlb	0	; () banked
 17535  006366  6F65               	movwf	??_UpdateDataRange& (0+255),b
 17536  006368  0102               	movlb	2	; () banked
 17537  00636A  51EB               	movf	(_loRa+235)& (0+255),w,b
 17538  00636C  0100               	movlb	0	; () banked
 17539  00636E  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 17540  006370  B0D8               	btfsc	status,0,c
 17541  006372  D022               	goto	l1202
 17542                           
 17543                           ; BSR set to: 0
 17544  006374  0100               	movlb	0	; () banked
 17545  006376  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17546  006378  0D0E               	mullw	14
 17547  00637A  0E04               	movlw	4
 17548  00637C  26F3               	addwf	prodl,f,c
 17549  00637E  0E00               	movlw	0
 17550  006380  22F4               	addwfc	prodh,f,c
 17551  006382  0E00               	movlw	low _Channels
 17552  006384  24F3               	addwf	prodl,w,c
 17553  006386  6ED9               	movwf	fsr2l,c
 17554  006388  0E04               	movlw	high _Channels
 17555  00638A  20F4               	addwfc	prodh,w,c
 17556  00638C  6EDA               	movwf	fsr2h,c
 17557  00638E  04DE               	decf	postinc2,w,c
 17558  006390  A4D8               	btfss	status,2,c
 17559  006392  D012               	goto	l1202
 17560                           
 17561                           ; BSR set to: 0
 17562                           ;lorawan_eu.c: 1022: {
 17563                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 17564  006394  0100               	movlb	0	; () banked
 17565  006396  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17566  006398  0D0E               	mullw	14
 17567  00639A  0E05               	movlw	5
 17568  00639C  26F3               	addwf	prodl,f,c
 17569  00639E  0E00               	movlw	0
 17570  0063A0  22F4               	addwfc	prodh,f,c
 17571  0063A2  0E00               	movlw	low _Channels
 17572  0063A4  24F3               	addwf	prodl,w,c
 17573  0063A6  6ED9               	movwf	fsr2l,c
 17574  0063A8  0E04               	movlw	high _Channels
 17575  0063AA  20F4               	addwfc	prodh,w,c
 17576  0063AC  6EDA               	movwf	fsr2h,c
 17577  0063AE  0104               	movlb	4	; () banked
 17578  0063B0  50DF               	movf	223,w,c
 17579  0063B2  0B0F               	andlw	15
 17580  0063B4  0102               	movlb	2	; () banked
 17581  0063B6  6FEB               	movwf	(_loRa+235)& (0+255),b
 17582  0063B8                     l1202:
 17583                           
 17584                           ;lorawan_eu.c: 1024: }
 17585                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17586  0063B8  0100               	movlb	0	; () banked
 17587  0063BA  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17588  0063BC  0D0E               	mullw	14
 17589  0063BE  0E05               	movlw	5
 17590  0063C0  26F3               	addwf	prodl,f,c
 17591  0063C2  0E00               	movlw	0
 17592  0063C4  22F4               	addwfc	prodh,f,c
 17593  0063C6  0E00               	movlw	low _Channels
 17594  0063C8  24F3               	addwf	prodl,w,c
 17595  0063CA  6ED9               	movwf	fsr2l,c
 17596  0063CC  0E04               	movlw	high _Channels
 17597  0063CE  20F4               	addwfc	prodh,w,c
 17598  0063D0  6EDA               	movwf	fsr2h,c
 17599  0063D2  0104               	movlb	4	; () banked
 17600  0063D4  38DF               	swapf	223,w,c
 17601  0063D6  0B0F               	andlw	15
 17602  0063D8  0102               	movlb	2	; () banked
 17603  0063DA  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17604  0063DC  D022               	goto	l14153
 17605                           
 17606                           ; BSR set to: 2
 17607  0063DE  0100               	movlb	0	; () banked
 17608  0063E0  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17609  0063E2  0D0E               	mullw	14
 17610  0063E4  0E04               	movlw	4
 17611  0063E6  26F3               	addwf	prodl,f,c
 17612  0063E8  0E00               	movlw	0
 17613  0063EA  22F4               	addwfc	prodh,f,c
 17614  0063EC  0E00               	movlw	low _Channels
 17615  0063EE  24F3               	addwf	prodl,w,c
 17616  0063F0  6ED9               	movwf	fsr2l,c
 17617  0063F2  0E04               	movlw	high _Channels
 17618  0063F4  20F4               	addwfc	prodh,w,c
 17619  0063F6  6EDA               	movwf	fsr2h,c
 17620  0063F8  04DE               	decf	postinc2,w,c
 17621  0063FA  A4D8               	btfss	status,2,c
 17622  0063FC  D012               	goto	l14153
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;lorawan_eu.c: 1026: {
 17626                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 17627  0063FE  0100               	movlb	0	; () banked
 17628  006400  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17629  006402  0D0E               	mullw	14
 17630  006404  0E05               	movlw	5
 17631  006406  26F3               	addwf	prodl,f,c
 17632  006408  0E00               	movlw	0
 17633  00640A  22F4               	addwfc	prodh,f,c
 17634  00640C  0E00               	movlw	low _Channels
 17635  00640E  24F3               	addwf	prodl,w,c
 17636  006410  6ED9               	movwf	fsr2l,c
 17637  006412  0E04               	movlw	high _Channels
 17638  006414  20F4               	addwfc	prodh,w,c
 17639  006416  6EDA               	movwf	fsr2h,c
 17640  006418  0104               	movlb	4	; () banked
 17641  00641A  38DF               	swapf	223,w,c
 17642  00641C  0B0F               	andlw	15
 17643  00641E  0102               	movlb	2	; () banked
 17644  006420  6FEC               	movwf	(_loRa+236)& (0+255),b
 17645  006422                     l14153:
 17646  006422  0100               	movlb	0	; () banked
 17647  006424  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 17648  006426                     l14155:
 17649                           
 17650                           ; BSR set to: 0
 17651  006426  0102               	movlb	2	; () banked
 17652  006428  51ED               	movf	(_loRa+237)& (0+255),w,b
 17653  00642A  0100               	movlb	0	; () banked
 17654  00642C  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 17655  00642E  A0D8               	btfss	status,0,c
 17656  006430  D789               	goto	l14143
 17657                           
 17658                           ; BSR set to: 0
 17659                           ;lorawan_eu.c: 1028: }
 17660                           ;lorawan_eu.c: 1029: }
 17661                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 17662                           
 17663                           ; BSR set to: 0
 17664  006432  0102               	movlb	2	; () banked
 17665  006434  51DF               	movf	(_loRa+223)& (0+255),w,b
 17666  006436  0102               	movlb	2	; () banked
 17667  006438  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17668  00643A  A0D8               	btfss	status,0,c
 17669                           
 17670                           ; BSR set to: 2
 17671                           ;lorawan_eu.c: 1032: {
 17672                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 17673  00643C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17674                           
 17675                           ; BSR set to: 2
 17676                           ;lorawan_eu.c: 1034: }
 17677                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 17678                           
 17679                           ; BSR set to: 2
 17680  006440  0102               	movlb	2	; () banked
 17681  006442  51EB               	movf	(_loRa+235)& (0+255),w,b
 17682  006444  0102               	movlb	2	; () banked
 17683  006446  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17684  006448  B0D8               	btfsc	status,0,c
 17685  00644A  0012               	return	
 17686                           
 17687                           ; BSR set to: 2
 17688                           ;lorawan_eu.c: 1037: {
 17689                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 17690  00644C  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17691  006450  0012               	return	
 17692  006452                     __end_of_UpdateDataRange:
 17693                           	opt stack 0
 17694                           tosu	equ	0xFFF
 17695                           tosh	equ	0xFFE
 17696                           tosl	equ	0xFFD
 17697                           pclath	equ	0xFFA
 17698                           tblptru	equ	0xFF8
 17699                           tblptrh	equ	0xFF7
 17700                           tblptrl	equ	0xFF6
 17701                           tablat	equ	0xFF5
 17702                           prodh	equ	0xFF4
 17703                           prodl	equ	0xFF3
 17704                           intcon	equ	0xFF2
 17705                           intcon2	equ	0xFF1
 17706                           intcon3	equ	0xFF0
 17707                           indf0	equ	0xFEF
 17708                           postinc0	equ	0xFEE
 17709                           fsr0h	equ	0xFEA
 17710                           fsr0l	equ	0xFE9
 17711                           wreg	equ	0xFE8
 17712                           postinc1	equ	0xFE6
 17713                           postdec1	equ	0xFE5
 17714                           plusw1	equ	0xFE3
 17715                           fsr1h	equ	0xFE2
 17716                           fsr1l	equ	0xFE1
 17717                           indf2	equ	0xFDF
 17718                           postinc2	equ	0xFDE
 17719                           postdec2	equ	0xFDD
 17720                           plusw2	equ	0xFDB
 17721                           fsr2h	equ	0xFDA
 17722                           fsr2l	equ	0xFD9
 17723                           status	equ	0xFD8
 17724                           
 17725 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 17726 ;; Defined at:
 17727 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17728 ;; Parameters:    Size  Location     Type
 17729 ;;  channelId       1    wreg     unsigned char 
 17730 ;;  statusNew       1    8[BANK0 ] unsigned char 
 17731 ;; Auto vars:     Size  Location     Type
 17732 ;;  channelId       1   10[BANK0 ] unsigned char 
 17733 ;;  result          1    9[BANK0 ] enum E8016
 17734 ;; Return value:  Size  Location     Type
 17735 ;;                  1    wreg      enum E8016
 17736 ;; Registers used:
 17737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17738 ;; Tracked objects:
 17739 ;;		On entry : 0/0
 17740 ;;		On exit  : 0/0
 17741 ;;		Unchanged: 0/0
 17742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17743 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17746 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17747 ;;Total ram usage:        3 bytes
 17748 ;; Hardware stack levels used:    1
 17749 ;; Hardware stack levels required when called:    8
 17750 ;; This function calls:
 17751 ;;		_UpdateChannelIdStatus
 17752 ;;		_ValidateChannelId
 17753 ;; This function is called by:
 17754 ;;		_ExecuteNewChannel
 17755 ;;		_UpdateCfList
 17756 ;; This function uses a non-reentrant model
 17757 ;;
 17758                           
 17759                           	psect	text81
 17760  0091F6                     __ptext81:
 17761                           	opt stack 0
 17762  0091F6                     _LORAWAN_SetChannelIdStatus:
 17763                           	opt stack 17
 17764                           
 17765                           ; BSR set to: 2
 17766                           ;incstack = 0
 17767                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 17768  0091F6  0100               	movlb	0	; () banked
 17769  0091F8  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 17770                           
 17771                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 17772  0091FA  0E00               	movlw	0
 17773  0091FC  0100               	movlb	0	; () banked
 17774  0091FE  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17775                           
 17776                           ; BSR set to: 0
 17777                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 17778  009200  0E01               	movlw	1
 17779  009202  0100               	movlb	0	; () banked
 17780  009204  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 17781  009206  0100               	movlb	0	; () banked
 17782  009208  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17783  00920A  EC1A  F04E         	call	_ValidateChannelId
 17784  00920E  0900               	iorlw	0
 17785  009210  B4D8               	btfsc	status,2,c
 17786  009212  D004               	goto	l14171
 17787                           
 17788                           ;lorawan_eu.c: 288: {
 17789                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 17790  009214  0E03               	movlw	3
 17791  009216  0100               	movlb	0	; () banked
 17792  009218  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17793                           
 17794                           ;lorawan_eu.c: 290: }
 17795  00921A  0012               	return	
 17796  00921C                     l14171:
 17797                           
 17798                           ;lorawan_eu.c: 292: else
 17799                           ;lorawan_eu.c: 293: {
 17800                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 17801  00921C  0100               	movlb	0	; () banked
 17802  00921E  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17803  009220  0D0E               	mullw	14
 17804  009222  0E0D               	movlw	13
 17805  009224  26F3               	addwf	prodl,f,c
 17806  009226  0E00               	movlw	0
 17807  009228  22F4               	addwfc	prodh,f,c
 17808  00922A  0E00               	movlw	low _Channels
 17809  00922C  24F3               	addwf	prodl,w,c
 17810  00922E  6ED9               	movwf	fsr2l,c
 17811  009230  0E04               	movlw	high _Channels
 17812  009232  20F4               	addwfc	prodh,w,c
 17813  009234  6EDA               	movwf	fsr2h,c
 17814  009236  50DF               	movf	indf2,w,c
 17815  009238  0B07               	andlw	7
 17816  00923A  0A07               	xorlw	7
 17817  00923C  A4D8               	btfss	status,2,c
 17818  00923E  D007               	goto	l14175
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;lorawan_eu.c: 295: {
 17822                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 17823  009240  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 17824  009244  0100               	movlb	0	; () banked
 17825  009246  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17826  009248  ECFF  F02F         	call	_UpdateChannelIdStatus
 17827                           
 17828                           ;lorawan_eu.c: 297: }
 17829  00924C  0012               	return	
 17830  00924E                     l14175:
 17831                           
 17832                           ;lorawan_eu.c: 298: else
 17833                           ;lorawan_eu.c: 299: {
 17834                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 17835  00924E  0E03               	movlw	3
 17836  009250  0100               	movlb	0	; () banked
 17837  009252  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17838                           
 17839                           ; BSR set to: 0
 17840                           
 17841                           ; BSR set to: 0
 17842  009254  0012               	return	
 17843  009256                     __end_of_LORAWAN_SetChannelIdStatus:
 17844                           	opt stack 0
 17845                           tosu	equ	0xFFF
 17846                           tosh	equ	0xFFE
 17847                           tosl	equ	0xFFD
 17848                           pclath	equ	0xFFA
 17849                           tblptru	equ	0xFF8
 17850                           tblptrh	equ	0xFF7
 17851                           tblptrl	equ	0xFF6
 17852                           tablat	equ	0xFF5
 17853                           prodh	equ	0xFF4
 17854                           prodl	equ	0xFF3
 17855                           intcon	equ	0xFF2
 17856                           intcon2	equ	0xFF1
 17857                           intcon3	equ	0xFF0
 17858                           indf0	equ	0xFEF
 17859                           postinc0	equ	0xFEE
 17860                           fsr0h	equ	0xFEA
 17861                           fsr0l	equ	0xFE9
 17862                           wreg	equ	0xFE8
 17863                           postinc1	equ	0xFE6
 17864                           postdec1	equ	0xFE5
 17865                           plusw1	equ	0xFE3
 17866                           fsr1h	equ	0xFE2
 17867                           fsr1l	equ	0xFE1
 17868                           indf2	equ	0xFDF
 17869                           postinc2	equ	0xFDE
 17870                           postdec2	equ	0xFDD
 17871                           plusw2	equ	0xFDB
 17872                           fsr2h	equ	0xFDA
 17873                           fsr2l	equ	0xFD9
 17874                           status	equ	0xFD8
 17875                           
 17876 ;; *************** function _ValidateChannelId *****************
 17877 ;; Defined at:
 17878 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17879 ;; Parameters:    Size  Location     Type
 17880 ;;  channelId       1    wreg     unsigned char 
 17881 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 17882 ;; Auto vars:     Size  Location     Type
 17883 ;;  channelId       1    6[BANK0 ] unsigned char 
 17884 ;;  result          1    5[BANK0 ] enum E8016
 17885 ;; Return value:  Size  Location     Type
 17886 ;;                  1    wreg      enum E8016
 17887 ;; Registers used:
 17888 ;;		wreg, status,2, status,0
 17889 ;; Tracked objects:
 17890 ;;		On entry : 0/0
 17891 ;;		On exit  : 0/0
 17892 ;;		Unchanged: 0/0
 17893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17894 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17895 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17897 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17898 ;;Total ram usage:        3 bytes
 17899 ;; Hardware stack levels used:    1
 17900 ;; Hardware stack levels required when called:    7
 17901 ;; This function calls:
 17902 ;;		Nothing
 17903 ;; This function is called by:
 17904 ;;		_LORAWAN_SetChannelIdStatus
 17905 ;;		_ExecuteNewChannel
 17906 ;;		_LORAWAN_SetDataRange
 17907 ;;		_LORAWAN_GetDataRange
 17908 ;;		_LORAWAN_GetChannelIdStatus
 17909 ;;		_LORAWAN_SetFrequency
 17910 ;;		_LORAWAN_SetDutyCycle
 17911 ;;		_LORAWAN_GetDutyCycle
 17912 ;; This function uses a non-reentrant model
 17913 ;;
 17914                           
 17915                           	psect	text82
 17916  009C34                     __ptext82:
 17917                           	opt stack 0
 17918  009C34                     _ValidateChannelId:
 17919                           	opt stack 17
 17920                           
 17921                           ;incstack = 0
 17922                           ;ValidateChannelId@channelId stored from wreg
 17923  009C34  0100               	movlb	0	; () banked
 17924  009C36  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 17925                           
 17926                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 17927  009C38  0E00               	movlw	0
 17928  009C3A  0100               	movlb	0	; () banked
 17929  009C3C  6F65               	movwf	ValidateChannelId@result& (0+255),b
 17930                           
 17931                           ; BSR set to: 0
 17932                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 17933  009C3E  0E10               	movlw	16
 17934  009C40  0100               	movlb	0	; () banked
 17935  009C42  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17936  009C44  D009               	goto	l13849
 17937                           
 17938                           ; BSR set to: 0
 17939  009C46  0100               	movlb	0	; () banked
 17940  009C48  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 17941  009C4A  0100               	movlb	0	; () banked
 17942  009C4C  A4D8               	btfss	status,2,c
 17943  009C4E  D007               	goto	l1242
 17944                           
 17945                           ; BSR set to: 0
 17946  009C50  0E03               	movlw	3
 17947  009C52  0100               	movlb	0	; () banked
 17948  009C54  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 17949  009C56  D003               	goto	l1242
 17950  009C58                     l13849:
 17951                           
 17952                           ; BSR set to: 0
 17953                           ;lorawan_eu.c: 1130: {
 17954                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 17955  009C58  0E03               	movlw	3
 17956  009C5A  0100               	movlb	0	; () banked
 17957  009C5C  6F65               	movwf	ValidateChannelId@result& (0+255),b
 17958  009C5E                     l1242:
 17959                           
 17960                           ; BSR set to: 0
 17961                           ;lorawan_eu.c: 1132: }
 17962                           ;lorawan_eu.c: 1134: return result;
 17963  009C5E  0100               	movlb	0	; () banked
 17964  009C60  5165               	movf	ValidateChannelId@result& (0+255),w,b
 17965  009C62  0012               	return	
 17966  009C64                     __end_of_ValidateChannelId:
 17967                           	opt stack 0
 17968                           tosu	equ	0xFFF
 17969                           tosh	equ	0xFFE
 17970                           tosl	equ	0xFFD
 17971                           pclath	equ	0xFFA
 17972                           tblptru	equ	0xFF8
 17973                           tblptrh	equ	0xFF7
 17974                           tblptrl	equ	0xFF6
 17975                           tablat	equ	0xFF5
 17976                           prodh	equ	0xFF4
 17977                           prodl	equ	0xFF3
 17978                           intcon	equ	0xFF2
 17979                           intcon2	equ	0xFF1
 17980                           intcon3	equ	0xFF0
 17981                           indf0	equ	0xFEF
 17982                           postinc0	equ	0xFEE
 17983                           fsr0h	equ	0xFEA
 17984                           fsr0l	equ	0xFE9
 17985                           wreg	equ	0xFE8
 17986                           postinc1	equ	0xFE6
 17987                           postdec1	equ	0xFE5
 17988                           plusw1	equ	0xFE3
 17989                           fsr1h	equ	0xFE2
 17990                           fsr1l	equ	0xFE1
 17991                           indf2	equ	0xFDF
 17992                           postinc2	equ	0xFDE
 17993                           postdec2	equ	0xFDD
 17994                           plusw2	equ	0xFDB
 17995                           fsr2h	equ	0xFDA
 17996                           fsr2l	equ	0xFD9
 17997                           status	equ	0xFD8
 17998                           
 17999 ;; *************** function _ExecuteLinkCheck *****************
 18000 ;; Defined at:
 18001 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18002 ;; Parameters:    Size  Location     Type
 18003 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 18004 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18005 ;; Auto vars:     Size  Location     Type
 18006 ;;		None
 18007 ;; Return value:  Size  Location     Type
 18008 ;;                  2    4[BANK0 ] PTR unsigned char 
 18009 ;; Registers used:
 18010 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18011 ;; Tracked objects:
 18012 ;;		On entry : 0/0
 18013 ;;		On exit  : 0/0
 18014 ;;		Unchanged: 0/0
 18015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18016 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18019 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18020 ;;Total ram usage:        2 bytes
 18021 ;; Hardware stack levels used:    1
 18022 ;; Hardware stack levels required when called:    7
 18023 ;; This function calls:
 18024 ;;		Nothing
 18025 ;; This function is called by:
 18026 ;;		_MacExecuteCommands
 18027 ;; This function uses a non-reentrant model
 18028 ;;
 18029                           
 18030                           	psect	text83
 18031  009C02                     __ptext83:
 18032                           	opt stack 0
 18033  009C02                     _ExecuteLinkCheck:
 18034                           	opt stack 18
 18035                           
 18036                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 18037                           
 18038                           ; BSR set to: 0
 18039                           ;incstack = 0
 18040  009C02  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18041  009C06  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18042  009C0A  50DF               	movf	indf2,w,c
 18043  009C0C  0102               	movlb	2	; () banked
 18044  009C0E  6FDD               	movwf	(_loRa+221)& (0+255),b
 18045                           
 18046                           ; BSR set to: 2
 18047  009C10  0100               	movlb	0	; () banked
 18048  009C12  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18049  009C14  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18050                           
 18051                           ; BSR set to: 0
 18052                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 18053  009C16  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18054  009C1A  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18055  009C1E  50DF               	movf	indf2,w,c
 18056  009C20  0102               	movlb	2	; () banked
 18057  009C22  6FDE               	movwf	(_loRa+222)& (0+255),b
 18058  009C24  0100               	movlb	0	; () banked
 18059  009C26  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18060  009C28  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18061                           
 18062                           ; BSR set to: 0
 18063                           ;lorawan.c: 1656: return ptr;
 18064  009C2A  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 18065  009C2E  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 18066  009C32  0012               	return	
 18067  009C34                     __end_of_ExecuteLinkCheck:
 18068                           	opt stack 0
 18069                           tosu	equ	0xFFF
 18070                           tosh	equ	0xFFE
 18071                           tosl	equ	0xFFD
 18072                           pclath	equ	0xFFA
 18073                           tblptru	equ	0xFF8
 18074                           tblptrh	equ	0xFF7
 18075                           tblptrl	equ	0xFF6
 18076                           tablat	equ	0xFF5
 18077                           prodh	equ	0xFF4
 18078                           prodl	equ	0xFF3
 18079                           intcon	equ	0xFF2
 18080                           intcon2	equ	0xFF1
 18081                           intcon3	equ	0xFF0
 18082                           indf0	equ	0xFEF
 18083                           postinc0	equ	0xFEE
 18084                           fsr0h	equ	0xFEA
 18085                           fsr0l	equ	0xFE9
 18086                           wreg	equ	0xFE8
 18087                           postinc1	equ	0xFE6
 18088                           postdec1	equ	0xFE5
 18089                           plusw1	equ	0xFE3
 18090                           fsr1h	equ	0xFE2
 18091                           fsr1l	equ	0xFE1
 18092                           indf2	equ	0xFDF
 18093                           postinc2	equ	0xFDE
 18094                           postdec2	equ	0xFDD
 18095                           plusw2	equ	0xFDB
 18096                           fsr2h	equ	0xFDA
 18097                           fsr2l	equ	0xFD9
 18098                           status	equ	0xFD8
 18099                           
 18100 ;; *************** function _ExecuteLinkAdr *****************
 18101 ;; Defined at:
 18102 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18103 ;; Parameters:    Size  Location     Type
 18104 ;;  ptr             2   19[BANK0 ] PTR unsigned char 
 18105 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18106 ;; Auto vars:     Size  Location     Type
 18107 ;;  redundancy      2   26[BANK0 ] PTR struct .
 18108 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18109 ;;  channelMask     2   23[BANK0 ] unsigned int 
 18110 ;;  dataRate        1   28[BANK0 ] unsigned char 
 18111 ;;  txPower         1   25[BANK0 ] unsigned char 
 18112 ;; Return value:  Size  Location     Type
 18113 ;;                  2   19[BANK0 ] PTR unsigned char 
 18114 ;; Registers used:
 18115 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18116 ;; Tracked objects:
 18117 ;;		On entry : 0/0
 18118 ;;		On exit  : 0/0
 18119 ;;		Unchanged: 0/0
 18120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18121 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18122 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18123 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18124 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18125 ;;Total ram usage:       10 bytes
 18126 ;; Hardware stack levels used:    1
 18127 ;; Hardware stack levels required when called:   10
 18128 ;; This function calls:
 18129 ;;		_EnableChannels
 18130 ;;		_UpdateCurrentDataRate
 18131 ;;		_UpdateTxPower
 18132 ;;		_ValidateChannelMask
 18133 ;;		_ValidateChannelMaskCntl
 18134 ;;		_ValidateDataRate
 18135 ;;		_ValidateTxPower
 18136 ;; This function is called by:
 18137 ;;		_MacExecuteCommands
 18138 ;; This function uses a non-reentrant model
 18139 ;;
 18140                           
 18141                           	psect	text84
 18142  0037DA                     __ptext84:
 18143                           	opt stack 0
 18144  0037DA                     _ExecuteLinkAdr:
 18145                           	opt stack 15
 18146                           
 18147                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 18148                           ;lorawan_eu.c: 616: uint16_t channelMask;
 18149                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;incstack = 0
 18153  0037DA  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18154  0037DE  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18155  0037E2  50DF               	movf	indf2,w,c
 18156  0037E4  0B0F               	andlw	15
 18157  0037E6  0100               	movlb	0	; () banked
 18158  0037E8  6F79               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 18159                           
 18160                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 18161  0037EA  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18162  0037EE  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18163  0037F2  50DF               	movf	indf2,w,c
 18164  0037F4  0100               	movlb	0	; () banked
 18165  0037F6  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18166  0037F8  0100               	movlb	0	; () banked
 18167  0037FA  3975               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 18168  0037FC  0B0F               	andlw	15
 18169  0037FE  0B0F               	andlw	15
 18170  003800  0100               	movlb	0	; () banked
 18171  003802  6F7C               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 18172                           
 18173                           ; BSR set to: 0
 18174                           ;lorawan_eu.c: 620: ptr++;
 18175  003804  0100               	movlb	0	; () banked
 18176  003806  4B73               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18177  003808  2B74               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 18181  00380A  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18182  00380E  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18183  003812  CFDE F077          	movff	postinc2,ExecuteLinkAdr@channelMask
 18184  003816  CFDD F078          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 18185                           
 18186                           ; BSR set to: 0
 18187                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 18188  00381A  0E02               	movlw	2
 18189  00381C  0100               	movlb	0	; () banked
 18190  00381E  2573               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 18191  003820  0100               	movlb	0	; () banked
 18192  003822  6F73               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 18193  003824  0E00               	movlw	0
 18194  003826  0100               	movlb	0	; () banked
 18195  003828  2174               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 18196  00382A  0100               	movlb	0	; () banked
 18197  00382C  6F74               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 18198                           
 18199                           ; BSR set to: 0
 18200                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 18201                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 18202  00382E  C073  F07A         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 18203  003832  C074  F07B         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 18204                           
 18205                           ; BSR set to: 0
 18206  003836  0100               	movlb	0	; () banked
 18207  003838  4B73               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18208  00383A  2B74               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18209                           
 18210                           ; BSR set to: 0
 18211                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 18212  00383C  0102               	movlb	2	; () banked
 18213  00383E  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18214  003840  D11B               	goto	l14823
 18215                           
 18216                           ; BSR set to: 2
 18217                           ;lorawan_eu.c: 627: {
 18218                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 18219  003842  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18220  003846  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18221  00384A  0100               	movlb	0	; () banked
 18222  00384C  38DF               	swapf	223,w,c
 18223  00384E  0B07               	andlw	7
 18224  003850  ECE6  F04E         	call	_ValidateChannelMaskCntl
 18225  003854  0900               	iorlw	0
 18226  003856  A4D8               	btfss	status,2,c
 18227  003858  D027               	goto	l14791
 18228  00385A  C077  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 18229  00385E  C078  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 18230  003862  ECBD  F046         	call	_ValidateChannelMask	;wreg free
 18231  003866  0900               	iorlw	0
 18232  003868  A4D8               	btfss	status,2,c
 18233  00386A  D01E               	goto	l14791
 18234                           
 18235                           ;lorawan_eu.c: 629: {
 18236                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 18237  00386C  0102               	movlb	2	; () banked
 18238  00386E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18239  003870  0D02               	mullw	2
 18240  003872  0E00               	movlw	low _loRa
 18241  003874  0100               	movlb	0	; () banked
 18242  003876  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18243  003878  0E02               	movlw	high _loRa
 18244  00387A  0100               	movlb	0	; () banked
 18245  00387C  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18246  00387E  0EA8               	movlw	168
 18247  003880  0100               	movlb	0	; () banked
 18248  003882  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18249  003884  0E00               	movlw	0
 18250  003886  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18251  003888  50F3               	movf	prodl,w,c
 18252  00388A  0100               	movlb	0	; () banked
 18253  00388C  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18254  00388E  50F4               	movf	prodh,w,c
 18255  003890  0100               	movlb	0	; () banked
 18256  003892  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18257  003894  0E01               	movlw	1
 18258  003896  0100               	movlb	0	; () banked
 18259  003898  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18260  00389A  6ED9               	movwf	fsr2l,c
 18261  00389C  0E00               	movlw	0
 18262  00389E  0100               	movlb	0	; () banked
 18263  0038A0  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18264  0038A2  6EDA               	movwf	fsr2h,c
 18265  0038A4  0102               	movlb	2	; () banked
 18266  0038A6  80DF               	bsf	indf2,0,c
 18267  0038A8                     l14791:
 18268                           
 18269                           ;lorawan_eu.c: 631: }
 18270                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 18271  0038A8  0100               	movlb	0	; () banked
 18272  0038AA  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18273  0038AC  EC5A  F050         	call	_ValidateDataRate
 18274  0038B0  0900               	iorlw	0
 18275  0038B2  A4D8               	btfss	status,2,c
 18276  0038B4  D02A               	goto	l14799
 18277  0038B6  0102               	movlb	2	; () banked
 18278  0038B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 18279  0038BA  0100               	movlb	0	; () banked
 18280  0038BC  5D7C               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18281  0038BE  A0D8               	btfss	status,0,c
 18282  0038C0  D024               	goto	l14799
 18283                           
 18284                           ; BSR set to: 0
 18285  0038C2  0100               	movlb	0	; () banked
 18286  0038C4  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18287  0038C6  0102               	movlb	2	; () banked
 18288  0038C8  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18289  0038CA  A0D8               	btfss	status,0,c
 18290  0038CC  D01E               	goto	l14799
 18291                           
 18292                           ; BSR set to: 2
 18293                           ;lorawan_eu.c: 634: {
 18294                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 18295  0038CE  0102               	movlb	2	; () banked
 18296  0038D0  51A7               	movf	(_loRa+167)& (0+255),w,b
 18297  0038D2  0D02               	mullw	2
 18298  0038D4  0E00               	movlw	low _loRa
 18299  0038D6  0100               	movlb	0	; () banked
 18300  0038D8  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18301  0038DA  0E02               	movlw	high _loRa
 18302  0038DC  0100               	movlb	0	; () banked
 18303  0038DE  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18304  0038E0  0EA8               	movlw	168
 18305  0038E2  0100               	movlb	0	; () banked
 18306  0038E4  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18307  0038E6  0E00               	movlw	0
 18308  0038E8  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18309  0038EA  50F3               	movf	prodl,w,c
 18310  0038EC  0100               	movlb	0	; () banked
 18311  0038EE  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18312  0038F0  50F4               	movf	prodh,w,c
 18313  0038F2  0100               	movlb	0	; () banked
 18314  0038F4  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18315  0038F6  0E01               	movlw	1
 18316  0038F8  0100               	movlb	0	; () banked
 18317  0038FA  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18318  0038FC  6ED9               	movwf	fsr2l,c
 18319  0038FE  0E00               	movlw	0
 18320  003900  0100               	movlb	0	; () banked
 18321  003902  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18322  003904  6EDA               	movwf	fsr2h,c
 18323  003906  0102               	movlb	2	; () banked
 18324  003908  82DF               	bsf	indf2,1,c
 18325  00390A                     l14799:
 18326                           
 18327                           ;lorawan_eu.c: 636: }
 18328                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 18329  00390A  0100               	movlb	0	; () banked
 18330  00390C  5179               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 18331  00390E  EC32  F04E         	call	_ValidateTxPower
 18332  003912  0900               	iorlw	0
 18333  003914  A4D8               	btfss	status,2,c
 18334  003916  D01E               	goto	l1097
 18335                           
 18336                           ;lorawan_eu.c: 639: {
 18337                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 18338  003918  0102               	movlb	2	; () banked
 18339  00391A  51A7               	movf	(_loRa+167)& (0+255),w,b
 18340  00391C  0D02               	mullw	2
 18341  00391E  0E00               	movlw	low _loRa
 18342  003920  0100               	movlb	0	; () banked
 18343  003922  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18344  003924  0E02               	movlw	high _loRa
 18345  003926  0100               	movlb	0	; () banked
 18346  003928  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18347  00392A  0EA8               	movlw	168
 18348  00392C  0100               	movlb	0	; () banked
 18349  00392E  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18350  003930  0E00               	movlw	0
 18351  003932  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18352  003934  50F3               	movf	prodl,w,c
 18353  003936  0100               	movlb	0	; () banked
 18354  003938  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18355  00393A  50F4               	movf	prodh,w,c
 18356  00393C  0100               	movlb	0	; () banked
 18357  00393E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18358  003940  0E01               	movlw	1
 18359  003942  0100               	movlb	0	; () banked
 18360  003944  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18361  003946  6ED9               	movwf	fsr2l,c
 18362  003948  0E00               	movlw	0
 18363  00394A  0100               	movlb	0	; () banked
 18364  00394C  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18365  00394E  6EDA               	movwf	fsr2h,c
 18366  003950  0102               	movlb	2	; () banked
 18367  003952  84DF               	bsf	indf2,2,c
 18368  003954                     l1097:
 18369                           
 18370                           ;lorawan_eu.c: 641: }
 18371                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 18372  003954  0102               	movlb	2	; () banked
 18373  003956  51A7               	movf	(_loRa+167)& (0+255),w,b
 18374  003958  0D02               	mullw	2
 18375  00395A  0E00               	movlw	low _loRa
 18376  00395C  0100               	movlb	0	; () banked
 18377  00395E  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18378  003960  0E02               	movlw	high _loRa
 18379  003962  0100               	movlb	0	; () banked
 18380  003964  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18381  003966  0EA8               	movlw	168
 18382  003968  0100               	movlb	0	; () banked
 18383  00396A  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18384  00396C  0E00               	movlw	0
 18385  00396E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18386  003970  50F3               	movf	prodl,w,c
 18387  003972  0100               	movlb	0	; () banked
 18388  003974  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18389  003976  50F4               	movf	prodh,w,c
 18390  003978  0100               	movlb	0	; () banked
 18391  00397A  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18392  00397C  0E01               	movlw	1
 18393  00397E  0100               	movlb	0	; () banked
 18394  003980  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18395  003982  6ED9               	movwf	fsr2l,c
 18396  003984  0E00               	movlw	0
 18397  003986  0100               	movlb	0	; () banked
 18398  003988  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18399  00398A  6EDA               	movwf	fsr2h,c
 18400  00398C  0102               	movlb	2	; () banked
 18401  00398E  A4DF               	btfss	indf2,2,c
 18402  003990  D0CD               	goto	l14825
 18403                           
 18404                           ; BSR set to: 2
 18405  003992  0102               	movlb	2	; () banked
 18406  003994  51A7               	movf	(_loRa+167)& (0+255),w,b
 18407  003996  0D02               	mullw	2
 18408  003998  0E00               	movlw	low _loRa
 18409  00399A  0100               	movlb	0	; () banked
 18410  00399C  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18411  00399E  0E02               	movlw	high _loRa
 18412  0039A0  0100               	movlb	0	; () banked
 18413  0039A2  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18414  0039A4  0EA8               	movlw	168
 18415  0039A6  0100               	movlb	0	; () banked
 18416  0039A8  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18417  0039AA  0E00               	movlw	0
 18418  0039AC  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18419  0039AE  50F3               	movf	prodl,w,c
 18420  0039B0  0100               	movlb	0	; () banked
 18421  0039B2  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18422  0039B4  50F4               	movf	prodh,w,c
 18423  0039B6  0100               	movlb	0	; () banked
 18424  0039B8  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18425  0039BA  0E01               	movlw	1
 18426  0039BC  0100               	movlb	0	; () banked
 18427  0039BE  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18428  0039C0  6ED9               	movwf	fsr2l,c
 18429  0039C2  0E00               	movlw	0
 18430  0039C4  0100               	movlb	0	; () banked
 18431  0039C6  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18432  0039C8  6EDA               	movwf	fsr2h,c
 18433  0039CA  0102               	movlb	2	; () banked
 18434  0039CC  A2DF               	btfss	indf2,1,c
 18435  0039CE  D0AE               	goto	l14825
 18436                           
 18437                           ; BSR set to: 2
 18438  0039D0  0102               	movlb	2	; () banked
 18439  0039D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 18440  0039D4  0D02               	mullw	2
 18441  0039D6  0E00               	movlw	low _loRa
 18442  0039D8  0100               	movlb	0	; () banked
 18443  0039DA  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18444  0039DC  0E02               	movlw	high _loRa
 18445  0039DE  0100               	movlb	0	; () banked
 18446  0039E0  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18447  0039E2  0EA8               	movlw	168
 18448  0039E4  0100               	movlb	0	; () banked
 18449  0039E6  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18450  0039E8  0E00               	movlw	0
 18451  0039EA  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18452  0039EC  50F3               	movf	prodl,w,c
 18453  0039EE  0100               	movlb	0	; () banked
 18454  0039F0  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18455  0039F2  50F4               	movf	prodh,w,c
 18456  0039F4  0100               	movlb	0	; () banked
 18457  0039F6  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18458  0039F8  0E01               	movlw	1
 18459  0039FA  0100               	movlb	0	; () banked
 18460  0039FC  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18461  0039FE  6ED9               	movwf	fsr2l,c
 18462  003A00  0E00               	movlw	0
 18463  003A02  0100               	movlb	0	; () banked
 18464  003A04  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18465  003A06  6EDA               	movwf	fsr2h,c
 18466  003A08  0102               	movlb	2	; () banked
 18467  003A0A  A0DF               	btfss	indf2,0,c
 18468  003A0C  D08F               	goto	l14825
 18469                           
 18470                           ; BSR set to: 2
 18471                           ;lorawan_eu.c: 644: {
 18472                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 18473  003A0E  C077  F070         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 18474  003A12  C078  F071         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 18475  003A16  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18476  003A1A  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18477  003A1E  0100               	movlb	0	; () banked
 18478  003A20  38DF               	swapf	223,w,c
 18479  003A22  0B07               	andlw	7
 18480  003A24  0100               	movlb	0	; () banked
 18481  003A26  6F72               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 18482  003A28  EC4B  F050         	call	_EnableChannels	;wreg free
 18483                           
 18484                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 18485  003A2C  0100               	movlb	0	; () banked
 18486  003A2E  5179               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 18487  003A30  EC97  F051         	call	_UpdateTxPower
 18488                           
 18489                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 18490  003A34  0102               	movlb	2	; () banked
 18491  003A36  8903               	bsf	(_loRa+3)& (0+255),4,b
 18492                           
 18493                           ; BSR set to: 2
 18494                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 18495  003A38  0100               	movlb	0	; () banked
 18496  003A3A  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18497  003A3C  ECA1  F051         	call	_UpdateCurrentDataRate
 18498                           
 18499                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 18500  003A40  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18501  003A44  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18502  003A48  0100               	movlb	0	; () banked
 18503  003A4A  50DF               	movf	223,w,c
 18504  003A4C  0B0F               	andlw	15
 18505  003A4E  0900               	iorlw	0
 18506  003A50  A4D8               	btfss	status,2,c
 18507  003A52  D002               	goto	l14819
 18508                           
 18509                           ; BSR set to: 0
 18510                           ;lorawan_eu.c: 652: {
 18511                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 18512  003A54  0E00               	movlw	0
 18513  003A56  D00B               	goto	L9
 18514  003A58                     l14819:
 18515                           
 18516                           ;lorawan_eu.c: 655: else
 18517                           ;lorawan_eu.c: 656: {
 18518                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 18519  003A58  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18520  003A5C  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18521  003A60  0100               	movlb	0	; () banked
 18522  003A62  50DF               	movf	223,w,c
 18523  003A64  0B0F               	andlw	15
 18524  003A66  0100               	movlb	0	; () banked
 18525  003A68  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18526  003A6A  0100               	movlb	0	; () banked
 18527  003A6C  0575               	decf	??_ExecuteLinkAdr& (0+255),w,b
 18528  003A6E                     L9:
 18529  003A6E  0102               	movlb	2	; () banked
 18530  003A70  6FD6               	movwf	(_loRa+214)& (0+255),b
 18531                           
 18532                           ; BSR set to: 2
 18533                           ;lorawan_eu.c: 658: }
 18534                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 18535                           
 18536                           ; BSR set to: 2
 18537  003A72  0102               	movlb	2	; () banked
 18538  003A74  8B03               	bsf	(_loRa+3)& (0+255),5,b
 18539                           
 18540                           ; BSR set to: 2
 18541                           ;lorawan_eu.c: 660: }
 18542                           ;lorawan_eu.c: 661: }
 18543  003A76  D05A               	goto	l14825
 18544  003A78                     l14823:
 18545                           
 18546                           ; BSR set to: 2
 18547                           ;lorawan_eu.c: 662: else
 18548                           ;lorawan_eu.c: 663: {
 18549                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 18550  003A78  0102               	movlb	2	; () banked
 18551  003A7A  51A7               	movf	(_loRa+167)& (0+255),w,b
 18552  003A7C  0D02               	mullw	2
 18553  003A7E  0E00               	movlw	low _loRa
 18554  003A80  0100               	movlb	0	; () banked
 18555  003A82  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18556  003A84  0E02               	movlw	high _loRa
 18557  003A86  0100               	movlb	0	; () banked
 18558  003A88  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18559  003A8A  0EA8               	movlw	168
 18560  003A8C  0100               	movlb	0	; () banked
 18561  003A8E  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18562  003A90  0E00               	movlw	0
 18563  003A92  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18564  003A94  50F3               	movf	prodl,w,c
 18565  003A96  0100               	movlb	0	; () banked
 18566  003A98  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18567  003A9A  50F4               	movf	prodh,w,c
 18568  003A9C  0100               	movlb	0	; () banked
 18569  003A9E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18570  003AA0  0E01               	movlw	1
 18571  003AA2  0100               	movlb	0	; () banked
 18572  003AA4  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18573  003AA6  6ED9               	movwf	fsr2l,c
 18574  003AA8  0E00               	movlw	0
 18575  003AAA  0100               	movlb	0	; () banked
 18576  003AAC  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18577  003AAE  6EDA               	movwf	fsr2h,c
 18578  003AB0  0102               	movlb	2	; () banked
 18579  003AB2  90DF               	bcf	indf2,0,c
 18580                           
 18581                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 18582  003AB4  0102               	movlb	2	; () banked
 18583  003AB6  51A7               	movf	(_loRa+167)& (0+255),w,b
 18584  003AB8  0D02               	mullw	2
 18585  003ABA  0E00               	movlw	low _loRa
 18586  003ABC  0100               	movlb	0	; () banked
 18587  003ABE  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18588  003AC0  0E02               	movlw	high _loRa
 18589  003AC2  0100               	movlb	0	; () banked
 18590  003AC4  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18591  003AC6  0EA8               	movlw	168
 18592  003AC8  0100               	movlb	0	; () banked
 18593  003ACA  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18594  003ACC  0E00               	movlw	0
 18595  003ACE  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18596  003AD0  50F3               	movf	prodl,w,c
 18597  003AD2  0100               	movlb	0	; () banked
 18598  003AD4  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18599  003AD6  50F4               	movf	prodh,w,c
 18600  003AD8  0100               	movlb	0	; () banked
 18601  003ADA  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18602  003ADC  0E01               	movlw	1
 18603  003ADE  0100               	movlb	0	; () banked
 18604  003AE0  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18605  003AE2  6ED9               	movwf	fsr2l,c
 18606  003AE4  0E00               	movlw	0
 18607  003AE6  0100               	movlb	0	; () banked
 18608  003AE8  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18609  003AEA  6EDA               	movwf	fsr2h,c
 18610  003AEC  0102               	movlb	2	; () banked
 18611  003AEE  92DF               	bcf	indf2,1,c
 18612                           
 18613                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 18614  003AF0  0102               	movlb	2	; () banked
 18615  003AF2  51A7               	movf	(_loRa+167)& (0+255),w,b
 18616  003AF4  0D02               	mullw	2
 18617  003AF6  0E00               	movlw	low _loRa
 18618  003AF8  0100               	movlb	0	; () banked
 18619  003AFA  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18620  003AFC  0E02               	movlw	high _loRa
 18621  003AFE  0100               	movlb	0	; () banked
 18622  003B00  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18623  003B02  0EA8               	movlw	168
 18624  003B04  0100               	movlb	0	; () banked
 18625  003B06  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18626  003B08  0E00               	movlw	0
 18627  003B0A  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18628  003B0C  50F3               	movf	prodl,w,c
 18629  003B0E  0100               	movlb	0	; () banked
 18630  003B10  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18631  003B12  50F4               	movf	prodh,w,c
 18632  003B14  0100               	movlb	0	; () banked
 18633  003B16  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18634  003B18  0E01               	movlw	1
 18635  003B1A  0100               	movlb	0	; () banked
 18636  003B1C  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18637  003B1E  6ED9               	movwf	fsr2l,c
 18638  003B20  0E00               	movlw	0
 18639  003B22  0100               	movlb	0	; () banked
 18640  003B24  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18641  003B26  6EDA               	movwf	fsr2h,c
 18642  003B28  0102               	movlb	2	; () banked
 18643  003B2A  94DF               	bcf	indf2,2,c
 18644  003B2C                     l14825:
 18645                           
 18646                           ; BSR set to: 2
 18647                           ;lorawan_eu.c: 667: }
 18648                           ;lorawan_eu.c: 669: return ptr;
 18649  003B2C  C073  F073         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 18650  003B30  C074  F074         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 18651  003B34  0012               	return	
 18652  003B36                     __end_of_ExecuteLinkAdr:
 18653                           	opt stack 0
 18654                           tosu	equ	0xFFF
 18655                           tosh	equ	0xFFE
 18656                           tosl	equ	0xFFD
 18657                           pclath	equ	0xFFA
 18658                           tblptru	equ	0xFF8
 18659                           tblptrh	equ	0xFF7
 18660                           tblptrl	equ	0xFF6
 18661                           tablat	equ	0xFF5
 18662                           prodh	equ	0xFF4
 18663                           prodl	equ	0xFF3
 18664                           intcon	equ	0xFF2
 18665                           intcon2	equ	0xFF1
 18666                           intcon3	equ	0xFF0
 18667                           indf0	equ	0xFEF
 18668                           postinc0	equ	0xFEE
 18669                           fsr0h	equ	0xFEA
 18670                           fsr0l	equ	0xFE9
 18671                           wreg	equ	0xFE8
 18672                           postinc1	equ	0xFE6
 18673                           postdec1	equ	0xFE5
 18674                           plusw1	equ	0xFE3
 18675                           fsr1h	equ	0xFE2
 18676                           fsr1l	equ	0xFE1
 18677                           indf2	equ	0xFDF
 18678                           postinc2	equ	0xFDE
 18679                           postdec2	equ	0xFDD
 18680                           plusw2	equ	0xFDB
 18681                           fsr2h	equ	0xFDA
 18682                           fsr2l	equ	0xFD9
 18683                           status	equ	0xFD8
 18684                           
 18685 ;; *************** function _ValidateTxPower *****************
 18686 ;; Defined at:
 18687 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18688 ;; Parameters:    Size  Location     Type
 18689 ;;  txPowerNew      1    wreg     unsigned char 
 18690 ;; Auto vars:     Size  Location     Type
 18691 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 18692 ;;  result          1    4[BANK0 ] enum E8016
 18693 ;; Return value:  Size  Location     Type
 18694 ;;                  1    wreg      enum E8016
 18695 ;; Registers used:
 18696 ;;		wreg, status,2, status,0
 18697 ;; Tracked objects:
 18698 ;;		On entry : 0/0
 18699 ;;		On exit  : 0/0
 18700 ;;		Unchanged: 0/0
 18701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18703 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18705 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18706 ;;Total ram usage:        2 bytes
 18707 ;; Hardware stack levels used:    1
 18708 ;; Hardware stack levels required when called:    7
 18709 ;; This function calls:
 18710 ;;		Nothing
 18711 ;; This function is called by:
 18712 ;;		_ExecuteLinkAdr
 18713 ;;		_LORAWAN_SetTxPower
 18714 ;; This function uses a non-reentrant model
 18715 ;;
 18716                           
 18717                           	psect	text85
 18718  009C64                     __ptext85:
 18719                           	opt stack 0
 18720  009C64                     _ValidateTxPower:
 18721                           	opt stack 17
 18722                           
 18723                           ; BSR set to: 2
 18724                           ;incstack = 0
 18725                           ;ValidateTxPower@txPowerNew stored from wreg
 18726  009C64  0100               	movlb	0	; () banked
 18727  009C66  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 18728                           
 18729                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 18730  009C68  0E00               	movlw	0
 18731  009C6A  0100               	movlb	0	; () banked
 18732  009C6C  6F64               	movwf	ValidateTxPower@result& (0+255),b
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 18736  009C6E  0102               	movlb	2	; () banked
 18737  009C70  51A4               	movf	(_loRa+164)& (0+255),w,b
 18738  009C72  A4D8               	btfss	status,2,c
 18739  009C74  D005               	goto	l14199
 18740                           
 18741                           ; BSR set to: 2
 18742  009C76  0100               	movlb	0	; () banked
 18743  009C78  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 18744  009C7A  0100               	movlb	0	; () banked
 18745  009C7C  B4D8               	btfsc	status,2,c
 18746  009C7E  D004               	goto	l14201
 18747  009C80                     l14199:
 18748  009C80  0E05               	movlw	5
 18749  009C82  0100               	movlb	0	; () banked
 18750  009C84  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 18751  009C86  D003               	goto	l1081
 18752  009C88                     l14201:
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;lorawan_eu.c: 587: {
 18756                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 18757  009C88  0E03               	movlw	3
 18758  009C8A  0100               	movlb	0	; () banked
 18759  009C8C  6F64               	movwf	ValidateTxPower@result& (0+255),b
 18760  009C8E                     l1081:
 18761                           
 18762                           ; BSR set to: 0
 18763                           ;lorawan_eu.c: 589: }
 18764                           ;lorawan_eu.c: 591: return result;
 18765  009C8E  0100               	movlb	0	; () banked
 18766  009C90  5164               	movf	ValidateTxPower@result& (0+255),w,b
 18767  009C92  0012               	return	
 18768  009C94                     __end_of_ValidateTxPower:
 18769                           	opt stack 0
 18770                           tosu	equ	0xFFF
 18771                           tosh	equ	0xFFE
 18772                           tosl	equ	0xFFD
 18773                           pclath	equ	0xFFA
 18774                           tblptru	equ	0xFF8
 18775                           tblptrh	equ	0xFF7
 18776                           tblptrl	equ	0xFF6
 18777                           tablat	equ	0xFF5
 18778                           prodh	equ	0xFF4
 18779                           prodl	equ	0xFF3
 18780                           intcon	equ	0xFF2
 18781                           intcon2	equ	0xFF1
 18782                           intcon3	equ	0xFF0
 18783                           indf0	equ	0xFEF
 18784                           postinc0	equ	0xFEE
 18785                           fsr0h	equ	0xFEA
 18786                           fsr0l	equ	0xFE9
 18787                           wreg	equ	0xFE8
 18788                           postinc1	equ	0xFE6
 18789                           postdec1	equ	0xFE5
 18790                           plusw1	equ	0xFE3
 18791                           fsr1h	equ	0xFE2
 18792                           fsr1l	equ	0xFE1
 18793                           indf2	equ	0xFDF
 18794                           postinc2	equ	0xFDE
 18795                           postdec2	equ	0xFDD
 18796                           plusw2	equ	0xFDB
 18797                           fsr2h	equ	0xFDA
 18798                           fsr2l	equ	0xFD9
 18799                           status	equ	0xFD8
 18800                           
 18801 ;; *************** function _ValidateChannelMaskCntl *****************
 18802 ;; Defined at:
 18803 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18804 ;; Parameters:    Size  Location     Type
 18805 ;;  channelMaskC    1    wreg     unsigned char 
 18806 ;; Auto vars:     Size  Location     Type
 18807 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 18808 ;;  result          1    4[BANK0 ] enum E8016
 18809 ;; Return value:  Size  Location     Type
 18810 ;;                  1    wreg      enum E8016
 18811 ;; Registers used:
 18812 ;;		wreg, status,2, status,0
 18813 ;; Tracked objects:
 18814 ;;		On entry : 0/0
 18815 ;;		On exit  : 0/0
 18816 ;;		Unchanged: 0/0
 18817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18818 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18819 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18821 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18822 ;;Total ram usage:        2 bytes
 18823 ;; Hardware stack levels used:    1
 18824 ;; Hardware stack levels required when called:    7
 18825 ;; This function calls:
 18826 ;;		Nothing
 18827 ;; This function is called by:
 18828 ;;		_ExecuteLinkAdr
 18829 ;; This function uses a non-reentrant model
 18830 ;;
 18831                           
 18832                           	psect	text86
 18833  009DCC                     __ptext86:
 18834                           	opt stack 0
 18835  009DCC                     _ValidateChannelMaskCntl:
 18836                           	opt stack 17
 18837                           
 18838                           ; BSR set to: 0
 18839                           ;incstack = 0
 18840                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 18841  009DCC  0100               	movlb	0	; () banked
 18842  009DCE  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 18843                           
 18844                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 18845  009DD0  0E00               	movlw	0
 18846  009DD2  0100               	movlb	0	; () banked
 18847  009DD4  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18848                           
 18849                           ; BSR set to: 0
 18850                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 18851  009DD6  0100               	movlb	0	; () banked
 18852  009DD8  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18853  009DDA  0100               	movlb	0	; () banked
 18854  009DDC  B4D8               	btfsc	status,2,c
 18855  009DDE  D008               	goto	l1248
 18856                           
 18857                           ; BSR set to: 0
 18858  009DE0  0E06               	movlw	6
 18859  009DE2  0100               	movlb	0	; () banked
 18860  009DE4  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18861  009DE6  B4D8               	btfsc	status,2,c
 18862  009DE8  D003               	goto	l1248
 18863                           
 18864                           ; BSR set to: 0
 18865                           ;lorawan_eu.c: 1142: {
 18866                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 18867  009DEA  0E03               	movlw	3
 18868  009DEC  0100               	movlb	0	; () banked
 18869  009DEE  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18870  009DF0                     l1248:
 18871                           
 18872                           ; BSR set to: 0
 18873                           ;lorawan_eu.c: 1144: }
 18874                           ;lorawan_eu.c: 1146: return result;
 18875  009DF0  0100               	movlb	0	; () banked
 18876  009DF2  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 18877  009DF4  0012               	return	
 18878  009DF6                     __end_of_ValidateChannelMaskCntl:
 18879                           	opt stack 0
 18880                           tosu	equ	0xFFF
 18881                           tosh	equ	0xFFE
 18882                           tosl	equ	0xFFD
 18883                           pclath	equ	0xFFA
 18884                           tblptru	equ	0xFF8
 18885                           tblptrh	equ	0xFF7
 18886                           tblptrl	equ	0xFF6
 18887                           tablat	equ	0xFF5
 18888                           prodh	equ	0xFF4
 18889                           prodl	equ	0xFF3
 18890                           intcon	equ	0xFF2
 18891                           intcon2	equ	0xFF1
 18892                           intcon3	equ	0xFF0
 18893                           indf0	equ	0xFEF
 18894                           postinc0	equ	0xFEE
 18895                           fsr0h	equ	0xFEA
 18896                           fsr0l	equ	0xFE9
 18897                           wreg	equ	0xFE8
 18898                           postinc1	equ	0xFE6
 18899                           postdec1	equ	0xFE5
 18900                           plusw1	equ	0xFE3
 18901                           fsr1h	equ	0xFE2
 18902                           fsr1l	equ	0xFE1
 18903                           indf2	equ	0xFDF
 18904                           postinc2	equ	0xFDE
 18905                           postdec2	equ	0xFDD
 18906                           plusw2	equ	0xFDB
 18907                           fsr2h	equ	0xFDA
 18908                           fsr2l	equ	0xFD9
 18909                           status	equ	0xFD8
 18910                           
 18911 ;; *************** function _ValidateChannelMask *****************
 18912 ;; Defined at:
 18913 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18914 ;; Parameters:    Size  Location     Type
 18915 ;;  channelMask     2    4[BANK0 ] unsigned int 
 18916 ;; Auto vars:     Size  Location     Type
 18917 ;;  i               1    8[BANK0 ] unsigned char 
 18918 ;; Return value:  Size  Location     Type
 18919 ;;                  1    wreg      enum E8016
 18920 ;; Registers used:
 18921 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18922 ;; Tracked objects:
 18923 ;;		On entry : 0/0
 18924 ;;		On exit  : 0/0
 18925 ;;		Unchanged: 0/0
 18926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18927 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18930 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18931 ;;Total ram usage:        5 bytes
 18932 ;; Hardware stack levels used:    1
 18933 ;; Hardware stack levels required when called:    7
 18934 ;; This function calls:
 18935 ;;		Nothing
 18936 ;; This function is called by:
 18937 ;;		_ExecuteLinkAdr
 18938 ;; This function uses a non-reentrant model
 18939 ;;
 18940                           
 18941                           	psect	text87
 18942  008D7A                     __ptext87:
 18943                           	opt stack 0
 18944  008D7A                     _ValidateChannelMask:
 18945                           	opt stack 17
 18946                           
 18947                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 18948                           
 18949                           ; BSR set to: 0
 18950                           ;incstack = 0
 18951  008D7A  0E00               	movlw	0
 18952  008D7C  0100               	movlb	0	; () banked
 18953  008D7E  6F68               	movwf	ValidateChannelMask@i& (0+255),b
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 18957  008D80  0100               	movlb	0	; () banked
 18958  008D82  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 18959  008D84  0100               	movlb	0	; () banked
 18960  008D86  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 18961  008D88  B4D8               	btfsc	status,2,c
 18962  008D8A  D02F               	goto	l14245
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;lorawan_eu.c: 1171: {
 18966                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 18967  008D8C  0E00               	movlw	0
 18968  008D8E  0100               	movlb	0	; () banked
 18969  008D90  6F68               	movwf	ValidateChannelMask@i& (0+255),b
 18970  008D92                     l14221:
 18971                           
 18972                           ; BSR set to: 0
 18973  008D92  0E0F               	movlw	15
 18974  008D94  0100               	movlb	0	; () banked
 18975  008D96  6568               	cpfsgt	ValidateChannelMask@i& (0+255),b
 18976  008D98  D001               	goto	l1262
 18977  008D9A  D025               	goto	l14239
 18978  008D9C                     l1262:
 18979                           
 18980                           ; BSR set to: 0
 18981                           ;lorawan_eu.c: 1173: {
 18982                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 18983  008D9C  0100               	movlb	0	; () banked
 18984  008D9E  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 18985  008DA0  D014               	goto	l14233
 18986                           
 18987                           ; BSR set to: 0
 18988  008DA2  0100               	movlb	0	; () banked
 18989  008DA4  5168               	movf	ValidateChannelMask@i& (0+255),w,b
 18990  008DA6  0D0E               	mullw	14
 18991  008DA8  0E0D               	movlw	13
 18992  008DAA  26F3               	addwf	prodl,f,c
 18993  008DAC  0E00               	movlw	0
 18994  008DAE  22F4               	addwfc	prodh,f,c
 18995  008DB0  0E00               	movlw	low _Channels
 18996  008DB2  24F3               	addwf	prodl,w,c
 18997  008DB4  6ED9               	movwf	fsr2l,c
 18998  008DB6  0E04               	movlw	high _Channels
 18999  008DB8  20F4               	addwfc	prodh,w,c
 19000  008DBA  6EDA               	movwf	fsr2h,c
 19001  008DBC  50DF               	movf	indf2,w,c
 19002  008DBE  0B07               	andlw	7
 19003  008DC0  0A07               	xorlw	7
 19004  008DC2  B4D8               	btfsc	status,2,c
 19005  008DC4  D002               	goto	l14233
 19006                           
 19007                           ; BSR set to: 0
 19008                           ;lorawan_eu.c: 1175: {
 19009                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 19010  008DC6  0E03               	movlw	3
 19011                           
 19012                           ; BSR set to: 0
 19013  008DC8  0012               	return	
 19014  008DCA                     l14233:
 19015                           
 19016                           ; BSR set to: 0
 19017                           ;lorawan_eu.c: 1178: else
 19018                           ;lorawan_eu.c: 1179: {
 19019                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 19020  008DCA  90D8               	bcf	status,0,c
 19021  008DCC  0100               	movlb	0	; () banked
 19022  008DCE  3165               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 19023  008DD0  0100               	movlb	0	; () banked
 19024  008DD2  6F66               	movwf	??_ValidateChannelMask& (0+255),b
 19025  008DD4  0100               	movlb	0	; () banked
 19026  008DD6  3164               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 19027  008DD8  0100               	movlb	0	; () banked
 19028  008DDA  6F64               	movwf	ValidateChannelMask@channelMask& (0+255),b
 19029  008DDC  C066  F065         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 19030                           
 19031                           ; BSR set to: 0
 19032                           
 19033                           ; BSR set to: 0
 19034  008DE0  0100               	movlb	0	; () banked
 19035  008DE2  2B68               	incf	ValidateChannelMask@i& (0+255),f,b
 19036  008DE4  D7D6               	goto	l14221
 19037  008DE6                     l14239:
 19038                           
 19039                           ; BSR set to: 0
 19040                           ;lorawan_eu.c: 1181: }
 19041                           ;lorawan_eu.c: 1182: }
 19042                           ;lorawan_eu.c: 1184: return OK;
 19043  008DE6  0E00               	movlw	0
 19044                           
 19045                           ; BSR set to: 0
 19046                           ;lorawan_eu.c: 1185: }
 19047                           
 19048                           ; BSR set to: 0
 19049  008DE8  0012               	return	
 19050  008DEA                     l14245:
 19051                           
 19052                           ; BSR set to: 0
 19053                           ;lorawan_eu.c: 1186: else
 19054                           ;lorawan_eu.c: 1187: {
 19055                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 19056  008DEA  0E03               	movlw	3
 19057                           
 19058                           ; BSR set to: 0
 19059  008DEC  0012               	return	
 19060  008DEE                     __end_of_ValidateChannelMask:
 19061                           	opt stack 0
 19062                           tosu	equ	0xFFF
 19063                           tosh	equ	0xFFE
 19064                           tosl	equ	0xFFD
 19065                           pclath	equ	0xFFA
 19066                           tblptru	equ	0xFF8
 19067                           tblptrh	equ	0xFF7
 19068                           tblptrl	equ	0xFF6
 19069                           tablat	equ	0xFF5
 19070                           prodh	equ	0xFF4
 19071                           prodl	equ	0xFF3
 19072                           intcon	equ	0xFF2
 19073                           intcon2	equ	0xFF1
 19074                           intcon3	equ	0xFF0
 19075                           indf0	equ	0xFEF
 19076                           postinc0	equ	0xFEE
 19077                           fsr0h	equ	0xFEA
 19078                           fsr0l	equ	0xFE9
 19079                           wreg	equ	0xFE8
 19080                           postinc1	equ	0xFE6
 19081                           postdec1	equ	0xFE5
 19082                           plusw1	equ	0xFE3
 19083                           fsr1h	equ	0xFE2
 19084                           fsr1l	equ	0xFE1
 19085                           indf2	equ	0xFDF
 19086                           postinc2	equ	0xFDE
 19087                           postdec2	equ	0xFDD
 19088                           plusw2	equ	0xFDB
 19089                           fsr2h	equ	0xFDA
 19090                           fsr2l	equ	0xFD9
 19091                           status	equ	0xFD8
 19092                           
 19093 ;; *************** function _UpdateTxPower *****************
 19094 ;; Defined at:
 19095 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19096 ;; Parameters:    Size  Location     Type
 19097 ;;  txPowerNew      1    wreg     unsigned char 
 19098 ;; Auto vars:     Size  Location     Type
 19099 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 19100 ;; Return value:  Size  Location     Type
 19101 ;;                  1    wreg      void 
 19102 ;; Registers used:
 19103 ;;		wreg
 19104 ;; Tracked objects:
 19105 ;;		On entry : 0/0
 19106 ;;		On exit  : 0/0
 19107 ;;		Unchanged: 0/0
 19108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19110 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19112 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19113 ;;Total ram usage:        1 bytes
 19114 ;; Hardware stack levels used:    1
 19115 ;; Hardware stack levels required when called:    7
 19116 ;; This function calls:
 19117 ;;		Nothing
 19118 ;; This function is called by:
 19119 ;;		_ExecuteLinkAdr
 19120 ;;		_LORAWAN_SetTxPower
 19121 ;; This function uses a non-reentrant model
 19122 ;;
 19123                           
 19124                           	psect	text88
 19125  00A32E                     __ptext88:
 19126                           	opt stack 0
 19127  00A32E                     _UpdateTxPower:
 19128                           	opt stack 17
 19129                           
 19130                           ; BSR set to: 0
 19131                           ;incstack = 0
 19132                           ;UpdateTxPower@txPowerNew stored from wreg
 19133  00A32E  0100               	movlb	0	; () banked
 19134  00A330  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 19135                           
 19136                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 19137  00A332  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 19138  00A336  0012               	return		;funcret
 19139  00A338                     __end_of_UpdateTxPower:
 19140                           	opt stack 0
 19141                           tosu	equ	0xFFF
 19142                           tosh	equ	0xFFE
 19143                           tosl	equ	0xFFD
 19144                           pclath	equ	0xFFA
 19145                           tblptru	equ	0xFF8
 19146                           tblptrh	equ	0xFF7
 19147                           tblptrl	equ	0xFF6
 19148                           tablat	equ	0xFF5
 19149                           prodh	equ	0xFF4
 19150                           prodl	equ	0xFF3
 19151                           intcon	equ	0xFF2
 19152                           intcon2	equ	0xFF1
 19153                           intcon3	equ	0xFF0
 19154                           indf0	equ	0xFEF
 19155                           postinc0	equ	0xFEE
 19156                           fsr0h	equ	0xFEA
 19157                           fsr0l	equ	0xFE9
 19158                           wreg	equ	0xFE8
 19159                           postinc1	equ	0xFE6
 19160                           postdec1	equ	0xFE5
 19161                           plusw1	equ	0xFE3
 19162                           fsr1h	equ	0xFE2
 19163                           fsr1l	equ	0xFE1
 19164                           indf2	equ	0xFDF
 19165                           postinc2	equ	0xFDE
 19166                           postdec2	equ	0xFDD
 19167                           plusw2	equ	0xFDB
 19168                           fsr2h	equ	0xFDA
 19169                           fsr2l	equ	0xFD9
 19170                           status	equ	0xFD8
 19171                           
 19172 ;; *************** function _EnableChannels *****************
 19173 ;; Defined at:
 19174 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19175 ;; Parameters:    Size  Location     Type
 19176 ;;  channelMask     2   16[BANK0 ] unsigned int 
 19177 ;;  channelMaskC    1   18[BANK0 ] unsigned char 
 19178 ;; Auto vars:     Size  Location     Type
 19179 ;;		None
 19180 ;; Return value:  Size  Location     Type
 19181 ;;                  1    wreg      void 
 19182 ;; Registers used:
 19183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19184 ;; Tracked objects:
 19185 ;;		On entry : 0/0
 19186 ;;		On exit  : 0/0
 19187 ;;		Unchanged: 0/0
 19188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19189 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19192 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19193 ;;Total ram usage:        3 bytes
 19194 ;; Hardware stack levels used:    1
 19195 ;; Hardware stack levels required when called:    9
 19196 ;; This function calls:
 19197 ;;		_EnableChannels1
 19198 ;; This function is called by:
 19199 ;;		_ExecuteLinkAdr
 19200 ;; This function uses a non-reentrant model
 19201 ;;
 19202                           
 19203                           	psect	text89
 19204  00A096                     __ptext89:
 19205                           	opt stack 0
 19206  00A096                     _EnableChannels:
 19207                           	opt stack 15
 19208                           
 19209                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 19210                           
 19211                           ;incstack = 0
 19212  00A096  C070  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 19213  00A09A  C071  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 19214  00A09E  C072  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 19215  00A0A2  0E00               	movlw	0
 19216  00A0A4  0100               	movlb	0	; () banked
 19217  00A0A6  6F6B               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 19218  00A0A8  0E10               	movlw	16
 19219  00A0AA  0100               	movlb	0	; () banked
 19220  00A0AC  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 19221  00A0AE  EC7B  F044         	call	_EnableChannels1	;wreg free
 19222  00A0B2  0012               	return		;funcret
 19223  00A0B4                     __end_of_EnableChannels:
 19224                           	opt stack 0
 19225                           tosu	equ	0xFFF
 19226                           tosh	equ	0xFFE
 19227                           tosl	equ	0xFFD
 19228                           pclath	equ	0xFFA
 19229                           tblptru	equ	0xFF8
 19230                           tblptrh	equ	0xFF7
 19231                           tblptrl	equ	0xFF6
 19232                           tablat	equ	0xFF5
 19233                           prodh	equ	0xFF4
 19234                           prodl	equ	0xFF3
 19235                           intcon	equ	0xFF2
 19236                           intcon2	equ	0xFF1
 19237                           intcon3	equ	0xFF0
 19238                           indf0	equ	0xFEF
 19239                           postinc0	equ	0xFEE
 19240                           fsr0h	equ	0xFEA
 19241                           fsr0l	equ	0xFE9
 19242                           wreg	equ	0xFE8
 19243                           postinc1	equ	0xFE6
 19244                           postdec1	equ	0xFE5
 19245                           plusw1	equ	0xFE3
 19246                           fsr1h	equ	0xFE2
 19247                           fsr1l	equ	0xFE1
 19248                           indf2	equ	0xFDF
 19249                           postinc2	equ	0xFDE
 19250                           postdec2	equ	0xFDD
 19251                           plusw2	equ	0xFDB
 19252                           fsr2h	equ	0xFDA
 19253                           fsr2l	equ	0xFD9
 19254                           status	equ	0xFD8
 19255                           
 19256 ;; *************** function _EnableChannels1 *****************
 19257 ;; Defined at:
 19258 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19259 ;; Parameters:    Size  Location     Type
 19260 ;;  channelMask     2    8[BANK0 ] unsigned int 
 19261 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 19262 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 19263 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 19264 ;; Auto vars:     Size  Location     Type
 19265 ;;  i               1   15[BANK0 ] unsigned char 
 19266 ;; Return value:  Size  Location     Type
 19267 ;;                  1    wreg      void 
 19268 ;; Registers used:
 19269 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19270 ;; Tracked objects:
 19271 ;;		On entry : 0/0
 19272 ;;		On exit  : 0/0
 19273 ;;		Unchanged: 0/0
 19274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19275 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19277 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19278 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19279 ;;Total ram usage:        8 bytes
 19280 ;; Hardware stack levels used:    1
 19281 ;; Hardware stack levels required when called:    8
 19282 ;; This function calls:
 19283 ;;		_UpdateChannelIdStatus
 19284 ;; This function is called by:
 19285 ;;		_EnableChannels
 19286 ;; This function uses a non-reentrant model
 19287 ;;
 19288                           
 19289                           	psect	text90
 19290  0088F6                     __ptext90:
 19291                           	opt stack 0
 19292  0088F6                     _EnableChannels1:
 19293                           	opt stack 15
 19294                           
 19295                           ;lorawan_eu.c: 1195: uint8_t i;
 19296                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 19297                           
 19298                           ;incstack = 0
 19299  0088F6  0E06               	movlw	6
 19300  0088F8  0100               	movlb	0	; () banked
 19301  0088FA  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 19302  0088FC  A4D8               	btfss	status,2,c
 19303  0088FE  D013               	goto	l13881
 19304                           
 19305                           ; BSR set to: 0
 19306                           ;lorawan_eu.c: 1198: {
 19307                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 19308  008900  C06B  F06F         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 19309  008904  D009               	goto	l13879
 19310  008906                     l13875:
 19311                           
 19312                           ; BSR set to: 0
 19313                           ;lorawan_eu.c: 1200: {
 19314                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 19315  008906  0E01               	movlw	1
 19316  008908  0100               	movlb	0	; () banked
 19317  00890A  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19318  00890C  0100               	movlb	0	; () banked
 19319  00890E  516F               	movf	EnableChannels1@i& (0+255),w,b
 19320  008910  ECFF  F02F         	call	_UpdateChannelIdStatus
 19321  008914  0100               	movlb	0	; () banked
 19322  008916  2B6F               	incf	EnableChannels1@i& (0+255),f,b
 19323  008918                     l13879:
 19324                           
 19325                           ; BSR set to: 0
 19326  008918  0100               	movlb	0	; () banked
 19327  00891A  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 19328  00891C  0100               	movlb	0	; () banked
 19329  00891E  5D6F               	subwf	EnableChannels1@i& (0+255),w,b
 19330  008920  B0D8               	btfsc	status,0,c
 19331  008922  0012               	return	
 19332  008924  D7F0               	goto	l13875
 19333  008926                     l13881:
 19334                           
 19335                           ; BSR set to: 0
 19336                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 19337  008926  0100               	movlb	0	; () banked
 19338  008928  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 19339  00892A  0100               	movlb	0	; () banked
 19340  00892C  A4D8               	btfss	status,2,c
 19341  00892E  0012               	return	
 19342                           
 19343                           ; BSR set to: 0
 19344                           ;lorawan_eu.c: 1205: {
 19345                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 19346  008930  C06B  F06F         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 19347  008934  D01F               	goto	l13893
 19348  008936                     l1277:
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;lorawan_eu.c: 1207: {
 19352                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 19353  008936  0100               	movlb	0	; () banked
 19354  008938  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 19355  00893A  D008               	goto	l13887
 19356                           
 19357                           ; BSR set to: 0
 19358                           ;lorawan_eu.c: 1209: {
 19359                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 19360  00893C  0E01               	movlw	1
 19361  00893E  0100               	movlb	0	; () banked
 19362  008940  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19363  008942  0100               	movlb	0	; () banked
 19364  008944  516F               	movf	EnableChannels1@i& (0+255),w,b
 19365  008946  ECFF  F02F         	call	_UpdateChannelIdStatus
 19366                           
 19367                           ;lorawan_eu.c: 1211: }
 19368  00894A  D007               	goto	l13889
 19369  00894C                     l13887:
 19370                           
 19371                           ;lorawan_eu.c: 1212: else
 19372                           ;lorawan_eu.c: 1213: {
 19373                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 19374  00894C  0E00               	movlw	0
 19375  00894E  0100               	movlb	0	; () banked
 19376  008950  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19377  008952  0100               	movlb	0	; () banked
 19378  008954  516F               	movf	EnableChannels1@i& (0+255),w,b
 19379  008956  ECFF  F02F         	call	_UpdateChannelIdStatus
 19380  00895A                     l13889:
 19381                           
 19382                           ;lorawan_eu.c: 1215: }
 19383                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 19384  00895A  90D8               	bcf	status,0,c
 19385  00895C  0100               	movlb	0	; () banked
 19386  00895E  3169               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 19387  008960  0100               	movlb	0	; () banked
 19388  008962  6F6D               	movwf	??_EnableChannels1& (0+255),b
 19389  008964  0100               	movlb	0	; () banked
 19390  008966  3168               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 19391  008968  0100               	movlb	0	; () banked
 19392  00896A  6F68               	movwf	EnableChannels1@channelMask& (0+255),b
 19393  00896C  C06D  F069         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 19394                           
 19395                           ; BSR set to: 0
 19396  008970  0100               	movlb	0	; () banked
 19397  008972  2B6F               	incf	EnableChannels1@i& (0+255),f,b
 19398  008974                     l13893:
 19399                           
 19400                           ; BSR set to: 0
 19401  008974  0100               	movlb	0	; () banked
 19402  008976  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 19403  008978  0100               	movlb	0	; () banked
 19404  00897A  5D6F               	subwf	EnableChannels1@i& (0+255),w,b
 19405  00897C  B0D8               	btfsc	status,0,c
 19406  00897E  0012               	return	
 19407  008980  D7DA               	goto	l1277
 19408  008982                     __end_of_EnableChannels1:
 19409                           	opt stack 0
 19410                           tosu	equ	0xFFF
 19411                           tosh	equ	0xFFE
 19412                           tosl	equ	0xFFD
 19413                           pclath	equ	0xFFA
 19414                           tblptru	equ	0xFF8
 19415                           tblptrh	equ	0xFF7
 19416                           tblptrl	equ	0xFF6
 19417                           tablat	equ	0xFF5
 19418                           prodh	equ	0xFF4
 19419                           prodl	equ	0xFF3
 19420                           intcon	equ	0xFF2
 19421                           intcon2	equ	0xFF1
 19422                           intcon3	equ	0xFF0
 19423                           indf0	equ	0xFEF
 19424                           postinc0	equ	0xFEE
 19425                           fsr0h	equ	0xFEA
 19426                           fsr0l	equ	0xFE9
 19427                           wreg	equ	0xFE8
 19428                           postinc1	equ	0xFE6
 19429                           postdec1	equ	0xFE5
 19430                           plusw1	equ	0xFE3
 19431                           fsr1h	equ	0xFE2
 19432                           fsr1l	equ	0xFE1
 19433                           indf2	equ	0xFDF
 19434                           postinc2	equ	0xFDE
 19435                           postdec2	equ	0xFDD
 19436                           plusw2	equ	0xFDB
 19437                           fsr2h	equ	0xFDA
 19438                           fsr2l	equ	0xFD9
 19439                           status	equ	0xFD8
 19440                           
 19441 ;; *************** function _UpdateChannelIdStatus *****************
 19442 ;; Defined at:
 19443 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19444 ;; Parameters:    Size  Location     Type
 19445 ;;  channelId       1    wreg     unsigned char 
 19446 ;;  statusNew       1    4[BANK0 ] unsigned char 
 19447 ;; Auto vars:     Size  Location     Type
 19448 ;;  channelId       1    6[BANK0 ] unsigned char 
 19449 ;;  i               1    7[BANK0 ] unsigned char 
 19450 ;; Return value:  Size  Location     Type
 19451 ;;                  1    wreg      void 
 19452 ;; Registers used:
 19453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19454 ;; Tracked objects:
 19455 ;;		On entry : 0/0
 19456 ;;		On exit  : 0/0
 19457 ;;		Unchanged: 0/0
 19458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19459 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19460 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19461 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19462 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19463 ;;Total ram usage:        4 bytes
 19464 ;; Hardware stack levels used:    1
 19465 ;; Hardware stack levels required when called:    7
 19466 ;; This function calls:
 19467 ;;		Nothing
 19468 ;; This function is called by:
 19469 ;;		_LORAWAN_SetChannelIdStatus
 19470 ;;		_ExecuteNewChannel
 19471 ;;		_EnableChannels1
 19472 ;; This function uses a non-reentrant model
 19473 ;;
 19474                           
 19475                           	psect	text91
 19476  005FFE                     __ptext91:
 19477                           	opt stack 0
 19478  005FFE                     _UpdateChannelIdStatus:
 19479                           	opt stack 17
 19480                           
 19481                           ; BSR set to: 0
 19482                           ;incstack = 0
 19483                           ;UpdateChannelIdStatus@channelId stored from wreg
 19484  005FFE  0100               	movlb	0	; () banked
 19485  006000  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 19486                           
 19487                           ;lorawan_eu.c: 1044: uint8_t i;
 19488                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 19489  006002  0100               	movlb	0	; () banked
 19490  006004  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19491  006006  0D0E               	mullw	14
 19492  006008  0E04               	movlw	4
 19493  00600A  26F3               	addwf	prodl,f,c
 19494  00600C  0E00               	movlw	0
 19495  00600E  22F4               	addwfc	prodh,f,c
 19496  006010  0E00               	movlw	low _Channels
 19497  006012  24F3               	addwf	prodl,w,c
 19498  006014  6ED9               	movwf	fsr2l,c
 19499  006016  0E04               	movlw	high _Channels
 19500  006018  20F4               	addwfc	prodh,w,c
 19501  00601A  6EDA               	movwf	fsr2h,c
 19502  00601C  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 19503                           
 19504                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 19505  006020  0100               	movlb	0	; () banked
 19506  006022  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19507  006024  0D0E               	mullw	14
 19508  006026  0E04               	movlw	4
 19509  006028  26F3               	addwf	prodl,f,c
 19510  00602A  0E00               	movlw	0
 19511  00602C  22F4               	addwfc	prodh,f,c
 19512  00602E  0E00               	movlw	low _Channels
 19513  006030  24F3               	addwf	prodl,w,c
 19514  006032  6ED9               	movwf	fsr2l,c
 19515  006034  0E04               	movlw	high _Channels
 19516  006036  20F4               	addwfc	prodh,w,c
 19517  006038  6EDA               	movwf	fsr2h,c
 19518  00603A  50DF               	movf	indf2,w,c
 19519  00603C  A4D8               	btfss	status,2,c
 19520  00603E  D011               	goto	l13585
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;lorawan_eu.c: 1048: {
 19524                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 19525  006040  0100               	movlb	0	; () banked
 19526  006042  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19527  006044  0D0E               	mullw	14
 19528  006046  0E08               	movlw	8
 19529  006048  26F3               	addwf	prodl,f,c
 19530  00604A  0E00               	movlw	0
 19531  00604C  22F4               	addwfc	prodh,f,c
 19532  00604E  0E00               	movlw	low _Channels
 19533  006050  24F3               	addwf	prodl,w,c
 19534  006052  6ED9               	movwf	fsr2l,c
 19535  006054  0E04               	movlw	high _Channels
 19536  006056  20F4               	addwfc	prodh,w,c
 19537  006058  6EDA               	movwf	fsr2h,c
 19538  00605A  6ADE               	clrf	postinc2,c
 19539  00605C  6ADE               	clrf	postinc2,c
 19540  00605E  6ADE               	clrf	postinc2,c
 19541  006060  6ADD               	clrf	postdec2,c
 19542  006062                     l13585:
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;lorawan_eu.c: 1051: }
 19546                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 19547  006062  0E00               	movlw	0
 19548  006064  0100               	movlb	0	; () banked
 19549  006066  6F67               	movwf	UpdateChannelIdStatus@i& (0+255),b
 19550  006068  D071               	goto	l13599
 19551  00606A                     l13587:
 19552                           
 19553                           ; BSR set to: 0
 19554                           ;lorawan_eu.c: 1054: {
 19555                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 19556  00606A  0100               	movlb	0	; () banked
 19557  00606C  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19558  00606E  0D0E               	mullw	14
 19559  006070  0E05               	movlw	5
 19560  006072  26F3               	addwf	prodl,f,c
 19561  006074  0E00               	movlw	0
 19562  006076  22F4               	addwfc	prodh,f,c
 19563  006078  0E00               	movlw	low _Channels
 19564  00607A  24F3               	addwf	prodl,w,c
 19565  00607C  6ED9               	movwf	fsr2l,c
 19566  00607E  0E04               	movlw	high _Channels
 19567  006080  20F4               	addwfc	prodh,w,c
 19568  006082  6EDA               	movwf	fsr2h,c
 19569  006084  0104               	movlb	4	; () banked
 19570  006086  50DF               	movf	223,w,c
 19571  006088  0B0F               	andlw	15
 19572  00608A  0100               	movlb	0	; () banked
 19573  00608C  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 19574  00608E  0102               	movlb	2	; () banked
 19575  006090  51EB               	movf	(_loRa+235)& (0+255),w,b
 19576  006092  0100               	movlb	0	; () banked
 19577  006094  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 19578  006096  B0D8               	btfsc	status,0,c
 19579  006098  D022               	goto	l1213
 19580                           
 19581                           ; BSR set to: 0
 19582  00609A  0100               	movlb	0	; () banked
 19583  00609C  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19584  00609E  0D0E               	mullw	14
 19585  0060A0  0E04               	movlw	4
 19586  0060A2  26F3               	addwf	prodl,f,c
 19587  0060A4  0E00               	movlw	0
 19588  0060A6  22F4               	addwfc	prodh,f,c
 19589  0060A8  0E00               	movlw	low _Channels
 19590  0060AA  24F3               	addwf	prodl,w,c
 19591  0060AC  6ED9               	movwf	fsr2l,c
 19592  0060AE  0E04               	movlw	high _Channels
 19593  0060B0  20F4               	addwfc	prodh,w,c
 19594  0060B2  6EDA               	movwf	fsr2h,c
 19595  0060B4  04DE               	decf	postinc2,w,c
 19596  0060B6  A4D8               	btfss	status,2,c
 19597  0060B8  D012               	goto	l1213
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;lorawan_eu.c: 1056: {
 19601                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 19602  0060BA  0100               	movlb	0	; () banked
 19603  0060BC  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19604  0060BE  0D0E               	mullw	14
 19605  0060C0  0E05               	movlw	5
 19606  0060C2  26F3               	addwf	prodl,f,c
 19607  0060C4  0E00               	movlw	0
 19608  0060C6  22F4               	addwfc	prodh,f,c
 19609  0060C8  0E00               	movlw	low _Channels
 19610  0060CA  24F3               	addwf	prodl,w,c
 19611  0060CC  6ED9               	movwf	fsr2l,c
 19612  0060CE  0E04               	movlw	high _Channels
 19613  0060D0  20F4               	addwfc	prodh,w,c
 19614  0060D2  6EDA               	movwf	fsr2h,c
 19615  0060D4  0104               	movlb	4	; () banked
 19616  0060D6  50DF               	movf	223,w,c
 19617  0060D8  0B0F               	andlw	15
 19618  0060DA  0102               	movlb	2	; () banked
 19619  0060DC  6FEB               	movwf	(_loRa+235)& (0+255),b
 19620  0060DE                     l1213:
 19621                           
 19622                           ;lorawan_eu.c: 1058: }
 19623                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 19624  0060DE  0100               	movlb	0	; () banked
 19625  0060E0  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19626  0060E2  0D0E               	mullw	14
 19627  0060E4  0E05               	movlw	5
 19628  0060E6  26F3               	addwf	prodl,f,c
 19629  0060E8  0E00               	movlw	0
 19630  0060EA  22F4               	addwfc	prodh,f,c
 19631  0060EC  0E00               	movlw	low _Channels
 19632  0060EE  24F3               	addwf	prodl,w,c
 19633  0060F0  6ED9               	movwf	fsr2l,c
 19634  0060F2  0E04               	movlw	high _Channels
 19635  0060F4  20F4               	addwfc	prodh,w,c
 19636  0060F6  6EDA               	movwf	fsr2h,c
 19637  0060F8  0104               	movlb	4	; () banked
 19638  0060FA  38DF               	swapf	223,w,c
 19639  0060FC  0B0F               	andlw	15
 19640  0060FE  0102               	movlb	2	; () banked
 19641  006100  61EC               	cpfslt	(_loRa+236)& (0+255),b
 19642  006102  D022               	goto	l13597
 19643                           
 19644                           ; BSR set to: 2
 19645  006104  0100               	movlb	0	; () banked
 19646  006106  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19647  006108  0D0E               	mullw	14
 19648  00610A  0E04               	movlw	4
 19649  00610C  26F3               	addwf	prodl,f,c
 19650  00610E  0E00               	movlw	0
 19651  006110  22F4               	addwfc	prodh,f,c
 19652  006112  0E00               	movlw	low _Channels
 19653  006114  24F3               	addwf	prodl,w,c
 19654  006116  6ED9               	movwf	fsr2l,c
 19655  006118  0E04               	movlw	high _Channels
 19656  00611A  20F4               	addwfc	prodh,w,c
 19657  00611C  6EDA               	movwf	fsr2h,c
 19658  00611E  04DE               	decf	postinc2,w,c
 19659  006120  A4D8               	btfss	status,2,c
 19660  006122  D012               	goto	l13597
 19661                           
 19662                           ; BSR set to: 0
 19663                           ;lorawan_eu.c: 1060: {
 19664                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 19665  006124  0100               	movlb	0	; () banked
 19666  006126  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19667  006128  0D0E               	mullw	14
 19668  00612A  0E05               	movlw	5
 19669  00612C  26F3               	addwf	prodl,f,c
 19670  00612E  0E00               	movlw	0
 19671  006130  22F4               	addwfc	prodh,f,c
 19672  006132  0E00               	movlw	low _Channels
 19673  006134  24F3               	addwf	prodl,w,c
 19674  006136  6ED9               	movwf	fsr2l,c
 19675  006138  0E04               	movlw	high _Channels
 19676  00613A  20F4               	addwfc	prodh,w,c
 19677  00613C  6EDA               	movwf	fsr2h,c
 19678  00613E  0104               	movlb	4	; () banked
 19679  006140  38DF               	swapf	223,w,c
 19680  006142  0B0F               	andlw	15
 19681  006144  0102               	movlb	2	; () banked
 19682  006146  6FEC               	movwf	(_loRa+236)& (0+255),b
 19683  006148                     l13597:
 19684  006148  0100               	movlb	0	; () banked
 19685  00614A  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 19686  00614C                     l13599:
 19687                           
 19688                           ; BSR set to: 0
 19689  00614C  0102               	movlb	2	; () banked
 19690  00614E  51ED               	movf	(_loRa+237)& (0+255),w,b
 19691  006150  0100               	movlb	0	; () banked
 19692  006152  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 19693  006154  A0D8               	btfss	status,0,c
 19694  006156  D789               	goto	l13587
 19695                           
 19696                           ; BSR set to: 0
 19697                           ;lorawan_eu.c: 1062: }
 19698                           ;lorawan_eu.c: 1063: }
 19699                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 19700                           
 19701                           ; BSR set to: 0
 19702  006158  0102               	movlb	2	; () banked
 19703  00615A  51DF               	movf	(_loRa+223)& (0+255),w,b
 19704  00615C  0102               	movlb	2	; () banked
 19705  00615E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 19706  006160  A0D8               	btfss	status,0,c
 19707                           
 19708                           ; BSR set to: 2
 19709                           ;lorawan_eu.c: 1066: {
 19710                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 19711  006162  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 19712                           
 19713                           ; BSR set to: 2
 19714                           ;lorawan_eu.c: 1068: }
 19715                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 19716                           
 19717                           ; BSR set to: 2
 19718  006166  0102               	movlb	2	; () banked
 19719  006168  51EB               	movf	(_loRa+235)& (0+255),w,b
 19720  00616A  0102               	movlb	2	; () banked
 19721  00616C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 19722  00616E  B0D8               	btfsc	status,0,c
 19723  006170  0012               	return	
 19724                           
 19725                           ; BSR set to: 2
 19726                           ;lorawan_eu.c: 1071: {
 19727                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 19728  006172  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 19729  006176  0012               	return	
 19730  006178                     __end_of_UpdateChannelIdStatus:
 19731                           	opt stack 0
 19732                           tosu	equ	0xFFF
 19733                           tosh	equ	0xFFE
 19734                           tosl	equ	0xFFD
 19735                           pclath	equ	0xFFA
 19736                           tblptru	equ	0xFF8
 19737                           tblptrh	equ	0xFF7
 19738                           tblptrl	equ	0xFF6
 19739                           tablat	equ	0xFF5
 19740                           prodh	equ	0xFF4
 19741                           prodl	equ	0xFF3
 19742                           intcon	equ	0xFF2
 19743                           intcon2	equ	0xFF1
 19744                           intcon3	equ	0xFF0
 19745                           indf0	equ	0xFEF
 19746                           postinc0	equ	0xFEE
 19747                           fsr0h	equ	0xFEA
 19748                           fsr0l	equ	0xFE9
 19749                           wreg	equ	0xFE8
 19750                           postinc1	equ	0xFE6
 19751                           postdec1	equ	0xFE5
 19752                           plusw1	equ	0xFE3
 19753                           fsr1h	equ	0xFE2
 19754                           fsr1l	equ	0xFE1
 19755                           indf2	equ	0xFDF
 19756                           postinc2	equ	0xFDE
 19757                           postdec2	equ	0xFDD
 19758                           plusw2	equ	0xFDB
 19759                           fsr2h	equ	0xFDA
 19760                           fsr2l	equ	0xFD9
 19761                           status	equ	0xFD8
 19762                           
 19763 ;; *************** function _ExecuteDutyCycle *****************
 19764 ;; Defined at:
 19765 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19766 ;; Parameters:    Size  Location     Type
 19767 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 19768 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 19769 ;; Auto vars:     Size  Location     Type
 19770 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 19771 ;; Return value:  Size  Location     Type
 19772 ;;                  2    4[BANK0 ] PTR unsigned char 
 19773 ;; Registers used:
 19774 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19775 ;; Tracked objects:
 19776 ;;		On entry : 0/0
 19777 ;;		On exit  : 0/0
 19778 ;;		Unchanged: 0/0
 19779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19780 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19781 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19782 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19783 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19784 ;;Total ram usage:        6 bytes
 19785 ;; Hardware stack levels used:    1
 19786 ;; Hardware stack levels required when called:    7
 19787 ;; This function calls:
 19788 ;;		Nothing
 19789 ;; This function is called by:
 19790 ;;		_MacExecuteCommands
 19791 ;; This function uses a non-reentrant model
 19792 ;;
 19793                           
 19794                           	psect	text92
 19795  0090D0                     __ptext92:
 19796                           	opt stack 0
 19797  0090D0                     _ExecuteDutyCycle:
 19798                           	opt stack 18
 19799                           
 19800                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 19801                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 19802                           
 19803                           ; BSR set to: 2
 19804                           ;incstack = 0
 19805  0090D0  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 19806  0090D4  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 19807  0090D8  50DF               	movf	indf2,w,c
 19808  0090DA  0100               	movlb	0	; () banked
 19809  0090DC  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 19810                           
 19811                           ; BSR set to: 0
 19812  0090DE  0100               	movlb	0	; () banked
 19813  0090E0  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 19814  0090E2  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 19815                           
 19816                           ; BSR set to: 0
 19817                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 19818  0090E4  0E0F               	movlw	15
 19819  0090E6  0100               	movlb	0	; () banked
 19820  0090E8  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 19821  0090EA  D018               	goto	l1089
 19822                           
 19823                           ; BSR set to: 0
 19824                           ;lorawan_eu.c: 600: {
 19825                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 19826  0090EC  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 19827  0090F0  0E01               	movlw	1
 19828  0090F2  0100               	movlb	0	; () banked
 19829  0090F4  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 19830  0090F6  0E00               	movlw	0
 19831  0090F8  0100               	movlb	0	; () banked
 19832  0090FA  6F68               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 19833  0090FC  0100               	movlb	0	; () banked
 19834  0090FE  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 19835  009100  D004               	goto	u16834
 19836  009102                     u16835:
 19837  009102  90D8               	bcf	status,0,c
 19838  009104  0100               	movlb	0	; () banked
 19839  009106  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 19840  009108  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 19841  00910A                     u16834:
 19842  00910A  0100               	movlb	0	; () banked
 19843  00910C  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 19844  00910E  D7F9               	goto	u16835
 19845  009110  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 19846  009114  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 19847                           
 19848                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 19849  009118  0102               	movlb	2	; () banked
 19850  00911A  8D03               	bsf	(_loRa+3)& (0+255),6,b
 19851  00911C                     l1089:
 19852                           
 19853                           ;lorawan_eu.c: 603: }
 19854                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 19855  00911C  0100               	movlb	0	; () banked
 19856  00911E  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 19857  009120  A4D8               	btfss	status,2,c
 19858  009122  D002               	goto	l14767
 19859                           
 19860                           ; BSR set to: 0
 19861                           ;lorawan_eu.c: 606: {
 19862                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 19863  009124  0102               	movlb	2	; () banked
 19864  009126  8F02               	bsf	(_loRa+2)& (0+255),7,b
 19865  009128                     l14767:
 19866                           
 19867                           ;lorawan_eu.c: 608: }
 19868                           ;lorawan_eu.c: 610: return ptr;
 19869  009128  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 19870  00912C  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 19871  009130  0012               	return	
 19872  009132                     __end_of_ExecuteDutyCycle:
 19873                           	opt stack 0
 19874                           tosu	equ	0xFFF
 19875                           tosh	equ	0xFFE
 19876                           tosl	equ	0xFFD
 19877                           pclath	equ	0xFFA
 19878                           tblptru	equ	0xFF8
 19879                           tblptrh	equ	0xFF7
 19880                           tblptrl	equ	0xFF6
 19881                           tablat	equ	0xFF5
 19882                           prodh	equ	0xFF4
 19883                           prodl	equ	0xFF3
 19884                           intcon	equ	0xFF2
 19885                           intcon2	equ	0xFF1
 19886                           intcon3	equ	0xFF0
 19887                           indf0	equ	0xFEF
 19888                           postinc0	equ	0xFEE
 19889                           fsr0h	equ	0xFEA
 19890                           fsr0l	equ	0xFE9
 19891                           wreg	equ	0xFE8
 19892                           postinc1	equ	0xFE6
 19893                           postdec1	equ	0xFE5
 19894                           plusw1	equ	0xFE3
 19895                           fsr1h	equ	0xFE2
 19896                           fsr1l	equ	0xFE1
 19897                           indf2	equ	0xFDF
 19898                           postinc2	equ	0xFDE
 19899                           postdec2	equ	0xFDD
 19900                           plusw2	equ	0xFDB
 19901                           fsr2h	equ	0xFDA
 19902                           fsr2l	equ	0xFD9
 19903                           status	equ	0xFD8
 19904                           
 19905 ;; *************** function _ExecuteDevStatus *****************
 19906 ;; Defined at:
 19907 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19908 ;; Parameters:    Size  Location     Type
 19909 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 19910 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 19911 ;; Auto vars:     Size  Location     Type
 19912 ;;		None
 19913 ;; Return value:  Size  Location     Type
 19914 ;;                  2    4[BANK0 ] PTR unsigned char 
 19915 ;; Registers used:
 19916 ;;		wreg, status,2, status,0
 19917 ;; Tracked objects:
 19918 ;;		On entry : 0/0
 19919 ;;		On exit  : 0/0
 19920 ;;		Unchanged: 0/0
 19921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19922 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19925 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19926 ;;Total ram usage:        2 bytes
 19927 ;; Hardware stack levels used:    1
 19928 ;; Hardware stack levels required when called:    7
 19929 ;; This function calls:
 19930 ;;		Nothing
 19931 ;; This function is called by:
 19932 ;;		_MacExecuteCommands
 19933 ;; This function uses a non-reentrant model
 19934 ;;
 19935                           
 19936                           	psect	text93
 19937  00A338                     __ptext93:
 19938                           	opt stack 0
 19939  00A338                     _ExecuteDevStatus:
 19940                           	opt stack 18
 19941                           
 19942                           ;lorawan_eu.c: 674: return ptr;
 19943                           
 19944                           ;incstack = 0
 19945  00A338  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 19946  00A33C  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 19947  00A340  0012               	return	
 19948  00A342                     __end_of_ExecuteDevStatus:
 19949                           	opt stack 0
 19950                           tosu	equ	0xFFF
 19951                           tosh	equ	0xFFE
 19952                           tosl	equ	0xFFD
 19953                           pclath	equ	0xFFA
 19954                           tblptru	equ	0xFF8
 19955                           tblptrh	equ	0xFF7
 19956                           tblptrl	equ	0xFF6
 19957                           tablat	equ	0xFF5
 19958                           prodh	equ	0xFF4
 19959                           prodl	equ	0xFF3
 19960                           intcon	equ	0xFF2
 19961                           intcon2	equ	0xFF1
 19962                           intcon3	equ	0xFF0
 19963                           indf0	equ	0xFEF
 19964                           postinc0	equ	0xFEE
 19965                           fsr0h	equ	0xFEA
 19966                           fsr0l	equ	0xFE9
 19967                           wreg	equ	0xFE8
 19968                           postinc1	equ	0xFE6
 19969                           postdec1	equ	0xFE5
 19970                           plusw1	equ	0xFE3
 19971                           fsr1h	equ	0xFE2
 19972                           fsr1l	equ	0xFE1
 19973                           indf2	equ	0xFDF
 19974                           postinc2	equ	0xFDE
 19975                           postdec2	equ	0xFDD
 19976                           plusw2	equ	0xFDB
 19977                           fsr2h	equ	0xFDA
 19978                           fsr2l	equ	0xFD9
 19979                           status	equ	0xFD8
 19980                           
 19981 ;; *************** function _LORAWAN_Send *****************
 19982 ;; Defined at:
 19983 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19984 ;; Parameters:    Size  Location     Type
 19985 ;;  confirmed       1    wreg     enum E7984
 19986 ;;  port            1  135[BANK0 ] unsigned char 
 19987 ;;  buffer          2  136[BANK0 ] PTR void 
 19988 ;;		 -> payload(2), NULL(0), 
 19989 ;;  bufferLength    1  138[BANK0 ] unsigned char 
 19990 ;; Auto vars:     Size  Location     Type
 19991 ;;  confirmed       1  141[BANK0 ] enum E7984
 19992 ;;  result          1  140[BANK0 ] enum E7957
 19993 ;; Return value:  Size  Location     Type
 19994 ;;                  1    wreg      enum E7957
 19995 ;; Registers used:
 19996 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19997 ;; Tracked objects:
 19998 ;;		On entry : 0/0
 19999 ;;		On exit  : 0/0
 20000 ;;		Unchanged: 0/0
 20001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20002 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20003 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20004 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20005 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20006 ;;Total ram usage:        7 bytes
 20007 ;; Hardware stack levels used:    1
 20008 ;; Hardware stack levels required when called:   13
 20009 ;; This function calls:
 20010 ;;		_AssemblePacket
 20011 ;;		_LORAWAN_GetMaxPayloadSize
 20012 ;;		_RADIO_ReceiveStop
 20013 ;;		_RADIO_Transmit
 20014 ;;		_SelectChannelForTransmission
 20015 ;; This function is called by:
 20016 ;;		_AutomaticReplyCallback
 20017 ;;		_LORAWAN_RxDone
 20018 ;;		_readAndSend
 20019 ;; This function uses a non-reentrant model
 20020 ;;
 20021                           
 20022                           	psect	text94
 20023  00769C                     __ptext94:
 20024                           	opt stack 0
 20025  00769C                     _LORAWAN_Send:
 20026                           	opt stack 16
 20027                           
 20028                           ;incstack = 0
 20029                           ;LORAWAN_Send@confirmed stored from wreg
 20030  00769C  0100               	movlb	0	; () banked
 20031  00769E  6FED               	movwf	LORAWAN_Send@confirmed& (0+255),b
 20032                           
 20033                           ;lorawan.c: 187: LorawanError_t result;
 20034                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 20035  0076A0  0102               	movlb	2	; () banked
 20036  0076A2  B103               	btfsc	(_loRa+3)& (0+255),0,b
 20037  0076A4  0012               	return	
 20038                           
 20039                           ; BSR set to: 2
 20040                           ;lorawan.c: 192: }
 20041                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 20042                           
 20043                           ; BSR set to: 2
 20044                           ;lorawan.c: 190: {
 20045                           ;lorawan.c: 191: return MAC_PAUSED;
 20046                           ;	Return value of _LORAWAN_Send is never used
 20047  0076A6  0102               	movlb	2	; () banked
 20048  0076A8  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 20049  0076AA  0012               	return	
 20050                           
 20051                           ; BSR set to: 2
 20052                           ;lorawan.c: 197: }
 20053                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 20054                           
 20055                           ; BSR set to: 2
 20056                           ;lorawan.c: 195: {
 20057                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 20058                           ;	Return value of _LORAWAN_Send is never used
 20059  0076AC  0102               	movlb	2	; () banked
 20060  0076AE  A902               	btfss	(_loRa+2)& (0+255),4,b
 20061  0076B0  0012               	return	
 20062                           
 20063                           ; BSR set to: 2
 20064                           ;lorawan.c: 202: }
 20065                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 20066                           
 20067                           ; BSR set to: 2
 20068                           
 20069                           ; BSR set to: 2
 20070                           ;lorawan.c: 200: {
 20071                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 20072                           ;	Return value of _LORAWAN_Send is never used
 20073  0076B2  0100               	movlb	0	; () banked
 20074  0076B4  51E7               	movf	LORAWAN_Send@port& (0+255),w,b
 20075  0076B6  0100               	movlb	0	; () banked
 20076  0076B8  A4D8               	btfss	status,2,c
 20077  0076BA  D005               	goto	l15223
 20078                           
 20079                           ; BSR set to: 0
 20080  0076BC  0100               	movlb	0	; () banked
 20081  0076BE  51EA               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20082  0076C0  0100               	movlb	0	; () banked
 20083  0076C2  A4D8               	btfss	status,2,c
 20084  0076C4  0012               	return	
 20085  0076C6                     l15223:
 20086                           
 20087                           ; BSR set to: 0
 20088                           ;lorawan.c: 207: }
 20089                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 20090  0076C6  EC9B  F047         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 20091  0076CA  0100               	movlb	0	; () banked
 20092  0076CC  6FEB               	movwf	??_LORAWAN_Send& (0+255),b
 20093  0076CE  0100               	movlb	0	; () banked
 20094  0076D0  51EA               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20095  0076D2  0100               	movlb	0	; () banked
 20096  0076D4  5DEB               	subwf	??_LORAWAN_Send& (0+255),w,b
 20097  0076D6  A0D8               	btfss	status,0,c
 20098  0076D8  0012               	return	
 20099                           
 20100                           ; BSR set to: 0
 20101                           ;lorawan.c: 213: }
 20102                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 20103                           
 20104                           ; BSR set to: 0
 20105                           
 20106                           ; BSR set to: 0
 20107                           ;lorawan.c: 211: {
 20108                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 20109                           ;	Return value of _LORAWAN_Send is never used
 20110  0076DA  0102               	movlb	2	; () banked
 20111  0076DC  2906               	incf	(_loRa+6)& (0+255),w,b
 20112  0076DE  E10D               	bnz	l15231
 20113  0076E0  0102               	movlb	2	; () banked
 20114  0076E2  2907               	incf	(_loRa+7)& (0+255),w,b
 20115  0076E4  E10A               	bnz	l15231
 20116  0076E6  0102               	movlb	2	; () banked
 20117  0076E8  2908               	incf	(_loRa+8)& (0+255),w,b
 20118  0076EA  E107               	bnz	l15231
 20119  0076EC  0102               	movlb	2	; () banked
 20120  0076EE  2909               	incf	(_loRa+9)& (0+255),w,b
 20121  0076F0  A4D8               	btfss	status,2,c
 20122  0076F2  D003               	goto	l15231
 20123                           
 20124                           ; BSR set to: 2
 20125                           ;lorawan.c: 216: {
 20126                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 20127  0076F4  0102               	movlb	2	; () banked
 20128  0076F6  8304               	bsf	(_loRa+4)& (0+255),1,b
 20129                           
 20130                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 20131                           ;	Return value of _LORAWAN_Send is never used
 20132  0076F8  0012               	return	
 20133  0076FA                     l15231:
 20134                           
 20135                           ; BSR set to: 2
 20136                           ;lorawan.c: 220: }
 20137                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 20138  0076FA  0102               	movlb	2	; () banked
 20139  0076FC  5102               	movf	(_loRa+2)& (0+255),w,b
 20140  0076FE  0B0F               	andlw	15
 20141  007700  0900               	iorlw	0
 20142  007702  B4D8               	btfsc	status,2,c
 20143  007704  D004               	goto	l15237
 20144                           
 20145                           ; BSR set to: 2
 20146  007706  0102               	movlb	2	; () banked
 20147  007708  5112               	movf	(_loRa+18)& (0+255),w,b
 20148  00770A  B4D8               	btfsc	status,2,c
 20149  00770C  0012               	return	
 20150  00770E                     l15237:
 20151                           
 20152                           ; BSR set to: 2
 20153                           ;lorawan.c: 225: }
 20154                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 20155  00770E  0E01               	movlw	1
 20156  007710  EC47  F046         	call	_SelectChannelForTransmission
 20157  007714  0100               	movlb	0	; () banked
 20158  007716  6FEC               	movwf	LORAWAN_Send@result& (0+255),b
 20159                           
 20160                           ; BSR set to: 0
 20161                           ;lorawan.c: 228: if (result != OK)
 20162  007718  0100               	movlb	0	; () banked
 20163  00771A  51EC               	movf	LORAWAN_Send@result& (0+255),w,b
 20164  00771C  0100               	movlb	0	; () banked
 20165  00771E  A4D8               	btfss	status,2,c
 20166  007720  0012               	return	
 20167                           
 20168                           ; BSR set to: 0
 20169                           ;lorawan.c: 232: else
 20170                           ;lorawan.c: 233: {
 20171                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 20172                           
 20173                           ; BSR set to: 0
 20174                           
 20175                           ; BSR set to: 0
 20176                           ;lorawan.c: 231: }
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;lorawan.c: 229: {
 20180                           ;lorawan.c: 230: return result;
 20181                           ;	Return value of _LORAWAN_Send is never used
 20182  007722  0E02               	movlw	2
 20183  007724  0102               	movlb	2	; () banked
 20184  007726  1912               	xorwf	(_loRa+18)& (0+255),w,b
 20185  007728  B4D8               	btfsc	status,2,c
 20186                           
 20187                           ; BSR set to: 2
 20188                           ;lorawan.c: 235: {
 20189                           ;lorawan.c: 236: RADIO_ReceiveStop();
 20190  00772A  ECEE  F04F         	call	_RADIO_ReceiveStop	;wreg free
 20191                           
 20192                           ;lorawan.c: 237: }
 20193                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 20194  00772E  C0E7  F0DB         	movff	LORAWAN_Send@port,AssemblePacket@port
 20195  007732  C0E8  F0DC         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 20196  007736  C0E9  F0DD         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 20197  00773A  C0EA  F0DE         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 20198  00773E  0100               	movlb	0	; () banked
 20199  007740  6BDF               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 20200  007742  0100               	movlb	0	; () banked
 20201  007744  51ED               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 20202  007746  ECDE  F013         	call	_AssemblePacket
 20203                           
 20204                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 20205  00774A  0EF0               	movlw	low (_macBuffer+16)
 20206  00774C  0100               	movlb	0	; () banked
 20207  00774E  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 20208  007750  0E04               	movlw	high (_macBuffer+16)
 20209  007752  0100               	movlb	0	; () banked
 20210  007754  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 20211  007756  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
 20212  00775A  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 20213  00775E  0100               	movlb	0	; () banked
 20214  007760  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 20215  007762  0100               	movlb	0	; () banked
 20216  007764  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 20217  007766  A4D8               	btfss	status,2,c
 20218  007768  0012               	return	
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;lorawan.c: 242: {
 20222                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 20223  00776A  0E01               	movlw	1
 20224  00776C  0102               	movlb	2	; () banked
 20225  00776E  2706               	addwf	(_loRa+6)& (0+255),f,b
 20226  007770  0E00               	movlw	0
 20227  007772  2307               	addwfc	(_loRa+7)& (0+255),f,b
 20228  007774  2308               	addwfc	(_loRa+8)& (0+255),f,b
 20229  007776  2309               	addwfc	(_loRa+9)& (0+255),f,b
 20230                           
 20231                           ;lorawan.c: 245: if (CNF == confirmed)
 20232  007778  0100               	movlb	0	; () banked
 20233  00777A  05ED               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 20234  00777C  A4D8               	btfss	status,2,c
 20235  00777E  D002               	goto	l1694
 20236                           
 20237                           ; BSR set to: 0
 20238                           ;lorawan.c: 246: {
 20239                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 20240  007780  0102               	movlb	2	; () banked
 20241  007782  8100               	bsf	_loRa& (0+255),0,b
 20242  007784                     l1694:
 20243                           
 20244                           ;lorawan.c: 248: }
 20245                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 20246  007784  0102               	movlb	2	; () banked
 20247  007786  8B00               	bsf	_loRa& (0+255),5,b
 20248                           
 20249                           ; BSR set to: 2
 20250                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 20251  007788  0102               	movlb	2	; () banked
 20252  00778A  5102               	movf	(_loRa+2)& (0+255),w,b
 20253  00778C  0BF0               	andlw	-16
 20254  00778E  0901               	iorlw	1
 20255  007790  6F02               	movwf	(_loRa+2)& (0+255),b
 20256                           
 20257                           ; BSR set to: 2
 20258                           
 20259                           ; BSR set to: 2
 20260                           ;lorawan.c: 252: else
 20261                           ;lorawan.c: 253: {
 20262                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 20263                           ;	Return value of _LORAWAN_Send is never used
 20264                           
 20265                           ;lorawan.c: 251: }
 20266  007792  0012               	return	
 20267  007794                     __end_of_LORAWAN_Send:
 20268                           	opt stack 0
 20269                           tosu	equ	0xFFF
 20270                           tosh	equ	0xFFE
 20271                           tosl	equ	0xFFD
 20272                           pclath	equ	0xFFA
 20273                           tblptru	equ	0xFF8
 20274                           tblptrh	equ	0xFF7
 20275                           tblptrl	equ	0xFF6
 20276                           tablat	equ	0xFF5
 20277                           prodh	equ	0xFF4
 20278                           prodl	equ	0xFF3
 20279                           intcon	equ	0xFF2
 20280                           intcon2	equ	0xFF1
 20281                           intcon3	equ	0xFF0
 20282                           indf0	equ	0xFEF
 20283                           postinc0	equ	0xFEE
 20284                           fsr0h	equ	0xFEA
 20285                           fsr0l	equ	0xFE9
 20286                           wreg	equ	0xFE8
 20287                           postinc1	equ	0xFE6
 20288                           postdec1	equ	0xFE5
 20289                           plusw1	equ	0xFE3
 20290                           fsr1h	equ	0xFE2
 20291                           fsr1l	equ	0xFE1
 20292                           indf2	equ	0xFDF
 20293                           postinc2	equ	0xFDE
 20294                           postdec2	equ	0xFDD
 20295                           plusw2	equ	0xFDB
 20296                           fsr2h	equ	0xFDA
 20297                           fsr2l	equ	0xFD9
 20298                           status	equ	0xFD8
 20299                           
 20300 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 20301 ;; Defined at:
 20302 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20303 ;; Parameters:    Size  Location     Type
 20304 ;;		None
 20305 ;; Auto vars:     Size  Location     Type
 20306 ;;  result          1   14[BANK0 ] unsigned char 
 20307 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 20308 ;; Return value:  Size  Location     Type
 20309 ;;                  1    wreg      unsigned char 
 20310 ;; Registers used:
 20311 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20312 ;; Tracked objects:
 20313 ;;		On entry : 0/0
 20314 ;;		On exit  : 0/0
 20315 ;;		Unchanged: 0/0
 20316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20317 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20318 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20319 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20320 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20321 ;;Total ram usage:        3 bytes
 20322 ;; Hardware stack levels used:    1
 20323 ;; Hardware stack levels required when called:    8
 20324 ;; This function calls:
 20325 ;;		_CountfOptsLength
 20326 ;; This function is called by:
 20327 ;;		_LORAWAN_Send
 20328 ;;		_AckRetransmissionCallback
 20329 ;; This function uses a non-reentrant model
 20330 ;;
 20331                           
 20332                           	psect	text95
 20333  008F36                     __ptext95:
 20334                           	opt stack 0
 20335  008F36                     _LORAWAN_GetMaxPayloadSize:
 20336                           	opt stack 20
 20337                           
 20338                           ;lorawan.c: 1558: uint8_t result = 0;
 20339                           
 20340                           ;incstack = 0
 20341  008F36  0E00               	movlw	0
 20342  008F38  0100               	movlb	0	; () banked
 20343  008F3A  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 20344                           
 20345                           ; BSR set to: 0
 20346                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 20347                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 20348  008F3C  EC50  F039         	call	_CountfOptsLength	;wreg free
 20349  008F40  0100               	movlb	0	; () banked
 20350  008F42  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 20351                           
 20352                           ; BSR set to: 0
 20353                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 20354  008F44  0102               	movlb	2	; () banked
 20355  008F46  51A7               	movf	(_loRa+167)& (0+255),w,b
 20356  008F48  A4D8               	btfss	status,2,c
 20357  008F4A  D010               	goto	l14929
 20358                           
 20359                           ; BSR set to: 2
 20360                           ;lorawan.c: 1564: {
 20361                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 20362  008F4C  0102               	movlb	2	; () banked
 20363  008F4E  51DF               	movf	(_loRa+223)& (0+255),w,b
 20364  008F50  0D01               	mullw	1
 20365  008F52  0E67               	movlw	low _maxPayloadSize
 20366  008F54  24F3               	addwf	prodl,w,c
 20367  008F56  6EF6               	movwf	tblptrl,c
 20368  008F58  0EFF               	movlw	high _maxPayloadSize
 20369  008F5A  20F4               	addwfc	prodh,w,c
 20370  008F5C  6EF7               	movwf	tblptrh,c
 20371  008F5E                     	if	1	;There are 3 active tblptr bytes
 20372  008F5E  6AF8               	clrf	tblptru,c
 20373  008F60  0E00               	movlw	low (__mediumconst shr (0+16))
 20374  008F62  22F8               	addwfc	tblptru,f,c
 20375  008F64                     	endif
 20376  008F64  0008               	tblrd		*
 20377  008F66  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 20378                           
 20379                           ;lorawan.c: 1566: }
 20380  008F6A  D016               	goto	l14931
 20381  008F6C                     l14929:
 20382                           
 20383                           ; BSR set to: 2
 20384                           ;lorawan.c: 1567: else
 20385                           ;lorawan.c: 1568: {
 20386                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 20387  008F6C  0102               	movlb	2	; () banked
 20388  008F6E  51DF               	movf	(_loRa+223)& (0+255),w,b
 20389  008F70  0D01               	mullw	1
 20390  008F72  0E67               	movlw	low _maxPayloadSize
 20391  008F74  24F3               	addwf	prodl,w,c
 20392  008F76  6EF6               	movwf	tblptrl,c
 20393  008F78  0EFF               	movlw	high _maxPayloadSize
 20394  008F7A  20F4               	addwfc	prodh,w,c
 20395  008F7C  6EF7               	movwf	tblptrh,c
 20396  008F7E                     	if	1	;There are 3 active tblptr bytes
 20397  008F7E  6AF8               	clrf	tblptru,c
 20398  008F80  0E00               	movlw	low (__mediumconst shr (0+16))
 20399  008F82  22F8               	addwfc	tblptru,f,c
 20400  008F84                     	endif
 20401  008F84  0008               	tblrd		*
 20402  008F86  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 20403  008F8A  0100               	movlb	0	; () banked
 20404  008F8C  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 20405  008F8E  0800               	sublw	0
 20406  008F90  0100               	movlb	0	; () banked
 20407  008F92  256C               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 20408  008F94  0100               	movlb	0	; () banked
 20409  008F96  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 20410  008F98                     l14931:
 20411                           
 20412                           ;lorawan.c: 1570: }
 20413                           ;lorawan.c: 1572: return result;
 20414  008F98  0100               	movlb	0	; () banked
 20415  008F9A  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 20416  008F9C  0012               	return	
 20417  008F9E                     __end_of_LORAWAN_GetMaxPayloadSize:
 20418                           	opt stack 0
 20419                           tosu	equ	0xFFF
 20420                           tosh	equ	0xFFE
 20421                           tosl	equ	0xFFD
 20422                           pclath	equ	0xFFA
 20423                           tblptru	equ	0xFF8
 20424                           tblptrh	equ	0xFF7
 20425                           tblptrl	equ	0xFF6
 20426                           tablat	equ	0xFF5
 20427                           prodh	equ	0xFF4
 20428                           prodl	equ	0xFF3
 20429                           intcon	equ	0xFF2
 20430                           intcon2	equ	0xFF1
 20431                           intcon3	equ	0xFF0
 20432                           indf0	equ	0xFEF
 20433                           postinc0	equ	0xFEE
 20434                           fsr0h	equ	0xFEA
 20435                           fsr0l	equ	0xFE9
 20436                           wreg	equ	0xFE8
 20437                           postinc1	equ	0xFE6
 20438                           postdec1	equ	0xFE5
 20439                           plusw1	equ	0xFE3
 20440                           fsr1h	equ	0xFE2
 20441                           fsr1l	equ	0xFE1
 20442                           indf2	equ	0xFDF
 20443                           postinc2	equ	0xFDE
 20444                           postdec2	equ	0xFDD
 20445                           plusw2	equ	0xFDB
 20446                           fsr2h	equ	0xFDA
 20447                           fsr2l	equ	0xFD9
 20448                           status	equ	0xFD8
 20449                           
 20450 ;; *************** function _AssemblePacket *****************
 20451 ;; Defined at:
 20452 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20453 ;; Parameters:    Size  Location     Type
 20454 ;;  confirmed       1    wreg     unsigned char 
 20455 ;;  port            1  123[BANK0 ] unsigned char 
 20456 ;;  buffer          2  124[BANK0 ] PTR unsigned char 
 20457 ;;		 -> payload(2), NULL(0), 
 20458 ;;  bufferLength    2  126[BANK0 ] unsigned int 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  confirmed       1  130[BANK0 ] unsigned char 
 20461 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 20462 ;;  macCmdIdx       1  133[BANK0 ] unsigned char 
 20463 ;;  fCtrl           1  132[BANK0 ] struct .
 20464 ;;  mhdr            1  131[BANK0 ] struct .
 20465 ;; Return value:  Size  Location     Type
 20466 ;;                  1    wreg      void 
 20467 ;; Registers used:
 20468 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20469 ;; Tracked objects:
 20470 ;;		On entry : 0/0
 20471 ;;		On exit  : 0/0
 20472 ;;		Unchanged: 0/0
 20473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20474 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20476 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20477 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20478 ;;Total ram usage:       12 bytes
 20479 ;; Hardware stack levels used:    1
 20480 ;; Hardware stack levels required when called:   12
 20481 ;; This function calls:
 20482 ;;		_AESCmac
 20483 ;;		_AssembleEncryptionBlock
 20484 ;;		_CountfOptsLength
 20485 ;;		_EncryptFRMPayload
 20486 ;;		_FindSmallestDataRate
 20487 ;;		_IncludeMacCommandsResponse
 20488 ;;		_memcpy
 20489 ;;		_memset
 20490 ;; This function is called by:
 20491 ;;		_LORAWAN_Send
 20492 ;; This function uses a non-reentrant model
 20493 ;;
 20494                           
 20495                           	psect	text96
 20496  0027BC                     __ptext96:
 20497                           	opt stack 0
 20498  0027BC                     _AssemblePacket:
 20499                           	opt stack 16
 20500                           
 20501                           ; BSR set to: 0
 20502                           ;incstack = 0
 20503                           ;AssemblePacket@confirmed stored from wreg
 20504  0027BC  0100               	movlb	0	; () banked
 20505  0027BE  6FE2               	movwf	AssemblePacket@confirmed& (0+255),b
 20506                           
 20507                           ;lorawan.c: 1674: Mhdr_t mhdr;
 20508                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 20509  0027C0  0E10               	movlw	16
 20510  0027C2  0100               	movlb	0	; () banked
 20511  0027C4  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20512                           
 20513                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 20514                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 20515  0027C6  0E00               	movlw	0
 20516  0027C8  0100               	movlb	0	; () banked
 20517  0027CA  6FE5               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 20518                           
 20519                           ; BSR set to: 0
 20520                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 20521  0027CC  0EE3               	movlw	low AssemblePacket@mhdr
 20522  0027CE  0100               	movlb	0	; () banked
 20523  0027D0  6F64               	movwf	memset@p1& (0+255),b
 20524  0027D2  0E00               	movlw	high AssemblePacket@mhdr
 20525  0027D4  0100               	movlb	0	; () banked
 20526  0027D6  6F65               	movwf	(memset@p1+1)& (0+255),b
 20527  0027D8  0E00               	movlw	0
 20528  0027DA  0100               	movlb	0	; () banked
 20529  0027DC  6F67               	movwf	(memset@c+1)& (0+255),b
 20530  0027DE  0E00               	movlw	0
 20531  0027E0  6F66               	movwf	memset@c& (0+255),b
 20532  0027E2  0E00               	movlw	0
 20533  0027E4  0100               	movlb	0	; () banked
 20534  0027E6  6F69               	movwf	(memset@n+1)& (0+255),b
 20535  0027E8  0E01               	movlw	1
 20536  0027EA  6F68               	movwf	memset@n& (0+255),b
 20537  0027EC  ECCE  F04D         	call	_memset	;wreg free
 20538                           
 20539                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 20540  0027F0  0EE0               	movlw	low _macBuffer
 20541  0027F2  0100               	movlb	0	; () banked
 20542  0027F4  6F64               	movwf	memset@p1& (0+255),b
 20543  0027F6  0E04               	movlw	high _macBuffer
 20544  0027F8  0100               	movlb	0	; () banked
 20545  0027FA  6F65               	movwf	(memset@p1+1)& (0+255),b
 20546  0027FC  0E00               	movlw	0
 20547  0027FE  0100               	movlb	0	; () banked
 20548  002800  6F67               	movwf	(memset@c+1)& (0+255),b
 20549  002802  0E00               	movlw	0
 20550  002804  6F66               	movwf	memset@c& (0+255),b
 20551  002806  0E01               	movlw	1
 20552  002808  0100               	movlb	0	; () banked
 20553  00280A  6F69               	movwf	(memset@n+1)& (0+255),b
 20554  00280C  0E0F               	movlw	15
 20555  00280E  6F68               	movwf	memset@n& (0+255),b
 20556  002810  ECCE  F04D         	call	_memset	;wreg free
 20557                           
 20558                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 20559  002814  0EAA               	movlw	low _aesBuffer
 20560  002816  0100               	movlb	0	; () banked
 20561  002818  6F64               	movwf	memset@p1& (0+255),b
 20562  00281A  0E01               	movlw	high _aesBuffer
 20563  00281C  0100               	movlb	0	; () banked
 20564  00281E  6F65               	movwf	(memset@p1+1)& (0+255),b
 20565  002820  0E00               	movlw	0
 20566  002822  0100               	movlb	0	; () banked
 20567  002824  6F67               	movwf	(memset@c+1)& (0+255),b
 20568  002826  0E00               	movlw	0
 20569  002828  6F66               	movwf	memset@c& (0+255),b
 20570  00282A  0E00               	movlw	0
 20571  00282C  0100               	movlb	0	; () banked
 20572  00282E  6F69               	movwf	(memset@n+1)& (0+255),b
 20573  002830  0E10               	movlw	16
 20574  002832  6F68               	movwf	memset@n& (0+255),b
 20575  002834  ECCE  F04D         	call	_memset	;wreg free
 20576                           
 20577                           ;lorawan.c: 1683: if (confirmed == 1)
 20578  002838  0100               	movlb	0	; () banked
 20579  00283A  05E2               	decf	AssemblePacket@confirmed& (0+255),w,b
 20580  00283C  A4D8               	btfss	status,2,c
 20581  00283E  D008               	goto	l14949
 20582                           
 20583                           ; BSR set to: 0
 20584                           ;lorawan.c: 1684: {
 20585                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 20586  002840  0100               	movlb	0	; () banked
 20587  002842  51E3               	movf	AssemblePacket@mhdr& (0+255),w,b
 20588  002844  0B1F               	andlw	-225
 20589  002846  0980               	iorlw	128
 20590  002848  6FE3               	movwf	AssemblePacket@mhdr& (0+255),b
 20591                           
 20592                           ; BSR set to: 0
 20593                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 20594  00284A  0102               	movlb	2	; () banked
 20595  00284C  8100               	bsf	_loRa& (0+255),0,b
 20596                           
 20597                           ;lorawan.c: 1687: }
 20598  00284E  D005               	goto	l2179
 20599  002850                     l14949:
 20600                           
 20601                           ;lorawan.c: 1688: else
 20602                           ;lorawan.c: 1689: {
 20603                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 20604  002850  0100               	movlb	0	; () banked
 20605  002852  51E3               	movf	AssemblePacket@mhdr& (0+255),w,b
 20606  002854  0B1F               	andlw	-225
 20607  002856  0940               	iorlw	64
 20608  002858  6FE3               	movwf	AssemblePacket@mhdr& (0+255),b
 20609  00285A                     l2179:
 20610                           
 20611                           ;lorawan.c: 1691: }
 20612                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 20613  00285A  0EFC               	movlw	-4
 20614  00285C  0100               	movlb	0	; () banked
 20615  00285E  17E3               	andwf	AssemblePacket@mhdr& (0+255),f,b
 20616                           
 20617                           ; BSR set to: 0
 20618                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 20619  002860  0100               	movlb	0	; () banked
 20620  002862  95E3               	bcf	AssemblePacket@mhdr& (0+255),2,b
 20621  002864  97E3               	bcf	AssemblePacket@mhdr& (0+255),3,b
 20622  002866  99E3               	bcf	AssemblePacket@mhdr& (0+255),4,b
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 20626  002868  0100               	movlb	0	; () banked
 20627  00286A  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20628  00286C  0D01               	mullw	1
 20629  00286E  0EE0               	movlw	low _macBuffer
 20630  002870  24F3               	addwf	prodl,w,c
 20631  002872  6ED9               	movwf	fsr2l,c
 20632  002874  0E04               	movlw	high _macBuffer
 20633  002876  20F4               	addwfc	prodh,w,c
 20634  002878  6EDA               	movwf	fsr2h,c
 20635  00287A  C0E3  FFDF         	movff	AssemblePacket@mhdr,indf2
 20636                           
 20637                           ; BSR set to: 0
 20638  00287E  0100               	movlb	0	; () banked
 20639  002880  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20640                           
 20641                           ; BSR set to: 0
 20642                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 20643  002882  0100               	movlb	0	; () banked
 20644  002884  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20645  002886  0D01               	mullw	1
 20646  002888  0EE0               	movlw	low _macBuffer
 20647  00288A  24F3               	addwf	prodl,w,c
 20648  00288C  0100               	movlb	0	; () banked
 20649  00288E  6F64               	movwf	memcpy@d1& (0+255),b
 20650  002890  0E04               	movlw	high _macBuffer
 20651  002892  20F4               	addwfc	prodh,w,c
 20652  002894  0100               	movlb	0	; () banked
 20653  002896  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20654  002898  0E1E               	movlw	low (_loRa+30)
 20655  00289A  0100               	movlb	0	; () banked
 20656  00289C  6F66               	movwf	memcpy@s1& (0+255),b
 20657  00289E  0E02               	movlw	high (_loRa+30)
 20658  0028A0  0100               	movlb	0	; () banked
 20659  0028A2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20660  0028A4  0E00               	movlw	0
 20661  0028A6  0100               	movlb	0	; () banked
 20662  0028A8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 20663  0028AA  0E04               	movlw	4
 20664  0028AC  6F68               	movwf	memcpy@n& (0+255),b
 20665  0028AE  ECCA  F048         	call	_memcpy	;wreg free
 20666                           
 20667                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 20668  0028B2  0100               	movlb	0	; () banked
 20669  0028B4  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20670  0028B6  0F04               	addlw	4
 20671  0028B8  0100               	movlb	0	; () banked
 20672  0028BA  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20673                           
 20674                           ; BSR set to: 0
 20675                           ;lorawan.c: 1699: fCtrl.value = 0;
 20676  0028BC  0E00               	movlw	0
 20677  0028BE  0100               	movlb	0	; () banked
 20678  0028C0  6FE4               	movwf	AssemblePacket@fCtrl& (0+255),b
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 20682  0028C2  0102               	movlb	2	; () banked
 20683  0028C4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 20684  0028C6  D04D               	goto	l2180
 20685                           
 20686                           ; BSR set to: 2
 20687                           ;lorawan.c: 1702: {
 20688                           ;lorawan.c: 1703: fCtrl.adr = 1;
 20689  0028C8  0100               	movlb	0	; () banked
 20690  0028CA  8FE4               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 20691                           
 20692                           ; BSR set to: 0
 20693                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 20694  0028CC  0102               	movlb	2	; () banked
 20695  0028CE  51DF               	movf	(_loRa+223)& (0+255),w,b
 20696  0028D0  0102               	movlb	2	; () banked
 20697  0028D2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20698  0028D4  B0D8               	btfsc	status,0,c
 20699  0028D6  D01B               	goto	l14979
 20700                           
 20701                           ; BSR set to: 2
 20702                           ;lorawan.c: 1705: {
 20703                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 20704  0028D8  0100               	movlb	0	; () banked
 20705  0028DA  8DE4               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 20706                           
 20707                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 20708  0028DC  0102               	movlb	2	; () banked
 20709  0028DE  8900               	bsf	_loRa& (0+255),4,b
 20710                           
 20711                           ; BSR set to: 2
 20712                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 20713  0028E0  0102               	movlb	2	; () banked
 20714  0028E2  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 20715  0028E4  2BD1               	incf	(_loRa+209)& (0+255),f,b
 20716                           
 20717                           ; BSR set to: 2
 20718                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 20719  0028E6  0102               	movlb	2	; () banked
 20720  0028E8  51A2               	movf	(_loRa+162)& (0+255),w,b
 20721  0028EA  0100               	movlb	0	; () banked
 20722  0028EC  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20723  0028EE  6BE1               	clrf	(??_AssemblePacket+1)& (0+255),b
 20724  0028F0  0102               	movlb	2	; () banked
 20725  0028F2  51D0               	movf	(_loRa+208)& (0+255),w,b
 20726  0028F4  0100               	movlb	0	; () banked
 20727  0028F6  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 20728  0028F8  E10D               	bnz	l14981
 20729  0028FA  0102               	movlb	2	; () banked
 20730  0028FC  51D1               	movf	(_loRa+209)& (0+255),w,b
 20731  0028FE  0100               	movlb	0	; () banked
 20732  002900  19E1               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 20733  002902  A4D8               	btfss	status,2,c
 20734  002904  D007               	goto	l14981
 20735                           
 20736                           ; BSR set to: 0
 20737                           ;lorawan.c: 1711: {
 20738                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 20739  002906  0E00               	movlw	0
 20740  002908  0102               	movlb	2	; () banked
 20741  00290A  6FEE               	movwf	(_loRa+238)& (0+255),b
 20742  00290C  D027               	goto	l2184
 20743  00290E                     l14979:
 20744                           
 20745                           ; BSR set to: 0
 20746                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 20747  00290E  0102               	movlb	2	; () banked
 20748  002910  9900               	bcf	_loRa& (0+255),4,b
 20749                           
 20750                           ;lorawan.c: 1715: }
 20751  002912  D027               	goto	l2180
 20752  002914                     l14981:
 20753                           
 20754                           ;lorawan.c: 1716: else
 20755                           ;lorawan.c: 1717: {
 20756                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 20757  002914  0102               	movlb	2	; () banked
 20758  002916  51A2               	movf	(_loRa+162)& (0+255),w,b
 20759  002918  0100               	movlb	0	; () banked
 20760  00291A  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20761  00291C  6BE1               	clrf	(??_AssemblePacket+1)& (0+255),b
 20762  00291E  0102               	movlb	2	; () banked
 20763  002920  51D0               	movf	(_loRa+208)& (0+255),w,b
 20764  002922  0100               	movlb	0	; () banked
 20765  002924  5DE0               	subwf	??_AssemblePacket& (0+255),w,b
 20766  002926  0102               	movlb	2	; () banked
 20767  002928  51D1               	movf	(_loRa+209)& (0+255),w,b
 20768  00292A  0100               	movlb	0	; () banked
 20769  00292C  59E1               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 20770  00292E  B0D8               	btfsc	status,0,c
 20771  002930  D015               	goto	l2184
 20772                           
 20773                           ; BSR set to: 0
 20774                           ;lorawan.c: 1719: {
 20775                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 20776  002932  0102               	movlb	2	; () banked
 20777  002934  2BEE               	incf	(_loRa+238)& (0+255),f,b
 20778                           
 20779                           ; BSR set to: 2
 20780                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 20781  002936  0102               	movlb	2	; () banked
 20782  002938  51EE               	movf	(_loRa+238)& (0+255),w,b
 20783  00293A  0102               	movlb	2	; () banked
 20784  00293C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 20785  00293E  B0D8               	btfsc	status,0,c
 20786  002940  D010               	goto	l2180
 20787                           
 20788                           ; BSR set to: 2
 20789                           ;lorawan.c: 1725: {
 20790                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 20791  002942  0E00               	movlw	0
 20792  002944  0102               	movlb	2	; () banked
 20793  002946  6FEE               	movwf	(_loRa+238)& (0+255),b
 20794                           
 20795                           ; BSR set to: 2
 20796                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 20797  002948  ECCF  F038         	call	_FindSmallestDataRate	;wreg free
 20798  00294C  0900               	iorlw	0
 20799  00294E  A4D8               	btfss	status,2,c
 20800  002950  D008               	goto	l2180
 20801                           
 20802                           ;lorawan.c: 1729: {
 20803                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 20804  002952  0E00               	movlw	0
 20805  002954  0102               	movlb	2	; () banked
 20806  002956  6FD1               	movwf	(_loRa+209)& (0+255),b
 20807  002958  0E00               	movlw	0
 20808  00295A  6FD0               	movwf	(_loRa+208)& (0+255),b
 20809  00295C                     l2184:
 20810                           
 20811                           ; BSR set to: 0
 20812                           ;lorawan.c: 1737: else
 20813                           ;lorawan.c: 1738: {
 20814                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 20815  00295C  0100               	movlb	0	; () banked
 20816  00295E  9DE4               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 20817  002960  D7D6               	goto	l14979
 20818  002962                     l2180:
 20819                           
 20820                           ;lorawan.c: 1747: }
 20821                           ;lorawan.c: 1748: }
 20822                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 20823  002962  0102               	movlb	2	; () banked
 20824  002964  A300               	btfss	_loRa& (0+255),1,b
 20825  002966  D004               	goto	l2189
 20826                           
 20827                           ; BSR set to: 2
 20828                           ;lorawan.c: 1751: {
 20829                           ;lorawan.c: 1752: fCtrl.ack = 1;
 20830  002968  0100               	movlb	0	; () banked
 20831  00296A  8BE4               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 20832                           
 20833                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 20834  00296C  0102               	movlb	2	; () banked
 20835  00296E  9300               	bcf	_loRa& (0+255),1,b
 20836  002970                     l2189:
 20837                           
 20838                           ; BSR set to: 2
 20839                           ;lorawan.c: 1754: }
 20840                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 20841  002970  0100               	movlb	0	; () banked
 20842  002972  99E4               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 20843                           
 20844                           ; BSR set to: 0
 20845                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 20846  002974  0102               	movlb	2	; () banked
 20847  002976  51A7               	movf	(_loRa+167)& (0+255),w,b
 20848  002978  B4D8               	btfsc	status,2,c
 20849  00297A  D006               	goto	l2192
 20850                           
 20851                           ; BSR set to: 2
 20852  00297C  0100               	movlb	0	; () banked
 20853  00297E  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20854  002980  0100               	movlb	0	; () banked
 20855  002982  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20856  002984  A4D8               	btfss	status,2,c
 20857  002986  D006               	goto	l15003
 20858  002988                     l2192:
 20859                           
 20860                           ;lorawan.c: 1759: {
 20861                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 20862  002988  0100               	movlb	0	; () banked
 20863  00298A  91E4               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 20864  00298C  93E4               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 20865  00298E  95E4               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 20866  002990  97E4               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 20867                           
 20868                           ;lorawan.c: 1761: }
 20869  002992  D00C               	goto	l15005
 20870  002994                     l15003:
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;lorawan.c: 1763: else
 20874                           ;lorawan.c: 1764: {
 20875                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 20876  002994  EC50  F039         	call	_CountfOptsLength	;wreg free
 20877  002998  0100               	movlb	0	; () banked
 20878  00299A  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20879  00299C  0100               	movlb	0	; () banked
 20880  00299E  51E4               	movf	AssemblePacket@fCtrl& (0+255),w,b
 20881  0029A0  0100               	movlb	0	; () banked
 20882  0029A2  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 20883  0029A4  0BF0               	andlw	-16
 20884  0029A6  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 20885  0029A8  0100               	movlb	0	; () banked
 20886  0029AA  6FE4               	movwf	AssemblePacket@fCtrl& (0+255),b
 20887  0029AC                     l15005:
 20888                           
 20889                           ; BSR set to: 0
 20890                           ;lorawan.c: 1766: }
 20891                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 20892  0029AC  0100               	movlb	0	; () banked
 20893  0029AE  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20894  0029B0  0D01               	mullw	1
 20895  0029B2  0EE0               	movlw	low _macBuffer
 20896  0029B4  24F3               	addwf	prodl,w,c
 20897  0029B6  6ED9               	movwf	fsr2l,c
 20898  0029B8  0E04               	movlw	high _macBuffer
 20899  0029BA  20F4               	addwfc	prodh,w,c
 20900  0029BC  6EDA               	movwf	fsr2h,c
 20901  0029BE  C0E4  FFDF         	movff	AssemblePacket@fCtrl,indf2
 20902                           
 20903                           ; BSR set to: 0
 20904  0029C2  0100               	movlb	0	; () banked
 20905  0029C4  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20906                           
 20907                           ; BSR set to: 0
 20908                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 20909  0029C6  0100               	movlb	0	; () banked
 20910  0029C8  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20911  0029CA  0D01               	mullw	1
 20912  0029CC  0EE0               	movlw	low _macBuffer
 20913  0029CE  24F3               	addwf	prodl,w,c
 20914  0029D0  0100               	movlb	0	; () banked
 20915  0029D2  6F64               	movwf	memcpy@d1& (0+255),b
 20916  0029D4  0E04               	movlw	high _macBuffer
 20917  0029D6  20F4               	addwfc	prodh,w,c
 20918  0029D8  0100               	movlb	0	; () banked
 20919  0029DA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20920  0029DC  0E06               	movlw	low (_loRa+6)
 20921  0029DE  0100               	movlb	0	; () banked
 20922  0029E0  6F66               	movwf	memcpy@s1& (0+255),b
 20923  0029E2  0E02               	movlw	high (_loRa+6)
 20924  0029E4  0100               	movlb	0	; () banked
 20925  0029E6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20926  0029E8  0E00               	movlw	0
 20927  0029EA  0100               	movlb	0	; () banked
 20928  0029EC  6F69               	movwf	(memcpy@n+1)& (0+255),b
 20929  0029EE  0E02               	movlw	2
 20930  0029F0  6F68               	movwf	memcpy@n& (0+255),b
 20931  0029F2  ECCA  F048         	call	_memcpy	;wreg free
 20932                           
 20933                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 20934  0029F6  0100               	movlb	0	; () banked
 20935  0029F8  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20936  0029FA  0F02               	addlw	2
 20937  0029FC  0100               	movlb	0	; () banked
 20938  0029FE  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20939                           
 20940                           ; BSR set to: 0
 20941                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 20942  002A00  0102               	movlb	2	; () banked
 20943  002A02  51A7               	movf	(_loRa+167)& (0+255),w,b
 20944  002A04  B4D8               	btfsc	status,2,c
 20945  002A06  D017               	goto	l15019
 20946                           
 20947                           ; BSR set to: 2
 20948  002A08  0100               	movlb	0	; () banked
 20949  002A0A  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20950  002A0C  0100               	movlb	0	; () banked
 20951  002A0E  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20952  002A10  B4D8               	btfsc	status,2,c
 20953  002A12  D011               	goto	l15019
 20954                           
 20955                           ; BSR set to: 0
 20956                           ;lorawan.c: 1774: {
 20957                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 20958  002A14  0EE0               	movlw	low _macBuffer
 20959  002A16  0100               	movlb	0	; () banked
 20960  002A18  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 20961  002A1A  0E04               	movlw	high _macBuffer
 20962  002A1C  0100               	movlb	0	; () banked
 20963  002A1E  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 20964  002A20  0EE6               	movlw	low AssemblePacket@bufferIndex
 20965  002A22  0100               	movlb	0	; () banked
 20966  002A24  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 20967  002A26  0E00               	movlw	high AssemblePacket@bufferIndex
 20968  002A28  0100               	movlb	0	; () banked
 20969  002A2A  6F67               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 20970  002A2C  0E01               	movlw	1
 20971  002A2E  0100               	movlb	0	; () banked
 20972  002A30  6F68               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 20973  002A32  ECB3  F00E         	call	_IncludeMacCommandsResponse	;wreg free
 20974  002A36                     l15019:
 20975                           
 20976                           ;lorawan.c: 1776: }
 20977                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 20978  002A36  0100               	movlb	0	; () banked
 20979  002A38  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20980  002A3A  0D01               	mullw	1
 20981  002A3C  0EE0               	movlw	low _macBuffer
 20982  002A3E  24F3               	addwf	prodl,w,c
 20983  002A40  6ED9               	movwf	fsr2l,c
 20984  002A42  0E04               	movlw	high _macBuffer
 20985  002A44  20F4               	addwfc	prodh,w,c
 20986  002A46  6EDA               	movwf	fsr2h,c
 20987  002A48  C0DB  FFDF         	movff	AssemblePacket@port,indf2
 20988                           
 20989                           ; BSR set to: 0
 20990  002A4C  0100               	movlb	0	; () banked
 20991  002A4E  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20992                           
 20993                           ; BSR set to: 0
 20994                           ;lorawan.c: 1780: if (bufferLength != 0)
 20995  002A50  0100               	movlb	0	; () banked
 20996  002A52  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20997  002A54  0100               	movlb	0	; () banked
 20998  002A56  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20999  002A58  B4D8               	btfsc	status,2,c
 21000  002A5A  D03E               	goto	l15029
 21001                           
 21002                           ; BSR set to: 0
 21003                           ;lorawan.c: 1781: {
 21004                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 21005  002A5C  0100               	movlb	0	; () banked
 21006  002A5E  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21007  002A60  0D01               	mullw	1
 21008  002A62  0EE0               	movlw	low _macBuffer
 21009  002A64  24F3               	addwf	prodl,w,c
 21010  002A66  0100               	movlb	0	; () banked
 21011  002A68  6F64               	movwf	memcpy@d1& (0+255),b
 21012  002A6A  0E04               	movlw	high _macBuffer
 21013  002A6C  20F4               	addwfc	prodh,w,c
 21014  002A6E  0100               	movlb	0	; () banked
 21015  002A70  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21016  002A72  C0DC  F066         	movff	AssemblePacket@buffer,memcpy@s1
 21017  002A76  C0DD  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 21018  002A7A  C0DE  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 21019  002A7E  C0DF  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 21020  002A82  ECCA  F048         	call	_memcpy	;wreg free
 21021                           
 21022                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 21023  002A86  C0DC  F0A5         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 21024  002A8A  C0DD  F0A6         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 21025  002A8E  C0DE  F0A7         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 21026  002A92  0E00               	movlw	0
 21027  002A94  0100               	movlb	0	; () banked
 21028  002A96  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 21029  002A98  C206  F0A9         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21030  002A9C  C207  F0AA         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21031  002AA0  C208  F0AB         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21032  002AA4  C209  F0AC         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21033  002AA8  0E32               	movlw	low (_loRa+50)
 21034  002AAA  0100               	movlb	0	; () banked
 21035  002AAC  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 21036  002AAE  0E02               	movlw	high (_loRa+50)
 21037  002AB0  0100               	movlb	0	; () banked
 21038  002AB2  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21039  002AB4  C0E6  F0AF         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21040  002AB8  0EE0               	movlw	low _macBuffer
 21041  002ABA  0100               	movlb	0	; () banked
 21042  002ABC  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21043  002ABE  0E04               	movlw	high _macBuffer
 21044  002AC0  0100               	movlb	0	; () banked
 21045  002AC2  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21046  002AC4  0E00               	movlw	0
 21047  002AC6  0100               	movlb	0	; () banked
 21048  002AC8  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21049  002ACA  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 21050                           
 21051                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 21052  002ACE  0100               	movlb	0	; () banked
 21053  002AD0  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21054  002AD2  0100               	movlb	0	; () banked
 21055  002AD4  25DE               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 21056  002AD6  D03F               	goto	L10
 21057  002AD8                     l15029:
 21058                           
 21059                           ; BSR set to: 0
 21060                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 21061  002AD8  0102               	movlb	2	; () banked
 21062  002ADA  51A7               	movf	(_loRa+167)& (0+255),w,b
 21063  002ADC  B4D8               	btfsc	status,2,c
 21064  002ADE  D03D               	goto	l15035
 21065                           
 21066                           ; BSR set to: 2
 21067                           ;lorawan.c: 1787: {
 21068                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 21069  002AE0  0EEF               	movlw	low _radioBuffer
 21070  002AE2  0100               	movlb	0	; () banked
 21071  002AE4  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 21072  002AE6  0E05               	movlw	high _radioBuffer
 21073  002AE8  0100               	movlb	0	; () banked
 21074  002AEA  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 21075  002AEC  0EE5               	movlw	low AssemblePacket@macCmdIdx
 21076  002AEE  0100               	movlb	0	; () banked
 21077  002AF0  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 21078  002AF2  0E00               	movlw	high AssemblePacket@macCmdIdx
 21079  002AF4  0100               	movlb	0	; () banked
 21080  002AF6  6F67               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 21081  002AF8  0E00               	movlw	0
 21082  002AFA  0100               	movlb	0	; () banked
 21083  002AFC  6F68               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 21084  002AFE  ECB3  F00E         	call	_IncludeMacCommandsResponse	;wreg free
 21085                           
 21086                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 21087  002B02  0EEF               	movlw	low _radioBuffer
 21088  002B04  0100               	movlb	0	; () banked
 21089  002B06  6FA5               	movwf	EncryptFRMPayload@buffer& (0+255),b
 21090  002B08  0E05               	movlw	high _radioBuffer
 21091  002B0A  0100               	movlb	0	; () banked
 21092  002B0C  6FA6               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 21093  002B0E  C0E5  F0A7         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 21094  002B12  0E00               	movlw	0
 21095  002B14  0100               	movlb	0	; () banked
 21096  002B16  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 21097  002B18  C206  F0A9         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21098  002B1C  C207  F0AA         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21099  002B20  C208  F0AB         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21100  002B24  C209  F0AC         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21101  002B28  0E22               	movlw	low (_loRa+34)
 21102  002B2A  0100               	movlb	0	; () banked
 21103  002B2C  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 21104  002B2E  0E02               	movlw	high (_loRa+34)
 21105  002B30  0100               	movlb	0	; () banked
 21106  002B32  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21107  002B34  C0E6  F0AF         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21108  002B38  0EE0               	movlw	low _macBuffer
 21109  002B3A  0100               	movlb	0	; () banked
 21110  002B3C  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21111  002B3E  0E04               	movlw	high _macBuffer
 21112  002B40  0100               	movlb	0	; () banked
 21113  002B42  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21114  002B44  0E00               	movlw	0
 21115  002B46  0100               	movlb	0	; () banked
 21116  002B48  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21117  002B4A  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 21118                           
 21119                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 21120  002B4E  0100               	movlb	0	; () banked
 21121  002B50  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21122  002B52  0100               	movlb	0	; () banked
 21123  002B54  25E5               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 21124  002B56                     L10:
 21125  002B56  0100               	movlb	0	; () banked
 21126  002B58  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21127  002B5A                     l15035:
 21128                           
 21129                           ;lorawan.c: 1793: }
 21130                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 21131  002B5A  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 21132  002B5E  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 21133  002B62  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 21134  002B66  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 21135  002B6A  0100               	movlb	0	; () banked
 21136  002B6C  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21137  002B6E  0FF0               	addlw	240
 21138  002B70  0100               	movlb	0	; () banked
 21139  002B72  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 21140  002B74  0E49               	movlw	73
 21141  002B76  0100               	movlb	0	; () banked
 21142  002B78  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21143  002B7A  0E00               	movlw	0
 21144  002B7C  0100               	movlb	0	; () banked
 21145  002B7E  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 21146  002B80  0E00               	movlw	0
 21147  002B82  EC0F  F036         	call	_AssembleEncryptionBlock
 21148                           
 21149                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 21150  002B86  0EE0               	movlw	low _macBuffer
 21151  002B88  0100               	movlb	0	; () banked
 21152  002B8A  6F64               	movwf	memcpy@d1& (0+255),b
 21153  002B8C  0E04               	movlw	high _macBuffer
 21154  002B8E  0100               	movlb	0	; () banked
 21155  002B90  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21156  002B92  0EAA               	movlw	low _aesBuffer
 21157  002B94  0100               	movlb	0	; () banked
 21158  002B96  6F66               	movwf	memcpy@s1& (0+255),b
 21159  002B98  0E01               	movlw	high _aesBuffer
 21160  002B9A  0100               	movlb	0	; () banked
 21161  002B9C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21162  002B9E  0E00               	movlw	0
 21163  002BA0  0100               	movlb	0	; () banked
 21164  002BA2  6F69               	movwf	(memcpy@n+1)& (0+255),b
 21165  002BA4  0E10               	movlw	16
 21166  002BA6  6F68               	movwf	memcpy@n& (0+255),b
 21167  002BA8  ECCA  F048         	call	_memcpy	;wreg free
 21168                           
 21169                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 21170  002BAC  0E22               	movlw	low (_loRa+34)
 21171  002BAE  0100               	movlb	0	; () banked
 21172  002BB0  6FCD               	movwf	AESCmac@key& (0+255),b
 21173  002BB2  0E02               	movlw	high (_loRa+34)
 21174  002BB4  0100               	movlb	0	; () banked
 21175  002BB6  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 21176  002BB8  0EAA               	movlw	low _aesBuffer
 21177  002BBA  0100               	movlb	0	; () banked
 21178  002BBC  6FCF               	movwf	AESCmac@output& (0+255),b
 21179  002BBE  0E01               	movlw	high _aesBuffer
 21180  002BC0  0100               	movlb	0	; () banked
 21181  002BC2  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 21182  002BC4  0EE0               	movlw	low _macBuffer
 21183  002BC6  0100               	movlb	0	; () banked
 21184  002BC8  6FD1               	movwf	AESCmac@input& (0+255),b
 21185  002BCA  0E04               	movlw	high _macBuffer
 21186  002BCC  0100               	movlb	0	; () banked
 21187  002BCE  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 21188  002BD0  C0E6  F0D3         	movff	AssemblePacket@bufferIndex,AESCmac@size
 21189  002BD4  EC13  F016         	call	_AESCmac	;wreg free
 21190                           
 21191                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 21192  002BD8  0100               	movlb	0	; () banked
 21193  002BDA  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21194  002BDC  0D01               	mullw	1
 21195  002BDE  0EE0               	movlw	low _macBuffer
 21196  002BE0  24F3               	addwf	prodl,w,c
 21197  002BE2  0100               	movlb	0	; () banked
 21198  002BE4  6F64               	movwf	memcpy@d1& (0+255),b
 21199  002BE6  0E04               	movlw	high _macBuffer
 21200  002BE8  20F4               	addwfc	prodh,w,c
 21201  002BEA  0100               	movlb	0	; () banked
 21202  002BEC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21203  002BEE  0EAA               	movlw	low _aesBuffer
 21204  002BF0  0100               	movlb	0	; () banked
 21205  002BF2  6F66               	movwf	memcpy@s1& (0+255),b
 21206  002BF4  0E01               	movlw	high _aesBuffer
 21207  002BF6  0100               	movlb	0	; () banked
 21208  002BF8  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21209  002BFA  0E00               	movlw	0
 21210  002BFC  0100               	movlb	0	; () banked
 21211  002BFE  6F69               	movwf	(memcpy@n+1)& (0+255),b
 21212  002C00  0E04               	movlw	4
 21213  002C02  6F68               	movwf	memcpy@n& (0+255),b
 21214  002C04  ECCA  F048         	call	_memcpy	;wreg free
 21215                           
 21216                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 21217  002C08  0100               	movlb	0	; () banked
 21218  002C0A  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21219  002C0C  0F04               	addlw	4
 21220  002C0E  0100               	movlb	0	; () banked
 21221  002C10  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21222                           
 21223                           ; BSR set to: 0
 21224                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 21225  002C12  0EF0               	movlw	240
 21226  002C14  0100               	movlb	0	; () banked
 21227  002C16  25E6               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 21228  002C18  0102               	movlb	2	; () banked
 21229  002C1A  6FD4               	movwf	(_loRa+212)& (0+255),b
 21230  002C1C  0102               	movlb	2	; () banked
 21231  002C1E  6BD5               	clrf	(_loRa+213)& (0+255),b
 21232  002C20  0EFF               	movlw	255
 21233  002C22  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 21234                           
 21235                           ; BSR set to: 2
 21236  002C24  0012               	return		;funcret
 21237  002C26                     __end_of_AssemblePacket:
 21238                           	opt stack 0
 21239                           tosu	equ	0xFFF
 21240                           tosh	equ	0xFFE
 21241                           tosl	equ	0xFFD
 21242                           pclath	equ	0xFFA
 21243                           tblptru	equ	0xFF8
 21244                           tblptrh	equ	0xFF7
 21245                           tblptrl	equ	0xFF6
 21246                           tablat	equ	0xFF5
 21247                           prodh	equ	0xFF4
 21248                           prodl	equ	0xFF3
 21249                           intcon	equ	0xFF2
 21250                           intcon2	equ	0xFF1
 21251                           intcon3	equ	0xFF0
 21252                           indf0	equ	0xFEF
 21253                           postinc0	equ	0xFEE
 21254                           fsr0h	equ	0xFEA
 21255                           fsr0l	equ	0xFE9
 21256                           wreg	equ	0xFE8
 21257                           postinc1	equ	0xFE6
 21258                           postdec1	equ	0xFE5
 21259                           plusw1	equ	0xFE3
 21260                           fsr1h	equ	0xFE2
 21261                           fsr1l	equ	0xFE1
 21262                           indf2	equ	0xFDF
 21263                           postinc2	equ	0xFDE
 21264                           postdec2	equ	0xFDD
 21265                           plusw2	equ	0xFDB
 21266                           fsr2h	equ	0xFDA
 21267                           fsr2l	equ	0xFD9
 21268                           status	equ	0xFD8
 21269                           
 21270 ;; *************** function _IncludeMacCommandsResponse *****************
 21271 ;; Defined at:
 21272 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21273 ;; Parameters:    Size  Location     Type
 21274 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 21275 ;;		 -> macBuffer(271), radioBuffer(271), 
 21276 ;;  pBufferIndex    2    6[BANK0 ] PTR unsigned char 
 21277 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 21278 ;;  bIncludeInFo    1    8[BANK0 ] unsigned char 
 21279 ;; Auto vars:     Size  Location     Type
 21280 ;;  bufferIndex     1   18[BANK0 ] unsigned char 
 21281 ;;  i               1   17[BANK0 ] unsigned char 
 21282 ;; Return value:  Size  Location     Type
 21283 ;;                  1    wreg      void 
 21284 ;; Registers used:
 21285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21286 ;; Tracked objects:
 21287 ;;		On entry : 0/0
 21288 ;;		On exit  : 0/0
 21289 ;;		Unchanged: 0/0
 21290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21291 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21293 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21294 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21295 ;;Total ram usage:       15 bytes
 21296 ;; Hardware stack levels used:    1
 21297 ;; Hardware stack levels required when called:    8
 21298 ;; This function calls:
 21299 ;;		_RADIO_GetPacketSnr
 21300 ;; This function is called by:
 21301 ;;		_AssemblePacket
 21302 ;; This function uses a non-reentrant model
 21303 ;;
 21304                           
 21305                           	psect	text97
 21306  001D66                     __ptext97:
 21307                           	opt stack 0
 21308  001D66                     _IncludeMacCommandsResponse:
 21309                           	opt stack 19
 21310                           
 21311                           ;lorawan.c: 1847: uint8_t i = 0;
 21312                           
 21313                           ; BSR set to: 2
 21314                           ;incstack = 0
 21315  001D66  0E00               	movlw	0
 21316  001D68  0100               	movlb	0	; () banked
 21317  001D6A  6F71               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 21318                           
 21319                           ; BSR set to: 0
 21320                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 21321  001D6C  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 21322  001D70  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 21323  001D74  50DF               	movf	indf2,w,c
 21324  001D76  0100               	movlb	0	; () banked
 21325  001D78  6F72               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 21326                           
 21327                           ; BSR set to: 0
 21328                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 21329  001D7A  0E00               	movlw	0
 21330  001D7C  0100               	movlb	0	; () banked
 21331  001D7E  6F71               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 21332  001D80  D293               	goto	l14619
 21333  001D82                     l14531:
 21334                           
 21335                           ; BSR set to: 0
 21336                           ;lorawan.c: 1851: {
 21337                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 21338  001D82  0100               	movlb	0	; () banked
 21339  001D84  5168               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 21340  001D86  0100               	movlb	0	; () banked
 21341  001D88  B4D8               	btfsc	status,2,c
 21342  001D8A  D26D               	goto	l14615
 21343                           
 21344                           ; BSR set to: 0
 21345  001D8C  0100               	movlb	0	; () banked
 21346  001D8E  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21347  001D90  0D02               	mullw	2
 21348  001D92  0EA8               	movlw	low (_loRa+168)
 21349  001D94  24F3               	addwf	prodl,w,c
 21350  001D96  6ED9               	movwf	fsr2l,c
 21351  001D98  0E02               	movlw	high (_loRa+168)
 21352  001D9A  20F4               	addwfc	prodh,w,c
 21353  001D9C  6EDA               	movwf	fsr2h,c
 21354  001D9E  28DE               	incf	postinc2,w,c
 21355  001DA0  B4D8               	btfsc	status,2,c
 21356  001DA2  D261               	goto	l14615
 21357                           
 21358                           ; BSR set to: 0
 21359                           ;lorawan.c: 1853: {
 21360                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 21361  001DA4  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 21362  001DA8  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 21363  001DAC  50DF               	movf	indf2,w,c
 21364  001DAE  0100               	movlb	0	; () banked
 21365  001DB0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21366  001DB2  6B6A               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21367  001DB4  0100               	movlb	0	; () banked
 21368  001DB6  1F69               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 21369  001DB8  1F6A               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21370  001DBA  4B69               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 21371  001DBC  2B6A               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21372  001DBE  0EFE               	movlw	254
 21373  001DC0  0100               	movlb	0	; () banked
 21374  001DC2  6F6B               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 21375  001DC4  0EFF               	movlw	255
 21376  001DC6  0100               	movlb	0	; () banked
 21377  001DC8  6F6C               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 21378  001DCA  0100               	movlb	0	; () banked
 21379  001DCC  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21380  001DCE  0D02               	mullw	2
 21381  001DD0  0EA8               	movlw	low (_loRa+168)
 21382  001DD2  24F3               	addwf	prodl,w,c
 21383  001DD4  6ED9               	movwf	fsr2l,c
 21384  001DD6  0E02               	movlw	high (_loRa+168)
 21385  001DD8  20F4               	addwfc	prodh,w,c
 21386  001DDA  6EDA               	movwf	fsr2h,c
 21387  001DDC  50DF               	movf	indf2,w,c
 21388  001DDE  0100               	movlb	0	; () banked
 21389  001DE0  6F6D               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 21390  001DE2  6B6E               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 21391  001DE4  0100               	movlb	0	; () banked
 21392  001DE6  516B               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 21393  001DE8  0100               	movlb	0	; () banked
 21394  001DEA  276D               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 21395  001DEC  0100               	movlb	0	; () banked
 21396  001DEE  516C               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 21397  001DF0  0100               	movlb	0	; () banked
 21398  001DF2  236E               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 21399  001DF4  0E8E               	movlw	low _macEndDevCmdReplyLen
 21400  001DF6  0100               	movlb	0	; () banked
 21401  001DF8  256D               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 21402  001DFA  6EF6               	movwf	tblptrl,c
 21403  001DFC  0EFF               	movlw	high _macEndDevCmdReplyLen
 21404  001DFE  216E               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 21405  001E00  6EF7               	movwf	tblptrh,c
 21406  001E02                     	if	1	;There are 3 active tblptr bytes
 21407  001E02  6AF8               	clrf	tblptru,c
 21408  001E04  0E00               	movlw	low (__mediumconst shr (0+16))
 21409  001E06  22F8               	addwfc	tblptru,f,c
 21410  001E08                     	endif
 21411  001E08  0008               	tblrd		*
 21412  001E0A  50F5               	movf	tablat,w,c
 21413  001E0C  C072  F06F         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 21414  001E10  0100               	movlb	0	; () banked
 21415  001E12  6B70               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 21416  001E14  0100               	movlb	0	; () banked
 21417  001E16  276F               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 21418  001E18  0E00               	movlw	0
 21419  001E1A  2370               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 21420  001E1C  0100               	movlb	0	; () banked
 21421  001E1E  5169               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 21422  001E20  0100               	movlb	0	; () banked
 21423  001E22  276F               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 21424  001E24  0100               	movlb	0	; () banked
 21425  001E26  516A               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21426  001E28  0100               	movlb	0	; () banked
 21427  001E2A  2370               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 21428  001E2C  0100               	movlb	0	; () banked
 21429  001E2E  BF70               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 21430  001E30  D21A               	goto	l14615
 21431  001E32  0100               	movlb	0	; () banked
 21432  001E34  5170               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 21433  001E36  E106               	bnz	u16540
 21434  001E38  0E10               	movlw	16
 21435  001E3A  0100               	movlb	0	; () banked
 21436  001E3C  5D6F               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 21437  001E3E  B0D8               	btfsc	status,0,c
 21438  001E40  D239               	goto	l14621
 21439  001E42  D211               	goto	l14615
 21440  001E44                     u16540:
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;lorawan.c: 1855: {
 21444                           ;lorawan.c: 1856: break;
 21445  001E44  D237               	goto	l14621
 21446  001E46                     l14539:
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;lorawan.c: 1862: {
 21450                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 21451  001E46  0100               	movlb	0	; () banked
 21452  001E48  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21453  001E4A  0D01               	mullw	1
 21454  001E4C  50F3               	movf	prodl,w,c
 21455  001E4E  0100               	movlb	0	; () banked
 21456  001E50  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21457  001E52  6ED9               	movwf	fsr2l,c
 21458  001E54  50F4               	movf	prodh,w,c
 21459  001E56  0100               	movlb	0	; () banked
 21460  001E58  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21461  001E5A  6EDA               	movwf	fsr2h,c
 21462  001E5C  0E03               	movlw	3
 21463  001E5E  6EDF               	movwf	indf2,c
 21464                           
 21465                           ; BSR set to: 0
 21466  001E60  0100               	movlb	0	; () banked
 21467  001E62  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21468                           
 21469                           ; BSR set to: 0
 21470                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 21471  001E64  0100               	movlb	0	; () banked
 21472  001E66  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21473  001E68  0D01               	mullw	1
 21474  001E6A  50F3               	movf	prodl,w,c
 21475  001E6C  0100               	movlb	0	; () banked
 21476  001E6E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21477  001E70  6ED9               	movwf	fsr2l,c
 21478  001E72  50F4               	movf	prodh,w,c
 21479  001E74  0100               	movlb	0	; () banked
 21480  001E76  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21481  001E78  6EDA               	movwf	fsr2h,c
 21482  001E7A  0E00               	movlw	0
 21483  001E7C  6EDF               	movwf	indf2,c
 21484                           
 21485                           ; BSR set to: 0
 21486                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 21487  001E7E  0100               	movlb	0	; () banked
 21488  001E80  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21489  001E82  0D02               	mullw	2
 21490  001E84  0E00               	movlw	low _loRa
 21491  001E86  0100               	movlb	0	; () banked
 21492  001E88  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21493  001E8A  0E02               	movlw	high _loRa
 21494  001E8C  0100               	movlb	0	; () banked
 21495  001E8E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21496  001E90  0EA8               	movlw	168
 21497  001E92  0100               	movlb	0	; () banked
 21498  001E94  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21499  001E96  0E00               	movlw	0
 21500  001E98  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21501  001E9A  50F3               	movf	prodl,w,c
 21502  001E9C  0100               	movlb	0	; () banked
 21503  001E9E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21504  001EA0  50F4               	movf	prodh,w,c
 21505  001EA2  0100               	movlb	0	; () banked
 21506  001EA4  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21507  001EA6  0E01               	movlw	1
 21508  001EA8  0100               	movlb	0	; () banked
 21509  001EAA  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21510  001EAC  6ED9               	movwf	fsr2l,c
 21511  001EAE  0E00               	movlw	0
 21512  001EB0  0100               	movlb	0	; () banked
 21513  001EB2  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21514  001EB4  6EDA               	movwf	fsr2h,c
 21515  001EB6  0102               	movlb	2	; () banked
 21516  001EB8  A0DF               	btfss	indf2,0,c
 21517  001EBA  D00D               	goto	l2215
 21518                           
 21519                           ; BSR set to: 2
 21520                           ;lorawan.c: 1866: {
 21521                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 21522  001EBC  0100               	movlb	0	; () banked
 21523  001EBE  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21524  001EC0  0D01               	mullw	1
 21525  001EC2  50F3               	movf	prodl,w,c
 21526  001EC4  0100               	movlb	0	; () banked
 21527  001EC6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21528  001EC8  6ED9               	movwf	fsr2l,c
 21529  001ECA  50F4               	movf	prodh,w,c
 21530  001ECC  0100               	movlb	0	; () banked
 21531  001ECE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21532  001ED0  6EDA               	movwf	fsr2h,c
 21533  001ED2  0E00               	movlw	0
 21534  001ED4  80DB               	bsf	plusw2,0,c
 21535  001ED6                     l2215:
 21536                           
 21537                           ;lorawan.c: 1868: }
 21538                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 21539  001ED6  0100               	movlb	0	; () banked
 21540  001ED8  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21541  001EDA  0D02               	mullw	2
 21542  001EDC  0E00               	movlw	low _loRa
 21543  001EDE  0100               	movlb	0	; () banked
 21544  001EE0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21545  001EE2  0E02               	movlw	high _loRa
 21546  001EE4  0100               	movlb	0	; () banked
 21547  001EE6  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21548  001EE8  0EA8               	movlw	168
 21549  001EEA  0100               	movlb	0	; () banked
 21550  001EEC  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21551  001EEE  0E00               	movlw	0
 21552  001EF0  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21553  001EF2  50F3               	movf	prodl,w,c
 21554  001EF4  0100               	movlb	0	; () banked
 21555  001EF6  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21556  001EF8  50F4               	movf	prodh,w,c
 21557  001EFA  0100               	movlb	0	; () banked
 21558  001EFC  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21559  001EFE  0E01               	movlw	1
 21560  001F00  0100               	movlb	0	; () banked
 21561  001F02  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21562  001F04  6ED9               	movwf	fsr2l,c
 21563  001F06  0E00               	movlw	0
 21564  001F08  0100               	movlb	0	; () banked
 21565  001F0A  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21566  001F0C  6EDA               	movwf	fsr2h,c
 21567  001F0E  0102               	movlb	2	; () banked
 21568  001F10  A2DF               	btfss	indf2,1,c
 21569  001F12  D00D               	goto	l2216
 21570                           
 21571                           ; BSR set to: 2
 21572                           ;lorawan.c: 1871: {
 21573                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 21574  001F14  0100               	movlb	0	; () banked
 21575  001F16  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21576  001F18  0D01               	mullw	1
 21577  001F1A  50F3               	movf	prodl,w,c
 21578  001F1C  0100               	movlb	0	; () banked
 21579  001F1E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21580  001F20  6ED9               	movwf	fsr2l,c
 21581  001F22  50F4               	movf	prodh,w,c
 21582  001F24  0100               	movlb	0	; () banked
 21583  001F26  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21584  001F28  6EDA               	movwf	fsr2h,c
 21585  001F2A  0E00               	movlw	0
 21586  001F2C  82DB               	bsf	plusw2,1,c
 21587  001F2E                     l2216:
 21588                           
 21589                           ;lorawan.c: 1873: }
 21590                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 21591  001F2E  0100               	movlb	0	; () banked
 21592  001F30  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21593  001F32  0D02               	mullw	2
 21594  001F34  0E00               	movlw	low _loRa
 21595  001F36  0100               	movlb	0	; () banked
 21596  001F38  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21597  001F3A  0E02               	movlw	high _loRa
 21598  001F3C  0100               	movlb	0	; () banked
 21599  001F3E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21600  001F40  0EA8               	movlw	168
 21601  001F42  0100               	movlb	0	; () banked
 21602  001F44  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21603  001F46  0E00               	movlw	0
 21604  001F48  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21605  001F4A  50F3               	movf	prodl,w,c
 21606  001F4C  0100               	movlb	0	; () banked
 21607  001F4E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21608  001F50  50F4               	movf	prodh,w,c
 21609  001F52  0100               	movlb	0	; () banked
 21610  001F54  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21611  001F56  0E01               	movlw	1
 21612  001F58  0100               	movlb	0	; () banked
 21613  001F5A  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21614  001F5C  6ED9               	movwf	fsr2l,c
 21615  001F5E  0E00               	movlw	0
 21616  001F60  0100               	movlb	0	; () banked
 21617  001F62  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21618  001F64  6EDA               	movwf	fsr2h,c
 21619  001F66  0102               	movlb	2	; () banked
 21620  001F68  A4DF               	btfss	indf2,2,c
 21621  001F6A  D0D9               	goto	l14583
 21622  001F6C  D093               	goto	l14567
 21623  001F6E                     l14555:
 21624                           
 21625                           ; BSR set to: 0
 21626                           ;lorawan.c: 1884: {
 21627                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 21628  001F6E  0100               	movlb	0	; () banked
 21629  001F70  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21630  001F72  0D01               	mullw	1
 21631  001F74  50F3               	movf	prodl,w,c
 21632  001F76  0100               	movlb	0	; () banked
 21633  001F78  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21634  001F7A  6ED9               	movwf	fsr2l,c
 21635  001F7C  50F4               	movf	prodh,w,c
 21636  001F7E  0100               	movlb	0	; () banked
 21637  001F80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21638  001F82  6EDA               	movwf	fsr2h,c
 21639  001F84  0E05               	movlw	5
 21640  001F86  6EDF               	movwf	indf2,c
 21641                           
 21642                           ; BSR set to: 0
 21643  001F88  0100               	movlb	0	; () banked
 21644  001F8A  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21645                           
 21646                           ; BSR set to: 0
 21647                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 21648  001F8C  0100               	movlb	0	; () banked
 21649  001F8E  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21650  001F90  0D01               	mullw	1
 21651  001F92  50F3               	movf	prodl,w,c
 21652  001F94  0100               	movlb	0	; () banked
 21653  001F96  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21654  001F98  6ED9               	movwf	fsr2l,c
 21655  001F9A  50F4               	movf	prodh,w,c
 21656  001F9C  0100               	movlb	0	; () banked
 21657  001F9E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21658  001FA0  6EDA               	movwf	fsr2h,c
 21659  001FA2  0E00               	movlw	0
 21660  001FA4  6EDF               	movwf	indf2,c
 21661                           
 21662                           ; BSR set to: 0
 21663                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 21664  001FA6  0100               	movlb	0	; () banked
 21665  001FA8  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21666  001FAA  0D02               	mullw	2
 21667  001FAC  0E00               	movlw	low _loRa
 21668  001FAE  0100               	movlb	0	; () banked
 21669  001FB0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21670  001FB2  0E02               	movlw	high _loRa
 21671  001FB4  0100               	movlb	0	; () banked
 21672  001FB6  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21673  001FB8  0EA8               	movlw	168
 21674  001FBA  0100               	movlb	0	; () banked
 21675  001FBC  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21676  001FBE  0E00               	movlw	0
 21677  001FC0  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21678  001FC2  50F3               	movf	prodl,w,c
 21679  001FC4  0100               	movlb	0	; () banked
 21680  001FC6  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21681  001FC8  50F4               	movf	prodh,w,c
 21682  001FCA  0100               	movlb	0	; () banked
 21683  001FCC  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21684  001FCE  0E01               	movlw	1
 21685  001FD0  0100               	movlb	0	; () banked
 21686  001FD2  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21687  001FD4  6ED9               	movwf	fsr2l,c
 21688  001FD6  0E00               	movlw	0
 21689  001FD8  0100               	movlb	0	; () banked
 21690  001FDA  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21691  001FDC  6EDA               	movwf	fsr2h,c
 21692  001FDE  0102               	movlb	2	; () banked
 21693  001FE0  A6DF               	btfss	indf2,3,c
 21694  001FE2  D00D               	goto	l2220
 21695                           
 21696                           ; BSR set to: 2
 21697                           ;lorawan.c: 1888: {
 21698                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 21699  001FE4  0100               	movlb	0	; () banked
 21700  001FE6  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21701  001FE8  0D01               	mullw	1
 21702  001FEA  50F3               	movf	prodl,w,c
 21703  001FEC  0100               	movlb	0	; () banked
 21704  001FEE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21705  001FF0  6ED9               	movwf	fsr2l,c
 21706  001FF2  50F4               	movf	prodh,w,c
 21707  001FF4  0100               	movlb	0	; () banked
 21708  001FF6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21709  001FF8  6EDA               	movwf	fsr2h,c
 21710  001FFA  0E00               	movlw	0
 21711  001FFC  80DB               	bsf	plusw2,0,c
 21712  001FFE                     l2220:
 21713                           
 21714                           ;lorawan.c: 1890: }
 21715                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 21716  001FFE  0100               	movlb	0	; () banked
 21717  002000  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21718  002002  0D02               	mullw	2
 21719  002004  0E00               	movlw	low _loRa
 21720  002006  0100               	movlb	0	; () banked
 21721  002008  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21722  00200A  0E02               	movlw	high _loRa
 21723  00200C  0100               	movlb	0	; () banked
 21724  00200E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21725  002010  0EA8               	movlw	168
 21726  002012  0100               	movlb	0	; () banked
 21727  002014  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21728  002016  0E00               	movlw	0
 21729  002018  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21730  00201A  50F3               	movf	prodl,w,c
 21731  00201C  0100               	movlb	0	; () banked
 21732  00201E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21733  002020  50F4               	movf	prodh,w,c
 21734  002022  0100               	movlb	0	; () banked
 21735  002024  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21736  002026  0E01               	movlw	1
 21737  002028  0100               	movlb	0	; () banked
 21738  00202A  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21739  00202C  6ED9               	movwf	fsr2l,c
 21740  00202E  0E00               	movlw	0
 21741  002030  0100               	movlb	0	; () banked
 21742  002032  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21743  002034  6EDA               	movwf	fsr2h,c
 21744  002036  0102               	movlb	2	; () banked
 21745  002038  A8DF               	btfss	indf2,4,c
 21746  00203A  D00D               	goto	l2221
 21747                           
 21748                           ; BSR set to: 2
 21749                           ;lorawan.c: 1893: {
 21750                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 21751  00203C  0100               	movlb	0	; () banked
 21752  00203E  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21753  002040  0D01               	mullw	1
 21754  002042  50F3               	movf	prodl,w,c
 21755  002044  0100               	movlb	0	; () banked
 21756  002046  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21757  002048  6ED9               	movwf	fsr2l,c
 21758  00204A  50F4               	movf	prodh,w,c
 21759  00204C  0100               	movlb	0	; () banked
 21760  00204E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21761  002050  6EDA               	movwf	fsr2h,c
 21762  002052  0E00               	movlw	0
 21763  002054  82DB               	bsf	plusw2,1,c
 21764  002056                     l2221:
 21765                           
 21766                           ;lorawan.c: 1895: }
 21767                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 21768  002056  0100               	movlb	0	; () banked
 21769  002058  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21770  00205A  0D02               	mullw	2
 21771  00205C  0E00               	movlw	low _loRa
 21772  00205E  0100               	movlb	0	; () banked
 21773  002060  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21774  002062  0E02               	movlw	high _loRa
 21775  002064  0100               	movlb	0	; () banked
 21776  002066  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21777  002068  0EA8               	movlw	168
 21778  00206A  0100               	movlb	0	; () banked
 21779  00206C  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21780  00206E  0E00               	movlw	0
 21781  002070  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21782  002072  50F3               	movf	prodl,w,c
 21783  002074  0100               	movlb	0	; () banked
 21784  002076  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21785  002078  50F4               	movf	prodh,w,c
 21786  00207A  0100               	movlb	0	; () banked
 21787  00207C  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21788  00207E  0E01               	movlw	1
 21789  002080  0100               	movlb	0	; () banked
 21790  002082  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21791  002084  6ED9               	movwf	fsr2l,c
 21792  002086  0E00               	movlw	0
 21793  002088  0100               	movlb	0	; () banked
 21794  00208A  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21795  00208C  6EDA               	movwf	fsr2h,c
 21796  00208E  0102               	movlb	2	; () banked
 21797  002090  AADF               	btfss	indf2,5,c
 21798  002092  D045               	goto	l14583
 21799  002094                     l14567:
 21800                           
 21801                           ; BSR set to: 2
 21802                           ;lorawan.c: 1898: {
 21803                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 21804  002094  0100               	movlb	0	; () banked
 21805  002096  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21806  002098  0D01               	mullw	1
 21807  00209A  50F3               	movf	prodl,w,c
 21808  00209C  0100               	movlb	0	; () banked
 21809  00209E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21810  0020A0  6ED9               	movwf	fsr2l,c
 21811  0020A2  50F4               	movf	prodh,w,c
 21812  0020A4  0100               	movlb	0	; () banked
 21813  0020A6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21814  0020A8  6EDA               	movwf	fsr2h,c
 21815  0020AA  0E00               	movlw	0
 21816  0020AC  84DB               	bsf	plusw2,2,c
 21817  0020AE  D037               	goto	l14583
 21818  0020B0                     l14571:
 21819                           
 21820                           ; BSR set to: 0
 21821                           ;lorawan.c: 1907: {
 21822                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 21823  0020B0  0100               	movlb	0	; () banked
 21824  0020B2  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21825  0020B4  0D01               	mullw	1
 21826  0020B6  50F3               	movf	prodl,w,c
 21827  0020B8  0100               	movlb	0	; () banked
 21828  0020BA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21829  0020BC  6ED9               	movwf	fsr2l,c
 21830  0020BE  50F4               	movf	prodh,w,c
 21831  0020C0  0100               	movlb	0	; () banked
 21832  0020C2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21833  0020C4  6EDA               	movwf	fsr2h,c
 21834  0020C6  0E06               	movlw	6
 21835  0020C8  6EDF               	movwf	indf2,c
 21836                           
 21837                           ; BSR set to: 0
 21838  0020CA  0100               	movlb	0	; () banked
 21839  0020CC  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21840                           
 21841                           ; BSR set to: 0
 21842                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 21843  0020CE  0100               	movlb	0	; () banked
 21844  0020D0  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21845  0020D2  0D01               	mullw	1
 21846  0020D4  50F3               	movf	prodl,w,c
 21847  0020D6  0100               	movlb	0	; () banked
 21848  0020D8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21849  0020DA  6ED9               	movwf	fsr2l,c
 21850  0020DC  50F4               	movf	prodh,w,c
 21851  0020DE  0100               	movlb	0	; () banked
 21852  0020E0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21853  0020E2  6EDA               	movwf	fsr2h,c
 21854  0020E4  C2E0  FFDF         	movff	_loRa+224,indf2
 21855  0020E8  0100               	movlb	0	; () banked
 21856  0020EA  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21857                           
 21858                           ; BSR set to: 0
 21859                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 21860  0020EC  ECDE  F051         	call	_RADIO_GetPacketSnr	;wreg free
 21861  0020F0  0A80               	xorlw	128
 21862  0020F2  0FA0               	addlw	160
 21863  0020F4  A0D8               	btfss	status,0,c
 21864  0020F6  D006               	goto	l14581
 21865  0020F8  ECDE  F051         	call	_RADIO_GetPacketSnr	;wreg free
 21866  0020FC  0A80               	xorlw	128
 21867  0020FE  0F60               	addlw	-160
 21868  002100  A0D8               	btfss	status,0,c
 21869  002102  D010               	goto	l14585
 21870  002104                     l14581:
 21871                           
 21872                           ;lorawan.c: 1911: {
 21873                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 21874  002104  0100               	movlb	0	; () banked
 21875  002106  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21876  002108  0D01               	mullw	1
 21877  00210A  50F3               	movf	prodl,w,c
 21878  00210C  0100               	movlb	0	; () banked
 21879  00210E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21880  002110  6ED9               	movwf	fsr2l,c
 21881  002112  50F4               	movf	prodh,w,c
 21882  002114  0100               	movlb	0	; () banked
 21883  002116  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21884  002118  6EDA               	movwf	fsr2h,c
 21885  00211A  0E20               	movlw	32
 21886  00211C  D011               	goto	L11
 21887  00211E                     l14583:
 21888                           
 21889                           ; BSR set to: 0
 21890  00211E  0100               	movlb	0	; () banked
 21891  002120  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21892                           
 21893                           ;lorawan.c: 1913: }
 21894  002122  D0C0               	goto	l14617
 21895  002124                     l14585:
 21896                           
 21897                           ;lorawan.c: 1914: else
 21898                           ;lorawan.c: 1915: {
 21899                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 21900  002124  0100               	movlb	0	; () banked
 21901  002126  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21902  002128  0D01               	mullw	1
 21903  00212A  50F3               	movf	prodl,w,c
 21904  00212C  0100               	movlb	0	; () banked
 21905  00212E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21906  002130  6ED9               	movwf	fsr2l,c
 21907  002132  50F4               	movf	prodh,w,c
 21908  002134  0100               	movlb	0	; () banked
 21909  002136  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21910  002138  6EDA               	movwf	fsr2h,c
 21911  00213A  ECDE  F051         	call	_RADIO_GetPacketSnr	;wreg free
 21912  00213E  0B3F               	andlw	63
 21913  002140                     L11:
 21914  002140  6EDF               	movwf	indf2,c
 21915  002142  D7ED               	goto	l14583
 21916  002144                     l14589:
 21917                           
 21918                           ; BSR set to: 0
 21919                           ;lorawan.c: 1922: {
 21920                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 21921  002144  0100               	movlb	0	; () banked
 21922  002146  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21923  002148  0D01               	mullw	1
 21924  00214A  50F3               	movf	prodl,w,c
 21925  00214C  0100               	movlb	0	; () banked
 21926  00214E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21927  002150  6ED9               	movwf	fsr2l,c
 21928  002152  50F4               	movf	prodh,w,c
 21929  002154  0100               	movlb	0	; () banked
 21930  002156  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21931  002158  6EDA               	movwf	fsr2h,c
 21932  00215A  0E07               	movlw	7
 21933  00215C  6EDF               	movwf	indf2,c
 21934                           
 21935                           ; BSR set to: 0
 21936  00215E  0100               	movlb	0	; () banked
 21937  002160  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21938                           
 21939                           ; BSR set to: 0
 21940                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 21941  002162  0100               	movlb	0	; () banked
 21942  002164  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21943  002166  0D01               	mullw	1
 21944  002168  50F3               	movf	prodl,w,c
 21945  00216A  0100               	movlb	0	; () banked
 21946  00216C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21947  00216E  6ED9               	movwf	fsr2l,c
 21948  002170  50F4               	movf	prodh,w,c
 21949  002172  0100               	movlb	0	; () banked
 21950  002174  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21951  002176  6EDA               	movwf	fsr2h,c
 21952  002178  0E00               	movlw	0
 21953  00217A  6EDF               	movwf	indf2,c
 21954                           
 21955                           ; BSR set to: 0
 21956                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 21957  00217C  0100               	movlb	0	; () banked
 21958  00217E  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21959  002180  0D02               	mullw	2
 21960  002182  0E00               	movlw	low _loRa
 21961  002184  0100               	movlb	0	; () banked
 21962  002186  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21963  002188  0E02               	movlw	high _loRa
 21964  00218A  0100               	movlb	0	; () banked
 21965  00218C  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21966  00218E  0EA8               	movlw	168
 21967  002190  0100               	movlb	0	; () banked
 21968  002192  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21969  002194  0E00               	movlw	0
 21970  002196  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21971  002198  50F3               	movf	prodl,w,c
 21972  00219A  0100               	movlb	0	; () banked
 21973  00219C  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21974  00219E  50F4               	movf	prodh,w,c
 21975  0021A0  0100               	movlb	0	; () banked
 21976  0021A2  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21977  0021A4  0E01               	movlw	1
 21978  0021A6  0100               	movlb	0	; () banked
 21979  0021A8  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21980  0021AA  6ED9               	movwf	fsr2l,c
 21981  0021AC  0E00               	movlw	0
 21982  0021AE  0100               	movlb	0	; () banked
 21983  0021B0  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21984  0021B2  6EDA               	movwf	fsr2h,c
 21985  0021B4  0102               	movlb	2	; () banked
 21986  0021B6  AEDF               	btfss	indf2,7,c
 21987  0021B8  D00D               	goto	l2229
 21988                           
 21989                           ; BSR set to: 2
 21990                           ;lorawan.c: 1926: {
 21991                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 21992  0021BA  0100               	movlb	0	; () banked
 21993  0021BC  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21994  0021BE  0D01               	mullw	1
 21995  0021C0  50F3               	movf	prodl,w,c
 21996  0021C2  0100               	movlb	0	; () banked
 21997  0021C4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21998  0021C6  6ED9               	movwf	fsr2l,c
 21999  0021C8  50F4               	movf	prodh,w,c
 22000  0021CA  0100               	movlb	0	; () banked
 22001  0021CC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22002  0021CE  6EDA               	movwf	fsr2h,c
 22003  0021D0  0E00               	movlw	0
 22004  0021D2  80DB               	bsf	plusw2,0,c
 22005  0021D4                     l2229:
 22006                           
 22007                           ;lorawan.c: 1928: }
 22008                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 22009  0021D4  0100               	movlb	0	; () banked
 22010  0021D6  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22011  0021D8  0D02               	mullw	2
 22012  0021DA  0E00               	movlw	low _loRa
 22013  0021DC  0100               	movlb	0	; () banked
 22014  0021DE  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22015  0021E0  0E02               	movlw	high _loRa
 22016  0021E2  0100               	movlb	0	; () banked
 22017  0021E4  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22018  0021E6  0EA8               	movlw	168
 22019  0021E8  0100               	movlb	0	; () banked
 22020  0021EA  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22021  0021EC  0E00               	movlw	0
 22022  0021EE  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22023  0021F0  50F3               	movf	prodl,w,c
 22024  0021F2  0100               	movlb	0	; () banked
 22025  0021F4  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22026  0021F6  50F4               	movf	prodh,w,c
 22027  0021F8  0100               	movlb	0	; () banked
 22028  0021FA  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22029  0021FC  0E01               	movlw	1
 22030  0021FE  0100               	movlb	0	; () banked
 22031  002200  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22032  002202  6ED9               	movwf	fsr2l,c
 22033  002204  0E00               	movlw	0
 22034  002206  0100               	movlb	0	; () banked
 22035  002208  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22036  00220A  6EDA               	movwf	fsr2h,c
 22037  00220C  0102               	movlb	2	; () banked
 22038  00220E  ACDF               	btfss	indf2,6,c
 22039  002210  D786               	goto	l14583
 22040                           
 22041                           ; BSR set to: 2
 22042                           ;lorawan.c: 1931: {
 22043                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 22044  002212  0100               	movlb	0	; () banked
 22045  002214  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22046  002216  0D01               	mullw	1
 22047  002218  50F3               	movf	prodl,w,c
 22048  00221A  0100               	movlb	0	; () banked
 22049  00221C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22050  00221E  6ED9               	movwf	fsr2l,c
 22051  002220  50F4               	movf	prodh,w,c
 22052  002222  0100               	movlb	0	; () banked
 22053  002224  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22054  002226  6EDA               	movwf	fsr2h,c
 22055  002228  0E00               	movlw	0
 22056  00222A  82DB               	bsf	plusw2,1,c
 22057  00222C  D778               	goto	l14583
 22058  00222E                     l2231:
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;lorawan.c: 1939: {
 22062                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 22063  00222E  0102               	movlb	2	; () banked
 22064  002230  69DD               	setf	(_loRa+221)& (0+255),b
 22065                           
 22066                           ; BSR set to: 2
 22067                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 22068  002232  0E00               	movlw	0
 22069  002234  0102               	movlb	2	; () banked
 22070  002236  6FDE               	movwf	(_loRa+222)& (0+255),b
 22071  002238                     l14609:
 22072                           
 22073                           ; BSR set to: 0
 22074                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 22075                           ;lorawan.c: 1948: {
 22076                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 22077  002238  0100               	movlb	0	; () banked
 22078  00223A  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22079  00223C  0D02               	mullw	2
 22080  00223E  0EA8               	movlw	low (_loRa+168)
 22081  002240  24F3               	addwf	prodl,w,c
 22082  002242  6ED9               	movwf	fsr2l,c
 22083  002244  0E02               	movlw	high (_loRa+168)
 22084  002246  20F4               	addwfc	prodh,w,c
 22085  002248  6EDA               	movwf	fsr2h,c
 22086  00224A  0100               	movlb	0	; () banked
 22087  00224C  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22088  00224E  0D01               	mullw	1
 22089  002250  50F3               	movf	prodl,w,c
 22090  002252  0100               	movlb	0	; () banked
 22091  002254  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22092  002256  6EE9               	movwf	fsr0l,c
 22093  002258  50F4               	movf	prodh,w,c
 22094  00225A  0100               	movlb	0	; () banked
 22095  00225C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22096  00225E  6EEA               	movwf	fsr0h,c
 22097  002260  CFDF FFEF          	movff	indf2,indf0
 22098  002264  D75C               	goto	l14583
 22099  002266                     l14615:
 22100                           
 22101                           ; BSR set to: 0
 22102  002266  0100               	movlb	0	; () banked
 22103  002268  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22104  00226A  0D02               	mullw	2
 22105  00226C  0EA8               	movlw	low (_loRa+168)
 22106  00226E  24F3               	addwf	prodl,w,c
 22107  002270  6ED9               	movwf	fsr2l,c
 22108  002272  0E02               	movlw	high (_loRa+168)
 22109  002274  20F4               	addwfc	prodh,w,c
 22110  002276  6EDA               	movwf	fsr2h,c
 22111  002278  50DF               	movf	indf2,w,c
 22112                           
 22113                           ; Switch size 1, requested type "space"
 22114                           ; Number of cases is 7, Range of values is 2 to 8
 22115                           ; switch strategies available:
 22116                           ; Name         Instructions Cycles
 22117                           ; simple_byte           22    12 (average)
 22118                           ;	Chosen strategy is simple_byte
 22119  00227A  0A02               	xorlw	2	; case 2
 22120  00227C  B4D8               	btfsc	status,2,c
 22121  00227E  D7D7               	goto	l2231
 22122  002280  0A01               	xorlw	1	; case 3
 22123  002282  B4D8               	btfsc	status,2,c
 22124  002284  D5E0               	goto	l14539
 22125  002286  0A07               	xorlw	7	; case 4
 22126  002288  B4D8               	btfsc	status,2,c
 22127  00228A  D7D6               	goto	l14609
 22128  00228C  0A01               	xorlw	1	; case 5
 22129  00228E  B4D8               	btfsc	status,2,c
 22130  002290  D66E               	goto	l14555
 22131  002292  0A03               	xorlw	3	; case 6
 22132  002294  B4D8               	btfsc	status,2,c
 22133  002296  D70C               	goto	l14571
 22134  002298  0A01               	xorlw	1	; case 7
 22135  00229A  B4D8               	btfsc	status,2,c
 22136  00229C  D753               	goto	l14589
 22137  00229E  0A0F               	xorlw	15	; case 8
 22138  0022A0  B4D8               	btfsc	status,2,c
 22139  0022A2  D7CA               	goto	l14609
 22140  0022A4                     l14617:
 22141                           
 22142                           ; BSR set to: 0
 22143  0022A4  0100               	movlb	0	; () banked
 22144  0022A6  2B71               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 22145  0022A8                     l14619:
 22146                           
 22147                           ; BSR set to: 0
 22148  0022A8  0102               	movlb	2	; () banked
 22149  0022AA  51A7               	movf	(_loRa+167)& (0+255),w,b
 22150  0022AC  0100               	movlb	0	; () banked
 22151  0022AE  5D71               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 22152  0022B0  A0D8               	btfss	status,0,c
 22153  0022B2  D567               	goto	l14531
 22154  0022B4                     l14621:
 22155                           
 22156                           ; BSR set to: 0
 22157                           ;lorawan.c: 1957: }
 22158                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 22159  0022B4  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 22160  0022B8  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 22161  0022BC  C072  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 22162                           
 22163                           ; BSR set to: 0
 22164  0022C0  0012               	return		;funcret
 22165  0022C2                     __end_of_IncludeMacCommandsResponse:
 22166                           	opt stack 0
 22167                           tosu	equ	0xFFF
 22168                           tosh	equ	0xFFE
 22169                           tosl	equ	0xFFD
 22170                           pclath	equ	0xFFA
 22171                           tblptru	equ	0xFF8
 22172                           tblptrh	equ	0xFF7
 22173                           tblptrl	equ	0xFF6
 22174                           tablat	equ	0xFF5
 22175                           prodh	equ	0xFF4
 22176                           prodl	equ	0xFF3
 22177                           intcon	equ	0xFF2
 22178                           intcon2	equ	0xFF1
 22179                           intcon3	equ	0xFF0
 22180                           indf0	equ	0xFEF
 22181                           postinc0	equ	0xFEE
 22182                           fsr0h	equ	0xFEA
 22183                           fsr0l	equ	0xFE9
 22184                           wreg	equ	0xFE8
 22185                           postinc1	equ	0xFE6
 22186                           postdec1	equ	0xFE5
 22187                           plusw1	equ	0xFE3
 22188                           fsr1h	equ	0xFE2
 22189                           fsr1l	equ	0xFE1
 22190                           indf2	equ	0xFDF
 22191                           postinc2	equ	0xFDE
 22192                           postdec2	equ	0xFDD
 22193                           plusw2	equ	0xFDB
 22194                           fsr2h	equ	0xFDA
 22195                           fsr2l	equ	0xFD9
 22196                           status	equ	0xFD8
 22197                           
 22198 ;; *************** function _RADIO_GetPacketSnr *****************
 22199 ;; Defined at:
 22200 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22201 ;; Parameters:    Size  Location     Type
 22202 ;;		None
 22203 ;; Auto vars:     Size  Location     Type
 22204 ;;		None
 22205 ;; Return value:  Size  Location     Type
 22206 ;;                  1    wreg      char 
 22207 ;; Registers used:
 22208 ;;		wreg, status,2
 22209 ;; Tracked objects:
 22210 ;;		On entry : 0/0
 22211 ;;		On exit  : 0/0
 22212 ;;		Unchanged: 0/0
 22213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22218 ;;Total ram usage:        0 bytes
 22219 ;; Hardware stack levels used:    1
 22220 ;; Hardware stack levels required when called:    7
 22221 ;; This function calls:
 22222 ;;		Nothing
 22223 ;; This function is called by:
 22224 ;;		_IncludeMacCommandsResponse
 22225 ;; This function uses a non-reentrant model
 22226 ;;
 22227                           
 22228                           	psect	text98
 22229  00A3BC                     __ptext98:
 22230                           	opt stack 0
 22231  00A3BC                     _RADIO_GetPacketSnr:
 22232                           	opt stack 19
 22233                           
 22234                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 22235                           
 22236                           ; BSR set to: 0
 22237                           ;incstack = 0
 22238  00A3BC  0101               	movlb	1	; () banked
 22239  00A3BE  51A6               	movf	(_RadioConfiguration+50)& (0+255),w,b
 22240  00A3C0  0012               	return	
 22241  00A3C2                     __end_of_RADIO_GetPacketSnr:
 22242                           	opt stack 0
 22243                           tosu	equ	0xFFF
 22244                           tosh	equ	0xFFE
 22245                           tosl	equ	0xFFD
 22246                           pclath	equ	0xFFA
 22247                           tblptru	equ	0xFF8
 22248                           tblptrh	equ	0xFF7
 22249                           tblptrl	equ	0xFF6
 22250                           tablat	equ	0xFF5
 22251                           prodh	equ	0xFF4
 22252                           prodl	equ	0xFF3
 22253                           intcon	equ	0xFF2
 22254                           intcon2	equ	0xFF1
 22255                           intcon3	equ	0xFF0
 22256                           indf0	equ	0xFEF
 22257                           postinc0	equ	0xFEE
 22258                           fsr0h	equ	0xFEA
 22259                           fsr0l	equ	0xFE9
 22260                           wreg	equ	0xFE8
 22261                           postinc1	equ	0xFE6
 22262                           postdec1	equ	0xFE5
 22263                           plusw1	equ	0xFE3
 22264                           fsr1h	equ	0xFE2
 22265                           fsr1l	equ	0xFE1
 22266                           indf2	equ	0xFDF
 22267                           postinc2	equ	0xFDE
 22268                           postdec2	equ	0xFDD
 22269                           plusw2	equ	0xFDB
 22270                           fsr2h	equ	0xFDA
 22271                           fsr2l	equ	0xFD9
 22272                           status	equ	0xFD8
 22273                           
 22274 ;; *************** function _FindSmallestDataRate *****************
 22275 ;; Defined at:
 22276 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22277 ;; Parameters:    Size  Location     Type
 22278 ;;		None
 22279 ;; Auto vars:     Size  Location     Type
 22280 ;;  dataRate        1    7[BANK0 ] unsigned char 
 22281 ;;  i               1    6[BANK0 ] unsigned char 
 22282 ;;  found           1    5[BANK0 ] unsigned char 
 22283 ;; Return value:  Size  Location     Type
 22284 ;;                  1    wreg      unsigned char 
 22285 ;; Registers used:
 22286 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22287 ;; Tracked objects:
 22288 ;;		On entry : 0/0
 22289 ;;		On exit  : 0/0
 22290 ;;		Unchanged: 0/0
 22291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22293 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22294 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22295 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22296 ;;Total ram usage:        4 bytes
 22297 ;; Hardware stack levels used:    1
 22298 ;; Hardware stack levels required when called:    7
 22299 ;; This function calls:
 22300 ;;		Nothing
 22301 ;; This function is called by:
 22302 ;;		_AckRetransmissionCallback
 22303 ;;		_AssemblePacket
 22304 ;; This function uses a non-reentrant model
 22305 ;;
 22306                           
 22307                           	psect	text99
 22308  00719E                     __ptext99:
 22309                           	opt stack 0
 22310  00719E                     _FindSmallestDataRate:
 22311                           	opt stack 20
 22312                           
 22313                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 22314                           
 22315                           ; BSR set to: 1
 22316                           ;incstack = 0
 22317  00719E  0E00               	movlw	0
 22318  0071A0  0100               	movlb	0	; () banked
 22319  0071A2  6F66               	movwf	FindSmallestDataRate@i& (0+255),b
 22320                           
 22321                           ;lorawan.c: 1966: bool found = 0;
 22322  0071A4  0E00               	movlw	0
 22323  0071A6  0100               	movlb	0	; () banked
 22324  0071A8  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 22328  0071AA  0102               	movlb	2	; () banked
 22329  0071AC  51DF               	movf	(_loRa+223)& (0+255),w,b
 22330  0071AE  0102               	movlb	2	; () banked
 22331  0071B0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 22332  0071B2  B0D8               	btfsc	status,0,c
 22333  0071B4  D072               	goto	l14457
 22334                           
 22335                           ; BSR set to: 2
 22336                           ;lorawan.c: 1969: {
 22337                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 22338  0071B6  0102               	movlb	2	; () banked
 22339  0071B8  05DF               	decf	(_loRa+223)& (0+255),w,b
 22340  0071BA  D05D               	goto	L12
 22341  0071BC                     l14429:
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;lorawan.c: 1973: {
 22345                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 22346  0071BC  0E00               	movlw	0
 22347  0071BE  0100               	movlb	0	; () banked
 22348  0071C0  6F66               	movwf	FindSmallestDataRate@i& (0+255),b
 22349  0071C2  D046               	goto	l14441
 22350  0071C4                     l14431:
 22351                           
 22352                           ; BSR set to: 0
 22353                           ;lorawan.c: 1975: {
 22354                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 22355  0071C4  0100               	movlb	0	; () banked
 22356  0071C6  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22357  0071C8  0D0E               	mullw	14
 22358  0071CA  0E05               	movlw	5
 22359  0071CC  26F3               	addwf	prodl,f,c
 22360  0071CE  0E00               	movlw	0
 22361  0071D0  22F4               	addwfc	prodh,f,c
 22362  0071D2  0E00               	movlw	low _Channels
 22363  0071D4  24F3               	addwf	prodl,w,c
 22364  0071D6  6ED9               	movwf	fsr2l,c
 22365  0071D8  0E04               	movlw	high _Channels
 22366  0071DA  20F4               	addwfc	prodh,w,c
 22367  0071DC  6EDA               	movwf	fsr2h,c
 22368  0071DE  0104               	movlb	4	; () banked
 22369  0071E0  50DF               	movf	223,w,c
 22370  0071E2  0B0F               	andlw	15
 22371  0071E4  0100               	movlb	0	; () banked
 22372  0071E6  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 22373  0071E8  0100               	movlb	0	; () banked
 22374  0071EA  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 22375  0071EC  0100               	movlb	0	; () banked
 22376  0071EE  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 22377  0071F0  A0D8               	btfss	status,0,c
 22378  0071F2  D02C               	goto	l14439
 22379                           
 22380                           ; BSR set to: 0
 22381  0071F4  0100               	movlb	0	; () banked
 22382  0071F6  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22383  0071F8  0D0E               	mullw	14
 22384  0071FA  0E05               	movlw	5
 22385  0071FC  26F3               	addwf	prodl,f,c
 22386  0071FE  0E00               	movlw	0
 22387  007200  22F4               	addwfc	prodh,f,c
 22388  007202  0E00               	movlw	low _Channels
 22389  007204  24F3               	addwf	prodl,w,c
 22390  007206  6ED9               	movwf	fsr2l,c
 22391  007208  0E04               	movlw	high _Channels
 22392  00720A  20F4               	addwfc	prodh,w,c
 22393  00720C  6EDA               	movwf	fsr2h,c
 22394  00720E  0104               	movlb	4	; () banked
 22395  007210  38DF               	swapf	223,w,c
 22396  007212  0B0F               	andlw	15
 22397  007214  0100               	movlb	0	; () banked
 22398  007216  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 22399  007218  0100               	movlb	0	; () banked
 22400  00721A  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 22401  00721C  0100               	movlb	0	; () banked
 22402  00721E  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 22403  007220  A0D8               	btfss	status,0,c
 22404  007222  D014               	goto	l14439
 22405                           
 22406                           ; BSR set to: 0
 22407  007224  0100               	movlb	0	; () banked
 22408  007226  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22409  007228  0D0E               	mullw	14
 22410  00722A  0E04               	movlw	4
 22411  00722C  26F3               	addwf	prodl,f,c
 22412  00722E  0E00               	movlw	0
 22413  007230  22F4               	addwfc	prodh,f,c
 22414  007232  0E00               	movlw	low _Channels
 22415  007234  24F3               	addwf	prodl,w,c
 22416  007236  6ED9               	movwf	fsr2l,c
 22417  007238  0E04               	movlw	high _Channels
 22418  00723A  20F4               	addwfc	prodh,w,c
 22419  00723C  6EDA               	movwf	fsr2h,c
 22420  00723E  04DE               	decf	postinc2,w,c
 22421  007240  A4D8               	btfss	status,2,c
 22422  007242  D004               	goto	l14439
 22423                           
 22424                           ; BSR set to: 0
 22425                           ;lorawan.c: 1977: {
 22426                           ;lorawan.c: 1978: found = 1;
 22427  007244  0E01               	movlw	1
 22428  007246  0100               	movlb	0	; () banked
 22429  007248  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 22430                           
 22431                           ;lorawan.c: 1979: break;
 22432  00724A  D008               	goto	l14443
 22433  00724C                     l14439:
 22434                           
 22435                           ; BSR set to: 0
 22436  00724C  0100               	movlb	0	; () banked
 22437  00724E  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 22438  007250                     l14441:
 22439                           
 22440                           ; BSR set to: 0
 22441  007250  0102               	movlb	2	; () banked
 22442  007252  51ED               	movf	(_loRa+237)& (0+255),w,b
 22443  007254  0100               	movlb	0	; () banked
 22444  007256  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 22445  007258  A0D8               	btfss	status,0,c
 22446  00725A  D7B4               	goto	l14431
 22447  00725C                     l14443:
 22448                           
 22449                           ; BSR set to: 0
 22450                           ;lorawan.c: 1980: }
 22451                           ;lorawan.c: 1981: }
 22452                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 22453  00725C  0100               	movlb	0	; () banked
 22454  00725E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22455  007260  0100               	movlb	0	; () banked
 22456  007262  A4D8               	btfss	status,2,c
 22457  007264  D00A               	goto	l14449
 22458                           
 22459                           ; BSR set to: 0
 22460  007266  0100               	movlb	0	; () banked
 22461  007268  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 22462  00726A  0102               	movlb	2	; () banked
 22463  00726C  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 22464  00726E  B0D8               	btfsc	status,0,c
 22465  007270  D004               	goto	l14449
 22466                           
 22467                           ; BSR set to: 2
 22468                           ;lorawan.c: 1983: {
 22469                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 22470  007272  0100               	movlb	0	; () banked
 22471  007274  0567               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 22472  007276                     L12:
 22473  007276  0100               	movlb	0	; () banked
 22474  007278  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 22475  00727A                     l14449:
 22476  00727A  0100               	movlb	0	; () banked
 22477  00727C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22478  00727E  0100               	movlb	0	; () banked
 22479  007280  A4D8               	btfss	status,2,c
 22480  007282  D006               	goto	l14453
 22481                           
 22482                           ; BSR set to: 0
 22483  007284  0102               	movlb	2	; () banked
 22484  007286  51EB               	movf	(_loRa+235)& (0+255),w,b
 22485  007288  0100               	movlb	0	; () banked
 22486  00728A  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 22487  00728C  B0D8               	btfsc	status,0,c
 22488  00728E  D796               	goto	l14429
 22489  007290                     l14453:
 22490                           
 22491                           ; BSR set to: 0
 22492                           ;lorawan.c: 1985: }
 22493                           ;lorawan.c: 1986: }
 22494                           ;lorawan.c: 1988: if (found == 1)
 22495  007290  0100               	movlb	0	; () banked
 22496  007292  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 22497  007294  B4D8               	btfsc	status,2,c
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;lorawan.c: 1989: {
 22501                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 22502  007296  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 22503  00729A                     l14457:
 22504                           
 22505                           ;lorawan.c: 1991: }
 22506                           ;lorawan.c: 1992: }
 22507                           ;lorawan.c: 1994: return found;
 22508  00729A  0100               	movlb	0	; () banked
 22509  00729C  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22510  00729E  0012               	return	
 22511  0072A0                     __end_of_FindSmallestDataRate:
 22512                           	opt stack 0
 22513                           tosu	equ	0xFFF
 22514                           tosh	equ	0xFFE
 22515                           tosl	equ	0xFFD
 22516                           pclath	equ	0xFFA
 22517                           tblptru	equ	0xFF8
 22518                           tblptrh	equ	0xFF7
 22519                           tblptrl	equ	0xFF6
 22520                           tablat	equ	0xFF5
 22521                           prodh	equ	0xFF4
 22522                           prodl	equ	0xFF3
 22523                           intcon	equ	0xFF2
 22524                           intcon2	equ	0xFF1
 22525                           intcon3	equ	0xFF0
 22526                           indf0	equ	0xFEF
 22527                           postinc0	equ	0xFEE
 22528                           fsr0h	equ	0xFEA
 22529                           fsr0l	equ	0xFE9
 22530                           wreg	equ	0xFE8
 22531                           postinc1	equ	0xFE6
 22532                           postdec1	equ	0xFE5
 22533                           plusw1	equ	0xFE3
 22534                           fsr1h	equ	0xFE2
 22535                           fsr1l	equ	0xFE1
 22536                           indf2	equ	0xFDF
 22537                           postinc2	equ	0xFDE
 22538                           postdec2	equ	0xFDD
 22539                           plusw2	equ	0xFDB
 22540                           fsr2h	equ	0xFDA
 22541                           fsr2l	equ	0xFD9
 22542                           status	equ	0xFD8
 22543                           
 22544 ;; *************** function _EncryptFRMPayload *****************
 22545 ;; Defined at:
 22546 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22547 ;; Parameters:    Size  Location     Type
 22548 ;;  buffer          2   69[BANK0 ] PTR unsigned char 
 22549 ;;		 -> payload(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22550 ;;  bufferLength    1   71[BANK0 ] unsigned char 
 22551 ;;  dir             1   72[BANK0 ] unsigned char 
 22552 ;;  frameCounter    4   73[BANK0 ] unsigned long 
 22553 ;;  key             2   77[BANK0 ] PTR unsigned char 
 22554 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22555 ;;  macBufferInd    1   79[BANK0 ] unsigned char 
 22556 ;;  bufferToBeEn    2   80[BANK0 ] PTR unsigned char 
 22557 ;;		 -> macBuffer(271), radioBuffer(271), 
 22558 ;;  multicastSta    1   82[BANK0 ] unsigned char 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  j               1   90[BANK0 ] unsigned char 
 22561 ;;  i               1   89[BANK0 ] unsigned char 
 22562 ;;  k               1   88[BANK0 ] unsigned char 
 22563 ;; Return value:  Size  Location     Type
 22564 ;;                  1    wreg      void 
 22565 ;; Registers used:
 22566 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22567 ;; Tracked objects:
 22568 ;;		On entry : 0/0
 22569 ;;		On exit  : 0/0
 22570 ;;		Unchanged: 0/0
 22571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22572 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22573 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22574 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22575 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22576 ;;Total ram usage:       22 bytes
 22577 ;; Hardware stack levels used:    1
 22578 ;; Hardware stack levels required when called:   10
 22579 ;; This function calls:
 22580 ;;		_AESEncodeLoRa
 22581 ;;		_AssembleEncryptionBlock
 22582 ;;		___awdiv
 22583 ;; This function is called by:
 22584 ;;		_LORAWAN_RxDone
 22585 ;;		_AssemblePacket
 22586 ;; This function uses a non-reentrant model
 22587 ;;
 22588                           
 22589                           	psect	text100
 22590  005444                     __ptext100:
 22591                           	opt stack 0
 22592  005444                     _EncryptFRMPayload:
 22593                           	opt stack 17
 22594                           
 22595                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 22596                           
 22597                           ; BSR set to: 0
 22598                           ;incstack = 0
 22599  005444  0E00               	movlw	0
 22600  005446  0100               	movlb	0	; () banked
 22601  005448  6FB8               	movwf	EncryptFRMPayload@k& (0+255),b
 22602  00544A  0E00               	movlw	0
 22603  00544C  0100               	movlb	0	; () banked
 22604  00544E  6FB9               	movwf	EncryptFRMPayload@i& (0+255),b
 22605  005450  0E00               	movlw	0
 22606  005452  0100               	movlb	0	; () banked
 22607  005454  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22608                           
 22609                           ; BSR set to: 0
 22610                           ;lorawan.c: 2209: k = bufferLength / 16;
 22611  005456  C0A7  F064         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 22612  00545A  0100               	movlb	0	; () banked
 22613  00545C  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
 22614  00545E  0E00               	movlw	0
 22615  005460  0100               	movlb	0	; () banked
 22616  005462  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
 22617  005464  0E10               	movlw	16
 22618  005466  6F66               	movwf	___awdiv@divisor& (0+255),b
 22619  005468  EC4B  F03E         	call	___awdiv	;wreg free
 22620  00546C  0100               	movlb	0	; () banked
 22621  00546E  5164               	movf	?___awdiv& (0+255),w,b
 22622  005470  0100               	movlb	0	; () banked
 22623  005472  6FB8               	movwf	EncryptFRMPayload@k& (0+255),b
 22624                           
 22625                           ; BSR set to: 0
 22626                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 22627  005474  0E01               	movlw	1
 22628  005476  0100               	movlb	0	; () banked
 22629  005478  6FB9               	movwf	EncryptFRMPayload@i& (0+255),b
 22630  00547A  D076               	goto	l14493
 22631  00547C                     l14475:
 22632                           
 22633                           ; BSR set to: 0
 22634                           ;lorawan.c: 2211: {
 22635                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 22636  00547C  C0A9  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 22637  005480  C0AA  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 22638  005484  C0AB  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 22639  005488  C0AC  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 22640  00548C  C0B9  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 22641  005490  0E01               	movlw	1
 22642  005492  0100               	movlb	0	; () banked
 22643  005494  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 22644  005496  C0B2  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 22645  00549A  0100               	movlb	0	; () banked
 22646  00549C  51A8               	movf	EncryptFRMPayload@dir& (0+255),w,b
 22647  00549E  EC0F  F036         	call	_AssembleEncryptionBlock
 22648                           
 22649                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 22650  0054A2  0EAA               	movlw	low _aesBuffer
 22651  0054A4  0100               	movlb	0	; () banked
 22652  0054A6  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 22653  0054A8  0E01               	movlw	high _aesBuffer
 22654  0054AA  0100               	movlb	0	; () banked
 22655  0054AC  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22656  0054AE  C0AD  F093         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 22657  0054B2  C0AE  F094         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 22658  0054B6  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 22659                           
 22660                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 22661  0054BA  0E00               	movlw	0
 22662  0054BC  0100               	movlb	0	; () banked
 22663  0054BE  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22664  0054C0                     l14479:
 22665                           
 22666                           ; BSR set to: 0
 22667  0054C0  0E0F               	movlw	15
 22668  0054C2  0100               	movlb	0	; () banked
 22669  0054C4  65BA               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 22670  0054C6  D001               	goto	l14483
 22671  0054C8  D04D               	goto	l14491
 22672  0054CA                     l14483:
 22673                           
 22674                           ; BSR set to: 0
 22675                           ;lorawan.c: 2216: {
 22676                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 22677  0054CA  0100               	movlb	0	; () banked
 22678  0054CC  51AF               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 22679  0054CE  0D01               	mullw	1
 22680  0054D0  50F3               	movf	prodl,w,c
 22681  0054D2  0100               	movlb	0	; () banked
 22682  0054D4  25B0               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 22683  0054D6  6ED9               	movwf	fsr2l,c
 22684  0054D8  50F4               	movf	prodh,w,c
 22685  0054DA  0100               	movlb	0	; () banked
 22686  0054DC  21B1               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 22687  0054DE  6EDA               	movwf	fsr2h,c
 22688  0054E0  0EF0               	movlw	240
 22689  0054E2  0100               	movlb	0	; () banked
 22690  0054E4  6FB3               	movwf	??_EncryptFRMPayload& (0+255),b
 22691  0054E6  0EFF               	movlw	255
 22692  0054E8  0100               	movlb	0	; () banked
 22693  0054EA  6FB4               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 22694  0054EC  0100               	movlb	0	; () banked
 22695  0054EE  51B9               	movf	EncryptFRMPayload@i& (0+255),w,b
 22696  0054F0  0100               	movlb	0	; () banked
 22697  0054F2  6FB5               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 22698  0054F4  6BB6               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 22699  0054F6  0100               	movlb	0	; () banked
 22700  0054F8  3BB5               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22701  0054FA  3BB6               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22702  0054FC  0EF0               	movlw	240
 22703  0054FE  17B6               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22704  005500  51B5               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 22705  005502  0B0F               	andlw	15
 22706  005504  13B6               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22707  005506  0EF0               	movlw	240
 22708  005508  17B5               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22709  00550A  0100               	movlb	0	; () banked
 22710  00550C  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22711  00550E  0100               	movlb	0	; () banked
 22712  005510  27B5               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22713  005512  0E00               	movlw	0
 22714  005514  23B6               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 22715  005516  0100               	movlb	0	; () banked
 22716  005518  51B3               	movf	??_EncryptFRMPayload& (0+255),w,b
 22717  00551A  0100               	movlb	0	; () banked
 22718  00551C  27B5               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22719  00551E  0100               	movlb	0	; () banked
 22720  005520  51B4               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 22721  005522  0100               	movlb	0	; () banked
 22722  005524  23B6               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 22723  005526  0100               	movlb	0	; () banked
 22724  005528  51B5               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 22725  00552A  0100               	movlb	0	; () banked
 22726  00552C  25A5               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 22727  00552E  6EE9               	movwf	fsr0l,c
 22728  005530  0100               	movlb	0	; () banked
 22729  005532  51B6               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 22730  005534  0100               	movlb	0	; () banked
 22731  005536  21A6               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 22732  005538  6EEA               	movwf	fsr0h,c
 22733  00553A  50EF               	movf	indf0,w,c
 22734  00553C  0100               	movlb	0	; () banked
 22735  00553E  6FB7               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 22736  005540  0100               	movlb	0	; () banked
 22737  005542  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22738  005544  0D01               	mullw	1
 22739  005546  0EAA               	movlw	low _aesBuffer
 22740  005548  24F3               	addwf	prodl,w,c
 22741  00554A  6EE9               	movwf	fsr0l,c
 22742  00554C  0E01               	movlw	high _aesBuffer
 22743  00554E  20F4               	addwfc	prodh,w,c
 22744  005550  6EEA               	movwf	fsr0h,c
 22745  005552  50EF               	movf	indf0,w,c
 22746  005554  0100               	movlb	0	; () banked
 22747  005556  19B7               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 22748  005558  6EDF               	movwf	indf2,c
 22749                           
 22750                           ; BSR set to: 0
 22751  00555A  0100               	movlb	0	; () banked
 22752  00555C  2BAF               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 22753                           
 22754                           ; BSR set to: 0
 22755  00555E  0100               	movlb	0	; () banked
 22756  005560  2BBA               	incf	EncryptFRMPayload@j& (0+255),f,b
 22757  005562  D7AE               	goto	l14479
 22758  005564                     l14491:
 22759                           
 22760                           ; BSR set to: 0
 22761  005564  0100               	movlb	0	; () banked
 22762  005566  2BB9               	incf	EncryptFRMPayload@i& (0+255),f,b
 22763  005568                     l14493:
 22764                           
 22765                           ; BSR set to: 0
 22766  005568  0100               	movlb	0	; () banked
 22767  00556A  51B9               	movf	EncryptFRMPayload@i& (0+255),w,b
 22768  00556C  0100               	movlb	0	; () banked
 22769  00556E  5DB8               	subwf	EncryptFRMPayload@k& (0+255),w,b
 22770  005570  B0D8               	btfsc	status,0,c
 22771  005572  D784               	goto	l14475
 22772                           
 22773                           ; BSR set to: 0
 22774                           ;lorawan.c: 2218: }
 22775                           ;lorawan.c: 2219: }
 22776                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 22777                           
 22778                           ; BSR set to: 0
 22779  005574  C0A7  F0B3         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 22780  005578  0E0F               	movlw	15
 22781  00557A  0100               	movlb	0	; () banked
 22782  00557C  17B3               	andwf	??_EncryptFRMPayload& (0+255),f,b
 22783  00557E  B4D8               	btfsc	status,2,c
 22784  005580  0012               	return	
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;lorawan.c: 2222: {
 22788                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 22789  005582  C0A9  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 22790  005586  C0AA  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 22791  00558A  C0AB  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 22792  00558E  C0AC  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 22793  005592  C0B9  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 22794  005596  0E01               	movlw	1
 22795  005598  0100               	movlb	0	; () banked
 22796  00559A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 22797  00559C  C0B2  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 22798  0055A0  0100               	movlb	0	; () banked
 22799  0055A2  51A8               	movf	EncryptFRMPayload@dir& (0+255),w,b
 22800  0055A4  EC0F  F036         	call	_AssembleEncryptionBlock
 22801                           
 22802                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 22803  0055A8  0EAA               	movlw	low _aesBuffer
 22804  0055AA  0100               	movlb	0	; () banked
 22805  0055AC  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 22806  0055AE  0E01               	movlw	high _aesBuffer
 22807  0055B0  0100               	movlb	0	; () banked
 22808  0055B2  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22809  0055B4  C0AD  F093         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 22810  0055B8  C0AE  F094         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 22811  0055BC  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 22812                           
 22813                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 22814  0055C0  0E00               	movlw	0
 22815  0055C2  0100               	movlb	0	; () banked
 22816  0055C4  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22817  0055C6  D02F               	goto	l14507
 22818  0055C8                     l14501:
 22819                           
 22820                           ; BSR set to: 0
 22821                           ;lorawan.c: 2227: {
 22822                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 22823  0055C8  0100               	movlb	0	; () banked
 22824  0055CA  51AF               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 22825  0055CC  0D01               	mullw	1
 22826  0055CE  50F3               	movf	prodl,w,c
 22827  0055D0  0100               	movlb	0	; () banked
 22828  0055D2  25B0               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 22829  0055D4  6ED9               	movwf	fsr2l,c
 22830  0055D6  50F4               	movf	prodh,w,c
 22831  0055D8  0100               	movlb	0	; () banked
 22832  0055DA  21B1               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 22833  0055DC  6EDA               	movwf	fsr2h,c
 22834  0055DE  0100               	movlb	0	; () banked
 22835  0055E0  51B8               	movf	EncryptFRMPayload@k& (0+255),w,b
 22836  0055E2  0D10               	mullw	16
 22837  0055E4  0100               	movlb	0	; () banked
 22838  0055E6  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22839  0055E8  26F3               	addwf	prodl,f,c
 22840  0055EA  0E00               	movlw	0
 22841  0055EC  22F4               	addwfc	prodh,f,c
 22842  0055EE  50F3               	movf	prodl,w,c
 22843  0055F0  0100               	movlb	0	; () banked
 22844  0055F2  25A5               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 22845  0055F4  6EE9               	movwf	fsr0l,c
 22846  0055F6  50F4               	movf	prodh,w,c
 22847  0055F8  0100               	movlb	0	; () banked
 22848  0055FA  21A6               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 22849  0055FC  6EEA               	movwf	fsr0h,c
 22850  0055FE  50EF               	movf	indf0,w,c
 22851  005600  0100               	movlb	0	; () banked
 22852  005602  6FB3               	movwf	??_EncryptFRMPayload& (0+255),b
 22853  005604  0100               	movlb	0	; () banked
 22854  005606  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22855  005608  0D01               	mullw	1
 22856  00560A  0EAA               	movlw	low _aesBuffer
 22857  00560C  24F3               	addwf	prodl,w,c
 22858  00560E  6EE9               	movwf	fsr0l,c
 22859  005610  0E01               	movlw	high _aesBuffer
 22860  005612  20F4               	addwfc	prodh,w,c
 22861  005614  6EEA               	movwf	fsr0h,c
 22862  005616  50EF               	movf	indf0,w,c
 22863  005618  0100               	movlb	0	; () banked
 22864  00561A  19B3               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 22865  00561C  6EDF               	movwf	indf2,c
 22866                           
 22867                           ; BSR set to: 0
 22868  00561E  0100               	movlb	0	; () banked
 22869  005620  2BAF               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 22870                           
 22871                           ; BSR set to: 0
 22872  005622  0100               	movlb	0	; () banked
 22873  005624  2BBA               	incf	EncryptFRMPayload@j& (0+255),f,b
 22874  005626                     l14507:
 22875                           
 22876                           ; BSR set to: 0
 22877  005626  C0A7  F0B3         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 22878  00562A  0E0F               	movlw	15
 22879  00562C  0100               	movlb	0	; () banked
 22880  00562E  17B3               	andwf	??_EncryptFRMPayload& (0+255),f,b
 22881  005630  0100               	movlb	0	; () banked
 22882  005632  51B3               	movf	??_EncryptFRMPayload& (0+255),w,b
 22883  005634  0100               	movlb	0	; () banked
 22884  005636  5DBA               	subwf	EncryptFRMPayload@j& (0+255),w,b
 22885  005638  B0D8               	btfsc	status,0,c
 22886  00563A  0012               	return	
 22887  00563C  D7C5               	goto	l14501
 22888  00563E                     __end_of_EncryptFRMPayload:
 22889                           	opt stack 0
 22890                           tosu	equ	0xFFF
 22891                           tosh	equ	0xFFE
 22892                           tosl	equ	0xFFD
 22893                           pclath	equ	0xFFA
 22894                           tblptru	equ	0xFF8
 22895                           tblptrh	equ	0xFF7
 22896                           tblptrl	equ	0xFF6
 22897                           tablat	equ	0xFF5
 22898                           prodh	equ	0xFF4
 22899                           prodl	equ	0xFF3
 22900                           intcon	equ	0xFF2
 22901                           intcon2	equ	0xFF1
 22902                           intcon3	equ	0xFF0
 22903                           indf0	equ	0xFEF
 22904                           postinc0	equ	0xFEE
 22905                           fsr0h	equ	0xFEA
 22906                           fsr0l	equ	0xFE9
 22907                           wreg	equ	0xFE8
 22908                           postinc1	equ	0xFE6
 22909                           postdec1	equ	0xFE5
 22910                           plusw1	equ	0xFE3
 22911                           fsr1h	equ	0xFE2
 22912                           fsr1l	equ	0xFE1
 22913                           indf2	equ	0xFDF
 22914                           postinc2	equ	0xFDE
 22915                           postdec2	equ	0xFDD
 22916                           plusw2	equ	0xFDB
 22917                           fsr2h	equ	0xFDA
 22918                           fsr2l	equ	0xFD9
 22919                           status	equ	0xFD8
 22920                           
 22921 ;; *************** function ___awdiv *****************
 22922 ;; Defined at:
 22923 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 22924 ;; Parameters:    Size  Location     Type
 22925 ;;  dividend        2    4[BANK0 ] int 
 22926 ;;  divisor         2    6[BANK0 ] int 
 22927 ;; Auto vars:     Size  Location     Type
 22928 ;;  quotient        2   10[BANK0 ] int 
 22929 ;;  sign            1    9[BANK0 ] unsigned char 
 22930 ;;  counter         1    8[BANK0 ] unsigned char 
 22931 ;; Return value:  Size  Location     Type
 22932 ;;                  2    4[BANK0 ] int 
 22933 ;; Registers used:
 22934 ;;		wreg, status,2, status,0
 22935 ;; Tracked objects:
 22936 ;;		On entry : 0/0
 22937 ;;		On exit  : 0/0
 22938 ;;		Unchanged: 0/0
 22939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22940 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22941 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22943 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22944 ;;Total ram usage:        8 bytes
 22945 ;; Hardware stack levels used:    1
 22946 ;; Hardware stack levels required when called:    7
 22947 ;; This function calls:
 22948 ;;		Nothing
 22949 ;; This function is called by:
 22950 ;;		_EncryptFRMPayload
 22951 ;; This function uses a non-reentrant model
 22952 ;;
 22953                           
 22954                           	psect	text101
 22955  007C96                     __ptext101:
 22956                           	opt stack 0
 22957  007C96                     ___awdiv:
 22958                           	opt stack 19
 22959                           
 22960                           ; BSR set to: 0
 22961                           ;incstack = 0
 22962  007C96  0E00               	movlw	0
 22963  007C98  0100               	movlb	0	; () banked
 22964  007C9A  6F69               	movwf	___awdiv@sign& (0+255),b
 22965                           
 22966                           ; BSR set to: 0
 22967  007C9C  0100               	movlb	0	; () banked
 22968  007C9E  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 22969  007CA0  D008               	goto	l13993
 22970                           
 22971                           ; BSR set to: 0
 22972  007CA2  0100               	movlb	0	; () banked
 22973  007CA4  6D66               	negf	___awdiv@divisor& (0+255),b
 22974  007CA6  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
 22975  007CA8  B0D8               	btfsc	status,0,c
 22976  007CAA  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
 22977                           
 22978                           ; BSR set to: 0
 22979  007CAC  0E01               	movlw	1
 22980  007CAE  0100               	movlb	0	; () banked
 22981  007CB0  6F69               	movwf	___awdiv@sign& (0+255),b
 22982  007CB2                     l13993:
 22983                           
 22984                           ; BSR set to: 0
 22985  007CB2  0100               	movlb	0	; () banked
 22986  007CB4  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 22987  007CB6  D008               	goto	l13999
 22988                           
 22989                           ; BSR set to: 0
 22990  007CB8  0100               	movlb	0	; () banked
 22991  007CBA  6D64               	negf	___awdiv@dividend& (0+255),b
 22992  007CBC  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
 22993  007CBE  B0D8               	btfsc	status,0,c
 22994  007CC0  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
 22995                           
 22996                           ; BSR set to: 0
 22997  007CC2  0E01               	movlw	1
 22998  007CC4  0100               	movlb	0	; () banked
 22999  007CC6  1B69               	xorwf	___awdiv@sign& (0+255),f,b
 23000  007CC8                     l13999:
 23001                           
 23002                           ; BSR set to: 0
 23003  007CC8  0E00               	movlw	0
 23004  007CCA  0100               	movlb	0	; () banked
 23005  007CCC  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
 23006  007CCE  0E00               	movlw	0
 23007  007CD0  6F6A               	movwf	___awdiv@quotient& (0+255),b
 23008                           
 23009                           ; BSR set to: 0
 23010  007CD2  0100               	movlb	0	; () banked
 23011  007CD4  5166               	movf	___awdiv@divisor& (0+255),w,b
 23012  007CD6  0100               	movlb	0	; () banked
 23013  007CD8  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23014  007CDA  B4D8               	btfsc	status,2,c
 23015  007CDC  D02C               	goto	l14021
 23016                           
 23017                           ; BSR set to: 0
 23018  007CDE  0E01               	movlw	1
 23019  007CE0  0100               	movlb	0	; () banked
 23020  007CE2  6F68               	movwf	___awdiv@counter& (0+255),b
 23021  007CE4  D006               	goto	l14007
 23022  007CE6                     l14005:
 23023                           
 23024                           ; BSR set to: 0
 23025  007CE6  0100               	movlb	0	; () banked
 23026  007CE8  90D8               	bcf	status,0,c
 23027  007CEA  3766               	rlcf	___awdiv@divisor& (0+255),f,b
 23028  007CEC  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23029  007CEE  0100               	movlb	0	; () banked
 23030  007CF0  2B68               	incf	___awdiv@counter& (0+255),f,b
 23031  007CF2                     l14007:
 23032                           
 23033                           ; BSR set to: 0
 23034  007CF2  0100               	movlb	0	; () banked
 23035  007CF4  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23036  007CF6  D7F7               	goto	l14005
 23037  007CF8                     l14009:
 23038                           
 23039                           ; BSR set to: 0
 23040  007CF8  0100               	movlb	0	; () banked
 23041  007CFA  90D8               	bcf	status,0,c
 23042  007CFC  376A               	rlcf	___awdiv@quotient& (0+255),f,b
 23043  007CFE  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23044                           
 23045                           ; BSR set to: 0
 23046  007D00  0100               	movlb	0	; () banked
 23047  007D02  5166               	movf	___awdiv@divisor& (0+255),w,b
 23048  007D04  0100               	movlb	0	; () banked
 23049  007D06  5D64               	subwf	___awdiv@dividend& (0+255),w,b
 23050  007D08  0100               	movlb	0	; () banked
 23051  007D0A  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23052  007D0C  0100               	movlb	0	; () banked
 23053  007D0E  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23054  007D10  A0D8               	btfss	status,0,c
 23055  007D12  D00A               	goto	l14017
 23056                           
 23057                           ; BSR set to: 0
 23058  007D14  0100               	movlb	0	; () banked
 23059  007D16  5166               	movf	___awdiv@divisor& (0+255),w,b
 23060  007D18  0100               	movlb	0	; () banked
 23061  007D1A  5F64               	subwf	___awdiv@dividend& (0+255),f,b
 23062  007D1C  0100               	movlb	0	; () banked
 23063  007D1E  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23064  007D20  0100               	movlb	0	; () banked
 23065  007D22  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23066                           
 23067                           ; BSR set to: 0
 23068  007D24  0100               	movlb	0	; () banked
 23069  007D26  816A               	bsf	___awdiv@quotient& (0+255),0,b
 23070  007D28                     l14017:
 23071                           
 23072                           ; BSR set to: 0
 23073  007D28  0100               	movlb	0	; () banked
 23074  007D2A  90D8               	bcf	status,0,c
 23075  007D2C  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23076  007D2E  3366               	rrcf	___awdiv@divisor& (0+255),f,b
 23077                           
 23078                           ; BSR set to: 0
 23079  007D30  0100               	movlb	0	; () banked
 23080  007D32  2F68               	decfsz	___awdiv@counter& (0+255),f,b
 23081  007D34  D7E1               	goto	l14009
 23082  007D36                     l14021:
 23083                           
 23084                           ; BSR set to: 0
 23085  007D36  0100               	movlb	0	; () banked
 23086  007D38  5169               	movf	___awdiv@sign& (0+255),w,b
 23087  007D3A  0100               	movlb	0	; () banked
 23088  007D3C  B4D8               	btfsc	status,2,c
 23089  007D3E  D005               	goto	l14025
 23090                           
 23091                           ; BSR set to: 0
 23092  007D40  0100               	movlb	0	; () banked
 23093  007D42  6D6A               	negf	___awdiv@quotient& (0+255),b
 23094  007D44  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23095  007D46  B0D8               	btfsc	status,0,c
 23096  007D48  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23097  007D4A                     l14025:
 23098                           
 23099                           ; BSR set to: 0
 23100  007D4A  C06A  F064         	movff	___awdiv@quotient,?___awdiv
 23101  007D4E  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
 23102  007D52  0012               	return	
 23103  007D54                     __end_of___awdiv:
 23104                           	opt stack 0
 23105                           tosu	equ	0xFFF
 23106                           tosh	equ	0xFFE
 23107                           tosl	equ	0xFFD
 23108                           pclath	equ	0xFFA
 23109                           tblptru	equ	0xFF8
 23110                           tblptrh	equ	0xFF7
 23111                           tblptrl	equ	0xFF6
 23112                           tablat	equ	0xFF5
 23113                           prodh	equ	0xFF4
 23114                           prodl	equ	0xFF3
 23115                           intcon	equ	0xFF2
 23116                           intcon2	equ	0xFF1
 23117                           intcon3	equ	0xFF0
 23118                           indf0	equ	0xFEF
 23119                           postinc0	equ	0xFEE
 23120                           fsr0h	equ	0xFEA
 23121                           fsr0l	equ	0xFE9
 23122                           wreg	equ	0xFE8
 23123                           postinc1	equ	0xFE6
 23124                           postdec1	equ	0xFE5
 23125                           plusw1	equ	0xFE3
 23126                           fsr1h	equ	0xFE2
 23127                           fsr1l	equ	0xFE1
 23128                           indf2	equ	0xFDF
 23129                           postinc2	equ	0xFDE
 23130                           postdec2	equ	0xFDD
 23131                           plusw2	equ	0xFDB
 23132                           fsr2h	equ	0xFDA
 23133                           fsr2l	equ	0xFD9
 23134                           status	equ	0xFD8
 23135                           
 23136 ;; *************** function _AssembleEncryptionBlock *****************
 23137 ;; Defined at:
 23138 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23139 ;; Parameters:    Size  Location     Type
 23140 ;;  dir             1    wreg     unsigned char 
 23141 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 23142 ;;  blockId         1   18[BANK0 ] unsigned char 
 23143 ;;  firstByte       1   19[BANK0 ] unsigned char 
 23144 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 23145 ;; Auto vars:     Size  Location     Type
 23146 ;;  dir             1   21[BANK0 ] unsigned char 
 23147 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 23148 ;; Return value:  Size  Location     Type
 23149 ;;                  1    wreg      void 
 23150 ;; Registers used:
 23151 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23152 ;; Tracked objects:
 23153 ;;		On entry : 0/0
 23154 ;;		On exit  : 0/0
 23155 ;;		Unchanged: 0/0
 23156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23157 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23158 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23160 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23161 ;;Total ram usage:        9 bytes
 23162 ;; Hardware stack levels used:    1
 23163 ;; Hardware stack levels required when called:    8
 23164 ;; This function calls:
 23165 ;;		_memcpy
 23166 ;;		_memset
 23167 ;; This function is called by:
 23168 ;;		_LORAWAN_RxDone
 23169 ;;		_AssemblePacket
 23170 ;;		_EncryptFRMPayload
 23171 ;; This function uses a non-reentrant model
 23172 ;;
 23173                           
 23174                           	psect	text102
 23175  006C1E                     __ptext102:
 23176                           	opt stack 0
 23177  006C1E                     _AssembleEncryptionBlock:
 23178                           	opt stack 18
 23179                           
 23180                           ; BSR set to: 0
 23181                           ;incstack = 0
 23182                           ;AssembleEncryptionBlock@dir stored from wreg
 23183  006C1E  0100               	movlb	0	; () banked
 23184  006C20  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 23185                           
 23186                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 23187  006C22  0E00               	movlw	0
 23188  006C24  0100               	movlb	0	; () banked
 23189  006C26  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23190                           
 23191                           ; BSR set to: 0
 23192                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 23193  006C28  0EAA               	movlw	low _aesBuffer
 23194  006C2A  0100               	movlb	0	; () banked
 23195  006C2C  6F64               	movwf	memset@p1& (0+255),b
 23196  006C2E  0E01               	movlw	high _aesBuffer
 23197  006C30  0100               	movlb	0	; () banked
 23198  006C32  6F65               	movwf	(memset@p1+1)& (0+255),b
 23199  006C34  0E00               	movlw	0
 23200  006C36  0100               	movlb	0	; () banked
 23201  006C38  6F67               	movwf	(memset@c+1)& (0+255),b
 23202  006C3A  0E00               	movlw	0
 23203  006C3C  6F66               	movwf	memset@c& (0+255),b
 23204  006C3E  0E00               	movlw	0
 23205  006C40  0100               	movlb	0	; () banked
 23206  006C42  6F69               	movwf	(memset@n+1)& (0+255),b
 23207  006C44  0E10               	movlw	16
 23208  006C46  6F68               	movwf	memset@n& (0+255),b
 23209  006C48  ECCE  F04D         	call	_memset	;wreg free
 23210                           
 23211                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 23212  006C4C  0100               	movlb	0	; () banked
 23213  006C4E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23214  006C50  0D01               	mullw	1
 23215  006C52  0EAA               	movlw	low _aesBuffer
 23216  006C54  24F3               	addwf	prodl,w,c
 23217  006C56  6ED9               	movwf	fsr2l,c
 23218  006C58  0E01               	movlw	high _aesBuffer
 23219  006C5A  20F4               	addwfc	prodh,w,c
 23220  006C5C  6EDA               	movwf	fsr2h,c
 23221  006C5E  C073  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 23222                           
 23223                           ; BSR set to: 0
 23224                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 23225  006C62  0100               	movlb	0	; () banked
 23226  006C64  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23227  006C66  0F05               	addlw	5
 23228  006C68  0100               	movlb	0	; () banked
 23229  006C6A  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23230                           
 23231                           ; BSR set to: 0
 23232                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 23233  006C6C  0100               	movlb	0	; () banked
 23234  006C6E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23235  006C70  0D01               	mullw	1
 23236  006C72  0EAA               	movlw	low _aesBuffer
 23237  006C74  24F3               	addwf	prodl,w,c
 23238  006C76  6ED9               	movwf	fsr2l,c
 23239  006C78  0E01               	movlw	high _aesBuffer
 23240  006C7A  20F4               	addwfc	prodh,w,c
 23241  006C7C  6EDA               	movwf	fsr2h,c
 23242  006C7E  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 23243                           
 23244                           ; BSR set to: 0
 23245  006C82  0100               	movlb	0	; () banked
 23246  006C84  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23247                           
 23248                           ; BSR set to: 0
 23249                           ;lorawan.c: 2168: if (0 == multicastStatus)
 23250  006C86  0100               	movlb	0	; () banked
 23251  006C88  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 23252  006C8A  0100               	movlb	0	; () banked
 23253  006C8C  A4D8               	btfss	status,2,c
 23254  006C8E  D019               	goto	l13969
 23255                           
 23256                           ; BSR set to: 0
 23257                           ;lorawan.c: 2169: {
 23258                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 23259  006C90  0100               	movlb	0	; () banked
 23260  006C92  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23261  006C94  0D01               	mullw	1
 23262  006C96  0EAA               	movlw	low _aesBuffer
 23263  006C98  24F3               	addwf	prodl,w,c
 23264  006C9A  0100               	movlb	0	; () banked
 23265  006C9C  6F64               	movwf	memcpy@d1& (0+255),b
 23266  006C9E  0E01               	movlw	high _aesBuffer
 23267  006CA0  20F4               	addwfc	prodh,w,c
 23268  006CA2  0100               	movlb	0	; () banked
 23269  006CA4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23270  006CA6  0E1E               	movlw	low (_loRa+30)
 23271  006CA8  0100               	movlb	0	; () banked
 23272  006CAA  6F66               	movwf	memcpy@s1& (0+255),b
 23273  006CAC  0E02               	movlw	high (_loRa+30)
 23274  006CAE  0100               	movlb	0	; () banked
 23275  006CB0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23276  006CB2  0E00               	movlw	0
 23277  006CB4  0100               	movlb	0	; () banked
 23278  006CB6  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23279  006CB8  0E04               	movlw	4
 23280  006CBA  6F68               	movwf	memcpy@n& (0+255),b
 23281  006CBC  ECCA  F048         	call	_memcpy	;wreg free
 23282  006CC0  D018               	goto	l13971
 23283  006CC2                     l13969:
 23284                           
 23285                           ; BSR set to: 0
 23286                           ;lorawan.c: 2173: else
 23287                           ;lorawan.c: 2174: {
 23288                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 23289  006CC2  0100               	movlb	0	; () banked
 23290  006CC4  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23291  006CC6  0D01               	mullw	1
 23292  006CC8  0EAA               	movlw	low _aesBuffer
 23293  006CCA  24F3               	addwf	prodl,w,c
 23294  006CCC  0100               	movlb	0	; () banked
 23295  006CCE  6F64               	movwf	memcpy@d1& (0+255),b
 23296  006CD0  0E01               	movlw	high _aesBuffer
 23297  006CD2  20F4               	addwfc	prodh,w,c
 23298  006CD4  0100               	movlb	0	; () banked
 23299  006CD6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23300  006CD8  0E62               	movlw	low (_loRa+98)
 23301  006CDA  0100               	movlb	0	; () banked
 23302  006CDC  6F66               	movwf	memcpy@s1& (0+255),b
 23303  006CDE  0E02               	movlw	high (_loRa+98)
 23304  006CE0  0100               	movlb	0	; () banked
 23305  006CE2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23306  006CE4  0E00               	movlw	0
 23307  006CE6  0100               	movlb	0	; () banked
 23308  006CE8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23309  006CEA  0E04               	movlw	4
 23310  006CEC  6F68               	movwf	memcpy@n& (0+255),b
 23311  006CEE  ECCA  F048         	call	_memcpy	;wreg free
 23312  006CF2                     l13971:
 23313                           
 23314                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 23315  006CF2  0100               	movlb	0	; () banked
 23316  006CF4  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23317  006CF6  0F04               	addlw	4
 23318  006CF8  0100               	movlb	0	; () banked
 23319  006CFA  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23320                           
 23321                           ; BSR set to: 0
 23322                           ;lorawan.c: 2177: }
 23323                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 23324                           
 23325                           ; BSR set to: 0
 23326  006CFC  0100               	movlb	0	; () banked
 23327  006CFE  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23328  006D00  0D01               	mullw	1
 23329  006D02  0EAA               	movlw	low _aesBuffer
 23330  006D04  24F3               	addwf	prodl,w,c
 23331  006D06  0100               	movlb	0	; () banked
 23332  006D08  6F64               	movwf	memcpy@d1& (0+255),b
 23333  006D0A  0E01               	movlw	high _aesBuffer
 23334  006D0C  20F4               	addwfc	prodh,w,c
 23335  006D0E  0100               	movlb	0	; () banked
 23336  006D10  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23337  006D12  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 23338  006D14  0100               	movlb	0	; () banked
 23339  006D16  6F66               	movwf	memcpy@s1& (0+255),b
 23340  006D18  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 23341  006D1A  0100               	movlb	0	; () banked
 23342  006D1C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23343  006D1E  0E00               	movlw	0
 23344  006D20  0100               	movlb	0	; () banked
 23345  006D22  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23346  006D24  0E04               	movlw	4
 23347  006D26  6F68               	movwf	memcpy@n& (0+255),b
 23348  006D28  ECCA  F048         	call	_memcpy	;wreg free
 23349                           
 23350                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 23351  006D2C  0100               	movlb	0	; () banked
 23352  006D2E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23353  006D30  0F04               	addlw	4
 23354  006D32  0100               	movlb	0	; () banked
 23355  006D34  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23356                           
 23357                           ; BSR set to: 0
 23358                           ;lorawan.c: 2182: bufferIndex ++;
 23359  006D36  0100               	movlb	0	; () banked
 23360  006D38  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23361                           
 23362                           ; BSR set to: 0
 23363                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 23364  006D3A  0100               	movlb	0	; () banked
 23365  006D3C  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23366  006D3E  0D01               	mullw	1
 23367  006D40  0EAA               	movlw	low _aesBuffer
 23368  006D42  24F3               	addwf	prodl,w,c
 23369  006D44  6ED9               	movwf	fsr2l,c
 23370  006D46  0E01               	movlw	high _aesBuffer
 23371  006D48  20F4               	addwfc	prodh,w,c
 23372  006D4A  6EDA               	movwf	fsr2h,c
 23373  006D4C  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 23374                           
 23375                           ; BSR set to: 0
 23376  006D50  0012               	return		;funcret
 23377  006D52                     __end_of_AssembleEncryptionBlock:
 23378                           	opt stack 0
 23379                           tosu	equ	0xFFF
 23380                           tosh	equ	0xFFE
 23381                           tosl	equ	0xFFD
 23382                           pclath	equ	0xFFA
 23383                           tblptru	equ	0xFF8
 23384                           tblptrh	equ	0xFF7
 23385                           tblptrl	equ	0xFF6
 23386                           tablat	equ	0xFF5
 23387                           prodh	equ	0xFF4
 23388                           prodl	equ	0xFF3
 23389                           intcon	equ	0xFF2
 23390                           intcon2	equ	0xFF1
 23391                           intcon3	equ	0xFF0
 23392                           indf0	equ	0xFEF
 23393                           postinc0	equ	0xFEE
 23394                           fsr0h	equ	0xFEA
 23395                           fsr0l	equ	0xFE9
 23396                           wreg	equ	0xFE8
 23397                           postinc1	equ	0xFE6
 23398                           postdec1	equ	0xFE5
 23399                           plusw1	equ	0xFE3
 23400                           fsr1h	equ	0xFE2
 23401                           fsr1l	equ	0xFE1
 23402                           indf2	equ	0xFDF
 23403                           postinc2	equ	0xFDE
 23404                           postdec2	equ	0xFDD
 23405                           plusw2	equ	0xFDB
 23406                           fsr2h	equ	0xFDA
 23407                           fsr2l	equ	0xFD9
 23408                           status	equ	0xFD8
 23409                           
 23410 ;; *************** function _CountfOptsLength *****************
 23411 ;; Defined at:
 23412 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23413 ;; Parameters:    Size  Location     Type
 23414 ;;		None
 23415 ;; Auto vars:     Size  Location     Type
 23416 ;;  i               1   11[BANK0 ] unsigned char 
 23417 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 23418 ;; Return value:  Size  Location     Type
 23419 ;;                  1    wreg      unsigned char 
 23420 ;; Registers used:
 23421 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23422 ;; Tracked objects:
 23423 ;;		On entry : 0/0
 23424 ;;		On exit  : 0/0
 23425 ;;		Unchanged: 0/0
 23426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23427 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23428 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23429 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23430 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23431 ;;Total ram usage:        8 bytes
 23432 ;; Hardware stack levels used:    1
 23433 ;; Hardware stack levels required when called:    7
 23434 ;; This function calls:
 23435 ;;		Nothing
 23436 ;; This function is called by:
 23437 ;;		_LORAWAN_GetMaxPayloadSize
 23438 ;;		_AssemblePacket
 23439 ;; This function uses a non-reentrant model
 23440 ;;
 23441                           
 23442                           	psect	text103
 23443  0072A0                     __ptext103:
 23444                           	opt stack 0
 23445  0072A0                     _CountfOptsLength:
 23446                           	opt stack 20
 23447                           
 23448                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;incstack = 0
 23452  0072A0  0E00               	movlw	0
 23453  0072A2  0100               	movlb	0	; () banked
 23454  0072A4  6F6A               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 23455                           
 23456                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 23457  0072A6  0E00               	movlw	0
 23458  0072A8  0100               	movlb	0	; () banked
 23459  0072AA  6F6B               	movwf	CountfOptsLength@i& (0+255),b
 23460  0072AC  D071               	goto	l14519
 23461  0072AE                     l14511:
 23462                           
 23463                           ; BSR set to: 0
 23464                           ;lorawan.c: 2139: {
 23465                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 23466  0072AE  0100               	movlb	0	; () banked
 23467  0072B0  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23468  0072B2  0D02               	mullw	2
 23469  0072B4  0EA8               	movlw	low (_loRa+168)
 23470  0072B6  24F3               	addwf	prodl,w,c
 23471  0072B8  6ED9               	movwf	fsr2l,c
 23472  0072BA  0E02               	movlw	high (_loRa+168)
 23473  0072BC  20F4               	addwfc	prodh,w,c
 23474  0072BE  6EDA               	movwf	fsr2h,c
 23475  0072C0  28DE               	incf	postinc2,w,c
 23476  0072C2  B4D8               	btfsc	status,2,c
 23477  0072C4  D063               	goto	l14517
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;lorawan.c: 2141: {
 23481                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 23482  0072C6  0EFE               	movlw	254
 23483  0072C8  0100               	movlb	0	; () banked
 23484  0072CA  6F64               	movwf	??_CountfOptsLength& (0+255),b
 23485  0072CC  0EFF               	movlw	255
 23486  0072CE  0100               	movlb	0	; () banked
 23487  0072D0  6F65               	movwf	(??_CountfOptsLength+1)& (0+255),b
 23488  0072D2  0100               	movlb	0	; () banked
 23489  0072D4  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23490  0072D6  0D02               	mullw	2
 23491  0072D8  0EA8               	movlw	low (_loRa+168)
 23492  0072DA  24F3               	addwf	prodl,w,c
 23493  0072DC  6ED9               	movwf	fsr2l,c
 23494  0072DE  0E02               	movlw	high (_loRa+168)
 23495  0072E0  20F4               	addwfc	prodh,w,c
 23496  0072E2  6EDA               	movwf	fsr2h,c
 23497  0072E4  50DF               	movf	indf2,w,c
 23498  0072E6  0100               	movlb	0	; () banked
 23499  0072E8  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 23500  0072EA  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 23501  0072EC  0100               	movlb	0	; () banked
 23502  0072EE  5164               	movf	??_CountfOptsLength& (0+255),w,b
 23503  0072F0  0100               	movlb	0	; () banked
 23504  0072F2  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 23505  0072F4  0100               	movlb	0	; () banked
 23506  0072F6  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 23507  0072F8  0100               	movlb	0	; () banked
 23508  0072FA  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 23509  0072FC  0E8E               	movlw	low _macEndDevCmdReplyLen
 23510  0072FE  0100               	movlb	0	; () banked
 23511  007300  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 23512  007302  6EF6               	movwf	tblptrl,c
 23513  007304  0EFF               	movlw	high _macEndDevCmdReplyLen
 23514  007306  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 23515  007308  6EF7               	movwf	tblptrh,c
 23516  00730A                     	if	1	;There are 3 active tblptr bytes
 23517  00730A  6AF8               	clrf	tblptru,c
 23518  00730C  0E00               	movlw	low (__mediumconst shr (0+16))
 23519  00730E  22F8               	addwfc	tblptru,f,c
 23520  007310                     	endif
 23521  007310  0008               	tblrd		*
 23522  007312  50F5               	movf	tablat,w,c
 23523  007314  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 23524  007318  0100               	movlb	0	; () banked
 23525  00731A  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 23526  00731C  0100               	movlb	0	; () banked
 23527  00731E  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 23528  007320  0E00               	movlw	0
 23529  007322  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 23530  007324  0100               	movlb	0	; () banked
 23531  007326  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 23532  007328  D008               	goto	l14515
 23533  00732A  0100               	movlb	0	; () banked
 23534  00732C  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 23535  00732E  E136               	bnz	l14521
 23536  007330  0E10               	movlw	16
 23537  007332  0100               	movlb	0	; () banked
 23538  007334  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 23539  007336  B0D8               	btfsc	status,0,c
 23540  007338  D031               	goto	l14521
 23541  00733A                     l14515:
 23542                           
 23543                           ; BSR set to: 0
 23544                           ;lorawan.c: 2143: {
 23545                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 23546  00733A  0EFE               	movlw	254
 23547  00733C  0100               	movlb	0	; () banked
 23548  00733E  6F64               	movwf	??_CountfOptsLength& (0+255),b
 23549  007340  0EFF               	movlw	255
 23550  007342  0100               	movlb	0	; () banked
 23551  007344  6F65               	movwf	(??_CountfOptsLength+1)& (0+255),b
 23552  007346  0100               	movlb	0	; () banked
 23553  007348  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23554  00734A  0D02               	mullw	2
 23555  00734C  0EA8               	movlw	low (_loRa+168)
 23556  00734E  24F3               	addwf	prodl,w,c
 23557  007350  6ED9               	movwf	fsr2l,c
 23558  007352  0E02               	movlw	high (_loRa+168)
 23559  007354  20F4               	addwfc	prodh,w,c
 23560  007356  6EDA               	movwf	fsr2h,c
 23561  007358  50DF               	movf	indf2,w,c
 23562  00735A  0100               	movlb	0	; () banked
 23563  00735C  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 23564  00735E  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 23565  007360  0100               	movlb	0	; () banked
 23566  007362  5164               	movf	??_CountfOptsLength& (0+255),w,b
 23567  007364  0100               	movlb	0	; () banked
 23568  007366  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 23569  007368  0100               	movlb	0	; () banked
 23570  00736A  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 23571  00736C  0100               	movlb	0	; () banked
 23572  00736E  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 23573  007370  0E8E               	movlw	low _macEndDevCmdReplyLen
 23574  007372  0100               	movlb	0	; () banked
 23575  007374  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 23576  007376  6EF6               	movwf	tblptrl,c
 23577  007378  0EFF               	movlw	high _macEndDevCmdReplyLen
 23578  00737A  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 23579  00737C  6EF7               	movwf	tblptrh,c
 23580  00737E                     	if	1	;There are 3 active tblptr bytes
 23581  00737E  6AF8               	clrf	tblptru,c
 23582  007380  0E00               	movlw	low (__mediumconst shr (0+16))
 23583  007382  22F8               	addwfc	tblptru,f,c
 23584  007384                     	endif
 23585  007384  0008               	tblrd		*
 23586  007386  50F5               	movf	tablat,w,c
 23587  007388  0100               	movlb	0	; () banked
 23588  00738A  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 23589  00738C                     l14517:
 23590                           
 23591                           ; BSR set to: 0
 23592  00738C  0100               	movlb	0	; () banked
 23593  00738E  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 23594  007390                     l14519:
 23595                           
 23596                           ; BSR set to: 0
 23597  007390  0102               	movlb	2	; () banked
 23598  007392  51A7               	movf	(_loRa+167)& (0+255),w,b
 23599  007394  0100               	movlb	0	; () banked
 23600  007396  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 23601  007398  A0D8               	btfss	status,0,c
 23602  00739A  D789               	goto	l14511
 23603  00739C                     l14521:
 23604                           
 23605                           ; BSR set to: 0
 23606                           ;lorawan.c: 2149: }
 23607                           ;lorawan.c: 2150: }
 23608                           ;lorawan.c: 2151: }
 23609                           ;lorawan.c: 2153: return macCommandLength;
 23610  00739C  0100               	movlb	0	; () banked
 23611  00739E  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 23612  0073A0  0012               	return	
 23613  0073A2                     __end_of_CountfOptsLength:
 23614                           	opt stack 0
 23615                           tosu	equ	0xFFF
 23616                           tosh	equ	0xFFE
 23617                           tosl	equ	0xFFD
 23618                           pclath	equ	0xFFA
 23619                           tblptru	equ	0xFF8
 23620                           tblptrh	equ	0xFF7
 23621                           tblptrl	equ	0xFF6
 23622                           tablat	equ	0xFF5
 23623                           prodh	equ	0xFF4
 23624                           prodl	equ	0xFF3
 23625                           intcon	equ	0xFF2
 23626                           intcon2	equ	0xFF1
 23627                           intcon3	equ	0xFF0
 23628                           indf0	equ	0xFEF
 23629                           postinc0	equ	0xFEE
 23630                           fsr0h	equ	0xFEA
 23631                           fsr0l	equ	0xFE9
 23632                           wreg	equ	0xFE8
 23633                           postinc1	equ	0xFE6
 23634                           postdec1	equ	0xFE5
 23635                           plusw1	equ	0xFE3
 23636                           fsr1h	equ	0xFE2
 23637                           fsr1l	equ	0xFE1
 23638                           indf2	equ	0xFDF
 23639                           postinc2	equ	0xFDE
 23640                           postdec2	equ	0xFDD
 23641                           plusw2	equ	0xFDB
 23642                           fsr2h	equ	0xFDA
 23643                           fsr2l	equ	0xFD9
 23644                           status	equ	0xFD8
 23645                           
 23646 ;; *************** function _ExtractMic *****************
 23647 ;; Defined at:
 23648 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23649 ;; Parameters:    Size  Location     Type
 23650 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 23651 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23652 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 23653 ;; Auto vars:     Size  Location     Type
 23654 ;;  mic             4   22[BANK0 ] unsigned long 
 23655 ;; Return value:  Size  Location     Type
 23656 ;;                  4   14[BANK0 ] unsigned long 
 23657 ;; Registers used:
 23658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23659 ;; Tracked objects:
 23660 ;;		On entry : 0/0
 23661 ;;		On exit  : 0/0
 23662 ;;		Unchanged: 0/0
 23663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23664 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23665 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23666 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23667 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23668 ;;Total ram usage:       12 bytes
 23669 ;; Hardware stack levels used:    1
 23670 ;; Hardware stack levels required when called:    8
 23671 ;; This function calls:
 23672 ;;		_memcpy
 23673 ;; This function is called by:
 23674 ;;		_LORAWAN_RxDone
 23675 ;; This function uses a non-reentrant model
 23676 ;;
 23677                           
 23678                           	psect	text104
 23679  008C12                     __ptext104:
 23680                           	opt stack 0
 23681  008C12                     _ExtractMic:
 23682                           	opt stack 18
 23683                           
 23684                           ;lorawan.c: 2189: uint32_t mic = 0;
 23685                           
 23686                           ; BSR set to: 0
 23687                           ;incstack = 0
 23688  008C12  0E00               	movlw	0
 23689  008C14  0100               	movlb	0	; () banked
 23690  008C16  6F76               	movwf	ExtractMic@mic& (0+255),b
 23691  008C18  0E00               	movlw	0
 23692  008C1A  6F77               	movwf	(ExtractMic@mic+1)& (0+255),b
 23693  008C1C  0E00               	movlw	0
 23694  008C1E  6F78               	movwf	(ExtractMic@mic+2)& (0+255),b
 23695  008C20  0E00               	movlw	0
 23696  008C22  6F79               	movwf	(ExtractMic@mic+3)& (0+255),b
 23697                           
 23698                           ; BSR set to: 0
 23699                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 23700  008C24  0E76               	movlw	low ExtractMic@mic
 23701  008C26  0100               	movlb	0	; () banked
 23702  008C28  6F64               	movwf	memcpy@d1& (0+255),b
 23703  008C2A  0E00               	movlw	high ExtractMic@mic
 23704  008C2C  0100               	movlb	0	; () banked
 23705  008C2E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23706  008C30  0EFC               	movlw	252
 23707  008C32  0100               	movlb	0	; () banked
 23708  008C34  6F72               	movwf	??_ExtractMic& (0+255),b
 23709  008C36  0EFF               	movlw	255
 23710  008C38  0100               	movlb	0	; () banked
 23711  008C3A  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 23712  008C3C  0100               	movlb	0	; () banked
 23713  008C3E  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 23714  008C40  0100               	movlb	0	; () banked
 23715  008C42  6F74               	movwf	(??_ExtractMic+2)& (0+255),b
 23716  008C44  6B75               	clrf	(??_ExtractMic+3)& (0+255),b
 23717  008C46  0100               	movlb	0	; () banked
 23718  008C48  5172               	movf	??_ExtractMic& (0+255),w,b
 23719  008C4A  0100               	movlb	0	; () banked
 23720  008C4C  2774               	addwf	(??_ExtractMic+2)& (0+255),f,b
 23721  008C4E  0100               	movlb	0	; () banked
 23722  008C50  5173               	movf	(??_ExtractMic+1)& (0+255),w,b
 23723  008C52  0100               	movlb	0	; () banked
 23724  008C54  2375               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 23725  008C56  0100               	movlb	0	; () banked
 23726  008C58  5174               	movf	(??_ExtractMic+2)& (0+255),w,b
 23727  008C5A  0100               	movlb	0	; () banked
 23728  008C5C  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 23729  008C5E  0100               	movlb	0	; () banked
 23730  008C60  6F66               	movwf	memcpy@s1& (0+255),b
 23731  008C62  0100               	movlb	0	; () banked
 23732  008C64  5175               	movf	(??_ExtractMic+3)& (0+255),w,b
 23733  008C66  0100               	movlb	0	; () banked
 23734  008C68  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 23735  008C6A  0100               	movlb	0	; () banked
 23736  008C6C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23737  008C6E  0E00               	movlw	0
 23738  008C70  0100               	movlb	0	; () banked
 23739  008C72  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23740  008C74  0E04               	movlw	4
 23741  008C76  6F68               	movwf	memcpy@n& (0+255),b
 23742  008C78  ECCA  F048         	call	_memcpy	;wreg free
 23743                           
 23744                           ;lorawan.c: 2191: return mic;
 23745  008C7C  C076  F06E         	movff	ExtractMic@mic,?_ExtractMic
 23746  008C80  C077  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 23747  008C84  C078  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 23748  008C88  C079  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 23749  008C8C  0012               	return	
 23750  008C8E                     __end_of_ExtractMic:
 23751                           	opt stack 0
 23752                           tosu	equ	0xFFF
 23753                           tosh	equ	0xFFE
 23754                           tosl	equ	0xFFD
 23755                           pclath	equ	0xFFA
 23756                           tblptru	equ	0xFF8
 23757                           tblptrh	equ	0xFF7
 23758                           tblptrl	equ	0xFF6
 23759                           tablat	equ	0xFF5
 23760                           prodh	equ	0xFF4
 23761                           prodl	equ	0xFF3
 23762                           intcon	equ	0xFF2
 23763                           intcon2	equ	0xFF1
 23764                           intcon3	equ	0xFF0
 23765                           indf0	equ	0xFEF
 23766                           postinc0	equ	0xFEE
 23767                           fsr0h	equ	0xFEA
 23768                           fsr0l	equ	0xFE9
 23769                           wreg	equ	0xFE8
 23770                           postinc1	equ	0xFE6
 23771                           postdec1	equ	0xFE5
 23772                           plusw1	equ	0xFE3
 23773                           fsr1h	equ	0xFE2
 23774                           fsr1l	equ	0xFE1
 23775                           indf2	equ	0xFDF
 23776                           postinc2	equ	0xFDE
 23777                           postdec2	equ	0xFDD
 23778                           plusw2	equ	0xFDB
 23779                           fsr2h	equ	0xFDA
 23780                           fsr2l	equ	0xFD9
 23781                           status	equ	0xFD8
 23782                           
 23783 ;; *************** function _ComputeSessionKeys *****************
 23784 ;; Defined at:
 23785 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23786 ;; Parameters:    Size  Location     Type
 23787 ;;  joinAcceptBu    2   69[BANK0 ] PTR struct .
 23788 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23789 ;; Auto vars:     Size  Location     Type
 23790 ;;		None
 23791 ;; Return value:  Size  Location     Type
 23792 ;;                  1    wreg      void 
 23793 ;; Registers used:
 23794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23795 ;; Tracked objects:
 23796 ;;		On entry : 0/0
 23797 ;;		On exit  : 0/0
 23798 ;;		Unchanged: 0/0
 23799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23800 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23804 ;;Total ram usage:        2 bytes
 23805 ;; Hardware stack levels used:    1
 23806 ;; Hardware stack levels required when called:   10
 23807 ;; This function calls:
 23808 ;;		_AESEncodeLoRa
 23809 ;;		_PrepareSessionKeys
 23810 ;; This function is called by:
 23811 ;;		_LORAWAN_RxDone
 23812 ;; This function uses a non-reentrant model
 23813 ;;
 23814                           
 23815                           	psect	text105
 23816  00803E                     __ptext105:
 23817                           	opt stack 0
 23818  00803E                     _ComputeSessionKeys:
 23819                           	opt stack 16
 23820                           
 23821                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 23822                           
 23823                           ;incstack = 0
 23824  00803E  0E32               	movlw	low (_loRa+50)
 23825  008040  0100               	movlb	0	; () banked
 23826  008042  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 23827  008044  0E02               	movlw	high (_loRa+50)
 23828  008046  0100               	movlb	0	; () banked
 23829  008048  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 23830  00804A  0E01               	movlw	1
 23831  00804C  0100               	movlb	0	; () banked
 23832  00804E  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23833  008050  0100               	movlb	0	; () banked
 23834  008052  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 23835  008054  0E00               	movlw	0
 23836  008056  0100               	movlb	0	; () banked
 23837  008058  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23838  00805A  0100               	movlb	0	; () banked
 23839  00805C  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 23840  00805E  0E04               	movlw	4
 23841  008060  0100               	movlb	0	; () banked
 23842  008062  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23843  008064  0100               	movlb	0	; () banked
 23844  008066  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 23845  008068  0E00               	movlw	0
 23846  00806A  0100               	movlb	0	; () banked
 23847  00806C  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23848  00806E  0100               	movlb	0	; () banked
 23849  008070  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 23850  008072  ECB6  F03C         	call	_PrepareSessionKeys	;wreg free
 23851                           
 23852                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 23853  008076  0E02               	movlw	2
 23854  008078  0102               	movlb	2	; () banked
 23855  00807A  6F32               	movwf	(_loRa+50)& (0+255),b
 23856                           
 23857                           ; BSR set to: 2
 23858                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 23859  00807C  0E32               	movlw	low (_loRa+50)
 23860  00807E  0100               	movlb	0	; () banked
 23861  008080  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 23862  008082  0E02               	movlw	high (_loRa+50)
 23863  008084  0100               	movlb	0	; () banked
 23864  008086  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 23865  008088  0E42               	movlw	low (_loRa+66)
 23866  00808A  0100               	movlb	0	; () banked
 23867  00808C  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 23868  00808E  0E02               	movlw	high (_loRa+66)
 23869  008090  0100               	movlb	0	; () banked
 23870  008092  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 23871  008094  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 23872                           
 23873                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 23874  008098  0E22               	movlw	low (_loRa+34)
 23875  00809A  0100               	movlb	0	; () banked
 23876  00809C  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 23877  00809E  0E02               	movlw	high (_loRa+34)
 23878  0080A0  0100               	movlb	0	; () banked
 23879  0080A2  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 23880  0080A4  0E01               	movlw	1
 23881  0080A6  0100               	movlb	0	; () banked
 23882  0080A8  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23883  0080AA  0100               	movlb	0	; () banked
 23884  0080AC  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 23885  0080AE  0E00               	movlw	0
 23886  0080B0  0100               	movlb	0	; () banked
 23887  0080B2  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23888  0080B4  0100               	movlb	0	; () banked
 23889  0080B6  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 23890  0080B8  0E04               	movlw	4
 23891  0080BA  0100               	movlb	0	; () banked
 23892  0080BC  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23893  0080BE  0100               	movlb	0	; () banked
 23894  0080C0  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 23895  0080C2  0E00               	movlw	0
 23896  0080C4  0100               	movlb	0	; () banked
 23897  0080C6  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23898  0080C8  0100               	movlb	0	; () banked
 23899  0080CA  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 23900  0080CC  ECB6  F03C         	call	_PrepareSessionKeys	;wreg free
 23901                           
 23902                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 23903  0080D0  0E01               	movlw	1
 23904  0080D2  0102               	movlb	2	; () banked
 23905  0080D4  6F22               	movwf	(_loRa+34)& (0+255),b
 23906                           
 23907                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 23908  0080D6  0E22               	movlw	low (_loRa+34)
 23909  0080D8  0100               	movlb	0	; () banked
 23910  0080DA  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 23911  0080DC  0E02               	movlw	high (_loRa+34)
 23912  0080DE  0100               	movlb	0	; () banked
 23913  0080E0  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 23914  0080E2  0E42               	movlw	low (_loRa+66)
 23915  0080E4  0100               	movlb	0	; () banked
 23916  0080E6  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 23917  0080E8  0E02               	movlw	high (_loRa+66)
 23918  0080EA  0100               	movlb	0	; () banked
 23919  0080EC  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 23920  0080EE  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 23921  0080F2  0012               	return		;funcret
 23922  0080F4                     __end_of_ComputeSessionKeys:
 23923                           	opt stack 0
 23924                           tosu	equ	0xFFF
 23925                           tosh	equ	0xFFE
 23926                           tosl	equ	0xFFD
 23927                           pclath	equ	0xFFA
 23928                           tblptru	equ	0xFF8
 23929                           tblptrh	equ	0xFF7
 23930                           tblptrl	equ	0xFF6
 23931                           tablat	equ	0xFF5
 23932                           prodh	equ	0xFF4
 23933                           prodl	equ	0xFF3
 23934                           intcon	equ	0xFF2
 23935                           intcon2	equ	0xFF1
 23936                           intcon3	equ	0xFF0
 23937                           indf0	equ	0xFEF
 23938                           postinc0	equ	0xFEE
 23939                           fsr0h	equ	0xFEA
 23940                           fsr0l	equ	0xFE9
 23941                           wreg	equ	0xFE8
 23942                           postinc1	equ	0xFE6
 23943                           postdec1	equ	0xFE5
 23944                           plusw1	equ	0xFE3
 23945                           fsr1h	equ	0xFE2
 23946                           fsr1l	equ	0xFE1
 23947                           indf2	equ	0xFDF
 23948                           postinc2	equ	0xFDE
 23949                           postdec2	equ	0xFDD
 23950                           plusw2	equ	0xFDB
 23951                           fsr2h	equ	0xFDA
 23952                           fsr2l	equ	0xFD9
 23953                           status	equ	0xFD8
 23954                           
 23955 ;; *************** function _PrepareSessionKeys *****************
 23956 ;; Defined at:
 23957 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23958 ;; Parameters:    Size  Location     Type
 23959 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 23960 ;;		 -> loRa.activationParameters(105), loRa(245), 
 23961 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 23962 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23963 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 23964 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23965 ;; Auto vars:     Size  Location     Type
 23966 ;;  index           1   20[BANK0 ] unsigned char 
 23967 ;; Return value:  Size  Location     Type
 23968 ;;                  1    wreg      void 
 23969 ;; Registers used:
 23970 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23971 ;; Tracked objects:
 23972 ;;		On entry : 0/0
 23973 ;;		On exit  : 0/0
 23974 ;;		Unchanged: 0/0
 23975 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23976 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23977 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23978 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23979 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23980 ;;Total ram usage:        7 bytes
 23981 ;; Hardware stack levels used:    1
 23982 ;; Hardware stack levels required when called:    8
 23983 ;; This function calls:
 23984 ;;		_memcpy
 23985 ;;		_memset
 23986 ;; This function is called by:
 23987 ;;		_ComputeSessionKeys
 23988 ;; This function uses a non-reentrant model
 23989 ;;
 23990                           
 23991                           	psect	text106
 23992  00796C                     __ptext106:
 23993                           	opt stack 0
 23994  00796C                     _PrepareSessionKeys:
 23995                           	opt stack 17
 23996                           
 23997                           ;lorawan.c: 2047: uint8_t index = 0;
 23998                           
 23999                           ;incstack = 0
 24000  00796C  0E00               	movlw	0
 24001  00796E  0100               	movlb	0	; () banked
 24002  007970  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24003                           
 24004                           ; BSR set to: 0
 24005                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 24006  007972  0100               	movlb	0	; () banked
 24007  007974  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24008  007976  0D01               	mullw	1
 24009  007978  50F3               	movf	prodl,w,c
 24010  00797A  0100               	movlb	0	; () banked
 24011  00797C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24012  00797E  0100               	movlb	0	; () banked
 24013  007980  6F64               	movwf	memset@p1& (0+255),b
 24014  007982  50F4               	movf	prodh,w,c
 24015  007984  0100               	movlb	0	; () banked
 24016  007986  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24017  007988  0100               	movlb	0	; () banked
 24018  00798A  6F65               	movwf	(memset@p1+1)& (0+255),b
 24019  00798C  0E00               	movlw	0
 24020  00798E  0100               	movlb	0	; () banked
 24021  007990  6F67               	movwf	(memset@c+1)& (0+255),b
 24022  007992  0E00               	movlw	0
 24023  007994  6F66               	movwf	memset@c& (0+255),b
 24024  007996  0E00               	movlw	0
 24025  007998  0100               	movlb	0	; () banked
 24026  00799A  6F69               	movwf	(memset@n+1)& (0+255),b
 24027  00799C  0E10               	movlw	16
 24028  00799E  6F68               	movwf	memset@n& (0+255),b
 24029  0079A0  ECCE  F04D         	call	_memset	;wreg free
 24030                           
 24031                           ;lorawan.c: 2050: index ++;
 24032  0079A4  0100               	movlb	0	; () banked
 24033  0079A6  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 24034                           
 24035                           ; BSR set to: 0
 24036                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 24037  0079A8  0100               	movlb	0	; () banked
 24038  0079AA  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24039  0079AC  0D01               	mullw	1
 24040  0079AE  50F3               	movf	prodl,w,c
 24041  0079B0  0100               	movlb	0	; () banked
 24042  0079B2  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24043  0079B4  0100               	movlb	0	; () banked
 24044  0079B6  6F64               	movwf	memcpy@d1& (0+255),b
 24045  0079B8  50F4               	movf	prodh,w,c
 24046  0079BA  0100               	movlb	0	; () banked
 24047  0079BC  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24048  0079BE  0100               	movlb	0	; () banked
 24049  0079C0  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24050  0079C2  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 24051  0079C6  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 24052  0079CA  0E00               	movlw	0
 24053  0079CC  0100               	movlb	0	; () banked
 24054  0079CE  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24055  0079D0  0E03               	movlw	3
 24056  0079D2  6F68               	movwf	memcpy@n& (0+255),b
 24057  0079D4  ECCA  F048         	call	_memcpy	;wreg free
 24058                           
 24059                           ;lorawan.c: 2053: index = index + 3;
 24060  0079D8  0100               	movlb	0	; () banked
 24061  0079DA  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24062  0079DC  0F03               	addlw	3
 24063  0079DE  0100               	movlb	0	; () banked
 24064  0079E0  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24065                           
 24066                           ; BSR set to: 0
 24067                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 24068  0079E2  0100               	movlb	0	; () banked
 24069  0079E4  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24070  0079E6  0D01               	mullw	1
 24071  0079E8  50F3               	movf	prodl,w,c
 24072  0079EA  0100               	movlb	0	; () banked
 24073  0079EC  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24074  0079EE  0100               	movlb	0	; () banked
 24075  0079F0  6F64               	movwf	memcpy@d1& (0+255),b
 24076  0079F2  50F4               	movf	prodh,w,c
 24077  0079F4  0100               	movlb	0	; () banked
 24078  0079F6  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24079  0079F8  0100               	movlb	0	; () banked
 24080  0079FA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24081  0079FC  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 24082  007A00  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 24083  007A04  0E00               	movlw	0
 24084  007A06  0100               	movlb	0	; () banked
 24085  007A08  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24086  007A0A  0E03               	movlw	3
 24087  007A0C  6F68               	movwf	memcpy@n& (0+255),b
 24088  007A0E  ECCA  F048         	call	_memcpy	;wreg free
 24089                           
 24090                           ;lorawan.c: 2056: index = index + 3;
 24091  007A12  0100               	movlb	0	; () banked
 24092  007A14  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24093  007A16  0F03               	addlw	3
 24094  007A18  0100               	movlb	0	; () banked
 24095  007A1A  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24096                           
 24097                           ; BSR set to: 0
 24098                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 24099  007A1C  0100               	movlb	0	; () banked
 24100  007A1E  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24101  007A20  0D01               	mullw	1
 24102  007A22  50F3               	movf	prodl,w,c
 24103  007A24  0100               	movlb	0	; () banked
 24104  007A26  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24105  007A28  0100               	movlb	0	; () banked
 24106  007A2A  6F64               	movwf	memcpy@d1& (0+255),b
 24107  007A2C  50F4               	movf	prodh,w,c
 24108  007A2E  0100               	movlb	0	; () banked
 24109  007A30  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24110  007A32  0100               	movlb	0	; () banked
 24111  007A34  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24112  007A36  0ED2               	movlw	low (_loRa+210)
 24113  007A38  0100               	movlb	0	; () banked
 24114  007A3A  6F66               	movwf	memcpy@s1& (0+255),b
 24115  007A3C  0E02               	movlw	high (_loRa+210)
 24116  007A3E  0100               	movlb	0	; () banked
 24117  007A40  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 24118  007A42  0E00               	movlw	0
 24119  007A44  0100               	movlb	0	; () banked
 24120  007A46  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24121  007A48  0E02               	movlw	2
 24122  007A4A  6F68               	movwf	memcpy@n& (0+255),b
 24123  007A4C  ECCA  F048         	call	_memcpy	;wreg free
 24124  007A50  0012               	return		;funcret
 24125  007A52                     __end_of_PrepareSessionKeys:
 24126                           	opt stack 0
 24127                           tosu	equ	0xFFF
 24128                           tosh	equ	0xFFE
 24129                           tosl	equ	0xFFD
 24130                           pclath	equ	0xFFA
 24131                           tblptru	equ	0xFF8
 24132                           tblptrh	equ	0xFF7
 24133                           tblptrl	equ	0xFF6
 24134                           tablat	equ	0xFF5
 24135                           prodh	equ	0xFF4
 24136                           prodl	equ	0xFF3
 24137                           intcon	equ	0xFF2
 24138                           intcon2	equ	0xFF1
 24139                           intcon3	equ	0xFF0
 24140                           indf0	equ	0xFEF
 24141                           postinc0	equ	0xFEE
 24142                           fsr0h	equ	0xFEA
 24143                           fsr0l	equ	0xFE9
 24144                           wreg	equ	0xFE8
 24145                           postinc1	equ	0xFE6
 24146                           postdec1	equ	0xFE5
 24147                           plusw1	equ	0xFE3
 24148                           fsr1h	equ	0xFE2
 24149                           fsr1l	equ	0xFE1
 24150                           indf2	equ	0xFDF
 24151                           postinc2	equ	0xFDE
 24152                           postdec2	equ	0xFDD
 24153                           plusw2	equ	0xFDB
 24154                           fsr2h	equ	0xFDA
 24155                           fsr2l	equ	0xFD9
 24156                           status	equ	0xFD8
 24157                           
 24158 ;; *************** function _CheckMcastFlags *****************
 24159 ;; Defined at:
 24160 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24161 ;; Parameters:    Size  Location     Type
 24162 ;;  hdr             2    4[BANK0 ] PTR struct .
 24163 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24164 ;; Auto vars:     Size  Location     Type
 24165 ;;		None
 24166 ;; Return value:  Size  Location     Type
 24167 ;;                  1    wreg      unsigned char 
 24168 ;; Registers used:
 24169 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24170 ;; Tracked objects:
 24171 ;;		On entry : 0/0
 24172 ;;		On exit  : 0/0
 24173 ;;		Unchanged: 0/0
 24174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24175 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24178 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24179 ;;Total ram usage:        2 bytes
 24180 ;; Hardware stack levels used:    1
 24181 ;; Hardware stack levels required when called:    7
 24182 ;; This function calls:
 24183 ;;		Nothing
 24184 ;; This function is called by:
 24185 ;;		_LORAWAN_RxDone
 24186 ;; This function uses a non-reentrant model
 24187 ;;
 24188                           
 24189                           	psect	text107
 24190  008866                     __ptext107:
 24191                           	opt stack 0
 24192  008866                     _CheckMcastFlags:
 24193                           	opt stack 19
 24194                           
 24195                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 24196                           
 24197                           ;incstack = 0
 24198  008866  0100               	movlb	0	; () banked
 24199  008868  EE20 F005          	lfsr	2,5
 24200  00886C  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24201  00886E  26D9               	addwf	fsr2l,f,c
 24202  008870  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24203  008872  22DA               	addwfc	fsr2h,f,c
 24204  008874  0100               	movlb	0	; () banked
 24205  008876  BADF               	btfsc	indf2,5,c
 24206  008878  D015               	goto	l15323
 24207                           
 24208                           ; BSR set to: 0
 24209  00887A  0100               	movlb	0	; () banked
 24210  00887C  EE20 F005          	lfsr	2,5
 24211  008880  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24212  008882  26D9               	addwf	fsr2l,f,c
 24213  008884  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24214  008886  22DA               	addwfc	fsr2h,f,c
 24215  008888  0100               	movlb	0	; () banked
 24216  00888A  BCDF               	btfsc	indf2,6,c
 24217  00888C  D00B               	goto	l15323
 24218                           
 24219                           ; BSR set to: 0
 24220  00888E  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 24221  008892  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 24222  008896  0100               	movlb	0	; () banked
 24223  008898  38DF               	swapf	223,w,c
 24224  00889A  32E8               	rrcf	wreg,f,c
 24225  00889C  0B07               	andlw	7
 24226  00889E  0A03               	xorlw	3
 24227  0088A0  B4D8               	btfsc	status,2,c
 24228  0088A2  D002               	goto	l15327
 24229  0088A4                     l15323:
 24230                           
 24231                           ; BSR set to: 0
 24232                           ;lorawan.c: 2110: {
 24233                           ;lorawan.c: 2111: return 0;
 24234  0088A4  0E00               	movlw	0
 24235                           
 24236                           ; BSR set to: 0
 24237  0088A6  0012               	return	
 24238  0088A8                     l15327:
 24239                           
 24240                           ; BSR set to: 0
 24241                           ;lorawan.c: 2112: }
 24242                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 24243  0088A8  0100               	movlb	0	; () banked
 24244  0088AA  EE20 F005          	lfsr	2,5
 24245  0088AE  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24246  0088B0  26D9               	addwf	fsr2l,f,c
 24247  0088B2  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24248  0088B4  22DA               	addwfc	fsr2h,f,c
 24249  0088B6  0100               	movlb	0	; () banked
 24250  0088B8  50DF               	movf	223,w,c
 24251  0088BA  0B0F               	andlw	15
 24252  0088BC  0900               	iorlw	0
 24253  0088BE  B4D8               	btfsc	status,2,c
 24254  0088C0  D002               	goto	l15335
 24255  0088C2                     l15329:
 24256                           
 24257                           ; BSR set to: 0
 24258                           ;lorawan.c: 2115: {
 24259                           ;lorawan.c: 2116: return 0;
 24260  0088C2  0E00               	movlw	0
 24261                           
 24262                           ; BSR set to: 0
 24263  0088C4  0012               	return	
 24264  0088C6                     l15335:
 24265                           
 24266                           ; BSR set to: 0
 24267                           ;lorawan.c: 2118: else
 24268                           ;lorawan.c: 2119: {
 24269                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 24270  0088C6  0100               	movlb	0	; () banked
 24271  0088C8  EE20 F008          	lfsr	2,8
 24272  0088CC  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24273  0088CE  26D9               	addwf	fsr2l,f,c
 24274  0088D0  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24275  0088D2  22DA               	addwfc	fsr2h,f,c
 24276  0088D4  50DF               	movf	indf2,w,c
 24277  0088D6  B4D8               	btfsc	status,2,c
 24278  0088D8  D7F4               	goto	l15329
 24279                           
 24280                           ; BSR set to: 0
 24281                           ;lorawan.c: 2123: }
 24282                           ;lorawan.c: 2124: }
 24283                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 24284                           
 24285                           ; BSR set to: 0
 24286                           
 24287                           ; BSR set to: 0
 24288                           
 24289                           ; BSR set to: 0
 24290                           
 24291                           ; BSR set to: 0
 24292                           ;lorawan.c: 2121: {
 24293                           ;lorawan.c: 2122: return 0;
 24294  0088DA  0100               	movlb	0	; () banked
 24295  0088DC  EE20 F005          	lfsr	2,5
 24296  0088E0  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24297  0088E2  26D9               	addwf	fsr2l,f,c
 24298  0088E4  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24299  0088E6  22DA               	addwfc	fsr2h,f,c
 24300  0088E8  0100               	movlb	0	; () banked
 24301  0088EA  A8DF               	btfss	indf2,4,c
 24302  0088EC  D002               	goto	l15345
 24303                           
 24304                           ; BSR set to: 0
 24305                           ;lorawan.c: 2127: {
 24306                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 24307  0088EE  0102               	movlb	2	; () banked
 24308  0088F0  8700               	bsf	_loRa& (0+255),3,b
 24309  0088F2                     l15345:
 24310                           
 24311                           ;lorawan.c: 2129: }
 24312                           ;lorawan.c: 2131: return 1;
 24313  0088F2  0E01               	movlw	1
 24314  0088F4  0012               	return	
 24315  0088F6                     __end_of_CheckMcastFlags:
 24316                           	opt stack 0
 24317                           tosu	equ	0xFFF
 24318                           tosh	equ	0xFFE
 24319                           tosl	equ	0xFFD
 24320                           pclath	equ	0xFFA
 24321                           tblptru	equ	0xFF8
 24322                           tblptrh	equ	0xFF7
 24323                           tblptrl	equ	0xFF6
 24324                           tablat	equ	0xFF5
 24325                           prodh	equ	0xFF4
 24326                           prodl	equ	0xFF3
 24327                           intcon	equ	0xFF2
 24328                           intcon2	equ	0xFF1
 24329                           intcon3	equ	0xFF0
 24330                           indf0	equ	0xFEF
 24331                           postinc0	equ	0xFEE
 24332                           fsr0h	equ	0xFEA
 24333                           fsr0l	equ	0xFE9
 24334                           wreg	equ	0xFE8
 24335                           postinc1	equ	0xFE6
 24336                           postdec1	equ	0xFE5
 24337                           plusw1	equ	0xFE3
 24338                           fsr1h	equ	0xFE2
 24339                           fsr1l	equ	0xFE1
 24340                           indf2	equ	0xFDF
 24341                           postinc2	equ	0xFDE
 24342                           postdec2	equ	0xFDD
 24343                           plusw2	equ	0xFDB
 24344                           fsr2h	equ	0xFDA
 24345                           fsr2l	equ	0xFD9
 24346                           status	equ	0xFD8
 24347                           
 24348 ;; *************** function _CheckFlags *****************
 24349 ;; Defined at:
 24350 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24351 ;; Parameters:    Size  Location     Type
 24352 ;;  hdr             2    4[BANK0 ] PTR struct .
 24353 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24354 ;; Auto vars:     Size  Location     Type
 24355 ;;		None
 24356 ;; Return value:  Size  Location     Type
 24357 ;;                  1    wreg      void 
 24358 ;; Registers used:
 24359 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24360 ;; Tracked objects:
 24361 ;;		On entry : 0/0
 24362 ;;		On exit  : 0/0
 24363 ;;		Unchanged: 0/0
 24364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24365 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24368 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24369 ;;Total ram usage:        2 bytes
 24370 ;; Hardware stack levels used:    1
 24371 ;; Hardware stack levels required when called:    7
 24372 ;; This function calls:
 24373 ;;		Nothing
 24374 ;; This function is called by:
 24375 ;;		_LORAWAN_RxDone
 24376 ;; This function uses a non-reentrant model
 24377 ;;
 24378                           
 24379                           	psect	text108
 24380  00906C                     __ptext108:
 24381                           	opt stack 0
 24382  00906C                     _CheckFlags:
 24383                           	opt stack 19
 24384                           
 24385                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 24386                           
 24387                           ;incstack = 0
 24388  00906C  0100               	movlb	0	; () banked
 24389  00906E  EE20 F005          	lfsr	2,5
 24390  009072  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24391  009074  26D9               	addwf	fsr2l,f,c
 24392  009076  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24393  009078  22DA               	addwfc	fsr2h,f,c
 24394  00907A  0100               	movlb	0	; () banked
 24395  00907C  AEDF               	btfss	indf2,7,c
 24396  00907E  D002               	goto	l15375
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;lorawan.c: 2077: {
 24400                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 24401  009080  0102               	movlb	2	; () banked
 24402  009082  8D02               	bsf	(_loRa+2)& (0+255),6,b
 24403  009084                     l15375:
 24404                           
 24405                           ;lorawan.c: 2079: }
 24406                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 24407  009084  0100               	movlb	0	; () banked
 24408  009086  EE20 F005          	lfsr	2,5
 24409  00908A  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24410  00908C  26D9               	addwf	fsr2l,f,c
 24411  00908E  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24412  009090  22DA               	addwfc	fsr2h,f,c
 24413  009092  0100               	movlb	0	; () banked
 24414  009094  A8DF               	btfss	indf2,4,c
 24415  009096  D002               	goto	l15379
 24416                           
 24417                           ; BSR set to: 0
 24418                           ;lorawan.c: 2082: {
 24419                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 24420  009098  0102               	movlb	2	; () banked
 24421  00909A  8700               	bsf	_loRa& (0+255),3,b
 24422  00909C                     l15379:
 24423                           
 24424                           ;lorawan.c: 2084: }
 24425                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 24426  00909C  0100               	movlb	0	; () banked
 24427  00909E  EE20 F005          	lfsr	2,5
 24428  0090A2  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24429  0090A4  26D9               	addwf	fsr2l,f,c
 24430  0090A6  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24431  0090A8  22DA               	addwfc	fsr2h,f,c
 24432  0090AA  0100               	movlb	0	; () banked
 24433  0090AC  ACDF               	btfss	indf2,6,c
 24434  0090AE  D002               	goto	l15383
 24435                           
 24436                           ; BSR set to: 0
 24437                           ;lorawan.c: 2087: {
 24438                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 24439  0090B0  0102               	movlb	2	; () banked
 24440  0090B2  8900               	bsf	_loRa& (0+255),4,b
 24441  0090B4                     l15383:
 24442                           
 24443                           ;lorawan.c: 2089: }
 24444                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 24445  0090B4  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 24446  0090B8  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 24447  0090BC  0100               	movlb	0	; () banked
 24448  0090BE  38DF               	swapf	223,w,c
 24449  0090C0  32E8               	rrcf	wreg,f,c
 24450  0090C2  0B07               	andlw	7
 24451  0090C4  0A05               	xorlw	5
 24452  0090C6  A4D8               	btfss	status,2,c
 24453  0090C8  0012               	return	
 24454                           
 24455                           ; BSR set to: 0
 24456                           ;lorawan.c: 2092: {
 24457                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 24458  0090CA  0102               	movlb	2	; () banked
 24459  0090CC  8300               	bsf	_loRa& (0+255),1,b
 24460  0090CE  0012               	return	
 24461  0090D0                     __end_of_CheckFlags:
 24462                           	opt stack 0
 24463                           tosu	equ	0xFFF
 24464                           tosh	equ	0xFFE
 24465                           tosl	equ	0xFFD
 24466                           pclath	equ	0xFFA
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           intcon3	equ	0xFF0
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           fsr0h	equ	0xFEA
 24479                           fsr0l	equ	0xFE9
 24480                           wreg	equ	0xFE8
 24481                           postinc1	equ	0xFE6
 24482                           postdec1	equ	0xFE5
 24483                           plusw1	equ	0xFE3
 24484                           fsr1h	equ	0xFE2
 24485                           fsr1l	equ	0xFE1
 24486                           indf2	equ	0xFDF
 24487                           postinc2	equ	0xFDE
 24488                           postdec2	equ	0xFDD
 24489                           plusw2	equ	0xFDB
 24490                           fsr2h	equ	0xFDA
 24491                           fsr2l	equ	0xFD9
 24492                           status	equ	0xFD8
 24493                           
 24494 ;; *************** function _RADIO_FSKPacketSent *****************
 24495 ;; Defined at:
 24496 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24497 ;; Parameters:    Size  Location     Type
 24498 ;;		None
 24499 ;; Auto vars:     Size  Location     Type
 24500 ;;  timeOnAir       4  139[BANK0 ] unsigned long 
 24501 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 24502 ;; Return value:  Size  Location     Type
 24503 ;;                  1    wreg      void 
 24504 ;; Registers used:
 24505 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24506 ;; Tracked objects:
 24507 ;;		On entry : 0/0
 24508 ;;		On exit  : 0/0
 24509 ;;		Unchanged: 0/0
 24510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24511 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24512 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24513 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24514 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24515 ;;Total ram usage:       13 bytes
 24516 ;; Hardware stack levels used:    1
 24517 ;; Hardware stack levels required when called:   15
 24518 ;; This function calls:
 24519 ;;		_LORAWAN_TxDone
 24520 ;;		_RADIO_RegisterRead
 24521 ;;		_RADIO_WriteMode
 24522 ;;		_SwTimerReadValue
 24523 ;;		_SwTimerStop
 24524 ;;		___lmul
 24525 ;; This function is called by:
 24526 ;;		_RADIO_DIO0
 24527 ;; This function uses a non-reentrant model
 24528 ;;
 24529                           
 24530                           	psect	text109
 24531  006704                     __ptext109:
 24532                           	opt stack 0
 24533  006704                     _RADIO_FSKPacketSent:
 24534                           	opt stack 13
 24535                           
 24536                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 24537                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 24538                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 24539                           
 24540                           ;incstack = 0
 24541  006704  0E3F               	movlw	63
 24542  006706  EC25  F04F         	call	_RADIO_RegisterRead
 24543  00670A  0100               	movlb	0	; () banked
 24544  00670C  6FF3               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 24545                           
 24546                           ; BSR set to: 0
 24547                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 24548  00670E  0100               	movlb	0	; () banked
 24549  006710  A7F3               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 24550  006712  0012               	return	
 24551                           
 24552                           ; BSR set to: 0
 24553                           ;radio_driver_SX1276.c: 1100: {
 24554                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24555  006714  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24556  006718  0E00               	movlw	0
 24557  00671A  0100               	movlb	0	; () banked
 24558  00671C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24559  00671E  0E00               	movlw	0
 24560  006720  EC70  F035         	call	_RADIO_WriteMode
 24561                           
 24562                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 24563  006724  0101               	movlb	1	; () banked
 24564  006726  9197               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 24565                           
 24566                           ; BSR set to: 1
 24567                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 24568  006728  0101               	movlb	1	; () banked
 24569  00672A  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24570  00672C  EC39  F04F         	call	_SwTimerStop
 24571                           
 24572                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 24573  006730  0101               	movlb	1	; () banked
 24574  006732  B997               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 24575  006734  0012               	return	
 24576                           
 24577                           ; BSR set to: 1
 24578                           ;radio_driver_SX1276.c: 1107: {
 24579                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 24580  006736  0101               	movlb	1	; () banked
 24581  006738  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24582  00673A  EC59  F04C         	call	_SwTimerReadValue
 24583  00673E  0100               	movlb	0	; () banked
 24584  006740  5198               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 24585  006742  E10B               	bnz	u19420
 24586  006744  0E1F               	movlw	31
 24587  006746  0100               	movlb	0	; () banked
 24588  006748  5D95               	subwf	?_SwTimerReadValue& (0+255),w,b
 24589  00674A  0EAC               	movlw	172
 24590  00674C  0100               	movlb	0	; () banked
 24591  00674E  5996               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 24592  006750  0EDF               	movlw	223
 24593  006752  0100               	movlb	0	; () banked
 24594  006754  5997               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 24595  006756  A0D8               	btfss	status,0,c
 24596  006758  D023               	goto	l16245
 24597  00675A                     u19420:
 24598                           
 24599                           ; BSR set to: 0
 24600  00675A  0101               	movlb	1	; () banked
 24601  00675C  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24602  00675E  EC59  F04C         	call	_SwTimerReadValue
 24603  006762  0E0D               	movlw	13
 24604  006764  D007               	goto	u19430
 24605  006766                     u19435:
 24606  006766  0100               	movlb	0	; () banked
 24607  006768  90D8               	bcf	status,0,c
 24608  00676A  3398               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 24609  00676C  3397               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 24610  00676E  0100               	movlb	0	; () banked
 24611  006770  3396               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 24612  006772  3395               	rrcf	?_SwTimerReadValue& (0+255),f,b
 24613  006774                     u19430:
 24614  006774  2EE8               	decfsz	wreg,f,c
 24615  006776  D7F7               	goto	u19435
 24616  006778  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
 24617  00677C  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 24618  006780  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 24619  006784  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 24620  006788  0E7D               	movlw	125
 24621  00678A  0100               	movlb	0	; () banked
 24622  00678C  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 24623  00678E  0E00               	movlw	0
 24624  006790  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24625  006792  0E00               	movlw	0
 24626  006794  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24627  006796  0E00               	movlw	0
 24628  006798  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24629  00679A  EC82  F046         	call	___lmul	;wreg free
 24630  00679E  D022               	goto	L13
 24631  0067A0                     l16245:
 24632  0067A0  0101               	movlb	1	; () banked
 24633  0067A2  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24634  0067A4  EC59  F04C         	call	_SwTimerReadValue
 24635  0067A8  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
 24636  0067AC  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 24637  0067B0  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 24638  0067B4  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 24639  0067B8  0E7D               	movlw	125
 24640  0067BA  0100               	movlb	0	; () banked
 24641  0067BC  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 24642  0067BE  0E00               	movlw	0
 24643  0067C0  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24644  0067C2  0E00               	movlw	0
 24645  0067C4  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24646  0067C6  0E00               	movlw	0
 24647  0067C8  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24648  0067CA  EC82  F046         	call	___lmul	;wreg free
 24649  0067CE  0E0D               	movlw	13
 24650  0067D0  D007               	goto	u19440
 24651  0067D2                     u19445:
 24652  0067D2  0100               	movlb	0	; () banked
 24653  0067D4  90D8               	bcf	status,0,c
 24654  0067D6  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
 24655  0067D8  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
 24656  0067DA  0100               	movlb	0	; () banked
 24657  0067DC  339F               	rrcf	(?___lmul+1)& (0+255),f,b
 24658  0067DE  339E               	rrcf	?___lmul& (0+255),f,b
 24659  0067E0                     u19440:
 24660  0067E0  2EE8               	decfsz	wreg,f,c
 24661  0067E2  D7F7               	goto	u19445
 24662  0067E4                     L13:
 24663  0067E4  C09E  F0EF         	movff	?___lmul,_RADIO_FSKPacketSent$1211
 24664  0067E8  C09F  F0F0         	movff	?___lmul+1,_RADIO_FSKPacketSent$1211+1
 24665  0067EC  C0A0  F0F1         	movff	?___lmul+2,_RADIO_FSKPacketSent$1211+2
 24666  0067F0  C0A1  F0F2         	movff	?___lmul+3,_RADIO_FSKPacketSent$1211+3
 24667                           
 24668                           ; BSR set to: 0
 24669  0067F4  C0EF  F0E7         	movff	_RADIO_FSKPacketSent$1211,??_RADIO_FSKPacketSent
 24670  0067F8  C0F0  F0E8         	movff	_RADIO_FSKPacketSent$1211+1,??_RADIO_FSKPacketSent+1
 24671  0067FC  C0F1  F0E9         	movff	_RADIO_FSKPacketSent$1211+2,??_RADIO_FSKPacketSent+2
 24672  006800  C0F2  F0EA         	movff	_RADIO_FSKPacketSent$1211+3,??_RADIO_FSKPacketSent+3
 24673  006804  0100               	movlb	0	; () banked
 24674  006806  1FE7               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 24675  006808  1FE8               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 24676  00680A  1FE9               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 24677  00680C  1FEA               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 24678  00680E  2BE7               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 24679  006810  0E00               	movlw	0
 24680  006812  23E8               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 24681  006814  23E9               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 24682  006816  23EA               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 24683  006818  0E20               	movlw	32
 24684  00681A  0100               	movlb	0	; () banked
 24685  00681C  25E7               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 24686  00681E  0100               	movlb	0	; () banked
 24687  006820  6FEB               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 24688  006822  0E4E               	movlw	78
 24689  006824  0100               	movlb	0	; () banked
 24690  006826  21E8               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 24691  006828  0100               	movlb	0	; () banked
 24692  00682A  6FEC               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 24693  00682C  0E00               	movlw	0
 24694  00682E  0100               	movlb	0	; () banked
 24695  006830  21E9               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 24696  006832  0100               	movlb	0	; () banked
 24697  006834  6FED               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 24698  006836  0E00               	movlw	0
 24699  006838  0100               	movlb	0	; () banked
 24700  00683A  21EA               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 24701  00683C  0100               	movlb	0	; () banked
 24702  00683E  6FEE               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 24703                           
 24704                           ; BSR set to: 0
 24705                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 24706  006840  0101               	movlb	1	; () banked
 24707  006842  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24708  006844  EC39  F04F         	call	_SwTimerStop
 24709                           
 24710                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 24711  006848  C0EB  F0BF         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 24712  00684C  C0EC  F0C0         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 24713  006850  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
 24714  006854  0012               	return	
 24715  006856                     __end_of_RADIO_FSKPacketSent:
 24716                           	opt stack 0
 24717                           tosu	equ	0xFFF
 24718                           tosh	equ	0xFFE
 24719                           tosl	equ	0xFFD
 24720                           pclath	equ	0xFFA
 24721                           tblptru	equ	0xFF8
 24722                           tblptrh	equ	0xFF7
 24723                           tblptrl	equ	0xFF6
 24724                           tablat	equ	0xFF5
 24725                           prodh	equ	0xFF4
 24726                           prodl	equ	0xFF3
 24727                           intcon	equ	0xFF2
 24728                           intcon2	equ	0xFF1
 24729                           intcon3	equ	0xFF0
 24730                           indf0	equ	0xFEF
 24731                           postinc0	equ	0xFEE
 24732                           fsr0h	equ	0xFEA
 24733                           fsr0l	equ	0xFE9
 24734                           wreg	equ	0xFE8
 24735                           postinc1	equ	0xFE6
 24736                           postdec1	equ	0xFE5
 24737                           plusw1	equ	0xFE3
 24738                           fsr1h	equ	0xFE2
 24739                           fsr1l	equ	0xFE1
 24740                           indf2	equ	0xFDF
 24741                           postinc2	equ	0xFDE
 24742                           postdec2	equ	0xFDD
 24743                           plusw2	equ	0xFDB
 24744                           fsr2h	equ	0xFDA
 24745                           fsr2l	equ	0xFD9
 24746                           status	equ	0xFD8
 24747                           
 24748 ;; *************** function _LORAWAN_TxDone *****************
 24749 ;; Defined at:
 24750 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24751 ;; Parameters:    Size  Location     Type
 24752 ;;  timeOnAir       2   95[BANK0 ] unsigned int 
 24753 ;; Auto vars:     Size  Location     Type
 24754 ;;  minim           4  130[BANK0 ] unsigned long 
 24755 ;;  ticks           4  126[BANK0 ] unsigned long 
 24756 ;;  delta           4  118[BANK0 ] unsigned long 
 24757 ;;  i               1  134[BANK0 ] unsigned char 
 24758 ;;  found           1  117[BANK0 ] unsigned char 
 24759 ;; Return value:  Size  Location     Type
 24760 ;;                  1    wreg      void 
 24761 ;; Registers used:
 24762 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24763 ;; Tracked objects:
 24764 ;;		On entry : 0/0
 24765 ;;		On exit  : 0/0
 24766 ;;		Unchanged: 0/0
 24767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24768 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24769 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24770 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24771 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24772 ;;Total ram usage:       40 bytes
 24773 ;; Hardware stack levels used:    1
 24774 ;; Hardware stack levels required when called:   14
 24775 ;; This function calls:
 24776 ;;		_LORAWAN_EnterContinuousReceive
 24777 ;;		_RADIO_GetStatus
 24778 ;;		_RxDataDone
 24779 ;;		_SwTimerIsRunning
 24780 ;;		_SwTimerReadValue
 24781 ;;		_SwTimerSetTimeout
 24782 ;;		_SwTimerStart
 24783 ;;		_SwTimerStop
 24784 ;;		___lldiv
 24785 ;;		___lmul
 24786 ;; This function is called by:
 24787 ;;		_RADIO_TxDone
 24788 ;;		_RADIO_FSKPacketSent
 24789 ;;		_RADIO_WatchdogTimeout
 24790 ;; This function uses a non-reentrant model
 24791 ;;
 24792                           
 24793                           	psect	text110
 24794  000F38                     __ptext110:
 24795                           	opt stack 0
 24796  000F38                     _LORAWAN_TxDone:
 24797                           	opt stack 13
 24798                           
 24799                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 24800                           
 24801                           ;incstack = 0
 24802  000F38  0102               	movlb	2	; () banked
 24803  000F3A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 24804  000F3C  EFBE  F00B         	goto	l16021
 24805                           
 24806                           ; BSR set to: 2
 24807                           ;lorawan_eu.c: 368: {
 24808                           ;lorawan_eu.c: 369: bool found = 0;
 24809  000F40  0E00               	movlw	0
 24810  000F42  0100               	movlb	0	; () banked
 24811  000F44  6FD5               	movwf	LORAWAN_TxDone@found& (0+255),b
 24812                           
 24813                           ;lorawan_eu.c: 370: uint8_t i;
 24814                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 24815  000F46  0E00               	movlw	0
 24816  000F48  0100               	movlb	0	; () banked
 24817  000F4A  6FD6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 24818  000F4C  0E00               	movlw	0
 24819  000F4E  6FD7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 24820  000F50  0E00               	movlw	0
 24821  000F52  6FD8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 24822  000F54  0E00               	movlw	0
 24823  000F56  6FD9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 24824                           
 24825                           ; BSR set to: 0
 24826  000F58  0100               	movlb	0	; () banked
 24827  000F5A  69E2               	setf	LORAWAN_TxDone@minim& (0+255),b
 24828  000F5C  69E3               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 24829  000F5E  69E4               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 24830  000F60  69E5               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 24831                           
 24832                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 24833  000F62  0E00               	movlw	0
 24834  000F64  0102               	movlb	2	; () banked
 24835  000F66  6FF1               	movwf	(_loRa+241)& (0+255),b
 24836                           
 24837                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 24838  000F68  0102               	movlb	2	; () banked
 24839  000F6A  5102               	movf	(_loRa+2)& (0+255),w,b
 24840  000F6C  0BF0               	andlw	-16
 24841  000F6E  0902               	iorlw	2
 24842  000F70  6F02               	movwf	(_loRa+2)& (0+255),b
 24843                           
 24844                           ; BSR set to: 2
 24845                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 24846  000F72  C2DA  F0E6         	movff	_loRa+218,LORAWAN_TxDone@i
 24847                           
 24848                           ; BSR set to: 2
 24849                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 24850  000F76  0102               	movlb	2	; () banked
 24851  000F78  A500               	btfss	_loRa& (0+255),2,b
 24852  000F7A  D0D2               	goto	l15955
 24853                           
 24854                           ; BSR set to: 2
 24855                           ;lorawan_eu.c: 382: {
 24856                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 24857  000F7C  0102               	movlb	2	; () banked
 24858  000F7E  5117               	movf	(_loRa+23)& (0+255),w,b
 24859  000F80  0D01               	mullw	1
 24860  000F82  0E77               	movlw	low _rxWindowOffset
 24861  000F84  24F3               	addwf	prodl,w,c
 24862  000F86  6EF6               	movwf	tblptrl,c
 24863  000F88  0EFF               	movlw	high _rxWindowOffset
 24864  000F8A  20F4               	addwfc	prodh,w,c
 24865  000F8C  6EF7               	movwf	tblptrh,c
 24866  000F8E                     	if	1	;There are 3 active tblptr bytes
 24867  000F8E  6AF8               	clrf	tblptru,c
 24868  000F90  0E00               	movlw	low (__mediumconst shr (0+16))
 24869  000F92  22F8               	addwfc	tblptru,f,c
 24870  000F94                     	endif
 24871  000F94  0008               	tblrd		*
 24872  000F96  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 24873  000F9A  0102               	movlb	2	; () banked
 24874  000F9C  5198               	movf	(_loRa+152)& (0+255),w,b
 24875  000F9E  0100               	movlb	0	; () banked
 24876  000FA0  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24877  000FA2  0100               	movlb	0	; () banked
 24878  000FA4  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 24879  000FA6  0E00               	movlw	0
 24880  000FA8  0100               	movlb	0	; () banked
 24881  000FAA  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 24882  000FAC  0EFF               	movlw	255
 24883  000FAE  0102               	movlb	2	; () banked
 24884  000FB0  2199               	addwfc	(_loRa+153)& (0+255),w,b
 24885  000FB2  0100               	movlb	0	; () banked
 24886  000FB4  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 24887  000FB6  0100               	movlb	0	; () banked
 24888  000FB8  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 24889  000FBA  0100               	movlb	0	; () banked
 24890  000FBC  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 24891  000FBE  0E0C               	movlw	12
 24892  000FC0                     u18925:
 24893  000FC0  90D8               	bcf	status,0,c
 24894  000FC2  0100               	movlb	0	; () banked
 24895  000FC4  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24896  000FC6  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24897  000FC8  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24898  000FCA  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24899  000FCC  2EE8               	decfsz	wreg,f,c
 24900  000FCE  D7F8               	goto	u18925
 24901  000FD0  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 24902  000FD4  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 24903  000FD8  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 24904  000FDC  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 24905  000FE0  0E7D               	movlw	125
 24906  000FE2  0100               	movlb	0	; () banked
 24907  000FE4  6F68               	movwf	___lldiv@divisor& (0+255),b
 24908  000FE6  0E00               	movlw	0
 24909  000FE8  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 24910  000FEA  0E00               	movlw	0
 24911  000FEC  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 24912  000FEE  0E00               	movlw	0
 24913  000FF0  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 24914  000FF2  EC08  F03F         	call	___lldiv	;wreg free
 24915  000FF6  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 24916  000FFA  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 24917  000FFE  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 24918  001002  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 24919  001006  0102               	movlb	2	; () banked
 24920  001008  51E2               	movf	(_loRa+226)& (0+255),w,b
 24921  00100A  EC33  F04A         	call	_SwTimerSetTimeout
 24922                           
 24923                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 24924  00100E  0102               	movlb	2	; () banked
 24925  001010  511C               	movf	(_loRa+28)& (0+255),w,b
 24926  001012  0D01               	mullw	1
 24927  001014  0E77               	movlw	low _rxWindowOffset
 24928  001016  24F3               	addwf	prodl,w,c
 24929  001018  6EF6               	movwf	tblptrl,c
 24930  00101A  0EFF               	movlw	high _rxWindowOffset
 24931  00101C  20F4               	addwfc	prodh,w,c
 24932  00101E  6EF7               	movwf	tblptrh,c
 24933  001020                     	if	1	;There are 3 active tblptr bytes
 24934  001020  6AF8               	clrf	tblptru,c
 24935  001022  0E00               	movlw	low (__mediumconst shr (0+16))
 24936  001024  22F8               	addwfc	tblptru,f,c
 24937  001026                     	endif
 24938  001026  0008               	tblrd		*
 24939  001028  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 24940  00102C  0102               	movlb	2	; () banked
 24941  00102E  519A               	movf	(_loRa+154)& (0+255),w,b
 24942  001030  0100               	movlb	0	; () banked
 24943  001032  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24944  001034  0100               	movlb	0	; () banked
 24945  001036  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 24946  001038  0E00               	movlw	0
 24947  00103A  0100               	movlb	0	; () banked
 24948  00103C  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 24949  00103E  0EFF               	movlw	255
 24950  001040  0102               	movlb	2	; () banked
 24951  001042  219B               	addwfc	(_loRa+155)& (0+255),w,b
 24952  001044  0100               	movlb	0	; () banked
 24953  001046  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 24954  001048  0100               	movlb	0	; () banked
 24955  00104A  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 24956  00104C  0100               	movlb	0	; () banked
 24957  00104E  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 24958  001050  0E0C               	movlw	12
 24959  001052                     u18935:
 24960  001052  90D8               	bcf	status,0,c
 24961  001054  0100               	movlb	0	; () banked
 24962  001056  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 24963  001058  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 24964  00105A  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 24965  00105C  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 24966  00105E  2EE8               	decfsz	wreg,f,c
 24967  001060  D7F8               	goto	u18935
 24968  001062  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 24969  001066  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 24970  00106A  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 24971  00106E  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 24972  001072  0E7D               	movlw	125
 24973  001074  0100               	movlb	0	; () banked
 24974  001076  6F68               	movwf	___lldiv@divisor& (0+255),b
 24975  001078  0E00               	movlw	0
 24976  00107A  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 24977  00107C  0E00               	movlw	0
 24978  00107E  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 24979  001080  0E00               	movlw	0
 24980  001082  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 24981  001084  EC08  F03F         	call	___lldiv	;wreg free
 24982  001088  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 24983  00108C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 24984  001090  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 24985  001094  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 24986  001098  0102               	movlb	2	; () banked
 24987  00109A  51E3               	movf	(_loRa+227)& (0+255),w,b
 24988  00109C  EC33  F04A         	call	_SwTimerSetTimeout
 24989                           
 24990                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 24991  0010A0  0102               	movlb	2	; () banked
 24992  0010A2  51E2               	movf	(_loRa+226)& (0+255),w,b
 24993  0010A4  ECCB  F041         	call	_SwTimerStart
 24994                           
 24995                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 24996  0010A8  0102               	movlb	2	; () banked
 24997  0010AA  51E3               	movf	(_loRa+227)& (0+255),w,b
 24998  0010AC  ECCB  F041         	call	_SwTimerStart
 24999                           
 25000                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25001  0010B0  C2DB  F09E         	movff	_loRa+219,___lmul@multiplier
 25002  0010B4  C2DC  F09F         	movff	_loRa+220,___lmul@multiplier+1
 25003  0010B8  0100               	movlb	0	; () banked
 25004  0010BA  6BA0               	clrf	(___lmul@multiplier+2)& (0+255),b
 25005  0010BC  6BA1               	clrf	(___lmul@multiplier+3)& (0+255),b
 25006  0010BE  0ED6               	movlw	214
 25007  0010C0  0100               	movlb	0	; () banked
 25008  0010C2  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25009  0010C4  0E0B               	movlw	11
 25010  0010C6  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25011  0010C8  0E00               	movlw	0
 25012  0010CA  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25013  0010CC  0E00               	movlw	0
 25014  0010CE  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25015  0010D0  EC82  F046         	call	___lmul	;wreg free
 25016  0010D4  0EFF               	movlw	255
 25017  0010D6  0100               	movlb	0	; () banked
 25018  0010D8  259E               	addwf	?___lmul& (0+255),w,b
 25019  0010DA  0100               	movlb	0	; () banked
 25020  0010DC  6FDA               	movwf	_LORAWAN_TxDone$6261& (0+255),b
 25021  0010DE  0EFF               	movlw	255
 25022  0010E0  0100               	movlb	0	; () banked
 25023  0010E2  219F               	addwfc	(?___lmul+1)& (0+255),w,b
 25024  0010E4  0100               	movlb	0	; () banked
 25025  0010E6  6FDB               	movwf	(_LORAWAN_TxDone$6261+1)& (0+255),b
 25026  0010E8  0EFF               	movlw	255
 25027  0010EA  0100               	movlb	0	; () banked
 25028  0010EC  21A0               	addwfc	(?___lmul+2)& (0+255),w,b
 25029  0010EE  0100               	movlb	0	; () banked
 25030  0010F0  6FDC               	movwf	(_LORAWAN_TxDone$6261+2)& (0+255),b
 25031  0010F2  0EFF               	movlw	255
 25032  0010F4  0100               	movlb	0	; () banked
 25033  0010F6  21A1               	addwfc	(?___lmul+3)& (0+255),w,b
 25034  0010F8  0100               	movlb	0	; () banked
 25035  0010FA  6FDD               	movwf	(_LORAWAN_TxDone$6261+3)& (0+255),b
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25039  0010FC  C0DA  F09E         	movff	_LORAWAN_TxDone$6261,___lmul@multiplier
 25040  001100  C0DB  F09F         	movff	_LORAWAN_TxDone$6261+1,___lmul@multiplier+1
 25041  001104  C0DC  F0A0         	movff	_LORAWAN_TxDone$6261+2,___lmul@multiplier+2
 25042  001108  C0DD  F0A1         	movff	_LORAWAN_TxDone$6261+3,___lmul@multiplier+3
 25043  00110C  C0BF  F0A2         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25044  001110  C0C0  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25045  001114  0100               	movlb	0	; () banked
 25046  001116  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25047  001118  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25048  00111A  EC82  F046         	call	___lmul	;wreg free
 25049  00111E  D0FD               	goto	L14
 25050  001120                     l15955:
 25051                           
 25052                           ;lorawan_eu.c: 390: else
 25053                           ;lorawan_eu.c: 391: {
 25054                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25055  001120  0102               	movlb	2	; () banked
 25056  001122  5117               	movf	(_loRa+23)& (0+255),w,b
 25057  001124  0D01               	mullw	1
 25058  001126  0E77               	movlw	low _rxWindowOffset
 25059  001128  24F3               	addwf	prodl,w,c
 25060  00112A  6EF6               	movwf	tblptrl,c
 25061  00112C  0EFF               	movlw	high _rxWindowOffset
 25062  00112E  20F4               	addwfc	prodh,w,c
 25063  001130  6EF7               	movwf	tblptrh,c
 25064  001132                     	if	1	;There are 3 active tblptr bytes
 25065  001132  6AF8               	clrf	tblptru,c
 25066  001134  0E00               	movlw	low (__mediumconst shr (0+16))
 25067  001136  22F8               	addwfc	tblptru,f,c
 25068  001138                     	endif
 25069  001138  0008               	tblrd		*
 25070  00113A  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 25071  00113E  0102               	movlb	2	; () banked
 25072  001140  5194               	movf	(_loRa+148)& (0+255),w,b
 25073  001142  0100               	movlb	0	; () banked
 25074  001144  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25075  001146  0100               	movlb	0	; () banked
 25076  001148  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25077  00114A  0E00               	movlw	0
 25078  00114C  0100               	movlb	0	; () banked
 25079  00114E  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25080  001150  0EFF               	movlw	255
 25081  001152  0102               	movlb	2	; () banked
 25082  001154  2195               	addwfc	(_loRa+149)& (0+255),w,b
 25083  001156  0100               	movlb	0	; () banked
 25084  001158  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25085  00115A  0100               	movlb	0	; () banked
 25086  00115C  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25087  00115E  0100               	movlb	0	; () banked
 25088  001160  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25089  001162  0E0C               	movlw	12
 25090  001164                     u18945:
 25091  001164  90D8               	bcf	status,0,c
 25092  001166  0100               	movlb	0	; () banked
 25093  001168  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25094  00116A  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25095  00116C  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25096  00116E  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25097  001170  2EE8               	decfsz	wreg,f,c
 25098  001172  D7F8               	goto	u18945
 25099  001174  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25100  001178  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25101  00117C  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25102  001180  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25103  001184  0E7D               	movlw	125
 25104  001186  0100               	movlb	0	; () banked
 25105  001188  6F68               	movwf	___lldiv@divisor& (0+255),b
 25106  00118A  0E00               	movlw	0
 25107  00118C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25108  00118E  0E00               	movlw	0
 25109  001190  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25110  001192  0E00               	movlw	0
 25111  001194  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25112  001196  EC08  F03F         	call	___lldiv	;wreg free
 25113  00119A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25114  00119E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25115  0011A2  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25116  0011A6  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25117  0011AA  0102               	movlb	2	; () banked
 25118  0011AC  51E4               	movf	(_loRa+228)& (0+255),w,b
 25119  0011AE  EC33  F04A         	call	_SwTimerSetTimeout
 25120                           
 25121                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25122  0011B2  0102               	movlb	2	; () banked
 25123  0011B4  511C               	movf	(_loRa+28)& (0+255),w,b
 25124  0011B6  0D01               	mullw	1
 25125  0011B8  0E77               	movlw	low _rxWindowOffset
 25126  0011BA  24F3               	addwf	prodl,w,c
 25127  0011BC  6EF6               	movwf	tblptrl,c
 25128  0011BE  0EFF               	movlw	high _rxWindowOffset
 25129  0011C0  20F4               	addwfc	prodh,w,c
 25130  0011C2  6EF7               	movwf	tblptrh,c
 25131  0011C4                     	if	1	;There are 3 active tblptr bytes
 25132  0011C4  6AF8               	clrf	tblptru,c
 25133  0011C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25134  0011C8  22F8               	addwfc	tblptru,f,c
 25135  0011CA                     	endif
 25136  0011CA  0008               	tblrd		*
 25137  0011CC  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 25138  0011D0  0102               	movlb	2	; () banked
 25139  0011D2  5196               	movf	(_loRa+150)& (0+255),w,b
 25140  0011D4  0100               	movlb	0	; () banked
 25141  0011D6  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25142  0011D8  0100               	movlb	0	; () banked
 25143  0011DA  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25144  0011DC  0E00               	movlw	0
 25145  0011DE  0100               	movlb	0	; () banked
 25146  0011E0  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25147  0011E2  0EFF               	movlw	255
 25148  0011E4  0102               	movlb	2	; () banked
 25149  0011E6  2197               	addwfc	(_loRa+151)& (0+255),w,b
 25150  0011E8  0100               	movlb	0	; () banked
 25151  0011EA  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25152  0011EC  0100               	movlb	0	; () banked
 25153  0011EE  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25154  0011F0  0100               	movlb	0	; () banked
 25155  0011F2  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25156  0011F4  0E0C               	movlw	12
 25157  0011F6                     u18955:
 25158  0011F6  90D8               	bcf	status,0,c
 25159  0011F8  0100               	movlb	0	; () banked
 25160  0011FA  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25161  0011FC  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25162  0011FE  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25163  001200  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25164  001202  2EE8               	decfsz	wreg,f,c
 25165  001204  D7F8               	goto	u18955
 25166  001206  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25167  00120A  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25168  00120E  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25169  001212  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25170  001216  0E7D               	movlw	125
 25171  001218  0100               	movlb	0	; () banked
 25172  00121A  6F68               	movwf	___lldiv@divisor& (0+255),b
 25173  00121C  0E00               	movlw	0
 25174  00121E  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25175  001220  0E00               	movlw	0
 25176  001222  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25177  001224  0E00               	movlw	0
 25178  001226  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25179  001228  EC08  F03F         	call	___lldiv	;wreg free
 25180  00122C  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25181  001230  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25182  001234  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25183  001238  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25184  00123C  0102               	movlb	2	; () banked
 25185  00123E  51E5               	movf	(_loRa+229)& (0+255),w,b
 25186  001240  EC33  F04A         	call	_SwTimerSetTimeout
 25187                           
 25188                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 25189  001244  0102               	movlb	2	; () banked
 25190  001246  51E4               	movf	(_loRa+228)& (0+255),w,b
 25191  001248  ECCB  F041         	call	_SwTimerStart
 25192                           
 25193                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 25194  00124C  0102               	movlb	2	; () banked
 25195  00124E  5112               	movf	(_loRa+18)& (0+255),w,b
 25196  001250  A4D8               	btfss	status,2,c
 25197  001252  D004               	goto	l1020
 25198                           
 25199                           ; BSR set to: 2
 25200                           ;lorawan_eu.c: 396: {
 25201                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 25202  001254  0102               	movlb	2	; () banked
 25203  001256  51E5               	movf	(_loRa+229)& (0+255),w,b
 25204  001258  ECCB  F041         	call	_SwTimerStart
 25205  00125C                     l1020:
 25206                           
 25207                           ;lorawan_eu.c: 398: }
 25208                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25209  00125C  0100               	movlb	0	; () banked
 25210  00125E  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25211  001260  0D0E               	mullw	14
 25212  001262  0E06               	movlw	6
 25213  001264  26F3               	addwf	prodl,f,c
 25214  001266  0E00               	movlw	0
 25215  001268  22F4               	addwfc	prodh,f,c
 25216  00126A  0E00               	movlw	low _Channels
 25217  00126C  24F3               	addwf	prodl,w,c
 25218  00126E  6ED9               	movwf	fsr2l,c
 25219  001270  0E04               	movlw	high _Channels
 25220  001272  20F4               	addwfc	prodh,w,c
 25221  001274  6EDA               	movwf	fsr2h,c
 25222  001276  CFDE F0C1          	movff	postinc2,??_LORAWAN_TxDone
 25223  00127A  CFDD F0C2          	movff	postdec2,??_LORAWAN_TxDone+1
 25224  00127E  0100               	movlb	0	; () banked
 25225  001280  51C1               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25226  001282  0100               	movlb	0	; () banked
 25227  001284  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25228  001286  0100               	movlb	0	; () banked
 25229  001288  51C2               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25230  00128A  0100               	movlb	0	; () banked
 25231  00128C  6FC4               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 25232  00128E  0100               	movlb	0	; () banked
 25233  001290  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25234  001292  0100               	movlb	0	; () banked
 25235  001294  6BC6               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 25236  001296  0E01               	movlw	1
 25237  001298  0100               	movlb	0	; () banked
 25238  00129A  25C3               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25239  00129C  0100               	movlb	0	; () banked
 25240  00129E  6F9E               	movwf	___lmul@multiplier& (0+255),b
 25241  0012A0  0E00               	movlw	0
 25242  0012A2  0100               	movlb	0	; () banked
 25243  0012A4  21C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25244  0012A6  0100               	movlb	0	; () banked
 25245  0012A8  6F9F               	movwf	(___lmul@multiplier+1)& (0+255),b
 25246  0012AA  0E00               	movlw	0
 25247  0012AC  0100               	movlb	0	; () banked
 25248  0012AE  21C5               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25249  0012B0  0100               	movlb	0	; () banked
 25250  0012B2  6FA0               	movwf	(___lmul@multiplier+2)& (0+255),b
 25251  0012B4  0E00               	movlw	0
 25252  0012B6  0100               	movlb	0	; () banked
 25253  0012B8  21C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25254  0012BA  0100               	movlb	0	; () banked
 25255  0012BC  6FA1               	movwf	(___lmul@multiplier+3)& (0+255),b
 25256  0012BE  C2DB  F0A2         	movff	_loRa+219,___lmul@multiplicand
 25257  0012C2  C2DC  F0A3         	movff	_loRa+220,___lmul@multiplicand+1
 25258  0012C6  0100               	movlb	0	; () banked
 25259  0012C8  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25260  0012CA  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25261  0012CC  EC82  F046         	call	___lmul	;wreg free
 25262  0012D0  0EFF               	movlw	255
 25263  0012D2  0100               	movlb	0	; () banked
 25264  0012D4  259E               	addwf	?___lmul& (0+255),w,b
 25265  0012D6  0100               	movlb	0	; () banked
 25266  0012D8  6FDA               	movwf	_LORAWAN_TxDone$6261& (0+255),b
 25267  0012DA  0EFF               	movlw	255
 25268  0012DC  0100               	movlb	0	; () banked
 25269  0012DE  219F               	addwfc	(?___lmul+1)& (0+255),w,b
 25270  0012E0  0100               	movlb	0	; () banked
 25271  0012E2  6FDB               	movwf	(_LORAWAN_TxDone$6261+1)& (0+255),b
 25272  0012E4  0EFF               	movlw	255
 25273  0012E6  0100               	movlb	0	; () banked
 25274  0012E8  21A0               	addwfc	(?___lmul+2)& (0+255),w,b
 25275  0012EA  0100               	movlb	0	; () banked
 25276  0012EC  6FDC               	movwf	(_LORAWAN_TxDone$6261+2)& (0+255),b
 25277  0012EE  0EFF               	movlw	255
 25278  0012F0  0100               	movlb	0	; () banked
 25279  0012F2  21A1               	addwfc	(?___lmul+3)& (0+255),w,b
 25280  0012F4  0100               	movlb	0	; () banked
 25281  0012F6  6FDD               	movwf	(_LORAWAN_TxDone$6261+3)& (0+255),b
 25282                           
 25283                           ;lorawan_eu.c: 398: }
 25284                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25285  0012F8  C0DA  F09E         	movff	_LORAWAN_TxDone$6261,___lmul@multiplier
 25286  0012FC  C0DB  F09F         	movff	_LORAWAN_TxDone$6261+1,___lmul@multiplier+1
 25287  001300  C0DC  F0A0         	movff	_LORAWAN_TxDone$6261+2,___lmul@multiplier+2
 25288  001304  C0DD  F0A1         	movff	_LORAWAN_TxDone$6261+3,___lmul@multiplier+3
 25289  001308  C0BF  F0A2         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25290  00130C  C0C0  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25291  001310  0100               	movlb	0	; () banked
 25292  001312  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25293  001314  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25294  001316  EC82  F046         	call	___lmul	;wreg free
 25295  00131A                     L14:
 25296  00131A  0100               	movlb	0	; () banked
 25297  00131C  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25298  00131E  0D0E               	mullw	14
 25299  001320  0E08               	movlw	8
 25300  001322  26F3               	addwf	prodl,f,c
 25301  001324  0E00               	movlw	0
 25302  001326  22F4               	addwfc	prodh,f,c
 25303  001328  0E00               	movlw	low _Channels
 25304  00132A  24F3               	addwf	prodl,w,c
 25305  00132C  6ED9               	movwf	fsr2l,c
 25306  00132E  0E04               	movlw	high _Channels
 25307  001330  20F4               	addwfc	prodh,w,c
 25308  001332  6EDA               	movwf	fsr2h,c
 25309  001334  0100               	movlb	0	; () banked
 25310  001336  C09E  FFDE         	movff	?___lmul,postinc2
 25311  00133A  0100               	movlb	0	; () banked
 25312  00133C  C09F  FFDE         	movff	?___lmul+1,postinc2
 25313  001340  0100               	movlb	0	; () banked
 25314  001342  C0A0  FFDE         	movff	?___lmul+2,postinc2
 25315  001346  0100               	movlb	0	; () banked
 25316  001348  C0A1  FFDE         	movff	?___lmul+3,postinc2
 25317                           
 25318                           ; BSR set to: 0
 25319                           ;lorawan_eu.c: 401: }
 25320                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 25321  00134C  0102               	movlb	2	; () banked
 25322  00134E  51E9               	movf	(_loRa+233)& (0+255),w,b
 25323  001350  EC78  F04E         	call	_SwTimerIsRunning
 25324  001354  0900               	iorlw	0
 25325  001356  B4D8               	btfsc	status,2,c
 25326  001358  D094               	goto	l15973
 25327                           
 25328                           ;lorawan_eu.c: 404: {
 25329                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 25330  00135A  0102               	movlb	2	; () banked
 25331  00135C  51E9               	movf	(_loRa+233)& (0+255),w,b
 25332  00135E  EC39  F04F         	call	_SwTimerStop
 25333                           
 25334                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 25335  001362  0102               	movlb	2	; () banked
 25336  001364  51E9               	movf	(_loRa+233)& (0+255),w,b
 25337  001366  EC59  F04C         	call	_SwTimerReadValue
 25338  00136A  C095  F0DE         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 25339  00136E  C096  F0DF         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 25340  001372  C097  F0E0         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 25341  001376  C098  F0E1         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 25342                           
 25343                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 25344  00137A  0100               	movlb	0	; () banked
 25345  00137C  51E1               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 25346  00137E  E10B               	bnz	u18980
 25347  001380  0E1F               	movlw	31
 25348  001382  0100               	movlb	0	; () banked
 25349  001384  5DDE               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 25350  001386  0EAC               	movlw	172
 25351  001388  0100               	movlb	0	; () banked
 25352  00138A  59DF               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 25353  00138C  0EDF               	movlw	223
 25354  00138E  0100               	movlb	0	; () banked
 25355  001390  59E0               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 25356  001392  A0D8               	btfss	status,0,c
 25357  001394  D026               	goto	l15969
 25358  001396                     u18980:
 25359                           
 25360                           ; BSR set to: 0
 25361  001396  C0DE  F0C1         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 25362  00139A  C0DF  F0C2         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 25363  00139E  C0E0  F0C3         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 25364  0013A2  C0E1  F0C4         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 25365  0013A6  0E0D               	movlw	13
 25366  0013A8  D006               	goto	u18990
 25367  0013AA                     u18995:
 25368  0013AA  0100               	movlb	0	; () banked
 25369  0013AC  90D8               	bcf	status,0,c
 25370  0013AE  33C4               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25371  0013B0  33C3               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25372  0013B2  33C2               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25373  0013B4  33C1               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 25374  0013B6                     u18990:
 25375  0013B6  2EE8               	decfsz	wreg,f,c
 25376  0013B8  D7F8               	goto	u18995
 25377  0013BA  C0C1  F09E         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 25378  0013BE  C0C2  F09F         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 25379  0013C2  C0C3  F0A0         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 25380  0013C6  C0C4  F0A1         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 25381  0013CA  0E7D               	movlw	125
 25382  0013CC  0100               	movlb	0	; () banked
 25383  0013CE  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25384  0013D0  0E00               	movlw	0
 25385  0013D2  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25386  0013D4  0E00               	movlw	0
 25387  0013D6  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25388  0013D8  0E00               	movlw	0
 25389  0013DA  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25390  0013DC  EC82  F046         	call	___lmul	;wreg free
 25391  0013E0  D01E               	goto	L15
 25392  0013E2                     l15969:
 25393  0013E2  C0DE  F09E         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 25394  0013E6  C0DF  F09F         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 25395  0013EA  C0E0  F0A0         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 25396  0013EE  C0E1  F0A1         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 25397  0013F2  0E7D               	movlw	125
 25398  0013F4  0100               	movlb	0	; () banked
 25399  0013F6  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25400  0013F8  0E00               	movlw	0
 25401  0013FA  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25402  0013FC  0E00               	movlw	0
 25403  0013FE  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25404  001400  0E00               	movlw	0
 25405  001402  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25406  001404  EC82  F046         	call	___lmul	;wreg free
 25407  001408  0E0D               	movlw	13
 25408  00140A  D007               	goto	u19000
 25409  00140C                     u19005:
 25410  00140C  0100               	movlb	0	; () banked
 25411  00140E  90D8               	bcf	status,0,c
 25412  001410  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
 25413  001412  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
 25414  001414  0100               	movlb	0	; () banked
 25415  001416  339F               	rrcf	(?___lmul+1)& (0+255),f,b
 25416  001418  339E               	rrcf	?___lmul& (0+255),f,b
 25417  00141A                     u19000:
 25418  00141A  2EE8               	decfsz	wreg,f,c
 25419  00141C  D7F7               	goto	u19005
 25420  00141E                     L15:
 25421  00141E  C09E  F0CD         	movff	?___lmul,_LORAWAN_TxDone$2088
 25422  001422  C09F  F0CE         	movff	?___lmul+1,_LORAWAN_TxDone$2088+1
 25423  001426  C0A0  F0CF         	movff	?___lmul+2,_LORAWAN_TxDone$2088+2
 25424  00142A  C0A1  F0D0         	movff	?___lmul+3,_LORAWAN_TxDone$2088+3
 25425                           
 25426                           ; BSR set to: 0
 25427  00142E  C0CD  F0C1         	movff	_LORAWAN_TxDone$2088,??_LORAWAN_TxDone
 25428  001432  C0CE  F0C2         	movff	_LORAWAN_TxDone$2088+1,??_LORAWAN_TxDone+1
 25429  001436  C0CF  F0C3         	movff	_LORAWAN_TxDone$2088+2,??_LORAWAN_TxDone+2
 25430  00143A  C0D0  F0C4         	movff	_LORAWAN_TxDone$2088+3,??_LORAWAN_TxDone+3
 25431  00143E  0100               	movlb	0	; () banked
 25432  001440  1FC1               	comf	??_LORAWAN_TxDone& (0+255),f,b
 25433  001442  1FC2               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25434  001444  1FC3               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25435  001446  1FC4               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25436  001448  2BC1               	incf	??_LORAWAN_TxDone& (0+255),f,b
 25437  00144A  0E00               	movlw	0
 25438  00144C  23C2               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25439  00144E  23C3               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25440  001450  23C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25441  001452  0102               	movlb	2	; () banked
 25442  001454  51C8               	movf	(_loRa+200)& (0+255),w,b
 25443  001456  0100               	movlb	0	; () banked
 25444  001458  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25445  00145A  0100               	movlb	0	; () banked
 25446  00145C  6FD6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 25447  00145E  0102               	movlb	2	; () banked
 25448  001460  51C9               	movf	(_loRa+201)& (0+255),w,b
 25449  001462  0100               	movlb	0	; () banked
 25450  001464  21C2               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25451  001466  0100               	movlb	0	; () banked
 25452  001468  6FD7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 25453  00146A  0102               	movlb	2	; () banked
 25454  00146C  51CA               	movf	(_loRa+202)& (0+255),w,b
 25455  00146E  0100               	movlb	0	; () banked
 25456  001470  21C3               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25457  001472  0100               	movlb	0	; () banked
 25458  001474  6FD8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 25459  001476  0102               	movlb	2	; () banked
 25460  001478  51CB               	movf	(_loRa+203)& (0+255),w,b
 25461  00147A  0100               	movlb	0	; () banked
 25462  00147C  21C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25463  00147E  0100               	movlb	0	; () banked
 25464  001480  6FD9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 25465  001482                     l15973:
 25466                           
 25467                           ;lorawan_eu.c: 409: }
 25468                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 25469  001482  0E00               	movlw	0
 25470  001484  0100               	movlb	0	; () banked
 25471  001486  6FE6               	movwf	LORAWAN_TxDone@i& (0+255),b
 25472  001488                     l15975:
 25473                           
 25474                           ; BSR set to: 0
 25475  001488  0E0F               	movlw	15
 25476  00148A  0100               	movlb	0	; () banked
 25477  00148C  65E6               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 25478  00148E  D001               	goto	l15979
 25479  001490  D0F3               	goto	l16001
 25480  001492                     l15979:
 25481                           
 25482                           ; BSR set to: 0
 25483                           ;lorawan_eu.c: 412: {
 25484                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 25485  001492  0100               	movlb	0	; () banked
 25486  001494  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25487  001496  0D0E               	mullw	14
 25488  001498  0E04               	movlw	4
 25489  00149A  26F3               	addwf	prodl,f,c
 25490  00149C  0E00               	movlw	0
 25491  00149E  22F4               	addwfc	prodh,f,c
 25492  0014A0  0E00               	movlw	low _Channels
 25493  0014A2  24F3               	addwf	prodl,w,c
 25494  0014A4  6ED9               	movwf	fsr2l,c
 25495  0014A6  0E04               	movlw	high _Channels
 25496  0014A8  20F4               	addwfc	prodh,w,c
 25497  0014AA  6EDA               	movwf	fsr2h,c
 25498  0014AC  04DE               	decf	postinc2,w,c
 25499  0014AE  A4D8               	btfss	status,2,c
 25500  0014B0  D0E0               	goto	l15997
 25501                           
 25502                           ; BSR set to: 0
 25503  0014B2  0100               	movlb	0	; () banked
 25504  0014B4  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25505  0014B6  0D0E               	mullw	14
 25506  0014B8  0E08               	movlw	8
 25507  0014BA  26F3               	addwf	prodl,f,c
 25508  0014BC  0E00               	movlw	0
 25509  0014BE  22F4               	addwfc	prodh,f,c
 25510  0014C0  0E00               	movlw	low _Channels
 25511  0014C2  24F3               	addwf	prodl,w,c
 25512  0014C4  6ED9               	movwf	fsr2l,c
 25513  0014C6  0E04               	movlw	high _Channels
 25514  0014C8  20F4               	addwfc	prodh,w,c
 25515  0014CA  6EDA               	movwf	fsr2h,c
 25516  0014CC  50DE               	movf	postinc2,w,c
 25517  0014CE  10DE               	iorwf	postinc2,w,c
 25518  0014D0  10DE               	iorwf	postinc2,w,c
 25519  0014D2  10DE               	iorwf	postinc2,w,c
 25520  0014D4  B4D8               	btfsc	status,2,c
 25521  0014D6  D0CD               	goto	l15997
 25522                           
 25523                           ; BSR set to: 0
 25524                           ;lorawan_eu.c: 414: {
 25525                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 25526  0014D8  0100               	movlb	0	; () banked
 25527  0014DA  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25528  0014DC  0102               	movlb	2	; () banked
 25529  0014DE  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 25530  0014E0  B4D8               	btfsc	status,2,c
 25531  0014E2  D081               	goto	l1029
 25532                           
 25533                           ; BSR set to: 2
 25534                           ;lorawan_eu.c: 416: {
 25535                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 25536  0014E4  0100               	movlb	0	; () banked
 25537  0014E6  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25538  0014E8  0D0E               	mullw	14
 25539  0014EA  0E08               	movlw	8
 25540  0014EC  26F3               	addwf	prodl,f,c
 25541  0014EE  0E00               	movlw	0
 25542  0014F0  22F4               	addwfc	prodh,f,c
 25543  0014F2  0E00               	movlw	low _Channels
 25544  0014F4  24F3               	addwf	prodl,w,c
 25545  0014F6  6ED9               	movwf	fsr2l,c
 25546  0014F8  0E04               	movlw	high _Channels
 25547  0014FA  20F4               	addwfc	prodh,w,c
 25548  0014FC  6EDA               	movwf	fsr2h,c
 25549  0014FE  50DE               	movf	postinc2,w,c
 25550  001500  0100               	movlb	0	; () banked
 25551  001502  5DD6               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 25552  001504  50DE               	movf	postinc2,w,c
 25553  001506  0100               	movlb	0	; () banked
 25554  001508  59D7               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 25555  00150A  50DE               	movf	postinc2,w,c
 25556  00150C  0100               	movlb	0	; () banked
 25557  00150E  59D8               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 25558  001510  50DE               	movf	postinc2,w,c
 25559  001512  0100               	movlb	0	; () banked
 25560  001514  59D9               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 25561  001516  B0D8               	btfsc	status,0,c
 25562  001518  D055               	goto	l15989
 25563                           
 25564                           ; BSR set to: 0
 25565                           ;lorawan_eu.c: 418: {
 25566                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 25567  00151A  0100               	movlb	0	; () banked
 25568  00151C  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25569  00151E  0D0E               	mullw	14
 25570  001520  0E08               	movlw	8
 25571  001522  26F3               	addwf	prodl,f,c
 25572  001524  0E00               	movlw	0
 25573  001526  22F4               	addwfc	prodh,f,c
 25574  001528  0E00               	movlw	low _Channels
 25575  00152A  24F3               	addwf	prodl,w,c
 25576  00152C  6ED9               	movwf	fsr2l,c
 25577  00152E  0E04               	movlw	high _Channels
 25578  001530  20F4               	addwfc	prodh,w,c
 25579  001532  6EDA               	movwf	fsr2h,c
 25580  001534  CFDE F0C1          	movff	postinc2,??_LORAWAN_TxDone
 25581  001538  CFDE F0C2          	movff	postinc2,??_LORAWAN_TxDone+1
 25582  00153C  CFDE F0C3          	movff	postinc2,??_LORAWAN_TxDone+2
 25583  001540  CFDE F0C4          	movff	postinc2,??_LORAWAN_TxDone+3
 25584  001544  C0D6  F0C5         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 25585  001548  C0D7  F0C6         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 25586  00154C  C0D8  F0C7         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 25587  001550  C0D9  F0C8         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 25588  001554  0100               	movlb	0	; () banked
 25589  001556  1FC5               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25590  001558  1FC6               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25591  00155A  1FC7               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25592  00155C  1FC8               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25593  00155E  2BC5               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25594  001560  0E00               	movlw	0
 25595  001562  23C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25596  001564  23C7               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25597  001566  23C8               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25598  001568  0100               	movlb	0	; () banked
 25599  00156A  51C1               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25600  00156C  0100               	movlb	0	; () banked
 25601  00156E  25C5               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25602  001570  0100               	movlb	0	; () banked
 25603  001572  6FC9               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 25604  001574  0100               	movlb	0	; () banked
 25605  001576  51C2               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25606  001578  0100               	movlb	0	; () banked
 25607  00157A  21C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25608  00157C  0100               	movlb	0	; () banked
 25609  00157E  6FCA               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 25610  001580  0100               	movlb	0	; () banked
 25611  001582  51C3               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25612  001584  0100               	movlb	0	; () banked
 25613  001586  21C7               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 25614  001588  0100               	movlb	0	; () banked
 25615  00158A  6FCB               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 25616  00158C  0100               	movlb	0	; () banked
 25617  00158E  51C4               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25618  001590  0100               	movlb	0	; () banked
 25619  001592  21C8               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 25620  001594  0100               	movlb	0	; () banked
 25621  001596  6FCC               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 25622  001598  0100               	movlb	0	; () banked
 25623  00159A  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25624  00159C  0D0E               	mullw	14
 25625  00159E  0E08               	movlw	8
 25626  0015A0  26F3               	addwf	prodl,f,c
 25627  0015A2  0E00               	movlw	0
 25628  0015A4  22F4               	addwfc	prodh,f,c
 25629  0015A6  0E00               	movlw	low _Channels
 25630  0015A8  24F3               	addwf	prodl,w,c
 25631  0015AA  6ED9               	movwf	fsr2l,c
 25632  0015AC  0E04               	movlw	high _Channels
 25633  0015AE  20F4               	addwfc	prodh,w,c
 25634  0015B0  6EDA               	movwf	fsr2h,c
 25635  0015B2  C0C9  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 25636  0015B6  C0CA  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 25637  0015BA  C0CB  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 25638  0015BE  C0CC  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 25639                           
 25640                           ;lorawan_eu.c: 420: }
 25641  0015C2  D011               	goto	l1029
 25642  0015C4                     l15989:
 25643                           
 25644                           ; BSR set to: 0
 25645                           ;lorawan_eu.c: 421: else
 25646                           ;lorawan_eu.c: 422: {
 25647                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 25648  0015C4  0100               	movlb	0	; () banked
 25649  0015C6  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25650  0015C8  0D0E               	mullw	14
 25651  0015CA  0E08               	movlw	8
 25652  0015CC  26F3               	addwf	prodl,f,c
 25653  0015CE  0E00               	movlw	0
 25654  0015D0  22F4               	addwfc	prodh,f,c
 25655  0015D2  0E00               	movlw	low _Channels
 25656  0015D4  24F3               	addwf	prodl,w,c
 25657  0015D6  6ED9               	movwf	fsr2l,c
 25658  0015D8  0E04               	movlw	high _Channels
 25659  0015DA  20F4               	addwfc	prodh,w,c
 25660  0015DC  6EDA               	movwf	fsr2h,c
 25661  0015DE  6ADE               	clrf	postinc2,c
 25662  0015E0  6ADE               	clrf	postinc2,c
 25663  0015E2  6ADE               	clrf	postinc2,c
 25664  0015E4  6ADD               	clrf	postdec2,c
 25665  0015E6                     l1029:
 25666                           
 25667                           ;lorawan_eu.c: 424: }
 25668                           ;lorawan_eu.c: 425: }
 25669                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 25670  0015E6  0100               	movlb	0	; () banked
 25671  0015E8  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25672  0015EA  0D0E               	mullw	14
 25673  0015EC  0E08               	movlw	8
 25674  0015EE  26F3               	addwf	prodl,f,c
 25675  0015F0  0E00               	movlw	0
 25676  0015F2  22F4               	addwfc	prodh,f,c
 25677  0015F4  0E00               	movlw	low _Channels
 25678  0015F6  24F3               	addwf	prodl,w,c
 25679  0015F8  6ED9               	movwf	fsr2l,c
 25680  0015FA  0E04               	movlw	high _Channels
 25681  0015FC  20F4               	addwfc	prodh,w,c
 25682  0015FE  6EDA               	movwf	fsr2h,c
 25683  001600  50DE               	movf	postinc2,w,c
 25684  001602  0100               	movlb	0	; () banked
 25685  001604  5DE2               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 25686  001606  50DE               	movf	postinc2,w,c
 25687  001608  0100               	movlb	0	; () banked
 25688  00160A  59E3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 25689  00160C  50DE               	movf	postinc2,w,c
 25690  00160E  0100               	movlb	0	; () banked
 25691  001610  59E4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 25692  001612  50DE               	movf	postinc2,w,c
 25693  001614  0100               	movlb	0	; () banked
 25694  001616  59E5               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 25695  001618  A0D8               	btfss	status,0,c
 25696  00161A  D02B               	goto	l15997
 25697                           
 25698                           ; BSR set to: 0
 25699  00161C  0100               	movlb	0	; () banked
 25700  00161E  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25701  001620  0D0E               	mullw	14
 25702  001622  0E08               	movlw	8
 25703  001624  26F3               	addwf	prodl,f,c
 25704  001626  0E00               	movlw	0
 25705  001628  22F4               	addwfc	prodh,f,c
 25706  00162A  0E00               	movlw	low _Channels
 25707  00162C  24F3               	addwf	prodl,w,c
 25708  00162E  6ED9               	movwf	fsr2l,c
 25709  001630  0E04               	movlw	high _Channels
 25710  001632  20F4               	addwfc	prodh,w,c
 25711  001634  6EDA               	movwf	fsr2h,c
 25712  001636  50DE               	movf	postinc2,w,c
 25713  001638  10DE               	iorwf	postinc2,w,c
 25714  00163A  10DE               	iorwf	postinc2,w,c
 25715  00163C  10DE               	iorwf	postinc2,w,c
 25716  00163E  B4D8               	btfsc	status,2,c
 25717  001640  D018               	goto	l15997
 25718                           
 25719                           ; BSR set to: 0
 25720                           ;lorawan_eu.c: 427: {
 25721                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 25722  001642  0100               	movlb	0	; () banked
 25723  001644  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25724  001646  0D0E               	mullw	14
 25725  001648  0E08               	movlw	8
 25726  00164A  26F3               	addwf	prodl,f,c
 25727  00164C  0E00               	movlw	0
 25728  00164E  22F4               	addwfc	prodh,f,c
 25729  001650  0E00               	movlw	low _Channels
 25730  001652  24F3               	addwf	prodl,w,c
 25731  001654  6ED9               	movwf	fsr2l,c
 25732  001656  0E04               	movlw	high _Channels
 25733  001658  20F4               	addwfc	prodh,w,c
 25734  00165A  6EDA               	movwf	fsr2h,c
 25735  00165C  CFDE F0E2          	movff	postinc2,LORAWAN_TxDone@minim
 25736  001660  CFDE F0E3          	movff	postinc2,LORAWAN_TxDone@minim+1
 25737  001664  CFDE F0E4          	movff	postinc2,LORAWAN_TxDone@minim+2
 25738  001668  CFDE F0E5          	movff	postinc2,LORAWAN_TxDone@minim+3
 25739                           
 25740                           ; BSR set to: 0
 25741                           ;lorawan_eu.c: 429: found = 1;
 25742  00166C  0E01               	movlw	1
 25743  00166E  0100               	movlb	0	; () banked
 25744  001670  6FD5               	movwf	LORAWAN_TxDone@found& (0+255),b
 25745  001672                     l15997:
 25746                           
 25747                           ; BSR set to: 0
 25748  001672  0100               	movlb	0	; () banked
 25749  001674  2BE6               	incf	LORAWAN_TxDone@i& (0+255),f,b
 25750  001676  D708               	goto	l15975
 25751  001678                     l16001:
 25752                           
 25753                           ; BSR set to: 0
 25754                           ;lorawan_eu.c: 430: }
 25755                           ;lorawan_eu.c: 431: }
 25756                           ;lorawan_eu.c: 432: }
 25757                           ;lorawan_eu.c: 433: if (found == 1)
 25758  001678  0100               	movlb	0	; () banked
 25759  00167A  05D5               	decf	LORAWAN_TxDone@found& (0+255),w,b
 25760  00167C  A4D8               	btfss	status,2,c
 25761  00167E  D071               	goto	l16015
 25762                           
 25763                           ; BSR set to: 0
 25764                           ;lorawan_eu.c: 434: {
 25765                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 25766  001680  C0E2  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 25767  001684  C0E3  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 25768  001688  C0E4  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 25769  00168C  C0E5  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 25770                           
 25771                           ; BSR set to: 0
 25772                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 25773  001690  0100               	movlb	0	; () banked
 25774  001692  51E5               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 25775  001694  E10A               	bnz	u19100
 25776  001696  0100               	movlb	0	; () banked
 25777  001698  29E2               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 25778  00169A  0EFF               	movlw	255
 25779  00169C  0100               	movlb	0	; () banked
 25780  00169E  59E3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 25781  0016A0  0E0F               	movlw	15
 25782  0016A2  0100               	movlb	0	; () banked
 25783  0016A4  59E4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 25784  0016A6  A0D8               	btfss	status,0,c
 25785  0016A8  D020               	goto	l16009
 25786  0016AA                     u19100:
 25787                           
 25788                           ; BSR set to: 0
 25789  0016AA  C0E2  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 25790  0016AE  C0E3  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 25791  0016B2  C0E4  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 25792  0016B6  C0E5  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 25793  0016BA  0E7D               	movlw	125
 25794  0016BC  0100               	movlb	0	; () banked
 25795  0016BE  6F68               	movwf	___lldiv@divisor& (0+255),b
 25796  0016C0  0E00               	movlw	0
 25797  0016C2  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25798  0016C4  0E00               	movlw	0
 25799  0016C6  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25800  0016C8  0E00               	movlw	0
 25801  0016CA  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25802  0016CC  EC08  F03F         	call	___lldiv	;wreg free
 25803  0016D0  0E0C               	movlw	12
 25804  0016D2                     u19115:
 25805  0016D2  90D8               	bcf	status,0,c
 25806  0016D4  0100               	movlb	0	; () banked
 25807  0016D6  3764               	rlcf	?___lldiv& (0+255),f,b
 25808  0016D8  0100               	movlb	0	; () banked
 25809  0016DA  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 25810  0016DC  0100               	movlb	0	; () banked
 25811  0016DE  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 25812  0016E0  0100               	movlb	0	; () banked
 25813  0016E2  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 25814  0016E4  2EE8               	decfsz	wreg,f,c
 25815  0016E6  D7F5               	goto	u19115
 25816  0016E8  D024               	goto	L16
 25817  0016EA                     l16009:
 25818                           
 25819                           ; BSR set to: 0
 25820  0016EA  C0E2  F0C1         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 25821  0016EE  C0E3  F0C2         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 25822  0016F2  C0E4  F0C3         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 25823  0016F6  C0E5  F0C4         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 25824  0016FA  0E0C               	movlw	12
 25825  0016FC                     u19125:
 25826  0016FC  90D8               	bcf	status,0,c
 25827  0016FE  0100               	movlb	0	; () banked
 25828  001700  37C1               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 25829  001702  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25830  001704  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25831  001706  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25832  001708  2EE8               	decfsz	wreg,f,c
 25833  00170A  D7F8               	goto	u19125
 25834  00170C  C0C1  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 25835  001710  C0C2  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 25836  001714  C0C3  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 25837  001718  C0C4  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 25838  00171C  0E7D               	movlw	125
 25839  00171E  0100               	movlb	0	; () banked
 25840  001720  6F68               	movwf	___lldiv@divisor& (0+255),b
 25841  001722  0E00               	movlw	0
 25842  001724  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25843  001726  0E00               	movlw	0
 25844  001728  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25845  00172A  0E00               	movlw	0
 25846  00172C  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25847  00172E  EC08  F03F         	call	___lldiv	;wreg free
 25848  001732                     L16:
 25849  001732  C064  F0D1         	movff	?___lldiv,_LORAWAN_TxDone$2089
 25850  001736  C065  F0D2         	movff	?___lldiv+1,_LORAWAN_TxDone$2089+1
 25851  00173A  C066  F0D3         	movff	?___lldiv+2,_LORAWAN_TxDone$2089+2
 25852  00173E  C067  F0D4         	movff	?___lldiv+3,_LORAWAN_TxDone$2089+3
 25853  001742  C0D1  F071         	movff	_LORAWAN_TxDone$2089,SwTimerSetTimeout@timeout
 25854  001746  C0D2  F072         	movff	_LORAWAN_TxDone$2089+1,SwTimerSetTimeout@timeout+1
 25855  00174A  C0D3  F073         	movff	_LORAWAN_TxDone$2089+2,SwTimerSetTimeout@timeout+2
 25856  00174E  C0D4  F074         	movff	_LORAWAN_TxDone$2089+3,SwTimerSetTimeout@timeout+3
 25857  001752  0102               	movlb	2	; () banked
 25858  001754  51E9               	movf	(_loRa+233)& (0+255),w,b
 25859  001756  EC33  F04A         	call	_SwTimerSetTimeout
 25860                           
 25861                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 25862  00175A  0102               	movlb	2	; () banked
 25863  00175C  51E9               	movf	(_loRa+233)& (0+255),w,b
 25864  00175E  ECCB  F041         	call	_SwTimerStart
 25865  001762                     l16015:
 25866                           
 25867                           ;lorawan_eu.c: 438: }
 25868                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 25869  001762  0E02               	movlw	2
 25870  001764  0102               	movlb	2	; () banked
 25871  001766  1912               	xorwf	(_loRa+18)& (0+255),w,b
 25872  001768  A4D8               	btfss	status,2,c
 25873  00176A  0012               	return	
 25874                           
 25875                           ; BSR set to: 2
 25876                           ;lorawan_eu.c: 440: {
 25877                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 25878  00176C  0102               	movlb	2	; () banked
 25879  00176E  5102               	movf	(_loRa+2)& (0+255),w,b
 25880  001770  0BF0               	andlw	-16
 25881  001772  0908               	iorlw	8
 25882  001774  6F02               	movwf	(_loRa+2)& (0+255),b
 25883                           
 25884                           ; BSR set to: 2
 25885                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 25886  001776  ECC1  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 25887                           
 25888                           ;lorawan_eu.c: 443: }
 25889                           ;lorawan_eu.c: 444: }
 25890  00177A  0012               	return	
 25891  00177C                     l16021:
 25892                           
 25893                           ;lorawan_eu.c: 445: else
 25894                           ;lorawan_eu.c: 446: {
 25895                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 25896  00177C  ECE1  F051         	call	_RADIO_GetStatus	;wreg free
 25897  001780  0100               	movlb	0	; () banked
 25898  001782  6FC1               	movwf	??_LORAWAN_TxDone& (0+255),b
 25899  001784  0100               	movlb	0	; () banked
 25900  001786  A9C1               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 25901  001788  D018               	goto	l16025
 25902                           
 25903                           ; BSR set to: 0
 25904                           ;lorawan_eu.c: 448: {
 25905                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 25906  00178A  0E00               	movlw	0
 25907  00178C  0100               	movlb	0	; () banked
 25908  00178E  6F67               	movwf	RxDataDone@pData& (0+255),b
 25909  001790  0E00               	movlw	0
 25910  001792  0100               	movlb	0	; () banked
 25911  001794  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 25912  001796  0E00               	movlw	0
 25913  001798  0100               	movlb	0	; () banked
 25914  00179A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 25915  00179C  0E02               	movlw	2
 25916  00179E  0100               	movlb	0	; () banked
 25917  0017A0  6F6A               	movwf	RxDataDone@status& (0+255),b
 25918  0017A2  D801               	call	u19158
 25919  0017A4  0012               	return	
 25920  0017A6                     u19158:
 25921  0017A6  0005               	push	
 25922  0017A8  6EFA               	movwf	pclath,c
 25923  0017AA  0100               	movlb	0	; () banked
 25924  0017AC  51F4               	movf	_rxPayload& (0+255),w,b
 25925  0017AE  6EFD               	movwf	tosl,c
 25926  0017B0  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 25927  0017B2  6EFE               	movwf	tosh,c
 25928  0017B4  6AFF               	clrf	tosu,c
 25929  0017B6  50FA               	movf	pclath,w,c
 25930  0017B8  0012               	return		;indir
 25931  0017BA                     l16025:
 25932                           
 25933                           ;lorawan_eu.c: 452: else
 25934                           ;lorawan_eu.c: 453: {
 25935                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 25936  0017BA  0100               	movlb	0	; () banked
 25937  0017BC  51F4               	movf	_rxPayload& (0+255),w,b
 25938  0017BE  0100               	movlb	0	; () banked
 25939  0017C0  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 25940  0017C2  B4D8               	btfsc	status,2,c
 25941  0017C4  0012               	return	
 25942                           
 25943                           ; BSR set to: 0
 25944                           ;lorawan_eu.c: 456: {
 25945                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 25946  0017C6  0E00               	movlw	0
 25947  0017C8  0100               	movlb	0	; () banked
 25948  0017CA  6F67               	movwf	RxDataDone@pData& (0+255),b
 25949  0017CC  0E00               	movlw	0
 25950  0017CE  0100               	movlb	0	; () banked
 25951  0017D0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 25952  0017D2  0E00               	movlw	0
 25953  0017D4  0100               	movlb	0	; () banked
 25954  0017D6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 25955  0017D8  0E03               	movlw	3
 25956  0017DA  0100               	movlb	0	; () banked
 25957  0017DC  6F6A               	movwf	RxDataDone@status& (0+255),b
 25958  0017DE  D801               	call	u19178
 25959  0017E0  0012               	return	
 25960  0017E2                     u19178:
 25961  0017E2  0005               	push	
 25962  0017E4  6EFA               	movwf	pclath,c
 25963  0017E6  0100               	movlb	0	; () banked
 25964  0017E8  51F4               	movf	_rxPayload& (0+255),w,b
 25965  0017EA  6EFD               	movwf	tosl,c
 25966  0017EC  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 25967  0017EE  6EFE               	movwf	tosh,c
 25968  0017F0  6AFF               	clrf	tosu,c
 25969  0017F2  50FA               	movf	pclath,w,c
 25970  0017F4  0012               	return		;indir
 25971  0017F6                     __end_of_LORAWAN_TxDone:
 25972                           	opt stack 0
 25973                           tosu	equ	0xFFF
 25974                           tosh	equ	0xFFE
 25975                           tosl	equ	0xFFD
 25976                           pclath	equ	0xFFA
 25977                           tblptru	equ	0xFF8
 25978                           tblptrh	equ	0xFF7
 25979                           tblptrl	equ	0xFF6
 25980                           tablat	equ	0xFF5
 25981                           prodh	equ	0xFF4
 25982                           prodl	equ	0xFF3
 25983                           intcon	equ	0xFF2
 25984                           intcon2	equ	0xFF1
 25985                           intcon3	equ	0xFF0
 25986                           indf0	equ	0xFEF
 25987                           postinc0	equ	0xFEE
 25988                           fsr0h	equ	0xFEA
 25989                           fsr0l	equ	0xFE9
 25990                           wreg	equ	0xFE8
 25991                           postinc1	equ	0xFE6
 25992                           postdec1	equ	0xFE5
 25993                           plusw1	equ	0xFE3
 25994                           fsr1h	equ	0xFE2
 25995                           fsr1l	equ	0xFE1
 25996                           indf2	equ	0xFDF
 25997                           postinc2	equ	0xFDE
 25998                           postdec2	equ	0xFDD
 25999                           plusw2	equ	0xFDB
 26000                           fsr2h	equ	0xFDA
 26001                           fsr2l	equ	0xFD9
 26002                           status	equ	0xFD8
 26003                           
 26004 ;; *************** function _SwTimerReadValue *****************
 26005 ;; Defined at:
 26006 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26007 ;; Parameters:    Size  Location     Type
 26008 ;;  timerId         1    wreg     unsigned char 
 26009 ;; Auto vars:     Size  Location     Type
 26010 ;;  timerId         1   61[BANK0 ] unsigned char 
 26011 ;;  ticksCount      4   57[BANK0 ] unsigned long 
 26012 ;; Return value:  Size  Location     Type
 26013 ;;                  4   53[BANK0 ] unsigned long 
 26014 ;; Registers used:
 26015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26016 ;; Tracked objects:
 26017 ;;		On entry : 0/0
 26018 ;;		On exit  : 0/0
 26019 ;;		Unchanged: 0/0
 26020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26021 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26022 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26024 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26025 ;;Total ram usage:        9 bytes
 26026 ;; Hardware stack levels used:    1
 26027 ;; Hardware stack levels required when called:   10
 26028 ;; This function calls:
 26029 ;;		_SwTimersInterrupt
 26030 ;; This function is called by:
 26031 ;;		_RADIO_TxDone
 26032 ;;		_RADIO_FSKPacketSent
 26033 ;;		_LORAWAN_TxDone
 26034 ;;		_LORAWAN_Pause
 26035 ;; This function uses a non-reentrant model
 26036 ;;
 26037                           
 26038                           	psect	text111
 26039  0098B2                     __ptext111:
 26040                           	opt stack 0
 26041  0098B2                     _SwTimerReadValue:
 26042                           	opt stack 16
 26043                           
 26044                           ;incstack = 0
 26045                           ;SwTimerReadValue@timerId stored from wreg
 26046  0098B2  0100               	movlb	0	; () banked
 26047  0098B4  6F9D               	movwf	SwTimerReadValue@timerId& (0+255),b
 26048                           
 26049                           ;sw_timer.c: 195: uint32_t ticksCount;
 26050                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 26051  0098B6  9EF2               	bcf	intcon,7,c	;volatile
 26052                           
 26053                           ;sw_timer.c: 200: SwTimersInterrupt();
 26054  0098B8  ECA9  F036         	call	_SwTimersInterrupt	;wreg free
 26055                           
 26056                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 26057  0098BC  0100               	movlb	0	; () banked
 26058  0098BE  519D               	movf	SwTimerReadValue@timerId& (0+255),w,b
 26059  0098C0  0D08               	mullw	8
 26060  0098C2  0E00               	movlw	low _swTimers
 26061  0098C4  24F3               	addwf	prodl,w,c
 26062  0098C6  6ED9               	movwf	fsr2l,c
 26063  0098C8  0E03               	movlw	high _swTimers
 26064  0098CA  20F4               	addwfc	prodh,w,c
 26065  0098CC  6EDA               	movwf	fsr2h,c
 26066  0098CE  CFDE F099          	movff	postinc2,SwTimerReadValue@ticksCount
 26067  0098D2  CFDE F09A          	movff	postinc2,SwTimerReadValue@ticksCount+1
 26068  0098D6  CFDE F09B          	movff	postinc2,SwTimerReadValue@ticksCount+2
 26069  0098DA  CFDE F09C          	movff	postinc2,SwTimerReadValue@ticksCount+3
 26070                           
 26071                           ; BSR set to: 0
 26072                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 26073  0098DE  8EF2               	bsf	intcon,7,c	;volatile
 26074                           
 26075                           ; BSR set to: 0
 26076                           ;sw_timer.c: 204: return ticksCount;
 26077  0098E0  C099  F095         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 26078  0098E4  C09A  F096         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 26079  0098E8  C09B  F097         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 26080  0098EC  C09C  F098         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 26081  0098F0  0012               	return	
 26082  0098F2                     __end_of_SwTimerReadValue:
 26083                           	opt stack 0
 26084                           tosu	equ	0xFFF
 26085                           tosh	equ	0xFFE
 26086                           tosl	equ	0xFFD
 26087                           pclath	equ	0xFFA
 26088                           tblptru	equ	0xFF8
 26089                           tblptrh	equ	0xFF7
 26090                           tblptrl	equ	0xFF6
 26091                           tablat	equ	0xFF5
 26092                           prodh	equ	0xFF4
 26093                           prodl	equ	0xFF3
 26094                           intcon	equ	0xFF2
 26095                           intcon2	equ	0xFF1
 26096                           intcon3	equ	0xFF0
 26097                           indf0	equ	0xFEF
 26098                           postinc0	equ	0xFEE
 26099                           fsr0h	equ	0xFEA
 26100                           fsr0l	equ	0xFE9
 26101                           wreg	equ	0xFE8
 26102                           postinc1	equ	0xFE6
 26103                           postdec1	equ	0xFE5
 26104                           plusw1	equ	0xFE3
 26105                           fsr1h	equ	0xFE2
 26106                           fsr1l	equ	0xFE1
 26107                           indf2	equ	0xFDF
 26108                           postinc2	equ	0xFDE
 26109                           postdec2	equ	0xFDD
 26110                           plusw2	equ	0xFDB
 26111                           fsr2h	equ	0xFDA
 26112                           fsr2l	equ	0xFD9
 26113                           status	equ	0xFD8
 26114                           
 26115 ;; *************** function _SwTimerIsRunning *****************
 26116 ;; Defined at:
 26117 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26118 ;; Parameters:    Size  Location     Type
 26119 ;;  timerId         1    wreg     unsigned char 
 26120 ;; Auto vars:     Size  Location     Type
 26121 ;;  timerId         1    4[BANK0 ] unsigned char 
 26122 ;;  isRunning       1    5[BANK0 ] unsigned char 
 26123 ;; Return value:  Size  Location     Type
 26124 ;;                  1    wreg      unsigned char 
 26125 ;; Registers used:
 26126 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26127 ;; Tracked objects:
 26128 ;;		On entry : 0/0
 26129 ;;		On exit  : 0/0
 26130 ;;		Unchanged: 0/0
 26131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26133 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26135 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26136 ;;Total ram usage:        2 bytes
 26137 ;; Hardware stack levels used:    1
 26138 ;; Hardware stack levels required when called:    7
 26139 ;; This function calls:
 26140 ;;		Nothing
 26141 ;; This function is called by:
 26142 ;;		_LORAWAN_TxDone
 26143 ;; This function uses a non-reentrant model
 26144 ;;
 26145                           
 26146                           	psect	text112
 26147  009CF0                     __ptext112:
 26148                           	opt stack 0
 26149  009CF0                     _SwTimerIsRunning:
 26150                           	opt stack 19
 26151                           
 26152                           ; BSR set to: 0
 26153                           ;incstack = 0
 26154                           ;SwTimerIsRunning@timerId stored from wreg
 26155  009CF0  0100               	movlb	0	; () banked
 26156  009CF2  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 26157                           
 26158                           ;sw_timer.c: 209: uint8_t isRunning;
 26159                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 26160  009CF4  9EF2               	bcf	intcon,7,c	;volatile
 26161                           
 26162                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 26163  009CF6  0100               	movlb	0	; () banked
 26164  009CF8  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 26165  009CFA  0D08               	mullw	8
 26166  009CFC  0E04               	movlw	4
 26167  009CFE  26F3               	addwf	prodl,f,c
 26168  009D00  0E00               	movlw	0
 26169  009D02  22F4               	addwfc	prodh,f,c
 26170  009D04  0E00               	movlw	low _swTimers
 26171  009D06  24F3               	addwf	prodl,w,c
 26172  009D08  6ED9               	movwf	fsr2l,c
 26173  009D0A  0E03               	movlw	high _swTimers
 26174  009D0C  20F4               	addwfc	prodh,w,c
 26175  009D0E  6EDA               	movwf	fsr2h,c
 26176  009D10  50DF               	movf	indf2,w,c
 26177  009D12  0100               	movlb	0	; () banked
 26178  009D14  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 26179                           
 26180                           ; BSR set to: 0
 26181                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 26182  009D16  8EF2               	bsf	intcon,7,c	;volatile
 26183                           
 26184                           ; BSR set to: 0
 26185                           ;sw_timer.c: 215: return isRunning;
 26186  009D18  0100               	movlb	0	; () banked
 26187  009D1A  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 26188  009D1C  0012               	return	
 26189  009D1E                     __end_of_SwTimerIsRunning:
 26190                           	opt stack 0
 26191                           tosu	equ	0xFFF
 26192                           tosh	equ	0xFFE
 26193                           tosl	equ	0xFFD
 26194                           pclath	equ	0xFFA
 26195                           tblptru	equ	0xFF8
 26196                           tblptrh	equ	0xFF7
 26197                           tblptrl	equ	0xFF6
 26198                           tablat	equ	0xFF5
 26199                           prodh	equ	0xFF4
 26200                           prodl	equ	0xFF3
 26201                           intcon	equ	0xFF2
 26202                           intcon2	equ	0xFF1
 26203                           intcon3	equ	0xFF0
 26204                           indf0	equ	0xFEF
 26205                           postinc0	equ	0xFEE
 26206                           fsr0h	equ	0xFEA
 26207                           fsr0l	equ	0xFE9
 26208                           wreg	equ	0xFE8
 26209                           postinc1	equ	0xFE6
 26210                           postdec1	equ	0xFE5
 26211                           plusw1	equ	0xFE3
 26212                           fsr1h	equ	0xFE2
 26213                           fsr1l	equ	0xFE1
 26214                           indf2	equ	0xFDF
 26215                           postinc2	equ	0xFDE
 26216                           postdec2	equ	0xFDD
 26217                           plusw2	equ	0xFDB
 26218                           fsr2h	equ	0xFDA
 26219                           fsr2l	equ	0xFD9
 26220                           status	equ	0xFD8
 26221                           
 26222 ;; *************** function _RADIO_GetStatus *****************
 26223 ;; Defined at:
 26224 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26225 ;; Parameters:    Size  Location     Type
 26226 ;;		None
 26227 ;; Auto vars:     Size  Location     Type
 26228 ;;		None
 26229 ;; Return value:  Size  Location     Type
 26230 ;;                  1    wreg      unsigned char 
 26231 ;; Registers used:
 26232 ;;		wreg, status,2
 26233 ;; Tracked objects:
 26234 ;;		On entry : 0/0
 26235 ;;		On exit  : 0/0
 26236 ;;		Unchanged: 0/0
 26237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26242 ;;Total ram usage:        0 bytes
 26243 ;; Hardware stack levels used:    1
 26244 ;; Hardware stack levels required when called:    7
 26245 ;; This function calls:
 26246 ;;		Nothing
 26247 ;; This function is called by:
 26248 ;;		_LORAWAN_TxDone
 26249 ;;		_LORAWAN_ReceiveWindow2Callback
 26250 ;;		_LORAWAN_RxDone
 26251 ;; This function uses a non-reentrant model
 26252 ;;
 26253                           
 26254                           	psect	text113
 26255  00A3C2                     __ptext113:
 26256                           	opt stack 0
 26257  00A3C2                     _RADIO_GetStatus:
 26258                           	opt stack 19
 26259                           
 26260                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 26261                           
 26262                           ; BSR set to: 0
 26263                           ;incstack = 0
 26264  00A3C2  0101               	movlb	1	; () banked
 26265  00A3C4  5197               	movf	(_RadioConfiguration+35)& (0+255),w,b
 26266  00A3C6  0012               	return	
 26267  00A3C8                     __end_of_RADIO_GetStatus:
 26268                           	opt stack 0
 26269                           tosu	equ	0xFFF
 26270                           tosh	equ	0xFFE
 26271                           tosl	equ	0xFFD
 26272                           pclath	equ	0xFFA
 26273                           tblptru	equ	0xFF8
 26274                           tblptrh	equ	0xFF7
 26275                           tblptrl	equ	0xFF6
 26276                           tablat	equ	0xFF5
 26277                           prodh	equ	0xFF4
 26278                           prodl	equ	0xFF3
 26279                           intcon	equ	0xFF2
 26280                           intcon2	equ	0xFF1
 26281                           intcon3	equ	0xFF0
 26282                           indf0	equ	0xFEF
 26283                           postinc0	equ	0xFEE
 26284                           fsr0h	equ	0xFEA
 26285                           fsr0l	equ	0xFE9
 26286                           wreg	equ	0xFE8
 26287                           postinc1	equ	0xFE6
 26288                           postdec1	equ	0xFE5
 26289                           plusw1	equ	0xFE3
 26290                           fsr1h	equ	0xFE2
 26291                           fsr1l	equ	0xFE1
 26292                           indf2	equ	0xFDF
 26293                           postinc2	equ	0xFDE
 26294                           postdec2	equ	0xFDD
 26295                           plusw2	equ	0xFDB
 26296                           fsr2h	equ	0xFDA
 26297                           fsr2l	equ	0xFD9
 26298                           status	equ	0xFD8
 26299                           
 26300 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 26301 ;; Defined at:
 26302 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26303 ;; Parameters:    Size  Location     Type
 26304 ;;		None
 26305 ;; Auto vars:     Size  Location     Type
 26306 ;;		None
 26307 ;; Return value:  Size  Location     Type
 26308 ;;                  1    wreg      void 
 26309 ;; Registers used:
 26310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26311 ;; Tracked objects:
 26312 ;;		On entry : 0/0
 26313 ;;		On exit  : 0/0
 26314 ;;		Unchanged: 0/0
 26315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26320 ;;Total ram usage:        0 bytes
 26321 ;; Hardware stack levels used:    1
 26322 ;; Hardware stack levels required when called:   13
 26323 ;; This function calls:
 26324 ;;		_ConfigureRadioRx
 26325 ;;		_RADIO_ReceiveStart
 26326 ;;		_RADIO_ReceiveStop
 26327 ;;		_RADIO_ReleaseData
 26328 ;;		_ResetParametersForConfirmedTransmission
 26329 ;;		_ResetParametersForUnconfirmedTransmission
 26330 ;;		_RxDataDone
 26331 ;; This function is called by:
 26332 ;;		_LORAWAN_TxDone
 26333 ;;		_LORAWAN_ReceiveWindow2Callback
 26334 ;;		_LORAWAN_RxDone
 26335 ;;		_SetReceptionNotOkState
 26336 ;; This function uses a non-reentrant model
 26337 ;;
 26338                           
 26339                           	psect	text114
 26340  008982                     __ptext114:
 26341                           	opt stack 0
 26342  008982                     _LORAWAN_EnterContinuousReceive:
 26343                           	opt stack 13
 26344                           
 26345                           ;lorawan.c: 917: RADIO_ReceiveStop();
 26346                           
 26347                           ; BSR set to: 1
 26348                           ;incstack = 0
 26349  008982  ECEE  F04F         	call	_RADIO_ReceiveStop	;wreg free
 26350                           
 26351                           ;lorawan.c: 918: RADIO_ReleaseData();
 26352  008986  ECE4  F051         	call	_RADIO_ReleaseData	;wreg free
 26353                           
 26354                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 26355  00898A  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 26356  00898E  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 26357  008992  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 26358  008996  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 26359  00899A  0102               	movlb	2	; () banked
 26360  00899C  511C               	movf	(_loRa+28)& (0+255),w,b
 26361  00899E  ECFB  F04E         	call	_ConfigureRadioRx
 26362                           
 26363                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 26364  0089A2  0E00               	movlw	0
 26365  0089A4  0100               	movlb	0	; () banked
 26366  0089A6  6FB6               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 26367  0089A8  0E00               	movlw	0
 26368  0089AA  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 26369  0089AC  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
 26370  0089B0  0100               	movlb	0	; () banked
 26371  0089B2  51B5               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 26372  0089B4  0100               	movlb	0	; () banked
 26373  0089B6  11B6               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 26374  0089B8  B4D8               	btfsc	status,2,c
 26375  0089BA  0012               	return	
 26376                           
 26377                           ; BSR set to: 0
 26378                           ;lorawan.c: 923: {
 26379                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 26380  0089BC  ECD6  F050         	call	_ResetParametersForConfirmedTransmission	;wreg free
 26381                           
 26382                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 26383  0089C0  ECBF  F050         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26384                           
 26385                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 26386  0089C4  0102               	movlb	2	; () banked
 26387  0089C6  9102               	bcf	(_loRa+2)& (0+255),0,b
 26388  0089C8  9302               	bcf	(_loRa+2)& (0+255),1,b
 26389  0089CA  9502               	bcf	(_loRa+2)& (0+255),2,b
 26390  0089CC  9702               	bcf	(_loRa+2)& (0+255),3,b
 26391                           
 26392                           ; BSR set to: 2
 26393                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 26394  0089CE  0100               	movlb	0	; () banked
 26395  0089D0  51F4               	movf	_rxPayload& (0+255),w,b
 26396  0089D2  0100               	movlb	0	; () banked
 26397  0089D4  11F5               	iorwf	(_rxPayload+1)& (0+255),w,b
 26398  0089D6  B4D8               	btfsc	status,2,c
 26399  0089D8  0012               	return	
 26400                           
 26401                           ; BSR set to: 0
 26402                           ;lorawan.c: 928: {
 26403                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 26404  0089DA  0E00               	movlw	0
 26405  0089DC  0100               	movlb	0	; () banked
 26406  0089DE  6F67               	movwf	RxDataDone@pData& (0+255),b
 26407  0089E0  0E00               	movlw	0
 26408  0089E2  0100               	movlb	0	; () banked
 26409  0089E4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 26410  0089E6  0E00               	movlw	0
 26411  0089E8  0100               	movlb	0	; () banked
 26412  0089EA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 26413  0089EC  0E00               	movlw	0
 26414  0089EE  0100               	movlb	0	; () banked
 26415  0089F0  6F6A               	movwf	RxDataDone@status& (0+255),b
 26416  0089F2  D801               	call	u16808
 26417  0089F4  0012               	return	
 26418  0089F6                     u16808:
 26419  0089F6  0005               	push	
 26420  0089F8  6EFA               	movwf	pclath,c
 26421  0089FA  0100               	movlb	0	; () banked
 26422  0089FC  51F4               	movf	_rxPayload& (0+255),w,b
 26423  0089FE  6EFD               	movwf	tosl,c
 26424  008A00  51F5               	movf	(_rxPayload+1)& (0+255),w,b
 26425  008A02  6EFE               	movwf	tosh,c
 26426  008A04  6AFF               	clrf	tosu,c
 26427  008A06  50FA               	movf	pclath,w,c
 26428  008A08  0012               	return		;indir
 26429  008A0A                     __end_of_LORAWAN_EnterContinuousReceive:
 26430                           	opt stack 0
 26431                           tosu	equ	0xFFF
 26432                           tosh	equ	0xFFE
 26433                           tosl	equ	0xFFD
 26434                           pclath	equ	0xFFA
 26435                           tblptru	equ	0xFF8
 26436                           tblptrh	equ	0xFF7
 26437                           tblptrl	equ	0xFF6
 26438                           tablat	equ	0xFF5
 26439                           prodh	equ	0xFF4
 26440                           prodl	equ	0xFF3
 26441                           intcon	equ	0xFF2
 26442                           intcon2	equ	0xFF1
 26443                           intcon3	equ	0xFF0
 26444                           indf0	equ	0xFEF
 26445                           postinc0	equ	0xFEE
 26446                           fsr0h	equ	0xFEA
 26447                           fsr0l	equ	0xFE9
 26448                           wreg	equ	0xFE8
 26449                           postinc1	equ	0xFE6
 26450                           postdec1	equ	0xFE5
 26451                           plusw1	equ	0xFE3
 26452                           fsr1h	equ	0xFE2
 26453                           fsr1l	equ	0xFE1
 26454                           indf2	equ	0xFDF
 26455                           postinc2	equ	0xFDE
 26456                           postdec2	equ	0xFDD
 26457                           plusw2	equ	0xFDB
 26458                           fsr2h	equ	0xFDA
 26459                           fsr2l	equ	0xFD9
 26460                           status	equ	0xFD8
 26461                           
 26462 ;; *************** function _RxDataDone *****************
 26463 ;; Defined at:
 26464 ;;		line 96 in file "main.c"
 26465 ;; Parameters:    Size  Location     Type
 26466 ;;  pData           2    7[BANK0 ] PTR unsigned char 
 26467 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 26468 ;;  dataLength      1    9[BANK0 ] unsigned char 
 26469 ;;  status          1   10[BANK0 ] enum E8009
 26470 ;; Auto vars:     Size  Location     Type
 26471 ;;		None
 26472 ;; Return value:  Size  Location     Type
 26473 ;;                  1    wreg      void 
 26474 ;; Registers used:
 26475 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26476 ;; Tracked objects:
 26477 ;;		On entry : 0/0
 26478 ;;		On exit  : 0/0
 26479 ;;		Unchanged: 0/0
 26480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26481 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26483 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26484 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26485 ;;Total ram usage:        5 bytes
 26486 ;; Hardware stack levels used:    1
 26487 ;; Hardware stack levels required when called:    9
 26488 ;; This function calls:
 26489 ;;		_LORAWAN_SetCurrentDataRate
 26490 ;; This function is called by:
 26491 ;;		_main
 26492 ;;		_LORAWAN_EnterContinuousReceive
 26493 ;;		_LORAWAN_ReceiveWindow2Callback
 26494 ;;		_SetReceptionNotOkState
 26495 ;;		_LORAWAN_RxDone
 26496 ;;		_LORAWAN_RxTimeout
 26497 ;;		_LORAWAN_TxDone
 26498 ;;		_AckRetransmissionCallback
 26499 ;;		_UnconfirmedTransmissionCallback
 26500 ;; This function uses a non-reentrant model
 26501 ;;
 26502                           
 26503                           	psect	text115
 26504  009644                     __ptext115:
 26505                           	opt stack 0
 26506  009644                     _RxDataDone:
 26507                           	opt stack 18
 26508                           
 26509                           ;main.c: 101: if(pData[0]==30){
 26510                           
 26511                           ;incstack = 0
 26512  009644  C067  FFD9         	movff	RxDataDone@pData,fsr2l
 26513  009648  C068  FFDA         	movff	RxDataDone@pData+1,fsr2h
 26514  00964C  0E1E               	movlw	30
 26515  00964E  18DE               	xorwf	postinc2,w,c
 26516  009650  A4D8               	btfss	status,2,c
 26517  009652  0012               	return	
 26518                           
 26519                           ;main.c: 102: LORAWAN_SetCurrentDataRate(pData[1]);
 26520  009654  0100               	movlb	0	; () banked
 26521  009656  EE20 F001          	lfsr	2,1
 26522  00965A  5167               	movf	RxDataDone@pData& (0+255),w,b
 26523  00965C  26D9               	addwf	fsr2l,f,c
 26524  00965E  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 26525  009660  22DA               	addwfc	fsr2h,f,c
 26526  009662  50DF               	movf	indf2,w,c
 26527  009664  ECB4  F04D         	call	_LORAWAN_SetCurrentDataRate
 26528                           
 26529                           ;main.c: 103: PORTAbits.RA4 = pData[2];
 26530  009668  0100               	movlb	0	; () banked
 26531  00966A  EE20 F002          	lfsr	2,2
 26532  00966E  5167               	movf	RxDataDone@pData& (0+255),w,b
 26533  009670  26D9               	addwf	fsr2l,f,c
 26534  009672  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 26535  009674  22DA               	addwfc	fsr2h,f,c
 26536  009676  50DF               	movf	indf2,w,c
 26537  009678  0100               	movlb	0	; () banked
 26538  00967A  6F6B               	movwf	??_RxDataDone& (0+255),b
 26539  00967C  0100               	movlb	0	; () banked
 26540  00967E  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 26541  009680  5080               	movf	3968,w,c	;volatile
 26542  009682  0100               	movlb	0	; () banked
 26543  009684  196B               	xorwf	??_RxDataDone& (0+255),w,b
 26544  009686  0BEF               	andlw	-17
 26545  009688  196B               	xorwf	??_RxDataDone& (0+255),w,b
 26546  00968A  6E80               	movwf	3968,c	;volatile
 26547  00968C  0012               	return	
 26548  00968E                     __end_of_RxDataDone:
 26549                           	opt stack 0
 26550                           tosu	equ	0xFFF
 26551                           tosh	equ	0xFFE
 26552                           tosl	equ	0xFFD
 26553                           pclath	equ	0xFFA
 26554                           tblptru	equ	0xFF8
 26555                           tblptrh	equ	0xFF7
 26556                           tblptrl	equ	0xFF6
 26557                           tablat	equ	0xFF5
 26558                           prodh	equ	0xFF4
 26559                           prodl	equ	0xFF3
 26560                           intcon	equ	0xFF2
 26561                           intcon2	equ	0xFF1
 26562                           intcon3	equ	0xFF0
 26563                           indf0	equ	0xFEF
 26564                           postinc0	equ	0xFEE
 26565                           fsr0h	equ	0xFEA
 26566                           fsr0l	equ	0xFE9
 26567                           wreg	equ	0xFE8
 26568                           postinc1	equ	0xFE6
 26569                           postdec1	equ	0xFE5
 26570                           plusw1	equ	0xFE3
 26571                           fsr1h	equ	0xFE2
 26572                           fsr1l	equ	0xFE1
 26573                           indf2	equ	0xFDF
 26574                           postinc2	equ	0xFDE
 26575                           postdec2	equ	0xFDD
 26576                           plusw2	equ	0xFDB
 26577                           fsr2h	equ	0xFDA
 26578                           fsr2l	equ	0xFD9
 26579                           status	equ	0xFD8
 26580                           
 26581 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
 26582 ;; Defined at:
 26583 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26584 ;; Parameters:    Size  Location     Type
 26585 ;;  valueNew        1    wreg     unsigned char 
 26586 ;; Auto vars:     Size  Location     Type
 26587 ;;  valueNew        1    6[BANK0 ] unsigned char 
 26588 ;; Return value:  Size  Location     Type
 26589 ;;                  1    wreg      enum E7957
 26590 ;; Registers used:
 26591 ;;		wreg, status,2, status,0, cstack
 26592 ;; Tracked objects:
 26593 ;;		On entry : 0/0
 26594 ;;		On exit  : 0/0
 26595 ;;		Unchanged: 0/0
 26596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26601 ;;Total ram usage:        1 bytes
 26602 ;; Hardware stack levels used:    1
 26603 ;; Hardware stack levels required when called:    8
 26604 ;; This function calls:
 26605 ;;		_UpdateCurrentDataRate
 26606 ;;		_ValidateDataRate
 26607 ;; This function is called by:
 26608 ;;		_RxDataDone
 26609 ;; This function uses a non-reentrant model
 26610 ;;
 26611                           
 26612                           	psect	text116
 26613  009B68                     __ptext116:
 26614                           	opt stack 0
 26615  009B68                     _LORAWAN_SetCurrentDataRate:
 26616                           	opt stack 18
 26617                           
 26618                           ;incstack = 0
 26619                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
 26620  009B68  0100               	movlb	0	; () banked
 26621  009B6A  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
 26622                           
 26623                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
 26624  009B6C  0102               	movlb	2	; () banked
 26625  009B6E  51EB               	movf	(_loRa+235)& (0+255),w,b
 26626  009B70  0100               	movlb	0	; () banked
 26627  009B72  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26628  009B74  A0D8               	btfss	status,0,c
 26629  009B76  0012               	return	
 26630                           
 26631                           ; BSR set to: 0
 26632  009B78  0100               	movlb	0	; () banked
 26633  009B7A  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26634  009B7C  0102               	movlb	2	; () banked
 26635  009B7E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 26636  009B80  A0D8               	btfss	status,0,c
 26637  009B82  0012               	return	
 26638                           
 26639                           ; BSR set to: 2
 26640  009B84  0100               	movlb	0	; () banked
 26641  009B86  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26642  009B88  EC5A  F050         	call	_ValidateDataRate
 26643  009B8C  0900               	iorlw	0
 26644  009B8E  A4D8               	btfss	status,2,c
 26645  009B90  0012               	return	
 26646                           
 26647                           ;lorawan.c: 444: else
 26648                           ;lorawan.c: 445: {
 26649                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
 26650                           
 26651                           ;lorawan.c: 443: }
 26652                           
 26653                           ;lorawan.c: 441: {
 26654                           ;lorawan.c: 442: return INVALID_PARAMETER;
 26655                           ;	Return value of _LORAWAN_SetCurrentDataRate is never used
 26656  009B92  0100               	movlb	0	; () banked
 26657  009B94  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26658  009B96  ECA1  F051         	call	_UpdateCurrentDataRate
 26659                           
 26660                           ;lorawan.c: 447: return OK;
 26661                           ;	Return value of _LORAWAN_SetCurrentDataRate is never used
 26662  009B9A  0012               	return	
 26663  009B9C                     __end_of_LORAWAN_SetCurrentDataRate:
 26664                           	opt stack 0
 26665                           tosu	equ	0xFFF
 26666                           tosh	equ	0xFFE
 26667                           tosl	equ	0xFFD
 26668                           pclath	equ	0xFFA
 26669                           tblptru	equ	0xFF8
 26670                           tblptrh	equ	0xFF7
 26671                           tblptrl	equ	0xFF6
 26672                           tablat	equ	0xFF5
 26673                           prodh	equ	0xFF4
 26674                           prodl	equ	0xFF3
 26675                           intcon	equ	0xFF2
 26676                           intcon2	equ	0xFF1
 26677                           intcon3	equ	0xFF0
 26678                           indf0	equ	0xFEF
 26679                           postinc0	equ	0xFEE
 26680                           fsr0h	equ	0xFEA
 26681                           fsr0l	equ	0xFE9
 26682                           wreg	equ	0xFE8
 26683                           postinc1	equ	0xFE6
 26684                           postdec1	equ	0xFE5
 26685                           plusw1	equ	0xFE3
 26686                           fsr1h	equ	0xFE2
 26687                           fsr1l	equ	0xFE1
 26688                           indf2	equ	0xFDF
 26689                           postinc2	equ	0xFDE
 26690                           postdec2	equ	0xFDD
 26691                           plusw2	equ	0xFDB
 26692                           fsr2h	equ	0xFDA
 26693                           fsr2l	equ	0xFD9
 26694                           status	equ	0xFD8
 26695                           
 26696 ;; *************** function _ValidateDataRate *****************
 26697 ;; Defined at:
 26698 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26699 ;; Parameters:    Size  Location     Type
 26700 ;;  dataRate        1    wreg     unsigned char 
 26701 ;; Auto vars:     Size  Location     Type
 26702 ;;  dataRate        1    4[BANK0 ] unsigned char 
 26703 ;;  result          1    5[BANK0 ] enum E8016
 26704 ;; Return value:  Size  Location     Type
 26705 ;;                  1    wreg      enum E8016
 26706 ;; Registers used:
 26707 ;;		wreg, status,2, status,0
 26708 ;; Tracked objects:
 26709 ;;		On entry : 0/0
 26710 ;;		On exit  : 0/0
 26711 ;;		Unchanged: 0/0
 26712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26714 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26716 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26717 ;;Total ram usage:        2 bytes
 26718 ;; Hardware stack levels used:    1
 26719 ;; Hardware stack levels required when called:    7
 26720 ;; This function calls:
 26721 ;;		Nothing
 26722 ;; This function is called by:
 26723 ;;		_ExecuteLinkAdr
 26724 ;;		_ExecuteRxParamSetupReq
 26725 ;;		_ValidateDataRange
 26726 ;;		_LORAWAN_SetCurrentDataRate
 26727 ;;		_LORAWAN_SetReceiveWindow2Parameters
 26728 ;; This function uses a non-reentrant model
 26729 ;;
 26730                           
 26731                           	psect	text117
 26732  00A0B4                     __ptext117:
 26733                           	opt stack 0
 26734  00A0B4                     _ValidateDataRate:
 26735                           	opt stack 18
 26736                           
 26737                           ;incstack = 0
 26738                           ;ValidateDataRate@dataRate stored from wreg
 26739  00A0B4  0100               	movlb	0	; () banked
 26740  00A0B6  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 26741                           
 26742                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 26743  00A0B8  0E00               	movlw	0
 26744  00A0BA  0100               	movlb	0	; () banked
 26745  00A0BC  6F65               	movwf	ValidateDataRate@result& (0+255),b
 26746                           
 26747                           ; BSR set to: 0
 26748                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 26749  00A0BE  0E07               	movlw	7
 26750  00A0C0  0100               	movlb	0	; () banked
 26751  00A0C2  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 26752  00A0C4  D003               	goto	l1077
 26753                           
 26754                           ; BSR set to: 0
 26755                           ;lorawan_eu.c: 575: {
 26756                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 26757  00A0C6  0E03               	movlw	3
 26758  00A0C8  0100               	movlb	0	; () banked
 26759  00A0CA  6F65               	movwf	ValidateDataRate@result& (0+255),b
 26760  00A0CC                     l1077:
 26761                           
 26762                           ; BSR set to: 0
 26763                           ;lorawan_eu.c: 577: }
 26764                           ;lorawan_eu.c: 579: return result;
 26765  00A0CC  0100               	movlb	0	; () banked
 26766  00A0CE  5165               	movf	ValidateDataRate@result& (0+255),w,b
 26767  00A0D0  0012               	return	
 26768  00A0D2                     __end_of_ValidateDataRate:
 26769                           	opt stack 0
 26770                           tosu	equ	0xFFF
 26771                           tosh	equ	0xFFE
 26772                           tosl	equ	0xFFD
 26773                           pclath	equ	0xFFA
 26774                           tblptru	equ	0xFF8
 26775                           tblptrh	equ	0xFF7
 26776                           tblptrl	equ	0xFF6
 26777                           tablat	equ	0xFF5
 26778                           prodh	equ	0xFF4
 26779                           prodl	equ	0xFF3
 26780                           intcon	equ	0xFF2
 26781                           intcon2	equ	0xFF1
 26782                           intcon3	equ	0xFF0
 26783                           indf0	equ	0xFEF
 26784                           postinc0	equ	0xFEE
 26785                           fsr0h	equ	0xFEA
 26786                           fsr0l	equ	0xFE9
 26787                           wreg	equ	0xFE8
 26788                           postinc1	equ	0xFE6
 26789                           postdec1	equ	0xFE5
 26790                           plusw1	equ	0xFE3
 26791                           fsr1h	equ	0xFE2
 26792                           fsr1l	equ	0xFE1
 26793                           indf2	equ	0xFDF
 26794                           postinc2	equ	0xFDE
 26795                           postdec2	equ	0xFDD
 26796                           plusw2	equ	0xFDB
 26797                           fsr2h	equ	0xFDA
 26798                           fsr2l	equ	0xFD9
 26799                           status	equ	0xFD8
 26800                           
 26801 ;; *************** function _UpdateCurrentDataRate *****************
 26802 ;; Defined at:
 26803 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26804 ;; Parameters:    Size  Location     Type
 26805 ;;  valueNew        1    wreg     unsigned char 
 26806 ;; Auto vars:     Size  Location     Type
 26807 ;;  valueNew        1    4[BANK0 ] unsigned char 
 26808 ;; Return value:  Size  Location     Type
 26809 ;;                  1    wreg      void 
 26810 ;; Registers used:
 26811 ;;		wreg
 26812 ;; Tracked objects:
 26813 ;;		On entry : 0/0
 26814 ;;		On exit  : 0/0
 26815 ;;		Unchanged: 0/0
 26816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26818 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26820 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26821 ;;Total ram usage:        1 bytes
 26822 ;; Hardware stack levels used:    1
 26823 ;; Hardware stack levels required when called:    7
 26824 ;; This function calls:
 26825 ;;		Nothing
 26826 ;; This function is called by:
 26827 ;;		_ExecuteLinkAdr
 26828 ;;		_LORAWAN_SetCurrentDataRate
 26829 ;; This function uses a non-reentrant model
 26830 ;;
 26831                           
 26832                           	psect	text118
 26833  00A342                     __ptext118:
 26834                           	opt stack 0
 26835  00A342                     _UpdateCurrentDataRate:
 26836                           	opt stack 18
 26837                           
 26838                           ; BSR set to: 0
 26839                           ;incstack = 0
 26840                           ;UpdateCurrentDataRate@valueNew stored from wreg
 26841  00A342  0100               	movlb	0	; () banked
 26842  00A344  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 26843                           
 26844                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 26845  00A346  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 26846  00A34A  0012               	return		;funcret
 26847  00A34C                     __end_of_UpdateCurrentDataRate:
 26848                           	opt stack 0
 26849                           tosu	equ	0xFFF
 26850                           tosh	equ	0xFFE
 26851                           tosl	equ	0xFFD
 26852                           pclath	equ	0xFFA
 26853                           tblptru	equ	0xFF8
 26854                           tblptrh	equ	0xFF7
 26855                           tblptrl	equ	0xFF6
 26856                           tablat	equ	0xFF5
 26857                           prodh	equ	0xFF4
 26858                           prodl	equ	0xFF3
 26859                           intcon	equ	0xFF2
 26860                           intcon2	equ	0xFF1
 26861                           intcon3	equ	0xFF0
 26862                           indf0	equ	0xFEF
 26863                           postinc0	equ	0xFEE
 26864                           fsr0h	equ	0xFEA
 26865                           fsr0l	equ	0xFE9
 26866                           wreg	equ	0xFE8
 26867                           postinc1	equ	0xFE6
 26868                           postdec1	equ	0xFE5
 26869                           plusw1	equ	0xFE3
 26870                           fsr1h	equ	0xFE2
 26871                           fsr1l	equ	0xFE1
 26872                           indf2	equ	0xFDF
 26873                           postinc2	equ	0xFDE
 26874                           postdec2	equ	0xFDD
 26875                           plusw2	equ	0xFDB
 26876                           fsr2h	equ	0xFDA
 26877                           fsr2l	equ	0xFD9
 26878                           status	equ	0xFD8
 26879                           
 26880 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 26881 ;; Defined at:
 26882 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26883 ;; Parameters:    Size  Location     Type
 26884 ;;		None
 26885 ;; Auto vars:     Size  Location     Type
 26886 ;;		None
 26887 ;; Return value:  Size  Location     Type
 26888 ;;                  1    wreg      void 
 26889 ;; Registers used:
 26890 ;;		wreg, status,2
 26891 ;; Tracked objects:
 26892 ;;		On entry : 0/0
 26893 ;;		On exit  : 0/0
 26894 ;;		Unchanged: 0/0
 26895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26900 ;;Total ram usage:        0 bytes
 26901 ;; Hardware stack levels used:    1
 26902 ;; Hardware stack levels required when called:    7
 26903 ;; This function calls:
 26904 ;;		Nothing
 26905 ;; This function is called by:
 26906 ;;		_LORAWAN_RxTimeout
 26907 ;;		_LORAWAN_ReceiveWindow2Callback
 26908 ;;		_LORAWAN_EnterContinuousReceive
 26909 ;;		_UnconfirmedTransmissionCallback
 26910 ;; This function uses a non-reentrant model
 26911 ;;
 26912                           
 26913                           	psect	text119
 26914  00A17E                     __ptext119:
 26915                           	opt stack 0
 26916  00A17E                     _ResetParametersForUnconfirmedTransmission:
 26917                           	opt stack 20
 26918                           
 26919                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 26920                           
 26921                           ;incstack = 0
 26922  00A17E  0102               	movlb	2	; () banked
 26923  00A180  9102               	bcf	(_loRa+2)& (0+255),0,b
 26924  00A182  9302               	bcf	(_loRa+2)& (0+255),1,b
 26925  00A184  9502               	bcf	(_loRa+2)& (0+255),2,b
 26926  00A186  9702               	bcf	(_loRa+2)& (0+255),3,b
 26927                           
 26928                           ; BSR set to: 2
 26929                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 26930  00A188  0E01               	movlw	1
 26931  00A18A  0102               	movlb	2	; () banked
 26932  00A18C  6FD8               	movwf	(_loRa+216)& (0+255),b
 26933                           
 26934                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 26935  00A18E  0E00               	movlw	0
 26936  00A190  0102               	movlb	2	; () banked
 26937  00A192  6FA7               	movwf	(_loRa+167)& (0+255),b
 26938                           
 26939                           ; BSR set to: 2
 26940  00A194  0012               	return		;funcret
 26941  00A196                     __end_of_ResetParametersForUnconfirmedTransmission:
 26942                           	opt stack 0
 26943                           tosu	equ	0xFFF
 26944                           tosh	equ	0xFFE
 26945                           tosl	equ	0xFFD
 26946                           pclath	equ	0xFFA
 26947                           tblptru	equ	0xFF8
 26948                           tblptrh	equ	0xFF7
 26949                           tblptrl	equ	0xFF6
 26950                           tablat	equ	0xFF5
 26951                           prodh	equ	0xFF4
 26952                           prodl	equ	0xFF3
 26953                           intcon	equ	0xFF2
 26954                           intcon2	equ	0xFF1
 26955                           intcon3	equ	0xFF0
 26956                           indf0	equ	0xFEF
 26957                           postinc0	equ	0xFEE
 26958                           fsr0h	equ	0xFEA
 26959                           fsr0l	equ	0xFE9
 26960                           wreg	equ	0xFE8
 26961                           postinc1	equ	0xFE6
 26962                           postdec1	equ	0xFE5
 26963                           plusw1	equ	0xFE3
 26964                           fsr1h	equ	0xFE2
 26965                           fsr1l	equ	0xFE1
 26966                           indf2	equ	0xFDF
 26967                           postinc2	equ	0xFDE
 26968                           postdec2	equ	0xFDD
 26969                           plusw2	equ	0xFDB
 26970                           fsr2h	equ	0xFDA
 26971                           fsr2l	equ	0xFD9
 26972                           status	equ	0xFD8
 26973                           
 26974 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 26975 ;; Defined at:
 26976 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26977 ;; Parameters:    Size  Location     Type
 26978 ;;		None
 26979 ;; Auto vars:     Size  Location     Type
 26980 ;;		None
 26981 ;; Return value:  Size  Location     Type
 26982 ;;                  1    wreg      void 
 26983 ;; Registers used:
 26984 ;;		wreg, status,2
 26985 ;; Tracked objects:
 26986 ;;		On entry : 0/0
 26987 ;;		On exit  : 0/0
 26988 ;;		Unchanged: 0/0
 26989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26994 ;;Total ram usage:        0 bytes
 26995 ;; Hardware stack levels used:    1
 26996 ;; Hardware stack levels required when called:    7
 26997 ;; This function calls:
 26998 ;;		Nothing
 26999 ;; This function is called by:
 27000 ;;		_LORAWAN_RxTimeout
 27001 ;;		_LORAWAN_ReceiveWindow2Callback
 27002 ;;		_LORAWAN_EnterContinuousReceive
 27003 ;;		_AckRetransmissionCallback
 27004 ;; This function uses a non-reentrant model
 27005 ;;
 27006                           
 27007                           	psect	text120
 27008  00A1AC                     __ptext120:
 27009                           	opt stack 0
 27010  00A1AC                     _ResetParametersForConfirmedTransmission:
 27011                           	opt stack 18
 27012                           
 27013                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 27014                           
 27015                           ; BSR set to: 2
 27016                           ;incstack = 0
 27017  00A1AC  0102               	movlb	2	; () banked
 27018  00A1AE  9102               	bcf	(_loRa+2)& (0+255),0,b
 27019  00A1B0  9302               	bcf	(_loRa+2)& (0+255),1,b
 27020  00A1B2  9502               	bcf	(_loRa+2)& (0+255),2,b
 27021  00A1B4  9702               	bcf	(_loRa+2)& (0+255),3,b
 27022                           
 27023                           ; BSR set to: 2
 27024                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 27025  00A1B6  0E01               	movlw	1
 27026  00A1B8  0102               	movlb	2	; () banked
 27027  00A1BA  6FD9               	movwf	(_loRa+217)& (0+255),b
 27028                           
 27029                           ; BSR set to: 2
 27030                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 27031  00A1BC  0102               	movlb	2	; () banked
 27032  00A1BE  9100               	bcf	_loRa& (0+255),0,b
 27033                           
 27034                           ; BSR set to: 2
 27035  00A1C0  0012               	return		;funcret
 27036  00A1C2                     __end_of_ResetParametersForConfirmedTransmission:
 27037                           	opt stack 0
 27038                           tosu	equ	0xFFF
 27039                           tosh	equ	0xFFE
 27040                           tosl	equ	0xFFD
 27041                           pclath	equ	0xFFA
 27042                           tblptru	equ	0xFF8
 27043                           tblptrh	equ	0xFF7
 27044                           tblptrl	equ	0xFF6
 27045                           tablat	equ	0xFF5
 27046                           prodh	equ	0xFF4
 27047                           prodl	equ	0xFF3
 27048                           intcon	equ	0xFF2
 27049                           intcon2	equ	0xFF1
 27050                           intcon3	equ	0xFF0
 27051                           indf0	equ	0xFEF
 27052                           postinc0	equ	0xFEE
 27053                           fsr0h	equ	0xFEA
 27054                           fsr0l	equ	0xFE9
 27055                           wreg	equ	0xFE8
 27056                           postinc1	equ	0xFE6
 27057                           postdec1	equ	0xFE5
 27058                           plusw1	equ	0xFE3
 27059                           fsr1h	equ	0xFE2
 27060                           fsr1l	equ	0xFE1
 27061                           indf2	equ	0xFDF
 27062                           postinc2	equ	0xFDE
 27063                           postdec2	equ	0xFDD
 27064                           plusw2	equ	0xFDB
 27065                           fsr2h	equ	0xFDA
 27066                           fsr2l	equ	0xFD9
 27067                           status	equ	0xFD8
 27068                           
 27069 ;; *************** function _RADIO_ReleaseData *****************
 27070 ;; Defined at:
 27071 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27072 ;; Parameters:    Size  Location     Type
 27073 ;;		None
 27074 ;; Auto vars:     Size  Location     Type
 27075 ;;		None
 27076 ;; Return value:  Size  Location     Type
 27077 ;;                  1    wreg      void 
 27078 ;; Registers used:
 27079 ;;		status,2, status,0
 27080 ;; Tracked objects:
 27081 ;;		On entry : 0/0
 27082 ;;		On exit  : 0/0
 27083 ;;		Unchanged: 0/0
 27084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27086 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27088 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27089 ;;Total ram usage:        0 bytes
 27090 ;; Hardware stack levels used:    1
 27091 ;; Hardware stack levels required when called:    7
 27092 ;; This function calls:
 27093 ;;		Nothing
 27094 ;; This function is called by:
 27095 ;;		_LORAWAN_ReceiveWindow1Callback
 27096 ;;		_LORAWAN_ReceiveWindow2Callback
 27097 ;;		_LORAWAN_EnterContinuousReceive
 27098 ;;		_LORAWAN_RxDone
 27099 ;; This function uses a non-reentrant model
 27100 ;;
 27101                           
 27102                           	psect	text121
 27103  00A3C8                     __ptext121:
 27104                           	opt stack 0
 27105  00A3C8                     _RADIO_ReleaseData:
 27106                           	opt stack 18
 27107                           
 27108                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 27109                           
 27110                           ; BSR set to: 2
 27111                           ;incstack = 0
 27112  00A3C8  0101               	movlb	1	; () banked
 27113  00A3CA  9597               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 27114                           
 27115                           ; BSR set to: 1
 27116  00A3CC  0012               	return		;funcret
 27117  00A3CE                     __end_of_RADIO_ReleaseData:
 27118                           	opt stack 0
 27119                           tosu	equ	0xFFF
 27120                           tosh	equ	0xFFE
 27121                           tosl	equ	0xFFD
 27122                           pclath	equ	0xFFA
 27123                           tblptru	equ	0xFF8
 27124                           tblptrh	equ	0xFF7
 27125                           tblptrl	equ	0xFF6
 27126                           tablat	equ	0xFF5
 27127                           prodh	equ	0xFF4
 27128                           prodl	equ	0xFF3
 27129                           intcon	equ	0xFF2
 27130                           intcon2	equ	0xFF1
 27131                           intcon3	equ	0xFF0
 27132                           indf0	equ	0xFEF
 27133                           postinc0	equ	0xFEE
 27134                           fsr0h	equ	0xFEA
 27135                           fsr0l	equ	0xFE9
 27136                           wreg	equ	0xFE8
 27137                           postinc1	equ	0xFE6
 27138                           postdec1	equ	0xFE5
 27139                           plusw1	equ	0xFE3
 27140                           fsr1h	equ	0xFE2
 27141                           fsr1l	equ	0xFE1
 27142                           indf2	equ	0xFDF
 27143                           postinc2	equ	0xFDE
 27144                           postdec2	equ	0xFDD
 27145                           plusw2	equ	0xFDB
 27146                           fsr2h	equ	0xFDA
 27147                           fsr2l	equ	0xFD9
 27148                           status	equ	0xFD8
 27149                           
 27150 ;; *************** function _RADIO_ReceiveStop *****************
 27151 ;; Defined at:
 27152 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27153 ;; Parameters:    Size  Location     Type
 27154 ;;		None
 27155 ;; Auto vars:     Size  Location     Type
 27156 ;;		None
 27157 ;; Return value:  Size  Location     Type
 27158 ;;                  1    wreg      void 
 27159 ;; Registers used:
 27160 ;;		wreg, status,2, status,0, cstack
 27161 ;; Tracked objects:
 27162 ;;		On entry : 0/0
 27163 ;;		On exit  : 0/0
 27164 ;;		Unchanged: 0/0
 27165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27169 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27170 ;;Total ram usage:        0 bytes
 27171 ;; Hardware stack levels used:    1
 27172 ;; Hardware stack levels required when called:   11
 27173 ;; This function calls:
 27174 ;;		_RADIO_WriteMode
 27175 ;; This function is called by:
 27176 ;;		_LORAWAN_Send
 27177 ;;		_LORAWAN_ReceiveWindow1Callback
 27178 ;;		_LORAWAN_ReceiveWindow2Callback
 27179 ;;		_LORAWAN_EnterContinuousReceive
 27180 ;;		_LORAWAN_SetClass
 27181 ;; This function uses a non-reentrant model
 27182 ;;
 27183                           
 27184                           	psect	text122
 27185  009FDC                     __ptext122:
 27186                           	opt stack 0
 27187  009FDC                     _RADIO_ReceiveStop:
 27188                           	opt stack 17
 27189                           
 27190                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 27191                           
 27192                           ; BSR set to: 1
 27193                           ;incstack = 0
 27194  009FDC  0E02               	movlw	2
 27195  009FDE  0101               	movlb	1	; () banked
 27196  009FE0  1997               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 27197  009FE2  A4D8               	btfss	status,2,c
 27198  009FE4  0012               	return	
 27199                           
 27200                           ; BSR set to: 1
 27201                           ;radio_driver_SX1276.c: 954: {
 27202                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27203  009FE6  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27204  009FEA  0E00               	movlw	0
 27205  009FEC  0100               	movlb	0	; () banked
 27206  009FEE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27207  009FF0  0E00               	movlw	0
 27208  009FF2  EC70  F035         	call	_RADIO_WriteMode
 27209                           
 27210                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 27211  009FF6  0101               	movlb	1	; () banked
 27212  009FF8  9397               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 27213  009FFA  0012               	return	
 27214  009FFC                     __end_of_RADIO_ReceiveStop:
 27215                           	opt stack 0
 27216                           tosu	equ	0xFFF
 27217                           tosh	equ	0xFFE
 27218                           tosl	equ	0xFFD
 27219                           pclath	equ	0xFFA
 27220                           tblptru	equ	0xFF8
 27221                           tblptrh	equ	0xFF7
 27222                           tblptrl	equ	0xFF6
 27223                           tablat	equ	0xFF5
 27224                           prodh	equ	0xFF4
 27225                           prodl	equ	0xFF3
 27226                           intcon	equ	0xFF2
 27227                           intcon2	equ	0xFF1
 27228                           intcon3	equ	0xFF0
 27229                           indf0	equ	0xFEF
 27230                           postinc0	equ	0xFEE
 27231                           fsr0h	equ	0xFEA
 27232                           fsr0l	equ	0xFE9
 27233                           wreg	equ	0xFE8
 27234                           postinc1	equ	0xFE6
 27235                           postdec1	equ	0xFE5
 27236                           plusw1	equ	0xFE3
 27237                           fsr1h	equ	0xFE2
 27238                           fsr1l	equ	0xFE1
 27239                           indf2	equ	0xFDF
 27240                           postinc2	equ	0xFDE
 27241                           postdec2	equ	0xFDD
 27242                           plusw2	equ	0xFDB
 27243                           fsr2h	equ	0xFDA
 27244                           fsr2l	equ	0xFD9
 27245                           status	equ	0xFD8
 27246                           
 27247 ;; *************** function _RADIO_ReceiveStart *****************
 27248 ;; Defined at:
 27249 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27250 ;; Parameters:    Size  Location     Type
 27251 ;;  rxWindowSize    2   85[BANK0 ] unsigned int 
 27252 ;; Auto vars:     Size  Location     Type
 27253 ;;		None
 27254 ;; Return value:  Size  Location     Type
 27255 ;;                  2   85[BANK0 ] enum E7805
 27256 ;; Registers used:
 27257 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27258 ;; Tracked objects:
 27259 ;;		On entry : 0/0
 27260 ;;		On exit  : 0/0
 27261 ;;		Unchanged: 0/0
 27262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27263 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27264 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27265 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27266 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27267 ;;Total ram usage:       10 bytes
 27268 ;; Hardware stack levels used:    1
 27269 ;; Hardware stack levels required when called:   12
 27270 ;; This function calls:
 27271 ;;		_RADIO_RegisterWrite
 27272 ;;		_RADIO_WriteConfiguration
 27273 ;;		_RADIO_WriteMode
 27274 ;;		_SwTimerSetTimeout
 27275 ;;		_SwTimerStart
 27276 ;;		___lldiv
 27277 ;; This function is called by:
 27278 ;;		_LORAWAN_ReceiveWindow1Callback
 27279 ;;		_LORAWAN_ReceiveWindow2Callback
 27280 ;;		_LORAWAN_EnterContinuousReceive
 27281 ;; This function uses a non-reentrant model
 27282 ;;
 27283                           
 27284                           	psect	text123
 27285  004940                     __ptext123:
 27286                           	opt stack 0
 27287  004940                     _RADIO_ReceiveStart:
 27288                           	opt stack 13
 27289                           
 27290                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27291                           
 27292                           ; BSR set to: 1
 27293                           ;incstack = 0
 27294  004940  0101               	movlb	1	; () banked
 27295  004942  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27296  004944  D006               	goto	l14041
 27297                           
 27298                           ; BSR set to: 1
 27299                           ;radio_driver_SX1276.c: 878: {
 27300                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 27301  004946  0E80               	movlw	128
 27302  004948  0100               	movlb	0	; () banked
 27303  00494A  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27304  00494C  0E03               	movlw	3
 27305  00494E  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27306                           
 27307                           ; BSR set to: 0
 27308  004950  0012               	return	
 27309  004952                     l14041:
 27310                           
 27311                           ;radio_driver_SX1276.c: 880: }
 27312                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27313  004952  C197  F0B7         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 27314  004956  0E03               	movlw	3
 27315  004958  0100               	movlb	0	; () banked
 27316  00495A  17B7               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 27317  00495C  B4D8               	btfsc	status,2,c
 27318  00495E  D006               	goto	l14047
 27319                           
 27320                           ; BSR set to: 0
 27321                           ;radio_driver_SX1276.c: 883: {
 27322                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 27323  004960  0E80               	movlw	128
 27324  004962  0100               	movlb	0	; () banked
 27325  004964  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27326  004966  0E04               	movlw	4
 27327  004968  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27328                           
 27329                           ; BSR set to: 0
 27330  00496A  0012               	return	
 27331  00496C                     l14047:
 27332                           
 27333                           ; BSR set to: 0
 27334                           ;radio_driver_SX1276.c: 885: }
 27335                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 27336  00496C  0100               	movlb	0	; () banked
 27337  00496E  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27338  004970  0100               	movlb	0	; () banked
 27339  004972  11B6               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27340  004974  A4D8               	btfss	status,2,c
 27341  004976  D008               	goto	l14051
 27342                           
 27343                           ; BSR set to: 0
 27344                           ;radio_driver_SX1276.c: 888: {
 27345                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 27346  004978  0E00               	movlw	0
 27347  00497A  0100               	movlb	0	; () banked
 27348  00497C  6FAB               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27349  00497E  0E04               	movlw	4
 27350  004980  6FAA               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27351  004982  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 27352                           
 27353                           ;radio_driver_SX1276.c: 890: }
 27354  004986  D006               	goto	l14053
 27355  004988                     l14051:
 27356                           
 27357                           ;radio_driver_SX1276.c: 891: else
 27358                           ;radio_driver_SX1276.c: 892: {
 27359                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 27360  004988  C0B5  F0AA         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 27361  00498C  C0B6  F0AB         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 27362  004990  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 27363  004994                     l14053:
 27364                           
 27365                           ;radio_driver_SX1276.c: 894: }
 27366                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 27367  004994  0101               	movlb	1	; () banked
 27368  004996  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27369  004998  A4D8               	btfss	status,2,c
 27370  00499A  D013               	goto	l14057
 27371                           
 27372                           ; BSR set to: 1
 27373                           ;radio_driver_SX1276.c: 897: {
 27374                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 27375  00499C  0E01               	movlw	1
 27376  00499E  0100               	movlb	0	; () banked
 27377  0049A0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27378  0049A2  0E22               	movlw	34
 27379  0049A4  ECFE  F04F         	call	_RADIO_RegisterWrite
 27380                           
 27381                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 27382  0049A8  0E00               	movlw	0
 27383  0049AA  0100               	movlb	0	; () banked
 27384  0049AC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27385  0049AE  0E40               	movlw	64
 27386  0049B0  ECFE  F04F         	call	_RADIO_RegisterWrite
 27387                           
 27388                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 27389  0049B4  0E00               	movlw	0
 27390  0049B6  0100               	movlb	0	; () banked
 27391  0049B8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27392  0049BA  0E41               	movlw	65
 27393  0049BC  ECFE  F04F         	call	_RADIO_RegisterWrite
 27394                           
 27395                           ;radio_driver_SX1276.c: 908: }
 27396  0049C0  D016               	goto	l14059
 27397  0049C2                     l14057:
 27398                           
 27399                           ;radio_driver_SX1276.c: 909: else
 27400                           ;radio_driver_SX1276.c: 910: {
 27401                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 27402  0049C2  C1A8  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 27403  0049C6  0E12               	movlw	18
 27404  0049C8  ECFE  F04F         	call	_RADIO_RegisterWrite
 27405                           
 27406                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 27407  0049CC  C1A9  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 27408  0049D0  0E13               	movlw	19
 27409  0049D2  ECFE  F04F         	call	_RADIO_RegisterWrite
 27410                           
 27411                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 27412  0049D6  0E00               	movlw	0
 27413  0049D8  0100               	movlb	0	; () banked
 27414  0049DA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27415  0049DC  0E40               	movlw	64
 27416  0049DE  ECFE  F04F         	call	_RADIO_RegisterWrite
 27417                           
 27418                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 27419  0049E2  0E00               	movlw	0
 27420  0049E4  0100               	movlb	0	; () banked
 27421  0049E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27422  0049E8  0E41               	movlw	65
 27423  0049EA  ECFE  F04F         	call	_RADIO_RegisterWrite
 27424  0049EE                     l14059:
 27425                           
 27426                           ;radio_driver_SX1276.c: 917: }
 27427                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 27428  0049EE  0101               	movlb	1	; () banked
 27429  0049F0  8397               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 27430                           
 27431                           ; BSR set to: 1
 27432                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27433  0049F2  0EE7               	movlw	231
 27434  0049F4  0101               	movlb	1	; () banked
 27435  0049F6  1797               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27436                           
 27437                           ; BSR set to: 1
 27438                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 27439  0049F8  0100               	movlb	0	; () banked
 27440  0049FA  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27441  0049FC  0100               	movlb	0	; () banked
 27442  0049FE  11B6               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27443  004A00  A4D8               	btfss	status,2,c
 27444  004A02  D009               	goto	l14067
 27445                           
 27446                           ; BSR set to: 0
 27447                           ;radio_driver_SX1276.c: 925: {
 27448                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 27449  004A04  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27450  004A08  0E00               	movlw	0
 27451  004A0A  0100               	movlb	0	; () banked
 27452  004A0C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27453  004A0E  0E05               	movlw	5
 27454  004A10  EC70  F035         	call	_RADIO_WriteMode
 27455                           
 27456                           ;radio_driver_SX1276.c: 927: }
 27457  004A14  D04F               	goto	l14077
 27458  004A16                     l14067:
 27459                           
 27460                           ;radio_driver_SX1276.c: 928: else
 27461                           ;radio_driver_SX1276.c: 929: {
 27462                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 27463  004A16  0101               	movlb	1	; () banked
 27464  004A18  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27465  004A1A  A4D8               	btfss	status,2,c
 27466  004A1C  D00A               	goto	l14071
 27467                           
 27468                           ; BSR set to: 1
 27469                           ;radio_driver_SX1276.c: 931: {
 27470                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 27471  004A1E  0E01               	movlw	1
 27472  004A20  0100               	movlb	0	; () banked
 27473  004A22  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27474  004A24  0E00               	movlw	0
 27475  004A26  0100               	movlb	0	; () banked
 27476  004A28  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27477  004A2A  0E06               	movlw	6
 27478  004A2C  EC70  F035         	call	_RADIO_WriteMode
 27479                           
 27480                           ;radio_driver_SX1276.c: 933: }
 27481  004A30  D041               	goto	l14077
 27482  004A32                     l14071:
 27483                           
 27484                           ;radio_driver_SX1276.c: 934: else
 27485                           ;radio_driver_SX1276.c: 935: {
 27486                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 27487  004A32  0E00               	movlw	0
 27488  004A34  0100               	movlb	0	; () banked
 27489  004A36  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27490  004A38  0E00               	movlw	0
 27491  004A3A  0100               	movlb	0	; () banked
 27492  004A3C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27493  004A3E  0E05               	movlw	5
 27494  004A40  EC70  F035         	call	_RADIO_WriteMode
 27495                           
 27496                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 27497  004A44  0100               	movlb	0	; () banked
 27498  004A46  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27499  004A48  0100               	movlb	0	; () banked
 27500  004A4A  6FB7               	movwf	??_RADIO_ReceiveStart& (0+255),b
 27501  004A4C  0100               	movlb	0	; () banked
 27502  004A4E  51B6               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27503  004A50  0100               	movlb	0	; () banked
 27504  004A52  6FB8               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 27505  004A54  0100               	movlb	0	; () banked
 27506  004A56  6BB9               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 27507  004A58  0100               	movlb	0	; () banked
 27508  004A5A  6BBA               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 27509  004A5C  0E0C               	movlw	12
 27510  004A5E                     u15705:
 27511  004A5E  90D8               	bcf	status,0,c
 27512  004A60  0100               	movlb	0	; () banked
 27513  004A62  37B7               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27514  004A64  37B8               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27515  004A66  37B9               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27516  004A68  37BA               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27517  004A6A  2EE8               	decfsz	wreg,f,c
 27518  004A6C  D7F8               	goto	u15705
 27519  004A6E  C0B7  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27520  004A72  C0B8  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27521  004A76  C0B9  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27522  004A7A  C0BA  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27523  004A7E  0E7D               	movlw	125
 27524  004A80  0100               	movlb	0	; () banked
 27525  004A82  6F68               	movwf	___lldiv@divisor& (0+255),b
 27526  004A84  0E00               	movlw	0
 27527  004A86  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27528  004A88  0E00               	movlw	0
 27529  004A8A  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27530  004A8C  0E00               	movlw	0
 27531  004A8E  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27532  004A90  EC08  F03F         	call	___lldiv	;wreg free
 27533  004A94  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 27534  004A98  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 27535  004A9C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 27536  004AA0  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 27537  004AA4  0101               	movlb	1	; () banked
 27538  004AA6  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27539  004AA8  EC33  F04A         	call	_SwTimerSetTimeout
 27540                           
 27541                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 27542  004AAC  0101               	movlb	1	; () banked
 27543  004AAE  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27544  004AB0  ECCB  F041         	call	_SwTimerStart
 27545  004AB4                     l14077:
 27546                           
 27547                           ;radio_driver_SX1276.c: 939: }
 27548                           ;radio_driver_SX1276.c: 940: }
 27549                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27550  004AB4  0101               	movlb	1	; () banked
 27551  004AB6  519E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 27552  004AB8  0101               	movlb	1	; () banked
 27553  004ABA  119F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27554  004ABC  0101               	movlb	1	; () banked
 27555  004ABE  11A0               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27556  004AC0  0101               	movlb	1	; () banked
 27557  004AC2  11A1               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27558  004AC4  B4D8               	btfsc	status,2,c
 27559  004AC6  D069               	goto	l14089
 27560                           
 27561                           ; BSR set to: 1
 27562                           ;radio_driver_SX1276.c: 943: {
 27563                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27564  004AC8  0101               	movlb	1	; () banked
 27565  004ACA  51A1               	movf	(_RadioConfiguration+45)& (0+255),w,b
 27566  004ACC  E10A               	bnz	u15720
 27567  004ACE  0101               	movlb	1	; () banked
 27568  004AD0  299E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 27569  004AD2  0EFF               	movlw	255
 27570  004AD4  0101               	movlb	1	; () banked
 27571  004AD6  599F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27572  004AD8  0E0F               	movlw	15
 27573  004ADA  0101               	movlb	1	; () banked
 27574  004ADC  59A0               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27575  004ADE  A0D8               	btfss	status,0,c
 27576  004AE0  D020               	goto	l14083
 27577  004AE2                     u15720:
 27578                           
 27579                           ; BSR set to: 1
 27580  004AE2  C19E  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 27581  004AE6  C19F  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27582  004AEA  C1A0  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27583  004AEE  C1A1  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27584  004AF2  0E7D               	movlw	125
 27585  004AF4  0100               	movlb	0	; () banked
 27586  004AF6  6F68               	movwf	___lldiv@divisor& (0+255),b
 27587  004AF8  0E00               	movlw	0
 27588  004AFA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27589  004AFC  0E00               	movlw	0
 27590  004AFE  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27591  004B00  0E00               	movlw	0
 27592  004B02  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27593  004B04  EC08  F03F         	call	___lldiv	;wreg free
 27594  004B08  0E0C               	movlw	12
 27595  004B0A                     u15735:
 27596  004B0A  90D8               	bcf	status,0,c
 27597  004B0C  0100               	movlb	0	; () banked
 27598  004B0E  3764               	rlcf	?___lldiv& (0+255),f,b
 27599  004B10  0100               	movlb	0	; () banked
 27600  004B12  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 27601  004B14  0100               	movlb	0	; () banked
 27602  004B16  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 27603  004B18  0100               	movlb	0	; () banked
 27604  004B1A  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 27605  004B1C  2EE8               	decfsz	wreg,f,c
 27606  004B1E  D7F5               	goto	u15735
 27607  004B20  D024               	goto	L17
 27608  004B22                     l14083:
 27609  004B22  C19E  F0B7         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 27610  004B26  C19F  F0B8         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 27611  004B2A  C1A0  F0B9         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 27612  004B2E  C1A1  F0BA         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 27613  004B32  0E0C               	movlw	12
 27614  004B34                     u15745:
 27615  004B34  90D8               	bcf	status,0,c
 27616  004B36  0100               	movlb	0	; () banked
 27617  004B38  37B7               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27618  004B3A  37B8               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27619  004B3C  37B9               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27620  004B3E  37BA               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27621  004B40  2EE8               	decfsz	wreg,f,c
 27622  004B42  D7F8               	goto	u15745
 27623  004B44  C0B7  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27624  004B48  C0B8  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27625  004B4C  C0B9  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27626  004B50  C0BA  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27627  004B54  0E7D               	movlw	125
 27628  004B56  0100               	movlb	0	; () banked
 27629  004B58  6F68               	movwf	___lldiv@divisor& (0+255),b
 27630  004B5A  0E00               	movlw	0
 27631  004B5C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27632  004B5E  0E00               	movlw	0
 27633  004B60  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27634  004B62  0E00               	movlw	0
 27635  004B64  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27636  004B66  EC08  F03F         	call	___lldiv	;wreg free
 27637  004B6A                     L17:
 27638  004B6A  C064  F0BB         	movff	?___lldiv,_RADIO_ReceiveStart$1195
 27639  004B6E  C065  F0BC         	movff	?___lldiv+1,_RADIO_ReceiveStart$1195+1
 27640  004B72  C066  F0BD         	movff	?___lldiv+2,_RADIO_ReceiveStart$1195+2
 27641  004B76  C067  F0BE         	movff	?___lldiv+3,_RADIO_ReceiveStart$1195+3
 27642  004B7A  C0BB  F071         	movff	_RADIO_ReceiveStart$1195,SwTimerSetTimeout@timeout
 27643  004B7E  C0BC  F072         	movff	_RADIO_ReceiveStart$1195+1,SwTimerSetTimeout@timeout+1
 27644  004B82  C0BD  F073         	movff	_RADIO_ReceiveStart$1195+2,SwTimerSetTimeout@timeout+2
 27645  004B86  C0BE  F074         	movff	_RADIO_ReceiveStart$1195+3,SwTimerSetTimeout@timeout+3
 27646  004B8A  0101               	movlb	1	; () banked
 27647  004B8C  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27648  004B8E  EC33  F04A         	call	_SwTimerSetTimeout
 27649                           
 27650                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27651  004B92  0101               	movlb	1	; () banked
 27652  004B94  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27653  004B96  ECCB  F041         	call	_SwTimerStart
 27654  004B9A                     l14089:
 27655                           
 27656                           ;radio_driver_SX1276.c: 946: }
 27657                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 27658  004B9A  0E00               	movlw	0
 27659  004B9C  0100               	movlb	0	; () banked
 27660  004B9E  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27661  004BA0  0E00               	movlw	0
 27662  004BA2  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27663  004BA4  0012               	return	
 27664  004BA6                     __end_of_RADIO_ReceiveStart:
 27665                           	opt stack 0
 27666                           tosu	equ	0xFFF
 27667                           tosh	equ	0xFFE
 27668                           tosl	equ	0xFFD
 27669                           pclath	equ	0xFFA
 27670                           tblptru	equ	0xFF8
 27671                           tblptrh	equ	0xFF7
 27672                           tblptrl	equ	0xFF6
 27673                           tablat	equ	0xFF5
 27674                           prodh	equ	0xFF4
 27675                           prodl	equ	0xFF3
 27676                           intcon	equ	0xFF2
 27677                           intcon2	equ	0xFF1
 27678                           intcon3	equ	0xFF0
 27679                           indf0	equ	0xFEF
 27680                           postinc0	equ	0xFEE
 27681                           fsr0h	equ	0xFEA
 27682                           fsr0l	equ	0xFE9
 27683                           wreg	equ	0xFE8
 27684                           postinc1	equ	0xFE6
 27685                           postdec1	equ	0xFE5
 27686                           plusw1	equ	0xFE3
 27687                           fsr1h	equ	0xFE2
 27688                           fsr1l	equ	0xFE1
 27689                           indf2	equ	0xFDF
 27690                           postinc2	equ	0xFDE
 27691                           postdec2	equ	0xFDD
 27692                           plusw2	equ	0xFDB
 27693                           fsr2h	equ	0xFDA
 27694                           fsr2l	equ	0xFD9
 27695                           status	equ	0xFD8
 27696                           
 27697 ;; *************** function _ConfigureRadioRx *****************
 27698 ;; Defined at:
 27699 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27700 ;; Parameters:    Size  Location     Type
 27701 ;;  dataRate        1    wreg     unsigned char 
 27702 ;;  freq            4   22[BANK0 ] unsigned long 
 27703 ;; Auto vars:     Size  Location     Type
 27704 ;;  dataRate        1   26[BANK0 ] unsigned char 
 27705 ;; Return value:  Size  Location     Type
 27706 ;;                  1    wreg      void 
 27707 ;; Registers used:
 27708 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27709 ;; Tracked objects:
 27710 ;;		On entry : 0/0
 27711 ;;		On exit  : 0/0
 27712 ;;		Unchanged: 0/0
 27713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27714 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27717 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27718 ;;Total ram usage:        5 bytes
 27719 ;; Hardware stack levels used:    1
 27720 ;; Hardware stack levels required when called:   10
 27721 ;; This function calls:
 27722 ;;		_ConfigureRadio
 27723 ;;		_RADIO_SetCRC
 27724 ;;		_RADIO_SetIQInverted
 27725 ;; This function is called by:
 27726 ;;		_LORAWAN_ReceiveWindow1Callback
 27727 ;;		_LORAWAN_ReceiveWindow2Callback
 27728 ;;		_LORAWAN_EnterContinuousReceive
 27729 ;; This function uses a non-reentrant model
 27730 ;;
 27731                           
 27732                           	psect	text124
 27733  009DF6                     __ptext124:
 27734                           	opt stack 0
 27735  009DF6                     _ConfigureRadioRx:
 27736                           	opt stack 15
 27737                           
 27738                           ; BSR set to: 0
 27739                           ;incstack = 0
 27740                           ;ConfigureRadioRx@dataRate stored from wreg
 27741  009DF6  0100               	movlb	0	; () banked
 27742  009DF8  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 27743                           
 27744                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 27745  009DFA  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 27746  009DFE  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 27747  009E02  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 27748  009E06  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 27749  009E0A  0100               	movlb	0	; () banked
 27750  009E0C  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 27751  009E0E  ECD0  F040         	call	_ConfigureRadio
 27752                           
 27753                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 27754  009E12  0E00               	movlw	0
 27755  009E14  ECB0  F051         	call	_RADIO_SetCRC
 27756                           
 27757                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 27758  009E18  0E01               	movlw	1
 27759  009E1A  ECAB  F051         	call	_RADIO_SetIQInverted
 27760  009E1E  0012               	return		;funcret
 27761  009E20                     __end_of_ConfigureRadioRx:
 27762                           	opt stack 0
 27763                           tosu	equ	0xFFF
 27764                           tosh	equ	0xFFE
 27765                           tosl	equ	0xFFD
 27766                           pclath	equ	0xFFA
 27767                           tblptru	equ	0xFF8
 27768                           tblptrh	equ	0xFF7
 27769                           tblptrl	equ	0xFF6
 27770                           tablat	equ	0xFF5
 27771                           prodh	equ	0xFF4
 27772                           prodl	equ	0xFF3
 27773                           intcon	equ	0xFF2
 27774                           intcon2	equ	0xFF1
 27775                           intcon3	equ	0xFF0
 27776                           indf0	equ	0xFEF
 27777                           postinc0	equ	0xFEE
 27778                           fsr0h	equ	0xFEA
 27779                           fsr0l	equ	0xFE9
 27780                           wreg	equ	0xFE8
 27781                           postinc1	equ	0xFE6
 27782                           postdec1	equ	0xFE5
 27783                           plusw1	equ	0xFE3
 27784                           fsr1h	equ	0xFE2
 27785                           fsr1l	equ	0xFE1
 27786                           indf2	equ	0xFDF
 27787                           postinc2	equ	0xFDE
 27788                           postdec2	equ	0xFDD
 27789                           plusw2	equ	0xFDB
 27790                           fsr2h	equ	0xFDA
 27791                           fsr2l	equ	0xFD9
 27792                           status	equ	0xFD8
 27793                           
 27794 ;; *************** function _INTERRUPT_GetDioStatus *****************
 27795 ;; Defined at:
 27796 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 27797 ;; Parameters:    Size  Location     Type
 27798 ;;		None
 27799 ;; Auto vars:     Size  Location     Type
 27800 ;;  a               1    4[BANK0 ] unsigned char 
 27801 ;; Return value:  Size  Location     Type
 27802 ;;                  1    wreg      unsigned char 
 27803 ;; Registers used:
 27804 ;;		wreg, status,2
 27805 ;; Tracked objects:
 27806 ;;		On entry : 0/0
 27807 ;;		On exit  : 0/0
 27808 ;;		Unchanged: 0/0
 27809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27810 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27813 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27814 ;;Total ram usage:        1 bytes
 27815 ;; Hardware stack levels used:    1
 27816 ;; Hardware stack levels required when called:    7
 27817 ;; This function calls:
 27818 ;;		Nothing
 27819 ;; This function is called by:
 27820 ;;		_LORAWAN_Mainloop
 27821 ;; This function uses a non-reentrant model
 27822 ;;
 27823                           
 27824                           	psect	text125
 27825  00A22E                     __ptext125:
 27826                           	opt stack 0
 27827  00A22E                     _INTERRUPT_GetDioStatus:
 27828                           	opt stack 22
 27829                           
 27830                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 27831                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 27832                           
 27833                           ;incstack = 0
 27834  00A22E  9EF2               	bcf	intcon,7,c	;volatile
 27835                           
 27836                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 27837  00A230  C04C  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 27838                           
 27839                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 27840  00A234  0E00               	movlw	0
 27841  00A236  6E4C               	movwf	_dioStatus,c	;volatile
 27842                           
 27843                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 27844  00A238  8EF2               	bsf	intcon,7,c	;volatile
 27845                           
 27846                           ;interrupt_manager_lora_addons.c: 55: return a;
 27847  00A23A  0100               	movlb	0	; () banked
 27848  00A23C  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 27849  00A23E  0012               	return	
 27850  00A240                     __end_of_INTERRUPT_GetDioStatus:
 27851                           	opt stack 0
 27852                           tosu	equ	0xFFF
 27853                           tosh	equ	0xFFE
 27854                           tosl	equ	0xFFD
 27855                           pclath	equ	0xFFA
 27856                           tblptru	equ	0xFF8
 27857                           tblptrh	equ	0xFF7
 27858                           tblptrl	equ	0xFF6
 27859                           tablat	equ	0xFF5
 27860                           prodh	equ	0xFF4
 27861                           prodl	equ	0xFF3
 27862                           intcon	equ	0xFF2
 27863                           intcon2	equ	0xFF1
 27864                           intcon3	equ	0xFF0
 27865                           indf0	equ	0xFEF
 27866                           postinc0	equ	0xFEE
 27867                           fsr0h	equ	0xFEA
 27868                           fsr0l	equ	0xFE9
 27869                           wreg	equ	0xFE8
 27870                           postinc1	equ	0xFE6
 27871                           postdec1	equ	0xFE5
 27872                           plusw1	equ	0xFE3
 27873                           fsr1h	equ	0xFE2
 27874                           fsr1l	equ	0xFE1
 27875                           indf2	equ	0xFDF
 27876                           postinc2	equ	0xFDE
 27877                           postdec2	equ	0xFDD
 27878                           plusw2	equ	0xFDB
 27879                           fsr2h	equ	0xFDA
 27880                           fsr2l	equ	0xFD9
 27881                           status	equ	0xFD8
 27882                           
 27883 ;; *************** function _LORAWAN_Join *****************
 27884 ;; Defined at:
 27885 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27886 ;; Parameters:    Size  Location     Type
 27887 ;;  activationTy    1    wreg     enum E7980
 27888 ;; Auto vars:     Size  Location     Type
 27889 ;;  activationTy    1  145[BANK0 ] enum E7980
 27890 ;;  result          1  144[BANK0 ] enum E7957
 27891 ;;  bufferIndex     1  143[BANK0 ] unsigned char 
 27892 ;; Return value:  Size  Location     Type
 27893 ;;                  1    wreg      enum E7957
 27894 ;; Registers used:
 27895 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27896 ;; Tracked objects:
 27897 ;;		On entry : 0/0
 27898 ;;		On exit  : 0/0
 27899 ;;		Unchanged: 0/0
 27900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27902 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27904 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27905 ;;Total ram usage:        3 bytes
 27906 ;; Hardware stack levels used:    1
 27907 ;; Hardware stack levels required when called:   14
 27908 ;; This function calls:
 27909 ;;		_PrepareJoinRequestFrame
 27910 ;;		_RADIO_Transmit
 27911 ;;		_SelectChannelForTransmission
 27912 ;;		_SwTimerSetTimeout
 27913 ;;		_SwTimerStart
 27914 ;;		_UpdateJoinInProgress
 27915 ;; This function is called by:
 27916 ;;		_main
 27917 ;; This function uses a non-reentrant model
 27918 ;;
 27919                           
 27920                           	psect	text126
 27921  007D54                     __ptext126:
 27922                           	opt stack 0
 27923  007D54                     _LORAWAN_Join:
 27924                           	opt stack 16
 27925                           
 27926                           ; BSR set to: 0
 27927                           ;incstack = 0
 27928                           ;LORAWAN_Join@activationTypeNew stored from wreg
 27929  007D54  0100               	movlb	0	; () banked
 27930  007D56  6FF1               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 27931                           
 27932                           ;lorawan.c: 117: uint8_t bufferIndex;
 27933                           ;lorawan.c: 118: LorawanError_t result;
 27934                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 27935  007D58  0102               	movlb	2	; () banked
 27936  007D5A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 27937  007D5C  0012               	return	
 27938                           
 27939                           ; BSR set to: 2
 27940                           ;lorawan.c: 123: }
 27941                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 27942                           
 27943                           ; BSR set to: 2
 27944                           ;lorawan.c: 121: {
 27945                           ;lorawan.c: 122: return MAC_PAUSED;
 27946                           ;	Return value of _LORAWAN_Join is never used
 27947  007D5E  0102               	movlb	2	; () banked
 27948  007D60  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 27949  007D62  0012               	return	
 27950                           
 27951                           ; BSR set to: 2
 27952                           ;lorawan.c: 128: }
 27953                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 27954                           
 27955                           ; BSR set to: 2
 27956                           
 27957                           ; BSR set to: 2
 27958                           ;lorawan.c: 126: {
 27959                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 27960                           ;	Return value of _LORAWAN_Join is never used
 27961  007D64  0102               	movlb	2	; () banked
 27962  007D66  5102               	movf	(_loRa+2)& (0+255),w,b
 27963  007D68  0B0F               	andlw	15
 27964  007D6A  0900               	iorlw	0
 27965  007D6C  A4D8               	btfss	status,2,c
 27966  007D6E  0012               	return	
 27967                           
 27968                           ; BSR set to: 2
 27969                           ;lorawan.c: 133: }
 27970                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 27971                           
 27972                           ; BSR set to: 2
 27973                           ;lorawan.c: 131: {
 27974                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 27975                           ;	Return value of _LORAWAN_Join is never used
 27976  007D70  C0F1  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 27977                           
 27978                           ; BSR set to: 2
 27979                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 27980  007D74  0100               	movlb	0	; () banked
 27981  007D76  51F1               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 27982  007D78  0100               	movlb	0	; () banked
 27983  007D7A  A4D8               	btfss	status,2,c
 27984  007D7C  D02B               	goto	l1666
 27985                           
 27986                           ; BSR set to: 0
 27987                           ;lorawan.c: 138: {
 27988                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 27989  007D7E  0102               	movlb	2	; () banked
 27990  007D80  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 27991  007D82  0012               	return	
 27992                           
 27993                           ; BSR set to: 2
 27994  007D84  0102               	movlb	2	; () banked
 27995  007D86  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 27996  007D88  0012               	return	
 27997                           
 27998                           ; BSR set to: 2
 27999  007D8A  0102               	movlb	2	; () banked
 28000  007D8C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 28001  007D8E  0012               	return	
 28002                           
 28003                           ; BSR set to: 2
 28004                           ;lorawan.c: 144: else
 28005                           ;lorawan.c: 145: {
 28006                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 28007                           
 28008                           ; BSR set to: 2
 28009                           
 28010                           ; BSR set to: 2
 28011                           ;lorawan.c: 143: }
 28012                           
 28013                           ; BSR set to: 2
 28014                           ;lorawan.c: 141: {
 28015                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 28016                           ;	Return value of _LORAWAN_Join is never used
 28017  007D90  EC20  F029         	call	_PrepareJoinRequestFrame	;wreg free
 28018  007D94  0100               	movlb	0	; () banked
 28019  007D96  6FEF               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 28020                           
 28021                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 28022  007D98  0E00               	movlw	0
 28023  007D9A  EC47  F046         	call	_SelectChannelForTransmission
 28024  007D9E  0100               	movlb	0	; () banked
 28025  007DA0  6FF0               	movwf	LORAWAN_Join@result& (0+255),b
 28026                           
 28027                           ; BSR set to: 0
 28028                           ;lorawan.c: 149: if (result == OK)
 28029  007DA2  0100               	movlb	0	; () banked
 28030  007DA4  51F0               	movf	LORAWAN_Join@result& (0+255),w,b
 28031  007DA6  0100               	movlb	0	; () banked
 28032  007DA8  A4D8               	btfss	status,2,c
 28033  007DAA  0012               	return	
 28034                           
 28035                           ; BSR set to: 0
 28036                           ;lorawan.c: 150: {
 28037                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 28038  007DAC  0EE0               	movlw	low _macBuffer
 28039  007DAE  0100               	movlb	0	; () banked
 28040  007DB0  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 28041  007DB2  0E04               	movlw	high _macBuffer
 28042  007DB4  0100               	movlb	0	; () banked
 28043  007DB6  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 28044  007DB8  C0EF  F0B7         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 28045  007DBC  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 28046  007DC0  0100               	movlb	0	; () banked
 28047  007DC2  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 28048  007DC4  0100               	movlb	0	; () banked
 28049  007DC6  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 28050  007DC8  A4D8               	btfss	status,2,c
 28051  007DCA  0012               	return	
 28052                           
 28053                           ; BSR set to: 0
 28054                           ;lorawan.c: 152: {
 28055                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 28056  007DCC  0E01               	movlw	1
 28057  007DCE  EC69  F050         	call	_UpdateJoinInProgress
 28058                           
 28059                           ;lorawan.c: 164: }
 28060                           ;lorawan.c: 165: }
 28061                           ;lorawan.c: 166: }
 28062                           
 28063                           ;lorawan.c: 161: else
 28064                           ;lorawan.c: 162: {
 28065                           ;lorawan.c: 163: return result;
 28066                           ;	Return value of _LORAWAN_Join is never used
 28067                           
 28068                           ;lorawan.c: 159: }
 28069                           ;lorawan.c: 160: }
 28070                           
 28071                           ;lorawan.c: 156: else
 28072                           ;lorawan.c: 157: {
 28073                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 28074                           ;	Return value of _LORAWAN_Join is never used
 28075                           
 28076                           ;lorawan.c: 155: }
 28077                           
 28078                           ;lorawan.c: 154: return OK;
 28079                           ;	Return value of _LORAWAN_Join is never used
 28080  007DD2  0012               	return	
 28081  007DD4                     l1666:
 28082                           
 28083                           ; BSR set to: 0
 28084                           ;lorawan.c: 167: else
 28085                           ;lorawan.c: 168: {
 28086                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 28087  007DD4  0102               	movlb	2	; () banked
 28088  007DD6  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 28089  007DD8  0012               	return	
 28090                           
 28091                           ; BSR set to: 2
 28092  007DDA  0102               	movlb	2	; () banked
 28093  007DDC  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 28094  007DDE  0012               	return	
 28095                           
 28096                           ; BSR set to: 2
 28097  007DE0  0102               	movlb	2	; () banked
 28098  007DE2  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 28099  007DE4  0012               	return	
 28100                           
 28101                           ; BSR set to: 2
 28102                           ;lorawan.c: 174: else
 28103                           ;lorawan.c: 175: {
 28104                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28105                           
 28106                           ; BSR set to: 2
 28107                           
 28108                           ; BSR set to: 2
 28109                           ;lorawan.c: 173: }
 28110                           
 28111                           ; BSR set to: 2
 28112                           ;lorawan.c: 171: {
 28113                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 28114                           ;	Return value of _LORAWAN_Join is never used
 28115  007DE6  0E07               	movlw	7
 28116  007DE8  EC69  F050         	call	_UpdateJoinInProgress
 28117                           
 28118                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28119  007DEC  0E8F               	movlw	143
 28120  007DEE  0100               	movlb	0	; () banked
 28121  007DF0  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28122  007DF2  0E02               	movlw	2
 28123  007DF4  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28124  007DF6  0E00               	movlw	0
 28125  007DF8  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28126  007DFA  0E00               	movlw	0
 28127  007DFC  6F74               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28128  007DFE  0102               	movlb	2	; () banked
 28129  007E00  51F3               	movf	(_loRa+243)& (0+255),w,b
 28130  007E02  EC33  F04A         	call	_SwTimerSetTimeout
 28131                           
 28132                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28133  007E06  0102               	movlb	2	; () banked
 28134  007E08  51F3               	movf	(_loRa+243)& (0+255),w,b
 28135  007E0A  ECCB  F041         	call	_SwTimerStart
 28136                           
 28137                           ;lorawan.c: 180: return OK;
 28138                           ;	Return value of _LORAWAN_Join is never used
 28139  007E0E  0012               	return	
 28140  007E10                     __end_of_LORAWAN_Join:
 28141                           	opt stack 0
 28142                           tosu	equ	0xFFF
 28143                           tosh	equ	0xFFE
 28144                           tosl	equ	0xFFD
 28145                           pclath	equ	0xFFA
 28146                           tblptru	equ	0xFF8
 28147                           tblptrh	equ	0xFF7
 28148                           tblptrl	equ	0xFF6
 28149                           tablat	equ	0xFF5
 28150                           prodh	equ	0xFF4
 28151                           prodl	equ	0xFF3
 28152                           intcon	equ	0xFF2
 28153                           intcon2	equ	0xFF1
 28154                           intcon3	equ	0xFF0
 28155                           indf0	equ	0xFEF
 28156                           postinc0	equ	0xFEE
 28157                           fsr0h	equ	0xFEA
 28158                           fsr0l	equ	0xFE9
 28159                           wreg	equ	0xFE8
 28160                           postinc1	equ	0xFE6
 28161                           postdec1	equ	0xFE5
 28162                           plusw1	equ	0xFE3
 28163                           fsr1h	equ	0xFE2
 28164                           fsr1l	equ	0xFE1
 28165                           indf2	equ	0xFDF
 28166                           postinc2	equ	0xFDE
 28167                           postdec2	equ	0xFDD
 28168                           plusw2	equ	0xFDB
 28169                           fsr2h	equ	0xFDA
 28170                           fsr2l	equ	0xFD9
 28171                           status	equ	0xFD8
 28172                           
 28173 ;; *************** function _UpdateJoinInProgress *****************
 28174 ;; Defined at:
 28175 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28176 ;; Parameters:    Size  Location     Type
 28177 ;;  state           1    wreg     unsigned char 
 28178 ;; Auto vars:     Size  Location     Type
 28179 ;;  state           1    4[BANK0 ] unsigned char 
 28180 ;; Return value:  Size  Location     Type
 28181 ;;                  1    wreg      void 
 28182 ;; Registers used:
 28183 ;;		wreg, status,2, status,0
 28184 ;; Tracked objects:
 28185 ;;		On entry : 0/0
 28186 ;;		On exit  : 0/0
 28187 ;;		Unchanged: 0/0
 28188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28193 ;;Total ram usage:        1 bytes
 28194 ;; Hardware stack levels used:    1
 28195 ;; Hardware stack levels required when called:    7
 28196 ;; This function calls:
 28197 ;;		Nothing
 28198 ;; This function is called by:
 28199 ;;		_LORAWAN_Join
 28200 ;; This function uses a non-reentrant model
 28201 ;;
 28202                           
 28203                           	psect	text127
 28204  00A0D2                     __ptext127:
 28205                           	opt stack 0
 28206  00A0D2                     _UpdateJoinInProgress:
 28207                           	opt stack 22
 28208                           
 28209                           ;incstack = 0
 28210                           ;UpdateJoinInProgress@state stored from wreg
 28211  00A0D2  0100               	movlb	0	; () banked
 28212  00A0D4  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 28213                           
 28214                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28215  00A0D6  0102               	movlb	2	; () banked
 28216  00A0D8  9902               	bcf	(_loRa+2)& (0+255),4,b
 28217                           
 28218                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28219  00A0DA  0102               	movlb	2	; () banked
 28220  00A0DC  8500               	bsf	_loRa& (0+255),2,b
 28221                           
 28222                           ; BSR set to: 2
 28223                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28224  00A0DE  0102               	movlb	2	; () banked
 28225  00A0E0  5102               	movf	(_loRa+2)& (0+255),w,b
 28226  00A0E2  0100               	movlb	0	; () banked
 28227  00A0E4  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28228  00A0E6  0BF0               	andlw	-16
 28229  00A0E8  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28230  00A0EA  0102               	movlb	2	; () banked
 28231  00A0EC  6F02               	movwf	(_loRa+2)& (0+255),b
 28232                           
 28233                           ; BSR set to: 2
 28234  00A0EE  0012               	return		;funcret
 28235  00A0F0                     __end_of_UpdateJoinInProgress:
 28236                           	opt stack 0
 28237                           tosu	equ	0xFFF
 28238                           tosh	equ	0xFFE
 28239                           tosl	equ	0xFFD
 28240                           pclath	equ	0xFFA
 28241                           tblptru	equ	0xFF8
 28242                           tblptrh	equ	0xFF7
 28243                           tblptrl	equ	0xFF6
 28244                           tablat	equ	0xFF5
 28245                           prodh	equ	0xFF4
 28246                           prodl	equ	0xFF3
 28247                           intcon	equ	0xFF2
 28248                           intcon2	equ	0xFF1
 28249                           intcon3	equ	0xFF0
 28250                           indf0	equ	0xFEF
 28251                           postinc0	equ	0xFEE
 28252                           fsr0h	equ	0xFEA
 28253                           fsr0l	equ	0xFE9
 28254                           wreg	equ	0xFE8
 28255                           postinc1	equ	0xFE6
 28256                           postdec1	equ	0xFE5
 28257                           plusw1	equ	0xFE3
 28258                           fsr1h	equ	0xFE2
 28259                           fsr1l	equ	0xFE1
 28260                           indf2	equ	0xFDF
 28261                           postinc2	equ	0xFDE
 28262                           postdec2	equ	0xFDD
 28263                           plusw2	equ	0xFDB
 28264                           fsr2h	equ	0xFDA
 28265                           fsr2l	equ	0xFD9
 28266                           status	equ	0xFD8
 28267                           
 28268 ;; *************** function _SelectChannelForTransmission *****************
 28269 ;; Defined at:
 28270 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28271 ;; Parameters:    Size  Location     Type
 28272 ;;  transmission    1    wreg     unsigned char 
 28273 ;; Auto vars:     Size  Location     Type
 28274 ;;  transmission    1   95[BANK0 ] unsigned char 
 28275 ;;  channelIndex    1   97[BANK0 ] unsigned char 
 28276 ;;  result          1   96[BANK0 ] enum E8016
 28277 ;; Return value:  Size  Location     Type
 28278 ;;                  1    wreg      enum E8016
 28279 ;; Registers used:
 28280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28281 ;; Tracked objects:
 28282 ;;		On entry : 0/0
 28283 ;;		On exit  : 0/0
 28284 ;;		Unchanged: 0/0
 28285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28287 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28289 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28290 ;;Total ram usage:        3 bytes
 28291 ;; Hardware stack levels used:    1
 28292 ;; Hardware stack levels required when called:   11
 28293 ;; This function calls:
 28294 ;;		_ConfigureRadioTx
 28295 ;;		_SearchAvailableChannel
 28296 ;; This function is called by:
 28297 ;;		_LORAWAN_RxTimeout
 28298 ;;		_LORAWAN_Join
 28299 ;;		_LORAWAN_Send
 28300 ;;		_AckRetransmissionCallback
 28301 ;;		_UnconfirmedTransmissionCallback
 28302 ;; This function uses a non-reentrant model
 28303 ;;
 28304                           
 28305                           	psect	text128
 28306  008C8E                     __ptext128:
 28307                           	opt stack 0
 28308  008C8E                     _SelectChannelForTransmission:
 28309                           	opt stack 17
 28310                           
 28311                           ; BSR set to: 2
 28312                           ;incstack = 0
 28313                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28314  008C8E  0100               	movlb	0	; () banked
 28315  008C90  6FBF               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28316                           
 28317                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 28318  008C92  0E00               	movlw	0
 28319  008C94  0100               	movlb	0	; () banked
 28320  008C96  6FC0               	movwf	SelectChannelForTransmission@result& (0+255),b
 28321                           
 28322                           ; BSR set to: 0
 28323                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 28324                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 28325  008C98  C0BF  F0B3         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28326  008C9C  0EC1               	movlw	low SelectChannelForTransmission@channelIndex
 28327  008C9E  0100               	movlb	0	; () banked
 28328  008CA0  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28329  008CA2  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28330  008CA4  0100               	movlb	0	; () banked
 28331  008CA6  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28332  008CA8  0E10               	movlw	16
 28333  008CAA  EC29  F032         	call	_SearchAvailableChannel
 28334  008CAE  0100               	movlb	0	; () banked
 28335  008CB0  6FC0               	movwf	SelectChannelForTransmission@result& (0+255),b
 28336                           
 28337                           ; BSR set to: 0
 28338                           ;lorawan_eu.c: 926: if (result == OK)
 28339  008CB2  0100               	movlb	0	; () banked
 28340  008CB4  51C0               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28341  008CB6  0100               	movlb	0	; () banked
 28342  008CB8  A4D8               	btfss	status,2,c
 28343  008CBA  D021               	goto	l14751
 28344                           
 28345                           ; BSR set to: 0
 28346                           ;lorawan_eu.c: 927: {
 28347                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 28348  008CBC  C0C1  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28349                           
 28350                           ; BSR set to: 0
 28351                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28352  008CC0  0100               	movlb	0	; () banked
 28353  008CC2  51C1               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28354  008CC4  0D0E               	mullw	14
 28355  008CC6  0E00               	movlw	low _Channels
 28356  008CC8  24F3               	addwf	prodl,w,c
 28357  008CCA  6ED9               	movwf	fsr2l,c
 28358  008CCC  0E04               	movlw	high _Channels
 28359  008CCE  20F4               	addwfc	prodh,w,c
 28360  008CD0  6EDA               	movwf	fsr2h,c
 28361  008CD2  CFDE F213          	movff	postinc2,_loRa+19
 28362  008CD6  CFDE F214          	movff	postinc2,_loRa+20
 28363  008CDA  CFDE F215          	movff	postinc2,_loRa+21
 28364  008CDE  CFDE F216          	movff	postinc2,_loRa+22
 28365                           
 28366                           ; BSR set to: 0
 28367                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28368  008CE2  C2DF  F217         	movff	_loRa+223,_loRa+23
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28372  008CE6  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 28373  008CEA  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28374  008CEE  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28375  008CF2  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28376  008CF6  0102               	movlb	2	; () banked
 28377  008CF8  5117               	movf	(_loRa+23)& (0+255),w,b
 28378  008CFA  EC09  F04A         	call	_ConfigureRadioTx
 28379  008CFE                     l14751:
 28380                           
 28381                           ;lorawan_eu.c: 933: }
 28382                           ;lorawan_eu.c: 934: return result;
 28383  008CFE  0100               	movlb	0	; () banked
 28384  008D00  51C0               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28385  008D02  0012               	return	
 28386  008D04                     __end_of_SelectChannelForTransmission:
 28387                           	opt stack 0
 28388                           tosu	equ	0xFFF
 28389                           tosh	equ	0xFFE
 28390                           tosl	equ	0xFFD
 28391                           pclath	equ	0xFFA
 28392                           tblptru	equ	0xFF8
 28393                           tblptrh	equ	0xFF7
 28394                           tblptrl	equ	0xFF6
 28395                           tablat	equ	0xFF5
 28396                           prodh	equ	0xFF4
 28397                           prodl	equ	0xFF3
 28398                           intcon	equ	0xFF2
 28399                           intcon2	equ	0xFF1
 28400                           intcon3	equ	0xFF0
 28401                           indf0	equ	0xFEF
 28402                           postinc0	equ	0xFEE
 28403                           fsr0h	equ	0xFEA
 28404                           fsr0l	equ	0xFE9
 28405                           wreg	equ	0xFE8
 28406                           postinc1	equ	0xFE6
 28407                           postdec1	equ	0xFE5
 28408                           plusw1	equ	0xFE3
 28409                           fsr1h	equ	0xFE2
 28410                           fsr1l	equ	0xFE1
 28411                           indf2	equ	0xFDF
 28412                           postinc2	equ	0xFDE
 28413                           postdec2	equ	0xFDD
 28414                           plusw2	equ	0xFDB
 28415                           fsr2h	equ	0xFDA
 28416                           fsr2l	equ	0xFD9
 28417                           status	equ	0xFD8
 28418                           
 28419 ;; *************** function _SearchAvailableChannel *****************
 28420 ;; Defined at:
 28421 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28422 ;; Parameters:    Size  Location     Type
 28423 ;;  maxChannels     1    wreg     unsigned char 
 28424 ;;  transmission    1   83[BANK0 ] unsigned char 
 28425 ;;  channelIndex    2   84[BANK0 ] PTR unsigned char 
 28426 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28427 ;; Auto vars:     Size  Location     Type
 28428 ;;  maxChannels     1   92[BANK0 ] unsigned char 
 28429 ;;  i               1   94[BANK0 ] unsigned char 
 28430 ;;  randomNumber    1   93[BANK0 ] unsigned char 
 28431 ;;  result          1   91[BANK0 ] enum E8016
 28432 ;;  randomNumber    1   90[BANK0 ] unsigned char 
 28433 ;; Return value:  Size  Location     Type
 28434 ;;                  1    wreg      enum E8016
 28435 ;; Registers used:
 28436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28437 ;; Tracked objects:
 28438 ;;		On entry : 0/0
 28439 ;;		On exit  : 0/0
 28440 ;;		Unchanged: 0/0
 28441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28443 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28444 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28445 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28446 ;;Total ram usage:       12 bytes
 28447 ;; Hardware stack levels used:    1
 28448 ;; Hardware stack levels required when called:   10
 28449 ;; This function calls:
 28450 ;;		_Random
 28451 ;; This function is called by:
 28452 ;;		_SelectChannelForTransmission
 28453 ;;		_LORAWAN_RxDone
 28454 ;; This function uses a non-reentrant model
 28455 ;;
 28456                           
 28457                           	psect	text129
 28458  006452                     __ptext129:
 28459                           	opt stack 0
 28460  006452                     _SearchAvailableChannel:
 28461                           	opt stack 17
 28462                           
 28463                           ; BSR set to: 0
 28464                           ;incstack = 0
 28465                           ;SearchAvailableChannel@maxChannels stored from wreg
 28466  006452  0100               	movlb	0	; () banked
 28467  006454  6FBC               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28468                           
 28469                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 28470                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 28471  006456  0E00               	movlw	0
 28472  006458  0100               	movlb	0	; () banked
 28473  00645A  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28474                           
 28475                           ; BSR set to: 0
 28476                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 28477  00645C  C0BC  F0B1         	movff	SearchAvailableChannel@maxChannels,Random@max
 28478  006460  0100               	movlb	0	; () banked
 28479  006462  6BB2               	clrf	(Random@max+1)& (0+255),b
 28480  006464  ECDD  F04F         	call	_Random	;wreg free
 28481  006468  0100               	movlb	0	; () banked
 28482  00646A  29B1               	incf	?_Random& (0+255),w,b
 28483  00646C  0100               	movlb	0	; () banked
 28484  00646E  6FBD               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28485                           
 28486                           ; BSR set to: 0
 28487                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 28488  006470  C0BD  F0BA         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28489                           
 28490                           ;lorawan_eu.c: 786: while (randomNumber)
 28491  006474  D085               	goto	l14293
 28492  006476                     l14267:
 28493                           
 28494                           ; BSR set to: 0
 28495                           ;lorawan_eu.c: 787: {
 28496                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 28497  006476  0E00               	movlw	0
 28498  006478  0100               	movlb	0	; () banked
 28499  00647A  6FBE               	movwf	SearchAvailableChannel@i& (0+255),b
 28500  00647C  D06C               	goto	l14285
 28501  00647E                     l14269:
 28502                           
 28503                           ; BSR set to: 0
 28504                           ;lorawan_eu.c: 789: {
 28505                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 28506  00647E  0100               	movlb	0	; () banked
 28507  006480  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28508  006482  0D0E               	mullw	14
 28509  006484  0E04               	movlw	4
 28510  006486  26F3               	addwf	prodl,f,c
 28511  006488  0E00               	movlw	0
 28512  00648A  22F4               	addwfc	prodh,f,c
 28513  00648C  0E00               	movlw	low _Channels
 28514  00648E  24F3               	addwf	prodl,w,c
 28515  006490  6ED9               	movwf	fsr2l,c
 28516  006492  0E04               	movlw	high _Channels
 28517  006494  20F4               	addwfc	prodh,w,c
 28518  006496  6EDA               	movwf	fsr2h,c
 28519  006498  04DE               	decf	postinc2,w,c
 28520  00649A  A4D8               	btfss	status,2,c
 28521  00649C  D05A               	goto	l1134
 28522                           
 28523                           ; BSR set to: 0
 28524  00649E  0100               	movlb	0	; () banked
 28525  0064A0  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28526  0064A2  0D0E               	mullw	14
 28527  0064A4  0E08               	movlw	8
 28528  0064A6  26F3               	addwf	prodl,f,c
 28529  0064A8  0E00               	movlw	0
 28530  0064AA  22F4               	addwfc	prodh,f,c
 28531  0064AC  0E00               	movlw	low _Channels
 28532  0064AE  24F3               	addwf	prodl,w,c
 28533  0064B0  6ED9               	movwf	fsr2l,c
 28534  0064B2  0E04               	movlw	high _Channels
 28535  0064B4  20F4               	addwfc	prodh,w,c
 28536  0064B6  6EDA               	movwf	fsr2h,c
 28537  0064B8  50DE               	movf	postinc2,w,c
 28538  0064BA  10DE               	iorwf	postinc2,w,c
 28539  0064BC  10DE               	iorwf	postinc2,w,c
 28540  0064BE  10DE               	iorwf	postinc2,w,c
 28541  0064C0  A4D8               	btfss	status,2,c
 28542  0064C2  D047               	goto	l1134
 28543                           
 28544                           ; BSR set to: 0
 28545  0064C4  0100               	movlb	0	; () banked
 28546  0064C6  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28547  0064C8  0D0E               	mullw	14
 28548  0064CA  0E05               	movlw	5
 28549  0064CC  26F3               	addwf	prodl,f,c
 28550  0064CE  0E00               	movlw	0
 28551  0064D0  22F4               	addwfc	prodh,f,c
 28552  0064D2  0E00               	movlw	low _Channels
 28553  0064D4  24F3               	addwf	prodl,w,c
 28554  0064D6  6ED9               	movwf	fsr2l,c
 28555  0064D8  0E04               	movlw	high _Channels
 28556  0064DA  20F4               	addwfc	prodh,w,c
 28557  0064DC  6EDA               	movwf	fsr2h,c
 28558  0064DE  0104               	movlb	4	; () banked
 28559  0064E0  50DF               	movf	223,w,c
 28560  0064E2  0B0F               	andlw	15
 28561  0064E4  0100               	movlb	0	; () banked
 28562  0064E6  6FB6               	movwf	??_SearchAvailableChannel& (0+255),b
 28563  0064E8  0100               	movlb	0	; () banked
 28564  0064EA  51B6               	movf	??_SearchAvailableChannel& (0+255),w,b
 28565  0064EC  0102               	movlb	2	; () banked
 28566  0064EE  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 28567  0064F0  A0D8               	btfss	status,0,c
 28568  0064F2  D02F               	goto	l1134
 28569                           
 28570                           ; BSR set to: 2
 28571  0064F4  0100               	movlb	0	; () banked
 28572  0064F6  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28573  0064F8  0D0E               	mullw	14
 28574  0064FA  0E05               	movlw	5
 28575  0064FC  26F3               	addwf	prodl,f,c
 28576  0064FE  0E00               	movlw	0
 28577  006500  22F4               	addwfc	prodh,f,c
 28578  006502  0E00               	movlw	low _Channels
 28579  006504  24F3               	addwf	prodl,w,c
 28580  006506  6ED9               	movwf	fsr2l,c
 28581  006508  0E04               	movlw	high _Channels
 28582  00650A  20F4               	addwfc	prodh,w,c
 28583  00650C  6EDA               	movwf	fsr2h,c
 28584  00650E  0104               	movlb	4	; () banked
 28585  006510  38DF               	swapf	223,w,c
 28586  006512  0B0F               	andlw	15
 28587  006514  0100               	movlb	0	; () banked
 28588  006516  6FB6               	movwf	??_SearchAvailableChannel& (0+255),b
 28589  006518  0102               	movlb	2	; () banked
 28590  00651A  51DF               	movf	(_loRa+223)& (0+255),w,b
 28591  00651C  0100               	movlb	0	; () banked
 28592  00651E  5DB6               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28593  006520  A0D8               	btfss	status,0,c
 28594  006522  D017               	goto	l1134
 28595                           
 28596                           ; BSR set to: 0
 28597                           ;lorawan_eu.c: 791: {
 28598                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 28599  006524  0100               	movlb	0	; () banked
 28600  006526  51B3               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 28601  006528  0100               	movlb	0	; () banked
 28602  00652A  A4D8               	btfss	status,2,c
 28603  00652C  D010               	goto	l14283
 28604                           
 28605                           ; BSR set to: 0
 28606                           ;lorawan_eu.c: 793: {
 28607                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 28608  00652E  0100               	movlb	0	; () banked
 28609  006530  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28610  006532  0D0E               	mullw	14
 28611  006534  0E0C               	movlw	12
 28612  006536  26F3               	addwf	prodl,f,c
 28613  006538  0E00               	movlw	0
 28614  00653A  22F4               	addwfc	prodh,f,c
 28615  00653C  0E00               	movlw	low _Channels
 28616  00653E  24F3               	addwf	prodl,w,c
 28617  006540  6ED9               	movwf	fsr2l,c
 28618  006542  0E04               	movlw	high _Channels
 28619  006544  20F4               	addwfc	prodh,w,c
 28620  006546  6EDA               	movwf	fsr2h,c
 28621  006548  04DE               	decf	postinc2,w,c
 28622  00654A  A4D8               	btfss	status,2,c
 28623  00654C  D002               	goto	l1134
 28624  00654E                     l14283:
 28625                           
 28626                           ; BSR set to: 0
 28627                           ;lorawan_eu.c: 799: else
 28628                           ;lorawan_eu.c: 800: {
 28629                           ;lorawan_eu.c: 801: randomNumber --;
 28630  00654E  0100               	movlb	0	; () banked
 28631  006550  07BD               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 28632  006552                     l1134:
 28633  006552  0100               	movlb	0	; () banked
 28634  006554  2BBE               	incf	SearchAvailableChannel@i& (0+255),f,b
 28635  006556                     l14285:
 28636                           
 28637                           ; BSR set to: 0
 28638  006556  0100               	movlb	0	; () banked
 28639  006558  51BC               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 28640  00655A  0100               	movlb	0	; () banked
 28641  00655C  5DBE               	subwf	SearchAvailableChannel@i& (0+255),w,b
 28642  00655E  B0D8               	btfsc	status,0,c
 28643  006560  D005               	goto	l14289
 28644                           
 28645                           ; BSR set to: 0
 28646  006562  0100               	movlb	0	; () banked
 28647  006564  51BD               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28648  006566  0100               	movlb	0	; () banked
 28649  006568  A4D8               	btfss	status,2,c
 28650  00656A  D789               	goto	l14269
 28651  00656C                     l14289:
 28652                           
 28653                           ; BSR set to: 0
 28654                           ;lorawan_eu.c: 802: }
 28655                           ;lorawan_eu.c: 803: }
 28656                           ;lorawan_eu.c: 804: }
 28657                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 28658  00656C  0100               	movlb	0	; () banked
 28659  00656E  51BA               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 28660  006570  0100               	movlb	0	; () banked
 28661  006572  19BD               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28662  006574  A4D8               	btfss	status,2,c
 28663  006576  D004               	goto	l14293
 28664                           
 28665                           ; BSR set to: 0
 28666                           ;lorawan_eu.c: 807: {
 28667                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 28668  006578  0E09               	movlw	9
 28669  00657A  0100               	movlb	0	; () banked
 28670  00657C  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28671                           
 28672                           ;lorawan_eu.c: 809: break;
 28673  00657E  D005               	goto	l14295
 28674  006580                     l14293:
 28675                           
 28676                           ; BSR set to: 0
 28677  006580  0100               	movlb	0	; () banked
 28678  006582  51BD               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28679  006584  0100               	movlb	0	; () banked
 28680  006586  A4D8               	btfss	status,2,c
 28681  006588  D776               	goto	l14267
 28682  00658A                     l14295:
 28683                           
 28684                           ; BSR set to: 0
 28685                           ;lorawan_eu.c: 810: }
 28686                           ;lorawan_eu.c: 811: }
 28687                           ;lorawan_eu.c: 813: if ( i != 0)
 28688  00658A  0100               	movlb	0	; () banked
 28689  00658C  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28690  00658E  0100               	movlb	0	; () banked
 28691  006590  B4D8               	btfsc	status,2,c
 28692  006592  D008               	goto	l14299
 28693                           
 28694                           ; BSR set to: 0
 28695                           ;lorawan_eu.c: 814: {
 28696                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 28697  006594  0100               	movlb	0	; () banked
 28698  006596  05BE               	decf	SearchAvailableChannel@i& (0+255),w,b
 28699  006598  C0B4  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 28700  00659C  C0B5  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 28701  0065A0  6EDF               	movwf	indf2,c
 28702                           
 28703                           ;lorawan_eu.c: 816: }
 28704  0065A2  D003               	goto	l1144
 28705  0065A4                     l14299:
 28706                           
 28707                           ; BSR set to: 0
 28708                           ;lorawan_eu.c: 817: else
 28709                           ;lorawan_eu.c: 818: {
 28710                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 28711  0065A4  0E09               	movlw	9
 28712  0065A6  0100               	movlb	0	; () banked
 28713  0065A8  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28714  0065AA                     l1144:
 28715                           
 28716                           ; BSR set to: 0
 28717                           ;lorawan_eu.c: 820: }
 28718                           ;lorawan_eu.c: 821: return result;
 28719  0065AA  0100               	movlb	0	; () banked
 28720  0065AC  51BB               	movf	SearchAvailableChannel@result& (0+255),w,b
 28721  0065AE  0012               	return	
 28722  0065B0                     __end_of_SearchAvailableChannel:
 28723                           	opt stack 0
 28724                           tosu	equ	0xFFF
 28725                           tosh	equ	0xFFE
 28726                           tosl	equ	0xFFD
 28727                           pclath	equ	0xFFA
 28728                           tblptru	equ	0xFF8
 28729                           tblptrh	equ	0xFF7
 28730                           tblptrl	equ	0xFF6
 28731                           tablat	equ	0xFF5
 28732                           prodh	equ	0xFF4
 28733                           prodl	equ	0xFF3
 28734                           intcon	equ	0xFF2
 28735                           intcon2	equ	0xFF1
 28736                           intcon3	equ	0xFF0
 28737                           indf0	equ	0xFEF
 28738                           postinc0	equ	0xFEE
 28739                           fsr0h	equ	0xFEA
 28740                           fsr0l	equ	0xFE9
 28741                           wreg	equ	0xFE8
 28742                           postinc1	equ	0xFE6
 28743                           postdec1	equ	0xFE5
 28744                           plusw1	equ	0xFE3
 28745                           fsr1h	equ	0xFE2
 28746                           fsr1l	equ	0xFE1
 28747                           indf2	equ	0xFDF
 28748                           postinc2	equ	0xFDE
 28749                           postdec2	equ	0xFDD
 28750                           plusw2	equ	0xFDB
 28751                           fsr2h	equ	0xFDA
 28752                           fsr2l	equ	0xFD9
 28753                           status	equ	0xFD8
 28754                           
 28755 ;; *************** function _ConfigureRadioTx *****************
 28756 ;; Defined at:
 28757 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28758 ;; Parameters:    Size  Location     Type
 28759 ;;  dataRate        1    wreg     unsigned char 
 28760 ;;  freq            4   22[BANK0 ] unsigned long 
 28761 ;; Auto vars:     Size  Location     Type
 28762 ;;  dataRate        1   26[BANK0 ] unsigned char 
 28763 ;;  txPower         1   27[BANK0 ] char 
 28764 ;; Return value:  Size  Location     Type
 28765 ;;                  1    wreg      void 
 28766 ;; Registers used:
 28767 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28768 ;; Tracked objects:
 28769 ;;		On entry : 0/0
 28770 ;;		On exit  : 0/0
 28771 ;;		Unchanged: 0/0
 28772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28773 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28774 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28776 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28777 ;;Total ram usage:        6 bytes
 28778 ;; Hardware stack levels used:    1
 28779 ;; Hardware stack levels required when called:   10
 28780 ;; This function calls:
 28781 ;;		_ConfigureRadio
 28782 ;;		_RADIO_SetCRC
 28783 ;;		_RADIO_SetIQInverted
 28784 ;;		_RADIO_SetOutputPower
 28785 ;; This function is called by:
 28786 ;;		_SelectChannelForTransmission
 28787 ;; This function uses a non-reentrant model
 28788 ;;
 28789                           
 28790                           	psect	text130
 28791  009412                     __ptext130:
 28792                           	opt stack 0
 28793  009412                     _ConfigureRadioTx:
 28794                           	opt stack 17
 28795                           
 28796                           ; BSR set to: 0
 28797                           ;incstack = 0
 28798                           ;ConfigureRadioTx@dataRate stored from wreg
 28799  009412  0100               	movlb	0	; () banked
 28800  009414  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 28801                           
 28802                           ;lorawan_eu.c: 1257: int8_t txPower;
 28803                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 28804  009416  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 28805  00941A  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 28806  00941E  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 28807  009422  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 28808  009426  0100               	movlb	0	; () banked
 28809  009428  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 28810  00942A  ECD0  F040         	call	_ConfigureRadio
 28811                           
 28812                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 28813  00942E  0102               	movlb	2	; () banked
 28814  009430  51A4               	movf	(_loRa+164)& (0+255),w,b
 28815                           
 28816                           ; BSR set to: 2
 28817                           ;lorawan_eu.c: 1265: else
 28818                           ;lorawan_eu.c: 1266: {
 28819                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 28820                           
 28821                           ; BSR set to: 2
 28822                           
 28823                           ;lorawan_eu.c: 1264: }
 28824                           
 28825                           ; BSR set to: 2
 28826                           ;lorawan_eu.c: 1262: {
 28827                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 28828  009432  0102               	movlb	2	; () banked
 28829  009434  51E1               	movf	(_loRa+225)& (0+255),w,b
 28830  009436  0D01               	mullw	1
 28831  009438  0EA2               	movlw	low _txPower868
 28832  00943A  24F3               	addwf	prodl,w,c
 28833  00943C  6EF6               	movwf	tblptrl,c
 28834  00943E  0EFF               	movlw	high _txPower868
 28835  009440  20F4               	addwfc	prodh,w,c
 28836  009442  6EF7               	movwf	tblptrh,c
 28837  009444                     	if	1	;There are 3 active tblptr bytes
 28838  009444  6AF8               	clrf	tblptru,c
 28839  009446  0E00               	movlw	low (__mediumconst shr (0+16))
 28840  009448  22F8               	addwfc	tblptru,f,c
 28841  00944A                     	endif
 28842  00944A  0008               	tblrd		*
 28843  00944C  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 28844                           
 28845                           ; BSR set to: 2
 28846                           ;lorawan_eu.c: 1268: }
 28847                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 28848                           
 28849                           ; BSR set to: 2
 28850  009450  0100               	movlb	0	; () banked
 28851  009452  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 28852  009454  ECA6  F051         	call	_RADIO_SetOutputPower
 28853                           
 28854                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 28855  009458  0E01               	movlw	1
 28856  00945A  ECB0  F051         	call	_RADIO_SetCRC
 28857                           
 28858                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 28859  00945E  0E00               	movlw	0
 28860  009460  ECAB  F051         	call	_RADIO_SetIQInverted
 28861  009464  0012               	return		;funcret
 28862  009466                     __end_of_ConfigureRadioTx:
 28863                           	opt stack 0
 28864                           tosu	equ	0xFFF
 28865                           tosh	equ	0xFFE
 28866                           tosl	equ	0xFFD
 28867                           pclath	equ	0xFFA
 28868                           tblptru	equ	0xFF8
 28869                           tblptrh	equ	0xFF7
 28870                           tblptrl	equ	0xFF6
 28871                           tablat	equ	0xFF5
 28872                           prodh	equ	0xFF4
 28873                           prodl	equ	0xFF3
 28874                           intcon	equ	0xFF2
 28875                           intcon2	equ	0xFF1
 28876                           intcon3	equ	0xFF0
 28877                           indf0	equ	0xFEF
 28878                           postinc0	equ	0xFEE
 28879                           fsr0h	equ	0xFEA
 28880                           fsr0l	equ	0xFE9
 28881                           wreg	equ	0xFE8
 28882                           postinc1	equ	0xFE6
 28883                           postdec1	equ	0xFE5
 28884                           plusw1	equ	0xFE3
 28885                           fsr1h	equ	0xFE2
 28886                           fsr1l	equ	0xFE1
 28887                           indf2	equ	0xFDF
 28888                           postinc2	equ	0xFDE
 28889                           postdec2	equ	0xFDD
 28890                           plusw2	equ	0xFDB
 28891                           fsr2h	equ	0xFDA
 28892                           fsr2l	equ	0xFD9
 28893                           status	equ	0xFD8
 28894                           
 28895 ;; *************** function _RADIO_SetOutputPower *****************
 28896 ;; Defined at:
 28897 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28898 ;; Parameters:    Size  Location     Type
 28899 ;;  power           1    wreg     char 
 28900 ;; Auto vars:     Size  Location     Type
 28901 ;;  power           1    4[BANK0 ] char 
 28902 ;; Return value:  Size  Location     Type
 28903 ;;                  1    wreg      void 
 28904 ;; Registers used:
 28905 ;;		wreg
 28906 ;; Tracked objects:
 28907 ;;		On entry : 0/0
 28908 ;;		On exit  : 0/0
 28909 ;;		Unchanged: 0/0
 28910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28914 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28915 ;;Total ram usage:        1 bytes
 28916 ;; Hardware stack levels used:    1
 28917 ;; Hardware stack levels required when called:    7
 28918 ;; This function calls:
 28919 ;;		Nothing
 28920 ;; This function is called by:
 28921 ;;		_ConfigureRadioTx
 28922 ;; This function uses a non-reentrant model
 28923 ;;
 28924                           
 28925                           	psect	text131
 28926  00A34C                     __ptext131:
 28927                           	opt stack 0
 28928  00A34C                     _RADIO_SetOutputPower:
 28929                           	opt stack 19
 28930                           
 28931                           ;incstack = 0
 28932                           ;RADIO_SetOutputPower@power stored from wreg
 28933  00A34C  0100               	movlb	0	; () banked
 28934  00A34E  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 28935                           
 28936                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 28937  00A350  C064  F18F         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 28938  00A354  0012               	return		;funcret
 28939  00A356                     __end_of_RADIO_SetOutputPower:
 28940                           	opt stack 0
 28941                           tosu	equ	0xFFF
 28942                           tosh	equ	0xFFE
 28943                           tosl	equ	0xFFD
 28944                           pclath	equ	0xFFA
 28945                           tblptru	equ	0xFF8
 28946                           tblptrh	equ	0xFF7
 28947                           tblptrl	equ	0xFF6
 28948                           tablat	equ	0xFF5
 28949                           prodh	equ	0xFF4
 28950                           prodl	equ	0xFF3
 28951                           intcon	equ	0xFF2
 28952                           intcon2	equ	0xFF1
 28953                           intcon3	equ	0xFF0
 28954                           indf0	equ	0xFEF
 28955                           postinc0	equ	0xFEE
 28956                           fsr0h	equ	0xFEA
 28957                           fsr0l	equ	0xFE9
 28958                           wreg	equ	0xFE8
 28959                           postinc1	equ	0xFE6
 28960                           postdec1	equ	0xFE5
 28961                           plusw1	equ	0xFE3
 28962                           fsr1h	equ	0xFE2
 28963                           fsr1l	equ	0xFE1
 28964                           indf2	equ	0xFDF
 28965                           postinc2	equ	0xFDE
 28966                           postdec2	equ	0xFDD
 28967                           plusw2	equ	0xFDB
 28968                           fsr2h	equ	0xFDA
 28969                           fsr2l	equ	0xFD9
 28970                           status	equ	0xFD8
 28971                           
 28972 ;; *************** function _RADIO_SetIQInverted *****************
 28973 ;; Defined at:
 28974 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28975 ;; Parameters:    Size  Location     Type
 28976 ;;  iqInverted      1    wreg     unsigned char 
 28977 ;; Auto vars:     Size  Location     Type
 28978 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 28979 ;; Return value:  Size  Location     Type
 28980 ;;                  1    wreg      void 
 28981 ;; Registers used:
 28982 ;;		wreg
 28983 ;; Tracked objects:
 28984 ;;		On entry : 0/0
 28985 ;;		On exit  : 0/0
 28986 ;;		Unchanged: 0/0
 28987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28989 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28991 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28992 ;;Total ram usage:        1 bytes
 28993 ;; Hardware stack levels used:    1
 28994 ;; Hardware stack levels required when called:    7
 28995 ;; This function calls:
 28996 ;;		Nothing
 28997 ;; This function is called by:
 28998 ;;		_ConfigureRadioTx
 28999 ;;		_ConfigureRadioRx
 29000 ;; This function uses a non-reentrant model
 29001 ;;
 29002                           
 29003                           	psect	text132
 29004  00A356                     __ptext132:
 29005                           	opt stack 0
 29006  00A356                     _RADIO_SetIQInverted:
 29007                           	opt stack 19
 29008                           
 29009                           ;incstack = 0
 29010                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 29011  00A356  0100               	movlb	0	; () banked
 29012  00A358  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 29013                           
 29014                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 29015  00A35A  C064  F194         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 29016  00A35E  0012               	return		;funcret
 29017  00A360                     __end_of_RADIO_SetIQInverted:
 29018                           	opt stack 0
 29019                           tosu	equ	0xFFF
 29020                           tosh	equ	0xFFE
 29021                           tosl	equ	0xFFD
 29022                           pclath	equ	0xFFA
 29023                           tblptru	equ	0xFF8
 29024                           tblptrh	equ	0xFF7
 29025                           tblptrl	equ	0xFF6
 29026                           tablat	equ	0xFF5
 29027                           prodh	equ	0xFF4
 29028                           prodl	equ	0xFF3
 29029                           intcon	equ	0xFF2
 29030                           intcon2	equ	0xFF1
 29031                           intcon3	equ	0xFF0
 29032                           indf0	equ	0xFEF
 29033                           postinc0	equ	0xFEE
 29034                           fsr0h	equ	0xFEA
 29035                           fsr0l	equ	0xFE9
 29036                           wreg	equ	0xFE8
 29037                           postinc1	equ	0xFE6
 29038                           postdec1	equ	0xFE5
 29039                           plusw1	equ	0xFE3
 29040                           fsr1h	equ	0xFE2
 29041                           fsr1l	equ	0xFE1
 29042                           indf2	equ	0xFDF
 29043                           postinc2	equ	0xFDE
 29044                           postdec2	equ	0xFDD
 29045                           plusw2	equ	0xFDB
 29046                           fsr2h	equ	0xFDA
 29047                           fsr2l	equ	0xFD9
 29048                           status	equ	0xFD8
 29049                           
 29050 ;; *************** function _RADIO_SetCRC *****************
 29051 ;; Defined at:
 29052 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29053 ;; Parameters:    Size  Location     Type
 29054 ;;  crc             1    wreg     unsigned char 
 29055 ;; Auto vars:     Size  Location     Type
 29056 ;;  crc             1    4[BANK0 ] unsigned char 
 29057 ;; Return value:  Size  Location     Type
 29058 ;;                  1    wreg      void 
 29059 ;; Registers used:
 29060 ;;		wreg
 29061 ;; Tracked objects:
 29062 ;;		On entry : 0/0
 29063 ;;		On exit  : 0/0
 29064 ;;		Unchanged: 0/0
 29065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29067 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29069 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29070 ;;Total ram usage:        1 bytes
 29071 ;; Hardware stack levels used:    1
 29072 ;; Hardware stack levels required when called:    7
 29073 ;; This function calls:
 29074 ;;		Nothing
 29075 ;; This function is called by:
 29076 ;;		_ConfigureRadioTx
 29077 ;;		_ConfigureRadioRx
 29078 ;; This function uses a non-reentrant model
 29079 ;;
 29080                           
 29081                           	psect	text133
 29082  00A360                     __ptext133:
 29083                           	opt stack 0
 29084  00A360                     _RADIO_SetCRC:
 29085                           	opt stack 19
 29086                           
 29087                           ;incstack = 0
 29088                           ;RADIO_SetCRC@crc stored from wreg
 29089  00A360  0100               	movlb	0	; () banked
 29090  00A362  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 29091                           
 29092                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29093  00A364  C064  F190         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29094  00A368  0012               	return		;funcret
 29095  00A36A                     __end_of_RADIO_SetCRC:
 29096                           	opt stack 0
 29097                           tosu	equ	0xFFF
 29098                           tosh	equ	0xFFE
 29099                           tosl	equ	0xFFD
 29100                           pclath	equ	0xFFA
 29101                           tblptru	equ	0xFF8
 29102                           tblptrh	equ	0xFF7
 29103                           tblptrl	equ	0xFF6
 29104                           tablat	equ	0xFF5
 29105                           prodh	equ	0xFF4
 29106                           prodl	equ	0xFF3
 29107                           intcon	equ	0xFF2
 29108                           intcon2	equ	0xFF1
 29109                           intcon3	equ	0xFF0
 29110                           indf0	equ	0xFEF
 29111                           postinc0	equ	0xFEE
 29112                           fsr0h	equ	0xFEA
 29113                           fsr0l	equ	0xFE9
 29114                           wreg	equ	0xFE8
 29115                           postinc1	equ	0xFE6
 29116                           postdec1	equ	0xFE5
 29117                           plusw1	equ	0xFE3
 29118                           fsr1h	equ	0xFE2
 29119                           fsr1l	equ	0xFE1
 29120                           indf2	equ	0xFDF
 29121                           postinc2	equ	0xFDE
 29122                           postdec2	equ	0xFDD
 29123                           plusw2	equ	0xFDB
 29124                           fsr2h	equ	0xFDA
 29125                           fsr2l	equ	0xFD9
 29126                           status	equ	0xFD8
 29127                           
 29128 ;; *************** function _ConfigureRadio *****************
 29129 ;; Defined at:
 29130 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29131 ;; Parameters:    Size  Location     Type
 29132 ;;  dataRate        1    wreg     unsigned char 
 29133 ;;  freq            4   17[BANK0 ] unsigned long 
 29134 ;; Auto vars:     Size  Location     Type
 29135 ;;  dataRate        1   21[BANK0 ] unsigned char 
 29136 ;; Return value:  Size  Location     Type
 29137 ;;                  1    wreg      void 
 29138 ;; Registers used:
 29139 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29140 ;; Tracked objects:
 29141 ;;		On entry : 0/0
 29142 ;;		On exit  : 0/0
 29143 ;;		Unchanged: 0/0
 29144 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29145 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29146 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29148 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29149 ;;Total ram usage:        5 bytes
 29150 ;; Hardware stack levels used:    1
 29151 ;; Hardware stack levels required when called:    9
 29152 ;; This function calls:
 29153 ;;		_RADIO_SetBandwidth
 29154 ;;		_RADIO_SetChannelFrequency
 29155 ;;		_RADIO_SetFSKSyncWord
 29156 ;;		_RADIO_SetFrequencyHopPeriod
 29157 ;;		_RADIO_SetLoRaSyncWord
 29158 ;;		_RADIO_SetModulation
 29159 ;;		_RADIO_SetSpreadingFactor
 29160 ;; This function is called by:
 29161 ;;		_ConfigureRadioTx
 29162 ;;		_ConfigureRadioRx
 29163 ;; This function uses a non-reentrant model
 29164 ;;
 29165                           
 29166                           	psect	text134
 29167  0081A0                     __ptext134:
 29168                           	opt stack 0
 29169  0081A0                     _ConfigureRadio:
 29170                           	opt stack 17
 29171                           
 29172                           ;incstack = 0
 29173                           ;ConfigureRadio@dataRate stored from wreg
 29174  0081A0  0100               	movlb	0	; () banked
 29175  0081A2  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 29176                           
 29177                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 29178  0081A4  0100               	movlb	0	; () banked
 29179  0081A6  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29180  0081A8  0D01               	mullw	1
 29181  0081AA  0E6F               	movlw	low _modulation
 29182  0081AC  24F3               	addwf	prodl,w,c
 29183  0081AE  6EF6               	movwf	tblptrl,c
 29184  0081B0  0EFF               	movlw	high _modulation
 29185  0081B2  20F4               	addwfc	prodh,w,c
 29186  0081B4  6EF7               	movwf	tblptrh,c
 29187  0081B6                     	if	1	;There are 3 active tblptr bytes
 29188  0081B6  6AF8               	clrf	tblptru,c
 29189  0081B8  0E00               	movlw	low (__mediumconst shr (0+16))
 29190  0081BA  22F8               	addwfc	tblptru,f,c
 29191  0081BC                     	endif
 29192  0081BC  0008               	tblrd		*
 29193  0081BE  50F5               	movf	tablat,w,c
 29194  0081C0  ECBA  F051         	call	_RADIO_SetModulation
 29195                           
 29196                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 29197  0081C4  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29198  0081C8  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29199  0081CC  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29200  0081D0  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29201  0081D4  ECC3  F03F         	call	_RADIO_SetChannelFrequency	;wreg free
 29202                           
 29203                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 29204  0081D8  0E00               	movlw	0
 29205  0081DA  0100               	movlb	0	; () banked
 29206  0081DC  6F65               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29207  0081DE  0E00               	movlw	0
 29208  0081E0  6F64               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29209  0081E2  ECBF  F051         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29210                           
 29211                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 29212  0081E6  0E07               	movlw	7
 29213  0081E8  0100               	movlb	0	; () banked
 29214  0081EA  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29215  0081EC  D025               	goto	l13869
 29216                           
 29217                           ; BSR set to: 0
 29218                           ;lorawan_eu.c: 870: {
 29219                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 29220  0081EE  0100               	movlb	0	; () banked
 29221  0081F0  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29222  0081F2  0D01               	mullw	1
 29223  0081F4  0E95               	movlw	low _spreadingFactor
 29224  0081F6  24F3               	addwf	prodl,w,c
 29225  0081F8  6EF6               	movwf	tblptrl,c
 29226  0081FA  0EFF               	movlw	high _spreadingFactor
 29227  0081FC  20F4               	addwfc	prodh,w,c
 29228  0081FE  6EF7               	movwf	tblptrh,c
 29229  008200                     	if	1	;There are 3 active tblptr bytes
 29230  008200  6AF8               	clrf	tblptru,c
 29231  008202  0E00               	movlw	low (__mediumconst shr (0+16))
 29232  008204  22F8               	addwfc	tblptru,f,c
 29233  008206                     	endif
 29234  008206  0008               	tblrd		*
 29235  008208  50F5               	movf	tablat,w,c
 29236  00820A  ECB5  F051         	call	_RADIO_SetSpreadingFactor
 29237                           
 29238                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 29239  00820E  0100               	movlb	0	; () banked
 29240  008210  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29241  008212  0D01               	mullw	1
 29242  008214  0E87               	movlw	low _bandwidth
 29243  008216  24F3               	addwf	prodl,w,c
 29244  008218  6EF6               	movwf	tblptrl,c
 29245  00821A  0EFF               	movlw	high _bandwidth
 29246  00821C  20F4               	addwfc	prodh,w,c
 29247  00821E  6EF7               	movwf	tblptrh,c
 29248  008220                     	if	1	;There are 3 active tblptr bytes
 29249  008220  6AF8               	clrf	tblptru,c
 29250  008222  0E00               	movlw	low (__mediumconst shr (0+16))
 29251  008224  22F8               	addwfc	tblptru,f,c
 29252  008226                     	endif
 29253  008226  0008               	tblrd		*
 29254  008228  50F5               	movf	tablat,w,c
 29255  00822A  ECC4  F051         	call	_RADIO_SetBandwidth
 29256                           
 29257                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29258  00822E  0102               	movlb	2	; () banked
 29259  008230  51F4               	movf	(_loRa+244)& (0+255),w,b
 29260  008232  ECC9  F051         	call	_RADIO_SetLoRaSyncWord
 29261                           
 29262                           ;lorawan_eu.c: 875: }
 29263  008236  0012               	return	
 29264  008238                     l13869:
 29265                           
 29266                           ;lorawan_eu.c: 876: else
 29267                           ;lorawan_eu.c: 877: {
 29268                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 29269  008238  0EFC               	movlw	low _FskSyncWordBuff
 29270  00823A  0100               	movlb	0	; () banked
 29271  00823C  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29272  00823E  0EFF               	movlw	high _FskSyncWordBuff
 29273  008240  0100               	movlb	0	; () banked
 29274  008242  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29275  008244  0E03               	movlw	3
 29276  008246  EC48  F04D         	call	_RADIO_SetFSKSyncWord
 29277  00824A  0012               	return	
 29278  00824C                     __end_of_ConfigureRadio:
 29279                           	opt stack 0
 29280                           tosu	equ	0xFFF
 29281                           tosh	equ	0xFFE
 29282                           tosl	equ	0xFFD
 29283                           pclath	equ	0xFFA
 29284                           tblptru	equ	0xFF8
 29285                           tblptrh	equ	0xFF7
 29286                           tblptrl	equ	0xFF6
 29287                           tablat	equ	0xFF5
 29288                           prodh	equ	0xFF4
 29289                           prodl	equ	0xFF3
 29290                           intcon	equ	0xFF2
 29291                           intcon2	equ	0xFF1
 29292                           intcon3	equ	0xFF0
 29293                           indf0	equ	0xFEF
 29294                           postinc0	equ	0xFEE
 29295                           fsr0h	equ	0xFEA
 29296                           fsr0l	equ	0xFE9
 29297                           wreg	equ	0xFE8
 29298                           postinc1	equ	0xFE6
 29299                           postdec1	equ	0xFE5
 29300                           plusw1	equ	0xFE3
 29301                           fsr1h	equ	0xFE2
 29302                           fsr1l	equ	0xFE1
 29303                           indf2	equ	0xFDF
 29304                           postinc2	equ	0xFDE
 29305                           postdec2	equ	0xFDD
 29306                           plusw2	equ	0xFDB
 29307                           fsr2h	equ	0xFDA
 29308                           fsr2l	equ	0xFD9
 29309                           status	equ	0xFD8
 29310                           
 29311 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29312 ;; Defined at:
 29313 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29314 ;; Parameters:    Size  Location     Type
 29315 ;;  spreadingFac    1    wreg     enum E7761
 29316 ;; Auto vars:     Size  Location     Type
 29317 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 29318 ;; Return value:  Size  Location     Type
 29319 ;;                  1    wreg      void 
 29320 ;; Registers used:
 29321 ;;		wreg
 29322 ;; Tracked objects:
 29323 ;;		On entry : 0/0
 29324 ;;		On exit  : 0/0
 29325 ;;		Unchanged: 0/0
 29326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29328 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29330 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29331 ;;Total ram usage:        1 bytes
 29332 ;; Hardware stack levels used:    1
 29333 ;; Hardware stack levels required when called:    7
 29334 ;; This function calls:
 29335 ;;		Nothing
 29336 ;; This function is called by:
 29337 ;;		_ConfigureRadio
 29338 ;; This function uses a non-reentrant model
 29339 ;;
 29340                           
 29341                           	psect	text135
 29342  00A36A                     __ptext135:
 29343                           	opt stack 0
 29344  00A36A                     _RADIO_SetSpreadingFactor:
 29345                           	opt stack 18
 29346                           
 29347                           ;incstack = 0
 29348                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29349  00A36A  0100               	movlb	0	; () banked
 29350  00A36C  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29351                           
 29352                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29353  00A36E  C064  F18D         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29354  00A372  0012               	return		;funcret
 29355  00A374                     __end_of_RADIO_SetSpreadingFactor:
 29356                           	opt stack 0
 29357                           tosu	equ	0xFFF
 29358                           tosh	equ	0xFFE
 29359                           tosl	equ	0xFFD
 29360                           pclath	equ	0xFFA
 29361                           tblptru	equ	0xFF8
 29362                           tblptrh	equ	0xFF7
 29363                           tblptrl	equ	0xFF6
 29364                           tablat	equ	0xFF5
 29365                           prodh	equ	0xFF4
 29366                           prodl	equ	0xFF3
 29367                           intcon	equ	0xFF2
 29368                           intcon2	equ	0xFF1
 29369                           intcon3	equ	0xFF0
 29370                           indf0	equ	0xFEF
 29371                           postinc0	equ	0xFEE
 29372                           fsr0h	equ	0xFEA
 29373                           fsr0l	equ	0xFE9
 29374                           wreg	equ	0xFE8
 29375                           postinc1	equ	0xFE6
 29376                           postdec1	equ	0xFE5
 29377                           plusw1	equ	0xFE3
 29378                           fsr1h	equ	0xFE2
 29379                           fsr1l	equ	0xFE1
 29380                           indf2	equ	0xFDF
 29381                           postinc2	equ	0xFDE
 29382                           postdec2	equ	0xFDD
 29383                           plusw2	equ	0xFDB
 29384                           fsr2h	equ	0xFDA
 29385                           fsr2l	equ	0xFD9
 29386                           status	equ	0xFD8
 29387                           
 29388 ;; *************** function _RADIO_SetModulation *****************
 29389 ;; Defined at:
 29390 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29391 ;; Parameters:    Size  Location     Type
 29392 ;;  modulation      1    wreg     enum E7751
 29393 ;; Auto vars:     Size  Location     Type
 29394 ;;  modulation      1    4[BANK0 ] enum E7751
 29395 ;; Return value:  Size  Location     Type
 29396 ;;                  1    wreg      void 
 29397 ;; Registers used:
 29398 ;;		wreg
 29399 ;; Tracked objects:
 29400 ;;		On entry : 0/0
 29401 ;;		On exit  : 0/0
 29402 ;;		Unchanged: 0/0
 29403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29405 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29407 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29408 ;;Total ram usage:        1 bytes
 29409 ;; Hardware stack levels used:    1
 29410 ;; Hardware stack levels required when called:    7
 29411 ;; This function calls:
 29412 ;;		Nothing
 29413 ;; This function is called by:
 29414 ;;		_ConfigureRadio
 29415 ;; This function uses a non-reentrant model
 29416 ;;
 29417                           
 29418                           	psect	text136
 29419  00A374                     __ptext136:
 29420                           	opt stack 0
 29421  00A374                     _RADIO_SetModulation:
 29422                           	opt stack 18
 29423                           
 29424                           ;incstack = 0
 29425                           ;RADIO_SetModulation@modulation stored from wreg
 29426  00A374  0100               	movlb	0	; () banked
 29427  00A376  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29428                           
 29429                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29430  00A378  C064  F18C         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29431  00A37C  0012               	return		;funcret
 29432  00A37E                     __end_of_RADIO_SetModulation:
 29433                           	opt stack 0
 29434                           tosu	equ	0xFFF
 29435                           tosh	equ	0xFFE
 29436                           tosl	equ	0xFFD
 29437                           pclath	equ	0xFFA
 29438                           tblptru	equ	0xFF8
 29439                           tblptrh	equ	0xFF7
 29440                           tblptrl	equ	0xFF6
 29441                           tablat	equ	0xFF5
 29442                           prodh	equ	0xFF4
 29443                           prodl	equ	0xFF3
 29444                           intcon	equ	0xFF2
 29445                           intcon2	equ	0xFF1
 29446                           intcon3	equ	0xFF0
 29447                           indf0	equ	0xFEF
 29448                           postinc0	equ	0xFEE
 29449                           fsr0h	equ	0xFEA
 29450                           fsr0l	equ	0xFE9
 29451                           wreg	equ	0xFE8
 29452                           postinc1	equ	0xFE6
 29453                           postdec1	equ	0xFE5
 29454                           plusw1	equ	0xFE3
 29455                           fsr1h	equ	0xFE2
 29456                           fsr1l	equ	0xFE1
 29457                           indf2	equ	0xFDF
 29458                           postinc2	equ	0xFDE
 29459                           postdec2	equ	0xFDD
 29460                           plusw2	equ	0xFDB
 29461                           fsr2h	equ	0xFDA
 29462                           fsr2l	equ	0xFD9
 29463                           status	equ	0xFD8
 29464                           
 29465 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29466 ;; Defined at:
 29467 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29468 ;; Parameters:    Size  Location     Type
 29469 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 29470 ;; Auto vars:     Size  Location     Type
 29471 ;;		None
 29472 ;; Return value:  Size  Location     Type
 29473 ;;                  1    wreg      void 
 29474 ;; Registers used:
 29475 ;;		None
 29476 ;; Tracked objects:
 29477 ;;		On entry : 0/0
 29478 ;;		On exit  : 0/0
 29479 ;;		Unchanged: 0/0
 29480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29481 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29483 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29485 ;;Total ram usage:        2 bytes
 29486 ;; Hardware stack levels used:    1
 29487 ;; Hardware stack levels required when called:    7
 29488 ;; This function calls:
 29489 ;;		Nothing
 29490 ;; This function is called by:
 29491 ;;		_ConfigureRadio
 29492 ;; This function uses a non-reentrant model
 29493 ;;
 29494                           
 29495                           	psect	text137
 29496  00A37E                     __ptext137:
 29497                           	opt stack 0
 29498  00A37E                     _RADIO_SetFrequencyHopPeriod:
 29499                           	opt stack 18
 29500                           
 29501                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29502                           
 29503                           ;incstack = 0
 29504  00A37E  C064  F192         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29505  00A382  C065  F193         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29506  00A386  0012               	return		;funcret
 29507  00A388                     __end_of_RADIO_SetFrequencyHopPeriod:
 29508                           	opt stack 0
 29509                           tosu	equ	0xFFF
 29510                           tosh	equ	0xFFE
 29511                           tosl	equ	0xFFD
 29512                           pclath	equ	0xFFA
 29513                           tblptru	equ	0xFF8
 29514                           tblptrh	equ	0xFF7
 29515                           tblptrl	equ	0xFF6
 29516                           tablat	equ	0xFF5
 29517                           prodh	equ	0xFF4
 29518                           prodl	equ	0xFF3
 29519                           intcon	equ	0xFF2
 29520                           intcon2	equ	0xFF1
 29521                           intcon3	equ	0xFF0
 29522                           indf0	equ	0xFEF
 29523                           postinc0	equ	0xFEE
 29524                           fsr0h	equ	0xFEA
 29525                           fsr0l	equ	0xFE9
 29526                           wreg	equ	0xFE8
 29527                           postinc1	equ	0xFE6
 29528                           postdec1	equ	0xFE5
 29529                           plusw1	equ	0xFE3
 29530                           fsr1h	equ	0xFE2
 29531                           fsr1l	equ	0xFE1
 29532                           indf2	equ	0xFDF
 29533                           postinc2	equ	0xFDE
 29534                           postdec2	equ	0xFDD
 29535                           plusw2	equ	0xFDB
 29536                           fsr2h	equ	0xFDA
 29537                           fsr2l	equ	0xFD9
 29538                           status	equ	0xFD8
 29539                           
 29540 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29541 ;; Defined at:
 29542 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29543 ;; Parameters:    Size  Location     Type
 29544 ;;  syncWordLen     1    wreg     unsigned char 
 29545 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 29546 ;;		 -> FskSyncWordBuff(3), 
 29547 ;; Auto vars:     Size  Location     Type
 29548 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 29549 ;; Return value:  Size  Location     Type
 29550 ;;                  1    wreg      void 
 29551 ;; Registers used:
 29552 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29553 ;; Tracked objects:
 29554 ;;		On entry : 0/0
 29555 ;;		On exit  : 0/0
 29556 ;;		Unchanged: 0/0
 29557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29558 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29559 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29561 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29562 ;;Total ram usage:        3 bytes
 29563 ;; Hardware stack levels used:    1
 29564 ;; Hardware stack levels required when called:    8
 29565 ;; This function calls:
 29566 ;;		_memcpy
 29567 ;; This function is called by:
 29568 ;;		_ConfigureRadio
 29569 ;; This function uses a non-reentrant model
 29570 ;;
 29571                           
 29572                           	psect	text138
 29573  009A90                     __ptext138:
 29574                           	opt stack 0
 29575  009A90                     _RADIO_SetFSKSyncWord:
 29576                           	opt stack 17
 29577                           
 29578                           ;incstack = 0
 29579                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29580  009A90  0100               	movlb	0	; () banked
 29581  009A92  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29582                           
 29583                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29584  009A94  0E08               	movlw	8
 29585  009A96  0100               	movlb	0	; () banked
 29586  009A98  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29587  009A9A  D003               	goto	l13561
 29588                           
 29589                           ; BSR set to: 0
 29590                           ;radio_driver_SX1276.c: 1627: {
 29591                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29592  009A9C  0E08               	movlw	8
 29593  009A9E  0100               	movlb	0	; () banked
 29594  009AA0  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29595  009AA2                     l13561:
 29596                           
 29597                           ; BSR set to: 0
 29598                           ;radio_driver_SX1276.c: 1629: }
 29599                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 29600  009AA2  0E83               	movlw	low (_RadioConfiguration+15)
 29601  009AA4  0100               	movlb	0	; () banked
 29602  009AA6  6F64               	movwf	memcpy@d1& (0+255),b
 29603  009AA8  0E01               	movlw	high (_RadioConfiguration+15)
 29604  009AAA  0100               	movlb	0	; () banked
 29605  009AAC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29606  009AAE  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29607  009AB2  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29608  009AB6  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29609  009ABA  0100               	movlb	0	; () banked
 29610  009ABC  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29611  009ABE  ECCA  F048         	call	_memcpy	;wreg free
 29612                           
 29613                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29614  009AC2  C070  F18B         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29615  009AC6  0012               	return		;funcret
 29616  009AC8                     __end_of_RADIO_SetFSKSyncWord:
 29617                           	opt stack 0
 29618                           tosu	equ	0xFFF
 29619                           tosh	equ	0xFFE
 29620                           tosl	equ	0xFFD
 29621                           pclath	equ	0xFFA
 29622                           tblptru	equ	0xFF8
 29623                           tblptrh	equ	0xFF7
 29624                           tblptrl	equ	0xFF6
 29625                           tablat	equ	0xFF5
 29626                           prodh	equ	0xFF4
 29627                           prodl	equ	0xFF3
 29628                           intcon	equ	0xFF2
 29629                           intcon2	equ	0xFF1
 29630                           intcon3	equ	0xFF0
 29631                           indf0	equ	0xFEF
 29632                           postinc0	equ	0xFEE
 29633                           fsr0h	equ	0xFEA
 29634                           fsr0l	equ	0xFE9
 29635                           wreg	equ	0xFE8
 29636                           postinc1	equ	0xFE6
 29637                           postdec1	equ	0xFE5
 29638                           plusw1	equ	0xFE3
 29639                           fsr1h	equ	0xFE2
 29640                           fsr1l	equ	0xFE1
 29641                           indf2	equ	0xFDF
 29642                           postinc2	equ	0xFDE
 29643                           postdec2	equ	0xFDD
 29644                           plusw2	equ	0xFDB
 29645                           fsr2h	equ	0xFDA
 29646                           fsr2l	equ	0xFD9
 29647                           status	equ	0xFD8
 29648                           
 29649 ;; *************** function _RADIO_SetChannelFrequency *****************
 29650 ;; Defined at:
 29651 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29652 ;; Parameters:    Size  Location     Type
 29653 ;;  frequency       4    4[BANK0 ] unsigned long 
 29654 ;; Auto vars:     Size  Location     Type
 29655 ;;		None
 29656 ;; Return value:  Size  Location     Type
 29657 ;;                  2    4[BANK0 ] enum E7805
 29658 ;; Registers used:
 29659 ;;		wreg, status,2, status,0
 29660 ;; Tracked objects:
 29661 ;;		On entry : 0/0
 29662 ;;		On exit  : 0/0
 29663 ;;		Unchanged: 0/0
 29664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29668 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29669 ;;Total ram usage:        4 bytes
 29670 ;; Hardware stack levels used:    1
 29671 ;; Hardware stack levels required when called:    7
 29672 ;; This function calls:
 29673 ;;		Nothing
 29674 ;; This function is called by:
 29675 ;;		_ConfigureRadio
 29676 ;; This function uses a non-reentrant model
 29677 ;;
 29678                           
 29679                           	psect	text139
 29680  007F86                     __ptext139:
 29681                           	opt stack 0
 29682  007F86                     _RADIO_SetChannelFrequency:
 29683                           	opt stack 18
 29684                           
 29685                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 29686                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 29687                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29688                           
 29689                           ;incstack = 0
 29690  007F86  0E40               	movlw	64
 29691  007F88  0100               	movlb	0	; () banked
 29692  007F8A  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29693  007F8C  0E74               	movlw	116
 29694  007F8E  0100               	movlb	0	; () banked
 29695  007F90  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29696  007F92  0E2A               	movlw	42
 29697  007F94  0100               	movlb	0	; () banked
 29698  007F96  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29699  007F98  0E08               	movlw	8
 29700  007F9A  0100               	movlb	0	; () banked
 29701  007F9C  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29702  007F9E  A0D8               	btfss	status,0,c
 29703  007FA0  D00E               	goto	l13541
 29704                           
 29705                           ; BSR set to: 0
 29706  007FA2  0EC1               	movlw	193
 29707  007FA4  0100               	movlb	0	; () banked
 29708  007FA6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29709  007FA8  0E49               	movlw	73
 29710  007FAA  0100               	movlb	0	; () banked
 29711  007FAC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29712  007FAE  0E6E               	movlw	110
 29713  007FB0  0100               	movlb	0	; () banked
 29714  007FB2  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29715  007FB4  0E0A               	movlw	10
 29716  007FB6  0100               	movlb	0	; () banked
 29717  007FB8  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29718  007FBA  A0D8               	btfss	status,0,c
 29719  007FBC  D037               	goto	l688
 29720  007FBE                     l13541:
 29721                           
 29722                           ; BSR set to: 0
 29723  007FBE  0E80               	movlw	128
 29724  007FC0  0100               	movlb	0	; () banked
 29725  007FC2  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29726  007FC4  0E1A               	movlw	26
 29727  007FC6  0100               	movlb	0	; () banked
 29728  007FC8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29729  007FCA  0E70               	movlw	112
 29730  007FCC  0100               	movlb	0	; () banked
 29731  007FCE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29732  007FD0  0E18               	movlw	24
 29733  007FD2  0100               	movlb	0	; () banked
 29734  007FD4  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29735  007FD6  A0D8               	btfss	status,0,c
 29736  007FD8  D00E               	goto	l13545
 29737                           
 29738                           ; BSR set to: 0
 29739  007FDA  0E41               	movlw	65
 29740  007FDC  0100               	movlb	0	; () banked
 29741  007FDE  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29742  007FE0  0EDD               	movlw	221
 29743  007FE2  0100               	movlb	0	; () banked
 29744  007FE4  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29745  007FE6  0E4A               	movlw	74
 29746  007FE8  0100               	movlb	0	; () banked
 29747  007FEA  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29748  007FEC  0E1F               	movlw	31
 29749  007FEE  0100               	movlb	0	; () banked
 29750  007FF0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29751  007FF2  A0D8               	btfss	status,0,c
 29752  007FF4  D01B               	goto	l688
 29753  007FF6                     l13545:
 29754                           
 29755                           ; BSR set to: 0
 29756  007FF6  0E80               	movlw	128
 29757  007FF8  0100               	movlb	0	; () banked
 29758  007FFA  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29759  007FFC  0E13               	movlw	19
 29760  007FFE  0100               	movlb	0	; () banked
 29761  008000  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29762  008002  0E61               	movlw	97
 29763  008004  0100               	movlb	0	; () banked
 29764  008006  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29765  008008  0E33               	movlw	51
 29766  00800A  0100               	movlb	0	; () banked
 29767  00800C  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29768  00800E  A0D8               	btfss	status,0,c
 29769  008010  0012               	return	
 29770                           
 29771                           ; BSR set to: 0
 29772  008012  0100               	movlb	0	; () banked
 29773  008014  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29774  008016  0EF7               	movlw	247
 29775  008018  0100               	movlb	0	; () banked
 29776  00801A  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29777  00801C  0ECB               	movlw	203
 29778  00801E  0100               	movlb	0	; () banked
 29779  008020  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29780  008022  0E3C               	movlw	60
 29781  008024  0100               	movlb	0	; () banked
 29782  008026  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29783  008028  B0D8               	btfsc	status,0,c
 29784  00802A  0012               	return	
 29785  00802C                     l688:
 29786                           
 29787                           ; BSR set to: 0
 29788                           ;radio_driver_SX1276.c: 1449: {
 29789                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 29790  00802C  C064  F174         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29791  008030  C065  F175         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29792  008034  C066  F176         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29793  008038  C067  F177         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29794                           
 29795                           ; BSR set to: 0
 29796                           ;radio_driver_SX1276.c: 1453: else
 29797                           ;radio_driver_SX1276.c: 1454: {
 29798                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 29799                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29800                           
 29801                           ; BSR set to: 0
 29802                           ;radio_driver_SX1276.c: 1452: }
 29803                           
 29804                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 29805                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29806  00803C  0012               	return	
 29807  00803E                     __end_of_RADIO_SetChannelFrequency:
 29808                           	opt stack 0
 29809                           tosu	equ	0xFFF
 29810                           tosh	equ	0xFFE
 29811                           tosl	equ	0xFFD
 29812                           pclath	equ	0xFFA
 29813                           tblptru	equ	0xFF8
 29814                           tblptrh	equ	0xFF7
 29815                           tblptrl	equ	0xFF6
 29816                           tablat	equ	0xFF5
 29817                           prodh	equ	0xFF4
 29818                           prodl	equ	0xFF3
 29819                           intcon	equ	0xFF2
 29820                           intcon2	equ	0xFF1
 29821                           intcon3	equ	0xFF0
 29822                           indf0	equ	0xFEF
 29823                           postinc0	equ	0xFEE
 29824                           fsr0h	equ	0xFEA
 29825                           fsr0l	equ	0xFE9
 29826                           wreg	equ	0xFE8
 29827                           postinc1	equ	0xFE6
 29828                           postdec1	equ	0xFE5
 29829                           plusw1	equ	0xFE3
 29830                           fsr1h	equ	0xFE2
 29831                           fsr1l	equ	0xFE1
 29832                           indf2	equ	0xFDF
 29833                           postinc2	equ	0xFDE
 29834                           postdec2	equ	0xFDD
 29835                           plusw2	equ	0xFDB
 29836                           fsr2h	equ	0xFDA
 29837                           fsr2l	equ	0xFD9
 29838                           status	equ	0xFD8
 29839                           
 29840 ;; *************** function _RADIO_SetBandwidth *****************
 29841 ;; Defined at:
 29842 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29843 ;; Parameters:    Size  Location     Type
 29844 ;;  bandwidth       1    wreg     enum E7769
 29845 ;; Auto vars:     Size  Location     Type
 29846 ;;  bandwidth       1    4[BANK0 ] enum E7769
 29847 ;; Return value:  Size  Location     Type
 29848 ;;                  1    wreg      void 
 29849 ;; Registers used:
 29850 ;;		wreg
 29851 ;; Tracked objects:
 29852 ;;		On entry : 0/0
 29853 ;;		On exit  : 0/0
 29854 ;;		Unchanged: 0/0
 29855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29857 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29859 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29860 ;;Total ram usage:        1 bytes
 29861 ;; Hardware stack levels used:    1
 29862 ;; Hardware stack levels required when called:    7
 29863 ;; This function calls:
 29864 ;;		Nothing
 29865 ;; This function is called by:
 29866 ;;		_ConfigureRadio
 29867 ;; This function uses a non-reentrant model
 29868 ;;
 29869                           
 29870                           	psect	text140
 29871  00A388                     __ptext140:
 29872                           	opt stack 0
 29873  00A388                     _RADIO_SetBandwidth:
 29874                           	opt stack 18
 29875                           
 29876                           ; BSR set to: 0
 29877                           ;incstack = 0
 29878                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29879  00A388  0100               	movlb	0	; () banked
 29880  00A38A  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29881                           
 29882                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 29883  00A38C  C064  F18E         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 29884  00A390  0012               	return		;funcret
 29885  00A392                     __end_of_RADIO_SetBandwidth:
 29886                           	opt stack 0
 29887                           tosu	equ	0xFFF
 29888                           tosh	equ	0xFFE
 29889                           tosl	equ	0xFFD
 29890                           pclath	equ	0xFFA
 29891                           tblptru	equ	0xFF8
 29892                           tblptrh	equ	0xFF7
 29893                           tblptrl	equ	0xFF6
 29894                           tablat	equ	0xFF5
 29895                           prodh	equ	0xFF4
 29896                           prodl	equ	0xFF3
 29897                           intcon	equ	0xFF2
 29898                           intcon2	equ	0xFF1
 29899                           intcon3	equ	0xFF0
 29900                           indf0	equ	0xFEF
 29901                           postinc0	equ	0xFEE
 29902                           fsr0h	equ	0xFEA
 29903                           fsr0l	equ	0xFE9
 29904                           wreg	equ	0xFE8
 29905                           postinc1	equ	0xFE6
 29906                           postdec1	equ	0xFE5
 29907                           plusw1	equ	0xFE3
 29908                           fsr1h	equ	0xFE2
 29909                           fsr1l	equ	0xFE1
 29910                           indf2	equ	0xFDF
 29911                           postinc2	equ	0xFDE
 29912                           postdec2	equ	0xFDD
 29913                           plusw2	equ	0xFDB
 29914                           fsr2h	equ	0xFDA
 29915                           fsr2l	equ	0xFD9
 29916                           status	equ	0xFD8
 29917                           
 29918 ;; *************** function _RADIO_Transmit *****************
 29919 ;; Defined at:
 29920 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29921 ;; Parameters:    Size  Location     Type
 29922 ;;  buffer          2   85[BANK0 ] PTR unsigned char 
 29923 ;;		 -> macBuffer(271), 
 29924 ;;  bufferLen       1   87[BANK0 ] unsigned char 
 29925 ;; Auto vars:     Size  Location     Type
 29926 ;;  i               1  101[BANK0 ] unsigned char 
 29927 ;;  regValue        1  100[BANK0 ] unsigned char 
 29928 ;; Return value:  Size  Location     Type
 29929 ;;                  2   85[BANK0 ] enum E7805
 29930 ;; Registers used:
 29931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29932 ;; Tracked objects:
 29933 ;;		On entry : 0/0
 29934 ;;		On exit  : 0/0
 29935 ;;		Unchanged: 0/0
 29936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29937 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29938 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29939 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29940 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29941 ;;Total ram usage:       17 bytes
 29942 ;; Hardware stack levels used:    1
 29943 ;; Hardware stack levels required when called:   12
 29944 ;; This function calls:
 29945 ;;		_HALSPICSAssert
 29946 ;;		_HALSPICSDeassert
 29947 ;;		_HALSPISend
 29948 ;;		_RADIO_RegisterRead
 29949 ;;		_RADIO_RegisterWrite
 29950 ;;		_RADIO_WriteConfiguration
 29951 ;;		_RADIO_WriteMode
 29952 ;;		_SwTimerSetTimeout
 29953 ;;		_SwTimerStart
 29954 ;;		_SwTimerStop
 29955 ;;		___lldiv
 29956 ;; This function is called by:
 29957 ;;		_LORAWAN_RxTimeout
 29958 ;;		_LORAWAN_Join
 29959 ;;		_LORAWAN_Send
 29960 ;;		_AckRetransmissionCallback
 29961 ;;		_UnconfirmedTransmissionCallback
 29962 ;; This function uses a non-reentrant model
 29963 ;;
 29964                           
 29965                           	psect	text141
 29966  004BA6                     __ptext141:
 29967                           	opt stack 0
 29968  004BA6                     _RADIO_Transmit:
 29969                           	opt stack 16
 29970                           
 29971                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 29972                           ;radio_driver_SX1276.c: 789: uint8_t i;
 29973                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 29974                           
 29975                           ;incstack = 0
 29976  004BA6  0101               	movlb	1	; () banked
 29977  004BA8  A597               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 29978  004BAA  D006               	goto	l14635
 29979                           
 29980                           ; BSR set to: 1
 29981                           ;radio_driver_SX1276.c: 792: {
 29982                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 29983  004BAC  0E80               	movlw	128
 29984  004BAE  0100               	movlb	0	; () banked
 29985  004BB0  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 29986  004BB2  0E03               	movlw	3
 29987  004BB4  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 29988                           
 29989                           ; BSR set to: 0
 29990  004BB6  0012               	return	
 29991  004BB8                     l14635:
 29992                           
 29993                           ;radio_driver_SX1276.c: 794: }
 29994                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 29995  004BB8  C197  F0B8         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 29996  004BBC  0E03               	movlw	3
 29997  004BBE  0100               	movlb	0	; () banked
 29998  004BC0  17B8               	andwf	??_RADIO_Transmit& (0+255),f,b
 29999  004BC2  B4D8               	btfsc	status,2,c
 30000  004BC4  D006               	goto	l14641
 30001                           
 30002                           ; BSR set to: 0
 30003                           ;radio_driver_SX1276.c: 797: {
 30004                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 30005  004BC6  0E80               	movlw	128
 30006  004BC8  0100               	movlb	0	; () banked
 30007  004BCA  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30008  004BCC  0E04               	movlw	4
 30009  004BCE  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30010                           
 30011                           ; BSR set to: 0
 30012  004BD0  0012               	return	
 30013  004BD2                     l14641:
 30014                           
 30015                           ; BSR set to: 0
 30016                           ;radio_driver_SX1276.c: 799: }
 30017                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 30018  004BD2  0101               	movlb	1	; () banked
 30019  004BD4  518C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30020  004BD6  A4D8               	btfss	status,2,c
 30021  004BD8  D00A               	goto	l14649
 30022                           
 30023                           ; BSR set to: 1
 30024  004BDA  0E40               	movlw	64
 30025  004BDC  0100               	movlb	0	; () banked
 30026  004BDE  65B7               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 30027  004BE0  D006               	goto	l14649
 30028                           
 30029                           ; BSR set to: 0
 30030                           ;radio_driver_SX1276.c: 802: {
 30031                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 30032  004BE2  0E80               	movlw	128
 30033  004BE4  0100               	movlb	0	; () banked
 30034  004BE6  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30035  004BE8  0E02               	movlw	2
 30036  004BEA  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30037                           
 30038                           ; BSR set to: 0
 30039  004BEC  0012               	return	
 30040  004BEE                     l14649:
 30041                           
 30042                           ;radio_driver_SX1276.c: 804: }
 30043                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 30044  004BEE  0101               	movlb	1	; () banked
 30045  004BF0  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30046  004BF2  EC39  F04F         	call	_SwTimerStop
 30047                           
 30048                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 30049  004BF6  0E00               	movlw	0
 30050  004BF8  0100               	movlb	0	; () banked
 30051  004BFA  6FAB               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 30052  004BFC  0E04               	movlw	4
 30053  004BFE  6FAA               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 30054  004C00  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 30055                           
 30056                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 30057  004C04  0101               	movlb	1	; () banked
 30058  004C06  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30059  004C08  A4D8               	btfss	status,2,c
 30060  004C0A  D029               	goto	l14667
 30061                           
 30062                           ; BSR set to: 1
 30063                           ;radio_driver_SX1276.c: 813: {
 30064                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 30065  004C0C  C0B7  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30066  004C10  0E22               	movlw	34
 30067  004C12  ECFE  F04F         	call	_RADIO_RegisterWrite
 30068                           
 30069                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 30070  004C16  0E0A               	movlw	10
 30071  004C18  EC25  F04F         	call	_RADIO_RegisterRead
 30072  004C1C  0100               	movlb	0	; () banked
 30073  004C1E  6FC4               	movwf	RADIO_Transmit@regValue& (0+255),b
 30074                           
 30075                           ; BSR set to: 0
 30076                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 30077  004C20  0EF0               	movlw	240
 30078  004C22  0100               	movlb	0	; () banked
 30079  004C24  17C4               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 30080                           
 30081                           ; BSR set to: 0
 30082                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 30083  004C26  0100               	movlb	0	; () banked
 30084  004C28  87C4               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 30085                           
 30086                           ; BSR set to: 0
 30087                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 30088  004C2A  C0C4  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 30089  004C2E  0E0A               	movlw	10
 30090  004C30  ECFE  F04F         	call	_RADIO_RegisterWrite
 30091                           
 30092                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 30093  004C34  0E40               	movlw	64
 30094  004C36  0100               	movlb	0	; () banked
 30095  004C38  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30096  004C3A  0E40               	movlw	64
 30097  004C3C  ECFE  F04F         	call	_RADIO_RegisterWrite
 30098                           
 30099                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 30100  004C40  0E00               	movlw	0
 30101  004C42  0100               	movlb	0	; () banked
 30102  004C44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30103  004C46  0E41               	movlw	65
 30104  004C48  ECFE  F04F         	call	_RADIO_RegisterWrite
 30105                           
 30106                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 30107  004C4C  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30108  004C50  0E01               	movlw	1
 30109  004C52  0100               	movlb	0	; () banked
 30110  004C54  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30111  004C56  0E01               	movlw	1
 30112  004C58  EC70  F035         	call	_RADIO_WriteMode
 30113                           
 30114                           ;radio_driver_SX1276.c: 828: }
 30115  004C5C  D00C               	goto	l14669
 30116  004C5E                     l14667:
 30117                           
 30118                           ;radio_driver_SX1276.c: 829: else
 30119                           ;radio_driver_SX1276.c: 830: {
 30120                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 30121  004C5E  0E00               	movlw	0
 30122  004C60  0100               	movlb	0	; () banked
 30123  004C62  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30124  004C64  0E40               	movlw	64
 30125  004C66  ECFE  F04F         	call	_RADIO_RegisterWrite
 30126                           
 30127                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 30128  004C6A  0E00               	movlw	0
 30129  004C6C  0100               	movlb	0	; () banked
 30130  004C6E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30131  004C70  0E41               	movlw	65
 30132  004C72  ECFE  F04F         	call	_RADIO_RegisterWrite
 30133  004C76                     l14669:
 30134                           
 30135                           ;radio_driver_SX1276.c: 834: }
 30136                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 30137  004C76  0101               	movlb	1	; () banked
 30138  004C78  518C               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30139  004C7A  A4D8               	btfss	status,2,c
 30140  004C7C  D005               	goto	l14673
 30141                           
 30142                           ; BSR set to: 1
 30143                           ;radio_driver_SX1276.c: 837: {
 30144                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 30145  004C7E  C0B7  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30146  004C82  0E00               	movlw	0
 30147  004C84  ECFE  F04F         	call	_RADIO_RegisterWrite
 30148  004C88                     l14673:
 30149                           
 30150                           ;radio_driver_SX1276.c: 840: }
 30151                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 30152  004C88  ECF1  F051         	call	_HALSPICSAssert	;wreg free
 30153                           
 30154                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 30155  004C8C  0E80               	movlw	128
 30156  004C8E  EC60  F051         	call	_HALSPISend
 30157                           
 30158                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 30159  004C92  0E00               	movlw	0
 30160  004C94  0100               	movlb	0	; () banked
 30161  004C96  6FC5               	movwf	RADIO_Transmit@i& (0+255),b
 30162  004C98  D010               	goto	l14683
 30163  004C9A                     l14679:
 30164                           
 30165                           ; BSR set to: 0
 30166                           ;radio_driver_SX1276.c: 846: {
 30167                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 30168  004C9A  0100               	movlb	0	; () banked
 30169  004C9C  51C5               	movf	RADIO_Transmit@i& (0+255),w,b
 30170  004C9E  0D01               	mullw	1
 30171  004CA0  50F3               	movf	prodl,w,c
 30172  004CA2  0100               	movlb	0	; () banked
 30173  004CA4  25B5               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 30174  004CA6  6ED9               	movwf	fsr2l,c
 30175  004CA8  50F4               	movf	prodh,w,c
 30176  004CAA  0100               	movlb	0	; () banked
 30177  004CAC  21B6               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 30178  004CAE  6EDA               	movwf	fsr2h,c
 30179  004CB0  50DF               	movf	indf2,w,c
 30180  004CB2  EC60  F051         	call	_HALSPISend
 30181  004CB6  0100               	movlb	0	; () banked
 30182  004CB8  2BC5               	incf	RADIO_Transmit@i& (0+255),f,b
 30183  004CBA                     l14683:
 30184                           
 30185                           ; BSR set to: 0
 30186  004CBA  0100               	movlb	0	; () banked
 30187  004CBC  51B7               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 30188  004CBE  0100               	movlb	0	; () banked
 30189  004CC0  5DC5               	subwf	RADIO_Transmit@i& (0+255),w,b
 30190  004CC2  A0D8               	btfss	status,0,c
 30191  004CC4  D7EA               	goto	l14679
 30192                           
 30193                           ; BSR set to: 0
 30194                           ;radio_driver_SX1276.c: 848: }
 30195                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 30196                           
 30197                           ; BSR set to: 0
 30198  004CC6  ECEF  F051         	call	_HALSPICSDeassert	;wreg free
 30199                           
 30200                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 30201  004CCA  0101               	movlb	1	; () banked
 30202  004CCC  8197               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 30203                           
 30204                           ; BSR set to: 1
 30205                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 30206  004CCE  0EE7               	movlw	231
 30207  004CD0  0101               	movlb	1	; () banked
 30208  004CD2  1797               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 30209                           
 30210                           ; BSR set to: 1
 30211                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 30212  004CD4  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30213  004CD8  0E00               	movlw	0
 30214  004CDA  0100               	movlb	0	; () banked
 30215  004CDC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30216  004CDE  0E03               	movlw	3
 30217  004CE0  EC70  F035         	call	_RADIO_WriteMode
 30218                           
 30219                           ; BSR set to: 0
 30220                           
 30221                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 30222  004CE4  0E00               	movlw	0
 30223  004CE6  0100               	movlb	0	; () banked
 30224  004CE8  6FBC               	movwf	_RADIO_Transmit$1190& (0+255),b
 30225  004CEA  0E00               	movlw	0
 30226  004CEC  6FBD               	movwf	(_RADIO_Transmit$1190+1)& (0+255),b
 30227  004CEE  0E0A               	movlw	10
 30228  004CF0  6FBE               	movwf	(_RADIO_Transmit$1190+2)& (0+255),b
 30229  004CF2  0E00               	movlw	0
 30230  004CF4  6FBF               	movwf	(_RADIO_Transmit$1190+3)& (0+255),b
 30231                           
 30232                           ; BSR set to: 0
 30233                           
 30234                           ; BSR set to: 0
 30235  004CF6  C0BC  F071         	movff	_RADIO_Transmit$1190,SwTimerSetTimeout@timeout
 30236  004CFA  C0BD  F072         	movff	_RADIO_Transmit$1190+1,SwTimerSetTimeout@timeout+1
 30237  004CFE  C0BE  F073         	movff	_RADIO_Transmit$1190+2,SwTimerSetTimeout@timeout+2
 30238  004D02  C0BF  F074         	movff	_RADIO_Transmit$1190+3,SwTimerSetTimeout@timeout+3
 30239  004D06  0101               	movlb	1	; () banked
 30240  004D08  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30241  004D0A  EC33  F04A         	call	_SwTimerSetTimeout
 30242                           
 30243                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30244  004D0E  0101               	movlb	1	; () banked
 30245  004D10  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30246  004D12  ECCB  F041         	call	_SwTimerStart
 30247                           
 30248                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30249  004D16  0101               	movlb	1	; () banked
 30250  004D18  519E               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30251  004D1A  0101               	movlb	1	; () banked
 30252  004D1C  119F               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30253  004D1E  0101               	movlb	1	; () banked
 30254  004D20  11A0               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30255  004D22  0101               	movlb	1	; () banked
 30256  004D24  11A1               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30257  004D26  B4D8               	btfsc	status,2,c
 30258  004D28  D069               	goto	l14713
 30259                           
 30260                           ; BSR set to: 1
 30261                           ;radio_driver_SX1276.c: 866: {
 30262                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 30263  004D2A  0101               	movlb	1	; () banked
 30264  004D2C  51A1               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30265  004D2E  E10A               	bnz	u16750
 30266  004D30  0101               	movlb	1	; () banked
 30267  004D32  299E               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30268  004D34  0EFF               	movlw	255
 30269  004D36  0101               	movlb	1	; () banked
 30270  004D38  599F               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30271  004D3A  0E0F               	movlw	15
 30272  004D3C  0101               	movlb	1	; () banked
 30273  004D3E  59A0               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30274  004D40  A0D8               	btfss	status,0,c
 30275  004D42  D020               	goto	l14707
 30276  004D44                     u16750:
 30277                           
 30278                           ; BSR set to: 1
 30279  004D44  C19E  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 30280  004D48  C19F  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30281  004D4C  C1A0  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30282  004D50  C1A1  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30283  004D54  0E7D               	movlw	125
 30284  004D56  0100               	movlb	0	; () banked
 30285  004D58  6F68               	movwf	___lldiv@divisor& (0+255),b
 30286  004D5A  0E00               	movlw	0
 30287  004D5C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 30288  004D5E  0E00               	movlw	0
 30289  004D60  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 30290  004D62  0E00               	movlw	0
 30291  004D64  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 30292  004D66  EC08  F03F         	call	___lldiv	;wreg free
 30293  004D6A  0E0C               	movlw	12
 30294  004D6C                     u16765:
 30295  004D6C  90D8               	bcf	status,0,c
 30296  004D6E  0100               	movlb	0	; () banked
 30297  004D70  3764               	rlcf	?___lldiv& (0+255),f,b
 30298  004D72  0100               	movlb	0	; () banked
 30299  004D74  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 30300  004D76  0100               	movlb	0	; () banked
 30301  004D78  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 30302  004D7A  0100               	movlb	0	; () banked
 30303  004D7C  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 30304  004D7E  2EE8               	decfsz	wreg,f,c
 30305  004D80  D7F5               	goto	u16765
 30306  004D82  D024               	goto	L18
 30307  004D84                     l14707:
 30308  004D84  C19E  F0B8         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30309  004D88  C19F  F0B9         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30310  004D8C  C1A0  F0BA         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30311  004D90  C1A1  F0BB         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30312  004D94  0E0C               	movlw	12
 30313  004D96                     u16775:
 30314  004D96  90D8               	bcf	status,0,c
 30315  004D98  0100               	movlb	0	; () banked
 30316  004D9A  37B8               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30317  004D9C  37B9               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30318  004D9E  37BA               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30319  004DA0  37BB               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30320  004DA2  2EE8               	decfsz	wreg,f,c
 30321  004DA4  D7F8               	goto	u16775
 30322  004DA6  C0B8  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 30323  004DAA  C0B9  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30324  004DAE  C0BA  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30325  004DB2  C0BB  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30326  004DB6  0E7D               	movlw	125
 30327  004DB8  0100               	movlb	0	; () banked
 30328  004DBA  6F68               	movwf	___lldiv@divisor& (0+255),b
 30329  004DBC  0E00               	movlw	0
 30330  004DBE  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 30331  004DC0  0E00               	movlw	0
 30332  004DC2  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 30333  004DC4  0E00               	movlw	0
 30334  004DC6  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 30335  004DC8  EC08  F03F         	call	___lldiv	;wreg free
 30336  004DCC                     L18:
 30337  004DCC  C064  F0C0         	movff	?___lldiv,_RADIO_Transmit$1192
 30338  004DD0  C065  F0C1         	movff	?___lldiv+1,_RADIO_Transmit$1192+1
 30339  004DD4  C066  F0C2         	movff	?___lldiv+2,_RADIO_Transmit$1192+2
 30340  004DD8  C067  F0C3         	movff	?___lldiv+3,_RADIO_Transmit$1192+3
 30341  004DDC  C0C0  F071         	movff	_RADIO_Transmit$1192,SwTimerSetTimeout@timeout
 30342  004DE0  C0C1  F072         	movff	_RADIO_Transmit$1192+1,SwTimerSetTimeout@timeout+1
 30343  004DE4  C0C2  F073         	movff	_RADIO_Transmit$1192+2,SwTimerSetTimeout@timeout+2
 30344  004DE8  C0C3  F074         	movff	_RADIO_Transmit$1192+3,SwTimerSetTimeout@timeout+3
 30345  004DEC  0101               	movlb	1	; () banked
 30346  004DEE  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30347  004DF0  EC33  F04A         	call	_SwTimerSetTimeout
 30348                           
 30349                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30350  004DF4  0101               	movlb	1	; () banked
 30351  004DF6  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30352  004DF8  ECCB  F041         	call	_SwTimerStart
 30353  004DFC                     l14713:
 30354                           
 30355                           ;radio_driver_SX1276.c: 869: }
 30356                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 30357  004DFC  0E00               	movlw	0
 30358  004DFE  0100               	movlb	0	; () banked
 30359  004E00  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30360  004E02  0E00               	movlw	0
 30361  004E04  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30362  004E06  0012               	return	
 30363  004E08                     __end_of_RADIO_Transmit:
 30364                           	opt stack 0
 30365                           tosu	equ	0xFFF
 30366                           tosh	equ	0xFFE
 30367                           tosl	equ	0xFFD
 30368                           pclath	equ	0xFFA
 30369                           tblptru	equ	0xFF8
 30370                           tblptrh	equ	0xFF7
 30371                           tblptrl	equ	0xFF6
 30372                           tablat	equ	0xFF5
 30373                           prodh	equ	0xFF4
 30374                           prodl	equ	0xFF3
 30375                           intcon	equ	0xFF2
 30376                           intcon2	equ	0xFF1
 30377                           intcon3	equ	0xFF0
 30378                           indf0	equ	0xFEF
 30379                           postinc0	equ	0xFEE
 30380                           fsr0h	equ	0xFEA
 30381                           fsr0l	equ	0xFE9
 30382                           wreg	equ	0xFE8
 30383                           postinc1	equ	0xFE6
 30384                           postdec1	equ	0xFE5
 30385                           plusw1	equ	0xFE3
 30386                           fsr1h	equ	0xFE2
 30387                           fsr1l	equ	0xFE1
 30388                           indf2	equ	0xFDF
 30389                           postinc2	equ	0xFDE
 30390                           postdec2	equ	0xFDD
 30391                           plusw2	equ	0xFDB
 30392                           fsr2h	equ	0xFDA
 30393                           fsr2l	equ	0xFD9
 30394                           status	equ	0xFD8
 30395                           
 30396 ;; *************** function _RADIO_WriteConfiguration *****************
 30397 ;; Defined at:
 30398 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30399 ;; Parameters:    Size  Location     Type
 30400 ;;  symbolTimeou    2   74[BANK0 ] unsigned int 
 30401 ;; Auto vars:     Size  Location     Type
 30402 ;;  tempValue       4   80[BANK0 ] unsigned long 
 30403 ;;  regValue        1   84[BANK0 ] unsigned char 
 30404 ;;  i               1   79[BANK0 ] unsigned char 
 30405 ;; Return value:  Size  Location     Type
 30406 ;;                  1    wreg      void 
 30407 ;; Registers used:
 30408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30409 ;; Tracked objects:
 30410 ;;		On entry : 0/0
 30411 ;;		On exit  : 0/0
 30412 ;;		Unchanged: 0/0
 30413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30414 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30415 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30416 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30417 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30418 ;;Total ram usage:       11 bytes
 30419 ;; Hardware stack levels used:    1
 30420 ;; Hardware stack levels required when called:   11
 30421 ;; This function calls:
 30422 ;;		_RADIO_RegisterRead
 30423 ;;		_RADIO_RegisterWrite
 30424 ;;		_RADIO_WriteFSKBitRate
 30425 ;;		_RADIO_WriteFSKFrequencyDeviation
 30426 ;;		_RADIO_WriteFrequency
 30427 ;;		_RADIO_WriteMode
 30428 ;;		_RADIO_WritePower
 30429 ;;		___lmul
 30430 ;; This function is called by:
 30431 ;;		_RADIO_Transmit
 30432 ;;		_RADIO_ReceiveStart
 30433 ;;		_RADIO_TransmitCW
 30434 ;; This function uses a non-reentrant model
 30435 ;;
 30436                           
 30437                           	psect	text142
 30438  0017F6                     __ptext142:
 30439                           	opt stack 0
 30440  0017F6                     _RADIO_WriteConfiguration:
 30441                           	opt stack 16
 30442                           
 30443                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 30444                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 30445                           ;radio_driver_SX1276.c: 537: uint8_t i;
 30446                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 30447                           
 30448                           ; BSR set to: 0
 30449                           ;incstack = 0
 30450  0017F6  C18C  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30451  0017FA  0E00               	movlw	0
 30452  0017FC  0100               	movlb	0	; () banked
 30453  0017FE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30454  001800  0E00               	movlw	0
 30455  001802  EC70  F035         	call	_RADIO_WriteMode
 30456                           
 30457                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30458  001806  C174  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30459  00180A  C175  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30460  00180E  C176  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30461  001812  C177  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30462  001816  ECD1  F039         	call	_RADIO_WriteFrequency	;wreg free
 30463                           
 30464                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30465  00181A  0101               	movlb	1	; () banked
 30466  00181C  518F               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30467  00181E  EC3C  F037         	call	_RADIO_WritePower
 30468                           
 30469                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30470  001822  0101               	movlb	1	; () banked
 30471  001824  058C               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30472  001826  A4D8               	btfss	status,2,c
 30473  001828  D220               	goto	l13803
 30474                           
 30475                           ; BSR set to: 1
 30476                           ;radio_driver_SX1276.c: 545: {
 30477                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 30478  00182A  C182  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30479  00182E  0E39               	movlw	57
 30480  001830  ECFE  F04F         	call	_RADIO_RegisterWrite
 30481                           
 30482                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 30483                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 30484                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 30485                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 30486  001834  C196  F0AC         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30487  001838  0E01               	movlw	1
 30488  00183A  0100               	movlb	0	; () banked
 30489  00183C  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30490  00183E  0101               	movlb	1	; () banked
 30491  001840  90D8               	bcf	status,0,c
 30492  001842  3595               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30493  001844  0100               	movlb	0	; () banked
 30494  001846  6FAD               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30495  001848  0101               	movlb	1	; () banked
 30496  00184A  398E               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30497  00184C  0BF0               	andlw	240
 30498  00184E  0100               	movlb	0	; () banked
 30499  001850  11AD               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30500  001852  0100               	movlb	0	; () banked
 30501  001854  11AC               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30502  001856  0100               	movlb	0	; () banked
 30503  001858  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30504  00185A  0E1D               	movlw	29
 30505  00185C  ECFE  F04F         	call	_RADIO_RegisterWrite
 30506                           
 30507                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 30508                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 30509                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 30510                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30511  001860  C0AA  F0AC         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30512  001864  C0AB  F0AD         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30513  001868  C0AD  F0AC         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30514  00186C  0100               	movlb	0	; () banked
 30515  00186E  6BAD               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30516  001870  0E03               	movlw	3
 30517  001872  0100               	movlb	0	; () banked
 30518  001874  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30519  001876  C190  F0AE         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30520  00187A  0E01               	movlw	1
 30521  00187C  0100               	movlb	0	; () banked
 30522  00187E  17AE               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30523  001880  0100               	movlb	0	; () banked
 30524  001882  90D8               	bcf	status,0,c
 30525  001884  37AE               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30526  001886  0100               	movlb	0	; () banked
 30527  001888  90D8               	bcf	status,0,c
 30528  00188A  37AE               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30529  00188C  0101               	movlb	1	; () banked
 30530  00188E  398D               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30531  001890  0BF0               	andlw	240
 30532  001892  0100               	movlb	0	; () banked
 30533  001894  11AE               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30534  001896  0100               	movlb	0	; () banked
 30535  001898  11AC               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30536  00189A  0100               	movlb	0	; () banked
 30537  00189C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30538  00189E  0E1E               	movlw	30
 30539  0018A0  ECFE  F04F         	call	_RADIO_RegisterWrite
 30540                           
 30541                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30542  0018A4  0101               	movlb	1	; () banked
 30543  0018A6  5192               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30544  0018A8  0101               	movlb	1	; () banked
 30545  0018AA  1193               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30546  0018AC  B4D8               	btfsc	status,2,c
 30547  0018AE  D071               	goto	l13693
 30548                           
 30549                           ; BSR set to: 1
 30550                           ;radio_driver_SX1276.c: 561: {
 30551                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 30552  0018B0  C192  F0B0         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30553  0018B4  C193  F0B1         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30554  0018B8  0100               	movlb	0	; () banked
 30555  0018BA  6BB2               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30556  0018BC  6BB3               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30557                           
 30558                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30559  0018BE  D04E               	goto	l13689
 30560  0018C0                     l13679:
 30561                           
 30562                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30563  0018C0  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30564  0018C4  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30565  0018C8  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30566  0018CC  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30567  0018D0  0E7D               	movlw	125
 30568  0018D2  0100               	movlb	0	; () banked
 30569  0018D4  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30570  0018D6  0E00               	movlw	0
 30571  0018D8  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30572  0018DA  0E00               	movlw	0
 30573  0018DC  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30574  0018DE  0E00               	movlw	0
 30575  0018E0  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30576  0018E2  EC82  F046         	call	___lmul	;wreg free
 30577  0018E6  D027               	goto	L20
 30578  0018E8                     l13681:
 30579                           
 30580                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30581  0018E8  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30582  0018EC  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30583  0018F0  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30584  0018F4  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30585  0018F8  0EFA               	movlw	250
 30586  0018FA  0100               	movlb	0	; () banked
 30587  0018FC  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30588  0018FE  0E00               	movlw	0
 30589  001900  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30590  001902  0E00               	movlw	0
 30591  001904  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30592  001906  0E00               	movlw	0
 30593  001908  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30594  00190A  EC82  F046         	call	___lmul	;wreg free
 30595  00190E  D013               	goto	L20
 30596  001910                     l13683:
 30597                           
 30598                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30599  001910  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30600  001914  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30601  001918  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30602  00191C  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30603  001920  0EF4               	movlw	244
 30604  001922  0100               	movlb	0	; () banked
 30605  001924  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30606  001926  0E01               	movlw	1
 30607  001928  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30608  00192A  0E00               	movlw	0
 30609  00192C  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30610  00192E  0E00               	movlw	0
 30611  001930  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30612  001932  EC82  F046         	call	___lmul	;wreg free
 30613  001936                     L20:
 30614  001936  C09E  F0B0         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30615  00193A  C09F  F0B1         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30616  00193E  C0A0  F0B2         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30617  001942  C0A1  F0B3         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30618                           
 30619                           ;radio_driver_SX1276.c: 574: break;
 30620  001946  D016               	goto	l13691
 30621  001948                     l13685:
 30622                           
 30623                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30624  001948  0E00               	movlw	0
 30625  00194A  0100               	movlb	0	; () banked
 30626  00194C  6FB0               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30627  00194E  0E00               	movlw	0
 30628  001950  6FB1               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30629  001952  0E00               	movlw	0
 30630  001954  6FB2               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30631  001956  0E00               	movlw	0
 30632  001958  6FB3               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30633                           
 30634                           ; BSR set to: 0
 30635                           ;radio_driver_SX1276.c: 579: }
 30636                           
 30637                           ;radio_driver_SX1276.c: 578: break;
 30638  00195A  D00C               	goto	l13691
 30639  00195C                     l13689:
 30640                           
 30641                           ; BSR set to: 0
 30642  00195C  0101               	movlb	1	; () banked
 30643  00195E  518E               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30644                           
 30645                           ; Switch size 1, requested type "space"
 30646                           ; Number of cases is 3, Range of values is 7 to 9
 30647                           ; switch strategies available:
 30648                           ; Name         Instructions Cycles
 30649                           ; simple_byte           10     6 (average)
 30650                           ;	Chosen strategy is simple_byte
 30651  001960  0A07               	xorlw	7	; case 7
 30652  001962  B4D8               	btfsc	status,2,c
 30653  001964  D7AD               	goto	l13679
 30654  001966  0A0F               	xorlw	15	; case 8
 30655  001968  B4D8               	btfsc	status,2,c
 30656  00196A  D7BE               	goto	l13681
 30657  00196C  0A01               	xorlw	1	; case 9
 30658  00196E  B4D8               	btfsc	status,2,c
 30659  001970  D7CF               	goto	l13683
 30660  001972  D7EA               	goto	l13685
 30661  001974                     l13691:
 30662                           
 30663                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30664  001974  0101               	movlb	1	; () banked
 30665  001976  298D               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30666  001978  0100               	movlb	0	; () banked
 30667  00197A  6FAC               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30668  00197C  D006               	goto	u15150
 30669  00197E                     u15155:
 30670  00197E  90D8               	bcf	status,0,c
 30671  001980  0100               	movlb	0	; () banked
 30672  001982  33B3               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30673  001984  33B2               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30674  001986  33B1               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30675  001988  33B0               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30676  00198A                     u15150:
 30677  00198A  0100               	movlb	0	; () banked
 30678  00198C  2FAC               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30679  00198E  D7F7               	goto	u15155
 30680                           
 30681                           ;radio_driver_SX1276.c: 582: }
 30682  001990  D009               	goto	l13695
 30683  001992                     l13693:
 30684                           
 30685                           ;radio_driver_SX1276.c: 583: else
 30686                           ;radio_driver_SX1276.c: 584: {
 30687                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 30688  001992  0E00               	movlw	0
 30689  001994  0100               	movlb	0	; () banked
 30690  001996  6FB0               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30691  001998  0E00               	movlw	0
 30692  00199A  6FB1               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30693  00199C  0E00               	movlw	0
 30694  00199E  6FB2               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30695  0019A0  0E00               	movlw	0
 30696  0019A2  6FB3               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30697  0019A4                     l13695:
 30698                           
 30699                           ;radio_driver_SX1276.c: 586: }
 30700                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 30701  0019A4  C0B0  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30702  0019A8  0E24               	movlw	36
 30703  0019AA  ECFE  F04F         	call	_RADIO_RegisterWrite
 30704                           
 30705                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30706  0019AE  C0AA  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30707  0019B2  0E1F               	movlw	31
 30708  0019B4  ECFE  F04F         	call	_RADIO_RegisterWrite
 30709                           
 30710                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30711  0019B8  0E26               	movlw	38
 30712  0019BA  EC25  F04F         	call	_RADIO_RegisterRead
 30713  0019BE  0100               	movlb	0	; () banked
 30714  0019C0  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30715                           
 30716                           ; BSR set to: 0
 30717                           ;radio_driver_SX1276.c: 596: if (
 30718                           ;radio_driver_SX1276.c: 597: (
 30719                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 30720                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 30721                           ;radio_driver_SX1276.c: 600: ) ||
 30722                           ;radio_driver_SX1276.c: 601: (
 30723                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 30724                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 30725                           ;radio_driver_SX1276.c: 604: )
 30726                           ;radio_driver_SX1276.c: 605: )
 30727  0019C2  0E0C               	movlw	12
 30728  0019C4  0101               	movlb	1	; () banked
 30729  0019C6  198D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30730  0019C8  A4D8               	btfss	status,2,c
 30731  0019CA  D00A               	goto	l13707
 30732                           
 30733                           ; BSR set to: 1
 30734  0019CC  0E07               	movlw	7
 30735  0019CE  0101               	movlb	1	; () banked
 30736  0019D0  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30737  0019D2  B4D8               	btfsc	status,2,c
 30738  0019D4  D00F               	goto	l13711
 30739                           
 30740                           ; BSR set to: 1
 30741  0019D6  0E08               	movlw	8
 30742  0019D8  0101               	movlb	1	; () banked
 30743  0019DA  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30744  0019DC  B4D8               	btfsc	status,2,c
 30745  0019DE  D00A               	goto	l13711
 30746  0019E0                     l13707:
 30747                           
 30748                           ; BSR set to: 1
 30749  0019E0  0E0B               	movlw	11
 30750  0019E2  0101               	movlb	1	; () banked
 30751  0019E4  198D               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30752  0019E6  A4D8               	btfss	status,2,c
 30753  0019E8  D008               	goto	l13713
 30754                           
 30755                           ; BSR set to: 1
 30756  0019EA  0E07               	movlw	7
 30757  0019EC  0101               	movlb	1	; () banked
 30758  0019EE  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30759  0019F0  A4D8               	btfss	status,2,c
 30760  0019F2  D003               	goto	l13713
 30761  0019F4                     l13711:
 30762                           
 30763                           ; BSR set to: 1
 30764                           ;radio_driver_SX1276.c: 606: {
 30765                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30766  0019F4  0100               	movlb	0	; () banked
 30767  0019F6  87B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30768                           
 30769                           ;radio_driver_SX1276.c: 608: }
 30770  0019F8  D002               	goto	l458
 30771  0019FA                     l13713:
 30772                           
 30773                           ;radio_driver_SX1276.c: 609: else
 30774                           ;radio_driver_SX1276.c: 610: {
 30775                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 30776  0019FA  0100               	movlb	0	; () banked
 30777  0019FC  97B4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30778  0019FE                     l458:
 30779                           
 30780                           ; BSR set to: 0
 30781                           ;radio_driver_SX1276.c: 612: }
 30782                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30783  0019FE  0100               	movlb	0	; () banked
 30784  001A00  85B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30785                           
 30786                           ; BSR set to: 0
 30787                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30788  001A02  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30789  001A06  0E26               	movlw	38
 30790  001A08  ECFE  F04F         	call	_RADIO_RegisterWrite
 30791                           
 30792                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30793  001A0C  0E31               	movlw	49
 30794  001A0E  EC25  F04F         	call	_RADIO_RegisterRead
 30795  001A12  0100               	movlb	0	; () banked
 30796  001A14  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30797                           
 30798                           ; BSR set to: 0
 30799                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30800  001A16  0EF8               	movlw	248
 30801  001A18  0100               	movlb	0	; () banked
 30802  001A1A  17B4               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30803                           
 30804                           ; BSR set to: 0
 30805                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30806  001A1C  0E03               	movlw	3
 30807  001A1E  0100               	movlb	0	; () banked
 30808  001A20  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30809                           
 30810                           ; BSR set to: 0
 30811                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30812  001A22  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30813  001A26  0E31               	movlw	49
 30814  001A28  ECFE  F04F         	call	_RADIO_RegisterWrite
 30815                           
 30816                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30817  001A2C  0E0A               	movlw	10
 30818  001A2E  0100               	movlb	0	; () banked
 30819  001A30  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30820  001A32  0E37               	movlw	55
 30821  001A34  ECFE  F04F         	call	_RADIO_RegisterWrite
 30822                           
 30823                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30824  001A38  0E12               	movlw	18
 30825  001A3A  0101               	movlb	1	; () banked
 30826  001A3C  19A5               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30827  001A3E  A4D8               	btfss	status,2,c
 30828  001A40  D033               	goto	l13751
 30829                           
 30830                           ; BSR set to: 1
 30831                           ;radio_driver_SX1276.c: 626: {
 30832                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 30833                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 30834  001A42  0E07               	movlw	7
 30835  001A44  0101               	movlb	1	; () banked
 30836  001A46  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30837  001A48  B4D8               	btfsc	status,2,c
 30838  001A4A  D005               	goto	l13733
 30839                           
 30840                           ; BSR set to: 1
 30841  001A4C  0E08               	movlw	8
 30842  001A4E  0101               	movlb	1	; () banked
 30843  001A50  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30844  001A52  A4D8               	btfss	status,2,c
 30845  001A54  D018               	goto	l13743
 30846  001A56                     l13733:
 30847                           
 30848                           ; BSR set to: 1
 30849                           ;radio_driver_SX1276.c: 631: {
 30850                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 30851  001A56  0E31               	movlw	49
 30852  001A58  EC25  F04F         	call	_RADIO_RegisterRead
 30853  001A5C  0100               	movlb	0	; () banked
 30854  001A5E  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30855                           
 30856                           ; BSR set to: 0
 30857                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30858  001A60  0100               	movlb	0	; () banked
 30859  001A62  9FB4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30860                           
 30861                           ; BSR set to: 0
 30862                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30863  001A64  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30864  001A68  0E31               	movlw	49
 30865  001A6A  ECFE  F04F         	call	_RADIO_RegisterWrite
 30866                           
 30867                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30868  001A6E  0E40               	movlw	64
 30869  001A70  0100               	movlb	0	; () banked
 30870  001A72  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30871  001A74  0E2F               	movlw	47
 30872  001A76  ECFE  F04F         	call	_RADIO_RegisterWrite
 30873                           
 30874                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30875  001A7A  0E00               	movlw	0
 30876  001A7C  0100               	movlb	0	; () banked
 30877  001A7E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30878  001A80  0E30               	movlw	48
 30879  001A82  ECFE  F04F         	call	_RADIO_RegisterWrite
 30880  001A86                     l13743:
 30881                           
 30882                           ;radio_driver_SX1276.c: 637: }
 30883                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 30884  001A86  0E09               	movlw	9
 30885  001A88  0101               	movlb	1	; () banked
 30886  001A8A  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30887  001A8C  A4D8               	btfss	status,2,c
 30888  001A8E  D00C               	goto	l13751
 30889                           
 30890                           ; BSR set to: 1
 30891                           ;radio_driver_SX1276.c: 640: {
 30892                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 30893  001A90  0E31               	movlw	49
 30894  001A92  EC25  F04F         	call	_RADIO_RegisterRead
 30895  001A96  0100               	movlb	0	; () banked
 30896  001A98  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30897                           
 30898                           ; BSR set to: 0
 30899                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 30900  001A9A  0100               	movlb	0	; () banked
 30901  001A9C  8FB4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 30905  001A9E  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30906  001AA2  0E31               	movlw	49
 30907  001AA4  ECFE  F04F         	call	_RADIO_RegisterWrite
 30908  001AA8                     l13751:
 30909                           
 30910                           ;radio_driver_SX1276.c: 644: }
 30911                           ;radio_driver_SX1276.c: 645: }
 30912                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 30913  001AA8  0E33               	movlw	51
 30914  001AAA  EC25  F04F         	call	_RADIO_RegisterRead
 30915  001AAE  0100               	movlb	0	; () banked
 30916  001AB0  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30917                           
 30918                           ; BSR set to: 0
 30919                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 30920  001AB2  0100               	movlb	0	; () banked
 30921  001AB4  9DB4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 30922                           
 30923                           ; BSR set to: 0
 30924                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 30925  001AB6  0100               	movlb	0	; () banked
 30926  001AB8  81B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 30927                           
 30928                           ; BSR set to: 0
 30929                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 30930  001ABA  C194  F0AC         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30931  001ABE  0E01               	movlw	1
 30932  001AC0  0100               	movlb	0	; () banked
 30933  001AC2  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30934  001AC4  0E06               	movlw	6
 30935  001AC6  0100               	movlb	0	; () banked
 30936  001AC8  6FAD               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30937  001ACA                     u15255:
 30938  001ACA  0100               	movlb	0	; () banked
 30939  001ACC  90D8               	bcf	status,0,c
 30940  001ACE  37AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30941  001AD0  0100               	movlb	0	; () banked
 30942  001AD2  2FAD               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 30943  001AD4  D7FA               	goto	u15255
 30944  001AD6  0100               	movlb	0	; () banked
 30945  001AD8  51AC               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 30946  001ADA  0100               	movlb	0	; () banked
 30947  001ADC  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30948                           
 30949                           ; BSR set to: 0
 30950                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 30951  001ADE  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30952  001AE2  0E33               	movlw	51
 30953  001AE4  ECFE  F04F         	call	_RADIO_RegisterWrite
 30954                           
 30955                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 30956  001AE8  C194  F0AC         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 30957  001AEC  0E01               	movlw	1
 30958  001AEE  0100               	movlb	0	; () banked
 30959  001AF0  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30960  001AF2  0100               	movlb	0	; () banked
 30961  001AF4  90D8               	bcf	status,0,c
 30962  001AF6  37AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 30963  001AF8  0100               	movlb	0	; () banked
 30964  001AFA  90D8               	bcf	status,0,c
 30965  001AFC  35AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 30966  001AFE  0AFF               	xorlw	255
 30967  001B00  0B1D               	andlw	29
 30968  001B02  0100               	movlb	0	; () banked
 30969  001B04  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30970                           
 30971                           ; BSR set to: 0
 30972                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 30973  001B06  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30974  001B0A  0E3B               	movlw	59
 30975  001B0C  ECFE  F04F         	call	_RADIO_RegisterWrite
 30976                           
 30977                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 30978  001B10  0101               	movlb	1	; () banked
 30979  001B12  5181               	movf	(_RadioConfiguration+13)& (0+255),w,b
 30980  001B14  0100               	movlb	0	; () banked
 30981  001B16  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30982  001B18  0E20               	movlw	32
 30983  001B1A  ECFE  F04F         	call	_RADIO_RegisterWrite
 30984                           
 30985                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 30986  001B1E  C180  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 30987  001B22  0E21               	movlw	33
 30988  001B24  ECFE  F04F         	call	_RADIO_RegisterWrite
 30989                           
 30990                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 30991  001B28  0E00               	movlw	0
 30992  001B2A  0100               	movlb	0	; () banked
 30993  001B2C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30994  001B2E  0E0D               	movlw	13
 30995  001B30  ECFE  F04F         	call	_RADIO_RegisterWrite
 30996                           
 30997                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 30998  001B34  0E00               	movlw	0
 30999  001B36  0100               	movlb	0	; () banked
 31000  001B38  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31001  001B3A  0E0E               	movlw	14
 31002  001B3C  ECFE  F04F         	call	_RADIO_RegisterWrite
 31003                           
 31004                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 31005  001B40  0E00               	movlw	0
 31006  001B42  0100               	movlb	0	; () banked
 31007  001B44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31008  001B46  0E0F               	movlw	15
 31009  001B48  ECFE  F04F         	call	_RADIO_RegisterWrite
 31010                           
 31011                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 31012  001B4C  0E12               	movlw	18
 31013  001B4E  0101               	movlb	1	; () banked
 31014  001B50  19A5               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 31015  001B52  A4D8               	btfss	status,2,c
 31016  001B54  D083               	goto	l464
 31017                           
 31018                           ; BSR set to: 1
 31019                           ;radio_driver_SX1276.c: 665: {
 31020                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 31021                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 31022                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 31023                           ;radio_driver_SX1276.c: 669: )
 31024  001B56  0E09               	movlw	9
 31025  001B58  0101               	movlb	1	; () banked
 31026  001B5A  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31027  001B5C  A4D8               	btfss	status,2,c
 31028  001B5E  D028               	goto	l13785
 31029                           
 31030                           ; BSR set to: 1
 31031  001B60  0E80               	movlw	128
 31032  001B62  0101               	movlb	1	; () banked
 31033  001B64  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 31034  001B66  0E13               	movlw	19
 31035  001B68  0101               	movlb	1	; () banked
 31036  001B6A  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31037  001B6C  0E61               	movlw	97
 31038  001B6E  0101               	movlb	1	; () banked
 31039  001B70  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31040  001B72  0E33               	movlw	51
 31041  001B74  0101               	movlb	1	; () banked
 31042  001B76  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31043  001B78  A0D8               	btfss	status,0,c
 31044  001B7A  D01A               	goto	l13785
 31045                           
 31046                           ; BSR set to: 1
 31047  001B7C  0101               	movlb	1	; () banked
 31048  001B7E  0574               	decf	_RadioConfiguration& (0+255),w,b
 31049  001B80  0EF7               	movlw	247
 31050  001B82  0101               	movlb	1	; () banked
 31051  001B84  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31052  001B86  0ECB               	movlw	203
 31053  001B88  0101               	movlb	1	; () banked
 31054  001B8A  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31055  001B8C  0E3C               	movlw	60
 31056  001B8E  0101               	movlb	1	; () banked
 31057  001B90  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31058  001B92  B0D8               	btfsc	status,0,c
 31059  001B94  D00D               	goto	l13785
 31060                           
 31061                           ; BSR set to: 1
 31062                           ;radio_driver_SX1276.c: 670: {
 31063                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 31064  001B96  0E02               	movlw	2
 31065  001B98  0100               	movlb	0	; () banked
 31066  001B9A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31067  001B9C  0E36               	movlw	54
 31068  001B9E  ECFE  F04F         	call	_RADIO_RegisterWrite
 31069                           
 31070                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 31071  001BA2  0E64               	movlw	100
 31072  001BA4  0100               	movlb	0	; () banked
 31073  001BA6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31074  001BA8  0E3A               	movlw	58
 31075  001BAA  ECFE  F04F         	call	_RADIO_RegisterWrite
 31076                           
 31077                           ;radio_driver_SX1276.c: 673: }
 31078  001BAE  D034               	goto	l13795
 31079  001BB0                     l13785:
 31080                           
 31081                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 31082                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 31083                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 31084                           ;radio_driver_SX1276.c: 677: )
 31085  001BB0  0E09               	movlw	9
 31086  001BB2  0101               	movlb	1	; () banked
 31087  001BB4  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31088  001BB6  A4D8               	btfss	status,2,c
 31089  001BB8  D029               	goto	l13793
 31090                           
 31091                           ; BSR set to: 1
 31092  001BBA  0E80               	movlw	128
 31093  001BBC  0101               	movlb	1	; () banked
 31094  001BBE  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 31095  001BC0  0E1A               	movlw	26
 31096  001BC2  0101               	movlb	1	; () banked
 31097  001BC4  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31098  001BC6  0E70               	movlw	112
 31099  001BC8  0101               	movlb	1	; () banked
 31100  001BCA  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31101  001BCC  0E18               	movlw	24
 31102  001BCE  0101               	movlb	1	; () banked
 31103  001BD0  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31104  001BD2  A0D8               	btfss	status,0,c
 31105  001BD4  D01B               	goto	l13793
 31106                           
 31107                           ; BSR set to: 1
 31108  001BD6  0E41               	movlw	65
 31109  001BD8  0101               	movlb	1	; () banked
 31110  001BDA  5D74               	subwf	_RadioConfiguration& (0+255),w,b
 31111  001BDC  0EDD               	movlw	221
 31112  001BDE  0101               	movlb	1	; () banked
 31113  001BE0  5975               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31114  001BE2  0E4A               	movlw	74
 31115  001BE4  0101               	movlb	1	; () banked
 31116  001BE6  5976               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31117  001BE8  0E1F               	movlw	31
 31118  001BEA  0101               	movlb	1	; () banked
 31119  001BEC  5977               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31120  001BEE  B0D8               	btfsc	status,0,c
 31121  001BF0  D00D               	goto	l13793
 31122                           
 31123                           ; BSR set to: 1
 31124                           ;radio_driver_SX1276.c: 678: {
 31125                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 31126  001BF2  0E02               	movlw	2
 31127  001BF4  0100               	movlb	0	; () banked
 31128  001BF6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31129  001BF8  0E36               	movlw	54
 31130  001BFA  ECFE  F04F         	call	_RADIO_RegisterWrite
 31131                           
 31132                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 31133  001BFE  0E7F               	movlw	127
 31134  001C00  0100               	movlb	0	; () banked
 31135  001C02  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31136  001C04  0E3A               	movlw	58
 31137  001C06  ECFE  F04F         	call	_RADIO_RegisterWrite
 31138                           
 31139                           ;radio_driver_SX1276.c: 681: }
 31140  001C0A  D006               	goto	l13795
 31141  001C0C                     l13793:
 31142                           
 31143                           ;radio_driver_SX1276.c: 682: else
 31144                           ;radio_driver_SX1276.c: 683: {
 31145                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 31146  001C0C  0E03               	movlw	3
 31147  001C0E  0100               	movlb	0	; () banked
 31148  001C10  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31149  001C12  0E36               	movlw	54
 31150  001C14  ECFE  F04F         	call	_RADIO_RegisterWrite
 31151  001C18                     l13795:
 31152                           
 31153                           ;radio_driver_SX1276.c: 685: }
 31154                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 31155  001C18  0E09               	movlw	9
 31156  001C1A  0101               	movlb	1	; () banked
 31157  001C1C  198E               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31158  001C1E  A4D8               	btfss	status,2,c
 31159  001C20  D011               	goto	l13801
 31160                           
 31161                           ; BSR set to: 1
 31162  001C22  0101               	movlb	1	; () banked
 31163  001C24  0594               	decf	(_RadioConfiguration+32)& (0+255),w,b
 31164  001C26  A4D8               	btfss	status,2,c
 31165  001C28  D00D               	goto	l13801
 31166                           
 31167                           ; BSR set to: 1
 31168                           ;radio_driver_SX1276.c: 689: {
 31169                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 31170  001C2A  0E65               	movlw	101
 31171  001C2C  0100               	movlb	0	; () banked
 31172  001C2E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31173  001C30  0E3A               	movlw	58
 31174  001C32  ECFE  F04F         	call	_RADIO_RegisterWrite
 31175                           
 31176                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 31177  001C36  0E19               	movlw	25
 31178  001C38  0100               	movlb	0	; () banked
 31179  001C3A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31180  001C3C  0E3B               	movlw	59
 31181  001C3E  ECFE  F04F         	call	_RADIO_RegisterWrite
 31182                           
 31183                           ;radio_driver_SX1276.c: 692: }
 31184  001C42  D00C               	goto	l464
 31185  001C44                     l13801:
 31186                           
 31187                           ;radio_driver_SX1276.c: 693: else
 31188                           ;radio_driver_SX1276.c: 694: {
 31189                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 31190  001C44  0E65               	movlw	101
 31191  001C46  0100               	movlb	0	; () banked
 31192  001C48  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31193  001C4A  0E3A               	movlw	58
 31194  001C4C  ECFE  F04F         	call	_RADIO_RegisterWrite
 31195                           
 31196                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 31197  001C50  0E1D               	movlw	29
 31198  001C52  0100               	movlb	0	; () banked
 31199  001C54  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31200  001C56  0E3B               	movlw	59
 31201  001C58  ECFE  F04F         	call	_RADIO_RegisterWrite
 31202  001C5C                     l464:
 31203                           
 31204                           ;radio_driver_SX1276.c: 697: }
 31205                           ;radio_driver_SX1276.c: 698: }
 31206                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 31207  001C5C  0EFF               	movlw	255
 31208  001C5E  0100               	movlb	0	; () banked
 31209  001C60  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31210  001C62  0E12               	movlw	18
 31211  001C64  ECFE  F04F         	call	_RADIO_RegisterWrite
 31212                           
 31213                           ;radio_driver_SX1276.c: 702: }
 31214  001C68  0012               	return	
 31215  001C6A                     l13803:
 31216                           
 31217                           ;radio_driver_SX1276.c: 703: else
 31218                           ;radio_driver_SX1276.c: 704: {
 31219                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 31220  001C6A  C178  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 31221  001C6E  C179  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 31222  001C72  C17A  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 31223  001C76  C17B  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 31224  001C7A  EC65  F047         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 31225                           
 31226                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 31227  001C7E  C17C  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 31228  001C82  C17D  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 31229  001C86  C17E  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 31230  001C8A  C17F  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 31231  001C8E  ECCF  F047         	call	_RADIO_WriteFSKBitRate	;wreg free
 31232                           
 31233                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 31234  001C92  0101               	movlb	1	; () banked
 31235  001C94  5181               	movf	(_RadioConfiguration+13)& (0+255),w,b
 31236  001C96  0100               	movlb	0	; () banked
 31237  001C98  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31238  001C9A  0E25               	movlw	37
 31239  001C9C  ECFE  F04F         	call	_RADIO_RegisterWrite
 31240                           
 31241                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 31242  001CA0  C180  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 31243  001CA4  0E26               	movlw	38
 31244  001CA6  ECFE  F04F         	call	_RADIO_RegisterWrite
 31245                           
 31246                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 31247  001CAA  0E0A               	movlw	10
 31248  001CAC  EC25  F04F         	call	_RADIO_RegisterRead
 31249  001CB0  0100               	movlb	0	; () banked
 31250  001CB2  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31251                           
 31252                           ; BSR set to: 0
 31253                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 31254  001CB4  0E9F               	movlw	159
 31255  001CB6  0100               	movlb	0	; () banked
 31256  001CB8  17B4               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31257                           
 31258                           ; BSR set to: 0
 31259                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 31260  001CBA  0101               	movlb	1	; () banked
 31261  001CBC  39A7               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 31262  001CBE  46E8               	rlncf	wreg,f,c
 31263  001CC0  0BE0               	andlw	224
 31264  001CC2  0100               	movlb	0	; () banked
 31265  001CC4  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31266                           
 31267                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 31268  001CC6  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31269  001CCA  0E0A               	movlw	10
 31270  001CCC  ECFE  F04F         	call	_RADIO_RegisterWrite
 31271                           
 31272                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 31273  001CD0  0EC8               	movlw	200
 31274  001CD2  0100               	movlb	0	; () banked
 31275  001CD4  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31276                           
 31277                           ; BSR set to: 0
 31278                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 31279  001CD6  0101               	movlb	1	; () banked
 31280  001CD8  5190               	movf	(_RadioConfiguration+28)& (0+255),w,b
 31281  001CDA  B4D8               	btfsc	status,2,c
 31282  001CDC  D002               	goto	l13815
 31283                           
 31284                           ; BSR set to: 1
 31285                           ;radio_driver_SX1276.c: 722: {
 31286                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 31287  001CDE  0100               	movlb	0	; () banked
 31288  001CE0  89B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 31289  001CE2                     l13815:
 31290                           
 31291                           ;radio_driver_SX1276.c: 724: }
 31292                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 31293  001CE2  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31294  001CE6  0E30               	movlw	48
 31295  001CE8  ECFE  F04F         	call	_RADIO_RegisterWrite
 31296                           
 31297                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 31298  001CEC  0E00               	movlw	0
 31299  001CEE  0100               	movlb	0	; () banked
 31300  001CF0  6FAF               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 31301  001CF2  D013               	goto	l13823
 31302  001CF4                     l13819:
 31303                           
 31304                           ; BSR set to: 0
 31305                           ;radio_driver_SX1276.c: 729: {
 31306                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 31307  001CF4  0100               	movlb	0	; () banked
 31308  001CF6  51AF               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31309  001CF8  0D01               	mullw	1
 31310  001CFA  0E83               	movlw	low (_RadioConfiguration+15)
 31311  001CFC  24F3               	addwf	prodl,w,c
 31312  001CFE  6ED9               	movwf	fsr2l,c
 31313  001D00  0E01               	movlw	high (_RadioConfiguration+15)
 31314  001D02  20F4               	addwfc	prodh,w,c
 31315  001D04  6EDA               	movwf	fsr2h,c
 31316  001D06  50DF               	movf	indf2,w,c
 31317  001D08  0100               	movlb	0	; () banked
 31318  001D0A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31319  001D0C  0100               	movlb	0	; () banked
 31320  001D0E  51AF               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31321  001D10  0F28               	addlw	40
 31322  001D12  ECFE  F04F         	call	_RADIO_RegisterWrite
 31323  001D16  0100               	movlb	0	; () banked
 31324  001D18  2BAF               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 31325  001D1A                     l13823:
 31326                           
 31327                           ; BSR set to: 0
 31328  001D1A  0101               	movlb	1	; () banked
 31329  001D1C  518B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31330  001D1E  0100               	movlb	0	; () banked
 31331  001D20  5DAF               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 31332  001D22  A0D8               	btfss	status,0,c
 31333  001D24  D7E7               	goto	l13819
 31334                           
 31335                           ; BSR set to: 0
 31336                           ;radio_driver_SX1276.c: 733: }
 31337                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 31338                           
 31339                           ; BSR set to: 0
 31340  001D26  0101               	movlb	1	; () banked
 31341  001D28  518B               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31342  001D2A  B4D8               	btfsc	status,2,c
 31343  001D2C  D009               	goto	l13829
 31344                           
 31345                           ; BSR set to: 1
 31346                           ;radio_driver_SX1276.c: 737: {
 31347                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 31348  001D2E  0101               	movlb	1	; () banked
 31349  001D30  058B               	decf	(_RadioConfiguration+23)& (0+255),w,b
 31350  001D32  0910               	iorlw	16
 31351  001D34  0100               	movlb	0	; () banked
 31352  001D36  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31353  001D38  0E27               	movlw	39
 31354  001D3A  ECFE  F04F         	call	_RADIO_RegisterWrite
 31355                           
 31356                           ;radio_driver_SX1276.c: 739: }
 31357  001D3E  D006               	goto	l477
 31358  001D40                     l13829:
 31359                           
 31360                           ;radio_driver_SX1276.c: 740: else
 31361                           ;radio_driver_SX1276.c: 741: {
 31362                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 31363  001D40  0E00               	movlw	0
 31364  001D42  0100               	movlb	0	; () banked
 31365  001D44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31366  001D46  0E27               	movlw	39
 31367  001D48  ECFE  F04F         	call	_RADIO_RegisterWrite
 31368  001D4C                     l477:
 31369                           
 31370                           ;radio_driver_SX1276.c: 743: }
 31371                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 31372  001D4C  0EFF               	movlw	255
 31373  001D4E  0100               	movlb	0	; () banked
 31374  001D50  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31375  001D52  0E3E               	movlw	62
 31376  001D54  ECFE  F04F         	call	_RADIO_RegisterWrite
 31377                           
 31378                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 31379  001D58  0EFF               	movlw	255
 31380  001D5A  0100               	movlb	0	; () banked
 31381  001D5C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31382  001D5E  0E3F               	movlw	63
 31383  001D60  ECFE  F04F         	call	_RADIO_RegisterWrite
 31384  001D64  0012               	return	
 31385  001D66                     __end_of_RADIO_WriteConfiguration:
 31386                           	opt stack 0
 31387                           tosu	equ	0xFFF
 31388                           tosh	equ	0xFFE
 31389                           tosl	equ	0xFFD
 31390                           pclath	equ	0xFFA
 31391                           tblptru	equ	0xFF8
 31392                           tblptrh	equ	0xFF7
 31393                           tblptrl	equ	0xFF6
 31394                           tablat	equ	0xFF5
 31395                           prodh	equ	0xFF4
 31396                           prodl	equ	0xFF3
 31397                           intcon	equ	0xFF2
 31398                           intcon2	equ	0xFF1
 31399                           intcon3	equ	0xFF0
 31400                           indf0	equ	0xFEF
 31401                           postinc0	equ	0xFEE
 31402                           fsr0h	equ	0xFEA
 31403                           fsr0l	equ	0xFE9
 31404                           wreg	equ	0xFE8
 31405                           postinc1	equ	0xFE6
 31406                           postdec1	equ	0xFE5
 31407                           plusw1	equ	0xFE3
 31408                           fsr1h	equ	0xFE2
 31409                           fsr1l	equ	0xFE1
 31410                           indf2	equ	0xFDF
 31411                           postinc2	equ	0xFDE
 31412                           postdec2	equ	0xFDD
 31413                           plusw2	equ	0xFDB
 31414                           fsr2h	equ	0xFDA
 31415                           fsr2l	equ	0xFD9
 31416                           status	equ	0xFD8
 31417                           
 31418 ;; *************** function _RADIO_WritePower *****************
 31419 ;; Defined at:
 31420 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31421 ;; Parameters:    Size  Location     Type
 31422 ;;  power           1    wreg     char 
 31423 ;; Auto vars:     Size  Location     Type
 31424 ;;  power           1   10[BANK0 ] char 
 31425 ;;  paDac           1    9[BANK0 ] unsigned char 
 31426 ;;  ocp             1    8[BANK0 ] unsigned char 
 31427 ;; Return value:  Size  Location     Type
 31428 ;;                  1    wreg      void 
 31429 ;; Registers used:
 31430 ;;		wreg, status,2, status,0, cstack
 31431 ;; Tracked objects:
 31432 ;;		On entry : 0/0
 31433 ;;		On exit  : 0/0
 31434 ;;		Unchanged: 0/0
 31435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31436 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31437 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31439 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31440 ;;Total ram usage:        3 bytes
 31441 ;; Hardware stack levels used:    1
 31442 ;; Hardware stack levels required when called:   10
 31443 ;; This function calls:
 31444 ;;		_RADIO_RegisterRead
 31445 ;;		_RADIO_RegisterWrite
 31446 ;; This function is called by:
 31447 ;;		_RADIO_WriteConfiguration
 31448 ;; This function uses a non-reentrant model
 31449 ;;
 31450                           
 31451                           	psect	text143
 31452  006E78                     __ptext143:
 31453                           	opt stack 0
 31454  006E78                     _RADIO_WritePower:
 31455                           	opt stack 16
 31456                           
 31457                           ;incstack = 0
 31458                           ;RADIO_WritePower@power stored from wreg
 31459  006E78  0100               	movlb	0	; () banked
 31460  006E7A  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31461                           
 31462                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 31463                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 31464                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31465  006E7C  0101               	movlb	1	; () banked
 31466  006E7E  5191               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31467  006E80  A4D8               	btfss	status,2,c
 31468  006E82  D039               	goto	l13495
 31469                           
 31470                           ; BSR set to: 1
 31471                           ;radio_driver_SX1276.c: 348: {
 31472                           ;radio_driver_SX1276.c: 350: if (power < -3)
 31473  006E84  0100               	movlb	0	; () banked
 31474  006E86  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31475  006E88  0A80               	xorlw	128
 31476  006E8A  0F83               	addlw	131
 31477  006E8C  B0D8               	btfsc	status,0,c
 31478  006E8E  D003               	goto	l13475
 31479                           
 31480                           ; BSR set to: 0
 31481                           ;radio_driver_SX1276.c: 351: {
 31482                           ;radio_driver_SX1276.c: 352: power = -3;
 31483  006E90  0EFD               	movlw	253
 31484  006E92  0100               	movlb	0	; () banked
 31485  006E94  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31486  006E96                     l13475:
 31487                           
 31488                           ; BSR set to: 0
 31489                           ;radio_driver_SX1276.c: 353: }
 31490                           ;radio_driver_SX1276.c: 354: if (power > 15)
 31491  006E96  0100               	movlb	0	; () banked
 31492  006E98  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31493  006E9A  0A80               	xorlw	128
 31494  006E9C  0F70               	addlw	-144
 31495  006E9E  A0D8               	btfss	status,0,c
 31496  006EA0  D003               	goto	l13479
 31497                           
 31498                           ; BSR set to: 0
 31499                           ;radio_driver_SX1276.c: 355: {
 31500                           ;radio_driver_SX1276.c: 356: power = 15;
 31501  006EA2  0E0F               	movlw	15
 31502  006EA4  0100               	movlb	0	; () banked
 31503  006EA6  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31504  006EA8                     l13479:
 31505                           
 31506                           ; BSR set to: 0
 31507                           ;radio_driver_SX1276.c: 357: }
 31508                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 31509  006EA8  0E4D               	movlw	77
 31510  006EAA  EC25  F04F         	call	_RADIO_RegisterRead
 31511  006EAE  0100               	movlb	0	; () banked
 31512  006EB0  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 31513                           
 31514                           ; BSR set to: 0
 31515                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31516  006EB2  0EF8               	movlw	248
 31517  006EB4  0100               	movlb	0	; () banked
 31518  006EB6  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31519                           
 31520                           ; BSR set to: 0
 31521                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31522  006EB8  0100               	movlb	0	; () banked
 31523  006EBA  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31524                           
 31525                           ; BSR set to: 0
 31526                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31527  006EBC  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31528  006EC0  0E4D               	movlw	77
 31529  006EC2  ECFE  F04F         	call	_RADIO_RegisterWrite
 31530                           
 31531                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31532  006EC6  0100               	movlb	0	; () banked
 31533  006EC8  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 31534  006ECA  D00C               	goto	l13493
 31535                           
 31536                           ; BSR set to: 0
 31537                           ;radio_driver_SX1276.c: 365: {
 31538                           ;radio_driver_SX1276.c: 369: power += 3;
 31539  006ECC  0E03               	movlw	3
 31540  006ECE  0100               	movlb	0	; () banked
 31541  006ED0  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 31542                           
 31543                           ; BSR set to: 0
 31544                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31545  006ED2  0100               	movlb	0	; () banked
 31546  006ED4  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31547  006ED6  0920               	iorlw	32
 31548  006ED8  0100               	movlb	0	; () banked
 31549  006EDA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31550  006EDC  0E09               	movlw	9
 31551  006EDE  ECFE  F04F         	call	_RADIO_RegisterWrite
 31552                           
 31553                           ;radio_driver_SX1276.c: 371: }
 31554  006EE2  0012               	return	
 31555  006EE4                     l13493:
 31556                           
 31557                           ;radio_driver_SX1276.c: 372: else
 31558                           ;radio_driver_SX1276.c: 373: {
 31559                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 31560  006EE4  0100               	movlb	0	; () banked
 31561  006EE6  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31562  006EE8  0970               	iorlw	112
 31563  006EEA  0100               	movlb	0	; () banked
 31564  006EEC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31565  006EEE  0E09               	movlw	9
 31566  006EF0  ECFE  F04F         	call	_RADIO_RegisterWrite
 31567                           
 31568                           ;radio_driver_SX1276.c: 378: }
 31569                           ;radio_driver_SX1276.c: 379: }
 31570  006EF4  0012               	return	
 31571  006EF6                     l13495:
 31572                           
 31573                           ;radio_driver_SX1276.c: 380: else
 31574                           ;radio_driver_SX1276.c: 381: {
 31575                           ;radio_driver_SX1276.c: 385: if (power < 2)
 31576  006EF6  0100               	movlb	0	; () banked
 31577  006EF8  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31578  006EFA  0A80               	xorlw	128
 31579  006EFC  0F7E               	addlw	-130
 31580  006EFE  B0D8               	btfsc	status,0,c
 31581  006F00  D003               	goto	l13499
 31582                           
 31583                           ; BSR set to: 0
 31584                           ;radio_driver_SX1276.c: 386: {
 31585                           ;radio_driver_SX1276.c: 387: power = 2;
 31586  006F02  0E02               	movlw	2
 31587  006F04  0100               	movlb	0	; () banked
 31588  006F06  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31589  006F08                     l13499:
 31590                           
 31591                           ; BSR set to: 0
 31592                           ;radio_driver_SX1276.c: 388: }
 31593                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 31594  006F08  0100               	movlb	0	; () banked
 31595  006F0A  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31596  006F0C  0A80               	xorlw	128
 31597  006F0E  0F6C               	addlw	-148
 31598  006F10  A0D8               	btfss	status,0,c
 31599  006F12  D002               	goto	l13503
 31600                           
 31601                           ; BSR set to: 0
 31602                           ;radio_driver_SX1276.c: 392: {
 31603                           ;radio_driver_SX1276.c: 393: power = 20;
 31604  006F14  0E14               	movlw	20
 31605  006F16  D007               	goto	L21
 31606  006F18                     l13503:
 31607                           
 31608                           ; BSR set to: 0
 31609                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31610  006F18  0100               	movlb	0	; () banked
 31611  006F1A  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31612  006F1C  0A80               	xorlw	128
 31613  006F1E  0F6E               	addlw	-146
 31614  006F20  A0D8               	btfss	status,0,c
 31615  006F22  D003               	goto	l13507
 31616                           
 31617                           ; BSR set to: 0
 31618                           ;radio_driver_SX1276.c: 396: {
 31619                           ;radio_driver_SX1276.c: 397: power = 17;
 31620  006F24  0E11               	movlw	17
 31621  006F26                     L21:
 31622  006F26  0100               	movlb	0	; () banked
 31623  006F28  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31624  006F2A                     l13507:
 31625                           
 31626                           ; BSR set to: 0
 31627                           ;radio_driver_SX1276.c: 398: }
 31628                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 31629  006F2A  0E0B               	movlw	11
 31630  006F2C  EC25  F04F         	call	_RADIO_RegisterRead
 31631  006F30  0100               	movlb	0	; () banked
 31632  006F32  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 31633                           
 31634                           ; BSR set to: 0
 31635                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31636  006F34  0E4D               	movlw	77
 31637  006F36  EC25  F04F         	call	_RADIO_RegisterRead
 31638  006F3A  0100               	movlb	0	; () banked
 31639  006F3C  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 31640                           
 31641                           ; BSR set to: 0
 31642                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31643  006F3E  0EF8               	movlw	248
 31644  006F40  0100               	movlb	0	; () banked
 31645  006F42  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31646                           
 31647                           ; BSR set to: 0
 31648                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31649  006F44  0E14               	movlw	20
 31650  006F46  0100               	movlb	0	; () banked
 31651  006F48  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31652  006F4A  A4D8               	btfss	status,2,c
 31653  006F4C  D009               	goto	l13521
 31654                           
 31655                           ; BSR set to: 0
 31656                           ;radio_driver_SX1276.c: 404: {
 31657                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31658  006F4E  0E07               	movlw	7
 31659  006F50  0100               	movlb	0	; () banked
 31660  006F52  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31661                           
 31662                           ; BSR set to: 0
 31663                           ;radio_driver_SX1276.c: 406: power = 15;
 31664  006F54  0E0F               	movlw	15
 31665  006F56  0100               	movlb	0	; () banked
 31666  006F58  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31667                           
 31668                           ; BSR set to: 0
 31669                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31670  006F5A  0100               	movlb	0	; () banked
 31671  006F5C  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31672                           
 31673                           ;radio_driver_SX1276.c: 408: }
 31674  006F5E  D007               	goto	l13527
 31675  006F60                     l13521:
 31676                           
 31677                           ; BSR set to: 0
 31678                           ;radio_driver_SX1276.c: 409: else
 31679                           ;radio_driver_SX1276.c: 410: {
 31680                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 31681  006F60  0100               	movlb	0	; () banked
 31682  006F62  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31683                           
 31684                           ; BSR set to: 0
 31685                           ;radio_driver_SX1276.c: 412: power -= 2;
 31686  006F64  0EFE               	movlw	254
 31687  006F66  0100               	movlb	0	; () banked
 31688  006F68  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 31689                           
 31690                           ; BSR set to: 0
 31691                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31692  006F6A  0100               	movlb	0	; () banked
 31693  006F6C  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31694  006F6E                     l13527:
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;radio_driver_SX1276.c: 414: }
 31698                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 31699  006F6E  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31700  006F72  0E4D               	movlw	77
 31701  006F74  ECFE  F04F         	call	_RADIO_RegisterWrite
 31702                           
 31703                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31704  006F78  0100               	movlb	0	; () banked
 31705  006F7A  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31706  006F7C  0980               	iorlw	128
 31707  006F7E  0100               	movlb	0	; () banked
 31708  006F80  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31709  006F82  0E09               	movlw	9
 31710  006F84  ECFE  F04F         	call	_RADIO_RegisterWrite
 31711                           
 31712                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31713  006F88  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31714  006F8C  0E0B               	movlw	11
 31715  006F8E  ECFE  F04F         	call	_RADIO_RegisterWrite
 31716  006F92  0012               	return	
 31717  006F94                     __end_of_RADIO_WritePower:
 31718                           	opt stack 0
 31719                           tosu	equ	0xFFF
 31720                           tosh	equ	0xFFE
 31721                           tosl	equ	0xFFD
 31722                           pclath	equ	0xFFA
 31723                           tblptru	equ	0xFF8
 31724                           tblptrh	equ	0xFF7
 31725                           tblptrl	equ	0xFF6
 31726                           tablat	equ	0xFF5
 31727                           prodh	equ	0xFF4
 31728                           prodl	equ	0xFF3
 31729                           intcon	equ	0xFF2
 31730                           intcon2	equ	0xFF1
 31731                           intcon3	equ	0xFF0
 31732                           indf0	equ	0xFEF
 31733                           postinc0	equ	0xFEE
 31734                           fsr0h	equ	0xFEA
 31735                           fsr0l	equ	0xFE9
 31736                           wreg	equ	0xFE8
 31737                           postinc1	equ	0xFE6
 31738                           postdec1	equ	0xFE5
 31739                           plusw1	equ	0xFE3
 31740                           fsr1h	equ	0xFE2
 31741                           fsr1l	equ	0xFE1
 31742                           indf2	equ	0xFDF
 31743                           postinc2	equ	0xFDE
 31744                           postdec2	equ	0xFDD
 31745                           plusw2	equ	0xFDB
 31746                           fsr2h	equ	0xFDA
 31747                           fsr2l	equ	0xFD9
 31748                           status	equ	0xFD8
 31749                           
 31750 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31751 ;; Defined at:
 31752 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31753 ;; Parameters:    Size  Location     Type
 31754 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 31755 ;; Auto vars:     Size  Location     Type
 31756 ;;  num             4   21[BANK0 ] unsigned long 
 31757 ;; Return value:  Size  Location     Type
 31758 ;;                  1    wreg      void 
 31759 ;; Registers used:
 31760 ;;		wreg, status,2, status,0, cstack
 31761 ;; Tracked objects:
 31762 ;;		On entry : 0/0
 31763 ;;		On exit  : 0/0
 31764 ;;		Unchanged: 0/0
 31765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31766 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31767 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31769 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31770 ;;Total ram usage:        8 bytes
 31771 ;; Hardware stack levels used:    1
 31772 ;; Hardware stack levels required when called:   10
 31773 ;; This function calls:
 31774 ;;		_RADIO_RegisterWrite
 31775 ;;		___lldiv
 31776 ;; This function is called by:
 31777 ;;		_RADIO_WriteConfiguration
 31778 ;; This function uses a non-reentrant model
 31779 ;;
 31780                           
 31781                           	psect	text144
 31782  008ECA                     __ptext144:
 31783                           	opt stack 0
 31784  008ECA                     _RADIO_WriteFSKFrequencyDeviation:
 31785                           	opt stack 16
 31786                           
 31787                           ;radio_driver_SX1276.c: 296: uint32_t num;
 31788                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 31789                           
 31790                           ;incstack = 0
 31791  008ECA  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31792  008ECE  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31793  008ED2  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31794  008ED6  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31795                           
 31796                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31797  008EDA  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31798  008EDE  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31799  008EE2  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31800  008EE6  0100               	movlb	0	; () banked
 31801  008EE8  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31802                           
 31803                           ; BSR set to: 0
 31804                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31805  008EEA  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31806  008EEE  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31807  008EF2  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31808  008EF6  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31809  008EFA  0E09               	movlw	9
 31810  008EFC  0100               	movlb	0	; () banked
 31811  008EFE  6F68               	movwf	___lldiv@divisor& (0+255),b
 31812  008F00  0E3D               	movlw	61
 31813  008F02  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 31814  008F04  0E00               	movlw	0
 31815  008F06  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 31816  008F08  0E00               	movlw	0
 31817  008F0A  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 31818  008F0C  EC08  F03F         	call	___lldiv	;wreg free
 31819  008F10  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31820  008F14  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31821  008F18  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31822  008F1C  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31823                           
 31824                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31825  008F20  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31826  008F24  0E04               	movlw	4
 31827  008F26  ECFE  F04F         	call	_RADIO_RegisterWrite
 31828                           
 31829                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31830  008F2A  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31831  008F2E  0E05               	movlw	5
 31832  008F30  ECFE  F04F         	call	_RADIO_RegisterWrite
 31833  008F34  0012               	return		;funcret
 31834  008F36                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31835                           	opt stack 0
 31836                           tosu	equ	0xFFF
 31837                           tosh	equ	0xFFE
 31838                           tosl	equ	0xFFD
 31839                           pclath	equ	0xFFA
 31840                           tblptru	equ	0xFF8
 31841                           tblptrh	equ	0xFF7
 31842                           tblptrl	equ	0xFF6
 31843                           tablat	equ	0xFF5
 31844                           prodh	equ	0xFF4
 31845                           prodl	equ	0xFF3
 31846                           intcon	equ	0xFF2
 31847                           intcon2	equ	0xFF1
 31848                           intcon3	equ	0xFF0
 31849                           indf0	equ	0xFEF
 31850                           postinc0	equ	0xFEE
 31851                           fsr0h	equ	0xFEA
 31852                           fsr0l	equ	0xFE9
 31853                           wreg	equ	0xFE8
 31854                           postinc1	equ	0xFE6
 31855                           postdec1	equ	0xFE5
 31856                           plusw1	equ	0xFE3
 31857                           fsr1h	equ	0xFE2
 31858                           fsr1l	equ	0xFE1
 31859                           indf2	equ	0xFDF
 31860                           postinc2	equ	0xFDE
 31861                           postdec2	equ	0xFDD
 31862                           plusw2	equ	0xFDB
 31863                           fsr2h	equ	0xFDA
 31864                           fsr2l	equ	0xFD9
 31865                           status	equ	0xFD8
 31866                           
 31867 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31868 ;; Defined at:
 31869 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31870 ;; Parameters:    Size  Location     Type
 31871 ;;  bitRate         4   17[BANK0 ] unsigned long 
 31872 ;; Auto vars:     Size  Location     Type
 31873 ;;  num             4   21[BANK0 ] unsigned long 
 31874 ;; Return value:  Size  Location     Type
 31875 ;;                  1    wreg      void 
 31876 ;; Registers used:
 31877 ;;		wreg, status,2, status,0, cstack
 31878 ;; Tracked objects:
 31879 ;;		On entry : 0/0
 31880 ;;		On exit  : 0/0
 31881 ;;		Unchanged: 0/0
 31882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31884 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31886 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31887 ;;Total ram usage:        8 bytes
 31888 ;; Hardware stack levels used:    1
 31889 ;; Hardware stack levels required when called:   10
 31890 ;; This function calls:
 31891 ;;		_RADIO_RegisterWrite
 31892 ;;		___lldiv
 31893 ;; This function is called by:
 31894 ;;		_RADIO_WriteConfiguration
 31895 ;; This function uses a non-reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text145
 31899  008F9E                     __ptext145:
 31900                           	opt stack 0
 31901  008F9E                     _RADIO_WriteFSKBitRate:
 31902                           	opt stack 16
 31903                           
 31904                           ;radio_driver_SX1276.c: 318: uint32_t num;
 31905                           ;radio_driver_SX1276.c: 320: num = 32000000;
 31906                           
 31907                           ;incstack = 0
 31908  008F9E  0E00               	movlw	0
 31909  008FA0  0100               	movlb	0	; () banked
 31910  008FA2  6F75               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 31911  008FA4  0E48               	movlw	72
 31912  008FA6  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 31913  008FA8  0EE8               	movlw	232
 31914  008FAA  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 31915  008FAC  0E01               	movlw	1
 31916  008FAE  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 31917                           
 31918                           ; BSR set to: 0
 31919                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 31920  008FB0  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 31921  008FB4  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 31922  008FB8  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 31923  008FBC  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 31924  008FC0  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 31925  008FC4  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 31926  008FC8  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 31927  008FCC  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 31928  008FD0  EC08  F03F         	call	___lldiv	;wreg free
 31929  008FD4  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 31930  008FD8  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 31931  008FDC  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 31932  008FE0  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 31933                           
 31934                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 31935  008FE4  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 31936  008FE8  0E02               	movlw	2
 31937  008FEA  ECFE  F04F         	call	_RADIO_RegisterWrite
 31938                           
 31939                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 31940  008FEE  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 31941  008FF2  0E03               	movlw	3
 31942  008FF4  ECFE  F04F         	call	_RADIO_RegisterWrite
 31943                           
 31944                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 31945  008FF8  0E00               	movlw	0
 31946  008FFA  0100               	movlb	0	; () banked
 31947  008FFC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31948  008FFE  0E5D               	movlw	93
 31949  009000  ECFE  F04F         	call	_RADIO_RegisterWrite
 31950  009004  0012               	return		;funcret
 31951  009006                     __end_of_RADIO_WriteFSKBitRate:
 31952                           	opt stack 0
 31953                           tosu	equ	0xFFF
 31954                           tosh	equ	0xFFE
 31955                           tosl	equ	0xFFD
 31956                           pclath	equ	0xFFA
 31957                           tblptru	equ	0xFF8
 31958                           tblptrh	equ	0xFF7
 31959                           tblptrl	equ	0xFF6
 31960                           tablat	equ	0xFF5
 31961                           prodh	equ	0xFF4
 31962                           prodl	equ	0xFF3
 31963                           intcon	equ	0xFF2
 31964                           intcon2	equ	0xFF1
 31965                           intcon3	equ	0xFF0
 31966                           indf0	equ	0xFEF
 31967                           postinc0	equ	0xFEE
 31968                           fsr0h	equ	0xFEA
 31969                           fsr0l	equ	0xFE9
 31970                           wreg	equ	0xFE8
 31971                           postinc1	equ	0xFE6
 31972                           postdec1	equ	0xFE5
 31973                           plusw1	equ	0xFE3
 31974                           fsr1h	equ	0xFE2
 31975                           fsr1l	equ	0xFE1
 31976                           indf2	equ	0xFDF
 31977                           postinc2	equ	0xFDE
 31978                           postdec2	equ	0xFDD
 31979                           plusw2	equ	0xFDB
 31980                           fsr2h	equ	0xFDA
 31981                           fsr2l	equ	0xFD9
 31982                           status	equ	0xFD8
 31983                           
 31984 ;; *************** function _PrepareJoinRequestFrame *****************
 31985 ;; Defined at:
 31986 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 31987 ;; Parameters:    Size  Location     Type
 31988 ;;		None
 31989 ;; Auto vars:     Size  Location     Type
 31990 ;;  mic             4  136[BANK0 ] unsigned long 
 31991 ;;  bufferIndex     1  142[BANK0 ] unsigned char 
 31992 ;;  iCtr            1  141[BANK0 ] unsigned char 
 31993 ;;  mhdr            1  140[BANK0 ] struct .
 31994 ;; Return value:  Size  Location     Type
 31995 ;;                  1    wreg      unsigned char 
 31996 ;; Registers used:
 31997 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31998 ;; Tracked objects:
 31999 ;;		On entry : 0/0
 32000 ;;		On exit  : 0/0
 32001 ;;		Unchanged: 0/0
 32002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32004 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32005 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32006 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32007 ;;Total ram usage:       11 bytes
 32008 ;; Hardware stack levels used:    1
 32009 ;; Hardware stack levels required when called:   13
 32010 ;; This function calls:
 32011 ;;		_ComputeMic
 32012 ;;		_Random
 32013 ;;		_memcpy
 32014 ;;		_memset
 32015 ;; This function is called by:
 32016 ;;		_LORAWAN_Join
 32017 ;; This function uses a non-reentrant model
 32018 ;;
 32019                           
 32020                           	psect	text146
 32021  005240                     __ptext146:
 32022                           	opt stack 0
 32023  005240                     _PrepareJoinRequestFrame:
 32024                           	opt stack 16
 32025                           
 32026                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 32027                           
 32028                           ;incstack = 0
 32029  005240  0E00               	movlw	0
 32030  005242  0100               	movlb	0	; () banked
 32031  005244  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32032                           
 32033                           ; BSR set to: 0
 32034                           ;lorawan.c: 1809: Mhdr_t mhdr;
 32035                           ;lorawan.c: 1810: uint32_t mic;
 32036                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 32037  005246  0EE0               	movlw	low _macBuffer
 32038  005248  0100               	movlb	0	; () banked
 32039  00524A  6F64               	movwf	memset@p1& (0+255),b
 32040  00524C  0E04               	movlw	high _macBuffer
 32041  00524E  0100               	movlb	0	; () banked
 32042  005250  6F65               	movwf	(memset@p1+1)& (0+255),b
 32043  005252  0E00               	movlw	0
 32044  005254  0100               	movlb	0	; () banked
 32045  005256  6F67               	movwf	(memset@c+1)& (0+255),b
 32046  005258  0E00               	movlw	0
 32047  00525A  6F66               	movwf	memset@c& (0+255),b
 32048  00525C  0E01               	movlw	1
 32049  00525E  0100               	movlb	0	; () banked
 32050  005260  6F69               	movwf	(memset@n+1)& (0+255),b
 32051  005262  0E0F               	movlw	15
 32052  005264  6F68               	movwf	memset@n& (0+255),b
 32053  005266  ECCE  F04D         	call	_memset	;wreg free
 32054                           
 32055                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 32056  00526A  0100               	movlb	0	; () banked
 32057  00526C  9BEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 32058  00526E  9DEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 32059  005270  9FEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 32060                           
 32061                           ; BSR set to: 0
 32062                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 32063  005272  0EFC               	movlw	-4
 32064  005274  0100               	movlb	0	; () banked
 32065  005276  17EC               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 32066                           
 32067                           ; BSR set to: 0
 32068                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 32069  005278  0100               	movlb	0	; () banked
 32070  00527A  95EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 32071  00527C  97EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 32072  00527E  99EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 32073                           
 32074                           ; BSR set to: 0
 32075                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 32076  005280  0100               	movlb	0	; () banked
 32077  005282  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32078  005284  0D01               	mullw	1
 32079  005286  0EE0               	movlw	low _macBuffer
 32080  005288  24F3               	addwf	prodl,w,c
 32081  00528A  6ED9               	movwf	fsr2l,c
 32082  00528C  0E04               	movlw	high _macBuffer
 32083  00528E  20F4               	addwfc	prodh,w,c
 32084  005290  6EDA               	movwf	fsr2h,c
 32085  005292  C0EC  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 32086                           
 32087                           ; BSR set to: 0
 32088  005296  0100               	movlb	0	; () banked
 32089  005298  2BEE               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 32090                           
 32091                           ; BSR set to: 0
 32092                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 32093  00529A  0E00               	movlw	0
 32094  00529C  0100               	movlb	0	; () banked
 32095  00529E  6FED               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 32096  0052A0                     l16801:
 32097                           
 32098                           ; BSR set to: 0
 32099  0052A0  0E07               	movlw	7
 32100  0052A2  0100               	movlb	0	; () banked
 32101  0052A4  65ED               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 32102  0052A6  D001               	goto	l16805
 32103  0052A8  D02E               	goto	l16811
 32104  0052AA                     l16805:
 32105                           
 32106                           ; BSR set to: 0
 32107                           ;lorawan.c: 1821: {
 32108                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 32109  0052AA  0100               	movlb	0	; () banked
 32110  0052AC  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32111  0052AE  0100               	movlb	0	; () banked
 32112  0052B0  6FE4               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 32113  0052B2  6BE5               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 32114  0052B4  0100               	movlb	0	; () banked
 32115  0052B6  1FE4               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 32116  0052B8  1FE5               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32117  0052BA  4BE4               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 32118  0052BC  2BE5               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32119  0052BE  0E07               	movlw	7
 32120  0052C0  0100               	movlb	0	; () banked
 32121  0052C2  27E4               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 32122  0052C4  0E00               	movlw	0
 32123  0052C6  23E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32124  0052C8  0E52               	movlw	low (_loRa+82)
 32125  0052CA  0100               	movlb	0	; () banked
 32126  0052CC  25E4               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 32127  0052CE  6ED9               	movwf	fsr2l,c
 32128  0052D0  0E02               	movlw	high (_loRa+82)
 32129  0052D2  0100               	movlb	0	; () banked
 32130  0052D4  21E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 32131  0052D6  6EDA               	movwf	fsr2h,c
 32132  0052D8  0100               	movlb	0	; () banked
 32133  0052DA  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32134  0052DC  C0EE  F0E6         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 32135  0052E0  0100               	movlb	0	; () banked
 32136  0052E2  6BE7               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 32137  0052E4  0100               	movlb	0	; () banked
 32138  0052E6  27E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 32139  0052E8  0E00               	movlw	0
 32140  0052EA  23E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 32141  0052EC  0EE0               	movlw	low _macBuffer
 32142  0052EE  0100               	movlb	0	; () banked
 32143  0052F0  25E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 32144  0052F2  6EE9               	movwf	fsr0l,c
 32145  0052F4  0E04               	movlw	high _macBuffer
 32146  0052F6  0100               	movlb	0	; () banked
 32147  0052F8  21E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 32148  0052FA  6EEA               	movwf	fsr0h,c
 32149  0052FC  CFDF FFEF          	movff	indf2,indf0
 32150                           
 32151                           ; BSR set to: 0
 32152  005300  0100               	movlb	0	; () banked
 32153  005302  2BED               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 32154  005304  D7CD               	goto	l16801
 32155  005306                     l16811:
 32156                           
 32157                           ; BSR set to: 0
 32158                           ;lorawan.c: 1823: }
 32159                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 32160  005306  0100               	movlb	0	; () banked
 32161  005308  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32162  00530A  0F08               	addlw	8
 32163  00530C  0100               	movlb	0	; () banked
 32164  00530E  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32165                           
 32166                           ; BSR set to: 0
 32167                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 32168  005310  0E00               	movlw	0
 32169  005312  0100               	movlb	0	; () banked
 32170  005314  6FED               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 32171  005316                     l16815:
 32172                           
 32173                           ; BSR set to: 0
 32174  005316  0E07               	movlw	7
 32175  005318  0100               	movlb	0	; () banked
 32176  00531A  65ED               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 32177  00531C  D001               	goto	l16819
 32178  00531E  D02E               	goto	l16825
 32179  005320                     l16819:
 32180                           
 32181                           ; BSR set to: 0
 32182                           ;lorawan.c: 1828: {
 32183                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 32184  005320  0100               	movlb	0	; () banked
 32185  005322  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32186  005324  0100               	movlb	0	; () banked
 32187  005326  6FE4               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 32188  005328  6BE5               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 32189  00532A  0100               	movlb	0	; () banked
 32190  00532C  1FE4               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 32191  00532E  1FE5               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32192  005330  4BE4               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 32193  005332  2BE5               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32194  005334  0E07               	movlw	7
 32195  005336  0100               	movlb	0	; () banked
 32196  005338  27E4               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 32197  00533A  0E00               	movlw	0
 32198  00533C  23E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32199  00533E  0E5A               	movlw	low (_loRa+90)
 32200  005340  0100               	movlb	0	; () banked
 32201  005342  25E4               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 32202  005344  6ED9               	movwf	fsr2l,c
 32203  005346  0E02               	movlw	high (_loRa+90)
 32204  005348  0100               	movlb	0	; () banked
 32205  00534A  21E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 32206  00534C  6EDA               	movwf	fsr2h,c
 32207  00534E  0100               	movlb	0	; () banked
 32208  005350  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32209  005352  C0EE  F0E6         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 32210  005356  0100               	movlb	0	; () banked
 32211  005358  6BE7               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 32212  00535A  0100               	movlb	0	; () banked
 32213  00535C  27E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 32214  00535E  0E00               	movlw	0
 32215  005360  23E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 32216  005362  0EE0               	movlw	low _macBuffer
 32217  005364  0100               	movlb	0	; () banked
 32218  005366  25E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 32219  005368  6EE9               	movwf	fsr0l,c
 32220  00536A  0E04               	movlw	high _macBuffer
 32221  00536C  0100               	movlb	0	; () banked
 32222  00536E  21E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 32223  005370  6EEA               	movwf	fsr0h,c
 32224  005372  CFDF FFEF          	movff	indf2,indf0
 32225                           
 32226                           ; BSR set to: 0
 32227  005376  0100               	movlb	0	; () banked
 32228  005378  2BED               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 32229  00537A  D7CD               	goto	l16815
 32230  00537C                     l16825:
 32231                           
 32232                           ; BSR set to: 0
 32233                           ;lorawan.c: 1830: }
 32234                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 32235  00537C  0100               	movlb	0	; () banked
 32236  00537E  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32237  005380  0F08               	addlw	8
 32238  005382  0100               	movlb	0	; () banked
 32239  005384  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32240                           
 32241                           ; BSR set to: 0
 32242                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 32243  005386  0EFF               	movlw	255
 32244  005388  0100               	movlb	0	; () banked
 32245  00538A  6FB2               	movwf	(Random@max+1)& (0+255),b
 32246  00538C  69B1               	setf	Random@max& (0+255),b
 32247  00538E  ECDD  F04F         	call	_Random	;wreg free
 32248  005392  C0B1  F2D2         	movff	?_Random,_loRa+210
 32249  005396  C0B2  F2D3         	movff	?_Random+1,_loRa+211
 32250                           
 32251                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 32252  00539A  0100               	movlb	0	; () banked
 32253  00539C  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32254  00539E  0D01               	mullw	1
 32255  0053A0  0EE0               	movlw	low _macBuffer
 32256  0053A2  24F3               	addwf	prodl,w,c
 32257  0053A4  0100               	movlb	0	; () banked
 32258  0053A6  6F64               	movwf	memcpy@d1& (0+255),b
 32259  0053A8  0E04               	movlw	high _macBuffer
 32260  0053AA  20F4               	addwfc	prodh,w,c
 32261  0053AC  0100               	movlb	0	; () banked
 32262  0053AE  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32263  0053B0  0ED2               	movlw	low (_loRa+210)
 32264  0053B2  0100               	movlb	0	; () banked
 32265  0053B4  6F66               	movwf	memcpy@s1& (0+255),b
 32266  0053B6  0E02               	movlw	high (_loRa+210)
 32267  0053B8  0100               	movlb	0	; () banked
 32268  0053BA  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32269  0053BC  0E00               	movlw	0
 32270  0053BE  0100               	movlb	0	; () banked
 32271  0053C0  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32272  0053C2  0E02               	movlw	2
 32273  0053C4  6F68               	movwf	memcpy@n& (0+255),b
 32274  0053C6  ECCA  F048         	call	_memcpy	;wreg free
 32275                           
 32276                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 32277  0053CA  0100               	movlb	0	; () banked
 32278  0053CC  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32279  0053CE  0F02               	addlw	2
 32280  0053D0  0100               	movlb	0	; () banked
 32281  0053D2  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32282                           
 32283                           ; BSR set to: 0
 32284                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 32285  0053D4  0E42               	movlw	low (_loRa+66)
 32286  0053D6  0100               	movlb	0	; () banked
 32287  0053D8  6FDB               	movwf	ComputeMic@key& (0+255),b
 32288  0053DA  0E02               	movlw	high (_loRa+66)
 32289  0053DC  0100               	movlb	0	; () banked
 32290  0053DE  6FDC               	movwf	(ComputeMic@key+1)& (0+255),b
 32291  0053E0  0EE0               	movlw	low _macBuffer
 32292  0053E2  0100               	movlb	0	; () banked
 32293  0053E4  6FDD               	movwf	ComputeMic@buffer& (0+255),b
 32294  0053E6  0E04               	movlw	high _macBuffer
 32295  0053E8  0100               	movlb	0	; () banked
 32296  0053EA  6FDE               	movwf	(ComputeMic@buffer+1)& (0+255),b
 32297  0053EC  C0EE  F0DF         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 32298  0053F0  EC2E  F047         	call	_ComputeMic	;wreg free
 32299  0053F4  C0DB  F0E8         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 32300  0053F8  C0DC  F0E9         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 32301  0053FC  C0DD  F0EA         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 32302  005400  C0DE  F0EB         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 32303                           
 32304                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 32305  005404  0100               	movlb	0	; () banked
 32306  005406  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32307  005408  0D01               	mullw	1
 32308  00540A  0EE0               	movlw	low _macBuffer
 32309  00540C  24F3               	addwf	prodl,w,c
 32310  00540E  0100               	movlb	0	; () banked
 32311  005410  6F64               	movwf	memcpy@d1& (0+255),b
 32312  005412  0E04               	movlw	high _macBuffer
 32313  005414  20F4               	addwfc	prodh,w,c
 32314  005416  0100               	movlb	0	; () banked
 32315  005418  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32316  00541A  0EE8               	movlw	low PrepareJoinRequestFrame@mic
 32317  00541C  0100               	movlb	0	; () banked
 32318  00541E  6F66               	movwf	memcpy@s1& (0+255),b
 32319  005420  0E00               	movlw	high PrepareJoinRequestFrame@mic
 32320  005422  0100               	movlb	0	; () banked
 32321  005424  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32322  005426  0E00               	movlw	0
 32323  005428  0100               	movlb	0	; () banked
 32324  00542A  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32325  00542C  0E04               	movlw	4
 32326  00542E  6F68               	movwf	memcpy@n& (0+255),b
 32327  005430  ECCA  F048         	call	_memcpy	;wreg free
 32328                           
 32329                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 32330  005434  0100               	movlb	0	; () banked
 32331  005436  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32332  005438  0F04               	addlw	4
 32333  00543A  0100               	movlb	0	; () banked
 32334  00543C  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32335                           
 32336                           ; BSR set to: 0
 32337                           ;lorawan.c: 1842: return bufferIndex;
 32338  00543E  0100               	movlb	0	; () banked
 32339  005440  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32340  005442  0012               	return	
 32341  005444                     __end_of_PrepareJoinRequestFrame:
 32342                           	opt stack 0
 32343                           tosu	equ	0xFFF
 32344                           tosh	equ	0xFFE
 32345                           tosl	equ	0xFFD
 32346                           pclath	equ	0xFFA
 32347                           tblptru	equ	0xFF8
 32348                           tblptrh	equ	0xFF7
 32349                           tblptrl	equ	0xFF6
 32350                           tablat	equ	0xFF5
 32351                           prodh	equ	0xFF4
 32352                           prodl	equ	0xFF3
 32353                           intcon	equ	0xFF2
 32354                           intcon2	equ	0xFF1
 32355                           intcon3	equ	0xFF0
 32356                           indf0	equ	0xFEF
 32357                           postinc0	equ	0xFEE
 32358                           fsr0h	equ	0xFEA
 32359                           fsr0l	equ	0xFE9
 32360                           wreg	equ	0xFE8
 32361                           postinc1	equ	0xFE6
 32362                           postdec1	equ	0xFE5
 32363                           plusw1	equ	0xFE3
 32364                           fsr1h	equ	0xFE2
 32365                           fsr1l	equ	0xFE1
 32366                           indf2	equ	0xFDF
 32367                           postinc2	equ	0xFDE
 32368                           postdec2	equ	0xFDD
 32369                           plusw2	equ	0xFDB
 32370                           fsr2h	equ	0xFDA
 32371                           fsr2l	equ	0xFD9
 32372                           status	equ	0xFD8
 32373                           
 32374 ;; *************** function _Random *****************
 32375 ;; Defined at:
 32376 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32377 ;; Parameters:    Size  Location     Type
 32378 ;;  max             2   81[BANK0 ] unsigned int 
 32379 ;; Auto vars:     Size  Location     Type
 32380 ;;		None
 32381 ;; Return value:  Size  Location     Type
 32382 ;;                  2   81[BANK0 ] unsigned int 
 32383 ;; Registers used:
 32384 ;;		wreg, status,2, status,0, cstack
 32385 ;; Tracked objects:
 32386 ;;		On entry : 0/0
 32387 ;;		On exit  : 0/0
 32388 ;;		Unchanged: 0/0
 32389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32390 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32393 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32394 ;;Total ram usage:        2 bytes
 32395 ;; Hardware stack levels used:    1
 32396 ;; Hardware stack levels required when called:    9
 32397 ;; This function calls:
 32398 ;;		___lwmod
 32399 ;;		_rand
 32400 ;; This function is called by:
 32401 ;;		_SearchAvailableChannel
 32402 ;;		_PrepareJoinRequestFrame
 32403 ;; This function uses a non-reentrant model
 32404 ;;
 32405                           
 32406                           	psect	text147
 32407  009FBA                     __ptext147:
 32408                           	opt stack 0
 32409  009FBA                     _Random:
 32410                           	opt stack 17
 32411                           
 32412                           ;lorawan.c: 1118: return (rand () % max);
 32413                           
 32414                           ; BSR set to: 0
 32415                           ;incstack = 0
 32416  009FBA  EC5A  F049         	call	_rand	;wreg free
 32417  009FBE  C0AA  F0AC         	movff	?_rand,___lwmod@dividend
 32418  009FC2  C0AB  F0AD         	movff	?_rand+1,___lwmod@dividend+1
 32419  009FC6  C0B1  F0AE         	movff	Random@max,___lwmod@divisor
 32420  009FCA  C0B2  F0AF         	movff	Random@max+1,___lwmod@divisor+1
 32421  009FCE  EC99  F048         	call	___lwmod	;wreg free
 32422  009FD2  C0AC  F0B1         	movff	?___lwmod,?_Random
 32423  009FD6  C0AD  F0B2         	movff	?___lwmod+1,?_Random+1
 32424  009FDA  0012               	return	
 32425  009FDC                     __end_of_Random:
 32426                           	opt stack 0
 32427                           tosu	equ	0xFFF
 32428                           tosh	equ	0xFFE
 32429                           tosl	equ	0xFFD
 32430                           pclath	equ	0xFFA
 32431                           tblptru	equ	0xFF8
 32432                           tblptrh	equ	0xFF7
 32433                           tblptrl	equ	0xFF6
 32434                           tablat	equ	0xFF5
 32435                           prodh	equ	0xFF4
 32436                           prodl	equ	0xFF3
 32437                           intcon	equ	0xFF2
 32438                           intcon2	equ	0xFF1
 32439                           intcon3	equ	0xFF0
 32440                           indf0	equ	0xFEF
 32441                           postinc0	equ	0xFEE
 32442                           fsr0h	equ	0xFEA
 32443                           fsr0l	equ	0xFE9
 32444                           wreg	equ	0xFE8
 32445                           postinc1	equ	0xFE6
 32446                           postdec1	equ	0xFE5
 32447                           plusw1	equ	0xFE3
 32448                           fsr1h	equ	0xFE2
 32449                           fsr1l	equ	0xFE1
 32450                           indf2	equ	0xFDF
 32451                           postinc2	equ	0xFDE
 32452                           postdec2	equ	0xFDD
 32453                           plusw2	equ	0xFDB
 32454                           fsr2h	equ	0xFDA
 32455                           fsr2l	equ	0xFD9
 32456                           status	equ	0xFD8
 32457                           
 32458 ;; *************** function _rand *****************
 32459 ;; Defined at:
 32460 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 32461 ;; Parameters:    Size  Location     Type
 32462 ;;		None
 32463 ;; Auto vars:     Size  Location     Type
 32464 ;;		None
 32465 ;; Return value:  Size  Location     Type
 32466 ;;                  2   74[BANK0 ] int 
 32467 ;; Registers used:
 32468 ;;		wreg, status,2, status,0, cstack
 32469 ;; Tracked objects:
 32470 ;;		On entry : 0/0
 32471 ;;		On exit  : 0/0
 32472 ;;		Unchanged: 0/0
 32473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32474 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32477 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32478 ;;Total ram usage:        2 bytes
 32479 ;; Hardware stack levels used:    1
 32480 ;; Hardware stack levels required when called:    8
 32481 ;; This function calls:
 32482 ;;		___lmul
 32483 ;; This function is called by:
 32484 ;;		_Random
 32485 ;; This function uses a non-reentrant model
 32486 ;;
 32487                           
 32488                           	psect	text148
 32489  0092B4                     __ptext148:
 32490                           	opt stack 0
 32491  0092B4                     _rand:
 32492                           	opt stack 17
 32493                           
 32494                           ;incstack = 0
 32495  0092B4  C1D0  F09E         	movff	_randx,___lmul@multiplier
 32496  0092B8  C1D1  F09F         	movff	_randx+1,___lmul@multiplier+1
 32497  0092BC  C1D2  F0A0         	movff	_randx+2,___lmul@multiplier+2
 32498  0092C0  C1D3  F0A1         	movff	_randx+3,___lmul@multiplier+3
 32499  0092C4  0E6D               	movlw	109
 32500  0092C6  0100               	movlb	0	; () banked
 32501  0092C8  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 32502  0092CA  0E4E               	movlw	78
 32503  0092CC  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32504  0092CE  0EC6               	movlw	198
 32505  0092D0  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32506  0092D2  0E41               	movlw	65
 32507  0092D4  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32508  0092D6  EC82  F046         	call	___lmul	;wreg free
 32509  0092DA  C09E  F1D0         	movff	?___lmul,_randx
 32510  0092DE  C09F  F1D1         	movff	?___lmul+1,_randx+1
 32511  0092E2  C0A0  F1D2         	movff	?___lmul+2,_randx+2
 32512  0092E6  C0A1  F1D3         	movff	?___lmul+3,_randx+3
 32513  0092EA  0E39               	movlw	57
 32514  0092EC  0101               	movlb	1	; () banked
 32515  0092EE  27D0               	addwf	_randx& (0+255),f,b
 32516  0092F0  0E30               	movlw	48
 32517  0092F2  23D1               	addwfc	(_randx+1)& (0+255),f,b
 32518  0092F4  0E00               	movlw	0
 32519  0092F6  23D2               	addwfc	(_randx+2)& (0+255),f,b
 32520  0092F8  0E00               	movlw	0
 32521  0092FA  23D3               	addwfc	(_randx+3)& (0+255),f,b
 32522                           
 32523                           ; BSR set to: 1
 32524  0092FC  0EFF               	movlw	255
 32525  0092FE  0101               	movlb	1	; () banked
 32526  009300  15D2               	andwf	(_randx+2)& (0+255),w,b
 32527  009302  0100               	movlb	0	; () banked
 32528  009304  6FAA               	movwf	?_rand& (0+255),b
 32529  009306  0E7F               	movlw	127
 32530  009308  0101               	movlb	1	; () banked
 32531  00930A  15D3               	andwf	(_randx+3)& (0+255),w,b
 32532  00930C  0100               	movlb	0	; () banked
 32533  00930E  6FAB               	movwf	(?_rand+1)& (0+255),b
 32534  009310  0012               	return	
 32535  009312                     __end_of_rand:
 32536                           	opt stack 0
 32537                           tosu	equ	0xFFF
 32538                           tosh	equ	0xFFE
 32539                           tosl	equ	0xFFD
 32540                           pclath	equ	0xFFA
 32541                           tblptru	equ	0xFF8
 32542                           tblptrh	equ	0xFF7
 32543                           tblptrl	equ	0xFF6
 32544                           tablat	equ	0xFF5
 32545                           prodh	equ	0xFF4
 32546                           prodl	equ	0xFF3
 32547                           intcon	equ	0xFF2
 32548                           intcon2	equ	0xFF1
 32549                           intcon3	equ	0xFF0
 32550                           indf0	equ	0xFEF
 32551                           postinc0	equ	0xFEE
 32552                           fsr0h	equ	0xFEA
 32553                           fsr0l	equ	0xFE9
 32554                           wreg	equ	0xFE8
 32555                           postinc1	equ	0xFE6
 32556                           postdec1	equ	0xFE5
 32557                           plusw1	equ	0xFE3
 32558                           fsr1h	equ	0xFE2
 32559                           fsr1l	equ	0xFE1
 32560                           indf2	equ	0xFDF
 32561                           postinc2	equ	0xFDE
 32562                           postdec2	equ	0xFDD
 32563                           plusw2	equ	0xFDB
 32564                           fsr2h	equ	0xFDA
 32565                           fsr2l	equ	0xFD9
 32566                           status	equ	0xFD8
 32567                           
 32568 ;; *************** function ___lwmod *****************
 32569 ;; Defined at:
 32570 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 32571 ;; Parameters:    Size  Location     Type
 32572 ;;  dividend        2   76[BANK0 ] unsigned int 
 32573 ;;  divisor         2   78[BANK0 ] unsigned int 
 32574 ;; Auto vars:     Size  Location     Type
 32575 ;;  counter         1   80[BANK0 ] unsigned char 
 32576 ;; Return value:  Size  Location     Type
 32577 ;;                  2   76[BANK0 ] unsigned int 
 32578 ;; Registers used:
 32579 ;;		wreg, status,2, status,0
 32580 ;; Tracked objects:
 32581 ;;		On entry : 0/0
 32582 ;;		On exit  : 0/0
 32583 ;;		Unchanged: 0/0
 32584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32588 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32589 ;;Total ram usage:        5 bytes
 32590 ;; Hardware stack levels used:    1
 32591 ;; Hardware stack levels required when called:    7
 32592 ;; This function calls:
 32593 ;;		Nothing
 32594 ;; This function is called by:
 32595 ;;		_Random
 32596 ;; This function uses a non-reentrant model
 32597 ;;
 32598                           
 32599                           	psect	text149
 32600  009132                     __ptext149:
 32601                           	opt stack 0
 32602  009132                     ___lwmod:
 32603                           	opt stack 18
 32604                           
 32605                           ; BSR set to: 0
 32606                           ;incstack = 0
 32607  009132  0100               	movlb	0	; () banked
 32608  009134  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32609  009136  0100               	movlb	0	; () banked
 32610  009138  11AF               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 32611  00913A  B4D8               	btfsc	status,2,c
 32612  00913C  D026               	goto	l3102
 32613                           
 32614                           ; BSR set to: 0
 32615  00913E  0E01               	movlw	1
 32616  009140  0100               	movlb	0	; () banked
 32617  009142  6FB0               	movwf	___lwmod@counter& (0+255),b
 32618  009144  D006               	goto	l13639
 32619  009146                     l13637:
 32620                           
 32621                           ; BSR set to: 0
 32622  009146  0100               	movlb	0	; () banked
 32623  009148  90D8               	bcf	status,0,c
 32624  00914A  37AE               	rlcf	___lwmod@divisor& (0+255),f,b
 32625  00914C  37AF               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 32626  00914E  0100               	movlb	0	; () banked
 32627  009150  2BB0               	incf	___lwmod@counter& (0+255),f,b
 32628  009152                     l13639:
 32629                           
 32630                           ; BSR set to: 0
 32631  009152  0100               	movlb	0	; () banked
 32632  009154  AFAF               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 32633  009156  D7F7               	goto	l13637
 32634  009158                     l13641:
 32635                           
 32636                           ; BSR set to: 0
 32637  009158  0100               	movlb	0	; () banked
 32638  00915A  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32639  00915C  0100               	movlb	0	; () banked
 32640  00915E  5DAC               	subwf	___lwmod@dividend& (0+255),w,b
 32641  009160  0100               	movlb	0	; () banked
 32642  009162  51AF               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32643  009164  0100               	movlb	0	; () banked
 32644  009166  59AD               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 32645  009168  A0D8               	btfss	status,0,c
 32646  00916A  D008               	goto	l13645
 32647                           
 32648                           ; BSR set to: 0
 32649  00916C  0100               	movlb	0	; () banked
 32650  00916E  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32651  009170  0100               	movlb	0	; () banked
 32652  009172  5FAC               	subwf	___lwmod@dividend& (0+255),f,b
 32653  009174  0100               	movlb	0	; () banked
 32654  009176  51AF               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32655  009178  0100               	movlb	0	; () banked
 32656  00917A  5BAD               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 32657  00917C                     l13645:
 32658                           
 32659                           ; BSR set to: 0
 32660  00917C  0100               	movlb	0	; () banked
 32661  00917E  90D8               	bcf	status,0,c
 32662  009180  33AF               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 32663  009182  33AE               	rrcf	___lwmod@divisor& (0+255),f,b
 32664                           
 32665                           ; BSR set to: 0
 32666  009184  0100               	movlb	0	; () banked
 32667  009186  2FB0               	decfsz	___lwmod@counter& (0+255),f,b
 32668  009188  D7E7               	goto	l13641
 32669  00918A                     l3102:
 32670                           
 32671                           ; BSR set to: 0
 32672  00918A  C0AC  F0AC         	movff	___lwmod@dividend,?___lwmod
 32673  00918E  C0AD  F0AD         	movff	___lwmod@dividend+1,?___lwmod+1
 32674                           
 32675                           ; BSR set to: 0
 32676  009192  0012               	return		;funcret
 32677  009194                     __end_of___lwmod:
 32678                           	opt stack 0
 32679                           tosu	equ	0xFFF
 32680                           tosh	equ	0xFFE
 32681                           tosl	equ	0xFFD
 32682                           pclath	equ	0xFFA
 32683                           tblptru	equ	0xFF8
 32684                           tblptrh	equ	0xFF7
 32685                           tblptrl	equ	0xFF6
 32686                           tablat	equ	0xFF5
 32687                           prodh	equ	0xFF4
 32688                           prodl	equ	0xFF3
 32689                           intcon	equ	0xFF2
 32690                           intcon2	equ	0xFF1
 32691                           intcon3	equ	0xFF0
 32692                           indf0	equ	0xFEF
 32693                           postinc0	equ	0xFEE
 32694                           fsr0h	equ	0xFEA
 32695                           fsr0l	equ	0xFE9
 32696                           wreg	equ	0xFE8
 32697                           postinc1	equ	0xFE6
 32698                           postdec1	equ	0xFE5
 32699                           plusw1	equ	0xFE3
 32700                           fsr1h	equ	0xFE2
 32701                           fsr1l	equ	0xFE1
 32702                           indf2	equ	0xFDF
 32703                           postinc2	equ	0xFDE
 32704                           postdec2	equ	0xFDD
 32705                           plusw2	equ	0xFDB
 32706                           fsr2h	equ	0xFDA
 32707                           fsr2l	equ	0xFD9
 32708                           status	equ	0xFD8
 32709                           
 32710 ;; *************** function _ComputeMic *****************
 32711 ;; Defined at:
 32712 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32713 ;; Parameters:    Size  Location     Type
 32714 ;;  key             2  123[BANK0 ] PTR unsigned char 
 32715 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32716 ;;  buffer          2  125[BANK0 ] PTR unsigned char 
 32717 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32718 ;;  bufferLength    1  127[BANK0 ] unsigned char 
 32719 ;; Auto vars:     Size  Location     Type
 32720 ;;  mic             4  128[BANK0 ] unsigned long 
 32721 ;; Return value:  Size  Location     Type
 32722 ;;                  4  123[BANK0 ] unsigned long 
 32723 ;; Registers used:
 32724 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32725 ;; Tracked objects:
 32726 ;;		On entry : 0/0
 32727 ;;		On exit  : 0/0
 32728 ;;		Unchanged: 0/0
 32729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32730 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32731 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32733 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32734 ;;Total ram usage:        9 bytes
 32735 ;; Hardware stack levels used:    1
 32736 ;; Hardware stack levels required when called:   12
 32737 ;; This function calls:
 32738 ;;		_AESCmac
 32739 ;;		_memcpy
 32740 ;; This function is called by:
 32741 ;;		_LORAWAN_RxDone
 32742 ;;		_PrepareJoinRequestFrame
 32743 ;; This function uses a non-reentrant model
 32744 ;;
 32745                           
 32746                           	psect	text150
 32747  008E5C                     __ptext150:
 32748                           	opt stack 0
 32749  008E5C                     _ComputeMic:
 32750                           	opt stack 14
 32751                           
 32752                           ;lorawan.c: 2196: uint32_t mic = 0;
 32753                           
 32754                           ; BSR set to: 0
 32755                           ;incstack = 0
 32756  008E5C  0E00               	movlw	0
 32757  008E5E  0100               	movlb	0	; () banked
 32758  008E60  6FE0               	movwf	ComputeMic@mic& (0+255),b
 32759  008E62  0E00               	movlw	0
 32760  008E64  6FE1               	movwf	(ComputeMic@mic+1)& (0+255),b
 32761  008E66  0E00               	movlw	0
 32762  008E68  6FE2               	movwf	(ComputeMic@mic+2)& (0+255),b
 32763  008E6A  0E00               	movlw	0
 32764  008E6C  6FE3               	movwf	(ComputeMic@mic+3)& (0+255),b
 32765                           
 32766                           ; BSR set to: 0
 32767                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 32768  008E6E  C0DB  F0CD         	movff	ComputeMic@key,AESCmac@key
 32769  008E72  C0DC  F0CE         	movff	ComputeMic@key+1,AESCmac@key+1
 32770  008E76  0EAA               	movlw	low _aesBuffer
 32771  008E78  0100               	movlb	0	; () banked
 32772  008E7A  6FCF               	movwf	AESCmac@output& (0+255),b
 32773  008E7C  0E01               	movlw	high _aesBuffer
 32774  008E7E  0100               	movlb	0	; () banked
 32775  008E80  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 32776  008E82  C0DD  F0D1         	movff	ComputeMic@buffer,AESCmac@input
 32777  008E86  C0DE  F0D2         	movff	ComputeMic@buffer+1,AESCmac@input+1
 32778  008E8A  C0DF  F0D3         	movff	ComputeMic@bufferLength,AESCmac@size
 32779  008E8E  EC13  F016         	call	_AESCmac	;wreg free
 32780                           
 32781                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 32782  008E92  0EE0               	movlw	low ComputeMic@mic
 32783  008E94  0100               	movlb	0	; () banked
 32784  008E96  6F64               	movwf	memcpy@d1& (0+255),b
 32785  008E98  0E00               	movlw	high ComputeMic@mic
 32786  008E9A  0100               	movlb	0	; () banked
 32787  008E9C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32788  008E9E  0EAA               	movlw	low _aesBuffer
 32789  008EA0  0100               	movlb	0	; () banked
 32790  008EA2  6F66               	movwf	memcpy@s1& (0+255),b
 32791  008EA4  0E01               	movlw	high _aesBuffer
 32792  008EA6  0100               	movlb	0	; () banked
 32793  008EA8  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32794  008EAA  0E00               	movlw	0
 32795  008EAC  0100               	movlb	0	; () banked
 32796  008EAE  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32797  008EB0  0E04               	movlw	4
 32798  008EB2  6F68               	movwf	memcpy@n& (0+255),b
 32799  008EB4  ECCA  F048         	call	_memcpy	;wreg free
 32800                           
 32801                           ;lorawan.c: 2202: return mic;
 32802  008EB8  C0E0  F0DB         	movff	ComputeMic@mic,?_ComputeMic
 32803  008EBC  C0E1  F0DC         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32804  008EC0  C0E2  F0DD         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32805  008EC4  C0E3  F0DE         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32806  008EC8  0012               	return	
 32807  008ECA                     __end_of_ComputeMic:
 32808                           	opt stack 0
 32809                           tosu	equ	0xFFF
 32810                           tosh	equ	0xFFE
 32811                           tosl	equ	0xFFD
 32812                           pclath	equ	0xFFA
 32813                           tblptru	equ	0xFF8
 32814                           tblptrh	equ	0xFF7
 32815                           tblptrl	equ	0xFF6
 32816                           tablat	equ	0xFF5
 32817                           prodh	equ	0xFF4
 32818                           prodl	equ	0xFF3
 32819                           intcon	equ	0xFF2
 32820                           intcon2	equ	0xFF1
 32821                           intcon3	equ	0xFF0
 32822                           indf0	equ	0xFEF
 32823                           postinc0	equ	0xFEE
 32824                           fsr0h	equ	0xFEA
 32825                           fsr0l	equ	0xFE9
 32826                           wreg	equ	0xFE8
 32827                           postinc1	equ	0xFE6
 32828                           postdec1	equ	0xFE5
 32829                           plusw1	equ	0xFE3
 32830                           fsr1h	equ	0xFE2
 32831                           fsr1l	equ	0xFE1
 32832                           indf2	equ	0xFDF
 32833                           postinc2	equ	0xFDE
 32834                           postdec2	equ	0xFDD
 32835                           plusw2	equ	0xFDB
 32836                           fsr2h	equ	0xFDA
 32837                           fsr2l	equ	0xFD9
 32838                           status	equ	0xFD8
 32839                           
 32840 ;; *************** function _AESCmac *****************
 32841 ;; Defined at:
 32842 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32843 ;; Parameters:    Size  Location     Type
 32844 ;;  key             2  109[BANK0 ] PTR unsigned char 
 32845 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32846 ;;  output          2  111[BANK0 ] PTR unsigned char 
 32847 ;;		 -> aesBuffer(16), 
 32848 ;;  input           2  113[BANK0 ] PTR unsigned char 
 32849 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32850 ;;  size            1  115[BANK0 ] unsigned char 
 32851 ;; Auto vars:     Size  Location     Type
 32852 ;;  x              16   80[BANK1 ] unsigned char [16]
 32853 ;;  y              16   64[BANK1 ] unsigned char [16]
 32854 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32855 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32856 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32857 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32858 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32859 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 32860 ;;  i               1  101[BANK1 ] unsigned char 
 32861 ;;  j               1  100[BANK1 ] unsigned char 
 32862 ;;  n               1   99[BANK1 ] unsigned char 
 32863 ;;  flag            1   98[BANK1 ] unsigned char 
 32864 ;; Return value:  Size  Location     Type
 32865 ;;                  1    wreg      void 
 32866 ;; Registers used:
 32867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32868 ;; Tracked objects:
 32869 ;;		On entry : 0/0
 32870 ;;		On exit  : 0/0
 32871 ;;		Unchanged: 0/0
 32872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32873 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32874 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32875 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32876 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32877 ;;Total ram usage:      116 bytes
 32878 ;; Hardware stack levels used:    1
 32879 ;; Hardware stack levels required when called:   11
 32880 ;; This function calls:
 32881 ;;		_AESEncodeLoRa
 32882 ;;		_GenerateSubkey
 32883 ;;		_memcpy
 32884 ;;		_memset
 32885 ;; This function is called by:
 32886 ;;		_LORAWAN_RxDone
 32887 ;;		_AssemblePacket
 32888 ;;		_ComputeMic
 32889 ;; This function uses a non-reentrant model
 32890 ;;
 32891                           
 32892                           	psect	text151
 32893  002C26                     __ptext151:
 32894                           	opt stack 0
 32895  002C26                     _AESCmac:
 32896                           	opt stack 16
 32897                           
 32898                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 32899                           
 32900                           ;incstack = 0
 32901  002C26  0E00               	movlw	0
 32902  002C28  0101               	movlb	1	; () banked
 32903  002C2A  6F63               	movwf	AESCmac@n& (0+255),b
 32904  002C2C  0E00               	movlw	0
 32905  002C2E  0101               	movlb	1	; () banked
 32906  002C30  6F65               	movwf	AESCmac@i& (0+255),b
 32907  002C32  0E00               	movlw	0
 32908  002C34  0101               	movlb	1	; () banked
 32909  002C36  6F64               	movwf	AESCmac@j& (0+255),b
 32910                           
 32911                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 32912  002C38  0E00               	movlw	0
 32913  002C3A  0101               	movlb	1	; () banked
 32914  002C3C  6F62               	movwf	AESCmac@flag& (0+255),b
 32915                           
 32916                           ; BSR set to: 1
 32917                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 32918                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 32919                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 32920  002C3E  0E00               	movlw	0
 32921  002C40  0101               	movlb	1	; () banked
 32922  002C42  6F60               	movwf	AESCmac@ptr& (0+255),b
 32923  002C44  0E00               	movlw	0
 32924  002C46  0101               	movlb	1	; () banked
 32925  002C48  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 32926                           
 32927                           ; BSR set to: 1
 32928                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 32929  002C4A  C0CD  F0A5         	movff	AESCmac@key,GenerateSubkey@key
 32930  002C4E  C0CE  F0A6         	movff	AESCmac@key+1,GenerateSubkey@key+1
 32931  002C52  0E10               	movlw	low AESCmac@k1
 32932  002C54  0100               	movlb	0	; () banked
 32933  002C56  6FA7               	movwf	GenerateSubkey@k1& (0+255),b
 32934  002C58  0E01               	movlw	high AESCmac@k1
 32935  002C5A  0100               	movlb	0	; () banked
 32936  002C5C  6FA8               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 32937  002C5E  0E00               	movlw	low AESCmac@k2
 32938  002C60  0100               	movlb	0	; () banked
 32939  002C62  6FA9               	movwf	GenerateSubkey@k2& (0+255),b
 32940  002C64  0E01               	movlw	high AESCmac@k2
 32941  002C66  0100               	movlb	0	; () banked
 32942  002C68  6FAA               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 32943  002C6A  ECB5  F02D         	call	_GenerateSubkey	;wreg free
 32944                           
 32945                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 32946  002C6E  0100               	movlb	0	; () banked
 32947  002C70  51D3               	movf	AESCmac@size& (0+255),w,b
 32948  002C72  0100               	movlb	0	; () banked
 32949  002C74  6FD4               	movwf	??_AESCmac& (0+255),b
 32950  002C76  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 32951  002C78  0E0F               	movlw	15
 32952  002C7A  0100               	movlb	0	; () banked
 32953  002C7C  27D4               	addwf	??_AESCmac& (0+255),f,b
 32954  002C7E  0E00               	movlw	0
 32955  002C80  23D5               	addwfc	(??_AESCmac+1)& (0+255),f,b
 32956  002C82  0E04               	movlw	4
 32957  002C84  0100               	movlb	0	; () banked
 32958  002C86  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 32959  002C88                     u16165:
 32960  002C88  0100               	movlb	0	; () banked
 32961  002C8A  35D5               	rlcf	(??_AESCmac+1)& (0+255),w,b
 32962  002C8C  33D5               	rrcf	(??_AESCmac+1)& (0+255),f,b
 32963  002C8E  33D4               	rrcf	??_AESCmac& (0+255),f,b
 32964  002C90  0100               	movlb	0	; () banked
 32965  002C92  2FD6               	decfsz	(??_AESCmac+2)& (0+255),f,b
 32966  002C94  D7F9               	goto	u16165
 32967  002C96  0100               	movlb	0	; () banked
 32968  002C98  51D4               	movf	??_AESCmac& (0+255),w,b
 32969  002C9A  0101               	movlb	1	; () banked
 32970  002C9C  6F63               	movwf	AESCmac@n& (0+255),b
 32971                           
 32972                           ; BSR set to: 1
 32973                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 32974  002C9E  0101               	movlb	1	; () banked
 32975  002CA0  5163               	movf	AESCmac@n& (0+255),w,b
 32976  002CA2  0101               	movlb	1	; () banked
 32977  002CA4  A4D8               	btfss	status,2,c
 32978  002CA6  D004               	goto	l14329
 32979                           
 32980                           ; BSR set to: 1
 32981                           ;lorawan_aes_cmac.c: 53: {
 32982                           ;lorawan_aes_cmac.c: 54: n = 1;
 32983  002CA8  0E01               	movlw	1
 32984  002CAA  0101               	movlb	1	; () banked
 32985  002CAC  6F63               	movwf	AESCmac@n& (0+255),b
 32986  002CAE  D009               	goto	u16180
 32987  002CB0                     l14329:
 32988                           
 32989                           ; BSR set to: 1
 32990                           ;lorawan_aes_cmac.c: 57: else
 32991                           ;lorawan_aes_cmac.c: 58: {
 32992                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 32993  002CB0  C0D3  F0D4         	movff	AESCmac@size,??_AESCmac
 32994  002CB4  0E0F               	movlw	15
 32995  002CB6  0100               	movlb	0	; () banked
 32996  002CB8  17D4               	andwf	??_AESCmac& (0+255),f,b
 32997  002CBA  A4D8               	btfss	status,2,c
 32998  002CBC  D002               	goto	u16180
 32999  002CBE  0E01               	movlw	1
 33000  002CC0  D001               	goto	u16190
 33001  002CC2                     u16180:
 33002  002CC2  0E00               	movlw	0
 33003  002CC4                     u16190:
 33004  002CC4  0101               	movlb	1	; () banked
 33005  002CC6  6F62               	movwf	AESCmac@flag& (0+255),b
 33006                           
 33007                           ; BSR set to: 1
 33008                           ;lorawan_aes_cmac.c: 60: }
 33009                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 33010  002CC8  0101               	movlb	1	; () banked
 33011  002CCA  0562               	decf	AESCmac@flag& (0+255),w,b
 33012  002CCC  A4D8               	btfss	status,2,c
 33013  002CCE  D057               	goto	l14343
 33014                           
 33015                           ; BSR set to: 1
 33016                           ;lorawan_aes_cmac.c: 63: {
 33017                           ;lorawan_aes_cmac.c: 64: j = 0;
 33018  002CD0  0E00               	movlw	0
 33019  002CD2  0101               	movlb	1	; () banked
 33020  002CD4  6F64               	movwf	AESCmac@j& (0+255),b
 33021                           
 33022                           ; BSR set to: 1
 33023                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 33024  002CD6  0101               	movlb	1	; () banked
 33025  002CD8  3963               	swapf	AESCmac@n& (0+255),w,b
 33026  002CDA  0BF0               	andlw	240
 33027  002CDC  0FF0               	addlw	240
 33028  002CDE  0101               	movlb	1	; () banked
 33029  002CE0  6F65               	movwf	AESCmac@i& (0+255),b
 33030  002CE2  D028               	goto	l14341
 33031  002CE4                     l14335:
 33032                           
 33033                           ;lorawan_aes_cmac.c: 66: {
 33034                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 33035  002CE4  0101               	movlb	1	; () banked
 33036  002CE6  5164               	movf	AESCmac@j& (0+255),w,b
 33037  002CE8  0D01               	mullw	1
 33038  002CEA  0E20               	movlw	low AESCmac@mLast
 33039  002CEC  24F3               	addwf	prodl,w,c
 33040  002CEE  6ED9               	movwf	fsr2l,c
 33041  002CF0  0E01               	movlw	high AESCmac@mLast
 33042  002CF2  20F4               	addwfc	prodh,w,c
 33043  002CF4  6EDA               	movwf	fsr2h,c
 33044  002CF6  0101               	movlb	1	; () banked
 33045  002CF8  5164               	movf	AESCmac@j& (0+255),w,b
 33046  002CFA  0D01               	mullw	1
 33047  002CFC  0E10               	movlw	low AESCmac@k1
 33048  002CFE  24F3               	addwf	prodl,w,c
 33049  002D00  6EE9               	movwf	fsr0l,c
 33050  002D02  0E01               	movlw	high AESCmac@k1
 33051  002D04  20F4               	addwfc	prodh,w,c
 33052  002D06  6EEA               	movwf	fsr0h,c
 33053  002D08  50EF               	movf	indf0,w,c
 33054  002D0A  0100               	movlb	0	; () banked
 33055  002D0C  6FD4               	movwf	??_AESCmac& (0+255),b
 33056  002D0E  0101               	movlb	1	; () banked
 33057  002D10  5165               	movf	AESCmac@i& (0+255),w,b
 33058  002D12  0D01               	mullw	1
 33059  002D14  50F3               	movf	prodl,w,c
 33060  002D16  0100               	movlb	0	; () banked
 33061  002D18  25D1               	addwf	AESCmac@input& (0+255),w,b
 33062  002D1A  6EE9               	movwf	fsr0l,c
 33063  002D1C  50F4               	movf	prodh,w,c
 33064  002D1E  0100               	movlb	0	; () banked
 33065  002D20  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33066  002D22  6EEA               	movwf	fsr0h,c
 33067  002D24  50EF               	movf	indf0,w,c
 33068  002D26  0100               	movlb	0	; () banked
 33069  002D28  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33070  002D2A  6EDF               	movwf	indf2,c
 33071                           
 33072                           ; BSR set to: 0
 33073                           ;lorawan_aes_cmac.c: 68: j++;
 33074  002D2C  0101               	movlb	1	; () banked
 33075  002D2E  2B64               	incf	AESCmac@j& (0+255),f,b
 33076                           
 33077                           ; BSR set to: 1
 33078  002D30  0101               	movlb	1	; () banked
 33079  002D32  2B65               	incf	AESCmac@i& (0+255),f,b
 33080  002D34                     l14341:
 33081                           
 33082                           ; BSR set to: 1
 33083  002D34  0101               	movlb	1	; () banked
 33084  002D36  5163               	movf	AESCmac@n& (0+255),w,b
 33085  002D38  0100               	movlb	0	; () banked
 33086  002D3A  6FD4               	movwf	??_AESCmac& (0+255),b
 33087  002D3C  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33088  002D3E  0100               	movlb	0	; () banked
 33089  002D40  3BD4               	swapf	??_AESCmac& (0+255),f,b
 33090  002D42  3BD5               	swapf	(??_AESCmac+1)& (0+255),f,b
 33091  002D44  0EF0               	movlw	240
 33092  002D46  17D5               	andwf	(??_AESCmac+1)& (0+255),f,b
 33093  002D48  51D4               	movf	??_AESCmac& (0+255),w,b
 33094  002D4A  0B0F               	andlw	15
 33095  002D4C  13D5               	iorwf	(??_AESCmac+1)& (0+255),f,b
 33096  002D4E  0EF0               	movlw	240
 33097  002D50  17D4               	andwf	??_AESCmac& (0+255),f,b
 33098  002D52  0101               	movlb	1	; () banked
 33099  002D54  5165               	movf	AESCmac@i& (0+255),w,b
 33100  002D56  0100               	movlb	0	; () banked
 33101  002D58  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33102  002D5A  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33103  002D5C  0100               	movlb	0	; () banked
 33104  002D5E  51D4               	movf	??_AESCmac& (0+255),w,b
 33105  002D60  0100               	movlb	0	; () banked
 33106  002D62  5DD6               	subwf	(??_AESCmac+2)& (0+255),w,b
 33107  002D64  0100               	movlb	0	; () banked
 33108  002D66  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33109  002D68  0A80               	xorlw	128
 33110  002D6A  0100               	movlb	0	; () banked
 33111  002D6C  6FD8               	movwf	(??_AESCmac+4)& (0+255),b
 33112  002D6E  0100               	movlb	0	; () banked
 33113  002D70  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33114  002D72  0A80               	xorlw	128
 33115  002D74  0100               	movlb	0	; () banked
 33116  002D76  59D8               	subwfb	(??_AESCmac+4)& (0+255),w,b
 33117  002D78  B0D8               	btfsc	status,0,c
 33118  002D7A  D097               	goto	l14377
 33119  002D7C  D7B3               	goto	l14335
 33120  002D7E                     l14343:
 33121                           
 33122                           ;lorawan_aes_cmac.c: 71: else
 33123                           ;lorawan_aes_cmac.c: 72: {
 33124                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 33125  002D7E  0100               	movlb	0	; () banked
 33126  002D80  51D3               	movf	AESCmac@size& (0+255),w,b
 33127  002D82  0B0F               	andlw	15
 33128  002D84  0100               	movlb	0	; () banked
 33129  002D86  6FD4               	movwf	??_AESCmac& (0+255),b
 33130  002D88  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33131  002D8A  0100               	movlb	0	; () banked
 33132  002D8C  1FD4               	comf	??_AESCmac& (0+255),f,b
 33133  002D8E  1FD5               	comf	(??_AESCmac+1)& (0+255),f,b
 33134  002D90  4BD4               	infsnz	??_AESCmac& (0+255),f,b
 33135  002D92  2BD5               	incf	(??_AESCmac+1)& (0+255),f,b
 33136  002D94  0100               	movlb	0	; () banked
 33137  002D96  51D3               	movf	AESCmac@size& (0+255),w,b
 33138  002D98  0100               	movlb	0	; () banked
 33139  002D9A  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33140  002D9C  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33141  002D9E  0100               	movlb	0	; () banked
 33142  002DA0  51D4               	movf	??_AESCmac& (0+255),w,b
 33143  002DA2  0100               	movlb	0	; () banked
 33144  002DA4  27D6               	addwf	(??_AESCmac+2)& (0+255),f,b
 33145  002DA6  0100               	movlb	0	; () banked
 33146  002DA8  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33147  002DAA  0100               	movlb	0	; () banked
 33148  002DAC  23D7               	addwfc	(??_AESCmac+3)& (0+255),f,b
 33149  002DAE  0100               	movlb	0	; () banked
 33150  002DB0  51D6               	movf	(??_AESCmac+2)& (0+255),w,b
 33151  002DB2  0100               	movlb	0	; () banked
 33152  002DB4  25D1               	addwf	AESCmac@input& (0+255),w,b
 33153  002DB6  0101               	movlb	1	; () banked
 33154  002DB8  6F60               	movwf	AESCmac@ptr& (0+255),b
 33155  002DBA  0100               	movlb	0	; () banked
 33156  002DBC  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33157  002DBE  0100               	movlb	0	; () banked
 33158  002DC0  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33159  002DC2  0101               	movlb	1	; () banked
 33160  002DC4  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 33161                           
 33162                           ; BSR set to: 1
 33163                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 33164  002DC6  0E00               	movlw	0
 33165  002DC8  0101               	movlb	1	; () banked
 33166  002DCA  6F65               	movwf	AESCmac@i& (0+255),b
 33167  002DCC                     l14347:
 33168                           
 33169                           ; BSR set to: 1
 33170  002DCC  0E0F               	movlw	15
 33171  002DCE  0101               	movlb	1	; () banked
 33172  002DD0  6565               	cpfsgt	AESCmac@i& (0+255),b
 33173  002DD2  D001               	goto	l14351
 33174  002DD4  D03D               	goto	l14365
 33175  002DD6                     l14351:
 33176                           
 33177                           ; BSR set to: 1
 33178                           ;lorawan_aes_cmac.c: 76: {
 33179                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 33180  002DD6  0100               	movlb	0	; () banked
 33181  002DD8  51D3               	movf	AESCmac@size& (0+255),w,b
 33182  002DDA  0B0F               	andlw	15
 33183  002DDC  0101               	movlb	1	; () banked
 33184  002DDE  6165               	cpfslt	AESCmac@i& (0+255),b
 33185  002DE0  D017               	goto	l14355
 33186                           
 33187                           ; BSR set to: 1
 33188                           ;lorawan_aes_cmac.c: 78: {
 33189                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 33190  002DE2  0101               	movlb	1	; () banked
 33191  002DE4  5165               	movf	AESCmac@i& (0+255),w,b
 33192  002DE6  0D01               	mullw	1
 33193  002DE8  50F3               	movf	prodl,w,c
 33194  002DEA  0101               	movlb	1	; () banked
 33195  002DEC  2560               	addwf	AESCmac@ptr& (0+255),w,b
 33196  002DEE  6ED9               	movwf	fsr2l,c
 33197  002DF0  50F4               	movf	prodh,w,c
 33198  002DF2  0101               	movlb	1	; () banked
 33199  002DF4  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 33200  002DF6  6EDA               	movwf	fsr2h,c
 33201  002DF8  0101               	movlb	1	; () banked
 33202  002DFA  5165               	movf	AESCmac@i& (0+255),w,b
 33203  002DFC  0D01               	mullw	1
 33204  002DFE  0E30               	movlw	low AESCmac@padded
 33205  002E00  24F3               	addwf	prodl,w,c
 33206  002E02  6EE9               	movwf	fsr0l,c
 33207  002E04  0E01               	movlw	high AESCmac@padded
 33208  002E06  20F4               	addwfc	prodh,w,c
 33209  002E08  6EEA               	movwf	fsr0h,c
 33210  002E0A  CFDF FFEF          	movff	indf2,indf0
 33211                           
 33212                           ;lorawan_aes_cmac.c: 80: }
 33213  002E0E  D01D               	goto	l14361
 33214  002E10                     l14355:
 33215                           
 33216                           ; BSR set to: 1
 33217                           ;lorawan_aes_cmac.c: 81: else
 33218                           ;lorawan_aes_cmac.c: 82: {
 33219                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 33220  002E10  0100               	movlb	0	; () banked
 33221  002E12  51D3               	movf	AESCmac@size& (0+255),w,b
 33222  002E14  0B0F               	andlw	15
 33223  002E16  0101               	movlb	1	; () banked
 33224  002E18  1965               	xorwf	AESCmac@i& (0+255),w,b
 33225  002E1A  A4D8               	btfss	status,2,c
 33226  002E1C  D00B               	goto	l14359
 33227                           
 33228                           ; BSR set to: 1
 33229                           ;lorawan_aes_cmac.c: 84: {
 33230                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 33231  002E1E  0101               	movlb	1	; () banked
 33232  002E20  5165               	movf	AESCmac@i& (0+255),w,b
 33233  002E22  0D01               	mullw	1
 33234  002E24  0E30               	movlw	low AESCmac@padded
 33235  002E26  24F3               	addwf	prodl,w,c
 33236  002E28  6ED9               	movwf	fsr2l,c
 33237  002E2A  0E01               	movlw	high AESCmac@padded
 33238  002E2C  20F4               	addwfc	prodh,w,c
 33239  002E2E  6EDA               	movwf	fsr2h,c
 33240  002E30  0E80               	movlw	128
 33241  002E32  D00A               	goto	L22
 33242  002E34                     l14359:
 33243                           
 33244                           ; BSR set to: 1
 33245                           ;lorawan_aes_cmac.c: 87: else
 33246                           ;lorawan_aes_cmac.c: 88: {
 33247                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 33248  002E34  0101               	movlb	1	; () banked
 33249  002E36  5165               	movf	AESCmac@i& (0+255),w,b
 33250  002E38  0D01               	mullw	1
 33251  002E3A  0E30               	movlw	low AESCmac@padded
 33252  002E3C  24F3               	addwf	prodl,w,c
 33253  002E3E  6ED9               	movwf	fsr2l,c
 33254  002E40  0E01               	movlw	high AESCmac@padded
 33255  002E42  20F4               	addwfc	prodh,w,c
 33256  002E44  6EDA               	movwf	fsr2h,c
 33257  002E46  0E00               	movlw	0
 33258  002E48                     L22:
 33259  002E48  6EDF               	movwf	indf2,c
 33260  002E4A                     l14361:
 33261                           
 33262                           ; BSR set to: 1
 33263  002E4A  0101               	movlb	1	; () banked
 33264  002E4C  2B65               	incf	AESCmac@i& (0+255),f,b
 33265  002E4E  D7BE               	goto	l14347
 33266  002E50                     l14365:
 33267                           
 33268                           ; BSR set to: 1
 33269                           ;lorawan_aes_cmac.c: 90: }
 33270                           ;lorawan_aes_cmac.c: 91: }
 33271                           ;lorawan_aes_cmac.c: 92: }
 33272                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 33273  002E50  0E00               	movlw	0
 33274  002E52  0101               	movlb	1	; () banked
 33275  002E54  6F65               	movwf	AESCmac@i& (0+255),b
 33276  002E56                     l14367:
 33277                           
 33278                           ; BSR set to: 1
 33279  002E56  0E0F               	movlw	15
 33280  002E58  0101               	movlb	1	; () banked
 33281  002E5A  6565               	cpfsgt	AESCmac@i& (0+255),b
 33282  002E5C  D001               	goto	l14371
 33283  002E5E  D025               	goto	l14377
 33284  002E60                     l14371:
 33285                           
 33286                           ; BSR set to: 1
 33287                           ;lorawan_aes_cmac.c: 96: {
 33288                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 33289  002E60  0101               	movlb	1	; () banked
 33290  002E62  5165               	movf	AESCmac@i& (0+255),w,b
 33291  002E64  0D01               	mullw	1
 33292  002E66  0E20               	movlw	low AESCmac@mLast
 33293  002E68  24F3               	addwf	prodl,w,c
 33294  002E6A  6ED9               	movwf	fsr2l,c
 33295  002E6C  0E01               	movlw	high AESCmac@mLast
 33296  002E6E  20F4               	addwfc	prodh,w,c
 33297  002E70  6EDA               	movwf	fsr2h,c
 33298  002E72  0101               	movlb	1	; () banked
 33299  002E74  5165               	movf	AESCmac@i& (0+255),w,b
 33300  002E76  0D01               	mullw	1
 33301  002E78  0E00               	movlw	low AESCmac@k2
 33302  002E7A  24F3               	addwf	prodl,w,c
 33303  002E7C  6EE9               	movwf	fsr0l,c
 33304  002E7E  0E01               	movlw	high AESCmac@k2
 33305  002E80  20F4               	addwfc	prodh,w,c
 33306  002E82  6EEA               	movwf	fsr0h,c
 33307  002E84  50EF               	movf	indf0,w,c
 33308  002E86  0100               	movlb	0	; () banked
 33309  002E88  6FD4               	movwf	??_AESCmac& (0+255),b
 33310  002E8A  0101               	movlb	1	; () banked
 33311  002E8C  5165               	movf	AESCmac@i& (0+255),w,b
 33312  002E8E  0D01               	mullw	1
 33313  002E90  0E30               	movlw	low AESCmac@padded
 33314  002E92  24F3               	addwf	prodl,w,c
 33315  002E94  6EE9               	movwf	fsr0l,c
 33316  002E96  0E01               	movlw	high AESCmac@padded
 33317  002E98  20F4               	addwfc	prodh,w,c
 33318  002E9A  6EEA               	movwf	fsr0h,c
 33319  002E9C  50EF               	movf	indf0,w,c
 33320  002E9E  0100               	movlb	0	; () banked
 33321  002EA0  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33322  002EA2  6EDF               	movwf	indf2,c
 33323                           
 33324                           ; BSR set to: 0
 33325  002EA4  0101               	movlb	1	; () banked
 33326  002EA6  2B65               	incf	AESCmac@i& (0+255),f,b
 33327  002EA8  D7D6               	goto	l14367
 33328  002EAA                     l14377:
 33329                           
 33330                           ;lorawan_aes_cmac.c: 98: }
 33331                           ;lorawan_aes_cmac.c: 99: }
 33332                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 33333  002EAA  0E50               	movlw	low AESCmac@x
 33334  002EAC  0100               	movlb	0	; () banked
 33335  002EAE  6F64               	movwf	memset@p1& (0+255),b
 33336  002EB0  0E01               	movlw	high AESCmac@x
 33337  002EB2  0100               	movlb	0	; () banked
 33338  002EB4  6F65               	movwf	(memset@p1+1)& (0+255),b
 33339  002EB6  0E00               	movlw	0
 33340  002EB8  0100               	movlb	0	; () banked
 33341  002EBA  6F67               	movwf	(memset@c+1)& (0+255),b
 33342  002EBC  0E00               	movlw	0
 33343  002EBE  6F66               	movwf	memset@c& (0+255),b
 33344  002EC0  0E00               	movlw	0
 33345  002EC2  0100               	movlb	0	; () banked
 33346  002EC4  6F69               	movwf	(memset@n+1)& (0+255),b
 33347  002EC6  0E10               	movlw	16
 33348  002EC8  6F68               	movwf	memset@n& (0+255),b
 33349  002ECA  ECCE  F04D         	call	_memset	;wreg free
 33350                           
 33351                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 33352  002ECE  0E00               	movlw	0
 33353  002ED0  0101               	movlb	1	; () banked
 33354  002ED2  6F65               	movwf	AESCmac@i& (0+255),b
 33355  002ED4  D064               	goto	l14399
 33356  002ED6                     l14381:
 33357                           
 33358                           ;lorawan_aes_cmac.c: 104: {
 33359                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 33360  002ED6  0E00               	movlw	0
 33361  002ED8  0101               	movlb	1	; () banked
 33362  002EDA  6F64               	movwf	AESCmac@j& (0+255),b
 33363  002EDC                     l14383:
 33364                           
 33365                           ; BSR set to: 1
 33366  002EDC  0E0F               	movlw	15
 33367  002EDE  0101               	movlb	1	; () banked
 33368  002EE0  6564               	cpfsgt	AESCmac@j& (0+255),b
 33369  002EE2  D001               	goto	l14387
 33370  002EE4  D03B               	goto	l14393
 33371  002EE6                     l14387:
 33372                           
 33373                           ; BSR set to: 1
 33374                           ;lorawan_aes_cmac.c: 106: {
 33375                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 33376  002EE6  0101               	movlb	1	; () banked
 33377  002EE8  5164               	movf	AESCmac@j& (0+255),w,b
 33378  002EEA  0D01               	mullw	1
 33379  002EEC  0E40               	movlw	low AESCmac@y
 33380  002EEE  24F3               	addwf	prodl,w,c
 33381  002EF0  6ED9               	movwf	fsr2l,c
 33382  002EF2  0E01               	movlw	high AESCmac@y
 33383  002EF4  20F4               	addwfc	prodh,w,c
 33384  002EF6  6EDA               	movwf	fsr2h,c
 33385  002EF8  0101               	movlb	1	; () banked
 33386  002EFA  5165               	movf	AESCmac@i& (0+255),w,b
 33387  002EFC  0100               	movlb	0	; () banked
 33388  002EFE  6FD4               	movwf	??_AESCmac& (0+255),b
 33389  002F00  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33390  002F02  0100               	movlb	0	; () banked
 33391  002F04  3BD4               	swapf	??_AESCmac& (0+255),f,b
 33392  002F06  3BD5               	swapf	(??_AESCmac+1)& (0+255),f,b
 33393  002F08  0EF0               	movlw	240
 33394  002F0A  17D5               	andwf	(??_AESCmac+1)& (0+255),f,b
 33395  002F0C  51D4               	movf	??_AESCmac& (0+255),w,b
 33396  002F0E  0B0F               	andlw	15
 33397  002F10  13D5               	iorwf	(??_AESCmac+1)& (0+255),f,b
 33398  002F12  0EF0               	movlw	240
 33399  002F14  17D4               	andwf	??_AESCmac& (0+255),f,b
 33400  002F16  0101               	movlb	1	; () banked
 33401  002F18  5164               	movf	AESCmac@j& (0+255),w,b
 33402  002F1A  0100               	movlb	0	; () banked
 33403  002F1C  27D4               	addwf	??_AESCmac& (0+255),f,b
 33404  002F1E  0E00               	movlw	0
 33405  002F20  23D5               	addwfc	(??_AESCmac+1)& (0+255),f,b
 33406  002F22  0100               	movlb	0	; () banked
 33407  002F24  51D4               	movf	??_AESCmac& (0+255),w,b
 33408  002F26  0100               	movlb	0	; () banked
 33409  002F28  25D1               	addwf	AESCmac@input& (0+255),w,b
 33410  002F2A  6EE9               	movwf	fsr0l,c
 33411  002F2C  0100               	movlb	0	; () banked
 33412  002F2E  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33413  002F30  0100               	movlb	0	; () banked
 33414  002F32  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33415  002F34  6EEA               	movwf	fsr0h,c
 33416  002F36  50EF               	movf	indf0,w,c
 33417  002F38  0100               	movlb	0	; () banked
 33418  002F3A  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33419  002F3C  0101               	movlb	1	; () banked
 33420  002F3E  5164               	movf	AESCmac@j& (0+255),w,b
 33421  002F40  0D01               	mullw	1
 33422  002F42  0E50               	movlw	low AESCmac@x
 33423  002F44  24F3               	addwf	prodl,w,c
 33424  002F46  6EE9               	movwf	fsr0l,c
 33425  002F48  0E01               	movlw	high AESCmac@x
 33426  002F4A  20F4               	addwfc	prodh,w,c
 33427  002F4C  6EEA               	movwf	fsr0h,c
 33428  002F4E  50EF               	movf	indf0,w,c
 33429  002F50  0100               	movlb	0	; () banked
 33430  002F52  19D6               	xorwf	(??_AESCmac+2)& (0+255),w,b
 33431  002F54  6EDF               	movwf	indf2,c
 33432                           
 33433                           ; BSR set to: 0
 33434  002F56  0101               	movlb	1	; () banked
 33435  002F58  2B64               	incf	AESCmac@j& (0+255),f,b
 33436  002F5A  D7C0               	goto	l14383
 33437  002F5C                     l14393:
 33438                           
 33439                           ; BSR set to: 1
 33440                           ;lorawan_aes_cmac.c: 108: }
 33441                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 33442  002F5C  0E50               	movlw	low AESCmac@x
 33443  002F5E  0100               	movlb	0	; () banked
 33444  002F60  6F64               	movwf	memcpy@d1& (0+255),b
 33445  002F62  0E01               	movlw	high AESCmac@x
 33446  002F64  0100               	movlb	0	; () banked
 33447  002F66  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 33448  002F68  0E40               	movlw	low AESCmac@y
 33449  002F6A  0100               	movlb	0	; () banked
 33450  002F6C  6F66               	movwf	memcpy@s1& (0+255),b
 33451  002F6E  0E01               	movlw	high AESCmac@y
 33452  002F70  0100               	movlb	0	; () banked
 33453  002F72  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 33454  002F74  0E00               	movlw	0
 33455  002F76  0100               	movlb	0	; () banked
 33456  002F78  6F69               	movwf	(memcpy@n+1)& (0+255),b
 33457  002F7A  0E10               	movlw	16
 33458  002F7C  6F68               	movwf	memcpy@n& (0+255),b
 33459  002F7E  ECCA  F048         	call	_memcpy	;wreg free
 33460                           
 33461                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 33462  002F82  0E50               	movlw	low AESCmac@x
 33463  002F84  0100               	movlb	0	; () banked
 33464  002F86  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33465  002F88  0E01               	movlw	high AESCmac@x
 33466  002F8A  0100               	movlb	0	; () banked
 33467  002F8C  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33468  002F8E  C0CD  F093         	movff	AESCmac@key,AESEncodeLoRa@key
 33469  002F92  C0CE  F094         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33470  002F96  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 33471  002F9A  0101               	movlb	1	; () banked
 33472  002F9C  2B65               	incf	AESCmac@i& (0+255),f,b
 33473  002F9E                     l14399:
 33474                           
 33475                           ; BSR set to: 1
 33476  002F9E  0EFF               	movlw	255
 33477  002FA0  0100               	movlb	0	; () banked
 33478  002FA2  6FD4               	movwf	??_AESCmac& (0+255),b
 33479  002FA4  0EFF               	movlw	255
 33480  002FA6  0100               	movlb	0	; () banked
 33481  002FA8  6FD5               	movwf	(??_AESCmac+1)& (0+255),b
 33482  002FAA  0101               	movlb	1	; () banked
 33483  002FAC  5163               	movf	AESCmac@n& (0+255),w,b
 33484  002FAE  0100               	movlb	0	; () banked
 33485  002FB0  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33486  002FB2  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33487  002FB4  0100               	movlb	0	; () banked
 33488  002FB6  51D4               	movf	??_AESCmac& (0+255),w,b
 33489  002FB8  0100               	movlb	0	; () banked
 33490  002FBA  27D6               	addwf	(??_AESCmac+2)& (0+255),f,b
 33491  002FBC  0100               	movlb	0	; () banked
 33492  002FBE  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33493  002FC0  0100               	movlb	0	; () banked
 33494  002FC2  23D7               	addwfc	(??_AESCmac+3)& (0+255),f,b
 33495  002FC4  0101               	movlb	1	; () banked
 33496  002FC6  5165               	movf	AESCmac@i& (0+255),w,b
 33497  002FC8  0100               	movlb	0	; () banked
 33498  002FCA  6FD8               	movwf	(??_AESCmac+4)& (0+255),b
 33499  002FCC  6BD9               	clrf	(??_AESCmac+5)& (0+255),b
 33500  002FCE  0100               	movlb	0	; () banked
 33501  002FD0  51D6               	movf	(??_AESCmac+2)& (0+255),w,b
 33502  002FD2  0100               	movlb	0	; () banked
 33503  002FD4  5DD8               	subwf	(??_AESCmac+4)& (0+255),w,b
 33504  002FD6  0100               	movlb	0	; () banked
 33505  002FD8  51D9               	movf	(??_AESCmac+5)& (0+255),w,b
 33506  002FDA  0A80               	xorlw	128
 33507  002FDC  0100               	movlb	0	; () banked
 33508  002FDE  6FDA               	movwf	(??_AESCmac+6)& (0+255),b
 33509  002FE0  0100               	movlb	0	; () banked
 33510  002FE2  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33511  002FE4  0A80               	xorlw	128
 33512  002FE6  0100               	movlb	0	; () banked
 33513  002FE8  59DA               	subwfb	(??_AESCmac+6)& (0+255),w,b
 33514  002FEA  A0D8               	btfss	status,0,c
 33515  002FEC  D774               	goto	l14381
 33516                           
 33517                           ; BSR set to: 0
 33518                           ;lorawan_aes_cmac.c: 111: }
 33519                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 33520                           
 33521                           ; BSR set to: 0
 33522  002FEE  0E00               	movlw	0
 33523  002FF0  0101               	movlb	1	; () banked
 33524  002FF2  6F65               	movwf	AESCmac@i& (0+255),b
 33525  002FF4                     l14403:
 33526                           
 33527                           ; BSR set to: 1
 33528  002FF4  0E0F               	movlw	15
 33529  002FF6  0101               	movlb	1	; () banked
 33530  002FF8  6565               	cpfsgt	AESCmac@i& (0+255),b
 33531  002FFA  D001               	goto	l14407
 33532  002FFC  D025               	goto	l14413
 33533  002FFE                     l14407:
 33534                           
 33535                           ; BSR set to: 1
 33536                           ;lorawan_aes_cmac.c: 114: {
 33537                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 33538  002FFE  0101               	movlb	1	; () banked
 33539  003000  5165               	movf	AESCmac@i& (0+255),w,b
 33540  003002  0D01               	mullw	1
 33541  003004  0E40               	movlw	low AESCmac@y
 33542  003006  24F3               	addwf	prodl,w,c
 33543  003008  6ED9               	movwf	fsr2l,c
 33544  00300A  0E01               	movlw	high AESCmac@y
 33545  00300C  20F4               	addwfc	prodh,w,c
 33546  00300E  6EDA               	movwf	fsr2h,c
 33547  003010  0101               	movlb	1	; () banked
 33548  003012  5165               	movf	AESCmac@i& (0+255),w,b
 33549  003014  0D01               	mullw	1
 33550  003016  0E20               	movlw	low AESCmac@mLast
 33551  003018  24F3               	addwf	prodl,w,c
 33552  00301A  6EE9               	movwf	fsr0l,c
 33553  00301C  0E01               	movlw	high AESCmac@mLast
 33554  00301E  20F4               	addwfc	prodh,w,c
 33555  003020  6EEA               	movwf	fsr0h,c
 33556  003022  50EF               	movf	indf0,w,c
 33557  003024  0100               	movlb	0	; () banked
 33558  003026  6FD4               	movwf	??_AESCmac& (0+255),b
 33559  003028  0101               	movlb	1	; () banked
 33560  00302A  5165               	movf	AESCmac@i& (0+255),w,b
 33561  00302C  0D01               	mullw	1
 33562  00302E  0E50               	movlw	low AESCmac@x
 33563  003030  24F3               	addwf	prodl,w,c
 33564  003032  6EE9               	movwf	fsr0l,c
 33565  003034  0E01               	movlw	high AESCmac@x
 33566  003036  20F4               	addwfc	prodh,w,c
 33567  003038  6EEA               	movwf	fsr0h,c
 33568  00303A  50EF               	movf	indf0,w,c
 33569  00303C  0100               	movlb	0	; () banked
 33570  00303E  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33571  003040  6EDF               	movwf	indf2,c
 33572                           
 33573                           ; BSR set to: 0
 33574  003042  0101               	movlb	1	; () banked
 33575  003044  2B65               	incf	AESCmac@i& (0+255),f,b
 33576  003046  D7D6               	goto	l14403
 33577  003048                     l14413:
 33578                           
 33579                           ; BSR set to: 1
 33580                           ;lorawan_aes_cmac.c: 116: }
 33581                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 33582  003048  0E40               	movlw	low AESCmac@y
 33583  00304A  0100               	movlb	0	; () banked
 33584  00304C  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33585  00304E  0E01               	movlw	high AESCmac@y
 33586  003050  0100               	movlb	0	; () banked
 33587  003052  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33588  003054  C0CD  F093         	movff	AESCmac@key,AESEncodeLoRa@key
 33589  003058  C0CE  F094         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33590  00305C  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 33591                           
 33592                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 33593  003060  C0CF  F064         	movff	AESCmac@output,memcpy@d1
 33594  003064  C0D0  F065         	movff	AESCmac@output+1,memcpy@d1+1
 33595  003068  0E40               	movlw	low AESCmac@y
 33596  00306A  0100               	movlb	0	; () banked
 33597  00306C  6F66               	movwf	memcpy@s1& (0+255),b
 33598  00306E  0E01               	movlw	high AESCmac@y
 33599  003070  0100               	movlb	0	; () banked
 33600  003072  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 33601  003074  0E00               	movlw	0
 33602  003076  0100               	movlb	0	; () banked
 33603  003078  6F69               	movwf	(memcpy@n+1)& (0+255),b
 33604  00307A  0E10               	movlw	16
 33605  00307C  6F68               	movwf	memcpy@n& (0+255),b
 33606  00307E  ECCA  F048         	call	_memcpy	;wreg free
 33607  003082  0012               	return		;funcret
 33608  003084                     __end_of_AESCmac:
 33609                           	opt stack 0
 33610                           tosu	equ	0xFFF
 33611                           tosh	equ	0xFFE
 33612                           tosl	equ	0xFFD
 33613                           pclath	equ	0xFFA
 33614                           tblptru	equ	0xFF8
 33615                           tblptrh	equ	0xFF7
 33616                           tblptrl	equ	0xFF6
 33617                           tablat	equ	0xFF5
 33618                           prodh	equ	0xFF4
 33619                           prodl	equ	0xFF3
 33620                           intcon	equ	0xFF2
 33621                           intcon2	equ	0xFF1
 33622                           intcon3	equ	0xFF0
 33623                           indf0	equ	0xFEF
 33624                           postinc0	equ	0xFEE
 33625                           fsr0h	equ	0xFEA
 33626                           fsr0l	equ	0xFE9
 33627                           wreg	equ	0xFE8
 33628                           postinc1	equ	0xFE6
 33629                           postdec1	equ	0xFE5
 33630                           plusw1	equ	0xFE3
 33631                           fsr1h	equ	0xFE2
 33632                           fsr1l	equ	0xFE1
 33633                           indf2	equ	0xFDF
 33634                           postinc2	equ	0xFDE
 33635                           postdec2	equ	0xFDD
 33636                           plusw2	equ	0xFDB
 33637                           fsr2h	equ	0xFDA
 33638                           fsr2l	equ	0xFD9
 33639                           status	equ	0xFD8
 33640                           
 33641 ;; *************** function _GenerateSubkey *****************
 33642 ;; Defined at:
 33643 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 33644 ;; Parameters:    Size  Location     Type
 33645 ;;  key             2   69[BANK0 ] PTR unsigned char 
 33646 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33647 ;;  k1              2   71[BANK0 ] PTR unsigned char 
 33648 ;;		 -> AESCmac@k1(16), 
 33649 ;;  k2              2   73[BANK0 ] PTR unsigned char 
 33650 ;;		 -> AESCmac@k2(16), 
 33651 ;; Auto vars:     Size  Location     Type
 33652 ;;  l              16   92[BANK0 ] unsigned char [16]
 33653 ;;  const_Rb       16   76[BANK0 ] unsigned char [16]
 33654 ;;  i               1  108[BANK0 ] unsigned char 
 33655 ;; Return value:  Size  Location     Type
 33656 ;;                  1    wreg      void 
 33657 ;; Registers used:
 33658 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33659 ;; Tracked objects:
 33660 ;;		On entry : 0/0
 33661 ;;		On exit  : 0/0
 33662 ;;		Unchanged: 0/0
 33663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33664 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33665 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33666 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33667 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33668 ;;Total ram usage:       40 bytes
 33669 ;; Hardware stack levels used:    1
 33670 ;; Hardware stack levels required when called:   10
 33671 ;; This function calls:
 33672 ;;		_AESEncodeLoRa
 33673 ;;		_FillSubKey
 33674 ;;		_memset
 33675 ;; This function is called by:
 33676 ;;		_AESCmac
 33677 ;; This function uses a non-reentrant model
 33678 ;;
 33679                           
 33680                           	psect	text152
 33681  005B6A                     __ptext152:
 33682                           	opt stack 0
 33683  005B6A                     _GenerateSubkey:
 33684                           	opt stack 16
 33685                           
 33686                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 33687                           
 33688                           ;incstack = 0
 33689  005B6A  0E00               	movlw	0
 33690  005B6C  0100               	movlb	0	; () banked
 33691  005B6E  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33692                           
 33693                           ; BSR set to: 0
 33694                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 33695                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 33696                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 33697  005B70  EE21  F0BC         	lfsr	2,GenerateSubkey@F7870
 33698  005B74  EE00  F0AC         	lfsr	0,GenerateSubkey@const_Rb
 33699  005B78  0E0F               	movlw	15
 33700  005B7A                     u15471:
 33701  005B7A  CFDB FFEB          	movff	plusw2,plusw0
 33702  005B7E  06E8               	decf	wreg,f,c
 33703  005B80  E2FC               	bc	u15471
 33704                           
 33705                           ; BSR set to: 0
 33706                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 33707  005B82  0EBC               	movlw	low GenerateSubkey@l
 33708  005B84  0100               	movlb	0	; () banked
 33709  005B86  6F64               	movwf	memset@p1& (0+255),b
 33710  005B88  0E00               	movlw	high GenerateSubkey@l
 33711  005B8A  0100               	movlb	0	; () banked
 33712  005B8C  6F65               	movwf	(memset@p1+1)& (0+255),b
 33713  005B8E  0E00               	movlw	0
 33714  005B90  0100               	movlb	0	; () banked
 33715  005B92  6F67               	movwf	(memset@c+1)& (0+255),b
 33716  005B94  0E00               	movlw	0
 33717  005B96  6F66               	movwf	memset@c& (0+255),b
 33718  005B98  0E00               	movlw	0
 33719  005B9A  0100               	movlb	0	; () banked
 33720  005B9C  6F69               	movwf	(memset@n+1)& (0+255),b
 33721  005B9E  0E10               	movlw	16
 33722  005BA0  6F68               	movwf	memset@n& (0+255),b
 33723  005BA2  ECCE  F04D         	call	_memset	;wreg free
 33724                           
 33725                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 33726  005BA6  0EBC               	movlw	low GenerateSubkey@l
 33727  005BA8  0100               	movlb	0	; () banked
 33728  005BAA  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33729  005BAC  0E00               	movlw	high GenerateSubkey@l
 33730  005BAE  0100               	movlb	0	; () banked
 33731  005BB0  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33732  005BB2  C0A5  F093         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 33733  005BB6  C0A6  F094         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 33734  005BBA  ECD6  F04C         	call	_AESEncodeLoRa	;wreg free
 33735                           
 33736                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 33737  005BBE  0100               	movlb	0	; () banked
 33738  005BC0  BFBC               	btfsc	GenerateSubkey@l& (0+255),7,b
 33739  005BC2  D010               	goto	l13907
 33740                           
 33741                           ; BSR set to: 0
 33742                           ;lorawan_aes_cmac.c: 138: {
 33743                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 33744  005BC4  0EBC               	movlw	low GenerateSubkey@l
 33745  005BC6  0100               	movlb	0	; () banked
 33746  005BC8  6F64               	movwf	FillSubKey@source& (0+255),b
 33747  005BCA  0E00               	movlw	high GenerateSubkey@l
 33748  005BCC  0100               	movlb	0	; () banked
 33749  005BCE  6F65               	movwf	(FillSubKey@source+1)& (0+255),b
 33750  005BD0  C0A7  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 33751  005BD4  C0A8  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33752  005BD8  0E10               	movlw	16
 33753  005BDA  0100               	movlb	0	; () banked
 33754  005BDC  6F68               	movwf	FillSubKey@size& (0+255),b
 33755  005BDE  EC89  F045         	call	_FillSubKey	;wreg free
 33756                           
 33757                           ;lorawan_aes_cmac.c: 140: }
 33758  005BE2  D034               	goto	l13921
 33759  005BE4                     l13907:
 33760                           
 33761                           ;lorawan_aes_cmac.c: 141: else
 33762                           ;lorawan_aes_cmac.c: 142: {
 33763                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 33764  005BE4  0EBC               	movlw	low GenerateSubkey@l
 33765  005BE6  0100               	movlb	0	; () banked
 33766  005BE8  6F64               	movwf	FillSubKey@source& (0+255),b
 33767  005BEA  0E00               	movlw	high GenerateSubkey@l
 33768  005BEC  0100               	movlb	0	; () banked
 33769  005BEE  6F65               	movwf	(FillSubKey@source+1)& (0+255),b
 33770  005BF0  C0A7  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 33771  005BF4  C0A8  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33772  005BF8  0E10               	movlw	16
 33773  005BFA  0100               	movlb	0	; () banked
 33774  005BFC  6F68               	movwf	FillSubKey@size& (0+255),b
 33775  005BFE  EC89  F045         	call	_FillSubKey	;wreg free
 33776                           
 33777                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 33778  005C02  0E00               	movlw	0
 33779  005C04  0100               	movlb	0	; () banked
 33780  005C06  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33781  005C08                     l13911:
 33782                           
 33783                           ; BSR set to: 0
 33784  005C08  0E0F               	movlw	15
 33785  005C0A  0100               	movlb	0	; () banked
 33786  005C0C  65CC               	cpfsgt	GenerateSubkey@i& (0+255),b
 33787  005C0E  D001               	goto	l13915
 33788  005C10  D01D               	goto	l13921
 33789  005C12                     l13915:
 33790                           
 33791                           ; BSR set to: 0
 33792                           ;lorawan_aes_cmac.c: 146: {
 33793                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 33794  005C12  0100               	movlb	0	; () banked
 33795  005C14  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33796  005C16  0D01               	mullw	1
 33797  005C18  0EAC               	movlw	low GenerateSubkey@const_Rb
 33798  005C1A  24F3               	addwf	prodl,w,c
 33799  005C1C  6ED9               	movwf	fsr2l,c
 33800  005C1E  0E00               	movlw	high GenerateSubkey@const_Rb
 33801  005C20  20F4               	addwfc	prodh,w,c
 33802  005C22  6EDA               	movwf	fsr2h,c
 33803  005C24  50DF               	movf	indf2,w,c
 33804  005C26  0100               	movlb	0	; () banked
 33805  005C28  6FAB               	movwf	??_GenerateSubkey& (0+255),b
 33806  005C2A  0100               	movlb	0	; () banked
 33807  005C2C  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33808  005C2E  0D01               	mullw	1
 33809  005C30  50F3               	movf	prodl,w,c
 33810  005C32  0100               	movlb	0	; () banked
 33811  005C34  25A7               	addwf	GenerateSubkey@k1& (0+255),w,b
 33812  005C36  6ED9               	movwf	fsr2l,c
 33813  005C38  50F4               	movf	prodh,w,c
 33814  005C3A  0100               	movlb	0	; () banked
 33815  005C3C  21A8               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 33816  005C3E  6EDA               	movwf	fsr2h,c
 33817  005C40  0100               	movlb	0	; () banked
 33818  005C42  51AB               	movf	??_GenerateSubkey& (0+255),w,b
 33819  005C44  1ADF               	xorwf	indf2,f,c
 33820                           
 33821                           ; BSR set to: 0
 33822  005C46  0100               	movlb	0	; () banked
 33823  005C48  2BCC               	incf	GenerateSubkey@i& (0+255),f,b
 33824  005C4A  D7DE               	goto	l13911
 33825  005C4C                     l13921:
 33826                           
 33827                           ;lorawan_aes_cmac.c: 148: }
 33828                           ;lorawan_aes_cmac.c: 149: }
 33829                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 33830  005C4C  C0A7  FFD9         	movff	GenerateSubkey@k1,fsr2l
 33831  005C50  C0A8  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 33832  005C54  0100               	movlb	0	; () banked
 33833  005C56  BEDF               	btfsc	indf2,7,c
 33834  005C58  D00E               	goto	l13925
 33835                           
 33836                           ; BSR set to: 0
 33837                           ;lorawan_aes_cmac.c: 153: {
 33838                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 33839  005C5A  C0A7  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 33840  005C5E  C0A8  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33841  005C62  C0A9  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 33842  005C66  C0AA  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33843  005C6A  0E10               	movlw	16
 33844  005C6C  0100               	movlb	0	; () banked
 33845  005C6E  6F68               	movwf	FillSubKey@size& (0+255),b
 33846  005C70  EC89  F045         	call	_FillSubKey	;wreg free
 33847                           
 33848                           ;lorawan_aes_cmac.c: 155: }
 33849  005C74  0012               	return	
 33850  005C76                     l13925:
 33851                           
 33852                           ;lorawan_aes_cmac.c: 156: else
 33853                           ;lorawan_aes_cmac.c: 157: {
 33854                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 33855  005C76  C0A7  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 33856  005C7A  C0A8  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33857  005C7E  C0A9  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 33858  005C82  C0AA  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33859  005C86  0E10               	movlw	16
 33860  005C88  0100               	movlb	0	; () banked
 33861  005C8A  6F68               	movwf	FillSubKey@size& (0+255),b
 33862  005C8C  EC89  F045         	call	_FillSubKey	;wreg free
 33863                           
 33864                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 33865  005C90  0E00               	movlw	0
 33866  005C92  0100               	movlb	0	; () banked
 33867  005C94  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33868  005C96                     l13929:
 33869                           
 33870                           ; BSR set to: 0
 33871  005C96  0E0F               	movlw	15
 33872  005C98  0100               	movlb	0	; () banked
 33873  005C9A  65CC               	cpfsgt	GenerateSubkey@i& (0+255),b
 33874  005C9C  D001               	goto	l13933
 33875  005C9E  0012               	return	
 33876  005CA0                     l13933:
 33877                           
 33878                           ; BSR set to: 0
 33879                           ;lorawan_aes_cmac.c: 161: {
 33880                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 33881  005CA0  0100               	movlb	0	; () banked
 33882  005CA2  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33883  005CA4  0D01               	mullw	1
 33884  005CA6  50F3               	movf	prodl,w,c
 33885  005CA8  0100               	movlb	0	; () banked
 33886  005CAA  25A9               	addwf	GenerateSubkey@k2& (0+255),w,b
 33887  005CAC  6ED9               	movwf	fsr2l,c
 33888  005CAE  50F4               	movf	prodh,w,c
 33889  005CB0  0100               	movlb	0	; () banked
 33890  005CB2  21AA               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 33891  005CB4  6EDA               	movwf	fsr2h,c
 33892  005CB6  0100               	movlb	0	; () banked
 33893  005CB8  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33894  005CBA  0D01               	mullw	1
 33895  005CBC  0EAC               	movlw	low GenerateSubkey@const_Rb
 33896  005CBE  24F3               	addwf	prodl,w,c
 33897  005CC0  6EE9               	movwf	fsr0l,c
 33898  005CC2  0E00               	movlw	high GenerateSubkey@const_Rb
 33899  005CC4  20F4               	addwfc	prodh,w,c
 33900  005CC6  6EEA               	movwf	fsr0h,c
 33901  005CC8  50EF               	movf	indf0,w,c
 33902  005CCA  0100               	movlb	0	; () banked
 33903  005CCC  6FAB               	movwf	??_GenerateSubkey& (0+255),b
 33904  005CCE  0100               	movlb	0	; () banked
 33905  005CD0  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33906  005CD2  0D01               	mullw	1
 33907  005CD4  50F3               	movf	prodl,w,c
 33908  005CD6  0100               	movlb	0	; () banked
 33909  005CD8  25A9               	addwf	GenerateSubkey@k2& (0+255),w,b
 33910  005CDA  6EE9               	movwf	fsr0l,c
 33911  005CDC  50F4               	movf	prodh,w,c
 33912  005CDE  0100               	movlb	0	; () banked
 33913  005CE0  21AA               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 33914  005CE2  6EEA               	movwf	fsr0h,c
 33915  005CE4  50EF               	movf	indf0,w,c
 33916  005CE6  0100               	movlb	0	; () banked
 33917  005CE8  19AB               	xorwf	??_GenerateSubkey& (0+255),w,b
 33918  005CEA  6EDF               	movwf	indf2,c
 33919                           
 33920                           ; BSR set to: 0
 33921  005CEC  0100               	movlb	0	; () banked
 33922  005CEE  2BCC               	incf	GenerateSubkey@i& (0+255),f,b
 33923  005CF0  D7D2               	goto	l13929
 33924  005CF2                     __end_of_GenerateSubkey:
 33925                           	opt stack 0
 33926                           tosu	equ	0xFFF
 33927                           tosh	equ	0xFFE
 33928                           tosl	equ	0xFFD
 33929                           pclath	equ	0xFFA
 33930                           tblptru	equ	0xFF8
 33931                           tblptrh	equ	0xFF7
 33932                           tblptrl	equ	0xFF6
 33933                           tablat	equ	0xFF5
 33934                           prodh	equ	0xFF4
 33935                           prodl	equ	0xFF3
 33936                           intcon	equ	0xFF2
 33937                           intcon2	equ	0xFF1
 33938                           intcon3	equ	0xFF0
 33939                           indf0	equ	0xFEF
 33940                           postinc0	equ	0xFEE
 33941                           plusw0	equ	0xFEB
 33942                           fsr0h	equ	0xFEA
 33943                           fsr0l	equ	0xFE9
 33944                           wreg	equ	0xFE8
 33945                           postinc1	equ	0xFE6
 33946                           postdec1	equ	0xFE5
 33947                           plusw1	equ	0xFE3
 33948                           fsr1h	equ	0xFE2
 33949                           fsr1l	equ	0xFE1
 33950                           indf2	equ	0xFDF
 33951                           postinc2	equ	0xFDE
 33952                           postdec2	equ	0xFDD
 33953                           plusw2	equ	0xFDB
 33954                           fsr2h	equ	0xFDA
 33955                           fsr2l	equ	0xFD9
 33956                           status	equ	0xFD8
 33957                           
 33958 ;; *************** function _FillSubKey *****************
 33959 ;; Defined at:
 33960 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 33961 ;; Parameters:    Size  Location     Type
 33962 ;;  source          2    4[BANK0 ] PTR unsigned char 
 33963 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 33964 ;;  key             2    6[BANK0 ] PTR unsigned char 
 33965 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 33966 ;;  size            1    8[BANK0 ] unsigned char 
 33967 ;; Auto vars:     Size  Location     Type
 33968 ;;  i               1   11[BANK0 ] unsigned char 
 33969 ;;  carry           1   10[BANK0 ] unsigned char 
 33970 ;; Return value:  Size  Location     Type
 33971 ;;                  1    wreg      void 
 33972 ;; Registers used:
 33973 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33974 ;; Tracked objects:
 33975 ;;		On entry : 0/0
 33976 ;;		On exit  : 0/0
 33977 ;;		Unchanged: 0/0
 33978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33979 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33980 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33981 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33982 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33983 ;;Total ram usage:        8 bytes
 33984 ;; Hardware stack levels used:    1
 33985 ;; Hardware stack levels required when called:    7
 33986 ;; This function calls:
 33987 ;;		Nothing
 33988 ;; This function is called by:
 33989 ;;		_GenerateSubkey
 33990 ;; This function uses a non-reentrant model
 33991 ;;
 33992                           
 33993                           	psect	text153
 33994  008B12                     __ptext153:
 33995                           	opt stack 0
 33996  008B12                     _FillSubKey:
 33997                           	opt stack 18
 33998                           
 33999                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 34000                           
 34001                           ;incstack = 0
 34002  008B12  0E00               	movlw	0
 34003  008B14  0100               	movlb	0	; () banked
 34004  008B16  6F6B               	movwf	FillSubKey@i& (0+255),b
 34005                           
 34006                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 34007  008B18  0E00               	movlw	0
 34008  008B1A  0100               	movlb	0	; () banked
 34009  008B1C  6F6A               	movwf	FillSubKey@carry& (0+255),b
 34010                           
 34011                           ; BSR set to: 0
 34012                           ;lorawan_aes_cmac.c: 172: i=size;
 34013  008B1E  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 34014                           
 34015                           ;lorawan_aes_cmac.c: 174: while(i--)
 34016  008B22  D032               	goto	l13623
 34017  008B24                     l13619:
 34018                           
 34019                           ; BSR set to: 0
 34020                           ;lorawan_aes_cmac.c: 175: {
 34021                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 34022  008B24  0100               	movlb	0	; () banked
 34023  008B26  516B               	movf	FillSubKey@i& (0+255),w,b
 34024  008B28  0D01               	mullw	1
 34025  008B2A  50F3               	movf	prodl,w,c
 34026  008B2C  0100               	movlb	0	; () banked
 34027  008B2E  2566               	addwf	FillSubKey@key& (0+255),w,b
 34028  008B30  6ED9               	movwf	fsr2l,c
 34029  008B32  50F4               	movf	prodh,w,c
 34030  008B34  0100               	movlb	0	; () banked
 34031  008B36  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 34032  008B38  6EDA               	movwf	fsr2h,c
 34033  008B3A  0100               	movlb	0	; () banked
 34034  008B3C  516B               	movf	FillSubKey@i& (0+255),w,b
 34035  008B3E  0D01               	mullw	1
 34036  008B40  50F3               	movf	prodl,w,c
 34037  008B42  0100               	movlb	0	; () banked
 34038  008B44  2564               	addwf	FillSubKey@source& (0+255),w,b
 34039  008B46  6EE9               	movwf	fsr0l,c
 34040  008B48  50F4               	movf	prodh,w,c
 34041  008B4A  0100               	movlb	0	; () banked
 34042  008B4C  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 34043  008B4E  6EEA               	movwf	fsr0h,c
 34044  008B50  50EF               	movf	indf0,w,c
 34045  008B52  0100               	movlb	0	; () banked
 34046  008B54  6F69               	movwf	??_FillSubKey& (0+255),b
 34047  008B56  0100               	movlb	0	; () banked
 34048  008B58  90D8               	bcf	status,0,c
 34049  008B5A  3569               	rlcf	??_FillSubKey& (0+255),w,b
 34050  008B5C  0100               	movlb	0	; () banked
 34051  008B5E  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 34052  008B60  6EDF               	movwf	indf2,c
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 34056  008B62  0100               	movlb	0	; () banked
 34057  008B64  516B               	movf	FillSubKey@i& (0+255),w,b
 34058  008B66  0D01               	mullw	1
 34059  008B68  50F3               	movf	prodl,w,c
 34060  008B6A  0100               	movlb	0	; () banked
 34061  008B6C  2564               	addwf	FillSubKey@source& (0+255),w,b
 34062  008B6E  6ED9               	movwf	fsr2l,c
 34063  008B70  50F4               	movf	prodh,w,c
 34064  008B72  0100               	movlb	0	; () banked
 34065  008B74  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 34066  008B76  6EDA               	movwf	fsr2h,c
 34067  008B78  0100               	movlb	0	; () banked
 34068  008B7A  AEDF               	btfss	indf2,7,c
 34069  008B7C  D002               	goto	u15060
 34070  008B7E  0E01               	movlw	1
 34071  008B80  D001               	goto	u15070
 34072  008B82                     u15060:
 34073  008B82  0E00               	movlw	0
 34074  008B84                     u15070:
 34075  008B84  0100               	movlb	0	; () banked
 34076  008B86  6F6A               	movwf	FillSubKey@carry& (0+255),b
 34077  008B88                     l13623:
 34078                           
 34079                           ; BSR set to: 0
 34080  008B88  0100               	movlb	0	; () banked
 34081  008B8A  076B               	decf	FillSubKey@i& (0+255),f,b
 34082  008B8C  0100               	movlb	0	; () banked
 34083  008B8E  296B               	incf	FillSubKey@i& (0+255),w,b
 34084  008B90  B4D8               	btfsc	status,2,c
 34085  008B92  0012               	return	
 34086  008B94  D7C7               	goto	l13619
 34087  008B96                     __end_of_FillSubKey:
 34088                           	opt stack 0
 34089                           tosu	equ	0xFFF
 34090                           tosh	equ	0xFFE
 34091                           tosl	equ	0xFFD
 34092                           pclath	equ	0xFFA
 34093                           tblptru	equ	0xFF8
 34094                           tblptrh	equ	0xFF7
 34095                           tblptrl	equ	0xFF6
 34096                           tablat	equ	0xFF5
 34097                           prodh	equ	0xFF4
 34098                           prodl	equ	0xFF3
 34099                           intcon	equ	0xFF2
 34100                           intcon2	equ	0xFF1
 34101                           intcon3	equ	0xFF0
 34102                           indf0	equ	0xFEF
 34103                           postinc0	equ	0xFEE
 34104                           plusw0	equ	0xFEB
 34105                           fsr0h	equ	0xFEA
 34106                           fsr0l	equ	0xFE9
 34107                           wreg	equ	0xFE8
 34108                           postinc1	equ	0xFE6
 34109                           postdec1	equ	0xFE5
 34110                           plusw1	equ	0xFE3
 34111                           fsr1h	equ	0xFE2
 34112                           fsr1l	equ	0xFE1
 34113                           indf2	equ	0xFDF
 34114                           postinc2	equ	0xFDE
 34115                           postdec2	equ	0xFDD
 34116                           plusw2	equ	0xFDB
 34117                           fsr2h	equ	0xFDA
 34118                           fsr2l	equ	0xFD9
 34119                           status	equ	0xFD8
 34120                           
 34121 ;; *************** function _AESEncodeLoRa *****************
 34122 ;; Defined at:
 34123 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 34124 ;; Parameters:    Size  Location     Type
 34125 ;;  block           2   49[BANK0 ] PTR unsigned char 
 34126 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 34127 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 34128 ;;  key             2   51[BANK0 ] PTR unsigned char 
 34129 ;;		 -> loRa.activationParameters(105), loRa(245), 
 34130 ;; Auto vars:     Size  Location     Type
 34131 ;;  useKey         16   53[BANK0 ] unsigned char [16]
 34132 ;; Return value:  Size  Location     Type
 34133 ;;                  1    wreg      void 
 34134 ;; Registers used:
 34135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34136 ;; Tracked objects:
 34137 ;;		On entry : 0/0
 34138 ;;		On exit  : 0/0
 34139 ;;		Unchanged: 0/0
 34140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34141 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34142 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34144 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34145 ;;Total ram usage:       20 bytes
 34146 ;; Hardware stack levels used:    1
 34147 ;; Hardware stack levels required when called:    9
 34148 ;; This function calls:
 34149 ;;		_AESEncode
 34150 ;;		_memcpy
 34151 ;; This function is called by:
 34152 ;;		_AESCmac
 34153 ;;		_GenerateSubkey
 34154 ;;		_LORAWAN_RxDone
 34155 ;;		_ComputeSessionKeys
 34156 ;;		_EncryptFRMPayload
 34157 ;; This function uses a non-reentrant model
 34158 ;;
 34159                           
 34160                           	psect	text154
 34161  0099AC                     __ptext154:
 34162                           	opt stack 0
 34163  0099AC                     _AESEncodeLoRa:
 34164                           	opt stack 17
 34165                           
 34166                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 34167                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 34168                           
 34169                           ; BSR set to: 0
 34170                           ;incstack = 0
 34171  0099AC  0E95               	movlw	low AESEncodeLoRa@useKey
 34172  0099AE  0100               	movlb	0	; () banked
 34173  0099B0  6F64               	movwf	memcpy@d1& (0+255),b
 34174  0099B2  0E00               	movlw	high AESEncodeLoRa@useKey
 34175  0099B4  0100               	movlb	0	; () banked
 34176  0099B6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 34177  0099B8  C093  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 34178  0099BC  C094  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 34179  0099C0  0E00               	movlw	0
 34180  0099C2  0100               	movlb	0	; () banked
 34181  0099C4  6F69               	movwf	(memcpy@n+1)& (0+255),b
 34182  0099C6  0E10               	movlw	16
 34183  0099C8  6F68               	movwf	memcpy@n& (0+255),b
 34184  0099CA  ECCA  F048         	call	_memcpy	;wreg free
 34185                           
 34186                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 34187  0099CE  C091  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 34188  0099D2  C092  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 34189  0099D6  0E95               	movlw	low AESEncodeLoRa@useKey
 34190  0099D8  0100               	movlb	0	; () banked
 34191  0099DA  6F6C               	movwf	AESEncode@masterKey& (0+255),b
 34192  0099DC  0E00               	movlw	high AESEncodeLoRa@useKey
 34193  0099DE  0100               	movlb	0	; () banked
 34194  0099E0  6F6D               	movwf	(AESEncode@masterKey+1)& (0+255),b
 34195  0099E2  EC61  F011         	call	_AESEncode	;wreg free
 34196  0099E6  0012               	return		;funcret
 34197  0099E8                     __end_of_AESEncodeLoRa:
 34198                           	opt stack 0
 34199                           tosu	equ	0xFFF
 34200                           tosh	equ	0xFFE
 34201                           tosl	equ	0xFFD
 34202                           pclath	equ	0xFFA
 34203                           tblptru	equ	0xFF8
 34204                           tblptrh	equ	0xFF7
 34205                           tblptrl	equ	0xFF6
 34206                           tablat	equ	0xFF5
 34207                           prodh	equ	0xFF4
 34208                           prodl	equ	0xFF3
 34209                           intcon	equ	0xFF2
 34210                           intcon2	equ	0xFF1
 34211                           intcon3	equ	0xFF0
 34212                           indf0	equ	0xFEF
 34213                           postinc0	equ	0xFEE
 34214                           plusw0	equ	0xFEB
 34215                           fsr0h	equ	0xFEA
 34216                           fsr0l	equ	0xFE9
 34217                           wreg	equ	0xFE8
 34218                           postinc1	equ	0xFE6
 34219                           postdec1	equ	0xFE5
 34220                           plusw1	equ	0xFE3
 34221                           fsr1h	equ	0xFE2
 34222                           fsr1l	equ	0xFE1
 34223                           indf2	equ	0xFDF
 34224                           postinc2	equ	0xFDE
 34225                           postdec2	equ	0xFDD
 34226                           plusw2	equ	0xFDB
 34227                           fsr2h	equ	0xFDA
 34228                           fsr2l	equ	0xFD9
 34229                           status	equ	0xFD8
 34230                           
 34231 ;; *************** function _AESEncode *****************
 34232 ;; Defined at:
 34233 ;;		line 236 in file "mcc_generated_files/LoRaWAN/AES.c"
 34234 ;; Parameters:    Size  Location     Type
 34235 ;;  block           2   10[BANK0 ] PTR unsigned char 
 34236 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 34237 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 34238 ;;  masterKey       2   12[BANK0 ] PTR unsigned char 
 34239 ;;		 -> AESEncodeLoRa@useKey(16), 
 34240 ;; Auto vars:     Size  Location     Type
 34241 ;;  aux3            1   47[BANK0 ] unsigned char 
 34242 ;;  aux1            1   46[BANK0 ] unsigned char 
 34243 ;;  aux2            1   45[BANK0 ] unsigned char 
 34244 ;;  aux             1   44[BANK0 ] unsigned char 
 34245 ;;  key            16   22[BANK0 ] unsigned char [16]
 34246 ;;  i               1   48[BANK0 ] unsigned char 
 34247 ;; Return value:  Size  Location     Type
 34248 ;;                  1    wreg      void 
 34249 ;; Registers used:
 34250 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34251 ;; Tracked objects:
 34252 ;;		On entry : 0/0
 34253 ;;		On exit  : 0/0
 34254 ;;		Unchanged: 0/0
 34255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34256 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34257 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34258 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34259 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;Total ram usage:       39 bytes
 34261 ;; Hardware stack levels used:    1
 34262 ;; Hardware stack levels required when called:    8
 34263 ;; This function calls:
 34264 ;;		_EncKeySchedule
 34265 ;;		_EncodeShiftRow
 34266 ;; This function is called by:
 34267 ;;		_AESEncodeLoRa
 34268 ;; This function uses a non-reentrant model
 34269 ;;
 34270                           
 34271                           	psect	text155
 34272  0022C2                     __ptext155:
 34273                           	opt stack 0
 34274  0022C2                     _AESEncode:
 34275                           	opt stack 17
 34276                           
 34277                           ;AES.c: 238: unsigned char i;
 34278                           ;AES.c: 240: unsigned char key[16];
 34279                           ;AES.c: 242: for (i = 0; i < 16; i++)
 34280                           
 34281                           ;incstack = 0
 34282  0022C2  0E00               	movlw	0
 34283  0022C4  0100               	movlb	0	; () banked
 34284  0022C6  6F90               	movwf	AESEncode@i& (0+255),b
 34285  0022C8                     l13199:
 34286                           
 34287                           ; BSR set to: 0
 34288  0022C8  0E0F               	movlw	15
 34289  0022CA  0100               	movlb	0	; () banked
 34290  0022CC  6590               	cpfsgt	AESEncode@i& (0+255),b
 34291  0022CE  D001               	goto	l13203
 34292  0022D0  D019               	goto	l13209
 34293  0022D2                     l13203:
 34294                           
 34295                           ; BSR set to: 0
 34296                           ;AES.c: 243: {
 34297                           ;AES.c: 244: key[i] = masterKey[i];
 34298  0022D2  0100               	movlb	0	; () banked
 34299  0022D4  5190               	movf	AESEncode@i& (0+255),w,b
 34300  0022D6  0D01               	mullw	1
 34301  0022D8  50F3               	movf	prodl,w,c
 34302  0022DA  0100               	movlb	0	; () banked
 34303  0022DC  256C               	addwf	AESEncode@masterKey& (0+255),w,b
 34304  0022DE  6ED9               	movwf	fsr2l,c
 34305  0022E0  50F4               	movf	prodh,w,c
 34306  0022E2  0100               	movlb	0	; () banked
 34307  0022E4  216D               	addwfc	(AESEncode@masterKey+1)& (0+255),w,b
 34308  0022E6  6EDA               	movwf	fsr2h,c
 34309  0022E8  0100               	movlb	0	; () banked
 34310  0022EA  5190               	movf	AESEncode@i& (0+255),w,b
 34311  0022EC  0D01               	mullw	1
 34312  0022EE  0E76               	movlw	low AESEncode@key
 34313  0022F0  24F3               	addwf	prodl,w,c
 34314  0022F2  6EE9               	movwf	fsr0l,c
 34315  0022F4  0E00               	movlw	high AESEncode@key
 34316  0022F6  20F4               	addwfc	prodh,w,c
 34317  0022F8  6EEA               	movwf	fsr0h,c
 34318  0022FA  CFDF FFEF          	movff	indf2,indf0
 34319                           
 34320                           ; BSR set to: 0
 34321  0022FE  0100               	movlb	0	; () banked
 34322  002300  2B90               	incf	AESEncode@i& (0+255),f,b
 34323  002302  D7E2               	goto	l13199
 34324  002304                     l13209:
 34325                           
 34326                           ; BSR set to: 0
 34327                           ;AES.c: 245: }
 34328                           ;AES.c: 248: _roundCounter = 10;
 34329  002304  0E0A               	movlw	10
 34330  002306  6E4B               	movwf	__roundCounter,c
 34331                           
 34332                           ;AES.c: 250: _rcon = 0x01;
 34333  002308  0E01               	movlw	1
 34334  00230A  6E4A               	movwf	__rcon,c
 34335                           
 34336                           ;AES.c: 253: for(i=0;i<16;i++)
 34337  00230C  0E00               	movlw	0
 34338  00230E  0100               	movlb	0	; () banked
 34339  002310  6F90               	movwf	AESEncode@i& (0+255),b
 34340  002312                     l13211:
 34341                           
 34342                           ; BSR set to: 0
 34343  002312  0E0F               	movlw	15
 34344  002314  0100               	movlb	0	; () banked
 34345  002316  6590               	cpfsgt	AESEncode@i& (0+255),b
 34346  002318  D001               	goto	l13215
 34347  00231A  D01D               	goto	l13221
 34348  00231C                     l13215:
 34349                           
 34350                           ; BSR set to: 0
 34351                           ;AES.c: 254: {
 34352                           ;AES.c: 255: block[i] ^= key[i];
 34353  00231C  0100               	movlb	0	; () banked
 34354  00231E  5190               	movf	AESEncode@i& (0+255),w,b
 34355  002320  0D01               	mullw	1
 34356  002322  0E76               	movlw	low AESEncode@key
 34357  002324  24F3               	addwf	prodl,w,c
 34358  002326  6ED9               	movwf	fsr2l,c
 34359  002328  0E00               	movlw	high AESEncode@key
 34360  00232A  20F4               	addwfc	prodh,w,c
 34361  00232C  6EDA               	movwf	fsr2h,c
 34362  00232E  50DF               	movf	indf2,w,c
 34363  002330  0100               	movlb	0	; () banked
 34364  002332  6F6E               	movwf	??_AESEncode& (0+255),b
 34365  002334  0100               	movlb	0	; () banked
 34366  002336  5190               	movf	AESEncode@i& (0+255),w,b
 34367  002338  0D01               	mullw	1
 34368  00233A  50F3               	movf	prodl,w,c
 34369  00233C  0100               	movlb	0	; () banked
 34370  00233E  256A               	addwf	AESEncode@block& (0+255),w,b
 34371  002340  6ED9               	movwf	fsr2l,c
 34372  002342  50F4               	movf	prodh,w,c
 34373  002344  0100               	movlb	0	; () banked
 34374  002346  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34375  002348  6EDA               	movwf	fsr2h,c
 34376  00234A  0100               	movlb	0	; () banked
 34377  00234C  516E               	movf	??_AESEncode& (0+255),w,b
 34378  00234E  1ADF               	xorwf	indf2,f,c
 34379                           
 34380                           ; BSR set to: 0
 34381  002350  0100               	movlb	0	; () banked
 34382  002352  2B90               	incf	AESEncode@i& (0+255),f,b
 34383  002354  D7DE               	goto	l13211
 34384  002356                     l13221:
 34385                           
 34386                           ; BSR set to: 0
 34387                           ;AES.c: 259: {
 34388                           ;AES.c: 261: for(i=0;i<16;i++)
 34389  002356  0E00               	movlw	0
 34390  002358  0100               	movlb	0	; () banked
 34391  00235A  6F90               	movwf	AESEncode@i& (0+255),b
 34392  00235C                     l13223:
 34393                           
 34394                           ; BSR set to: 0
 34395  00235C  0E0F               	movlw	15
 34396  00235E  0100               	movlb	0	; () banked
 34397  002360  6590               	cpfsgt	AESEncode@i& (0+255),b
 34398  002362  D001               	goto	l13227
 34399  002364  D02B               	goto	l13233
 34400  002366                     l13227:
 34401                           
 34402                           ; BSR set to: 0
 34403                           ;AES.c: 262: {
 34404                           ;AES.c: 263: block[i]=STable[block[i]];
 34405  002366  0100               	movlb	0	; () banked
 34406  002368  5190               	movf	AESEncode@i& (0+255),w,b
 34407  00236A  0D01               	mullw	1
 34408  00236C  50F3               	movf	prodl,w,c
 34409  00236E  0100               	movlb	0	; () banked
 34410  002370  256A               	addwf	AESEncode@block& (0+255),w,b
 34411  002372  6ED9               	movwf	fsr2l,c
 34412  002374  50F4               	movf	prodh,w,c
 34413  002376  0100               	movlb	0	; () banked
 34414  002378  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34415  00237A  6EDA               	movwf	fsr2h,c
 34416  00237C  50DF               	movf	indf2,w,c
 34417  00237E  0100               	movlb	0	; () banked
 34418  002380  6F6E               	movwf	??_AESEncode& (0+255),b
 34419  002382  0100               	movlb	0	; () banked
 34420  002384  516E               	movf	??_AESEncode& (0+255),w,b
 34421  002386  0D01               	mullw	1
 34422  002388  0E67               	movlw	low _STable
 34423  00238A  24F3               	addwf	prodl,w,c
 34424  00238C  6EF6               	movwf	tblptrl,c
 34425  00238E  0EFE               	movlw	high _STable
 34426  002390  20F4               	addwfc	prodh,w,c
 34427  002392  6EF7               	movwf	tblptrh,c
 34428  002394                     	if	1	;There are 3 active tblptr bytes
 34429  002394  6AF8               	clrf	tblptru,c
 34430  002396  0E00               	movlw	low (__mediumconst shr (0+16))
 34431  002398  22F8               	addwfc	tblptru,f,c
 34432  00239A                     	endif
 34433  00239A  0100               	movlb	0	; () banked
 34434  00239C  5190               	movf	AESEncode@i& (0+255),w,b
 34435  00239E  0D01               	mullw	1
 34436  0023A0  50F3               	movf	prodl,w,c
 34437  0023A2  0100               	movlb	0	; () banked
 34438  0023A4  256A               	addwf	AESEncode@block& (0+255),w,b
 34439  0023A6  6ED9               	movwf	fsr2l,c
 34440  0023A8  50F4               	movf	prodh,w,c
 34441  0023AA  0100               	movlb	0	; () banked
 34442  0023AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34443  0023AE  6EDA               	movwf	fsr2h,c
 34444  0023B0  0008               	tblrd		*
 34445  0023B2  CFF5 FFDF          	movff	tablat,indf2
 34446                           
 34447                           ; BSR set to: 0
 34448  0023B6  0100               	movlb	0	; () banked
 34449  0023B8  2B90               	incf	AESEncode@i& (0+255),f,b
 34450  0023BA  D7D0               	goto	l13223
 34451  0023BC                     l13233:
 34452                           
 34453                           ; BSR set to: 0
 34454                           ;AES.c: 264: }
 34455                           ;AES.c: 267: EncodeShiftRow(block);
 34456  0023BC  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 34457  0023C0  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 34458  0023C4  ECE8  F02C         	call	_EncodeShiftRow	;wreg free
 34459                           
 34460                           ;AES.c: 270: if(_roundCounter != 1)
 34461  0023C8  044B               	decf	__roundCounter,w,c
 34462  0023CA  B4D8               	btfsc	status,2,c
 34463  0023CC  D1C5               	goto	l13275
 34464                           
 34465                           ;AES.c: 271: {
 34466                           ;AES.c: 272: unsigned char aux,aux1,aux2,aux3;
 34467                           ;AES.c: 274: for(i=0;i<16;i+=4)
 34468  0023CE  0E00               	movlw	0
 34469  0023D0  0100               	movlb	0	; () banked
 34470  0023D2  6F90               	movwf	AESEncode@i& (0+255),b
 34471  0023D4                     l13239:
 34472                           
 34473                           ; BSR set to: 0
 34474  0023D4  0E0F               	movlw	15
 34475  0023D6  0100               	movlb	0	; () banked
 34476  0023D8  6590               	cpfsgt	AESEncode@i& (0+255),b
 34477  0023DA  D001               	goto	l13243
 34478  0023DC  D1BD               	goto	l13275
 34479  0023DE                     l13243:
 34480                           
 34481                           ; BSR set to: 0
 34482                           ;AES.c: 275: {
 34483                           ;AES.c: 276: aux1= block[i+0] ^ block[i+1];
 34484  0023DE  0100               	movlb	0	; () banked
 34485  0023E0  5190               	movf	AESEncode@i& (0+255),w,b
 34486  0023E2  0100               	movlb	0	; () banked
 34487  0023E4  6F6E               	movwf	??_AESEncode& (0+255),b
 34488  0023E6  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34489  0023E8  0E01               	movlw	1
 34490  0023EA  0100               	movlb	0	; () banked
 34491  0023EC  276E               	addwf	??_AESEncode& (0+255),f,b
 34492  0023EE  0E00               	movlw	0
 34493  0023F0  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34494  0023F2  0100               	movlb	0	; () banked
 34495  0023F4  516E               	movf	??_AESEncode& (0+255),w,b
 34496  0023F6  0100               	movlb	0	; () banked
 34497  0023F8  256A               	addwf	AESEncode@block& (0+255),w,b
 34498  0023FA  6ED9               	movwf	fsr2l,c
 34499  0023FC  0100               	movlb	0	; () banked
 34500  0023FE  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34501  002400  0100               	movlb	0	; () banked
 34502  002402  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34503  002404  6EDA               	movwf	fsr2h,c
 34504  002406  50DF               	movf	indf2,w,c
 34505  002408  0100               	movlb	0	; () banked
 34506  00240A  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34507  00240C  0100               	movlb	0	; () banked
 34508  00240E  5190               	movf	AESEncode@i& (0+255),w,b
 34509  002410  0100               	movlb	0	; () banked
 34510  002412  256A               	addwf	AESEncode@block& (0+255),w,b
 34511  002414  6ED9               	movwf	fsr2l,c
 34512  002416  0100               	movlb	0	; () banked
 34513  002418  0E00               	movlw	0
 34514  00241A  0100               	movlb	0	; () banked
 34515  00241C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34516  00241E  6EDA               	movwf	fsr2h,c
 34517  002420  50DF               	movf	indf2,w,c
 34518  002422  0100               	movlb	0	; () banked
 34519  002424  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34520  002426  0100               	movlb	0	; () banked
 34521  002428  6F8E               	movwf	AESEncode@aux1& (0+255),b
 34522                           
 34523                           ;AES.c: 277: aux3= block[i+2]^block[i+3];
 34524  00242A  0100               	movlb	0	; () banked
 34525  00242C  5190               	movf	AESEncode@i& (0+255),w,b
 34526  00242E  0100               	movlb	0	; () banked
 34527  002430  6F6E               	movwf	??_AESEncode& (0+255),b
 34528  002432  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34529  002434  0E03               	movlw	3
 34530  002436  0100               	movlb	0	; () banked
 34531  002438  276E               	addwf	??_AESEncode& (0+255),f,b
 34532  00243A  0E00               	movlw	0
 34533  00243C  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34534  00243E  0100               	movlb	0	; () banked
 34535  002440  516E               	movf	??_AESEncode& (0+255),w,b
 34536  002442  0100               	movlb	0	; () banked
 34537  002444  256A               	addwf	AESEncode@block& (0+255),w,b
 34538  002446  6ED9               	movwf	fsr2l,c
 34539  002448  0100               	movlb	0	; () banked
 34540  00244A  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34541  00244C  0100               	movlb	0	; () banked
 34542  00244E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34543  002450  6EDA               	movwf	fsr2h,c
 34544  002452  50DF               	movf	indf2,w,c
 34545  002454  0100               	movlb	0	; () banked
 34546  002456  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34547  002458  0100               	movlb	0	; () banked
 34548  00245A  5190               	movf	AESEncode@i& (0+255),w,b
 34549  00245C  0100               	movlb	0	; () banked
 34550  00245E  6F71               	movwf	(??_AESEncode+3)& (0+255),b
 34551  002460  6B72               	clrf	(??_AESEncode+4)& (0+255),b
 34552  002462  0E02               	movlw	2
 34553  002464  0100               	movlb	0	; () banked
 34554  002466  2771               	addwf	(??_AESEncode+3)& (0+255),f,b
 34555  002468  0E00               	movlw	0
 34556  00246A  2372               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34557  00246C  0100               	movlb	0	; () banked
 34558  00246E  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34559  002470  0100               	movlb	0	; () banked
 34560  002472  256A               	addwf	AESEncode@block& (0+255),w,b
 34561  002474  6ED9               	movwf	fsr2l,c
 34562  002476  0100               	movlb	0	; () banked
 34563  002478  5172               	movf	(??_AESEncode+4)& (0+255),w,b
 34564  00247A  0100               	movlb	0	; () banked
 34565  00247C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34566  00247E  6EDA               	movwf	fsr2h,c
 34567  002480  50DF               	movf	indf2,w,c
 34568  002482  0100               	movlb	0	; () banked
 34569  002484  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34570  002486  0100               	movlb	0	; () banked
 34571  002488  6F8F               	movwf	AESEncode@aux3& (0+255),b
 34572                           
 34573                           ; BSR set to: 0
 34574                           ;AES.c: 278: aux = aux1 ^ aux3;
 34575  00248A  0100               	movlb	0	; () banked
 34576  00248C  518E               	movf	AESEncode@aux1& (0+255),w,b
 34577  00248E  0100               	movlb	0	; () banked
 34578  002490  198F               	xorwf	AESEncode@aux3& (0+255),w,b
 34579  002492  0100               	movlb	0	; () banked
 34580  002494  6F8C               	movwf	AESEncode@aux& (0+255),b
 34581                           
 34582                           ; BSR set to: 0
 34583                           ;AES.c: 279: aux2= block[i+2]^block[i+1];
 34584  002496  0100               	movlb	0	; () banked
 34585  002498  5190               	movf	AESEncode@i& (0+255),w,b
 34586  00249A  0100               	movlb	0	; () banked
 34587  00249C  6F6E               	movwf	??_AESEncode& (0+255),b
 34588  00249E  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34589  0024A0  0E01               	movlw	1
 34590  0024A2  0100               	movlb	0	; () banked
 34591  0024A4  276E               	addwf	??_AESEncode& (0+255),f,b
 34592  0024A6  0E00               	movlw	0
 34593  0024A8  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34594  0024AA  0100               	movlb	0	; () banked
 34595  0024AC  516E               	movf	??_AESEncode& (0+255),w,b
 34596  0024AE  0100               	movlb	0	; () banked
 34597  0024B0  256A               	addwf	AESEncode@block& (0+255),w,b
 34598  0024B2  6ED9               	movwf	fsr2l,c
 34599  0024B4  0100               	movlb	0	; () banked
 34600  0024B6  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34601  0024B8  0100               	movlb	0	; () banked
 34602  0024BA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34603  0024BC  6EDA               	movwf	fsr2h,c
 34604  0024BE  50DF               	movf	indf2,w,c
 34605  0024C0  0100               	movlb	0	; () banked
 34606  0024C2  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34607  0024C4  0100               	movlb	0	; () banked
 34608  0024C6  5190               	movf	AESEncode@i& (0+255),w,b
 34609  0024C8  0100               	movlb	0	; () banked
 34610  0024CA  6F71               	movwf	(??_AESEncode+3)& (0+255),b
 34611  0024CC  6B72               	clrf	(??_AESEncode+4)& (0+255),b
 34612  0024CE  0E02               	movlw	2
 34613  0024D0  0100               	movlb	0	; () banked
 34614  0024D2  2771               	addwf	(??_AESEncode+3)& (0+255),f,b
 34615  0024D4  0E00               	movlw	0
 34616  0024D6  2372               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34617  0024D8  0100               	movlb	0	; () banked
 34618  0024DA  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34619  0024DC  0100               	movlb	0	; () banked
 34620  0024DE  256A               	addwf	AESEncode@block& (0+255),w,b
 34621  0024E0  6ED9               	movwf	fsr2l,c
 34622  0024E2  0100               	movlb	0	; () banked
 34623  0024E4  5172               	movf	(??_AESEncode+4)& (0+255),w,b
 34624  0024E6  0100               	movlb	0	; () banked
 34625  0024E8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34626  0024EA  6EDA               	movwf	fsr2h,c
 34627  0024EC  50DF               	movf	indf2,w,c
 34628  0024EE  0100               	movlb	0	; () banked
 34629  0024F0  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34630  0024F2  0100               	movlb	0	; () banked
 34631  0024F4  6F8D               	movwf	AESEncode@aux2& (0+255),b
 34632                           
 34633                           ;AES.c: 281: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 34634  0024F6  0E7F               	movlw	127
 34635  0024F8  0100               	movlb	0	; () banked
 34636  0024FA  658E               	cpfsgt	AESEncode@aux1& (0+255),b
 34637  0024FC  D012               	goto	l13251
 34638                           
 34639                           ; BSR set to: 0
 34640  0024FE  0E1B               	movlw	27
 34641  002500  C08E  F06E         	movff	AESEncode@aux1,??_AESEncode
 34642  002504  0100               	movlb	0	; () banked
 34643  002506  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34644  002508  90D8               	bcf	status,0,c
 34645  00250A  0100               	movlb	0	; () banked
 34646  00250C  376E               	rlcf	??_AESEncode& (0+255),f,b
 34647  00250E  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34648  002510  0100               	movlb	0	; () banked
 34649  002512  196E               	xorwf	??_AESEncode& (0+255),w,b
 34650  002514  0100               	movlb	0	; () banked
 34651  002516  6F86               	movwf	_AESEncode$3867& (0+255),b
 34652  002518  0100               	movlb	0	; () banked
 34653  00251A  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34654  00251C  0100               	movlb	0	; () banked
 34655  00251E  6F87               	movwf	(_AESEncode$3867+1)& (0+255),b
 34656  002520  D009               	goto	l13253
 34657  002522                     l13251:
 34658                           
 34659                           ; BSR set to: 0
 34660  002522  90D8               	bcf	status,0,c
 34661  002524  0100               	movlb	0	; () banked
 34662  002526  358E               	rlcf	AESEncode@aux1& (0+255),w,b
 34663  002528  0100               	movlb	0	; () banked
 34664  00252A  6F86               	movwf	_AESEncode$3867& (0+255),b
 34665  00252C  0100               	movlb	0	; () banked
 34666  00252E  6B87               	clrf	(_AESEncode$3867+1)& (0+255),b
 34667  002530  0100               	movlb	0	; () banked
 34668  002532  3787               	rlcf	(_AESEncode$3867+1)& (0+255),f,b
 34669  002534                     l13253:
 34670                           
 34671                           ; BSR set to: 0
 34672  002534  C086  F08E         	movff	_AESEncode$3867,AESEncode@aux1
 34673                           
 34674                           ;AES.c: 282: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 34675  002538  0E7F               	movlw	127
 34676  00253A  0100               	movlb	0	; () banked
 34677  00253C  658D               	cpfsgt	AESEncode@aux2& (0+255),b
 34678  00253E  D012               	goto	l13257
 34679                           
 34680                           ; BSR set to: 0
 34681  002540  0E1B               	movlw	27
 34682  002542  C08D  F06E         	movff	AESEncode@aux2,??_AESEncode
 34683  002546  0100               	movlb	0	; () banked
 34684  002548  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34685  00254A  90D8               	bcf	status,0,c
 34686  00254C  0100               	movlb	0	; () banked
 34687  00254E  376E               	rlcf	??_AESEncode& (0+255),f,b
 34688  002550  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34689  002552  0100               	movlb	0	; () banked
 34690  002554  196E               	xorwf	??_AESEncode& (0+255),w,b
 34691  002556  0100               	movlb	0	; () banked
 34692  002558  6F88               	movwf	_AESEncode$3868& (0+255),b
 34693  00255A  0100               	movlb	0	; () banked
 34694  00255C  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34695  00255E  0100               	movlb	0	; () banked
 34696  002560  6F89               	movwf	(_AESEncode$3868+1)& (0+255),b
 34697  002562  D009               	goto	l13259
 34698  002564                     l13257:
 34699                           
 34700                           ; BSR set to: 0
 34701  002564  90D8               	bcf	status,0,c
 34702  002566  0100               	movlb	0	; () banked
 34703  002568  358D               	rlcf	AESEncode@aux2& (0+255),w,b
 34704  00256A  0100               	movlb	0	; () banked
 34705  00256C  6F88               	movwf	_AESEncode$3868& (0+255),b
 34706  00256E  0100               	movlb	0	; () banked
 34707  002570  6B89               	clrf	(_AESEncode$3868+1)& (0+255),b
 34708  002572  0100               	movlb	0	; () banked
 34709  002574  3789               	rlcf	(_AESEncode$3868+1)& (0+255),f,b
 34710  002576                     l13259:
 34711                           
 34712                           ; BSR set to: 0
 34713  002576  C088  F08D         	movff	_AESEncode$3868,AESEncode@aux2
 34714                           
 34715                           ;AES.c: 283: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 34716  00257A  0E7F               	movlw	127
 34717  00257C  0100               	movlb	0	; () banked
 34718  00257E  658F               	cpfsgt	AESEncode@aux3& (0+255),b
 34719  002580  D012               	goto	l13263
 34720                           
 34721                           ; BSR set to: 0
 34722  002582  0E1B               	movlw	27
 34723  002584  C08F  F06E         	movff	AESEncode@aux3,??_AESEncode
 34724  002588  0100               	movlb	0	; () banked
 34725  00258A  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34726  00258C  90D8               	bcf	status,0,c
 34727  00258E  0100               	movlb	0	; () banked
 34728  002590  376E               	rlcf	??_AESEncode& (0+255),f,b
 34729  002592  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34730  002594  0100               	movlb	0	; () banked
 34731  002596  196E               	xorwf	??_AESEncode& (0+255),w,b
 34732  002598  0100               	movlb	0	; () banked
 34733  00259A  6F8A               	movwf	_AESEncode$3869& (0+255),b
 34734  00259C  0100               	movlb	0	; () banked
 34735  00259E  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34736  0025A0  0100               	movlb	0	; () banked
 34737  0025A2  6F8B               	movwf	(_AESEncode$3869+1)& (0+255),b
 34738  0025A4  D009               	goto	l13265
 34739  0025A6                     l13263:
 34740                           
 34741                           ; BSR set to: 0
 34742  0025A6  90D8               	bcf	status,0,c
 34743  0025A8  0100               	movlb	0	; () banked
 34744  0025AA  358F               	rlcf	AESEncode@aux3& (0+255),w,b
 34745  0025AC  0100               	movlb	0	; () banked
 34746  0025AE  6F8A               	movwf	_AESEncode$3869& (0+255),b
 34747  0025B0  0100               	movlb	0	; () banked
 34748  0025B2  6B8B               	clrf	(_AESEncode$3869+1)& (0+255),b
 34749  0025B4  0100               	movlb	0	; () banked
 34750  0025B6  378B               	rlcf	(_AESEncode$3869+1)& (0+255),f,b
 34751  0025B8                     l13265:
 34752                           
 34753                           ; BSR set to: 0
 34754  0025B8  C08A  F08F         	movff	_AESEncode$3869,AESEncode@aux3
 34755                           
 34756                           ; BSR set to: 0
 34757                           ;AES.c: 285: block[i+0]= aux^aux1^block[i+0];
 34758  0025BC  0100               	movlb	0	; () banked
 34759  0025BE  5190               	movf	AESEncode@i& (0+255),w,b
 34760  0025C0  0100               	movlb	0	; () banked
 34761  0025C2  256A               	addwf	AESEncode@block& (0+255),w,b
 34762  0025C4  6ED9               	movwf	fsr2l,c
 34763  0025C6  0100               	movlb	0	; () banked
 34764  0025C8  0E00               	movlw	0
 34765  0025CA  0100               	movlb	0	; () banked
 34766  0025CC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34767  0025CE  6EDA               	movwf	fsr2h,c
 34768  0025D0  0100               	movlb	0	; () banked
 34769  0025D2  5190               	movf	AESEncode@i& (0+255),w,b
 34770  0025D4  0100               	movlb	0	; () banked
 34771  0025D6  256A               	addwf	AESEncode@block& (0+255),w,b
 34772  0025D8  6EE9               	movwf	fsr0l,c
 34773  0025DA  0100               	movlb	0	; () banked
 34774  0025DC  0E00               	movlw	0
 34775  0025DE  0100               	movlb	0	; () banked
 34776  0025E0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34777  0025E2  6EEA               	movwf	fsr0h,c
 34778  0025E4  50EF               	movf	indf0,w,c
 34779  0025E6  0100               	movlb	0	; () banked
 34780  0025E8  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34781  0025EA  0100               	movlb	0	; () banked
 34782  0025EC  198E               	xorwf	AESEncode@aux1& (0+255),w,b
 34783  0025EE  6EDF               	movwf	indf2,c
 34784                           
 34785                           ; BSR set to: 0
 34786                           ;AES.c: 286: block[i+1]= aux^aux2^block[i+1];
 34787  0025F0  0100               	movlb	0	; () banked
 34788  0025F2  5190               	movf	AESEncode@i& (0+255),w,b
 34789  0025F4  0100               	movlb	0	; () banked
 34790  0025F6  6F6E               	movwf	??_AESEncode& (0+255),b
 34791  0025F8  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34792  0025FA  0E01               	movlw	1
 34793  0025FC  0100               	movlb	0	; () banked
 34794  0025FE  276E               	addwf	??_AESEncode& (0+255),f,b
 34795  002600  0E00               	movlw	0
 34796  002602  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34797  002604  0100               	movlb	0	; () banked
 34798  002606  516E               	movf	??_AESEncode& (0+255),w,b
 34799  002608  0100               	movlb	0	; () banked
 34800  00260A  256A               	addwf	AESEncode@block& (0+255),w,b
 34801  00260C  6ED9               	movwf	fsr2l,c
 34802  00260E  0100               	movlb	0	; () banked
 34803  002610  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34804  002612  0100               	movlb	0	; () banked
 34805  002614  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34806  002616  6EDA               	movwf	fsr2h,c
 34807  002618  0100               	movlb	0	; () banked
 34808  00261A  5190               	movf	AESEncode@i& (0+255),w,b
 34809  00261C  0100               	movlb	0	; () banked
 34810  00261E  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34811  002620  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 34812  002622  0E01               	movlw	1
 34813  002624  0100               	movlb	0	; () banked
 34814  002626  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 34815  002628  0E00               	movlw	0
 34816  00262A  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34817  00262C  0100               	movlb	0	; () banked
 34818  00262E  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 34819  002630  0100               	movlb	0	; () banked
 34820  002632  256A               	addwf	AESEncode@block& (0+255),w,b
 34821  002634  6EE9               	movwf	fsr0l,c
 34822  002636  0100               	movlb	0	; () banked
 34823  002638  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34824  00263A  0100               	movlb	0	; () banked
 34825  00263C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34826  00263E  6EEA               	movwf	fsr0h,c
 34827  002640  50EF               	movf	indf0,w,c
 34828  002642  0100               	movlb	0	; () banked
 34829  002644  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34830  002646  0100               	movlb	0	; () banked
 34831  002648  198D               	xorwf	AESEncode@aux2& (0+255),w,b
 34832  00264A  6EDF               	movwf	indf2,c
 34833                           
 34834                           ; BSR set to: 0
 34835                           ;AES.c: 287: block[i+2]= aux^aux3^block[i+2];
 34836  00264C  0100               	movlb	0	; () banked
 34837  00264E  5190               	movf	AESEncode@i& (0+255),w,b
 34838  002650  0100               	movlb	0	; () banked
 34839  002652  6F6E               	movwf	??_AESEncode& (0+255),b
 34840  002654  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34841  002656  0E02               	movlw	2
 34842  002658  0100               	movlb	0	; () banked
 34843  00265A  276E               	addwf	??_AESEncode& (0+255),f,b
 34844  00265C  0E00               	movlw	0
 34845  00265E  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34846  002660  0100               	movlb	0	; () banked
 34847  002662  516E               	movf	??_AESEncode& (0+255),w,b
 34848  002664  0100               	movlb	0	; () banked
 34849  002666  256A               	addwf	AESEncode@block& (0+255),w,b
 34850  002668  6ED9               	movwf	fsr2l,c
 34851  00266A  0100               	movlb	0	; () banked
 34852  00266C  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34853  00266E  0100               	movlb	0	; () banked
 34854  002670  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34855  002672  6EDA               	movwf	fsr2h,c
 34856  002674  0100               	movlb	0	; () banked
 34857  002676  5190               	movf	AESEncode@i& (0+255),w,b
 34858  002678  0100               	movlb	0	; () banked
 34859  00267A  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34860  00267C  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 34861  00267E  0E02               	movlw	2
 34862  002680  0100               	movlb	0	; () banked
 34863  002682  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 34864  002684  0E00               	movlw	0
 34865  002686  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34866  002688  0100               	movlb	0	; () banked
 34867  00268A  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 34868  00268C  0100               	movlb	0	; () banked
 34869  00268E  256A               	addwf	AESEncode@block& (0+255),w,b
 34870  002690  6EE9               	movwf	fsr0l,c
 34871  002692  0100               	movlb	0	; () banked
 34872  002694  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34873  002696  0100               	movlb	0	; () banked
 34874  002698  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34875  00269A  6EEA               	movwf	fsr0h,c
 34876  00269C  50EF               	movf	indf0,w,c
 34877  00269E  0100               	movlb	0	; () banked
 34878  0026A0  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34879  0026A2  0100               	movlb	0	; () banked
 34880  0026A4  198F               	xorwf	AESEncode@aux3& (0+255),w,b
 34881  0026A6  6EDF               	movwf	indf2,c
 34882                           
 34883                           ; BSR set to: 0
 34884                           ;AES.c: 288: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 34885  0026A8  0100               	movlb	0	; () banked
 34886  0026AA  5190               	movf	AESEncode@i& (0+255),w,b
 34887  0026AC  0100               	movlb	0	; () banked
 34888  0026AE  6F6E               	movwf	??_AESEncode& (0+255),b
 34889  0026B0  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34890  0026B2  0E03               	movlw	3
 34891  0026B4  0100               	movlb	0	; () banked
 34892  0026B6  276E               	addwf	??_AESEncode& (0+255),f,b
 34893  0026B8  0E00               	movlw	0
 34894  0026BA  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34895  0026BC  0100               	movlb	0	; () banked
 34896  0026BE  516E               	movf	??_AESEncode& (0+255),w,b
 34897  0026C0  0100               	movlb	0	; () banked
 34898  0026C2  256A               	addwf	AESEncode@block& (0+255),w,b
 34899  0026C4  6ED9               	movwf	fsr2l,c
 34900  0026C6  0100               	movlb	0	; () banked
 34901  0026C8  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34902  0026CA  0100               	movlb	0	; () banked
 34903  0026CC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34904  0026CE  6EDA               	movwf	fsr2h,c
 34905  0026D0  0100               	movlb	0	; () banked
 34906  0026D2  5190               	movf	AESEncode@i& (0+255),w,b
 34907  0026D4  0100               	movlb	0	; () banked
 34908  0026D6  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34909  0026D8  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 34910  0026DA  0E02               	movlw	2
 34911  0026DC  0100               	movlb	0	; () banked
 34912  0026DE  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 34913  0026E0  0E00               	movlw	0
 34914  0026E2  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34915  0026E4  0100               	movlb	0	; () banked
 34916  0026E6  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 34917  0026E8  0100               	movlb	0	; () banked
 34918  0026EA  256A               	addwf	AESEncode@block& (0+255),w,b
 34919  0026EC  6EE9               	movwf	fsr0l,c
 34920  0026EE  0100               	movlb	0	; () banked
 34921  0026F0  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34922  0026F2  0100               	movlb	0	; () banked
 34923  0026F4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34924  0026F6  6EEA               	movwf	fsr0h,c
 34925  0026F8  50EF               	movf	indf0,w,c
 34926  0026FA  0100               	movlb	0	; () banked
 34927  0026FC  6F72               	movwf	(??_AESEncode+4)& (0+255),b
 34928  0026FE  0100               	movlb	0	; () banked
 34929  002700  5190               	movf	AESEncode@i& (0+255),w,b
 34930  002702  0100               	movlb	0	; () banked
 34931  002704  6F73               	movwf	(??_AESEncode+5)& (0+255),b
 34932  002706  6B74               	clrf	(??_AESEncode+6)& (0+255),b
 34933  002708  0E01               	movlw	1
 34934  00270A  0100               	movlb	0	; () banked
 34935  00270C  2773               	addwf	(??_AESEncode+5)& (0+255),f,b
 34936  00270E  0E00               	movlw	0
 34937  002710  2374               	addwfc	(??_AESEncode+6)& (0+255),f,b
 34938  002712  0100               	movlb	0	; () banked
 34939  002714  5173               	movf	(??_AESEncode+5)& (0+255),w,b
 34940  002716  0100               	movlb	0	; () banked
 34941  002718  256A               	addwf	AESEncode@block& (0+255),w,b
 34942  00271A  6EE9               	movwf	fsr0l,c
 34943  00271C  0100               	movlb	0	; () banked
 34944  00271E  5174               	movf	(??_AESEncode+6)& (0+255),w,b
 34945  002720  0100               	movlb	0	; () banked
 34946  002722  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34947  002724  6EEA               	movwf	fsr0h,c
 34948  002726  50EF               	movf	indf0,w,c
 34949  002728  0100               	movlb	0	; () banked
 34950  00272A  6F75               	movwf	(??_AESEncode+7)& (0+255),b
 34951  00272C  0100               	movlb	0	; () banked
 34952  00272E  5190               	movf	AESEncode@i& (0+255),w,b
 34953  002730  0100               	movlb	0	; () banked
 34954  002732  256A               	addwf	AESEncode@block& (0+255),w,b
 34955  002734  6EE9               	movwf	fsr0l,c
 34956  002736  0100               	movlb	0	; () banked
 34957  002738  0E00               	movlw	0
 34958  00273A  0100               	movlb	0	; () banked
 34959  00273C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34960  00273E  6EEA               	movwf	fsr0h,c
 34961  002740  50EF               	movf	indf0,w,c
 34962  002742  0100               	movlb	0	; () banked
 34963  002744  1975               	xorwf	(??_AESEncode+7)& (0+255),w,b
 34964  002746  0100               	movlb	0	; () banked
 34965  002748  1972               	xorwf	(??_AESEncode+4)& (0+255),w,b
 34966  00274A  0100               	movlb	0	; () banked
 34967  00274C  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34968  00274E  6EDF               	movwf	indf2,c
 34969  002750  0E04               	movlw	4
 34970  002752  0100               	movlb	0	; () banked
 34971  002754  2790               	addwf	AESEncode@i& (0+255),f,b
 34972  002756  D63E               	goto	l13239
 34973  002758                     l13275:
 34974                           
 34975                           ;AES.c: 289: }
 34976                           ;AES.c: 290: }
 34977                           ;AES.c: 292: EncKeySchedule(key);
 34978  002758  0E76               	movlw	low AESEncode@key
 34979  00275A  0100               	movlb	0	; () banked
 34980  00275C  6F64               	movwf	EncKeySchedule@key& (0+255),b
 34981  00275E  0E00               	movlw	high AESEncode@key
 34982  002760  0100               	movlb	0	; () banked
 34983  002762  6F65               	movwf	(EncKeySchedule@key+1)& (0+255),b
 34984  002764  EC9B  F01D         	call	_EncKeySchedule	;wreg free
 34985                           
 34986                           ;AES.c: 294: for(i=0;i<16;i++)
 34987  002768  0E00               	movlw	0
 34988  00276A  0100               	movlb	0	; () banked
 34989  00276C  6F90               	movwf	AESEncode@i& (0+255),b
 34990  00276E                     l13279:
 34991                           
 34992                           ; BSR set to: 0
 34993  00276E  0E0F               	movlw	15
 34994  002770  0100               	movlb	0	; () banked
 34995  002772  6590               	cpfsgt	AESEncode@i& (0+255),b
 34996  002774  D001               	goto	l13283
 34997  002776  D01D               	goto	l13289
 34998  002778                     l13283:
 34999                           
 35000                           ; BSR set to: 0
 35001                           ;AES.c: 295: {
 35002                           ;AES.c: 296: block[i] ^= key[i];
 35003  002778  0100               	movlb	0	; () banked
 35004  00277A  5190               	movf	AESEncode@i& (0+255),w,b
 35005  00277C  0D01               	mullw	1
 35006  00277E  0E76               	movlw	low AESEncode@key
 35007  002780  24F3               	addwf	prodl,w,c
 35008  002782  6ED9               	movwf	fsr2l,c
 35009  002784  0E00               	movlw	high AESEncode@key
 35010  002786  20F4               	addwfc	prodh,w,c
 35011  002788  6EDA               	movwf	fsr2h,c
 35012  00278A  50DF               	movf	indf2,w,c
 35013  00278C  0100               	movlb	0	; () banked
 35014  00278E  6F6E               	movwf	??_AESEncode& (0+255),b
 35015  002790  0100               	movlb	0	; () banked
 35016  002792  5190               	movf	AESEncode@i& (0+255),w,b
 35017  002794  0D01               	mullw	1
 35018  002796  50F3               	movf	prodl,w,c
 35019  002798  0100               	movlb	0	; () banked
 35020  00279A  256A               	addwf	AESEncode@block& (0+255),w,b
 35021  00279C  6ED9               	movwf	fsr2l,c
 35022  00279E  50F4               	movf	prodh,w,c
 35023  0027A0  0100               	movlb	0	; () banked
 35024  0027A2  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35025  0027A4  6EDA               	movwf	fsr2h,c
 35026  0027A6  0100               	movlb	0	; () banked
 35027  0027A8  516E               	movf	??_AESEncode& (0+255),w,b
 35028  0027AA  1ADF               	xorwf	indf2,f,c
 35029                           
 35030                           ; BSR set to: 0
 35031  0027AC  0100               	movlb	0	; () banked
 35032  0027AE  2B90               	incf	AESEncode@i& (0+255),f,b
 35033  0027B0  D7DE               	goto	l13279
 35034  0027B2                     l13289:
 35035                           
 35036                           ; BSR set to: 0
 35037                           ;AES.c: 297: }
 35038                           ;AES.c: 299: _roundCounter--;
 35039  0027B2  064B               	decf	__roundCounter,f,c
 35040                           
 35041                           ; BSR set to: 0
 35042                           ;AES.c: 300: }
 35043                           ;AES.c: 301: while(_roundCounter !=0);
 35044  0027B4  504B               	movf	__roundCounter,w,c
 35045  0027B6  B4D8               	btfsc	status,2,c
 35046  0027B8  0012               	return	
 35047  0027BA  D5CD               	goto	l13221
 35048  0027BC                     __end_of_AESEncode:
 35049                           	opt stack 0
 35050                           tosu	equ	0xFFF
 35051                           tosh	equ	0xFFE
 35052                           tosl	equ	0xFFD
 35053                           pclath	equ	0xFFA
 35054                           tblptru	equ	0xFF8
 35055                           tblptrh	equ	0xFF7
 35056                           tblptrl	equ	0xFF6
 35057                           tablat	equ	0xFF5
 35058                           prodh	equ	0xFF4
 35059                           prodl	equ	0xFF3
 35060                           intcon	equ	0xFF2
 35061                           intcon2	equ	0xFF1
 35062                           intcon3	equ	0xFF0
 35063                           indf0	equ	0xFEF
 35064                           postinc0	equ	0xFEE
 35065                           plusw0	equ	0xFEB
 35066                           fsr0h	equ	0xFEA
 35067                           fsr0l	equ	0xFE9
 35068                           wreg	equ	0xFE8
 35069                           postinc1	equ	0xFE6
 35070                           postdec1	equ	0xFE5
 35071                           plusw1	equ	0xFE3
 35072                           fsr1h	equ	0xFE2
 35073                           fsr1l	equ	0xFE1
 35074                           indf2	equ	0xFDF
 35075                           postinc2	equ	0xFDE
 35076                           postdec2	equ	0xFDD
 35077                           plusw2	equ	0xFDB
 35078                           fsr2h	equ	0xFDA
 35079                           fsr2l	equ	0xFD9
 35080                           status	equ	0xFD8
 35081                           
 35082 ;; *************** function _EncodeShiftRow *****************
 35083 ;; Defined at:
 35084 ;;		line 205 in file "mcc_generated_files/LoRaWAN/AES.c"
 35085 ;; Parameters:    Size  Location     Type
 35086 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 35087 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 35088 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 35089 ;; Auto vars:     Size  Location     Type
 35090 ;;  temp            1    6[BANK0 ] unsigned char 
 35091 ;; Return value:  Size  Location     Type
 35092 ;;                  1    wreg      void 
 35093 ;; Registers used:
 35094 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 35095 ;; Tracked objects:
 35096 ;;		On entry : 0/0
 35097 ;;		On exit  : 0/0
 35098 ;;		Unchanged: 0/0
 35099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35100 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35101 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35103 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35104 ;;Total ram usage:        3 bytes
 35105 ;; Hardware stack levels used:    1
 35106 ;; Hardware stack levels required when called:    7
 35107 ;; This function calls:
 35108 ;;		Nothing
 35109 ;; This function is called by:
 35110 ;;		_AESEncode
 35111 ;; This function uses a non-reentrant model
 35112 ;;
 35113                           
 35114                           	psect	text156
 35115  0059D0                     __ptext156:
 35116                           	opt stack 0
 35117  0059D0                     _EncodeShiftRow:
 35118                           	opt stack 17
 35119                           
 35120                           ;AES.c: 207: unsigned char temp;
 35121                           ;AES.c: 212: temp=stateTable[1];
 35122                           
 35123                           ; BSR set to: 0
 35124                           ;incstack = 0
 35125  0059D0  0100               	movlb	0	; () banked
 35126  0059D2  EE20 F001          	lfsr	2,1
 35127  0059D6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35128  0059D8  26D9               	addwf	fsr2l,f,c
 35129  0059DA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35130  0059DC  22DA               	addwfc	fsr2h,f,c
 35131  0059DE  50DF               	movf	indf2,w,c
 35132  0059E0  0100               	movlb	0	; () banked
 35133  0059E2  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35134                           
 35135                           ; BSR set to: 0
 35136                           ;AES.c: 213: stateTable[1]=stateTable[5];
 35137  0059E4  0100               	movlb	0	; () banked
 35138  0059E6  EE20 F005          	lfsr	2,5
 35139  0059EA  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35140  0059EC  26D9               	addwf	fsr2l,f,c
 35141  0059EE  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35142  0059F0  22DA               	addwfc	fsr2h,f,c
 35143  0059F2  0100               	movlb	0	; () banked
 35144  0059F4  EE00 F001          	lfsr	0,1
 35145  0059F8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35146  0059FA  26E9               	addwf	fsr0l,f,c
 35147  0059FC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35148  0059FE  22EA               	addwfc	fsr0h,f,c
 35149  005A00  CFDF FFEF          	movff	indf2,indf0
 35150                           
 35151                           ; BSR set to: 0
 35152                           ;AES.c: 214: stateTable[5]=stateTable[9];
 35153  005A04  0100               	movlb	0	; () banked
 35154  005A06  EE20 F009          	lfsr	2,9
 35155  005A0A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35156  005A0C  26D9               	addwf	fsr2l,f,c
 35157  005A0E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35158  005A10  22DA               	addwfc	fsr2h,f,c
 35159  005A12  0100               	movlb	0	; () banked
 35160  005A14  EE00 F005          	lfsr	0,5
 35161  005A18  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35162  005A1A  26E9               	addwf	fsr0l,f,c
 35163  005A1C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35164  005A1E  22EA               	addwfc	fsr0h,f,c
 35165  005A20  CFDF FFEF          	movff	indf2,indf0
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;AES.c: 215: stateTable[9]=stateTable[13];
 35169  005A24  0100               	movlb	0	; () banked
 35170  005A26  EE20 F00D          	lfsr	2,13
 35171  005A2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35172  005A2C  26D9               	addwf	fsr2l,f,c
 35173  005A2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35174  005A30  22DA               	addwfc	fsr2h,f,c
 35175  005A32  0100               	movlb	0	; () banked
 35176  005A34  EE00 F009          	lfsr	0,9
 35177  005A38  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35178  005A3A  26E9               	addwf	fsr0l,f,c
 35179  005A3C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35180  005A3E  22EA               	addwfc	fsr0h,f,c
 35181  005A40  CFDF FFEF          	movff	indf2,indf0
 35182                           
 35183                           ; BSR set to: 0
 35184                           ;AES.c: 216: stateTable[13]=temp;
 35185  005A44  0100               	movlb	0	; () banked
 35186  005A46  EE20 F00D          	lfsr	2,13
 35187  005A4A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35188  005A4C  26D9               	addwf	fsr2l,f,c
 35189  005A4E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35190  005A50  22DA               	addwfc	fsr2h,f,c
 35191  005A52  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35192                           
 35193                           ; BSR set to: 0
 35194                           ;AES.c: 219: temp=stateTable[2];
 35195  005A56  0100               	movlb	0	; () banked
 35196  005A58  EE20 F002          	lfsr	2,2
 35197  005A5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35198  005A5E  26D9               	addwf	fsr2l,f,c
 35199  005A60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35200  005A62  22DA               	addwfc	fsr2h,f,c
 35201  005A64  50DF               	movf	indf2,w,c
 35202  005A66  0100               	movlb	0	; () banked
 35203  005A68  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35204                           
 35205                           ; BSR set to: 0
 35206                           ;AES.c: 220: stateTable[2]=stateTable[10];
 35207  005A6A  0100               	movlb	0	; () banked
 35208  005A6C  EE20 F00A          	lfsr	2,10
 35209  005A70  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35210  005A72  26D9               	addwf	fsr2l,f,c
 35211  005A74  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35212  005A76  22DA               	addwfc	fsr2h,f,c
 35213  005A78  0100               	movlb	0	; () banked
 35214  005A7A  EE00 F002          	lfsr	0,2
 35215  005A7E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35216  005A80  26E9               	addwf	fsr0l,f,c
 35217  005A82  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35218  005A84  22EA               	addwfc	fsr0h,f,c
 35219  005A86  CFDF FFEF          	movff	indf2,indf0
 35220                           
 35221                           ;AES.c: 221: stateTable[10]=temp;
 35222  005A8A  0100               	movlb	0	; () banked
 35223  005A8C  EE20 F00A          	lfsr	2,10
 35224  005A90  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35225  005A92  26D9               	addwf	fsr2l,f,c
 35226  005A94  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35227  005A96  22DA               	addwfc	fsr2h,f,c
 35228  005A98  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35229                           
 35230                           ;AES.c: 222: temp=stateTable[14];
 35231  005A9C  0100               	movlb	0	; () banked
 35232  005A9E  EE20 F00E          	lfsr	2,14
 35233  005AA2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35234  005AA4  26D9               	addwf	fsr2l,f,c
 35235  005AA6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35236  005AA8  22DA               	addwfc	fsr2h,f,c
 35237  005AAA  50DF               	movf	indf2,w,c
 35238  005AAC  0100               	movlb	0	; () banked
 35239  005AAE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35240                           
 35241                           ; BSR set to: 0
 35242                           ;AES.c: 223: stateTable[14]=stateTable[6];
 35243  005AB0  0100               	movlb	0	; () banked
 35244  005AB2  EE20 F006          	lfsr	2,6
 35245  005AB6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35246  005AB8  26D9               	addwf	fsr2l,f,c
 35247  005ABA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35248  005ABC  22DA               	addwfc	fsr2h,f,c
 35249  005ABE  0100               	movlb	0	; () banked
 35250  005AC0  EE00 F00E          	lfsr	0,14
 35251  005AC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35252  005AC6  26E9               	addwf	fsr0l,f,c
 35253  005AC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35254  005ACA  22EA               	addwfc	fsr0h,f,c
 35255  005ACC  CFDF FFEF          	movff	indf2,indf0
 35256                           
 35257                           ; BSR set to: 0
 35258                           ;AES.c: 224: stateTable[6]=temp;
 35259  005AD0  0100               	movlb	0	; () banked
 35260  005AD2  EE20 F006          	lfsr	2,6
 35261  005AD6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35262  005AD8  26D9               	addwf	fsr2l,f,c
 35263  005ADA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35264  005ADC  22DA               	addwfc	fsr2h,f,c
 35265  005ADE  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35266                           
 35267                           ; BSR set to: 0
 35268                           ;AES.c: 227: temp=stateTable[3];
 35269  005AE2  0100               	movlb	0	; () banked
 35270  005AE4  EE20 F003          	lfsr	2,3
 35271  005AE8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35272  005AEA  26D9               	addwf	fsr2l,f,c
 35273  005AEC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35274  005AEE  22DA               	addwfc	fsr2h,f,c
 35275  005AF0  50DF               	movf	indf2,w,c
 35276  005AF2  0100               	movlb	0	; () banked
 35277  005AF4  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35278                           
 35279                           ; BSR set to: 0
 35280                           ;AES.c: 228: stateTable[3]=stateTable[15];
 35281  005AF6  0100               	movlb	0	; () banked
 35282  005AF8  EE20 F00F          	lfsr	2,15
 35283  005AFC  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35284  005AFE  26D9               	addwf	fsr2l,f,c
 35285  005B00  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35286  005B02  22DA               	addwfc	fsr2h,f,c
 35287  005B04  0100               	movlb	0	; () banked
 35288  005B06  EE00 F003          	lfsr	0,3
 35289  005B0A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35290  005B0C  26E9               	addwf	fsr0l,f,c
 35291  005B0E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35292  005B10  22EA               	addwfc	fsr0h,f,c
 35293  005B12  CFDF FFEF          	movff	indf2,indf0
 35294                           
 35295                           ; BSR set to: 0
 35296                           ;AES.c: 229: stateTable[15]=stateTable[11];
 35297  005B16  0100               	movlb	0	; () banked
 35298  005B18  EE20 F00B          	lfsr	2,11
 35299  005B1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35300  005B1E  26D9               	addwf	fsr2l,f,c
 35301  005B20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35302  005B22  22DA               	addwfc	fsr2h,f,c
 35303  005B24  0100               	movlb	0	; () banked
 35304  005B26  EE00 F00F          	lfsr	0,15
 35305  005B2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35306  005B2C  26E9               	addwf	fsr0l,f,c
 35307  005B2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35308  005B30  22EA               	addwfc	fsr0h,f,c
 35309  005B32  CFDF FFEF          	movff	indf2,indf0
 35310                           
 35311                           ; BSR set to: 0
 35312                           ;AES.c: 230: stateTable[11]=stateTable[7];
 35313  005B36  0100               	movlb	0	; () banked
 35314  005B38  EE20 F007          	lfsr	2,7
 35315  005B3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35316  005B3E  26D9               	addwf	fsr2l,f,c
 35317  005B40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35318  005B42  22DA               	addwfc	fsr2h,f,c
 35319  005B44  0100               	movlb	0	; () banked
 35320  005B46  EE00 F00B          	lfsr	0,11
 35321  005B4A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35322  005B4C  26E9               	addwf	fsr0l,f,c
 35323  005B4E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35324  005B50  22EA               	addwfc	fsr0h,f,c
 35325  005B52  CFDF FFEF          	movff	indf2,indf0
 35326                           
 35327                           ;AES.c: 231: stateTable[7]=temp;
 35328  005B56  0100               	movlb	0	; () banked
 35329  005B58  EE20 F007          	lfsr	2,7
 35330  005B5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35331  005B5E  26D9               	addwf	fsr2l,f,c
 35332  005B60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35333  005B62  22DA               	addwfc	fsr2h,f,c
 35334  005B64  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35335                           
 35336                           ; BSR set to: 0
 35337  005B68  0012               	return		;funcret
 35338  005B6A                     __end_of_EncodeShiftRow:
 35339                           	opt stack 0
 35340                           tosu	equ	0xFFF
 35341                           tosh	equ	0xFFE
 35342                           tosl	equ	0xFFD
 35343                           pclath	equ	0xFFA
 35344                           tblptru	equ	0xFF8
 35345                           tblptrh	equ	0xFF7
 35346                           tblptrl	equ	0xFF6
 35347                           tablat	equ	0xFF5
 35348                           prodh	equ	0xFF4
 35349                           prodl	equ	0xFF3
 35350                           intcon	equ	0xFF2
 35351                           intcon2	equ	0xFF1
 35352                           intcon3	equ	0xFF0
 35353                           indf0	equ	0xFEF
 35354                           postinc0	equ	0xFEE
 35355                           plusw0	equ	0xFEB
 35356                           fsr0h	equ	0xFEA
 35357                           fsr0l	equ	0xFE9
 35358                           wreg	equ	0xFE8
 35359                           postinc1	equ	0xFE6
 35360                           postdec1	equ	0xFE5
 35361                           plusw1	equ	0xFE3
 35362                           fsr1h	equ	0xFE2
 35363                           fsr1l	equ	0xFE1
 35364                           indf2	equ	0xFDF
 35365                           postinc2	equ	0xFDE
 35366                           postdec2	equ	0xFDD
 35367                           plusw2	equ	0xFDB
 35368                           fsr2h	equ	0xFDA
 35369                           fsr2l	equ	0xFD9
 35370                           status	equ	0xFD8
 35371                           
 35372 ;; *************** function _EncKeySchedule *****************
 35373 ;; Defined at:
 35374 ;;		line 160 in file "mcc_generated_files/LoRaWAN/AES.c"
 35375 ;; Parameters:    Size  Location     Type
 35376 ;;  key             2    4[BANK0 ] PTR unsigned char 
 35377 ;;		 -> AESEncode@key(16), 
 35378 ;; Auto vars:     Size  Location     Type
 35379 ;;		None
 35380 ;; Return value:  Size  Location     Type
 35381 ;;                  1    wreg      void 
 35382 ;; Registers used:
 35383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 35384 ;; Tracked objects:
 35385 ;;		On entry : 0/0
 35386 ;;		On exit  : 0/0
 35387 ;;		Unchanged: 0/0
 35388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35389 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35390 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35391 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35392 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35393 ;;Total ram usage:        6 bytes
 35394 ;; Hardware stack levels used:    1
 35395 ;; Hardware stack levels required when called:    7
 35396 ;; This function calls:
 35397 ;;		Nothing
 35398 ;; This function is called by:
 35399 ;;		_AESEncode
 35400 ;; This function uses a non-reentrant model
 35401 ;;
 35402                           
 35403                           	psect	text157
 35404  003B36                     __ptext157:
 35405                           	opt stack 0
 35406  003B36                     _EncKeySchedule:
 35407                           	opt stack 17
 35408                           
 35409                           ;AES.c: 163: key[0]^=STable[key[13]];
 35410                           
 35411                           ; BSR set to: 0
 35412                           ;incstack = 0
 35413  003B36  0100               	movlb	0	; () banked
 35414  003B38  EE20 F00D          	lfsr	2,13
 35415  003B3C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35416  003B3E  26D9               	addwf	fsr2l,f,c
 35417  003B40  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35418  003B42  22DA               	addwfc	fsr2h,f,c
 35419  003B44  50DF               	movf	indf2,w,c
 35420  003B46  0100               	movlb	0	; () banked
 35421  003B48  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35422  003B4A  0100               	movlb	0	; () banked
 35423  003B4C  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35424  003B4E  0D01               	mullw	1
 35425  003B50  0E67               	movlw	low _STable
 35426  003B52  24F3               	addwf	prodl,w,c
 35427  003B54  6EF6               	movwf	tblptrl,c
 35428  003B56  0EFE               	movlw	high _STable
 35429  003B58  20F4               	addwfc	prodh,w,c
 35430  003B5A  6EF7               	movwf	tblptrh,c
 35431  003B5C                     	if	1	;There are 3 active tblptr bytes
 35432  003B5C  6AF8               	clrf	tblptru,c
 35433  003B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 35434  003B60  22F8               	addwfc	tblptru,f,c
 35435  003B62                     	endif
 35436  003B62  0008               	tblrd		*
 35437  003B64  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35438  003B68  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35439  003B6C  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35440  003B70  0100               	movlb	0	; () banked
 35441  003B72  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35442  003B74  1ADF               	xorwf	indf2,f,c
 35443                           
 35444                           ;AES.c: 164: key[1]^=STable[key[14]];
 35445  003B76  0100               	movlb	0	; () banked
 35446  003B78  EE20 F00E          	lfsr	2,14
 35447  003B7C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35448  003B7E  26D9               	addwf	fsr2l,f,c
 35449  003B80  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35450  003B82  22DA               	addwfc	fsr2h,f,c
 35451  003B84  50DF               	movf	indf2,w,c
 35452  003B86  0100               	movlb	0	; () banked
 35453  003B88  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35454  003B8A  0100               	movlb	0	; () banked
 35455  003B8C  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35456  003B8E  0D01               	mullw	1
 35457  003B90  0E67               	movlw	low _STable
 35458  003B92  24F3               	addwf	prodl,w,c
 35459  003B94  6EF6               	movwf	tblptrl,c
 35460  003B96  0EFE               	movlw	high _STable
 35461  003B98  20F4               	addwfc	prodh,w,c
 35462  003B9A  6EF7               	movwf	tblptrh,c
 35463  003B9C                     	if	1	;There are 3 active tblptr bytes
 35464  003B9C  6AF8               	clrf	tblptru,c
 35465  003B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 35466  003BA0  22F8               	addwfc	tblptru,f,c
 35467  003BA2                     	endif
 35468  003BA2  0008               	tblrd		*
 35469  003BA4  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35470  003BA8  0100               	movlb	0	; () banked
 35471  003BAA  EE20 F001          	lfsr	2,1
 35472  003BAE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35473  003BB0  26D9               	addwf	fsr2l,f,c
 35474  003BB2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35475  003BB4  22DA               	addwfc	fsr2h,f,c
 35476  003BB6  0100               	movlb	0	; () banked
 35477  003BB8  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35478  003BBA  1ADF               	xorwf	indf2,f,c
 35479                           
 35480                           ;AES.c: 165: key[2]^=STable[key[15]];
 35481  003BBC  0100               	movlb	0	; () banked
 35482  003BBE  EE20 F00F          	lfsr	2,15
 35483  003BC2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35484  003BC4  26D9               	addwf	fsr2l,f,c
 35485  003BC6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35486  003BC8  22DA               	addwfc	fsr2h,f,c
 35487  003BCA  50DF               	movf	indf2,w,c
 35488  003BCC  0100               	movlb	0	; () banked
 35489  003BCE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35490  003BD0  0100               	movlb	0	; () banked
 35491  003BD2  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35492  003BD4  0D01               	mullw	1
 35493  003BD6  0E67               	movlw	low _STable
 35494  003BD8  24F3               	addwf	prodl,w,c
 35495  003BDA  6EF6               	movwf	tblptrl,c
 35496  003BDC  0EFE               	movlw	high _STable
 35497  003BDE  20F4               	addwfc	prodh,w,c
 35498  003BE0  6EF7               	movwf	tblptrh,c
 35499  003BE2                     	if	1	;There are 3 active tblptr bytes
 35500  003BE2  6AF8               	clrf	tblptru,c
 35501  003BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 35502  003BE6  22F8               	addwfc	tblptru,f,c
 35503  003BE8                     	endif
 35504  003BE8  0008               	tblrd		*
 35505  003BEA  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35506  003BEE  0100               	movlb	0	; () banked
 35507  003BF0  EE20 F002          	lfsr	2,2
 35508  003BF4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35509  003BF6  26D9               	addwf	fsr2l,f,c
 35510  003BF8  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35511  003BFA  22DA               	addwfc	fsr2h,f,c
 35512  003BFC  0100               	movlb	0	; () banked
 35513  003BFE  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35514  003C00  1ADF               	xorwf	indf2,f,c
 35515                           
 35516                           ;AES.c: 166: key[3]^=STable[key[12]];
 35517  003C02  0100               	movlb	0	; () banked
 35518  003C04  EE20 F00C          	lfsr	2,12
 35519  003C08  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35520  003C0A  26D9               	addwf	fsr2l,f,c
 35521  003C0C  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35522  003C0E  22DA               	addwfc	fsr2h,f,c
 35523  003C10  50DF               	movf	indf2,w,c
 35524  003C12  0100               	movlb	0	; () banked
 35525  003C14  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35526  003C16  0100               	movlb	0	; () banked
 35527  003C18  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35528  003C1A  0D01               	mullw	1
 35529  003C1C  0E67               	movlw	low _STable
 35530  003C1E  24F3               	addwf	prodl,w,c
 35531  003C20  6EF6               	movwf	tblptrl,c
 35532  003C22  0EFE               	movlw	high _STable
 35533  003C24  20F4               	addwfc	prodh,w,c
 35534  003C26  6EF7               	movwf	tblptrh,c
 35535  003C28                     	if	1	;There are 3 active tblptr bytes
 35536  003C28  6AF8               	clrf	tblptru,c
 35537  003C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35538  003C2C  22F8               	addwfc	tblptru,f,c
 35539  003C2E                     	endif
 35540  003C2E  0008               	tblrd		*
 35541  003C30  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35542  003C34  0100               	movlb	0	; () banked
 35543  003C36  EE20 F003          	lfsr	2,3
 35544  003C3A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35545  003C3C  26D9               	addwf	fsr2l,f,c
 35546  003C3E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35547  003C40  22DA               	addwfc	fsr2h,f,c
 35548  003C42  0100               	movlb	0	; () banked
 35549  003C44  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35550  003C46  1ADF               	xorwf	indf2,f,c
 35551                           
 35552                           ; BSR set to: 0
 35553                           ;AES.c: 168: key[0]^=_rcon;
 35554  003C48  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35555  003C4C  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35556  003C50  504A               	movf	__rcon,w,c
 35557  003C52  1ADF               	xorwf	indf2,f,c
 35558                           
 35559                           ; BSR set to: 0
 35560                           ;AES.c: 169: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 35561  003C54  0E7F               	movlw	127
 35562  003C56  644A               	cpfsgt	__rcon,c
 35563  003C58  D012               	goto	l13065
 35564                           
 35565                           ; BSR set to: 0
 35566  003C5A  0E1B               	movlw	27
 35567  003C5C  C04A  F066         	movff	__rcon,??_EncKeySchedule
 35568  003C60  0100               	movlb	0	; () banked
 35569  003C62  6B67               	clrf	(??_EncKeySchedule+1)& (0+255),b
 35570  003C64  90D8               	bcf	status,0,c
 35571  003C66  0100               	movlb	0	; () banked
 35572  003C68  3766               	rlcf	??_EncKeySchedule& (0+255),f,b
 35573  003C6A  3767               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 35574  003C6C  0100               	movlb	0	; () banked
 35575  003C6E  1966               	xorwf	??_EncKeySchedule& (0+255),w,b
 35576  003C70  0100               	movlb	0	; () banked
 35577  003C72  6F68               	movwf	_EncKeySchedule$3853& (0+255),b
 35578  003C74  0100               	movlb	0	; () banked
 35579  003C76  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35580  003C78  0100               	movlb	0	; () banked
 35581  003C7A  6F69               	movwf	(_EncKeySchedule$3853+1)& (0+255),b
 35582  003C7C  D008               	goto	l13067
 35583  003C7E                     l13065:
 35584                           
 35585                           ; BSR set to: 0
 35586  003C7E  90D8               	bcf	status,0,c
 35587  003C80  344A               	rlcf	__rcon,w,c
 35588  003C82  0100               	movlb	0	; () banked
 35589  003C84  6F68               	movwf	_EncKeySchedule$3853& (0+255),b
 35590  003C86  0100               	movlb	0	; () banked
 35591  003C88  6B69               	clrf	(_EncKeySchedule$3853+1)& (0+255),b
 35592  003C8A  0100               	movlb	0	; () banked
 35593  003C8C  3769               	rlcf	(_EncKeySchedule$3853+1)& (0+255),f,b
 35594  003C8E                     l13067:
 35595                           
 35596                           ; BSR set to: 0
 35597  003C8E  C068  F04A         	movff	_EncKeySchedule$3853,__rcon
 35598                           
 35599                           ; BSR set to: 0
 35600                           ;AES.c: 172: key[4]^=key[0];
 35601  003C92  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35602  003C96  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35603  003C9A  50DF               	movf	indf2,w,c
 35604  003C9C  0100               	movlb	0	; () banked
 35605  003C9E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35606  003CA0  0100               	movlb	0	; () banked
 35607  003CA2  EE20 F004          	lfsr	2,4
 35608  003CA6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35609  003CA8  26D9               	addwf	fsr2l,f,c
 35610  003CAA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35611  003CAC  22DA               	addwfc	fsr2h,f,c
 35612  003CAE  0100               	movlb	0	; () banked
 35613  003CB0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35614  003CB2  1ADF               	xorwf	indf2,f,c
 35615                           
 35616                           ; BSR set to: 0
 35617                           ;AES.c: 173: key[5]^=key[1];
 35618  003CB4  0100               	movlb	0	; () banked
 35619  003CB6  EE20 F001          	lfsr	2,1
 35620  003CBA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35621  003CBC  26D9               	addwf	fsr2l,f,c
 35622  003CBE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35623  003CC0  22DA               	addwfc	fsr2h,f,c
 35624  003CC2  50DF               	movf	indf2,w,c
 35625  003CC4  0100               	movlb	0	; () banked
 35626  003CC6  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35627  003CC8  0100               	movlb	0	; () banked
 35628  003CCA  EE20 F005          	lfsr	2,5
 35629  003CCE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35630  003CD0  26D9               	addwf	fsr2l,f,c
 35631  003CD2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35632  003CD4  22DA               	addwfc	fsr2h,f,c
 35633  003CD6  0100               	movlb	0	; () banked
 35634  003CD8  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35635  003CDA  1ADF               	xorwf	indf2,f,c
 35636                           
 35637                           ; BSR set to: 0
 35638                           ;AES.c: 174: key[6]^=key[2];
 35639  003CDC  0100               	movlb	0	; () banked
 35640  003CDE  EE20 F002          	lfsr	2,2
 35641  003CE2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35642  003CE4  26D9               	addwf	fsr2l,f,c
 35643  003CE6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35644  003CE8  22DA               	addwfc	fsr2h,f,c
 35645  003CEA  50DF               	movf	indf2,w,c
 35646  003CEC  0100               	movlb	0	; () banked
 35647  003CEE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35648  003CF0  0100               	movlb	0	; () banked
 35649  003CF2  EE20 F006          	lfsr	2,6
 35650  003CF6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35651  003CF8  26D9               	addwf	fsr2l,f,c
 35652  003CFA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35653  003CFC  22DA               	addwfc	fsr2h,f,c
 35654  003CFE  0100               	movlb	0	; () banked
 35655  003D00  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35656  003D02  1ADF               	xorwf	indf2,f,c
 35657                           
 35658                           ; BSR set to: 0
 35659                           ;AES.c: 175: key[7]^=key[3];
 35660  003D04  0100               	movlb	0	; () banked
 35661  003D06  EE20 F003          	lfsr	2,3
 35662  003D0A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35663  003D0C  26D9               	addwf	fsr2l,f,c
 35664  003D0E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35665  003D10  22DA               	addwfc	fsr2h,f,c
 35666  003D12  50DF               	movf	indf2,w,c
 35667  003D14  0100               	movlb	0	; () banked
 35668  003D16  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35669  003D18  0100               	movlb	0	; () banked
 35670  003D1A  EE20 F007          	lfsr	2,7
 35671  003D1E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35672  003D20  26D9               	addwf	fsr2l,f,c
 35673  003D22  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35674  003D24  22DA               	addwfc	fsr2h,f,c
 35675  003D26  0100               	movlb	0	; () banked
 35676  003D28  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35677  003D2A  1ADF               	xorwf	indf2,f,c
 35678                           
 35679                           ; BSR set to: 0
 35680                           ;AES.c: 178: key[8]^=key[4];
 35681  003D2C  0100               	movlb	0	; () banked
 35682  003D2E  EE20 F004          	lfsr	2,4
 35683  003D32  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35684  003D34  26D9               	addwf	fsr2l,f,c
 35685  003D36  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35686  003D38  22DA               	addwfc	fsr2h,f,c
 35687  003D3A  50DF               	movf	indf2,w,c
 35688  003D3C  0100               	movlb	0	; () banked
 35689  003D3E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35690  003D40  0100               	movlb	0	; () banked
 35691  003D42  EE20 F008          	lfsr	2,8
 35692  003D46  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35693  003D48  26D9               	addwf	fsr2l,f,c
 35694  003D4A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35695  003D4C  22DA               	addwfc	fsr2h,f,c
 35696  003D4E  0100               	movlb	0	; () banked
 35697  003D50  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35698  003D52  1ADF               	xorwf	indf2,f,c
 35699                           
 35700                           ; BSR set to: 0
 35701                           ;AES.c: 179: key[9]^=key[5];
 35702  003D54  0100               	movlb	0	; () banked
 35703  003D56  EE20 F005          	lfsr	2,5
 35704  003D5A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35705  003D5C  26D9               	addwf	fsr2l,f,c
 35706  003D5E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35707  003D60  22DA               	addwfc	fsr2h,f,c
 35708  003D62  50DF               	movf	indf2,w,c
 35709  003D64  0100               	movlb	0	; () banked
 35710  003D66  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35711  003D68  0100               	movlb	0	; () banked
 35712  003D6A  EE20 F009          	lfsr	2,9
 35713  003D6E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35714  003D70  26D9               	addwf	fsr2l,f,c
 35715  003D72  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35716  003D74  22DA               	addwfc	fsr2h,f,c
 35717  003D76  0100               	movlb	0	; () banked
 35718  003D78  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35719  003D7A  1ADF               	xorwf	indf2,f,c
 35720                           
 35721                           ; BSR set to: 0
 35722                           ;AES.c: 180: key[10]^=key[6];
 35723  003D7C  0100               	movlb	0	; () banked
 35724  003D7E  EE20 F006          	lfsr	2,6
 35725  003D82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35726  003D84  26D9               	addwf	fsr2l,f,c
 35727  003D86  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35728  003D88  22DA               	addwfc	fsr2h,f,c
 35729  003D8A  50DF               	movf	indf2,w,c
 35730  003D8C  0100               	movlb	0	; () banked
 35731  003D8E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35732  003D90  0100               	movlb	0	; () banked
 35733  003D92  EE20 F00A          	lfsr	2,10
 35734  003D96  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35735  003D98  26D9               	addwf	fsr2l,f,c
 35736  003D9A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35737  003D9C  22DA               	addwfc	fsr2h,f,c
 35738  003D9E  0100               	movlb	0	; () banked
 35739  003DA0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35740  003DA2  1ADF               	xorwf	indf2,f,c
 35741                           
 35742                           ; BSR set to: 0
 35743                           ;AES.c: 181: key[11]^=key[7];
 35744  003DA4  0100               	movlb	0	; () banked
 35745  003DA6  EE20 F007          	lfsr	2,7
 35746  003DAA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35747  003DAC  26D9               	addwf	fsr2l,f,c
 35748  003DAE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35749  003DB0  22DA               	addwfc	fsr2h,f,c
 35750  003DB2  50DF               	movf	indf2,w,c
 35751  003DB4  0100               	movlb	0	; () banked
 35752  003DB6  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35753  003DB8  0100               	movlb	0	; () banked
 35754  003DBA  EE20 F00B          	lfsr	2,11
 35755  003DBE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35756  003DC0  26D9               	addwf	fsr2l,f,c
 35757  003DC2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35758  003DC4  22DA               	addwfc	fsr2h,f,c
 35759  003DC6  0100               	movlb	0	; () banked
 35760  003DC8  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35761  003DCA  1ADF               	xorwf	indf2,f,c
 35762                           
 35763                           ; BSR set to: 0
 35764                           ;AES.c: 184: key[12]^=key[8];
 35765  003DCC  0100               	movlb	0	; () banked
 35766  003DCE  EE20 F008          	lfsr	2,8
 35767  003DD2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35768  003DD4  26D9               	addwf	fsr2l,f,c
 35769  003DD6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35770  003DD8  22DA               	addwfc	fsr2h,f,c
 35771  003DDA  50DF               	movf	indf2,w,c
 35772  003DDC  0100               	movlb	0	; () banked
 35773  003DDE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35774  003DE0  0100               	movlb	0	; () banked
 35775  003DE2  EE20 F00C          	lfsr	2,12
 35776  003DE6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35777  003DE8  26D9               	addwf	fsr2l,f,c
 35778  003DEA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35779  003DEC  22DA               	addwfc	fsr2h,f,c
 35780  003DEE  0100               	movlb	0	; () banked
 35781  003DF0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35782  003DF2  1ADF               	xorwf	indf2,f,c
 35783                           
 35784                           ; BSR set to: 0
 35785                           ;AES.c: 185: key[13]^=key[9];
 35786  003DF4  0100               	movlb	0	; () banked
 35787  003DF6  EE20 F009          	lfsr	2,9
 35788  003DFA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35789  003DFC  26D9               	addwf	fsr2l,f,c
 35790  003DFE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35791  003E00  22DA               	addwfc	fsr2h,f,c
 35792  003E02  50DF               	movf	indf2,w,c
 35793  003E04  0100               	movlb	0	; () banked
 35794  003E06  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35795  003E08  0100               	movlb	0	; () banked
 35796  003E0A  EE20 F00D          	lfsr	2,13
 35797  003E0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35798  003E10  26D9               	addwf	fsr2l,f,c
 35799  003E12  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35800  003E14  22DA               	addwfc	fsr2h,f,c
 35801  003E16  0100               	movlb	0	; () banked
 35802  003E18  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35803  003E1A  1ADF               	xorwf	indf2,f,c
 35804                           
 35805                           ; BSR set to: 0
 35806                           ;AES.c: 186: key[14]^=key[10];
 35807  003E1C  0100               	movlb	0	; () banked
 35808  003E1E  EE20 F00A          	lfsr	2,10
 35809  003E22  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35810  003E24  26D9               	addwf	fsr2l,f,c
 35811  003E26  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35812  003E28  22DA               	addwfc	fsr2h,f,c
 35813  003E2A  50DF               	movf	indf2,w,c
 35814  003E2C  0100               	movlb	0	; () banked
 35815  003E2E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35816  003E30  0100               	movlb	0	; () banked
 35817  003E32  EE20 F00E          	lfsr	2,14
 35818  003E36  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35819  003E38  26D9               	addwf	fsr2l,f,c
 35820  003E3A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35821  003E3C  22DA               	addwfc	fsr2h,f,c
 35822  003E3E  0100               	movlb	0	; () banked
 35823  003E40  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35824  003E42  1ADF               	xorwf	indf2,f,c
 35825                           
 35826                           ; BSR set to: 0
 35827                           ;AES.c: 187: key[15]^=key[11];
 35828  003E44  0100               	movlb	0	; () banked
 35829  003E46  EE20 F00B          	lfsr	2,11
 35830  003E4A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35831  003E4C  26D9               	addwf	fsr2l,f,c
 35832  003E4E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35833  003E50  22DA               	addwfc	fsr2h,f,c
 35834  003E52  50DF               	movf	indf2,w,c
 35835  003E54  0100               	movlb	0	; () banked
 35836  003E56  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35837  003E58  0100               	movlb	0	; () banked
 35838  003E5A  EE20 F00F          	lfsr	2,15
 35839  003E5E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35840  003E60  26D9               	addwf	fsr2l,f,c
 35841  003E62  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35842  003E64  22DA               	addwfc	fsr2h,f,c
 35843  003E66  0100               	movlb	0	; () banked
 35844  003E68  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35845  003E6A  1ADF               	xorwf	indf2,f,c
 35846                           
 35847                           ; BSR set to: 0
 35848  003E6C  0012               	return		;funcret
 35849  003E6E                     __end_of_EncKeySchedule:
 35850                           	opt stack 0
 35851                           tosu	equ	0xFFF
 35852                           tosh	equ	0xFFE
 35853                           tosl	equ	0xFFD
 35854                           pclath	equ	0xFFA
 35855                           tblptru	equ	0xFF8
 35856                           tblptrh	equ	0xFF7
 35857                           tblptrl	equ	0xFF6
 35858                           tablat	equ	0xFF5
 35859                           prodh	equ	0xFF4
 35860                           prodl	equ	0xFF3
 35861                           intcon	equ	0xFF2
 35862                           intcon2	equ	0xFF1
 35863                           intcon3	equ	0xFF0
 35864                           indf0	equ	0xFEF
 35865                           postinc0	equ	0xFEE
 35866                           plusw0	equ	0xFEB
 35867                           fsr0h	equ	0xFEA
 35868                           fsr0l	equ	0xFE9
 35869                           wreg	equ	0xFE8
 35870                           postinc1	equ	0xFE6
 35871                           postdec1	equ	0xFE5
 35872                           plusw1	equ	0xFE3
 35873                           fsr1h	equ	0xFE2
 35874                           fsr1l	equ	0xFE1
 35875                           indf2	equ	0xFDF
 35876                           postinc2	equ	0xFDE
 35877                           postdec2	equ	0xFDD
 35878                           plusw2	equ	0xFDB
 35879                           fsr2h	equ	0xFDA
 35880                           fsr2l	equ	0xFD9
 35881                           status	equ	0xFD8
 35882                           
 35883 ;; *************** function _LORAWAN_Init *****************
 35884 ;; Defined at:
 35885 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 35886 ;; Parameters:    Size  Location     Type
 35887 ;;  RxPayload       2   86[BANK0 ] PTR FTN(PTR unsigned cha
 35888 ;;		 -> RxDataDone(1), 
 35889 ;;  RxJoinRespon    2   88[BANK0 ] PTR FTN(unsigned char ,)
 35890 ;;		 -> RxJoinResponse(1), 
 35891 ;; Auto vars:     Size  Location     Type
 35892 ;;		None
 35893 ;; Return value:  Size  Location     Type
 35894 ;;                  1    wreg      void 
 35895 ;; Registers used:
 35896 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 35897 ;; Tracked objects:
 35898 ;;		On entry : 0/0
 35899 ;;		On exit  : 0/0
 35900 ;;		Unchanged: 0/0
 35901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35902 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35903 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35905 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35906 ;;Total ram usage:        4 bytes
 35907 ;; Hardware stack levels used:    1
 35908 ;; Hardware stack levels required when called:   13
 35909 ;; This function calls:
 35910 ;;		_CreateAllSoftwareTimers
 35911 ;;		_LORAWAN_Reset
 35912 ;;		_RADIO_Init
 35913 ;;		_RADIO_ReadRandom
 35914 ;;		_SetCallbackSoftwareTimers
 35915 ;;		_StopAllSoftwareTimers
 35916 ;;		_srand
 35917 ;; This function is called by:
 35918 ;;		_main
 35919 ;; This function uses a non-reentrant model
 35920 ;;
 35921                           
 35922                           	psect	text158
 35923  009006                     __ptext158:
 35924                           	opt stack 0
 35925  009006                     _LORAWAN_Init:
 35926                           	opt stack 17
 35927                           
 35928                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 35929                           
 35930                           ; BSR set to: 0
 35931                           ;incstack = 0
 35932  009006  0102               	movlb	2	; () banked
 35933  009008  51F0               	movf	(_loRa+240)& (0+255),w,b
 35934  00900A  A4D8               	btfss	status,2,c
 35935  00900C  D008               	goto	l16857
 35936                           
 35937                           ; BSR set to: 2
 35938                           ;lorawan_eu.c: 127: {
 35939                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 35940  00900E  EC86  F04A         	call	_CreateAllSoftwareTimers	;wreg free
 35941                           
 35942                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 35943  009012  ECCA  F037         	call	_SetCallbackSoftwareTimers	;wreg free
 35944                           
 35945                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 35946  009016  0E01               	movlw	1
 35947  009018  0102               	movlb	2	; () banked
 35948  00901A  6FF0               	movwf	(_loRa+240)& (0+255),b
 35949                           
 35950                           ;lorawan_eu.c: 131: }
 35951  00901C  D002               	goto	l16859
 35952  00901E                     l16857:
 35953                           
 35954                           ; BSR set to: 2
 35955                           ;lorawan_eu.c: 132: else
 35956                           ;lorawan_eu.c: 133: {
 35957                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 35958  00901E  EC5D  F04A         	call	_StopAllSoftwareTimers	;wreg free
 35959  009022                     l16859:
 35960                           
 35961                           ;lorawan_eu.c: 135: }
 35962                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 35963  009022  C0B6  F0F4         	movff	LORAWAN_Init@RxPayload,_rxPayload
 35964  009026  C0B7  F0F5         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 35965                           
 35966                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 35967  00902A  C0B8  F0F6         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 35968  00902E  C0B9  F0F7         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 35969                           
 35970                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 35971  009032  0EFF               	movlw	low (_radioBuffer+16)
 35972  009034  0100               	movlb	0	; () banked
 35973  009036  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 35974  009038  0E05               	movlw	high (_radioBuffer+16)
 35975  00903A  0100               	movlb	0	; () banked
 35976  00903C  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 35977  00903E  0EA0               	movlw	160
 35978  009040  0100               	movlb	0	; () banked
 35979  009042  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 35980  009044  0E27               	movlw	39
 35981  009046  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 35982  009048  0EBE               	movlw	190
 35983  00904A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 35984  00904C  0E33               	movlw	51
 35985  00904E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 35986  009050  EC17  F028         	call	_RADIO_Init	;wreg free
 35987                           
 35988                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 35989  009054  EC66  F03F         	call	_RADIO_ReadRandom	;wreg free
 35990  009058  C070  F076         	movff	?_RADIO_ReadRandom,srand@x
 35991  00905C  C071  F077         	movff	?_RADIO_ReadRandom+1,srand@x+1
 35992  009060  EC3A  F051         	call	_srand	;wreg free
 35993                           
 35994                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 35995  009064  0E00               	movlw	0
 35996  009066  EC04  F027         	call	_LORAWAN_Reset
 35997  00906A  0012               	return		;funcret
 35998  00906C                     __end_of_LORAWAN_Init:
 35999                           	opt stack 0
 36000                           tosu	equ	0xFFF
 36001                           tosh	equ	0xFFE
 36002                           tosl	equ	0xFFD
 36003                           pclath	equ	0xFFA
 36004                           tblptru	equ	0xFF8
 36005                           tblptrh	equ	0xFF7
 36006                           tblptrl	equ	0xFF6
 36007                           tablat	equ	0xFF5
 36008                           prodh	equ	0xFF4
 36009                           prodl	equ	0xFF3
 36010                           intcon	equ	0xFF2
 36011                           intcon2	equ	0xFF1
 36012                           intcon3	equ	0xFF0
 36013                           indf0	equ	0xFEF
 36014                           postinc0	equ	0xFEE
 36015                           plusw0	equ	0xFEB
 36016                           fsr0h	equ	0xFEA
 36017                           fsr0l	equ	0xFE9
 36018                           wreg	equ	0xFE8
 36019                           postinc1	equ	0xFE6
 36020                           postdec1	equ	0xFE5
 36021                           plusw1	equ	0xFE3
 36022                           fsr1h	equ	0xFE2
 36023                           fsr1l	equ	0xFE1
 36024                           indf2	equ	0xFDF
 36025                           postinc2	equ	0xFDE
 36026                           postdec2	equ	0xFDD
 36027                           plusw2	equ	0xFDB
 36028                           fsr2h	equ	0xFDA
 36029                           fsr2l	equ	0xFD9
 36030                           status	equ	0xFD8
 36031                           
 36032 ;; *************** function _srand *****************
 36033 ;; Defined at:
 36034 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 36035 ;; Parameters:    Size  Location     Type
 36036 ;;  x               2   22[BANK0 ] unsigned int 
 36037 ;; Auto vars:     Size  Location     Type
 36038 ;;		None
 36039 ;; Return value:  Size  Location     Type
 36040 ;;                  1    wreg      void 
 36041 ;; Registers used:
 36042 ;;		status,2
 36043 ;; Tracked objects:
 36044 ;;		On entry : 0/0
 36045 ;;		On exit  : 0/0
 36046 ;;		Unchanged: 0/0
 36047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36048 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36051 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36052 ;;Total ram usage:        2 bytes
 36053 ;; Hardware stack levels used:    1
 36054 ;; Hardware stack levels required when called:    7
 36055 ;; This function calls:
 36056 ;;		Nothing
 36057 ;; This function is called by:
 36058 ;;		_LORAWAN_Init
 36059 ;; This function uses a non-reentrant model
 36060 ;;
 36061                           
 36062                           	psect	text159
 36063  00A274                     __ptext159:
 36064                           	opt stack 0
 36065  00A274                     _srand:
 36066                           	opt stack 22
 36067                           
 36068                           ;incstack = 0
 36069  00A274  C076  F1D0         	movff	srand@x,_randx
 36070  00A278  C077  F1D1         	movff	srand@x+1,_randx+1
 36071  00A27C  0101               	movlb	1	; () banked
 36072  00A27E  6BD2               	clrf	(_randx+2)& (0+255),b
 36073  00A280  6BD3               	clrf	(_randx+3)& (0+255),b
 36074                           
 36075                           ; BSR set to: 1
 36076  00A282  0012               	return		;funcret
 36077  00A284                     __end_of_srand:
 36078                           	opt stack 0
 36079                           tosu	equ	0xFFF
 36080                           tosh	equ	0xFFE
 36081                           tosl	equ	0xFFD
 36082                           pclath	equ	0xFFA
 36083                           tblptru	equ	0xFF8
 36084                           tblptrh	equ	0xFF7
 36085                           tblptrl	equ	0xFF6
 36086                           tablat	equ	0xFF5
 36087                           prodh	equ	0xFF4
 36088                           prodl	equ	0xFF3
 36089                           intcon	equ	0xFF2
 36090                           intcon2	equ	0xFF1
 36091                           intcon3	equ	0xFF0
 36092                           indf0	equ	0xFEF
 36093                           postinc0	equ	0xFEE
 36094                           plusw0	equ	0xFEB
 36095                           fsr0h	equ	0xFEA
 36096                           fsr0l	equ	0xFE9
 36097                           wreg	equ	0xFE8
 36098                           postinc1	equ	0xFE6
 36099                           postdec1	equ	0xFE5
 36100                           plusw1	equ	0xFE3
 36101                           fsr1h	equ	0xFE2
 36102                           fsr1l	equ	0xFE1
 36103                           indf2	equ	0xFDF
 36104                           postinc2	equ	0xFDE
 36105                           postdec2	equ	0xFDD
 36106                           plusw2	equ	0xFDB
 36107                           fsr2h	equ	0xFDA
 36108                           fsr2l	equ	0xFD9
 36109                           status	equ	0xFD8
 36110                           
 36111 ;; *************** function _SetCallbackSoftwareTimers *****************
 36112 ;; Defined at:
 36113 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36114 ;; Parameters:    Size  Location     Type
 36115 ;;		None
 36116 ;; Auto vars:     Size  Location     Type
 36117 ;;		None
 36118 ;; Return value:  Size  Location     Type
 36119 ;;                  1    wreg      void 
 36120 ;; Registers used:
 36121 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36122 ;; Tracked objects:
 36123 ;;		On entry : 0/0
 36124 ;;		On exit  : 0/0
 36125 ;;		Unchanged: 0/0
 36126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36127 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36129 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36130 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36131 ;;Total ram usage:        0 bytes
 36132 ;; Hardware stack levels used:    1
 36133 ;; Hardware stack levels required when called:    8
 36134 ;; This function calls:
 36135 ;;		_SwTimerSetCallback
 36136 ;; This function is called by:
 36137 ;;		_LORAWAN_Init
 36138 ;; This function uses a non-reentrant model
 36139 ;;
 36140                           
 36141                           	psect	text160
 36142  006F94                     __ptext160:
 36143                           	opt stack 0
 36144  006F94                     _SetCallbackSoftwareTimers:
 36145                           	opt stack 21
 36146                           
 36147                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 36148                           
 36149                           ; BSR set to: 1
 36150                           ;incstack = 0
 36151  006F94  0E52               	movlw	low _LORAWAN_ReceiveWindow1Callback
 36152  006F96  0100               	movlb	0	; () banked
 36153  006F98  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36154  006F9A  0E7A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 36155  006F9C  0100               	movlb	0	; () banked
 36156  006F9E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36157  006FA0  0E00               	movlw	0
 36158  006FA2  0100               	movlb	0	; () banked
 36159  006FA4  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36160  006FA6  0102               	movlb	2	; () banked
 36161  006FA8  51E2               	movf	(_loRa+226)& (0+255),w,b
 36162  006FAA  ECB0  F04B         	call	_SwTimerSetCallback
 36163                           
 36164                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 36165  006FAE  0E82               	movlw	low _LORAWAN_ReceiveWindow2Callback
 36166  006FB0  0100               	movlb	0	; () banked
 36167  006FB2  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36168  006FB4  0E78               	movlw	high _LORAWAN_ReceiveWindow2Callback
 36169  006FB6  0100               	movlb	0	; () banked
 36170  006FB8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36171  006FBA  0E00               	movlw	0
 36172  006FBC  0100               	movlb	0	; () banked
 36173  006FBE  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36174  006FC0  0102               	movlb	2	; () banked
 36175  006FC2  51E3               	movf	(_loRa+227)& (0+255),w,b
 36176  006FC4  ECB0  F04B         	call	_SwTimerSetCallback
 36177                           
 36178                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 36179  006FC8  0EF2               	movlw	low _LORAWAN_LinkCheckCallback
 36180  006FCA  0100               	movlb	0	; () banked
 36181  006FCC  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36182  006FCE  0E5C               	movlw	high _LORAWAN_LinkCheckCallback
 36183  006FD0  0100               	movlb	0	; () banked
 36184  006FD2  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36185  006FD4  0E00               	movlw	0
 36186  006FD6  0100               	movlb	0	; () banked
 36187  006FD8  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36188  006FDA  0102               	movlb	2	; () banked
 36189  006FDC  51E7               	movf	(_loRa+231)& (0+255),w,b
 36190  006FDE  ECB0  F04B         	call	_SwTimerSetCallback
 36191                           
 36192                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 36193  006FE2  0E52               	movlw	low _LORAWAN_ReceiveWindow1Callback
 36194  006FE4  0100               	movlb	0	; () banked
 36195  006FE6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36196  006FE8  0E7A               	movlw	high _LORAWAN_ReceiveWindow1Callback
 36197  006FEA  0100               	movlb	0	; () banked
 36198  006FEC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36199  006FEE  0E00               	movlw	0
 36200  006FF0  0100               	movlb	0	; () banked
 36201  006FF2  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36202  006FF4  0102               	movlb	2	; () banked
 36203  006FF6  51E4               	movf	(_loRa+228)& (0+255),w,b
 36204  006FF8  ECB0  F04B         	call	_SwTimerSetCallback
 36205                           
 36206                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 36207  006FFC  0E82               	movlw	low _LORAWAN_ReceiveWindow2Callback
 36208  006FFE  0100               	movlb	0	; () banked
 36209  007000  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36210  007002  0E78               	movlw	high _LORAWAN_ReceiveWindow2Callback
 36211  007004  0100               	movlb	0	; () banked
 36212  007006  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36213  007008  0E00               	movlw	0
 36214  00700A  0100               	movlb	0	; () banked
 36215  00700C  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36216  00700E  0102               	movlb	2	; () banked
 36217  007010  51E5               	movf	(_loRa+229)& (0+255),w,b
 36218  007012  ECB0  F04B         	call	_SwTimerSetCallback
 36219                           
 36220                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 36221  007016  0E9C               	movlw	low _AckRetransmissionCallback
 36222  007018  0100               	movlb	0	; () banked
 36223  00701A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36224  00701C  0E69               	movlw	high _AckRetransmissionCallback
 36225  00701E  0100               	movlb	0	; () banked
 36226  007020  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36227  007022  0E00               	movlw	0
 36228  007024  0100               	movlb	0	; () banked
 36229  007026  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36230  007028  0102               	movlb	2	; () banked
 36231  00702A  51E8               	movf	(_loRa+232)& (0+255),w,b
 36232  00702C  ECB0  F04B         	call	_SwTimerSetCallback
 36233                           
 36234                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 36235  007030  0E4A               	movlw	low _AutomaticReplyCallback
 36236  007032  0100               	movlb	0	; () banked
 36237  007034  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36238  007036  0E9D               	movlw	high _AutomaticReplyCallback
 36239  007038  0100               	movlb	0	; () banked
 36240  00703A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36241  00703C  0E00               	movlw	0
 36242  00703E  0100               	movlb	0	; () banked
 36243  007040  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36244  007042  0102               	movlb	2	; () banked
 36245  007044  51E6               	movf	(_loRa+230)& (0+255),w,b
 36246  007046  ECB0  F04B         	call	_SwTimerSetCallback
 36247                           
 36248                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 36249  00704A  0E0A               	movlw	low _UnconfirmedTransmissionCallback
 36250  00704C  0100               	movlb	0	; () banked
 36251  00704E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36252  007050  0E8A               	movlw	high _UnconfirmedTransmissionCallback
 36253  007052  0100               	movlb	0	; () banked
 36254  007054  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36255  007056  0E00               	movlw	0
 36256  007058  0100               	movlb	0	; () banked
 36257  00705A  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36258  00705C  0102               	movlb	2	; () banked
 36259  00705E  51EA               	movf	(_loRa+234)& (0+255),w,b
 36260  007060  ECB0  F04B         	call	_SwTimerSetCallback
 36261                           
 36262                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 36263  007064  0EB0               	movlw	low _UpdateJoinSuccessState
 36264  007066  0100               	movlb	0	; () banked
 36265  007068  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36266  00706A  0E65               	movlw	high _UpdateJoinSuccessState
 36267  00706C  0100               	movlb	0	; () banked
 36268  00706E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36269  007070  0E00               	movlw	0
 36270  007072  0100               	movlb	0	; () banked
 36271  007074  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36272  007076  0102               	movlb	2	; () banked
 36273  007078  51F3               	movf	(_loRa+243)& (0+255),w,b
 36274  00707A  ECB0  F04B         	call	_SwTimerSetCallback
 36275                           
 36276                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 36277  00707E  0E6E               	movlw	low _DutyCycleCallback
 36278  007080  0100               	movlb	0	; () banked
 36279  007082  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36280  007084  0E3E               	movlw	high _DutyCycleCallback
 36281  007086  0100               	movlb	0	; () banked
 36282  007088  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36283  00708A  0E00               	movlw	0
 36284  00708C  0100               	movlb	0	; () banked
 36285  00708E  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36286  007090  0102               	movlb	2	; () banked
 36287  007092  51E9               	movf	(_loRa+233)& (0+255),w,b
 36288  007094  ECB0  F04B         	call	_SwTimerSetCallback
 36289  007098  0012               	return		;funcret
 36290  00709A                     __end_of_SetCallbackSoftwareTimers:
 36291                           	opt stack 0
 36292                           tosu	equ	0xFFF
 36293                           tosh	equ	0xFFE
 36294                           tosl	equ	0xFFD
 36295                           pclath	equ	0xFFA
 36296                           tblptru	equ	0xFF8
 36297                           tblptrh	equ	0xFF7
 36298                           tblptrl	equ	0xFF6
 36299                           tablat	equ	0xFF5
 36300                           prodh	equ	0xFF4
 36301                           prodl	equ	0xFF3
 36302                           intcon	equ	0xFF2
 36303                           intcon2	equ	0xFF1
 36304                           intcon3	equ	0xFF0
 36305                           indf0	equ	0xFEF
 36306                           postinc0	equ	0xFEE
 36307                           plusw0	equ	0xFEB
 36308                           fsr0h	equ	0xFEA
 36309                           fsr0l	equ	0xFE9
 36310                           wreg	equ	0xFE8
 36311                           postinc1	equ	0xFE6
 36312                           postdec1	equ	0xFE5
 36313                           plusw1	equ	0xFE3
 36314                           fsr1h	equ	0xFE2
 36315                           fsr1l	equ	0xFE1
 36316                           indf2	equ	0xFDF
 36317                           postinc2	equ	0xFDE
 36318                           postdec2	equ	0xFDD
 36319                           plusw2	equ	0xFDB
 36320                           fsr2h	equ	0xFDA
 36321                           fsr2l	equ	0xFD9
 36322                           status	equ	0xFD8
 36323                           
 36324 ;; *************** function _RADIO_ReadRandom *****************
 36325 ;; Defined at:
 36326 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36327 ;; Parameters:    Size  Location     Type
 36328 ;;		None
 36329 ;; Auto vars:     Size  Location     Type
 36330 ;;  retVal          2   19[BANK0 ] unsigned int 
 36331 ;;  i               1   21[BANK0 ] unsigned char 
 36332 ;; Return value:  Size  Location     Type
 36333 ;;                  2   16[BANK0 ] unsigned int 
 36334 ;; Registers used:
 36335 ;;		wreg, status,2, status,0, cstack
 36336 ;; Tracked objects:
 36337 ;;		On entry : 0/0
 36338 ;;		On exit  : 0/0
 36339 ;;		Unchanged: 0/0
 36340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36341 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36342 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36343 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36344 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36345 ;;Total ram usage:        6 bytes
 36346 ;; Hardware stack levels used:    1
 36347 ;; Hardware stack levels required when called:   11
 36348 ;; This function calls:
 36349 ;;		_RADIO_RegisterRead
 36350 ;;		_RADIO_RegisterWrite
 36351 ;;		_RADIO_WriteMode
 36352 ;;		_SystemBlockingWaitMs
 36353 ;; This function is called by:
 36354 ;;		_LORAWAN_Init
 36355 ;; This function uses a non-reentrant model
 36356 ;;
 36357                           
 36358                           	psect	text161
 36359  007ECC                     __ptext161:
 36360                           	opt stack 0
 36361  007ECC                     _RADIO_ReadRandom:
 36362                           	opt stack 18
 36363                           
 36364                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 36365                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 36366                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 36367                           
 36368                           ;incstack = 0
 36369  007ECC  0E00               	movlw	0
 36370  007ECE  0100               	movlb	0	; () banked
 36371  007ED0  6F74               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 36372  007ED2  0E00               	movlw	0
 36373  007ED4  6F73               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 36374                           
 36375                           ; BSR set to: 0
 36376                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 36377  007ED6  0E01               	movlw	1
 36378  007ED8  0100               	movlb	0	; () banked
 36379  007EDA  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36380  007EDC  0E01               	movlw	1
 36381  007EDE  0100               	movlb	0	; () banked
 36382  007EE0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36383  007EE2  0E00               	movlw	0
 36384  007EE4  EC70  F035         	call	_RADIO_WriteMode
 36385                           
 36386                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 36387  007EE8  0EFF               	movlw	255
 36388  007EEA  0100               	movlb	0	; () banked
 36389  007EEC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36390  007EEE  0E11               	movlw	17
 36391  007EF0  ECFE  F04F         	call	_RADIO_RegisterWrite
 36392                           
 36393                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 36394  007EF4  0E01               	movlw	1
 36395  007EF6  0100               	movlb	0	; () banked
 36396  007EF8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36397  007EFA  0E01               	movlw	1
 36398  007EFC  0100               	movlb	0	; () banked
 36399  007EFE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36400  007F00  0E05               	movlw	5
 36401  007F02  EC70  F035         	call	_RADIO_WriteMode
 36402                           
 36403                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 36404  007F06  0E00               	movlw	0
 36405  007F08  0100               	movlb	0	; () banked
 36406  007F0A  6F75               	movwf	RADIO_ReadRandom@i& (0+255),b
 36407  007F0C                     l16649:
 36408                           
 36409                           ; BSR set to: 0
 36410  007F0C  0E0F               	movlw	15
 36411  007F0E  0100               	movlb	0	; () banked
 36412  007F10  6575               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 36413  007F12  D001               	goto	l16653
 36414  007F14  D01E               	goto	l16661
 36415  007F16                     l16653:
 36416                           
 36417                           ; BSR set to: 0
 36418                           ;radio_driver_SX1276.c: 1377: {
 36419                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 36420  007F16  0E01               	movlw	1
 36421  007F18  0100               	movlb	0	; () banked
 36422  007F1A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36423  007F1C  0E00               	movlw	0
 36424  007F1E  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36425  007F20  0E00               	movlw	0
 36426  007F22  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36427  007F24  0E00               	movlw	0
 36428  007F26  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36429  007F28  EC7F  F04D         	call	_SystemBlockingWaitMs	;wreg free
 36430                           
 36431                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 36432  007F2C  0100               	movlb	0	; () banked
 36433  007F2E  90D8               	bcf	status,0,c
 36434  007F30  3773               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 36435  007F32  3774               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 36436                           
 36437                           ; BSR set to: 0
 36438                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 36439  007F34  0E2C               	movlw	44
 36440  007F36  EC25  F04F         	call	_RADIO_RegisterRead
 36441  007F3A  0100               	movlb	0	; () banked
 36442  007F3C  6F72               	movwf	??_RADIO_ReadRandom& (0+255),b
 36443  007F3E  0E01               	movlw	1
 36444  007F40  0100               	movlb	0	; () banked
 36445  007F42  1772               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 36446  007F44  0100               	movlb	0	; () banked
 36447  007F46  5172               	movf	??_RADIO_ReadRandom& (0+255),w,b
 36448  007F48  0100               	movlb	0	; () banked
 36449  007F4A  1373               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 36450  007F4C  0100               	movlb	0	; () banked
 36451  007F4E  2B75               	incf	RADIO_ReadRandom@i& (0+255),f,b
 36452  007F50  D7DD               	goto	l16649
 36453  007F52                     l16661:
 36454                           
 36455                           ; BSR set to: 0
 36456                           ;radio_driver_SX1276.c: 1381: }
 36457                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 36458  007F52  0E01               	movlw	1
 36459  007F54  0100               	movlb	0	; () banked
 36460  007F56  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36461  007F58  0E01               	movlw	1
 36462  007F5A  0100               	movlb	0	; () banked
 36463  007F5C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36464  007F5E  0E00               	movlw	0
 36465  007F60  EC70  F035         	call	_RADIO_WriteMode
 36466                           
 36467                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 36468  007F64  0EFF               	movlw	255
 36469  007F66  0100               	movlb	0	; () banked
 36470  007F68  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36471  007F6A  0E12               	movlw	18
 36472  007F6C  ECFE  F04F         	call	_RADIO_RegisterWrite
 36473                           
 36474                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 36475  007F70  0E00               	movlw	0
 36476  007F72  0100               	movlb	0	; () banked
 36477  007F74  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36478  007F76  0E11               	movlw	17
 36479  007F78  ECFE  F04F         	call	_RADIO_RegisterWrite
 36480                           
 36481                           ;radio_driver_SX1276.c: 1389: return retVal;
 36482  007F7C  C073  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 36483  007F80  C074  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 36484  007F84  0012               	return	
 36485  007F86                     __end_of_RADIO_ReadRandom:
 36486                           	opt stack 0
 36487                           tosu	equ	0xFFF
 36488                           tosh	equ	0xFFE
 36489                           tosl	equ	0xFFD
 36490                           pclath	equ	0xFFA
 36491                           tblptru	equ	0xFF8
 36492                           tblptrh	equ	0xFF7
 36493                           tblptrl	equ	0xFF6
 36494                           tablat	equ	0xFF5
 36495                           prodh	equ	0xFF4
 36496                           prodl	equ	0xFF3
 36497                           intcon	equ	0xFF2
 36498                           intcon2	equ	0xFF1
 36499                           intcon3	equ	0xFF0
 36500                           indf0	equ	0xFEF
 36501                           postinc0	equ	0xFEE
 36502                           plusw0	equ	0xFEB
 36503                           fsr0h	equ	0xFEA
 36504                           fsr0l	equ	0xFE9
 36505                           wreg	equ	0xFE8
 36506                           postinc1	equ	0xFE6
 36507                           postdec1	equ	0xFE5
 36508                           plusw1	equ	0xFE3
 36509                           fsr1h	equ	0xFE2
 36510                           fsr1l	equ	0xFE1
 36511                           indf2	equ	0xFDF
 36512                           postinc2	equ	0xFDE
 36513                           postdec2	equ	0xFDD
 36514                           plusw2	equ	0xFDB
 36515                           fsr2h	equ	0xFDA
 36516                           fsr2l	equ	0xFD9
 36517                           status	equ	0xFD8
 36518                           
 36519 ;; *************** function _LORAWAN_Reset *****************
 36520 ;; Defined at:
 36521 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36522 ;; Parameters:    Size  Location     Type
 36523 ;;  ismBandNew      1    wreg     enum E8047
 36524 ;; Auto vars:     Size  Location     Type
 36525 ;;  ismBandNew      1   85[BANK0 ] enum E8047
 36526 ;; Return value:  Size  Location     Type
 36527 ;;                  1    wreg      void 
 36528 ;; Registers used:
 36529 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36530 ;; Tracked objects:
 36531 ;;		On entry : 0/0
 36532 ;;		On exit  : 0/0
 36533 ;;		Unchanged: 0/0
 36534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36535 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36536 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36538 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36539 ;;Total ram usage:        1 bytes
 36540 ;; Hardware stack levels used:    1
 36541 ;; Hardware stack levels required when called:   12
 36542 ;; This function calls:
 36543 ;;		_InitDefault433Channels
 36544 ;;		_InitDefault868Channels
 36545 ;;		_LORAWAN_LinkCheckConfigure
 36546 ;;		_RADIO_Init
 36547 ;;		_RADIO_SetLoRaSyncWord
 36548 ;;		_StopAllSoftwareTimers
 36549 ;;		_UpdateMinMaxChDataRate
 36550 ;;		_memset
 36551 ;; This function is called by:
 36552 ;;		_LORAWAN_Init
 36553 ;; This function uses a non-reentrant model
 36554 ;;
 36555                           
 36556                           	psect	text162
 36557  004E08                     __ptext162:
 36558                           	opt stack 0
 36559  004E08                     _LORAWAN_Reset:
 36560                           	opt stack 17
 36561                           
 36562                           ;incstack = 0
 36563                           ;LORAWAN_Reset@ismBandNew stored from wreg
 36564  004E08  0100               	movlb	0	; () banked
 36565  004E0A  6FB5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 36566                           
 36567                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 36568  004E0C  0102               	movlb	2	; () banked
 36569  004E0E  05F0               	decf	(_loRa+240)& (0+255),w,b
 36570  004E10  B4D8               	btfsc	status,2,c
 36571                           
 36572                           ; BSR set to: 2
 36573                           ;lorawan_eu.c: 151: {
 36574                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 36575  004E12  EC5D  F04A         	call	_StopAllSoftwareTimers	;wreg free
 36576                           
 36577                           ;lorawan_eu.c: 153: }
 36578                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 36579  004E16  0E34               	movlw	52
 36580  004E18  0102               	movlb	2	; () banked
 36581  004E1A  6FF4               	movwf	(_loRa+244)& (0+255),b
 36582                           
 36583                           ; BSR set to: 2
 36584                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 36585  004E1C  0102               	movlb	2	; () banked
 36586  004E1E  51F4               	movf	(_loRa+244)& (0+255),w,b
 36587  004E20  ECC9  F051         	call	_RADIO_SetLoRaSyncWord
 36588                           
 36589                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 36590  004E24  0E00               	movlw	0
 36591  004E26  0102               	movlb	2	; () banked
 36592  004E28  6F02               	movwf	(_loRa+2)& (0+255),b
 36593  004E2A  0E00               	movlw	0
 36594  004E2C  6F03               	movwf	(_loRa+3)& (0+255),b
 36595  004E2E  0E00               	movlw	0
 36596  004E30  6F04               	movwf	(_loRa+4)& (0+255),b
 36597  004E32  0E00               	movlw	0
 36598  004E34  6F05               	movwf	(_loRa+5)& (0+255),b
 36599                           
 36600                           ; BSR set to: 2
 36601                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 36602  004E36  0102               	movlb	2	; () banked
 36603  004E38  69DD               	setf	(_loRa+221)& (0+255),b
 36604                           
 36605                           ; BSR set to: 2
 36606                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 36607  004E3A  0E00               	movlw	0
 36608  004E3C  0102               	movlb	2	; () banked
 36609  004E3E  6FDE               	movwf	(_loRa+222)& (0+255),b
 36610                           
 36611                           ; BSR set to: 2
 36612                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 36613  004E40  0E00               	movlw	0
 36614  004E42  0102               	movlb	2	; () banked
 36615  004E44  6FC8               	movwf	(_loRa+200)& (0+255),b
 36616  004E46  0E00               	movlw	0
 36617  004E48  6FC9               	movwf	(_loRa+201)& (0+255),b
 36618  004E4A  0E00               	movlw	0
 36619  004E4C  6FCA               	movwf	(_loRa+202)& (0+255),b
 36620  004E4E  0E00               	movlw	0
 36621  004E50  6FCB               	movwf	(_loRa+203)& (0+255),b
 36622                           
 36623                           ; BSR set to: 2
 36624                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 36625  004E52  0E00               	movlw	0
 36626  004E54  0102               	movlb	2	; () banked
 36627  004E56  6FD5               	movwf	(_loRa+213)& (0+255),b
 36628  004E58  0E00               	movlw	0
 36629  004E5A  6FD4               	movwf	(_loRa+212)& (0+255),b
 36630                           
 36631                           ; BSR set to: 2
 36632                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 36633  004E5C  0E00               	movlw	0
 36634  004E5E  0102               	movlb	2	; () banked
 36635  004E60  6F0A               	movwf	(_loRa+10)& (0+255),b
 36636  004E62  0E00               	movlw	0
 36637  004E64  6F0B               	movwf	(_loRa+11)& (0+255),b
 36638  004E66  0E00               	movlw	0
 36639  004E68  6F0C               	movwf	(_loRa+12)& (0+255),b
 36640  004E6A  0E00               	movlw	0
 36641  004E6C  6F0D               	movwf	(_loRa+13)& (0+255),b
 36642                           
 36643                           ; BSR set to: 2
 36644                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 36645  004E6E  0E00               	movlw	0
 36646  004E70  0102               	movlb	2	; () banked
 36647  004E72  6F06               	movwf	(_loRa+6)& (0+255),b
 36648  004E74  0E00               	movlw	0
 36649  004E76  6F07               	movwf	(_loRa+7)& (0+255),b
 36650  004E78  0E00               	movlw	0
 36651  004E7A  6F08               	movwf	(_loRa+8)& (0+255),b
 36652  004E7C  0E00               	movlw	0
 36653  004E7E  6F09               	movwf	(_loRa+9)& (0+255),b
 36654                           
 36655                           ; BSR set to: 2
 36656                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 36657  004E80  0E00               	movlw	0
 36658  004E82  0102               	movlb	2	; () banked
 36659  004E84  6FD3               	movwf	(_loRa+211)& (0+255),b
 36660  004E86  0E00               	movlw	0
 36661  004E88  6FD2               	movwf	(_loRa+210)& (0+255),b
 36662                           
 36663                           ; BSR set to: 2
 36664                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 36665  004E8A  0E00               	movlw	0
 36666  004E8C  0102               	movlb	2	; () banked
 36667  004E8E  6FDC               	movwf	(_loRa+220)& (0+255),b
 36668  004E90  0E01               	movlw	1
 36669  004E92  6FDB               	movwf	(_loRa+219)& (0+255),b
 36670                           
 36671                           ; BSR set to: 2
 36672                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 36673  004E94  0E00               	movlw	0
 36674  004E96  0102               	movlb	2	; () banked
 36675  004E98  6FD1               	movwf	(_loRa+209)& (0+255),b
 36676  004E9A  0E00               	movlw	0
 36677  004E9C  6FD0               	movwf	(_loRa+208)& (0+255),b
 36678                           
 36679                           ; BSR set to: 2
 36680                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 36681  004E9E  0E00               	movlw	0
 36682  004EA0  0102               	movlb	2	; () banked
 36683  004EA2  6FEE               	movwf	(_loRa+238)& (0+255),b
 36684                           
 36685                           ; BSR set to: 2
 36686                           ;lorawan_eu.c: 169: loRa.offset = 0;
 36687  004EA4  0E00               	movlw	0
 36688  004EA6  0102               	movlb	2	; () banked
 36689  004EA8  6FEF               	movwf	(_loRa+239)& (0+255),b
 36690                           
 36691                           ; BSR set to: 2
 36692                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 36693  004EAA  0E00               	movlw	0
 36694  004EAC  0102               	movlb	2	; () banked
 36695  004EAE  6FC8               	movwf	(_loRa+200)& (0+255),b
 36696  004EB0  0E00               	movlw	0
 36697  004EB2  6FC9               	movwf	(_loRa+201)& (0+255),b
 36698  004EB4  0E00               	movlw	0
 36699  004EB6  6FCA               	movwf	(_loRa+202)& (0+255),b
 36700  004EB8  0E00               	movlw	0
 36701  004EBA  6FCB               	movwf	(_loRa+203)& (0+255),b
 36702                           
 36703                           ; BSR set to: 2
 36704                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 36705  004EBC  0102               	movlb	2	; () banked
 36706  004EBE  9503               	bcf	(_loRa+3)& (0+255),2,b
 36707                           
 36708                           ; BSR set to: 2
 36709                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 36710  004EC0  0E00               	movlw	0
 36711  004EC2  0102               	movlb	2	; () banked
 36712  004EC4  6F02               	movwf	(_loRa+2)& (0+255),b
 36713  004EC6  0E00               	movlw	0
 36714  004EC8  6F03               	movwf	(_loRa+3)& (0+255),b
 36715  004ECA  0E00               	movlw	0
 36716  004ECC  6F04               	movwf	(_loRa+4)& (0+255),b
 36717  004ECE  0E00               	movlw	0
 36718  004ED0  6F05               	movwf	(_loRa+5)& (0+255),b
 36719                           
 36720                           ; BSR set to: 2
 36721                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 36722  004ED2  0E00               	movlw	0
 36723  004ED4  0102               	movlb	2	; () banked
 36724  004ED6  6F01               	movwf	(_loRa+1)& (0+255),b
 36725  004ED8  0E00               	movlw	0
 36726  004EDA  6F00               	movwf	_loRa& (0+255),b
 36727                           
 36728                           ; BSR set to: 2
 36729                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 36730  004EDC  0E07               	movlw	7
 36731  004EDE  0102               	movlb	2	; () banked
 36732  004EE0  6FD7               	movwf	(_loRa+215)& (0+255),b
 36733                           
 36734                           ; BSR set to: 2
 36735                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 36736  004EE2  0E00               	movlw	0
 36737  004EE4  0102               	movlb	2	; () banked
 36738  004EE6  6FD6               	movwf	(_loRa+214)& (0+255),b
 36739                           
 36740                           ; BSR set to: 2
 36741                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 36742  004EE8  0E01               	movlw	1
 36743  004EEA  0102               	movlb	2	; () banked
 36744  004EEC  6FD9               	movwf	(_loRa+217)& (0+255),b
 36745                           
 36746                           ; BSR set to: 2
 36747                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 36748  004EEE  0E01               	movlw	1
 36749  004EF0  0102               	movlb	2	; () banked
 36750  004EF2  6FD8               	movwf	(_loRa+216)& (0+255),b
 36751                           
 36752                           ; BSR set to: 2
 36753                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 36754  004EF4  0102               	movlb	2	; () banked
 36755  004EF6  69E0               	setf	(_loRa+224)& (0+255),b
 36756                           
 36757                           ; BSR set to: 2
 36758                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 36759  004EF8  C0B5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 36760                           
 36761                           ; BSR set to: 2
 36762                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 36763  004EFC  0E00               	movlw	0
 36764  004EFE  0102               	movlb	2	; () banked
 36765  004F00  6F12               	movwf	(_loRa+18)& (0+255),b
 36766                           
 36767                           ; BSR set to: 2
 36768                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 36769  004F02  0E10               	movlw	16
 36770  004F04  0102               	movlb	2	; () banked
 36771  004F06  6FED               	movwf	(_loRa+237)& (0+255),b
 36772                           
 36773                           ; BSR set to: 2
 36774                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 36775  004F08  0100               	movlb	0	; () banked
 36776  004F0A  51B5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 36777  004F0C  0100               	movlb	0	; () banked
 36778  004F0E  A4D8               	btfss	status,2,c
 36779  004F10  D01F               	goto	l16735
 36780                           
 36781                           ; BSR set to: 0
 36782                           ;lorawan_eu.c: 193: {
 36783                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 36784  004F12  0EFF               	movlw	low (_radioBuffer+16)
 36785  004F14  0100               	movlb	0	; () banked
 36786  004F16  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36787  004F18  0E05               	movlw	high (_radioBuffer+16)
 36788  004F1A  0100               	movlb	0	; () banked
 36789  004F1C  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36790  004F1E  0EA0               	movlw	160
 36791  004F20  0100               	movlb	0	; () banked
 36792  004F22  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 36793  004F24  0E27               	movlw	39
 36794  004F26  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36795  004F28  0EBE               	movlw	190
 36796  004F2A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36797  004F2C  0E33               	movlw	51
 36798  004F2E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36799  004F30  EC17  F028         	call	_RADIO_Init	;wreg free
 36800                           
 36801                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 36802  004F34  EC1B  F042         	call	_InitDefault868Channels	;wreg free
 36803                           
 36804                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 36805  004F38  0E00               	movlw	0
 36806  004F3A  0102               	movlb	2	; () banked
 36807  004F3C  6F1C               	movwf	(_loRa+28)& (0+255),b
 36808                           
 36809                           ; BSR set to: 2
 36810                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 36811  004F3E  0E08               	movlw	8
 36812  004F40  0102               	movlb	2	; () banked
 36813  004F42  6F18               	movwf	(_loRa+24)& (0+255),b
 36814  004F44  0EE6               	movlw	230
 36815  004F46  6F19               	movwf	(_loRa+25)& (0+255),b
 36816  004F48  0ED3               	movlw	211
 36817  004F4A  6F1A               	movwf	(_loRa+26)& (0+255),b
 36818  004F4C  0E33               	movlw	51
 36819  004F4E  D01E               	goto	L23
 36820  004F50                     l16735:
 36821                           
 36822                           ;lorawan_eu.c: 201: else
 36823                           ;lorawan_eu.c: 202: {
 36824                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 36825  004F50  0EFF               	movlw	low (_radioBuffer+16)
 36826  004F52  0100               	movlb	0	; () banked
 36827  004F54  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36828  004F56  0E05               	movlw	high (_radioBuffer+16)
 36829  004F58  0100               	movlb	0	; () banked
 36830  004F5A  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36831  004F5C  0E20               	movlw	32
 36832  004F5E  0100               	movlb	0	; () banked
 36833  004F60  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 36834  004F62  0EA2               	movlw	162
 36835  004F64  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36836  004F66  0ED3               	movlw	211
 36837  004F68  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36838  004F6A  0E19               	movlw	25
 36839  004F6C  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36840  004F6E  EC17  F028         	call	_RADIO_Init	;wreg free
 36841                           
 36842                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 36843  004F72  EC6B  F042         	call	_InitDefault433Channels	;wreg free
 36844                           
 36845                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 36846  004F76  0E00               	movlw	0
 36847  004F78  0102               	movlb	2	; () banked
 36848  004F7A  6F1C               	movwf	(_loRa+28)& (0+255),b
 36849                           
 36850                           ; BSR set to: 2
 36851                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 36852  004F7C  0E28               	movlw	40
 36853  004F7E  0102               	movlb	2	; () banked
 36854  004F80  6F18               	movwf	(_loRa+24)& (0+255),b
 36855  004F82  0E76               	movlw	118
 36856  004F84  6F19               	movwf	(_loRa+25)& (0+255),b
 36857  004F86  0EE8               	movlw	232
 36858  004F88  6F1A               	movwf	(_loRa+26)& (0+255),b
 36859  004F8A  0E19               	movlw	25
 36860  004F8C                     L23:
 36861  004F8C  6F1B               	movwf	(_loRa+27)& (0+255),b
 36862                           
 36863                           ; BSR set to: 2
 36864                           ;lorawan_eu.c: 209: }
 36865                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 36866                           
 36867                           ; BSR set to: 2
 36868  004F8E  0E01               	movlw	1
 36869  004F90  0102               	movlb	2	; () banked
 36870  004F92  6FE1               	movwf	(_loRa+225)& (0+255),b
 36871                           
 36872                           ; BSR set to: 2
 36873                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 36874  004F94  0E00               	movlw	0
 36875  004F96  0102               	movlb	2	; () banked
 36876  004F98  6FDF               	movwf	(_loRa+223)& (0+255),b
 36877                           
 36878                           ; BSR set to: 2
 36879                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 36880  004F9A  EC4D  F038         	call	_UpdateMinMaxChDataRate	;wreg free
 36881                           
 36882                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 36883  004F9E  0E00               	movlw	0
 36884  004FA0  0102               	movlb	2	; () banked
 36885  004FA2  6FA6               	movwf	(_loRa+166)& (0+255),b
 36886  004FA4  0E00               	movlw	0
 36887  004FA6  6FA5               	movwf	(_loRa+165)& (0+255),b
 36888                           
 36889                           ; BSR set to: 2
 36890                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 36891  004FA8  0E1D               	movlw	low (_loRa+29)
 36892  004FAA  0100               	movlb	0	; () banked
 36893  004FAC  6F64               	movwf	memset@p1& (0+255),b
 36894  004FAE  0E02               	movlw	high (_loRa+29)
 36895  004FB0  0100               	movlb	0	; () banked
 36896  004FB2  6F65               	movwf	(memset@p1+1)& (0+255),b
 36897  004FB4  0E00               	movlw	0
 36898  004FB6  0100               	movlb	0	; () banked
 36899  004FB8  6F67               	movwf	(memset@c+1)& (0+255),b
 36900  004FBA  0E00               	movlw	0
 36901  004FBC  6F66               	movwf	memset@c& (0+255),b
 36902  004FBE  0E00               	movlw	0
 36903  004FC0  0100               	movlb	0	; () banked
 36904  004FC2  6F69               	movwf	(memset@n+1)& (0+255),b
 36905  004FC4  0E69               	movlw	105
 36906  004FC6  6F68               	movwf	memset@n& (0+255),b
 36907  004FC8  ECCE  F04D         	call	_memset	;wreg free
 36908                           
 36909                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 36910  004FCC  0E03               	movlw	3
 36911  004FCE  0102               	movlb	2	; () banked
 36912  004FD0  6F95               	movwf	(_loRa+149)& (0+255),b
 36913  004FD2  0EE8               	movlw	232
 36914  004FD4  6F94               	movwf	(_loRa+148)& (0+255),b
 36915                           
 36916                           ; BSR set to: 2
 36917                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 36918  004FD6  0E07               	movlw	7
 36919  004FD8  0102               	movlb	2	; () banked
 36920  004FDA  6F97               	movwf	(_loRa+151)& (0+255),b
 36921  004FDC  0ED0               	movlw	208
 36922  004FDE  6F96               	movwf	(_loRa+150)& (0+255),b
 36923                           
 36924                           ; BSR set to: 2
 36925                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 36926  004FE0  0E13               	movlw	19
 36927  004FE2  0102               	movlb	2	; () banked
 36928  004FE4  6F99               	movwf	(_loRa+153)& (0+255),b
 36929  004FE6  0E88               	movlw	136
 36930  004FE8  6F98               	movwf	(_loRa+152)& (0+255),b
 36931                           
 36932                           ; BSR set to: 2
 36933                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 36934  004FEA  0E17               	movlw	23
 36935  004FEC  0102               	movlb	2	; () banked
 36936  004FEE  6F9B               	movwf	(_loRa+155)& (0+255),b
 36937  004FF0  0E70               	movlw	112
 36938  004FF2  6F9A               	movwf	(_loRa+154)& (0+255),b
 36939                           
 36940                           ; BSR set to: 2
 36941                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 36942  004FF4  0E07               	movlw	7
 36943  004FF6  0102               	movlb	2	; () banked
 36944  004FF8  6FA1               	movwf	(_loRa+161)& (0+255),b
 36945  004FFA  0ED0               	movlw	208
 36946  004FFC  6FA0               	movwf	(_loRa+160)& (0+255),b
 36947                           
 36948                           ; BSR set to: 2
 36949                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 36950  004FFE  0E20               	movlw	32
 36951  005000  0102               	movlb	2	; () banked
 36952  005002  6FA3               	movwf	(_loRa+163)& (0+255),b
 36953                           
 36954                           ; BSR set to: 2
 36955                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 36956  005004  0E40               	movlw	64
 36957  005006  0102               	movlb	2	; () banked
 36958  005008  6FA2               	movwf	(_loRa+162)& (0+255),b
 36959                           
 36960                           ; BSR set to: 2
 36961                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 36962  00500A  0E40               	movlw	64
 36963  00500C  0102               	movlb	2	; () banked
 36964  00500E  6F9D               	movwf	(_loRa+157)& (0+255),b
 36965  005010  0E00               	movlw	0
 36966  005012  6F9C               	movwf	(_loRa+156)& (0+255),b
 36967                           
 36968                           ; BSR set to: 2
 36969                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 36970  005014  0E40               	movlw	64
 36971  005016  0102               	movlb	2	; () banked
 36972  005018  6F9F               	movwf	(_loRa+159)& (0+255),b
 36973  00501A  0E00               	movlw	0
 36974  00501C  6F9E               	movwf	(_loRa+158)& (0+255),b
 36975                           
 36976                           ; BSR set to: 2
 36977                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 36978  00501E  0E00               	movlw	0
 36979  005020  0100               	movlb	0	; () banked
 36980  005022  6FAB               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 36981  005024  0E00               	movlw	0
 36982  005026  6FAA               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 36983  005028  ECBC  F030         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 36984  00502C  0012               	return		;funcret
 36985  00502E                     __end_of_LORAWAN_Reset:
 36986                           	opt stack 0
 36987                           tosu	equ	0xFFF
 36988                           tosh	equ	0xFFE
 36989                           tosl	equ	0xFFD
 36990                           pclath	equ	0xFFA
 36991                           tblptru	equ	0xFF8
 36992                           tblptrh	equ	0xFF7
 36993                           tblptrl	equ	0xFF6
 36994                           tablat	equ	0xFF5
 36995                           prodh	equ	0xFF4
 36996                           prodl	equ	0xFF3
 36997                           intcon	equ	0xFF2
 36998                           intcon2	equ	0xFF1
 36999                           intcon3	equ	0xFF0
 37000                           indf0	equ	0xFEF
 37001                           postinc0	equ	0xFEE
 37002                           plusw0	equ	0xFEB
 37003                           fsr0h	equ	0xFEA
 37004                           fsr0l	equ	0xFE9
 37005                           wreg	equ	0xFE8
 37006                           postinc1	equ	0xFE6
 37007                           postdec1	equ	0xFE5
 37008                           plusw1	equ	0xFE3
 37009                           fsr1h	equ	0xFE2
 37010                           fsr1l	equ	0xFE1
 37011                           indf2	equ	0xFDF
 37012                           postinc2	equ	0xFDE
 37013                           postdec2	equ	0xFDD
 37014                           plusw2	equ	0xFDB
 37015                           fsr2h	equ	0xFDA
 37016                           fsr2l	equ	0xFD9
 37017                           status	equ	0xFD8
 37018                           
 37019 ;; *************** function _UpdateMinMaxChDataRate *****************
 37020 ;; Defined at:
 37021 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37022 ;; Parameters:    Size  Location     Type
 37023 ;;		None
 37024 ;; Auto vars:     Size  Location     Type
 37025 ;;  i               1    5[BANK0 ] unsigned char 
 37026 ;; Return value:  Size  Location     Type
 37027 ;;                  1    wreg      void 
 37028 ;; Registers used:
 37029 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37030 ;; Tracked objects:
 37031 ;;		On entry : 0/0
 37032 ;;		On exit  : 0/0
 37033 ;;		Unchanged: 0/0
 37034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37035 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37036 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37037 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37038 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37039 ;;Total ram usage:        2 bytes
 37040 ;; Hardware stack levels used:    1
 37041 ;; Hardware stack levels required when called:    7
 37042 ;; This function calls:
 37043 ;;		Nothing
 37044 ;; This function is called by:
 37045 ;;		_LORAWAN_Reset
 37046 ;; This function uses a non-reentrant model
 37047 ;;
 37048                           
 37049                           	psect	text163
 37050  00709A                     __ptext163:
 37051                           	opt stack 0
 37052  00709A                     _UpdateMinMaxChDataRate:
 37053                           	opt stack 21
 37054                           
 37055                           ;lorawan.c: 1065: uint8_t i;
 37056                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 37057                           
 37058                           ;incstack = 0
 37059  00709A  0E07               	movlw	7
 37060  00709C  0102               	movlb	2	; () banked
 37061  00709E  6FEB               	movwf	(_loRa+235)& (0+255),b
 37062                           
 37063                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 37064  0070A0  0E00               	movlw	0
 37065  0070A2  0102               	movlb	2	; () banked
 37066  0070A4  6FEC               	movwf	(_loRa+236)& (0+255),b
 37067                           
 37068                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 37069  0070A6  0E00               	movlw	0
 37070  0070A8  0100               	movlb	0	; () banked
 37071  0070AA  6F65               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 37072  0070AC  D071               	goto	l11683
 37073  0070AE                     l11671:
 37074                           
 37075                           ; BSR set to: 0
 37076                           ;lorawan.c: 1072: {
 37077                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 37078  0070AE  0100               	movlb	0	; () banked
 37079  0070B0  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37080  0070B2  0D0E               	mullw	14
 37081  0070B4  0E05               	movlw	5
 37082  0070B6  26F3               	addwf	prodl,f,c
 37083  0070B8  0E00               	movlw	0
 37084  0070BA  22F4               	addwfc	prodh,f,c
 37085  0070BC  0E00               	movlw	low _Channels
 37086  0070BE  24F3               	addwf	prodl,w,c
 37087  0070C0  6ED9               	movwf	fsr2l,c
 37088  0070C2  0E04               	movlw	high _Channels
 37089  0070C4  20F4               	addwfc	prodh,w,c
 37090  0070C6  6EDA               	movwf	fsr2h,c
 37091  0070C8  0104               	movlb	4	; () banked
 37092  0070CA  50DF               	movf	223,w,c
 37093  0070CC  0B0F               	andlw	15
 37094  0070CE  0100               	movlb	0	; () banked
 37095  0070D0  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 37096  0070D2  0102               	movlb	2	; () banked
 37097  0070D4  51EB               	movf	(_loRa+235)& (0+255),w,b
 37098  0070D6  0100               	movlb	0	; () banked
 37099  0070D8  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 37100  0070DA  B0D8               	btfsc	status,0,c
 37101  0070DC  D022               	goto	l2043
 37102                           
 37103                           ; BSR set to: 0
 37104  0070DE  0100               	movlb	0	; () banked
 37105  0070E0  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37106  0070E2  0D0E               	mullw	14
 37107  0070E4  0E04               	movlw	4
 37108  0070E6  26F3               	addwf	prodl,f,c
 37109  0070E8  0E00               	movlw	0
 37110  0070EA  22F4               	addwfc	prodh,f,c
 37111  0070EC  0E00               	movlw	low _Channels
 37112  0070EE  24F3               	addwf	prodl,w,c
 37113  0070F0  6ED9               	movwf	fsr2l,c
 37114  0070F2  0E04               	movlw	high _Channels
 37115  0070F4  20F4               	addwfc	prodh,w,c
 37116  0070F6  6EDA               	movwf	fsr2h,c
 37117  0070F8  04DE               	decf	postinc2,w,c
 37118  0070FA  A4D8               	btfss	status,2,c
 37119  0070FC  D012               	goto	l2043
 37120                           
 37121                           ; BSR set to: 0
 37122                           ;lorawan.c: 1074: {
 37123                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 37124  0070FE  0100               	movlb	0	; () banked
 37125  007100  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37126  007102  0D0E               	mullw	14
 37127  007104  0E05               	movlw	5
 37128  007106  26F3               	addwf	prodl,f,c
 37129  007108  0E00               	movlw	0
 37130  00710A  22F4               	addwfc	prodh,f,c
 37131  00710C  0E00               	movlw	low _Channels
 37132  00710E  24F3               	addwf	prodl,w,c
 37133  007110  6ED9               	movwf	fsr2l,c
 37134  007112  0E04               	movlw	high _Channels
 37135  007114  20F4               	addwfc	prodh,w,c
 37136  007116  6EDA               	movwf	fsr2h,c
 37137  007118  0104               	movlb	4	; () banked
 37138  00711A  50DF               	movf	223,w,c
 37139  00711C  0B0F               	andlw	15
 37140  00711E  0102               	movlb	2	; () banked
 37141  007120  6FEB               	movwf	(_loRa+235)& (0+255),b
 37142  007122                     l2043:
 37143                           
 37144                           ;lorawan.c: 1076: }
 37145                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 37146  007122  0100               	movlb	0	; () banked
 37147  007124  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37148  007126  0D0E               	mullw	14
 37149  007128  0E05               	movlw	5
 37150  00712A  26F3               	addwf	prodl,f,c
 37151  00712C  0E00               	movlw	0
 37152  00712E  22F4               	addwfc	prodh,f,c
 37153  007130  0E00               	movlw	low _Channels
 37154  007132  24F3               	addwf	prodl,w,c
 37155  007134  6ED9               	movwf	fsr2l,c
 37156  007136  0E04               	movlw	high _Channels
 37157  007138  20F4               	addwfc	prodh,w,c
 37158  00713A  6EDA               	movwf	fsr2h,c
 37159  00713C  0104               	movlb	4	; () banked
 37160  00713E  38DF               	swapf	223,w,c
 37161  007140  0B0F               	andlw	15
 37162  007142  0102               	movlb	2	; () banked
 37163  007144  61EC               	cpfslt	(_loRa+236)& (0+255),b
 37164  007146  D022               	goto	l11681
 37165                           
 37166                           ; BSR set to: 2
 37167  007148  0100               	movlb	0	; () banked
 37168  00714A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37169  00714C  0D0E               	mullw	14
 37170  00714E  0E04               	movlw	4
 37171  007150  26F3               	addwf	prodl,f,c
 37172  007152  0E00               	movlw	0
 37173  007154  22F4               	addwfc	prodh,f,c
 37174  007156  0E00               	movlw	low _Channels
 37175  007158  24F3               	addwf	prodl,w,c
 37176  00715A  6ED9               	movwf	fsr2l,c
 37177  00715C  0E04               	movlw	high _Channels
 37178  00715E  20F4               	addwfc	prodh,w,c
 37179  007160  6EDA               	movwf	fsr2h,c
 37180  007162  04DE               	decf	postinc2,w,c
 37181  007164  A4D8               	btfss	status,2,c
 37182  007166  D012               	goto	l11681
 37183                           
 37184                           ; BSR set to: 0
 37185                           ;lorawan.c: 1078: {
 37186                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 37187  007168  0100               	movlb	0	; () banked
 37188  00716A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37189  00716C  0D0E               	mullw	14
 37190  00716E  0E05               	movlw	5
 37191  007170  26F3               	addwf	prodl,f,c
 37192  007172  0E00               	movlw	0
 37193  007174  22F4               	addwfc	prodh,f,c
 37194  007176  0E00               	movlw	low _Channels
 37195  007178  24F3               	addwf	prodl,w,c
 37196  00717A  6ED9               	movwf	fsr2l,c
 37197  00717C  0E04               	movlw	high _Channels
 37198  00717E  20F4               	addwfc	prodh,w,c
 37199  007180  6EDA               	movwf	fsr2h,c
 37200  007182  0104               	movlb	4	; () banked
 37201  007184  38DF               	swapf	223,w,c
 37202  007186  0B0F               	andlw	15
 37203  007188  0102               	movlb	2	; () banked
 37204  00718A  6FEC               	movwf	(_loRa+236)& (0+255),b
 37205  00718C                     l11681:
 37206  00718C  0100               	movlb	0	; () banked
 37207  00718E  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 37208  007190                     l11683:
 37209                           
 37210                           ; BSR set to: 0
 37211  007190  0102               	movlb	2	; () banked
 37212  007192  51ED               	movf	(_loRa+237)& (0+255),w,b
 37213  007194  0100               	movlb	0	; () banked
 37214  007196  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37215  007198  B0D8               	btfsc	status,0,c
 37216  00719A  0012               	return	
 37217  00719C  D788               	goto	l11671
 37218  00719E                     __end_of_UpdateMinMaxChDataRate:
 37219                           	opt stack 0
 37220                           tosu	equ	0xFFF
 37221                           tosh	equ	0xFFE
 37222                           tosl	equ	0xFFD
 37223                           pclath	equ	0xFFA
 37224                           tblptru	equ	0xFF8
 37225                           tblptrh	equ	0xFF7
 37226                           tblptrl	equ	0xFF6
 37227                           tablat	equ	0xFF5
 37228                           prodh	equ	0xFF4
 37229                           prodl	equ	0xFF3
 37230                           intcon	equ	0xFF2
 37231                           intcon2	equ	0xFF1
 37232                           intcon3	equ	0xFF0
 37233                           indf0	equ	0xFEF
 37234                           postinc0	equ	0xFEE
 37235                           plusw0	equ	0xFEB
 37236                           fsr0h	equ	0xFEA
 37237                           fsr0l	equ	0xFE9
 37238                           wreg	equ	0xFE8
 37239                           postinc1	equ	0xFE6
 37240                           postdec1	equ	0xFE5
 37241                           plusw1	equ	0xFE3
 37242                           fsr1h	equ	0xFE2
 37243                           fsr1l	equ	0xFE1
 37244                           indf2	equ	0xFDF
 37245                           postinc2	equ	0xFDE
 37246                           postdec2	equ	0xFDD
 37247                           plusw2	equ	0xFDB
 37248                           fsr2h	equ	0xFDA
 37249                           fsr2l	equ	0xFD9
 37250                           status	equ	0xFD8
 37251                           
 37252 ;; *************** function _StopAllSoftwareTimers *****************
 37253 ;; Defined at:
 37254 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37255 ;; Parameters:    Size  Location     Type
 37256 ;;		None
 37257 ;; Auto vars:     Size  Location     Type
 37258 ;;		None
 37259 ;; Return value:  Size  Location     Type
 37260 ;;                  1    wreg      void 
 37261 ;; Registers used:
 37262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37263 ;; Tracked objects:
 37264 ;;		On entry : 0/0
 37265 ;;		On exit  : 0/0
 37266 ;;		Unchanged: 0/0
 37267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37272 ;;Total ram usage:        0 bytes
 37273 ;; Hardware stack levels used:    1
 37274 ;; Hardware stack levels required when called:    8
 37275 ;; This function calls:
 37276 ;;		_SwTimerStop
 37277 ;; This function is called by:
 37278 ;;		_LORAWAN_Init
 37279 ;;		_LORAWAN_Reset
 37280 ;; This function uses a non-reentrant model
 37281 ;;
 37282                           
 37283                           	psect	text164
 37284  0094BA                     __ptext164:
 37285                           	opt stack 0
 37286  0094BA                     _StopAllSoftwareTimers:
 37287                           	opt stack 21
 37288                           
 37289                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 37290                           
 37291                           ; BSR set to: 0
 37292                           ;incstack = 0
 37293  0094BA  0102               	movlb	2	; () banked
 37294  0094BC  51E2               	movf	(_loRa+226)& (0+255),w,b
 37295  0094BE  EC39  F04F         	call	_SwTimerStop
 37296                           
 37297                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 37298  0094C2  0102               	movlb	2	; () banked
 37299  0094C4  51E3               	movf	(_loRa+227)& (0+255),w,b
 37300  0094C6  EC39  F04F         	call	_SwTimerStop
 37301                           
 37302                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 37303  0094CA  0102               	movlb	2	; () banked
 37304  0094CC  51E7               	movf	(_loRa+231)& (0+255),w,b
 37305  0094CE  EC39  F04F         	call	_SwTimerStop
 37306                           
 37307                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 37308  0094D2  0102               	movlb	2	; () banked
 37309  0094D4  51E4               	movf	(_loRa+228)& (0+255),w,b
 37310  0094D6  EC39  F04F         	call	_SwTimerStop
 37311                           
 37312                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 37313  0094DA  0102               	movlb	2	; () banked
 37314  0094DC  51E5               	movf	(_loRa+229)& (0+255),w,b
 37315  0094DE  EC39  F04F         	call	_SwTimerStop
 37316                           
 37317                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 37318  0094E2  0102               	movlb	2	; () banked
 37319  0094E4  51E8               	movf	(_loRa+232)& (0+255),w,b
 37320  0094E6  EC39  F04F         	call	_SwTimerStop
 37321                           
 37322                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 37323  0094EA  0102               	movlb	2	; () banked
 37324  0094EC  51E6               	movf	(_loRa+230)& (0+255),w,b
 37325  0094EE  EC39  F04F         	call	_SwTimerStop
 37326                           
 37327                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 37328  0094F2  0102               	movlb	2	; () banked
 37329  0094F4  51EA               	movf	(_loRa+234)& (0+255),w,b
 37330  0094F6  EC39  F04F         	call	_SwTimerStop
 37331                           
 37332                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 37333  0094FA  0102               	movlb	2	; () banked
 37334  0094FC  51F3               	movf	(_loRa+243)& (0+255),w,b
 37335  0094FE  EC39  F04F         	call	_SwTimerStop
 37336                           
 37337                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 37338  009502  0102               	movlb	2	; () banked
 37339  009504  51E9               	movf	(_loRa+233)& (0+255),w,b
 37340  009506  EC39  F04F         	call	_SwTimerStop
 37341  00950A  0012               	return		;funcret
 37342  00950C                     __end_of_StopAllSoftwareTimers:
 37343                           	opt stack 0
 37344                           tosu	equ	0xFFF
 37345                           tosh	equ	0xFFE
 37346                           tosl	equ	0xFFD
 37347                           pclath	equ	0xFFA
 37348                           tblptru	equ	0xFF8
 37349                           tblptrh	equ	0xFF7
 37350                           tblptrl	equ	0xFF6
 37351                           tablat	equ	0xFF5
 37352                           prodh	equ	0xFF4
 37353                           prodl	equ	0xFF3
 37354                           intcon	equ	0xFF2
 37355                           intcon2	equ	0xFF1
 37356                           intcon3	equ	0xFF0
 37357                           indf0	equ	0xFEF
 37358                           postinc0	equ	0xFEE
 37359                           plusw0	equ	0xFEB
 37360                           fsr0h	equ	0xFEA
 37361                           fsr0l	equ	0xFE9
 37362                           wreg	equ	0xFE8
 37363                           postinc1	equ	0xFE6
 37364                           postdec1	equ	0xFE5
 37365                           plusw1	equ	0xFE3
 37366                           fsr1h	equ	0xFE2
 37367                           fsr1l	equ	0xFE1
 37368                           indf2	equ	0xFDF
 37369                           postinc2	equ	0xFDE
 37370                           postdec2	equ	0xFDD
 37371                           plusw2	equ	0xFDB
 37372                           fsr2h	equ	0xFDA
 37373                           fsr2l	equ	0xFD9
 37374                           status	equ	0xFD8
 37375                           
 37376 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 37377 ;; Defined at:
 37378 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37379 ;; Parameters:    Size  Location     Type
 37380 ;;  syncWord        1    wreg     unsigned char 
 37381 ;; Auto vars:     Size  Location     Type
 37382 ;;  syncWord        1    4[BANK0 ] unsigned char 
 37383 ;; Return value:  Size  Location     Type
 37384 ;;                  1    wreg      void 
 37385 ;; Registers used:
 37386 ;;		wreg
 37387 ;; Tracked objects:
 37388 ;;		On entry : 0/0
 37389 ;;		On exit  : 0/0
 37390 ;;		Unchanged: 0/0
 37391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37392 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37394 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37395 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37396 ;;Total ram usage:        1 bytes
 37397 ;; Hardware stack levels used:    1
 37398 ;; Hardware stack levels required when called:    7
 37399 ;; This function calls:
 37400 ;;		Nothing
 37401 ;; This function is called by:
 37402 ;;		_LORAWAN_Reset
 37403 ;;		_ConfigureRadio
 37404 ;; This function uses a non-reentrant model
 37405 ;;
 37406                           
 37407                           	psect	text165
 37408  00A392                     __ptext165:
 37409                           	opt stack 0
 37410  00A392                     _RADIO_SetLoRaSyncWord:
 37411                           	opt stack 18
 37412                           
 37413                           ;incstack = 0
 37414                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 37415  00A392  0100               	movlb	0	; () banked
 37416  00A394  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 37417                           
 37418                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 37419  00A396  C064  F182         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 37420  00A39A  0012               	return		;funcret
 37421  00A39C                     __end_of_RADIO_SetLoRaSyncWord:
 37422                           	opt stack 0
 37423                           tosu	equ	0xFFF
 37424                           tosh	equ	0xFFE
 37425                           tosl	equ	0xFFD
 37426                           pclath	equ	0xFFA
 37427                           tblptru	equ	0xFF8
 37428                           tblptrh	equ	0xFF7
 37429                           tblptrl	equ	0xFF6
 37430                           tablat	equ	0xFF5
 37431                           prodh	equ	0xFF4
 37432                           prodl	equ	0xFF3
 37433                           intcon	equ	0xFF2
 37434                           intcon2	equ	0xFF1
 37435                           intcon3	equ	0xFF0
 37436                           indf0	equ	0xFEF
 37437                           postinc0	equ	0xFEE
 37438                           plusw0	equ	0xFEB
 37439                           fsr0h	equ	0xFEA
 37440                           fsr0l	equ	0xFE9
 37441                           wreg	equ	0xFE8
 37442                           postinc1	equ	0xFE6
 37443                           postdec1	equ	0xFE5
 37444                           plusw1	equ	0xFE3
 37445                           fsr1h	equ	0xFE2
 37446                           fsr1l	equ	0xFE1
 37447                           indf2	equ	0xFDF
 37448                           postinc2	equ	0xFDE
 37449                           postdec2	equ	0xFDD
 37450                           plusw2	equ	0xFDB
 37451                           fsr2h	equ	0xFDA
 37452                           fsr2l	equ	0xFD9
 37453                           status	equ	0xFD8
 37454                           
 37455 ;; *************** function _RADIO_Init *****************
 37456 ;; Defined at:
 37457 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37458 ;; Parameters:    Size  Location     Type
 37459 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 37460 ;;		 -> radioBuffer(271), 
 37461 ;;  frequency       4   31[BANK0 ] unsigned long 
 37462 ;; Auto vars:     Size  Location     Type
 37463 ;;		None
 37464 ;; Return value:  Size  Location     Type
 37465 ;;                  1    wreg      void 
 37466 ;; Registers used:
 37467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37468 ;; Tracked objects:
 37469 ;;		On entry : 0/0
 37470 ;;		On exit  : 0/0
 37471 ;;		Unchanged: 0/0
 37472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37473 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37474 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37475 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37476 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37477 ;;Total ram usage:        7 bytes
 37478 ;; Hardware stack levels used:    1
 37479 ;; Hardware stack levels required when called:   11
 37480 ;; This function calls:
 37481 ;;		_RADIO_RegisterRead
 37482 ;;		_RADIO_RegisterWrite
 37483 ;;		_RADIO_Reset
 37484 ;;		_RADIO_WriteFrequency
 37485 ;;		_RADIO_WriteMode
 37486 ;;		_SwTimerCreate
 37487 ;;		_SwTimerSetCallback
 37488 ;;		_SwTimerStop
 37489 ;; This function is called by:
 37490 ;;		_LORAWAN_Init
 37491 ;;		_LORAWAN_Reset
 37492 ;; This function uses a non-reentrant model
 37493 ;;
 37494                           
 37495                           	psect	text166
 37496  00502E                     __ptext166:
 37497                           	opt stack 0
 37498  00502E                     _RADIO_Init:
 37499                           	opt stack 18
 37500                           
 37501                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 37502                           
 37503                           ;incstack = 0
 37504  00502E  C07F  F174         	movff	RADIO_Init@frequency,_RadioConfiguration
 37505  005032  C080  F175         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 37506  005036  C081  F176         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 37507  00503A  C082  F177         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 37508                           
 37509                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 37510  00503E  0EA8               	movlw	168
 37511  005040  0101               	movlb	1	; () banked
 37512  005042  6F78               	movwf	(_RadioConfiguration+4)& (0+255),b
 37513  005044  0E61               	movlw	97
 37514  005046  6F79               	movwf	(_RadioConfiguration+5)& (0+255),b
 37515  005048  0E00               	movlw	0
 37516  00504A  6F7A               	movwf	(_RadioConfiguration+6)& (0+255),b
 37517  00504C  0E00               	movlw	0
 37518  00504E  6F7B               	movwf	(_RadioConfiguration+7)& (0+255),b
 37519                           
 37520                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 37521  005050  0E50               	movlw	80
 37522  005052  0101               	movlb	1	; () banked
 37523  005054  6F7C               	movwf	(_RadioConfiguration+8)& (0+255),b
 37524  005056  0EC3               	movlw	195
 37525  005058  6F7D               	movwf	(_RadioConfiguration+9)& (0+255),b
 37526  00505A  0E00               	movlw	0
 37527  00505C  6F7E               	movwf	(_RadioConfiguration+10)& (0+255),b
 37528  00505E  0E00               	movlw	0
 37529  005060  6F7F               	movwf	(_RadioConfiguration+11)& (0+255),b
 37530                           
 37531                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 37532  005062  0E01               	movlw	1
 37533  005064  0101               	movlb	1	; () banked
 37534  005066  6F8C               	movwf	(_RadioConfiguration+24)& (0+255),b
 37535                           
 37536                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 37537  005068  0E07               	movlw	7
 37538  00506A  0101               	movlb	1	; () banked
 37539  00506C  6F8E               	movwf	(_RadioConfiguration+26)& (0+255),b
 37540                           
 37541                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 37542  00506E  0E01               	movlw	1
 37543  005070  0101               	movlb	1	; () banked
 37544  005072  6F8F               	movwf	(_RadioConfiguration+27)& (0+255),b
 37545                           
 37546                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 37547  005074  0E01               	movlw	1
 37548  005076  0101               	movlb	1	; () banked
 37549  005078  6F95               	movwf	(_RadioConfiguration+33)& (0+255),b
 37550                           
 37551                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 37552  00507A  0E00               	movlw	0
 37553  00507C  0101               	movlb	1	; () banked
 37554  00507E  6F96               	movwf	(_RadioConfiguration+34)& (0+255),b
 37555                           
 37556                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 37557  005080  0E00               	movlw	0
 37558  005082  0101               	movlb	1	; () banked
 37559  005084  6F81               	movwf	(_RadioConfiguration+13)& (0+255),b
 37560  005086  0E08               	movlw	8
 37561  005088  6F80               	movwf	(_RadioConfiguration+12)& (0+255),b
 37562                           
 37563                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 37564  00508A  0E0C               	movlw	12
 37565  00508C  0101               	movlb	1	; () banked
 37566  00508E  6F8D               	movwf	(_RadioConfiguration+25)& (0+255),b
 37567                           
 37568                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 37569  005090  0E01               	movlw	1
 37570  005092  0101               	movlb	1	; () banked
 37571  005094  6F90               	movwf	(_RadioConfiguration+28)& (0+255),b
 37572                           
 37573                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 37574  005096  0E00               	movlw	0
 37575  005098  0101               	movlb	1	; () banked
 37576  00509A  6F91               	movwf	(_RadioConfiguration+29)& (0+255),b
 37577                           
 37578                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 37579  00509C  0E00               	movlw	0
 37580  00509E  0101               	movlb	1	; () banked
 37581  0050A0  6F94               	movwf	(_RadioConfiguration+32)& (0+255),b
 37582                           
 37583                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 37584  0050A2  0EC1               	movlw	193
 37585  0050A4  0101               	movlb	1	; () banked
 37586  0050A6  6F83               	movwf	(_RadioConfiguration+15)& (0+255),b
 37587                           
 37588                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 37589  0050A8  0E94               	movlw	148
 37590  0050AA  0101               	movlb	1	; () banked
 37591  0050AC  6F84               	movwf	(_RadioConfiguration+16)& (0+255),b
 37592                           
 37593                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 37594  0050AE  0EC1               	movlw	193
 37595  0050B0  0101               	movlb	1	; () banked
 37596  0050B2  6F85               	movwf	(_RadioConfiguration+17)& (0+255),b
 37597                           
 37598                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 37599  0050B4  0E03               	movlw	3
 37600  0050B6  0101               	movlb	1	; () banked
 37601  0050B8  6F8B               	movwf	(_RadioConfiguration+23)& (0+255),b
 37602                           
 37603                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 37604  0050BA  0E34               	movlw	52
 37605  0050BC  0101               	movlb	1	; () banked
 37606  0050BE  6F82               	movwf	(_RadioConfiguration+14)& (0+255),b
 37607                           
 37608                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 37609  0050C0  0E00               	movlw	0
 37610  0050C2  0101               	movlb	1	; () banked
 37611  0050C4  6F97               	movwf	(_RadioConfiguration+35)& (0+255),b
 37612                           
 37613                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 37614  0050C6  0E00               	movlw	0
 37615  0050C8  0101               	movlb	1	; () banked
 37616  0050CA  6F98               	movwf	(_RadioConfiguration+36)& (0+255),b
 37617                           
 37618                           ; BSR set to: 1
 37619                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 37620  0050CC  C07D  F199         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 37621  0050D0  C07E  F19A         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 37622                           
 37623                           ; BSR set to: 1
 37624                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 37625  0050D4  0E00               	movlw	0
 37626  0050D6  0101               	movlb	1	; () banked
 37627  0050D8  6F93               	movwf	(_RadioConfiguration+31)& (0+255),b
 37628  0050DA  0E00               	movlw	0
 37629  0050DC  6F92               	movwf	(_RadioConfiguration+30)& (0+255),b
 37630                           
 37631                           ; BSR set to: 1
 37632                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 37633  0050DE  0E80               	movlw	128
 37634  0050E0  0101               	movlb	1	; () banked
 37635  0050E2  6FA6               	movwf	(_RadioConfiguration+50)& (0+255),b
 37636                           
 37637                           ; BSR set to: 1
 37638                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 37639  0050E4  0E98               	movlw	152
 37640  0050E6  0101               	movlb	1	; () banked
 37641  0050E8  6F9E               	movwf	(_RadioConfiguration+42)& (0+255),b
 37642  0050EA  0E3A               	movlw	58
 37643  0050EC  6F9F               	movwf	(_RadioConfiguration+43)& (0+255),b
 37644  0050EE  0E00               	movlw	0
 37645  0050F0  6FA0               	movwf	(_RadioConfiguration+44)& (0+255),b
 37646  0050F2  0E00               	movlw	0
 37647  0050F4  6FA1               	movwf	(_RadioConfiguration+45)& (0+255),b
 37648                           
 37649                           ; BSR set to: 1
 37650                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 37651  0050F6  0E02               	movlw	2
 37652  0050F8  0101               	movlb	1	; () banked
 37653  0050FA  6FA7               	movwf	(_RadioConfiguration+51)& (0+255),b
 37654                           
 37655                           ; BSR set to: 1
 37656                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 37657  0050FC  0E0B               	movlw	11
 37658  0050FE  0101               	movlb	1	; () banked
 37659  005100  6FA8               	movwf	(_RadioConfiguration+52)& (0+255),b
 37660                           
 37661                           ; BSR set to: 1
 37662                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 37663  005102  0E12               	movlw	18
 37664  005104  0101               	movlb	1	; () banked
 37665  005106  6FA9               	movwf	(_RadioConfiguration+53)& (0+255),b
 37666                           
 37667                           ; BSR set to: 1
 37668                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 37669  005108  0E00               	movlw	0
 37670  00510A  0101               	movlb	1	; () banked
 37671  00510C  6FA3               	movwf	(_RadioConfiguration+47)& (0+255),b
 37672  00510E  0E00               	movlw	0
 37673  005110  0101               	movlb	1	; () banked
 37674  005112  6FA4               	movwf	(_RadioConfiguration+48)& (0+255),b
 37675                           
 37676                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 37677  005114  0101               	movlb	1	; () banked
 37678  005116  51A2               	movf	(_RadioConfiguration+46)& (0+255),w,b
 37679  005118  A4D8               	btfss	status,2,c
 37680  00511A  D02A               	goto	l16097
 37681                           
 37682                           ; BSR set to: 1
 37683                           ;radio_driver_SX1276.c: 457: {
 37684                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 37685  00511C  EC56  F043         	call	_SwTimerCreate	;wreg free
 37686  005120  0101               	movlb	1	; () banked
 37687  005122  6F9B               	movwf	(_RadioConfiguration+39)& (0+255),b
 37688                           
 37689                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 37690  005124  EC56  F043         	call	_SwTimerCreate	;wreg free
 37691  005128  0101               	movlb	1	; () banked
 37692  00512A  6F9C               	movwf	(_RadioConfiguration+40)& (0+255),b
 37693                           
 37694                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 37695  00512C  EC56  F043         	call	_SwTimerCreate	;wreg free
 37696  005130  0101               	movlb	1	; () banked
 37697  005132  6F9D               	movwf	(_RadioConfiguration+41)& (0+255),b
 37698                           
 37699                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 37700  005134  0E70               	movlw	low _RADIO_RxFSKTimeout
 37701  005136  0100               	movlb	0	; () banked
 37702  005138  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 37703  00513A  0E99               	movlw	high _RADIO_RxFSKTimeout
 37704  00513C  0100               	movlb	0	; () banked
 37705  00513E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37706  005140  0E00               	movlw	0
 37707  005142  0100               	movlb	0	; () banked
 37708  005144  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37709  005146  0101               	movlb	1	; () banked
 37710  005148  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37711  00514A  ECB0  F04B         	call	_SwTimerSetCallback
 37712                           
 37713                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 37714  00514E  0E5E               	movlw	low _RADIO_WatchdogTimeout
 37715  005150  0100               	movlb	0	; () banked
 37716  005152  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 37717  005154  0E95               	movlw	high _RADIO_WatchdogTimeout
 37718  005156  0100               	movlb	0	; () banked
 37719  005158  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37720  00515A  0E00               	movlw	0
 37721  00515C  0100               	movlb	0	; () banked
 37722  00515E  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37723  005160  0101               	movlb	1	; () banked
 37724  005162  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37725  005164  ECB0  F04B         	call	_SwTimerSetCallback
 37726                           
 37727                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 37728  005168  0E01               	movlw	1
 37729  00516A  0101               	movlb	1	; () banked
 37730  00516C  6FA2               	movwf	(_RadioConfiguration+46)& (0+255),b
 37731                           
 37732                           ;radio_driver_SX1276.c: 466: }
 37733  00516E  D00C               	goto	l16099
 37734  005170                     l16097:
 37735                           
 37736                           ; BSR set to: 1
 37737                           ;radio_driver_SX1276.c: 467: else
 37738                           ;radio_driver_SX1276.c: 468: {
 37739                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 37740  005170  0101               	movlb	1	; () banked
 37741  005172  519B               	movf	(_RadioConfiguration+39)& (0+255),w,b
 37742  005174  EC39  F04F         	call	_SwTimerStop
 37743                           
 37744                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 37745  005178  0101               	movlb	1	; () banked
 37746  00517A  519C               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37747  00517C  EC39  F04F         	call	_SwTimerStop
 37748                           
 37749                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 37750  005180  0101               	movlb	1	; () banked
 37751  005182  519D               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37752  005184  EC39  F04F         	call	_SwTimerStop
 37753  005188                     l16099:
 37754                           
 37755                           ;radio_driver_SX1276.c: 472: }
 37756                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 37757  005188  ECD3  F04B         	call	_RADIO_Reset	;wreg free
 37758                           
 37759                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 37760  00518C  0E00               	movlw	0
 37761  00518E  0100               	movlb	0	; () banked
 37762  005190  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37763  005192  0E01               	movlw	1
 37764  005194  0100               	movlb	0	; () banked
 37765  005196  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37766  005198  0E01               	movlw	1
 37767  00519A  EC70  F035         	call	_RADIO_WriteMode
 37768                           
 37769                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 37770  00519E  C174  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 37771  0051A2  C175  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 37772  0051A6  C176  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 37773  0051AA  C177  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 37774  0051AE  ECD1  F039         	call	_RADIO_WriteFrequency	;wreg free
 37775                           
 37776                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 37777  0051B2  0E42               	movlw	66
 37778  0051B4  0100               	movlb	0	; () banked
 37779  0051B6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37780  0051B8  0E3B               	movlw	59
 37781  0051BA  ECFE  F04F         	call	_RADIO_RegisterWrite
 37782  0051BE                     l16107:
 37783  0051BE  0E3B               	movlw	59
 37784  0051C0  EC25  F04F         	call	_RADIO_RegisterRead
 37785  0051C4  0100               	movlb	0	; () banked
 37786  0051C6  6F83               	movwf	??_RADIO_Init& (0+255),b
 37787  0051C8  0100               	movlb	0	; () banked
 37788  0051CA  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 37789  0051CC  D7F8               	goto	l16107
 37790                           
 37791                           ; BSR set to: 0
 37792                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 37793                           
 37794                           ; BSR set to: 0
 37795  0051CE  0E23               	movlw	35
 37796  0051D0  0100               	movlb	0	; () banked
 37797  0051D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37798  0051D4  0E0C               	movlw	12
 37799  0051D6  ECFE  F04F         	call	_RADIO_RegisterWrite
 37800                           
 37801                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 37802  0051DA  0E1E               	movlw	30
 37803  0051DC  0100               	movlb	0	; () banked
 37804  0051DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37805  0051E0  0E0D               	movlw	13
 37806  0051E2  ECFE  F04F         	call	_RADIO_RegisterWrite
 37807                           
 37808                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 37809  0051E6  0EAA               	movlw	170
 37810  0051E8  0100               	movlb	0	; () banked
 37811  0051EA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37812  0051EC  0E1F               	movlw	31
 37813  0051EE  ECFE  F04F         	call	_RADIO_RegisterWrite
 37814                           
 37815                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 37816  0051F2  0E8F               	movlw	143
 37817  0051F4  0100               	movlb	0	; () banked
 37818  0051F6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37819  0051F8  0E35               	movlw	53
 37820  0051FA  ECFE  F04F         	call	_RADIO_RegisterWrite
 37821                           
 37822                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 37823  0051FE  0EFF               	movlw	255
 37824  005200  0100               	movlb	0	; () banked
 37825  005202  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37826  005204  0E32               	movlw	50
 37827  005206  ECFE  F04F         	call	_RADIO_RegisterWrite
 37828                           
 37829                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 37830  00520A  0E40               	movlw	64
 37831  00520C  0100               	movlb	0	; () banked
 37832  00520E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37833  005210  0E31               	movlw	49
 37834  005212  ECFE  F04F         	call	_RADIO_RegisterWrite
 37835                           
 37836                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 37837  005216  0E01               	movlw	1
 37838  005218  0100               	movlb	0	; () banked
 37839  00521A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37840  00521C  0E01               	movlw	1
 37841  00521E  0100               	movlb	0	; () banked
 37842  005220  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37843  005222  0E00               	movlw	0
 37844  005224  EC70  F035         	call	_RADIO_WriteMode
 37845                           
 37846                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 37847  005228  0EFF               	movlw	255
 37848  00522A  0100               	movlb	0	; () banked
 37849  00522C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37850  00522E  0E23               	movlw	35
 37851  005230  ECFE  F04F         	call	_RADIO_RegisterWrite
 37852                           
 37853                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 37854  005234  0E42               	movlw	66
 37855  005236  EC25  F04F         	call	_RADIO_RegisterRead
 37856  00523A  0101               	movlb	1	; () banked
 37857  00523C  6FA5               	movwf	(_RadioConfiguration+49)& (0+255),b
 37858                           
 37859                           ; BSR set to: 1
 37860  00523E  0012               	return		;funcret
 37861  005240                     __end_of_RADIO_Init:
 37862                           	opt stack 0
 37863                           tosu	equ	0xFFF
 37864                           tosh	equ	0xFFE
 37865                           tosl	equ	0xFFD
 37866                           pclath	equ	0xFFA
 37867                           tblptru	equ	0xFF8
 37868                           tblptrh	equ	0xFF7
 37869                           tblptrl	equ	0xFF6
 37870                           tablat	equ	0xFF5
 37871                           prodh	equ	0xFF4
 37872                           prodl	equ	0xFF3
 37873                           intcon	equ	0xFF2
 37874                           intcon2	equ	0xFF1
 37875                           intcon3	equ	0xFF0
 37876                           indf0	equ	0xFEF
 37877                           postinc0	equ	0xFEE
 37878                           plusw0	equ	0xFEB
 37879                           fsr0h	equ	0xFEA
 37880                           fsr0l	equ	0xFE9
 37881                           wreg	equ	0xFE8
 37882                           postinc1	equ	0xFE6
 37883                           postdec1	equ	0xFE5
 37884                           plusw1	equ	0xFE3
 37885                           fsr1h	equ	0xFE2
 37886                           fsr1l	equ	0xFE1
 37887                           indf2	equ	0xFDF
 37888                           postinc2	equ	0xFDE
 37889                           postdec2	equ	0xFDD
 37890                           plusw2	equ	0xFDB
 37891                           fsr2h	equ	0xFDA
 37892                           fsr2l	equ	0xFD9
 37893                           status	equ	0xFD8
 37894                           
 37895 ;; *************** function _SwTimerSetCallback *****************
 37896 ;; Defined at:
 37897 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37898 ;; Parameters:    Size  Location     Type
 37899 ;;  timerId         1    wreg     unsigned char 
 37900 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 37901 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 37902 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 37903 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 37904 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 37905 ;; Auto vars:     Size  Location     Type
 37906 ;;  timerId         1    7[BANK0 ] unsigned char 
 37907 ;; Return value:  Size  Location     Type
 37908 ;;                  1    wreg      void 
 37909 ;; Registers used:
 37910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37911 ;; Tracked objects:
 37912 ;;		On entry : 0/0
 37913 ;;		On exit  : 0/0
 37914 ;;		Unchanged: 0/0
 37915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37916 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37917 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37918 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37919 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37920 ;;Total ram usage:        4 bytes
 37921 ;; Hardware stack levels used:    1
 37922 ;; Hardware stack levels required when called:    7
 37923 ;; This function calls:
 37924 ;;		Nothing
 37925 ;; This function is called by:
 37926 ;;		_RADIO_Init
 37927 ;;		_SetCallbackSoftwareTimers
 37928 ;; This function uses a non-reentrant model
 37929 ;;
 37930                           
 37931                           	psect	text167
 37932  009760                     __ptext167:
 37933                           	opt stack 0
 37934  009760                     _SwTimerSetCallback:
 37935                           	opt stack 21
 37936                           
 37937                           ; BSR set to: 1
 37938                           ;incstack = 0
 37939                           ;SwTimerSetCallback@timerId stored from wreg
 37940  009760  0100               	movlb	0	; () banked
 37941  009762  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 37942                           
 37943                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 37944  009764  0100               	movlb	0	; () banked
 37945  009766  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 37946  009768  0D08               	mullw	8
 37947  00976A  0E06               	movlw	6
 37948  00976C  26F3               	addwf	prodl,f,c
 37949  00976E  0E00               	movlw	0
 37950  009770  22F4               	addwfc	prodh,f,c
 37951  009772  0E00               	movlw	low _swTimers
 37952  009774  24F3               	addwf	prodl,w,c
 37953  009776  6ED9               	movwf	fsr2l,c
 37954  009778  0E03               	movlw	high _swTimers
 37955  00977A  20F4               	addwfc	prodh,w,c
 37956  00977C  6EDA               	movwf	fsr2h,c
 37957  00977E  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 37958  009782  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 37959                           
 37960                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 37961  009786  0100               	movlb	0	; () banked
 37962  009788  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 37963  00978A  0D08               	mullw	8
 37964  00978C  0E05               	movlw	5
 37965  00978E  26F3               	addwf	prodl,f,c
 37966  009790  0E00               	movlw	0
 37967  009792  22F4               	addwfc	prodh,f,c
 37968  009794  0E00               	movlw	low _swTimers
 37969  009796  24F3               	addwf	prodl,w,c
 37970  009798  6ED9               	movwf	fsr2l,c
 37971  00979A  0E03               	movlw	high _swTimers
 37972  00979C  20F4               	addwfc	prodh,w,c
 37973  00979E  6EDA               	movwf	fsr2h,c
 37974  0097A0  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 37975                           
 37976                           ; BSR set to: 0
 37977  0097A4  0012               	return		;funcret
 37978  0097A6                     __end_of_SwTimerSetCallback:
 37979                           	opt stack 0
 37980                           tosu	equ	0xFFF
 37981                           tosh	equ	0xFFE
 37982                           tosl	equ	0xFFD
 37983                           pclath	equ	0xFFA
 37984                           tblptru	equ	0xFF8
 37985                           tblptrh	equ	0xFF7
 37986                           tblptrl	equ	0xFF6
 37987                           tablat	equ	0xFF5
 37988                           prodh	equ	0xFF4
 37989                           prodl	equ	0xFF3
 37990                           intcon	equ	0xFF2
 37991                           intcon2	equ	0xFF1
 37992                           intcon3	equ	0xFF0
 37993                           indf0	equ	0xFEF
 37994                           postinc0	equ	0xFEE
 37995                           plusw0	equ	0xFEB
 37996                           fsr0h	equ	0xFEA
 37997                           fsr0l	equ	0xFE9
 37998                           wreg	equ	0xFE8
 37999                           postinc1	equ	0xFE6
 38000                           postdec1	equ	0xFE5
 38001                           plusw1	equ	0xFE3
 38002                           fsr1h	equ	0xFE2
 38003                           fsr1l	equ	0xFE1
 38004                           indf2	equ	0xFDF
 38005                           postinc2	equ	0xFDE
 38006                           postdec2	equ	0xFDD
 38007                           plusw2	equ	0xFDB
 38008                           fsr2h	equ	0xFDA
 38009                           fsr2l	equ	0xFD9
 38010                           status	equ	0xFD8
 38011                           
 38012 ;; *************** function _RADIO_WriteMode *****************
 38013 ;; Defined at:
 38014 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38015 ;; Parameters:    Size  Location     Type
 38016 ;;  newMode         1    wreg     enum E8492
 38017 ;;  newModulatio    1    9[BANK0 ] enum E7751
 38018 ;;  blocking        1   10[BANK0 ] unsigned char 
 38019 ;; Auto vars:     Size  Location     Type
 38020 ;;  newMode         1   14[BANK0 ] enum E8492
 38021 ;;  opMode          1   15[BANK0 ] unsigned char 
 38022 ;;  currentMode     1   13[BANK0 ] enum E8492
 38023 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 38024 ;;  currentModul    1   11[BANK0 ] enum E7751
 38025 ;; Return value:  Size  Location     Type
 38026 ;;                  1    wreg      void 
 38027 ;; Registers used:
 38028 ;;		wreg, status,2, status,0, cstack
 38029 ;; Tracked objects:
 38030 ;;		On entry : 0/0
 38031 ;;		On exit  : 0/0
 38032 ;;		Unchanged: 0/0
 38033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38034 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38035 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38037 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38038 ;;Total ram usage:        7 bytes
 38039 ;; Hardware stack levels used:    1
 38040 ;; Hardware stack levels required when called:   10
 38041 ;; This function calls:
 38042 ;;		_HALDIO5PinValue
 38043 ;;		_RADIO_RegisterRead
 38044 ;;		_RADIO_RegisterWrite
 38045 ;;		_SystemBlockingWaitMs
 38046 ;; This function is called by:
 38047 ;;		_RADIO_Init
 38048 ;;		_RADIO_WriteConfiguration
 38049 ;;		_RADIO_Transmit
 38050 ;;		_RADIO_ReceiveStart
 38051 ;;		_RADIO_ReceiveStop
 38052 ;;		_RADIO_RxDone
 38053 ;;		_RADIO_FSKPayloadReady
 38054 ;;		_RADIO_RxTimeout
 38055 ;;		_RADIO_TxDone
 38056 ;;		_RADIO_FSKPacketSent
 38057 ;;		_RADIO_ReadRandom
 38058 ;;		_RADIO_RxFSKTimeout
 38059 ;;		_RADIO_WatchdogTimeout
 38060 ;;		_RADIO_StopCW
 38061 ;; This function uses a non-reentrant model
 38062 ;;
 38063                           
 38064                           	psect	text168
 38065  006AE0                     __ptext168:
 38066                           	opt stack 0
 38067  006AE0                     _RADIO_WriteMode:
 38068                           	opt stack 17
 38069                           
 38070                           ; BSR set to: 0
 38071                           ;incstack = 0
 38072                           ;RADIO_WriteMode@newMode stored from wreg
 38073  006AE0  0100               	movlb	0	; () banked
 38074  006AE2  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 38075                           
 38076                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 38077                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 38078                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 38079                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 38080                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 38081                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 38082  006AE4  0100               	movlb	0	; () banked
 38083  006AE6  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38084  006AE8  0100               	movlb	0	; () banked
 38085  006AEA  A4D8               	btfss	status,2,c
 38086  006AEC  D00A               	goto	l13377
 38087                           
 38088                           ; BSR set to: 0
 38089  006AEE  0E06               	movlw	6
 38090  006AF0  0100               	movlb	0	; () banked
 38091  006AF2  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38092  006AF4  B4D8               	btfsc	status,2,c
 38093  006AF6  0012               	return	
 38094                           
 38095                           ; BSR set to: 0
 38096  006AF8  0E07               	movlw	7
 38097  006AFA  0100               	movlb	0	; () banked
 38098  006AFC  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38099  006AFE  B4D8               	btfsc	status,2,c
 38100  006B00  0012               	return	
 38101  006B02                     l13377:
 38102                           
 38103                           ; BSR set to: 0
 38104                           ;radio_driver_SX1276.c: 159: }
 38105                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 38106  006B02  0E07               	movlw	7
 38107  006B04  0100               	movlb	0	; () banked
 38108  006B06  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 38109                           
 38110                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 38111  006B08  0E01               	movlw	1
 38112  006B0A  0100               	movlb	0	; () banked
 38113  006B0C  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 38114                           
 38115                           ; BSR set to: 0
 38116                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 38117  006B0E  0E01               	movlw	1
 38118  006B10  EC25  F04F         	call	_RADIO_RegisterRead
 38119  006B14  0100               	movlb	0	; () banked
 38120  006B16  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 38121                           
 38122                           ; BSR set to: 0
 38123                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 38124  006B18  0100               	movlb	0	; () banked
 38125  006B1A  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 38126  006B1C  D002               	goto	l13385
 38127                           
 38128                           ; BSR set to: 0
 38129                           ;radio_driver_SX1276.c: 168: {
 38130                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 38131  006B1E  0E01               	movlw	1
 38132  006B20  D001               	goto	L24
 38133  006B22                     l13385:
 38134                           
 38135                           ; BSR set to: 0
 38136                           ;radio_driver_SX1276.c: 171: else
 38137                           ;radio_driver_SX1276.c: 172: {
 38138                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 38139  006B22  0E00               	movlw	0
 38140  006B24                     L24:
 38141  006B24  0100               	movlb	0	; () banked
 38142  006B26  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 38143                           
 38144                           ; BSR set to: 0
 38145                           ;radio_driver_SX1276.c: 174: }
 38146                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 38147                           
 38148                           ; BSR set to: 0
 38149  006B28  0100               	movlb	0	; () banked
 38150  006B2A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38151  006B2C  0B07               	andlw	7
 38152  006B2E  0100               	movlb	0	; () banked
 38153  006B30  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 38154                           
 38155                           ; BSR set to: 0
 38156                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 38157  006B32  0100               	movlb	0	; () banked
 38158  006B34  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 38159  006B36  0100               	movlb	0	; () banked
 38160  006B38  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 38161  006B3A  B4D8               	btfsc	status,2,c
 38162  006B3C  D024               	goto	l13405
 38163                           
 38164                           ; BSR set to: 0
 38165                           ;radio_driver_SX1276.c: 181: {
 38166                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 38167  006B3E  0100               	movlb	0	; () banked
 38168  006B40  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 38169  006B42  0100               	movlb	0	; () banked
 38170  006B44  B4D8               	btfsc	status,2,c
 38171  006B46  D00B               	goto	l13397
 38172                           
 38173                           ; BSR set to: 0
 38174                           ;radio_driver_SX1276.c: 184: {
 38175                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 38176  006B48  0100               	movlb	0	; () banked
 38177  006B4A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38178  006B4C  0BF8               	andlw	248
 38179  006B4E  0100               	movlb	0	; () banked
 38180  006B50  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 38181  006B52  0E01               	movlw	1
 38182  006B54  ECFE  F04F         	call	_RADIO_RegisterWrite
 38183                           
 38184                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 38185  006B58  0E00               	movlw	0
 38186  006B5A  0100               	movlb	0	; () banked
 38187  006B5C  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 38188  006B5E                     l13397:
 38189                           
 38190                           ; BSR set to: 0
 38191                           ;radio_driver_SX1276.c: 188: }
 38192                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 38193  006B5E  0100               	movlb	0	; () banked
 38194  006B60  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38195  006B62  0100               	movlb	0	; () banked
 38196  006B64  A4D8               	btfss	status,2,c
 38197  006B66  D004               	goto	l13401
 38198                           
 38199                           ; BSR set to: 0
 38200                           ;radio_driver_SX1276.c: 191: {
 38201                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 38202  006B68  0100               	movlb	0	; () banked
 38203  006B6A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38204  006B6C  0B78               	andlw	120
 38205  006B6E  D004               	goto	L25
 38206  006B70                     l13401:
 38207                           
 38208                           ; BSR set to: 0
 38209                           ;radio_driver_SX1276.c: 195: else
 38210                           ;radio_driver_SX1276.c: 196: {
 38211                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 38212  006B70  0100               	movlb	0	; () banked
 38213  006B72  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38214  006B74  0B78               	andlw	120
 38215  006B76  0980               	iorlw	128
 38216  006B78                     L25:
 38217  006B78  0100               	movlb	0	; () banked
 38218  006B7A  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 38219                           
 38220                           ; BSR set to: 0
 38221                           ;radio_driver_SX1276.c: 199: }
 38222                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 38223                           
 38224                           ; BSR set to: 0
 38225  006B7C  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 38226  006B80  0E01               	movlw	1
 38227  006B82  ECFE  F04F         	call	_RADIO_RegisterWrite
 38228  006B86                     l13405:
 38229                           
 38230                           ;radio_driver_SX1276.c: 201: }
 38231                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 38232  006B86  0100               	movlb	0	; () banked
 38233  006B88  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 38234  006B8A  0100               	movlb	0	; () banked
 38235  006B8C  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38236  006B8E  B4D8               	btfsc	status,2,c
 38237  006B90  0012               	return	
 38238                           
 38239                           ; BSR set to: 0
 38240                           ;radio_driver_SX1276.c: 208: {
 38241                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 38242  006B92  0100               	movlb	0	; () banked
 38243  006B94  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38244  006B96  0100               	movlb	0	; () banked
 38245  006B98  B4D8               	btfsc	status,2,c
 38246  006B9A  D01A               	goto	l13421
 38247                           
 38248                           ; BSR set to: 0
 38249  006B9C  0100               	movlb	0	; () banked
 38250  006B9E  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 38251  006BA0  A4D8               	btfss	status,2,c
 38252  006BA2  D016               	goto	l13421
 38253                           
 38254                           ; BSR set to: 0
 38255                           ;radio_driver_SX1276.c: 212: {
 38256                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 38257  006BA4  0E41               	movlw	65
 38258  006BA6  EC25  F04F         	call	_RADIO_RegisterRead
 38259  006BAA  0100               	movlb	0	; () banked
 38260  006BAC  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 38261                           
 38262                           ; BSR set to: 0
 38263                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 38264  006BAE  0100               	movlb	0	; () banked
 38265  006BB0  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38266  006BB2  0100               	movlb	0	; () banked
 38267  006BB4  A4D8               	btfss	status,2,c
 38268  006BB6  D004               	goto	l13417
 38269                           
 38270                           ; BSR set to: 0
 38271                           ;radio_driver_SX1276.c: 215: {
 38272                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 38273  006BB8  0E30               	movlw	48
 38274  006BBA  0100               	movlb	0	; () banked
 38275  006BBC  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 38276                           
 38277                           ;radio_driver_SX1276.c: 218: }
 38278  006BBE  D003               	goto	l13419
 38279  006BC0                     l13417:
 38280                           
 38281                           ; BSR set to: 0
 38282                           ;radio_driver_SX1276.c: 219: else
 38283                           ;radio_driver_SX1276.c: 220: {
 38284                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 38285  006BC0  0ECF               	movlw	207
 38286  006BC2  0100               	movlb	0	; () banked
 38287  006BC4  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 38288  006BC6                     l13419:
 38289                           
 38290                           ; BSR set to: 0
 38291                           ;radio_driver_SX1276.c: 223: }
 38292                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 38293  006BC6  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 38294  006BCA  0E41               	movlw	65
 38295  006BCC  ECFE  F04F         	call	_RADIO_RegisterWrite
 38296  006BD0                     l13421:
 38297                           
 38298                           ;radio_driver_SX1276.c: 225: }
 38299                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 38300  006BD0  0EF8               	movlw	248
 38301  006BD2  0100               	movlb	0	; () banked
 38302  006BD4  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 38303                           
 38304                           ; BSR set to: 0
 38305                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 38306  006BD6  0100               	movlb	0	; () banked
 38307  006BD8  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38308  006BDA  0100               	movlb	0	; () banked
 38309  006BDC  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 38310                           
 38311                           ; BSR set to: 0
 38312                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 38313  006BDE  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 38314  006BE2  0E01               	movlw	1
 38315  006BE4  ECFE  F04F         	call	_RADIO_RegisterWrite
 38316                           
 38317                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 38318  006BE8  0100               	movlb	0	; () banked
 38319  006BEA  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 38320  006BEC  A4D8               	btfss	status,2,c
 38321  006BEE  0012               	return	
 38322                           
 38323                           ; BSR set to: 0
 38324                           ;radio_driver_SX1276.c: 234: {
 38325                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 38326  006BF0  0100               	movlb	0	; () banked
 38327  006BF2  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38328  006BF4  0100               	movlb	0	; () banked
 38329  006BF6  B4D8               	btfsc	status,2,c
 38330  006BF8  D006               	goto	l13433
 38331  006BFA                     l13431:
 38332  006BFA  EC6E  F051         	call	_HALDIO5PinValue	;wreg free
 38333  006BFE  0900               	iorlw	0
 38334  006C00  A4D8               	btfss	status,2,c
 38335  006C02  0012               	return	
 38336  006C04  D7FA               	goto	l13431
 38337  006C06                     l13433:
 38338                           
 38339                           ;radio_driver_SX1276.c: 240: else
 38340                           ;radio_driver_SX1276.c: 241: {
 38341                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 38342  006C06  0E01               	movlw	1
 38343  006C08  0100               	movlb	0	; () banked
 38344  006C0A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 38345  006C0C  0E00               	movlw	0
 38346  006C0E  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 38347  006C10  0E00               	movlw	0
 38348  006C12  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 38349  006C14  0E00               	movlw	0
 38350  006C16  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 38351  006C18  EC7F  F04D         	call	_SystemBlockingWaitMs	;wreg free
 38352  006C1C  0012               	return	
 38353  006C1E                     __end_of_RADIO_WriteMode:
 38354                           	opt stack 0
 38355                           tosu	equ	0xFFF
 38356                           tosh	equ	0xFFE
 38357                           tosl	equ	0xFFD
 38358                           pclath	equ	0xFFA
 38359                           tblptru	equ	0xFF8
 38360                           tblptrh	equ	0xFF7
 38361                           tblptrl	equ	0xFF6
 38362                           tablat	equ	0xFF5
 38363                           prodh	equ	0xFF4
 38364                           prodl	equ	0xFF3
 38365                           intcon	equ	0xFF2
 38366                           intcon2	equ	0xFF1
 38367                           intcon3	equ	0xFF0
 38368                           indf0	equ	0xFEF
 38369                           postinc0	equ	0xFEE
 38370                           plusw0	equ	0xFEB
 38371                           fsr0h	equ	0xFEA
 38372                           fsr0l	equ	0xFE9
 38373                           wreg	equ	0xFE8
 38374                           postinc1	equ	0xFE6
 38375                           postdec1	equ	0xFE5
 38376                           plusw1	equ	0xFE3
 38377                           fsr1h	equ	0xFE2
 38378                           fsr1l	equ	0xFE1
 38379                           indf2	equ	0xFDF
 38380                           postinc2	equ	0xFDE
 38381                           postdec2	equ	0xFDD
 38382                           plusw2	equ	0xFDB
 38383                           fsr2h	equ	0xFDA
 38384                           fsr2l	equ	0xFD9
 38385                           status	equ	0xFD8
 38386                           
 38387 ;; *************** function _RADIO_RegisterRead *****************
 38388 ;; Defined at:
 38389 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38390 ;; Parameters:    Size  Location     Type
 38391 ;;  reg             1    wreg     unsigned char 
 38392 ;; Auto vars:     Size  Location     Type
 38393 ;;  reg             1    6[BANK0 ] unsigned char 
 38394 ;;  readValue       1    7[BANK0 ] unsigned char 
 38395 ;; Return value:  Size  Location     Type
 38396 ;;                  1    wreg      unsigned char 
 38397 ;; Registers used:
 38398 ;;		wreg, status,2, status,0, cstack
 38399 ;; Tracked objects:
 38400 ;;		On entry : 0/0
 38401 ;;		On exit  : 0/0
 38402 ;;		Unchanged: 0/0
 38403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38404 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38405 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38406 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38407 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38408 ;;Total ram usage:        2 bytes
 38409 ;; Hardware stack levels used:    1
 38410 ;; Hardware stack levels required when called:    9
 38411 ;; This function calls:
 38412 ;;		_HALSPICSAssert
 38413 ;;		_HALSPICSDeassert
 38414 ;;		_HALSPISend
 38415 ;; This function is called by:
 38416 ;;		_RADIO_WriteMode
 38417 ;;		_RADIO_WritePower
 38418 ;;		_RADIO_Init
 38419 ;;		_RADIO_WriteConfiguration
 38420 ;;		_RADIO_Transmit
 38421 ;;		_RADIO_RxDone
 38422 ;;		_RADIO_FSKPayloadReady
 38423 ;;		_RADIO_FSKPacketSent
 38424 ;;		_RADIO_FHSSChangeChannel
 38425 ;;		_RADIO_DIO0
 38426 ;;		_RADIO_DIO1
 38427 ;;		_RADIO_DIO2
 38428 ;;		_RADIO_DIO3
 38429 ;;		_RADIO_DIO4
 38430 ;;		_RADIO_DIO5
 38431 ;;		_RADIO_ReadRandom
 38432 ;;		_RADIO_RxFSKTimeout
 38433 ;; This function uses a non-reentrant model
 38434 ;;
 38435                           
 38436                           	psect	text169
 38437  009E4A                     __ptext169:
 38438                           	opt stack 0
 38439  009E4A                     _RADIO_RegisterRead:
 38440                           	opt stack 17
 38441                           
 38442                           ;incstack = 0
 38443                           ;RADIO_RegisterRead@reg stored from wreg
 38444  009E4A  0100               	movlb	0	; () banked
 38445  009E4C  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 38446                           
 38447                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 38448                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 38449  009E4E  0100               	movlb	0	; () banked
 38450  009E50  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 38451                           
 38452                           ; BSR set to: 0
 38453                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 38454  009E52  ECF1  F051         	call	_HALSPICSAssert	;wreg free
 38455                           
 38456                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 38457  009E56  0100               	movlb	0	; () banked
 38458  009E58  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 38459  009E5A  EC60  F051         	call	_HALSPISend
 38460                           
 38461                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 38462  009E5E  0EFF               	movlw	255
 38463  009E60  EC60  F051         	call	_HALSPISend
 38464  009E64  0100               	movlb	0	; () banked
 38465  009E66  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 38466                           
 38467                           ; BSR set to: 0
 38468                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 38469  009E68  ECEF  F051         	call	_HALSPICSDeassert	;wreg free
 38470                           
 38471                           ;radio_driver_SX1276.c: 142: return readValue;
 38472  009E6C  0100               	movlb	0	; () banked
 38473  009E6E  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 38474  009E70  0012               	return	
 38475  009E72                     __end_of_RADIO_RegisterRead:
 38476                           	opt stack 0
 38477                           tosu	equ	0xFFF
 38478                           tosh	equ	0xFFE
 38479                           tosl	equ	0xFFD
 38480                           pclath	equ	0xFFA
 38481                           tblptru	equ	0xFF8
 38482                           tblptrh	equ	0xFF7
 38483                           tblptrl	equ	0xFF6
 38484                           tablat	equ	0xFF5
 38485                           prodh	equ	0xFF4
 38486                           prodl	equ	0xFF3
 38487                           intcon	equ	0xFF2
 38488                           intcon2	equ	0xFF1
 38489                           intcon3	equ	0xFF0
 38490                           indf0	equ	0xFEF
 38491                           postinc0	equ	0xFEE
 38492                           plusw0	equ	0xFEB
 38493                           fsr0h	equ	0xFEA
 38494                           fsr0l	equ	0xFE9
 38495                           wreg	equ	0xFE8
 38496                           postinc1	equ	0xFE6
 38497                           postdec1	equ	0xFE5
 38498                           plusw1	equ	0xFE3
 38499                           fsr1h	equ	0xFE2
 38500                           fsr1l	equ	0xFE1
 38501                           indf2	equ	0xFDF
 38502                           postinc2	equ	0xFDE
 38503                           postdec2	equ	0xFDD
 38504                           plusw2	equ	0xFDB
 38505                           fsr2h	equ	0xFDA
 38506                           fsr2l	equ	0xFD9
 38507                           status	equ	0xFD8
 38508                           
 38509 ;; *************** function _HALDIO5PinValue *****************
 38510 ;; Defined at:
 38511 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38512 ;; Parameters:    Size  Location     Type
 38513 ;;		None
 38514 ;; Auto vars:     Size  Location     Type
 38515 ;;		None
 38516 ;; Return value:  Size  Location     Type
 38517 ;;                  1    wreg      unsigned char 
 38518 ;; Registers used:
 38519 ;;		wreg
 38520 ;; Tracked objects:
 38521 ;;		On entry : 0/0
 38522 ;;		On exit  : 0/0
 38523 ;;		Unchanged: 0/0
 38524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38525 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38526 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38528 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38529 ;;Total ram usage:        0 bytes
 38530 ;; Hardware stack levels used:    1
 38531 ;; Hardware stack levels required when called:    7
 38532 ;; This function calls:
 38533 ;;		Nothing
 38534 ;; This function is called by:
 38535 ;;		_RADIO_WriteMode
 38536 ;; This function uses a non-reentrant model
 38537 ;;
 38538                           
 38539                           	psect	text170
 38540  00A2DC                     __ptext170:
 38541                           	opt stack 0
 38542  00A2DC                     _HALDIO5PinValue:
 38543                           	opt stack 19
 38544                           
 38545                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 38546                           
 38547                           ; BSR set to: 0
 38548                           ;incstack = 0
 38549  00A2DC  A081               	btfss	3969,0,c	;volatile
 38550  00A2DE  D002               	goto	u14350
 38551  00A2E0  0E01               	movlw	1
 38552  00A2E2  0012               	return	
 38553  00A2E4                     u14350:
 38554  00A2E4  0E00               	movlw	0
 38555  00A2E6  0012               	return	
 38556  00A2E8                     __end_of_HALDIO5PinValue:
 38557                           	opt stack 0
 38558                           tosu	equ	0xFFF
 38559                           tosh	equ	0xFFE
 38560                           tosl	equ	0xFFD
 38561                           pclath	equ	0xFFA
 38562                           tblptru	equ	0xFF8
 38563                           tblptrh	equ	0xFF7
 38564                           tblptrl	equ	0xFF6
 38565                           tablat	equ	0xFF5
 38566                           prodh	equ	0xFF4
 38567                           prodl	equ	0xFF3
 38568                           intcon	equ	0xFF2
 38569                           intcon2	equ	0xFF1
 38570                           intcon3	equ	0xFF0
 38571                           indf0	equ	0xFEF
 38572                           postinc0	equ	0xFEE
 38573                           plusw0	equ	0xFEB
 38574                           fsr0h	equ	0xFEA
 38575                           fsr0l	equ	0xFE9
 38576                           wreg	equ	0xFE8
 38577                           postinc1	equ	0xFE6
 38578                           postdec1	equ	0xFE5
 38579                           plusw1	equ	0xFE3
 38580                           fsr1h	equ	0xFE2
 38581                           fsr1l	equ	0xFE1
 38582                           indf2	equ	0xFDF
 38583                           postinc2	equ	0xFDE
 38584                           postdec2	equ	0xFDD
 38585                           plusw2	equ	0xFDB
 38586                           fsr2h	equ	0xFDA
 38587                           fsr2l	equ	0xFD9
 38588                           status	equ	0xFD8
 38589                           
 38590 ;; *************** function _RADIO_WriteFrequency *****************
 38591 ;; Defined at:
 38592 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38593 ;; Parameters:    Size  Location     Type
 38594 ;;  frequency       4   17[BANK0 ] unsigned long 
 38595 ;; Auto vars:     Size  Location     Type
 38596 ;;  num             4   25[BANK0 ] unsigned long 
 38597 ;;  num_mod         4   21[BANK0 ] unsigned long 
 38598 ;; Return value:  Size  Location     Type
 38599 ;;                  1    wreg      void 
 38600 ;; Registers used:
 38601 ;;		wreg, status,2, status,0, cstack
 38602 ;; Tracked objects:
 38603 ;;		On entry : 0/0
 38604 ;;		On exit  : 0/0
 38605 ;;		Unchanged: 0/0
 38606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38607 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38608 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38610 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38611 ;;Total ram usage:       12 bytes
 38612 ;; Hardware stack levels used:    1
 38613 ;; Hardware stack levels required when called:   10
 38614 ;; This function calls:
 38615 ;;		_RADIO_RegisterWrite
 38616 ;;		___lldiv
 38617 ;;		___llmod
 38618 ;; This function is called by:
 38619 ;;		_RADIO_Init
 38620 ;;		_RADIO_WriteConfiguration
 38621 ;;		_RADIO_FHSSChangeChannel
 38622 ;; This function uses a non-reentrant model
 38623 ;;
 38624                           
 38625                           	psect	text171
 38626  0073A2                     __ptext171:
 38627                           	opt stack 0
 38628  0073A2                     _RADIO_WriteFrequency:
 38629                           	opt stack 16
 38630                           
 38631                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 38632                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 38633                           
 38634                           ;incstack = 0
 38635  0073A2  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 38636  0073A6  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 38637  0073AA  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 38638  0073AE  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 38639  0073B2  0E09               	movlw	9
 38640  0073B4  0100               	movlb	0	; () banked
 38641  0073B6  6F68               	movwf	___lldiv@divisor& (0+255),b
 38642  0073B8  0E3D               	movlw	61
 38643  0073BA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 38644  0073BC  0E00               	movlw	0
 38645  0073BE  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 38646  0073C0  0E00               	movlw	0
 38647  0073C2  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 38648  0073C4  EC08  F03F         	call	___lldiv	;wreg free
 38649  0073C8  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 38650  0073CC  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 38651  0073D0  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 38652  0073D4  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 38653                           
 38654                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 38655  0073D8  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 38656  0073DC  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 38657  0073E0  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 38658  0073E4  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 38659  0073E8  0E09               	movlw	9
 38660  0073EA  0100               	movlb	0	; () banked
 38661  0073EC  6F68               	movwf	___llmod@divisor& (0+255),b
 38662  0073EE  0E3D               	movlw	61
 38663  0073F0  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 38664  0073F2  0E00               	movlw	0
 38665  0073F4  6F6A               	movwf	(___llmod@divisor+2)& (0+255),b
 38666  0073F6  0E00               	movlw	0
 38667  0073F8  6F6B               	movwf	(___llmod@divisor+3)& (0+255),b
 38668  0073FA  EC09  F043         	call	___llmod	;wreg free
 38669  0073FE  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 38670  007402  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 38671  007406  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 38672  00740A  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 38673                           
 38674                           ;radio_driver_SX1276.c: 277: num <<= (8);
 38675  00740E  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 38676  007412  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 38677  007416  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 38678  00741A  0100               	movlb	0	; () banked
 38679  00741C  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 38680                           
 38681                           ; BSR set to: 0
 38682                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 38683  00741E  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 38684  007422  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 38685  007426  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 38686  00742A  0100               	movlb	0	; () banked
 38687  00742C  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 38688                           
 38689                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 38690  00742E  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 38691  007432  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 38692  007436  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 38693  00743A  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 38694  00743E  0E09               	movlw	9
 38695  007440  0100               	movlb	0	; () banked
 38696  007442  6F68               	movwf	___lldiv@divisor& (0+255),b
 38697  007444  0E3D               	movlw	61
 38698  007446  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 38699  007448  0E00               	movlw	0
 38700  00744A  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 38701  00744C  0E00               	movlw	0
 38702  00744E  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 38703  007450  EC08  F03F         	call	___lldiv	;wreg free
 38704  007454  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 38705  007458  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 38706  00745C  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 38707  007460  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 38708                           
 38709                           ;radio_driver_SX1276.c: 283: num += num_mod;
 38710  007464  0100               	movlb	0	; () banked
 38711  007466  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 38712  007468  0100               	movlb	0	; () banked
 38713  00746A  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 38714  00746C  0100               	movlb	0	; () banked
 38715  00746E  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 38716  007470  0100               	movlb	0	; () banked
 38717  007472  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 38718  007474  0100               	movlb	0	; () banked
 38719  007476  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 38720  007478  0100               	movlb	0	; () banked
 38721  00747A  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 38722  00747C  0100               	movlb	0	; () banked
 38723  00747E  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 38724  007480  0100               	movlb	0	; () banked
 38725  007482  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 38726                           
 38727                           ; BSR set to: 0
 38728                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 38729  007484  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 38730  007488  0E06               	movlw	6
 38731  00748A  ECFE  F04F         	call	_RADIO_RegisterWrite
 38732                           
 38733                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 38734  00748E  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 38735  007492  0E07               	movlw	7
 38736  007494  ECFE  F04F         	call	_RADIO_RegisterWrite
 38737                           
 38738                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 38739  007498  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 38740  00749C  0E08               	movlw	8
 38741  00749E  ECFE  F04F         	call	_RADIO_RegisterWrite
 38742  0074A2  0012               	return		;funcret
 38743  0074A4                     __end_of_RADIO_WriteFrequency:
 38744                           	opt stack 0
 38745                           tosu	equ	0xFFF
 38746                           tosh	equ	0xFFE
 38747                           tosl	equ	0xFFD
 38748                           pclath	equ	0xFFA
 38749                           tblptru	equ	0xFF8
 38750                           tblptrh	equ	0xFF7
 38751                           tblptrl	equ	0xFF6
 38752                           tablat	equ	0xFF5
 38753                           prodh	equ	0xFF4
 38754                           prodl	equ	0xFF3
 38755                           intcon	equ	0xFF2
 38756                           intcon2	equ	0xFF1
 38757                           intcon3	equ	0xFF0
 38758                           indf0	equ	0xFEF
 38759                           postinc0	equ	0xFEE
 38760                           plusw0	equ	0xFEB
 38761                           fsr0h	equ	0xFEA
 38762                           fsr0l	equ	0xFE9
 38763                           wreg	equ	0xFE8
 38764                           postinc1	equ	0xFE6
 38765                           postdec1	equ	0xFE5
 38766                           plusw1	equ	0xFE3
 38767                           fsr1h	equ	0xFE2
 38768                           fsr1l	equ	0xFE1
 38769                           indf2	equ	0xFDF
 38770                           postinc2	equ	0xFDE
 38771                           postdec2	equ	0xFDD
 38772                           plusw2	equ	0xFDB
 38773                           fsr2h	equ	0xFDA
 38774                           fsr2l	equ	0xFD9
 38775                           status	equ	0xFD8
 38776                           
 38777 ;; *************** function ___llmod *****************
 38778 ;; Defined at:
 38779 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 38780 ;; Parameters:    Size  Location     Type
 38781 ;;  dividend        4    4[BANK0 ] unsigned long 
 38782 ;;  divisor         4    8[BANK0 ] unsigned long 
 38783 ;; Auto vars:     Size  Location     Type
 38784 ;;  counter         1   12[BANK0 ] unsigned char 
 38785 ;; Return value:  Size  Location     Type
 38786 ;;                  4    4[BANK0 ] unsigned long 
 38787 ;; Registers used:
 38788 ;;		wreg, status,2, status,0
 38789 ;; Tracked objects:
 38790 ;;		On entry : 0/0
 38791 ;;		On exit  : 0/0
 38792 ;;		Unchanged: 0/0
 38793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38794 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38795 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38796 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38797 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38798 ;;Total ram usage:        9 bytes
 38799 ;; Hardware stack levels used:    1
 38800 ;; Hardware stack levels required when called:    7
 38801 ;; This function calls:
 38802 ;;		Nothing
 38803 ;; This function is called by:
 38804 ;;		_RADIO_WriteFrequency
 38805 ;; This function uses a non-reentrant model
 38806 ;;
 38807                           
 38808                           	psect	text172
 38809  008612                     __ptext172:
 38810                           	opt stack 0
 38811  008612                     ___llmod:
 38812                           	opt stack 18
 38813                           
 38814                           ;incstack = 0
 38815  008612  0100               	movlb	0	; () banked
 38816  008614  5168               	movf	___llmod@divisor& (0+255),w,b
 38817  008616  0100               	movlb	0	; () banked
 38818  008618  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 38819  00861A  0100               	movlb	0	; () banked
 38820  00861C  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 38821  00861E  0100               	movlb	0	; () banked
 38822  008620  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 38823  008622  B4D8               	btfsc	status,2,c
 38824  008624  D03A               	goto	l3049
 38825                           
 38826                           ; BSR set to: 0
 38827  008626  0E01               	movlw	1
 38828  008628  0100               	movlb	0	; () banked
 38829  00862A  6F6C               	movwf	___llmod@counter& (0+255),b
 38830  00862C  D008               	goto	l13331
 38831  00862E                     l13329:
 38832                           
 38833                           ; BSR set to: 0
 38834  00862E  0100               	movlb	0	; () banked
 38835  008630  90D8               	bcf	status,0,c
 38836  008632  3768               	rlcf	___llmod@divisor& (0+255),f,b
 38837  008634  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 38838  008636  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 38839  008638  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 38840  00863A  0100               	movlb	0	; () banked
 38841  00863C  2B6C               	incf	___llmod@counter& (0+255),f,b
 38842  00863E                     l13331:
 38843                           
 38844                           ; BSR set to: 0
 38845  00863E  0100               	movlb	0	; () banked
 38846  008640  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 38847  008642  D7F5               	goto	l13329
 38848  008644                     l13333:
 38849                           
 38850                           ; BSR set to: 0
 38851  008644  0100               	movlb	0	; () banked
 38852  008646  5168               	movf	___llmod@divisor& (0+255),w,b
 38853  008648  0100               	movlb	0	; () banked
 38854  00864A  5D64               	subwf	___llmod@dividend& (0+255),w,b
 38855  00864C  0100               	movlb	0	; () banked
 38856  00864E  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 38857  008650  0100               	movlb	0	; () banked
 38858  008652  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 38859  008654  0100               	movlb	0	; () banked
 38860  008656  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 38861  008658  0100               	movlb	0	; () banked
 38862  00865A  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 38863  00865C  0100               	movlb	0	; () banked
 38864  00865E  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 38865  008660  0100               	movlb	0	; () banked
 38866  008662  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 38867  008664  A0D8               	btfss	status,0,c
 38868  008666  D010               	goto	l13337
 38869                           
 38870                           ; BSR set to: 0
 38871  008668  0100               	movlb	0	; () banked
 38872  00866A  5168               	movf	___llmod@divisor& (0+255),w,b
 38873  00866C  0100               	movlb	0	; () banked
 38874  00866E  5F64               	subwf	___llmod@dividend& (0+255),f,b
 38875  008670  0100               	movlb	0	; () banked
 38876  008672  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 38877  008674  0100               	movlb	0	; () banked
 38878  008676  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 38879  008678  0100               	movlb	0	; () banked
 38880  00867A  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 38881  00867C  0100               	movlb	0	; () banked
 38882  00867E  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 38883  008680  0100               	movlb	0	; () banked
 38884  008682  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 38885  008684  0100               	movlb	0	; () banked
 38886  008686  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 38887  008688                     l13337:
 38888                           
 38889                           ; BSR set to: 0
 38890  008688  0100               	movlb	0	; () banked
 38891  00868A  90D8               	bcf	status,0,c
 38892  00868C  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 38893  00868E  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 38894  008690  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 38895  008692  3368               	rrcf	___llmod@divisor& (0+255),f,b
 38896                           
 38897                           ; BSR set to: 0
 38898  008694  0100               	movlb	0	; () banked
 38899  008696  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 38900  008698  D7D5               	goto	l13333
 38901  00869A                     l3049:
 38902                           
 38903                           ; BSR set to: 0
 38904  00869A  C064  F064         	movff	___llmod@dividend,?___llmod
 38905  00869E  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 38906  0086A2  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 38907  0086A6  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 38908                           
 38909                           ; BSR set to: 0
 38910  0086AA  0012               	return		;funcret
 38911  0086AC                     __end_of___llmod:
 38912                           	opt stack 0
 38913                           tosu	equ	0xFFF
 38914                           tosh	equ	0xFFE
 38915                           tosl	equ	0xFFD
 38916                           pclath	equ	0xFFA
 38917                           tblptru	equ	0xFF8
 38918                           tblptrh	equ	0xFF7
 38919                           tblptrl	equ	0xFF6
 38920                           tablat	equ	0xFF5
 38921                           prodh	equ	0xFF4
 38922                           prodl	equ	0xFF3
 38923                           intcon	equ	0xFF2
 38924                           intcon2	equ	0xFF1
 38925                           intcon3	equ	0xFF0
 38926                           indf0	equ	0xFEF
 38927                           postinc0	equ	0xFEE
 38928                           plusw0	equ	0xFEB
 38929                           fsr0h	equ	0xFEA
 38930                           fsr0l	equ	0xFE9
 38931                           wreg	equ	0xFE8
 38932                           postinc1	equ	0xFE6
 38933                           postdec1	equ	0xFE5
 38934                           plusw1	equ	0xFE3
 38935                           fsr1h	equ	0xFE2
 38936                           fsr1l	equ	0xFE1
 38937                           indf2	equ	0xFDF
 38938                           postinc2	equ	0xFDE
 38939                           postdec2	equ	0xFDD
 38940                           plusw2	equ	0xFDB
 38941                           fsr2h	equ	0xFDA
 38942                           fsr2l	equ	0xFD9
 38943                           status	equ	0xFD8
 38944                           
 38945 ;; *************** function _RADIO_RegisterWrite *****************
 38946 ;; Defined at:
 38947 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38948 ;; Parameters:    Size  Location     Type
 38949 ;;  reg             1    wreg     unsigned char 
 38950 ;;  value           1    6[BANK0 ] unsigned char 
 38951 ;; Auto vars:     Size  Location     Type
 38952 ;;  reg             1    7[BANK0 ] unsigned char 
 38953 ;; Return value:  Size  Location     Type
 38954 ;;                  1    wreg      void 
 38955 ;; Registers used:
 38956 ;;		wreg, status,2, status,0, cstack
 38957 ;; Tracked objects:
 38958 ;;		On entry : 0/0
 38959 ;;		On exit  : 0/0
 38960 ;;		Unchanged: 0/0
 38961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38962 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38965 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38966 ;;Total ram usage:        2 bytes
 38967 ;; Hardware stack levels used:    1
 38968 ;; Hardware stack levels required when called:    9
 38969 ;; This function calls:
 38970 ;;		_HALSPICSAssert
 38971 ;;		_HALSPICSDeassert
 38972 ;;		_HALSPISend
 38973 ;; This function is called by:
 38974 ;;		_RADIO_WriteMode
 38975 ;;		_RADIO_WriteFrequency
 38976 ;;		_RADIO_WriteFSKFrequencyDeviation
 38977 ;;		_RADIO_WriteFSKBitRate
 38978 ;;		_RADIO_WritePower
 38979 ;;		_RADIO_Init
 38980 ;;		_RADIO_WriteConfiguration
 38981 ;;		_RADIO_Transmit
 38982 ;;		_RADIO_ReceiveStart
 38983 ;;		_RADIO_RxDone
 38984 ;;		_RADIO_RxTimeout
 38985 ;;		_RADIO_TxDone
 38986 ;;		_RADIO_UnhandledInterrupt
 38987 ;;		_RADIO_FHSSChangeChannel
 38988 ;;		_RADIO_ReadRandom
 38989 ;;		_RADIO_TransmitCW
 38990 ;; This function uses a non-reentrant model
 38991 ;;
 38992                           
 38993                           	psect	text173
 38994  009FFC                     __ptext173:
 38995                           	opt stack 0
 38996  009FFC                     _RADIO_RegisterWrite:
 38997                           	opt stack 17
 38998                           
 38999                           ; BSR set to: 0
 39000                           ;incstack = 0
 39001                           ;RADIO_RegisterWrite@reg stored from wreg
 39002  009FFC  0100               	movlb	0	; () banked
 39003  009FFE  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 39004                           
 39005                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 39006  00A000  ECF1  F051         	call	_HALSPICSAssert	;wreg free
 39007                           
 39008                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 39009  00A004  0100               	movlb	0	; () banked
 39010  00A006  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 39011  00A008  0980               	iorlw	128
 39012  00A00A  EC60  F051         	call	_HALSPISend
 39013                           
 39014                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 39015  00A00E  0100               	movlb	0	; () banked
 39016  00A010  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 39017  00A012  EC60  F051         	call	_HALSPISend
 39018                           
 39019                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 39020  00A016  ECEF  F051         	call	_HALSPICSDeassert	;wreg free
 39021  00A01A  0012               	return		;funcret
 39022  00A01C                     __end_of_RADIO_RegisterWrite:
 39023                           	opt stack 0
 39024                           tosu	equ	0xFFF
 39025                           tosh	equ	0xFFE
 39026                           tosl	equ	0xFFD
 39027                           pclath	equ	0xFFA
 39028                           tblptru	equ	0xFF8
 39029                           tblptrh	equ	0xFF7
 39030                           tblptrl	equ	0xFF6
 39031                           tablat	equ	0xFF5
 39032                           prodh	equ	0xFF4
 39033                           prodl	equ	0xFF3
 39034                           intcon	equ	0xFF2
 39035                           intcon2	equ	0xFF1
 39036                           intcon3	equ	0xFF0
 39037                           indf0	equ	0xFEF
 39038                           postinc0	equ	0xFEE
 39039                           plusw0	equ	0xFEB
 39040                           fsr0h	equ	0xFEA
 39041                           fsr0l	equ	0xFE9
 39042                           wreg	equ	0xFE8
 39043                           postinc1	equ	0xFE6
 39044                           postdec1	equ	0xFE5
 39045                           plusw1	equ	0xFE3
 39046                           fsr1h	equ	0xFE2
 39047                           fsr1l	equ	0xFE1
 39048                           indf2	equ	0xFDF
 39049                           postinc2	equ	0xFDE
 39050                           postdec2	equ	0xFDD
 39051                           plusw2	equ	0xFDB
 39052                           fsr2h	equ	0xFDA
 39053                           fsr2l	equ	0xFD9
 39054                           status	equ	0xFD8
 39055                           
 39056 ;; *************** function _HALSPISend *****************
 39057 ;; Defined at:
 39058 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39059 ;; Parameters:    Size  Location     Type
 39060 ;;  data            1    wreg     unsigned char 
 39061 ;; Auto vars:     Size  Location     Type
 39062 ;;  data            1    5[BANK0 ] unsigned char 
 39063 ;; Return value:  Size  Location     Type
 39064 ;;                  1    wreg      unsigned char 
 39065 ;; Registers used:
 39066 ;;		wreg, status,2, cstack
 39067 ;; Tracked objects:
 39068 ;;		On entry : 0/0
 39069 ;;		On exit  : 0/0
 39070 ;;		Unchanged: 0/0
 39071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39072 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39073 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39075 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39076 ;;Total ram usage:        1 bytes
 39077 ;; Hardware stack levels used:    1
 39078 ;; Hardware stack levels required when called:    8
 39079 ;; This function calls:
 39080 ;;		_SPI2_Exchange8bit
 39081 ;; This function is called by:
 39082 ;;		_RADIO_RegisterWrite
 39083 ;;		_RADIO_RegisterRead
 39084 ;;		_RADIO_Transmit
 39085 ;;		_RADIO_RxDone
 39086 ;;		_RADIO_FSKPayloadReady
 39087 ;; This function uses a non-reentrant model
 39088 ;;
 39089                           
 39090                           	psect	text174
 39091  00A2C0                     __ptext174:
 39092                           	opt stack 0
 39093  00A2C0                     _HALSPISend:
 39094                           	opt stack 17
 39095                           
 39096                           ;incstack = 0
 39097                           ;HALSPISend@data stored from wreg
 39098  00A2C0  0100               	movlb	0	; () banked
 39099  00A2C2  6F65               	movwf	HALSPISend@data& (0+255),b
 39100                           
 39101                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 39102  00A2C4  0100               	movlb	0	; () banked
 39103  00A2C6  5165               	movf	HALSPISend@data& (0+255),w,b
 39104  00A2C8  EC20  F051         	call	_SPI2_Exchange8bit
 39105  00A2CC  0012               	return	
 39106  00A2CE                     __end_of_HALSPISend:
 39107                           	opt stack 0
 39108                           tosu	equ	0xFFF
 39109                           tosh	equ	0xFFE
 39110                           tosl	equ	0xFFD
 39111                           pclath	equ	0xFFA
 39112                           tblptru	equ	0xFF8
 39113                           tblptrh	equ	0xFF7
 39114                           tblptrl	equ	0xFF6
 39115                           tablat	equ	0xFF5
 39116                           prodh	equ	0xFF4
 39117                           prodl	equ	0xFF3
 39118                           intcon	equ	0xFF2
 39119                           intcon2	equ	0xFF1
 39120                           intcon3	equ	0xFF0
 39121                           indf0	equ	0xFEF
 39122                           postinc0	equ	0xFEE
 39123                           plusw0	equ	0xFEB
 39124                           fsr0h	equ	0xFEA
 39125                           fsr0l	equ	0xFE9
 39126                           wreg	equ	0xFE8
 39127                           postinc1	equ	0xFE6
 39128                           postdec1	equ	0xFE5
 39129                           plusw1	equ	0xFE3
 39130                           fsr1h	equ	0xFE2
 39131                           fsr1l	equ	0xFE1
 39132                           indf2	equ	0xFDF
 39133                           postinc2	equ	0xFDE
 39134                           postdec2	equ	0xFDD
 39135                           plusw2	equ	0xFDB
 39136                           fsr2h	equ	0xFDA
 39137                           fsr2l	equ	0xFD9
 39138                           status	equ	0xFD8
 39139                           
 39140 ;; *************** function _SPI2_Exchange8bit *****************
 39141 ;; Defined at:
 39142 ;;		line 77 in file "mcc_generated_files/spi2.c"
 39143 ;; Parameters:    Size  Location     Type
 39144 ;;  data            1    wreg     unsigned char 
 39145 ;; Auto vars:     Size  Location     Type
 39146 ;;  data            1    4[BANK0 ] unsigned char 
 39147 ;; Return value:  Size  Location     Type
 39148 ;;                  1    wreg      unsigned char 
 39149 ;; Registers used:
 39150 ;;		wreg, status,2
 39151 ;; Tracked objects:
 39152 ;;		On entry : 0/0
 39153 ;;		On exit  : 0/0
 39154 ;;		Unchanged: 0/0
 39155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39156 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39157 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39159 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39160 ;;Total ram usage:        1 bytes
 39161 ;; Hardware stack levels used:    1
 39162 ;; Hardware stack levels required when called:    7
 39163 ;; This function calls:
 39164 ;;		Nothing
 39165 ;; This function is called by:
 39166 ;;		_HALSPISend
 39167 ;;		_SPI2_Exchange8bitBuffer
 39168 ;; This function uses a non-reentrant model
 39169 ;;
 39170                           
 39171                           	psect	text175
 39172  00A240                     __ptext175:
 39173                           	opt stack 0
 39174  00A240                     _SPI2_Exchange8bit:
 39175                           	opt stack 17
 39176                           
 39177                           ;incstack = 0
 39178                           ;SPI2_Exchange8bit@data stored from wreg
 39179  00A240  0100               	movlb	0	; () banked
 39180  00A242  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 39181                           
 39182                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 39183  00A244  9E6C               	bcf	3948,7,c	;volatile
 39184                           
 39185                           ;spi2.c: 82: SSP2BUF = data;
 39186  00A246  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 39187  00A24A                     l192:
 39188  00A24A  A06D               	btfss	3949,0,c	;volatile
 39189  00A24C  D7FE               	goto	l192
 39190                           
 39191                           ;spi2.c: 86: }
 39192                           ;spi2.c: 88: return (SSP2BUF);
 39193  00A24E  506F               	movf	3951,w,c	;volatile
 39194  00A250  0012               	return		;funcret
 39195  00A252                     __end_of_SPI2_Exchange8bit:
 39196                           	opt stack 0
 39197                           tosu	equ	0xFFF
 39198                           tosh	equ	0xFFE
 39199                           tosl	equ	0xFFD
 39200                           pclath	equ	0xFFA
 39201                           tblptru	equ	0xFF8
 39202                           tblptrh	equ	0xFF7
 39203                           tblptrl	equ	0xFF6
 39204                           tablat	equ	0xFF5
 39205                           prodh	equ	0xFF4
 39206                           prodl	equ	0xFF3
 39207                           intcon	equ	0xFF2
 39208                           intcon2	equ	0xFF1
 39209                           intcon3	equ	0xFF0
 39210                           indf0	equ	0xFEF
 39211                           postinc0	equ	0xFEE
 39212                           plusw0	equ	0xFEB
 39213                           fsr0h	equ	0xFEA
 39214                           fsr0l	equ	0xFE9
 39215                           wreg	equ	0xFE8
 39216                           postinc1	equ	0xFE6
 39217                           postdec1	equ	0xFE5
 39218                           plusw1	equ	0xFE3
 39219                           fsr1h	equ	0xFE2
 39220                           fsr1l	equ	0xFE1
 39221                           indf2	equ	0xFDF
 39222                           postinc2	equ	0xFDE
 39223                           postdec2	equ	0xFDD
 39224                           plusw2	equ	0xFDB
 39225                           fsr2h	equ	0xFDA
 39226                           fsr2l	equ	0xFD9
 39227                           status	equ	0xFD8
 39228                           
 39229 ;; *************** function _HALSPICSDeassert *****************
 39230 ;; Defined at:
 39231 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39232 ;; Parameters:    Size  Location     Type
 39233 ;;		None
 39234 ;; Auto vars:     Size  Location     Type
 39235 ;;		None
 39236 ;; Return value:  Size  Location     Type
 39237 ;;                  1    wreg      void 
 39238 ;; Registers used:
 39239 ;;		None
 39240 ;; Tracked objects:
 39241 ;;		On entry : 0/0
 39242 ;;		On exit  : 0/0
 39243 ;;		Unchanged: 0/0
 39244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39245 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39248 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39249 ;;Total ram usage:        0 bytes
 39250 ;; Hardware stack levels used:    1
 39251 ;; Hardware stack levels required when called:    7
 39252 ;; This function calls:
 39253 ;;		Nothing
 39254 ;; This function is called by:
 39255 ;;		_RADIO_RegisterWrite
 39256 ;;		_RADIO_RegisterRead
 39257 ;;		_RADIO_Transmit
 39258 ;;		_RADIO_RxDone
 39259 ;;		_RADIO_FSKPayloadReady
 39260 ;; This function uses a non-reentrant model
 39261 ;;
 39262                           
 39263                           	psect	text176
 39264  00A3DE                     __ptext176:
 39265                           	opt stack 0
 39266  00A3DE                     _HALSPICSDeassert:
 39267                           	opt stack 18
 39268                           
 39269                           ;incstack = 0
 39270                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 39271  00A3DE  868C               	bsf	3980,3,c	;volatile
 39272  00A3E0  0012               	return	
 39273  00A3E2                     __end_of_HALSPICSDeassert:
 39274                           	opt stack 0
 39275                           tosu	equ	0xFFF
 39276                           tosh	equ	0xFFE
 39277                           tosl	equ	0xFFD
 39278                           pclath	equ	0xFFA
 39279                           tblptru	equ	0xFF8
 39280                           tblptrh	equ	0xFF7
 39281                           tblptrl	equ	0xFF6
 39282                           tablat	equ	0xFF5
 39283                           prodh	equ	0xFF4
 39284                           prodl	equ	0xFF3
 39285                           intcon	equ	0xFF2
 39286                           intcon2	equ	0xFF1
 39287                           intcon3	equ	0xFF0
 39288                           indf0	equ	0xFEF
 39289                           postinc0	equ	0xFEE
 39290                           plusw0	equ	0xFEB
 39291                           fsr0h	equ	0xFEA
 39292                           fsr0l	equ	0xFE9
 39293                           wreg	equ	0xFE8
 39294                           postinc1	equ	0xFE6
 39295                           postdec1	equ	0xFE5
 39296                           plusw1	equ	0xFE3
 39297                           fsr1h	equ	0xFE2
 39298                           fsr1l	equ	0xFE1
 39299                           indf2	equ	0xFDF
 39300                           postinc2	equ	0xFDE
 39301                           postdec2	equ	0xFDD
 39302                           plusw2	equ	0xFDB
 39303                           fsr2h	equ	0xFDA
 39304                           fsr2l	equ	0xFD9
 39305                           status	equ	0xFD8
 39306                           
 39307 ;; *************** function _HALSPICSAssert *****************
 39308 ;; Defined at:
 39309 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39310 ;; Parameters:    Size  Location     Type
 39311 ;;		None
 39312 ;; Auto vars:     Size  Location     Type
 39313 ;;		None
 39314 ;; Return value:  Size  Location     Type
 39315 ;;                  1    wreg      void 
 39316 ;; Registers used:
 39317 ;;		None
 39318 ;; Tracked objects:
 39319 ;;		On entry : 0/0
 39320 ;;		On exit  : 0/0
 39321 ;;		Unchanged: 0/0
 39322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39324 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39326 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39327 ;;Total ram usage:        0 bytes
 39328 ;; Hardware stack levels used:    1
 39329 ;; Hardware stack levels required when called:    7
 39330 ;; This function calls:
 39331 ;;		Nothing
 39332 ;; This function is called by:
 39333 ;;		_RADIO_RegisterWrite
 39334 ;;		_RADIO_RegisterRead
 39335 ;;		_RADIO_Transmit
 39336 ;;		_RADIO_RxDone
 39337 ;;		_RADIO_FSKPayloadReady
 39338 ;; This function uses a non-reentrant model
 39339 ;;
 39340                           
 39341                           	psect	text177
 39342  00A3E2                     __ptext177:
 39343                           	opt stack 0
 39344  00A3E2                     _HALSPICSAssert:
 39345                           	opt stack 18
 39346                           
 39347                           ;incstack = 0
 39348                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 39349  00A3E2  968C               	bcf	3980,3,c	;volatile
 39350  00A3E4  0012               	return	
 39351  00A3E6                     __end_of_HALSPICSAssert:
 39352                           	opt stack 0
 39353                           tosu	equ	0xFFF
 39354                           tosh	equ	0xFFE
 39355                           tosl	equ	0xFFD
 39356                           pclath	equ	0xFFA
 39357                           tblptru	equ	0xFF8
 39358                           tblptrh	equ	0xFF7
 39359                           tblptrl	equ	0xFF6
 39360                           tablat	equ	0xFF5
 39361                           prodh	equ	0xFF4
 39362                           prodl	equ	0xFF3
 39363                           intcon	equ	0xFF2
 39364                           intcon2	equ	0xFF1
 39365                           intcon3	equ	0xFF0
 39366                           indf0	equ	0xFEF
 39367                           postinc0	equ	0xFEE
 39368                           plusw0	equ	0xFEB
 39369                           fsr0h	equ	0xFEA
 39370                           fsr0l	equ	0xFE9
 39371                           wreg	equ	0xFE8
 39372                           postinc1	equ	0xFE6
 39373                           postdec1	equ	0xFE5
 39374                           plusw1	equ	0xFE3
 39375                           fsr1h	equ	0xFE2
 39376                           fsr1l	equ	0xFE1
 39377                           indf2	equ	0xFDF
 39378                           postinc2	equ	0xFDE
 39379                           postdec2	equ	0xFDD
 39380                           plusw2	equ	0xFDB
 39381                           fsr2h	equ	0xFDA
 39382                           fsr2l	equ	0xFD9
 39383                           status	equ	0xFD8
 39384                           
 39385 ;; *************** function _RADIO_Reset *****************
 39386 ;; Defined at:
 39387 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 39388 ;; Parameters:    Size  Location     Type
 39389 ;;		None
 39390 ;; Auto vars:     Size  Location     Type
 39391 ;;		None
 39392 ;; Return value:  Size  Location     Type
 39393 ;;                  1    wreg      void 
 39394 ;; Registers used:
 39395 ;;		wreg, status,2, status,0, cstack
 39396 ;; Tracked objects:
 39397 ;;		On entry : 0/0
 39398 ;;		On exit  : 0/0
 39399 ;;		Unchanged: 0/0
 39400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39405 ;;Total ram usage:        0 bytes
 39406 ;; Hardware stack levels used:    1
 39407 ;; Hardware stack levels required when called:    8
 39408 ;; This function calls:
 39409 ;;		_HALResetPinMakeInput
 39410 ;;		_HALResetPinMakeOutput
 39411 ;;		_HALResetPinOutputValue
 39412 ;;		_SystemBlockingWaitMs
 39413 ;; This function is called by:
 39414 ;;		_RADIO_Init
 39415 ;; This function uses a non-reentrant model
 39416 ;;
 39417                           
 39418                           	psect	text178
 39419  0097A6                     __ptext178:
 39420                           	opt stack 0
 39421  0097A6                     _RADIO_Reset:
 39422                           	opt stack 20
 39423                           
 39424                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 39425                           
 39426                           ;incstack = 0
 39427  0097A6  ECF3  F051         	call	_HALResetPinMakeOutput	;wreg free
 39428                           
 39429                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 39430  0097AA  0E00               	movlw	0
 39431  0097AC  EC78  F050         	call	_HALResetPinOutputValue
 39432                           
 39433                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 39434  0097B0  0E01               	movlw	1
 39435  0097B2  0100               	movlb	0	; () banked
 39436  0097B4  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 39437  0097B6  0E00               	movlw	0
 39438  0097B8  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 39439  0097BA  0E00               	movlw	0
 39440  0097BC  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 39441  0097BE  0E00               	movlw	0
 39442  0097C0  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 39443  0097C2  EC7F  F04D         	call	_SystemBlockingWaitMs	;wreg free
 39444                           
 39445                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 39446  0097C6  ECF5  F051         	call	_HALResetPinMakeInput	;wreg free
 39447                           
 39448                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 39449  0097CA  0E0A               	movlw	10
 39450  0097CC  0100               	movlb	0	; () banked
 39451  0097CE  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 39452  0097D0  0E00               	movlw	0
 39453  0097D2  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 39454  0097D4  0E00               	movlw	0
 39455  0097D6  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 39456  0097D8  0E00               	movlw	0
 39457  0097DA  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 39458  0097DC  EC7F  F04D         	call	_SystemBlockingWaitMs	;wreg free
 39459                           
 39460                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 39461  0097E0  0E01               	movlw	1
 39462  0097E2  EC78  F050         	call	_HALResetPinOutputValue
 39463                           
 39464                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 39465  0097E6  ECF3  F051         	call	_HALResetPinMakeOutput	;wreg free
 39466  0097EA  0012               	return		;funcret
 39467  0097EC                     __end_of_RADIO_Reset:
 39468                           	opt stack 0
 39469                           tosu	equ	0xFFF
 39470                           tosh	equ	0xFFE
 39471                           tosl	equ	0xFFD
 39472                           pclath	equ	0xFFA
 39473                           tblptru	equ	0xFF8
 39474                           tblptrh	equ	0xFF7
 39475                           tblptrl	equ	0xFF6
 39476                           tablat	equ	0xFF5
 39477                           prodh	equ	0xFF4
 39478                           prodl	equ	0xFF3
 39479                           intcon	equ	0xFF2
 39480                           intcon2	equ	0xFF1
 39481                           intcon3	equ	0xFF0
 39482                           indf0	equ	0xFEF
 39483                           postinc0	equ	0xFEE
 39484                           plusw0	equ	0xFEB
 39485                           fsr0h	equ	0xFEA
 39486                           fsr0l	equ	0xFE9
 39487                           wreg	equ	0xFE8
 39488                           postinc1	equ	0xFE6
 39489                           postdec1	equ	0xFE5
 39490                           plusw1	equ	0xFE3
 39491                           fsr1h	equ	0xFE2
 39492                           fsr1l	equ	0xFE1
 39493                           indf2	equ	0xFDF
 39494                           postinc2	equ	0xFDE
 39495                           postdec2	equ	0xFDD
 39496                           plusw2	equ	0xFDB
 39497                           fsr2h	equ	0xFDA
 39498                           fsr2l	equ	0xFD9
 39499                           status	equ	0xFD8
 39500                           
 39501 ;; *************** function _SystemBlockingWaitMs *****************
 39502 ;; Defined at:
 39503 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39504 ;; Parameters:    Size  Location     Type
 39505 ;;  ms              4    4[BANK0 ] unsigned long 
 39506 ;; Auto vars:     Size  Location     Type
 39507 ;;		None
 39508 ;; Return value:  Size  Location     Type
 39509 ;;                  1    wreg      void 
 39510 ;; Registers used:
 39511 ;;		wreg, status,2, status,0
 39512 ;; Tracked objects:
 39513 ;;		On entry : 0/0
 39514 ;;		On exit  : 0/0
 39515 ;;		Unchanged: 0/0
 39516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39517 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39519 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39520 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39521 ;;Total ram usage:        5 bytes
 39522 ;; Hardware stack levels used:    1
 39523 ;; Hardware stack levels required when called:    7
 39524 ;; This function calls:
 39525 ;;		Nothing
 39526 ;; This function is called by:
 39527 ;;		_RADIO_WriteMode
 39528 ;;		_RADIO_Reset
 39529 ;;		_RADIO_ReadRandom
 39530 ;;		_RADIO_StopCW
 39531 ;; This function uses a non-reentrant model
 39532 ;;
 39533                           
 39534                           	psect	text179
 39535  009AFE                     __ptext179:
 39536                           	opt stack 0
 39537  009AFE                     _SystemBlockingWaitMs:
 39538                           	opt stack 19
 39539                           
 39540                           ;sw_timer.c: 147: while (ms > 0)
 39541                           
 39542                           ;incstack = 0
 39543  009AFE  D00F               	goto	l13159
 39544  009B00                     l13155:
 39545                           
 39546                           ;sw_timer.c: 148: {
 39547                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 39548  009B00  0E06               	movlw	6
 39549  009B02  0100               	movlb	0	; () banked
 39550  009B04  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 39551  009B06  0E30               	movlw	48
 39552  009B08                     u22267:
 39553  009B08  2EE8               	decfsz	wreg,f,c
 39554  009B0A  D7FE               	goto	u22267
 39555  009B0C  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 39556  009B0E  D7FC               	goto	u22267
 39557  009B10  D000               	nop2	
 39558                           
 39559                           ;sw_timer.c: 150: ms--;
 39560  009B12  0100               	movlb	0	; () banked
 39561  009B14  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 39562  009B16  0E00               	movlw	0
 39563  009B18  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 39564  009B1A  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 39565  009B1C  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 39566  009B1E                     l13159:
 39567  009B1E  0100               	movlb	0	; () banked
 39568  009B20  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 39569  009B22  0100               	movlb	0	; () banked
 39570  009B24  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 39571  009B26  0100               	movlb	0	; () banked
 39572  009B28  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 39573  009B2A  0100               	movlb	0	; () banked
 39574  009B2C  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 39575  009B2E  B4D8               	btfsc	status,2,c
 39576  009B30  0012               	return	
 39577  009B32  D7E6               	goto	l13155
 39578  009B34                     __end_of_SystemBlockingWaitMs:
 39579                           	opt stack 0
 39580                           tosu	equ	0xFFF
 39581                           tosh	equ	0xFFE
 39582                           tosl	equ	0xFFD
 39583                           pclath	equ	0xFFA
 39584                           tblptru	equ	0xFF8
 39585                           tblptrh	equ	0xFF7
 39586                           tblptrl	equ	0xFF6
 39587                           tablat	equ	0xFF5
 39588                           prodh	equ	0xFF4
 39589                           prodl	equ	0xFF3
 39590                           intcon	equ	0xFF2
 39591                           intcon2	equ	0xFF1
 39592                           intcon3	equ	0xFF0
 39593                           indf0	equ	0xFEF
 39594                           postinc0	equ	0xFEE
 39595                           plusw0	equ	0xFEB
 39596                           fsr0h	equ	0xFEA
 39597                           fsr0l	equ	0xFE9
 39598                           wreg	equ	0xFE8
 39599                           postinc1	equ	0xFE6
 39600                           postdec1	equ	0xFE5
 39601                           plusw1	equ	0xFE3
 39602                           fsr1h	equ	0xFE2
 39603                           fsr1l	equ	0xFE1
 39604                           indf2	equ	0xFDF
 39605                           postinc2	equ	0xFDE
 39606                           postdec2	equ	0xFDD
 39607                           plusw2	equ	0xFDB
 39608                           fsr2h	equ	0xFDA
 39609                           fsr2l	equ	0xFD9
 39610                           status	equ	0xFD8
 39611                           
 39612 ;; *************** function _HALResetPinOutputValue *****************
 39613 ;; Defined at:
 39614 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39615 ;; Parameters:    Size  Location     Type
 39616 ;;  value           1    wreg     unsigned char 
 39617 ;; Auto vars:     Size  Location     Type
 39618 ;;  value           1    4[BANK0 ] unsigned char 
 39619 ;; Return value:  Size  Location     Type
 39620 ;;                  1    wreg      void 
 39621 ;; Registers used:
 39622 ;;		wreg, status,2, status,0
 39623 ;; Tracked objects:
 39624 ;;		On entry : 0/0
 39625 ;;		On exit  : 0/0
 39626 ;;		Unchanged: 0/0
 39627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39629 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39630 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39631 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39632 ;;Total ram usage:        1 bytes
 39633 ;; Hardware stack levels used:    1
 39634 ;; Hardware stack levels required when called:    7
 39635 ;; This function calls:
 39636 ;;		Nothing
 39637 ;; This function is called by:
 39638 ;;		_RADIO_Reset
 39639 ;; This function uses a non-reentrant model
 39640 ;;
 39641                           
 39642                           	psect	text180
 39643  00A0F0                     __ptext180:
 39644                           	opt stack 0
 39645  00A0F0                     _HALResetPinOutputValue:
 39646                           	opt stack 20
 39647                           
 39648                           ; BSR set to: 0
 39649                           ;incstack = 0
 39650                           ;HALResetPinOutputValue@value stored from wreg
 39651  00A0F0  0100               	movlb	0	; () banked
 39652  00A0F2  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 39653                           
 39654                           ;radio_driver_hal.c: 57: if (value == 0)
 39655  00A0F4  0100               	movlb	0	; () banked
 39656  00A0F6  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 39657  00A0F8  0100               	movlb	0	; () banked
 39658  00A0FA  A4D8               	btfss	status,2,c
 39659  00A0FC  D002               	goto	l10339
 39660                           
 39661                           ; BSR set to: 0
 39662                           
 39663                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 39664  00A0FE  948B               	bcf	3979,2,c	;volatile
 39665                           
 39666                           ; BSR set to: 0
 39667  00A100  0012               	return	
 39668  00A102                     l10339:
 39669                           
 39670                           ; BSR set to: 0
 39671                           ;radio_driver_hal.c: 59: else if (value == 1)
 39672  00A102  0100               	movlb	0	; () banked
 39673  00A104  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 39674  00A106  A4D8               	btfss	status,2,c
 39675  00A108  0012               	return	
 39676                           
 39677                           ; BSR set to: 0
 39678                           
 39679                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 39680  00A10A  848B               	bsf	3979,2,c	;volatile
 39681                           
 39682                           ; BSR set to: 0
 39683                           
 39684                           ; BSR set to: 0
 39685  00A10C  0012               	return	
 39686  00A10E                     __end_of_HALResetPinOutputValue:
 39687                           	opt stack 0
 39688                           tosu	equ	0xFFF
 39689                           tosh	equ	0xFFE
 39690                           tosl	equ	0xFFD
 39691                           pclath	equ	0xFFA
 39692                           tblptru	equ	0xFF8
 39693                           tblptrh	equ	0xFF7
 39694                           tblptrl	equ	0xFF6
 39695                           tablat	equ	0xFF5
 39696                           prodh	equ	0xFF4
 39697                           prodl	equ	0xFF3
 39698                           intcon	equ	0xFF2
 39699                           intcon2	equ	0xFF1
 39700                           intcon3	equ	0xFF0
 39701                           indf0	equ	0xFEF
 39702                           postinc0	equ	0xFEE
 39703                           plusw0	equ	0xFEB
 39704                           fsr0h	equ	0xFEA
 39705                           fsr0l	equ	0xFE9
 39706                           wreg	equ	0xFE8
 39707                           postinc1	equ	0xFE6
 39708                           postdec1	equ	0xFE5
 39709                           plusw1	equ	0xFE3
 39710                           fsr1h	equ	0xFE2
 39711                           fsr1l	equ	0xFE1
 39712                           indf2	equ	0xFDF
 39713                           postinc2	equ	0xFDE
 39714                           postdec2	equ	0xFDD
 39715                           plusw2	equ	0xFDB
 39716                           fsr2h	equ	0xFDA
 39717                           fsr2l	equ	0xFD9
 39718                           status	equ	0xFD8
 39719                           
 39720 ;; *************** function _HALResetPinMakeOutput *****************
 39721 ;; Defined at:
 39722 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39723 ;; Parameters:    Size  Location     Type
 39724 ;;		None
 39725 ;; Auto vars:     Size  Location     Type
 39726 ;;		None
 39727 ;; Return value:  Size  Location     Type
 39728 ;;                  1    wreg      void 
 39729 ;; Registers used:
 39730 ;;		None
 39731 ;; Tracked objects:
 39732 ;;		On entry : 0/0
 39733 ;;		On exit  : 0/0
 39734 ;;		Unchanged: 0/0
 39735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39736 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39739 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39740 ;;Total ram usage:        0 bytes
 39741 ;; Hardware stack levels used:    1
 39742 ;; Hardware stack levels required when called:    7
 39743 ;; This function calls:
 39744 ;;		Nothing
 39745 ;; This function is called by:
 39746 ;;		_RADIO_Reset
 39747 ;; This function uses a non-reentrant model
 39748 ;;
 39749                           
 39750                           	psect	text181
 39751  00A3E6                     __ptext181:
 39752                           	opt stack 0
 39753  00A3E6                     _HALResetPinMakeOutput:
 39754                           	opt stack 20
 39755                           
 39756                           ; BSR set to: 0
 39757                           ;incstack = 0
 39758                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 39759  00A3E6  9494               	bcf	3988,2,c	;volatile
 39760  00A3E8  0012               	return	
 39761  00A3EA                     __end_of_HALResetPinMakeOutput:
 39762                           	opt stack 0
 39763                           tosu	equ	0xFFF
 39764                           tosh	equ	0xFFE
 39765                           tosl	equ	0xFFD
 39766                           pclath	equ	0xFFA
 39767                           tblptru	equ	0xFF8
 39768                           tblptrh	equ	0xFF7
 39769                           tblptrl	equ	0xFF6
 39770                           tablat	equ	0xFF5
 39771                           prodh	equ	0xFF4
 39772                           prodl	equ	0xFF3
 39773                           intcon	equ	0xFF2
 39774                           intcon2	equ	0xFF1
 39775                           intcon3	equ	0xFF0
 39776                           indf0	equ	0xFEF
 39777                           postinc0	equ	0xFEE
 39778                           plusw0	equ	0xFEB
 39779                           fsr0h	equ	0xFEA
 39780                           fsr0l	equ	0xFE9
 39781                           wreg	equ	0xFE8
 39782                           postinc1	equ	0xFE6
 39783                           postdec1	equ	0xFE5
 39784                           plusw1	equ	0xFE3
 39785                           fsr1h	equ	0xFE2
 39786                           fsr1l	equ	0xFE1
 39787                           indf2	equ	0xFDF
 39788                           postinc2	equ	0xFDE
 39789                           postdec2	equ	0xFDD
 39790                           plusw2	equ	0xFDB
 39791                           fsr2h	equ	0xFDA
 39792                           fsr2l	equ	0xFD9
 39793                           status	equ	0xFD8
 39794                           
 39795 ;; *************** function _HALResetPinMakeInput *****************
 39796 ;; Defined at:
 39797 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39798 ;; Parameters:    Size  Location     Type
 39799 ;;		None
 39800 ;; Auto vars:     Size  Location     Type
 39801 ;;		None
 39802 ;; Return value:  Size  Location     Type
 39803 ;;                  1    wreg      void 
 39804 ;; Registers used:
 39805 ;;		None
 39806 ;; Tracked objects:
 39807 ;;		On entry : 0/0
 39808 ;;		On exit  : 0/0
 39809 ;;		Unchanged: 0/0
 39810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39815 ;;Total ram usage:        0 bytes
 39816 ;; Hardware stack levels used:    1
 39817 ;; Hardware stack levels required when called:    7
 39818 ;; This function calls:
 39819 ;;		Nothing
 39820 ;; This function is called by:
 39821 ;;		_RADIO_Reset
 39822 ;; This function uses a non-reentrant model
 39823 ;;
 39824                           
 39825                           	psect	text182
 39826  00A3EA                     __ptext182:
 39827                           	opt stack 0
 39828  00A3EA                     _HALResetPinMakeInput:
 39829                           	opt stack 20
 39830                           
 39831                           ;incstack = 0
 39832                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 39833  00A3EA  8494               	bsf	3988,2,c	;volatile
 39834  00A3EC  0012               	return	
 39835  00A3EE                     __end_of_HALResetPinMakeInput:
 39836                           	opt stack 0
 39837                           tosu	equ	0xFFF
 39838                           tosh	equ	0xFFE
 39839                           tosl	equ	0xFFD
 39840                           pclath	equ	0xFFA
 39841                           tblptru	equ	0xFF8
 39842                           tblptrh	equ	0xFF7
 39843                           tblptrl	equ	0xFF6
 39844                           tablat	equ	0xFF5
 39845                           prodh	equ	0xFF4
 39846                           prodl	equ	0xFF3
 39847                           intcon	equ	0xFF2
 39848                           intcon2	equ	0xFF1
 39849                           intcon3	equ	0xFF0
 39850                           indf0	equ	0xFEF
 39851                           postinc0	equ	0xFEE
 39852                           plusw0	equ	0xFEB
 39853                           fsr0h	equ	0xFEA
 39854                           fsr0l	equ	0xFE9
 39855                           wreg	equ	0xFE8
 39856                           postinc1	equ	0xFE6
 39857                           postdec1	equ	0xFE5
 39858                           plusw1	equ	0xFE3
 39859                           fsr1h	equ	0xFE2
 39860                           fsr1l	equ	0xFE1
 39861                           indf2	equ	0xFDF
 39862                           postinc2	equ	0xFDE
 39863                           postdec2	equ	0xFDD
 39864                           plusw2	equ	0xFDB
 39865                           fsr2h	equ	0xFDA
 39866                           fsr2l	equ	0xFD9
 39867                           status	equ	0xFD8
 39868                           
 39869 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 39870 ;; Defined at:
 39871 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39872 ;; Parameters:    Size  Location     Type
 39873 ;;  period          2   74[BANK0 ] unsigned int 
 39874 ;; Auto vars:     Size  Location     Type
 39875 ;;  iCtr            1   84[BANK0 ] unsigned char 
 39876 ;; Return value:  Size  Location     Type
 39877 ;;                  1    wreg      void 
 39878 ;; Registers used:
 39879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39880 ;; Tracked objects:
 39881 ;;		On entry : 0/0
 39882 ;;		On exit  : 0/0
 39883 ;;		Unchanged: 0/0
 39884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39886 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39887 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39888 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39889 ;;Total ram usage:       11 bytes
 39890 ;; Hardware stack levels used:    1
 39891 ;; Hardware stack levels required when called:   11
 39892 ;; This function calls:
 39893 ;;		_SwTimerSetTimeout
 39894 ;;		_SwTimerStart
 39895 ;;		_SwTimerStop
 39896 ;;		___lldiv
 39897 ;;		___lmul
 39898 ;; This function is called by:
 39899 ;;		_LORAWAN_Reset
 39900 ;; This function uses a non-reentrant model
 39901 ;;
 39902                           
 39903                           	psect	text183
 39904  006178                     __ptext183:
 39905                           	opt stack 0
 39906  006178                     _LORAWAN_LinkCheckConfigure:
 39907                           	opt stack 17
 39908                           
 39909                           ;lorawan.c: 757: uint8_t iCtr;
 39910                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 39911                           
 39912                           ;incstack = 0
 39913  006178  C0AA  F09E         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 39914  00617C  C0AB  F09F         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 39915  006180  0100               	movlb	0	; () banked
 39916  006182  6BA0               	clrf	(___lmul@multiplier+2)& (0+255),b
 39917  006184  6BA1               	clrf	(___lmul@multiplier+3)& (0+255),b
 39918  006186  0EE8               	movlw	232
 39919  006188  0100               	movlb	0	; () banked
 39920  00618A  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 39921  00618C  0E03               	movlw	3
 39922  00618E  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 39923  006190  0E00               	movlw	0
 39924  006192  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 39925  006194  0E00               	movlw	0
 39926  006196  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 39927  006198  EC82  F046         	call	___lmul	;wreg free
 39928  00619C  C09E  F2CC         	movff	?___lmul,_loRa+204
 39929  0061A0  C09F  F2CD         	movff	?___lmul+1,_loRa+205
 39930  0061A4  C0A0  F2CE         	movff	?___lmul+2,_loRa+206
 39931  0061A8  C0A1  F2CF         	movff	?___lmul+3,_loRa+207
 39932                           
 39933                           ;lorawan.c: 761: if (period == 0)
 39934  0061AC  0100               	movlb	0	; () banked
 39935  0061AE  51AA               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 39936  0061B0  0100               	movlb	0	; () banked
 39937  0061B2  11AB               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 39938  0061B4  A4D8               	btfss	status,2,c
 39939  0061B6  D02D               	goto	l1941
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;lorawan.c: 762: {
 39943                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 39944  0061B8  0102               	movlb	2	; () banked
 39945  0061BA  51E7               	movf	(_loRa+231)& (0+255),w,b
 39946  0061BC  EC39  F04F         	call	_SwTimerStop
 39947                           
 39948                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 39949  0061C0  0102               	movlb	2	; () banked
 39950  0061C2  9503               	bcf	(_loRa+3)& (0+255),2,b
 39951                           
 39952                           ; BSR set to: 2
 39953                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 39954  0061C4  0E00               	movlw	0
 39955  0061C6  0100               	movlb	0	; () banked
 39956  0061C8  6FB4               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 39957  0061CA  D01C               	goto	l16345
 39958  0061CC                     l16337:
 39959                           
 39960                           ; BSR set to: 0
 39961                           ;lorawan.c: 766: {
 39962                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 39963  0061CC  0100               	movlb	0	; () banked
 39964  0061CE  51B4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 39965  0061D0  0D02               	mullw	2
 39966  0061D2  0EA8               	movlw	low (_loRa+168)
 39967  0061D4  24F3               	addwf	prodl,w,c
 39968  0061D6  6ED9               	movwf	fsr2l,c
 39969  0061D8  0E02               	movlw	high (_loRa+168)
 39970  0061DA  20F4               	addwfc	prodh,w,c
 39971  0061DC  6EDA               	movwf	fsr2h,c
 39972  0061DE  0E02               	movlw	2
 39973  0061E0  18DE               	xorwf	postinc2,w,c
 39974  0061E2  A4D8               	btfss	status,2,c
 39975  0061E4  D00D               	goto	l16343
 39976                           
 39977                           ; BSR set to: 0
 39978                           ;lorawan.c: 768: {
 39979                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 39980  0061E6  0100               	movlb	0	; () banked
 39981  0061E8  51B4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 39982  0061EA  0D02               	mullw	2
 39983  0061EC  0EA8               	movlw	low (_loRa+168)
 39984  0061EE  24F3               	addwf	prodl,w,c
 39985  0061F0  6ED9               	movwf	fsr2l,c
 39986  0061F2  0E02               	movlw	high (_loRa+168)
 39987  0061F4  20F4               	addwfc	prodh,w,c
 39988  0061F6  6EDA               	movwf	fsr2h,c
 39989  0061F8  0EFF               	movlw	255
 39990  0061FA  6EDF               	movwf	indf2,c
 39991                           
 39992                           ; BSR set to: 0
 39993                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 39994  0061FC  0102               	movlb	2	; () banked
 39995  0061FE  07A7               	decf	(_loRa+167)& (0+255),f,b
 39996  006200                     l16343:
 39997  006200  0100               	movlb	0	; () banked
 39998  006202  2BB4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 39999  006204                     l16345:
 40000                           
 40001                           ; BSR set to: 0
 40002  006204  0102               	movlb	2	; () banked
 40003  006206  51A7               	movf	(_loRa+167)& (0+255),w,b
 40004  006208  0100               	movlb	0	; () banked
 40005  00620A  5DB4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 40006  00620C  B0D8               	btfsc	status,0,c
 40007  00620E  0012               	return	
 40008  006210  D7DD               	goto	l16337
 40009  006212                     l1941:
 40010                           
 40011                           ; BSR set to: 0
 40012                           ;lorawan.c: 776: else
 40013                           ;lorawan.c: 777: {
 40014                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 40015  006212  0102               	movlb	2	; () banked
 40016  006214  8503               	bsf	(_loRa+3)& (0+255),2,b
 40017                           
 40018                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 40019  006216  0102               	movlb	2	; () banked
 40020  006218  A902               	btfss	(_loRa+2)& (0+255),4,b
 40021  00621A  0012               	return	
 40022                           
 40023                           ; BSR set to: 2
 40024                           ;lorawan.c: 782: {
 40025                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 40026  00621C  0102               	movlb	2	; () banked
 40027  00621E  51CF               	movf	(_loRa+207)& (0+255),w,b
 40028  006220  E10A               	bnz	u19590
 40029  006222  0102               	movlb	2	; () banked
 40030  006224  29CC               	incf	(_loRa+204)& (0+255),w,b
 40031  006226  0EFF               	movlw	255
 40032  006228  0102               	movlb	2	; () banked
 40033  00622A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 40034  00622C  0E0F               	movlw	15
 40035  00622E  0102               	movlb	2	; () banked
 40036  006230  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 40037  006232  A0D8               	btfss	status,0,c
 40038  006234  D020               	goto	l16351
 40039  006236                     u19590:
 40040                           
 40041                           ; BSR set to: 2
 40042  006236  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 40043  00623A  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 40044  00623E  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 40045  006242  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 40046  006246  0E7D               	movlw	125
 40047  006248  0100               	movlb	0	; () banked
 40048  00624A  6F68               	movwf	___lldiv@divisor& (0+255),b
 40049  00624C  0E00               	movlw	0
 40050  00624E  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 40051  006250  0E00               	movlw	0
 40052  006252  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 40053  006254  0E00               	movlw	0
 40054  006256  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 40055  006258  EC08  F03F         	call	___lldiv	;wreg free
 40056  00625C  0E0C               	movlw	12
 40057  00625E                     u19605:
 40058  00625E  90D8               	bcf	status,0,c
 40059  006260  0100               	movlb	0	; () banked
 40060  006262  3764               	rlcf	?___lldiv& (0+255),f,b
 40061  006264  0100               	movlb	0	; () banked
 40062  006266  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 40063  006268  0100               	movlb	0	; () banked
 40064  00626A  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 40065  00626C  0100               	movlb	0	; () banked
 40066  00626E  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 40067  006270  2EE8               	decfsz	wreg,f,c
 40068  006272  D7F5               	goto	u19605
 40069  006274  D024               	goto	L26
 40070  006276                     l16351:
 40071  006276  C2CC  F0AC         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 40072  00627A  C2CD  F0AD         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 40073  00627E  C2CE  F0AE         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 40074  006282  C2CF  F0AF         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 40075  006286  0E0C               	movlw	12
 40076  006288                     u19615:
 40077  006288  90D8               	bcf	status,0,c
 40078  00628A  0100               	movlb	0	; () banked
 40079  00628C  37AC               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 40080  00628E  37AD               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 40081  006290  37AE               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 40082  006292  37AF               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 40083  006294  2EE8               	decfsz	wreg,f,c
 40084  006296  D7F8               	goto	u19615
 40085  006298  C0AC  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 40086  00629C  C0AD  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 40087  0062A0  C0AE  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 40088  0062A4  C0AF  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 40089  0062A8  0E7D               	movlw	125
 40090  0062AA  0100               	movlb	0	; () banked
 40091  0062AC  6F68               	movwf	___lldiv@divisor& (0+255),b
 40092  0062AE  0E00               	movlw	0
 40093  0062B0  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 40094  0062B2  0E00               	movlw	0
 40095  0062B4  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 40096  0062B6  0E00               	movlw	0
 40097  0062B8  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 40098  0062BA  EC08  F03F         	call	___lldiv	;wreg free
 40099  0062BE                     L26:
 40100  0062BE  C064  F0B0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3273
 40101  0062C2  C065  F0B1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3273+1
 40102  0062C6  C066  F0B2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3273+2
 40103  0062CA  C067  F0B3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3273+3
 40104  0062CE  C0B0  F071         	movff	_LORAWAN_LinkCheckConfigure$3273,SwTimerSetTimeout@timeout
 40105  0062D2  C0B1  F072         	movff	_LORAWAN_LinkCheckConfigure$3273+1,SwTimerSetTimeout@timeout+1
 40106  0062D6  C0B2  F073         	movff	_LORAWAN_LinkCheckConfigure$3273+2,SwTimerSetTimeout@timeout+2
 40107  0062DA  C0B3  F074         	movff	_LORAWAN_LinkCheckConfigure$3273+3,SwTimerSetTimeout@timeout+3
 40108  0062DE  0102               	movlb	2	; () banked
 40109  0062E0  51E7               	movf	(_loRa+231)& (0+255),w,b
 40110  0062E2  EC33  F04A         	call	_SwTimerSetTimeout
 40111                           
 40112                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 40113  0062E6  0102               	movlb	2	; () banked
 40114  0062E8  51E7               	movf	(_loRa+231)& (0+255),w,b
 40115  0062EA  ECCB  F041         	call	_SwTimerStart
 40116  0062EE  0012               	return	
 40117  0062F0                     __end_of_LORAWAN_LinkCheckConfigure:
 40118                           	opt stack 0
 40119                           tosu	equ	0xFFF
 40120                           tosh	equ	0xFFE
 40121                           tosl	equ	0xFFD
 40122                           pclath	equ	0xFFA
 40123                           tblptru	equ	0xFF8
 40124                           tblptrh	equ	0xFF7
 40125                           tblptrl	equ	0xFF6
 40126                           tablat	equ	0xFF5
 40127                           prodh	equ	0xFF4
 40128                           prodl	equ	0xFF3
 40129                           intcon	equ	0xFF2
 40130                           intcon2	equ	0xFF1
 40131                           intcon3	equ	0xFF0
 40132                           indf0	equ	0xFEF
 40133                           postinc0	equ	0xFEE
 40134                           plusw0	equ	0xFEB
 40135                           fsr0h	equ	0xFEA
 40136                           fsr0l	equ	0xFE9
 40137                           wreg	equ	0xFE8
 40138                           postinc1	equ	0xFE6
 40139                           postdec1	equ	0xFE5
 40140                           plusw1	equ	0xFE3
 40141                           fsr1h	equ	0xFE2
 40142                           fsr1l	equ	0xFE1
 40143                           indf2	equ	0xFDF
 40144                           postinc2	equ	0xFDE
 40145                           postdec2	equ	0xFDD
 40146                           plusw2	equ	0xFDB
 40147                           fsr2h	equ	0xFDA
 40148                           fsr2l	equ	0xFD9
 40149                           status	equ	0xFD8
 40150                           
 40151 ;; *************** function ___lmul *****************
 40152 ;; Defined at:
 40153 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 40154 ;; Parameters:    Size  Location     Type
 40155 ;;  multiplier      4   62[BANK0 ] unsigned long 
 40156 ;;  multiplicand    4   66[BANK0 ] unsigned long 
 40157 ;; Auto vars:     Size  Location     Type
 40158 ;;  product         4   70[BANK0 ] unsigned long 
 40159 ;; Return value:  Size  Location     Type
 40160 ;;                  4   62[BANK0 ] unsigned long 
 40161 ;; Registers used:
 40162 ;;		wreg, status,2, status,0
 40163 ;; Tracked objects:
 40164 ;;		On entry : 0/0
 40165 ;;		On exit  : 0/0
 40166 ;;		Unchanged: 0/0
 40167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40168 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40169 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40170 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40171 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40172 ;;Total ram usage:       12 bytes
 40173 ;; Hardware stack levels used:    1
 40174 ;; Hardware stack levels required when called:    7
 40175 ;; This function calls:
 40176 ;;		Nothing
 40177 ;; This function is called by:
 40178 ;;		_RADIO_WriteConfiguration
 40179 ;;		_RADIO_TxDone
 40180 ;;		_RADIO_FSKPacketSent
 40181 ;;		_LORAWAN_TxDone
 40182 ;;		_ExecuteNewChannel
 40183 ;;		_ExecuteRxParamSetupReq
 40184 ;;		_UpdateCfList
 40185 ;;		_LORAWAN_LinkCheckConfigure
 40186 ;;		_rand
 40187 ;;		_LORAWAN_Pause
 40188 ;; This function uses a non-reentrant model
 40189 ;;
 40190                           
 40191                           	psect	text184
 40192  008D04                     __ptext184:
 40193                           	opt stack 0
 40194  008D04                     ___lmul:
 40195                           	opt stack 17
 40196                           
 40197                           ;incstack = 0
 40198  008D04  0E00               	movlw	0
 40199  008D06  0100               	movlb	0	; () banked
 40200  008D08  6FA6               	movwf	___lmul@product& (0+255),b
 40201  008D0A  0E00               	movlw	0
 40202  008D0C  6FA7               	movwf	(___lmul@product+1)& (0+255),b
 40203  008D0E  0E00               	movlw	0
 40204  008D10  6FA8               	movwf	(___lmul@product+2)& (0+255),b
 40205  008D12  0E00               	movlw	0
 40206  008D14  6FA9               	movwf	(___lmul@product+3)& (0+255),b
 40207  008D16                     l13295:
 40208                           
 40209                           ; BSR set to: 0
 40210  008D16  0100               	movlb	0	; () banked
 40211  008D18  A19E               	btfss	___lmul@multiplier& (0+255),0,b
 40212  008D1A  D010               	goto	l13299
 40213                           
 40214                           ; BSR set to: 0
 40215  008D1C  0100               	movlb	0	; () banked
 40216  008D1E  51A2               	movf	___lmul@multiplicand& (0+255),w,b
 40217  008D20  0100               	movlb	0	; () banked
 40218  008D22  27A6               	addwf	___lmul@product& (0+255),f,b
 40219  008D24  0100               	movlb	0	; () banked
 40220  008D26  51A3               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 40221  008D28  0100               	movlb	0	; () banked
 40222  008D2A  23A7               	addwfc	(___lmul@product+1)& (0+255),f,b
 40223  008D2C  0100               	movlb	0	; () banked
 40224  008D2E  51A4               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 40225  008D30  0100               	movlb	0	; () banked
 40226  008D32  23A8               	addwfc	(___lmul@product+2)& (0+255),f,b
 40227  008D34  0100               	movlb	0	; () banked
 40228  008D36  51A5               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 40229  008D38  0100               	movlb	0	; () banked
 40230  008D3A  23A9               	addwfc	(___lmul@product+3)& (0+255),f,b
 40231  008D3C                     l13299:
 40232                           
 40233                           ; BSR set to: 0
 40234  008D3C  0100               	movlb	0	; () banked
 40235  008D3E  90D8               	bcf	status,0,c
 40236  008D40  37A2               	rlcf	___lmul@multiplicand& (0+255),f,b
 40237  008D42  37A3               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 40238  008D44  37A4               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 40239  008D46  37A5               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 40240                           
 40241                           ; BSR set to: 0
 40242  008D48  0100               	movlb	0	; () banked
 40243  008D4A  90D8               	bcf	status,0,c
 40244  008D4C  33A1               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 40245  008D4E  33A0               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 40246  008D50  339F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 40247  008D52  339E               	rrcf	___lmul@multiplier& (0+255),f,b
 40248  008D54  0100               	movlb	0	; () banked
 40249  008D56  519E               	movf	___lmul@multiplier& (0+255),w,b
 40250  008D58  0100               	movlb	0	; () banked
 40251  008D5A  119F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 40252  008D5C  0100               	movlb	0	; () banked
 40253  008D5E  11A0               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 40254  008D60  0100               	movlb	0	; () banked
 40255  008D62  11A1               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 40256  008D64  A4D8               	btfss	status,2,c
 40257  008D66  D7D7               	goto	l13295
 40258                           
 40259                           ; BSR set to: 0
 40260  008D68  C0A6  F09E         	movff	___lmul@product,?___lmul
 40261  008D6C  C0A7  F09F         	movff	___lmul@product+1,?___lmul+1
 40262  008D70  C0A8  F0A0         	movff	___lmul@product+2,?___lmul+2
 40263  008D74  C0A9  F0A1         	movff	___lmul@product+3,?___lmul+3
 40264                           
 40265                           ; BSR set to: 0
 40266  008D78  0012               	return		;funcret
 40267  008D7A                     __end_of___lmul:
 40268                           	opt stack 0
 40269                           tosu	equ	0xFFF
 40270                           tosh	equ	0xFFE
 40271                           tosl	equ	0xFFD
 40272                           pclath	equ	0xFFA
 40273                           tblptru	equ	0xFF8
 40274                           tblptrh	equ	0xFF7
 40275                           tblptrl	equ	0xFF6
 40276                           tablat	equ	0xFF5
 40277                           prodh	equ	0xFF4
 40278                           prodl	equ	0xFF3
 40279                           intcon	equ	0xFF2
 40280                           intcon2	equ	0xFF1
 40281                           intcon3	equ	0xFF0
 40282                           indf0	equ	0xFEF
 40283                           postinc0	equ	0xFEE
 40284                           plusw0	equ	0xFEB
 40285                           fsr0h	equ	0xFEA
 40286                           fsr0l	equ	0xFE9
 40287                           wreg	equ	0xFE8
 40288                           postinc1	equ	0xFE6
 40289                           postdec1	equ	0xFE5
 40290                           plusw1	equ	0xFE3
 40291                           fsr1h	equ	0xFE2
 40292                           fsr1l	equ	0xFE1
 40293                           indf2	equ	0xFDF
 40294                           postinc2	equ	0xFDE
 40295                           postdec2	equ	0xFDD
 40296                           plusw2	equ	0xFDB
 40297                           fsr2h	equ	0xFDA
 40298                           fsr2l	equ	0xFD9
 40299                           status	equ	0xFD8
 40300                           
 40301 ;; *************** function ___lldiv *****************
 40302 ;; Defined at:
 40303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 40304 ;; Parameters:    Size  Location     Type
 40305 ;;  dividend        4    4[BANK0 ] unsigned long 
 40306 ;;  divisor         4    8[BANK0 ] unsigned long 
 40307 ;; Auto vars:     Size  Location     Type
 40308 ;;  quotient        4   12[BANK0 ] unsigned long 
 40309 ;;  counter         1   16[BANK0 ] unsigned char 
 40310 ;; Return value:  Size  Location     Type
 40311 ;;                  4    4[BANK0 ] unsigned long 
 40312 ;; Registers used:
 40313 ;;		wreg, status,2, status,0
 40314 ;; Tracked objects:
 40315 ;;		On entry : 0/0
 40316 ;;		On exit  : 0/0
 40317 ;;		Unchanged: 0/0
 40318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40319 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40320 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40322 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40323 ;;Total ram usage:       13 bytes
 40324 ;; Hardware stack levels used:    1
 40325 ;; Hardware stack levels required when called:    7
 40326 ;; This function calls:
 40327 ;;		Nothing
 40328 ;; This function is called by:
 40329 ;;		_RADIO_WriteFrequency
 40330 ;;		_RADIO_WriteFSKFrequencyDeviation
 40331 ;;		_RADIO_WriteFSKBitRate
 40332 ;;		_RADIO_Transmit
 40333 ;;		_RADIO_ReceiveStart
 40334 ;;		_LORAWAN_TxDone
 40335 ;;		_LORAWAN_RxTimeout
 40336 ;;		_StartReTxTimer
 40337 ;;		_DutyCycleCallback
 40338 ;;		_LORAWAN_LinkCheckConfigure
 40339 ;;		_LORAWAN_LinkCheckCallback
 40340 ;;		_UpdateRetransmissionAckTimeoutState
 40341 ;;		_UpdateJoinSuccessState
 40342 ;; This function uses a non-reentrant model
 40343 ;;
 40344                           
 40345                           	psect	text185
 40346  007E10                     __ptext185:
 40347                           	opt stack 0
 40348  007E10                     ___lldiv:
 40349                           	opt stack 20
 40350                           
 40351                           ; BSR set to: 0
 40352                           ;incstack = 0
 40353  007E10  0E00               	movlw	0
 40354  007E12  0100               	movlb	0	; () banked
 40355  007E14  6F6C               	movwf	___lldiv@quotient& (0+255),b
 40356  007E16  0E00               	movlw	0
 40357  007E18  6F6D               	movwf	(___lldiv@quotient+1)& (0+255),b
 40358  007E1A  0E00               	movlw	0
 40359  007E1C  6F6E               	movwf	(___lldiv@quotient+2)& (0+255),b
 40360  007E1E  0E00               	movlw	0
 40361  007E20  6F6F               	movwf	(___lldiv@quotient+3)& (0+255),b
 40362                           
 40363                           ; BSR set to: 0
 40364  007E22  0100               	movlb	0	; () banked
 40365  007E24  5168               	movf	___lldiv@divisor& (0+255),w,b
 40366  007E26  0100               	movlb	0	; () banked
 40367  007E28  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 40368  007E2A  0100               	movlb	0	; () banked
 40369  007E2C  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 40370  007E2E  0100               	movlb	0	; () banked
 40371  007E30  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 40372  007E32  B4D8               	btfsc	status,2,c
 40373  007E34  D042               	goto	l3039
 40374                           
 40375                           ; BSR set to: 0
 40376  007E36  0E01               	movlw	1
 40377  007E38  0100               	movlb	0	; () banked
 40378  007E3A  6F70               	movwf	___lldiv@counter& (0+255),b
 40379  007E3C  D008               	goto	l13311
 40380  007E3E                     l13309:
 40381                           
 40382                           ; BSR set to: 0
 40383  007E3E  0100               	movlb	0	; () banked
 40384  007E40  90D8               	bcf	status,0,c
 40385  007E42  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 40386  007E44  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 40387  007E46  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 40388  007E48  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 40389  007E4A  0100               	movlb	0	; () banked
 40390  007E4C  2B70               	incf	___lldiv@counter& (0+255),f,b
 40391  007E4E                     l13311:
 40392                           
 40393                           ; BSR set to: 0
 40394  007E4E  0100               	movlb	0	; () banked
 40395  007E50  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 40396  007E52  D7F5               	goto	l13309
 40397  007E54                     l13313:
 40398                           
 40399                           ; BSR set to: 0
 40400  007E54  0100               	movlb	0	; () banked
 40401  007E56  90D8               	bcf	status,0,c
 40402  007E58  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 40403  007E5A  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 40404  007E5C  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 40405  007E5E  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 40406                           
 40407                           ; BSR set to: 0
 40408  007E60  0100               	movlb	0	; () banked
 40409  007E62  5168               	movf	___lldiv@divisor& (0+255),w,b
 40410  007E64  0100               	movlb	0	; () banked
 40411  007E66  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 40412  007E68  0100               	movlb	0	; () banked
 40413  007E6A  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 40414  007E6C  0100               	movlb	0	; () banked
 40415  007E6E  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 40416  007E70  0100               	movlb	0	; () banked
 40417  007E72  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 40418  007E74  0100               	movlb	0	; () banked
 40419  007E76  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 40420  007E78  0100               	movlb	0	; () banked
 40421  007E7A  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 40422  007E7C  0100               	movlb	0	; () banked
 40423  007E7E  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 40424  007E80  A0D8               	btfss	status,0,c
 40425  007E82  D012               	goto	l13321
 40426                           
 40427                           ; BSR set to: 0
 40428  007E84  0100               	movlb	0	; () banked
 40429  007E86  5168               	movf	___lldiv@divisor& (0+255),w,b
 40430  007E88  0100               	movlb	0	; () banked
 40431  007E8A  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 40432  007E8C  0100               	movlb	0	; () banked
 40433  007E8E  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 40434  007E90  0100               	movlb	0	; () banked
 40435  007E92  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 40436  007E94  0100               	movlb	0	; () banked
 40437  007E96  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 40438  007E98  0100               	movlb	0	; () banked
 40439  007E9A  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 40440  007E9C  0100               	movlb	0	; () banked
 40441  007E9E  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 40442  007EA0  0100               	movlb	0	; () banked
 40443  007EA2  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 40444                           
 40445                           ; BSR set to: 0
 40446  007EA4  0100               	movlb	0	; () banked
 40447  007EA6  816C               	bsf	___lldiv@quotient& (0+255),0,b
 40448  007EA8                     l13321:
 40449                           
 40450                           ; BSR set to: 0
 40451  007EA8  0100               	movlb	0	; () banked
 40452  007EAA  90D8               	bcf	status,0,c
 40453  007EAC  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 40454  007EAE  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 40455  007EB0  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 40456  007EB2  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 40457                           
 40458                           ; BSR set to: 0
 40459  007EB4  0100               	movlb	0	; () banked
 40460  007EB6  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 40461  007EB8  D7CD               	goto	l13313
 40462  007EBA                     l3039:
 40463                           
 40464                           ; BSR set to: 0
 40465  007EBA  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 40466  007EBE  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 40467  007EC2  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 40468  007EC6  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 40469                           
 40470                           ; BSR set to: 0
 40471  007ECA  0012               	return		;funcret
 40472  007ECC                     __end_of___lldiv:
 40473                           	opt stack 0
 40474                           tosu	equ	0xFFF
 40475                           tosh	equ	0xFFE
 40476                           tosl	equ	0xFFD
 40477                           pclath	equ	0xFFA
 40478                           tblptru	equ	0xFF8
 40479                           tblptrh	equ	0xFF7
 40480                           tblptrl	equ	0xFF6
 40481                           tablat	equ	0xFF5
 40482                           prodh	equ	0xFF4
 40483                           prodl	equ	0xFF3
 40484                           intcon	equ	0xFF2
 40485                           intcon2	equ	0xFF1
 40486                           intcon3	equ	0xFF0
 40487                           indf0	equ	0xFEF
 40488                           postinc0	equ	0xFEE
 40489                           plusw0	equ	0xFEB
 40490                           fsr0h	equ	0xFEA
 40491                           fsr0l	equ	0xFE9
 40492                           wreg	equ	0xFE8
 40493                           postinc1	equ	0xFE6
 40494                           postdec1	equ	0xFE5
 40495                           plusw1	equ	0xFE3
 40496                           fsr1h	equ	0xFE2
 40497                           fsr1l	equ	0xFE1
 40498                           indf2	equ	0xFDF
 40499                           postinc2	equ	0xFDE
 40500                           postdec2	equ	0xFDD
 40501                           plusw2	equ	0xFDB
 40502                           fsr2h	equ	0xFDA
 40503                           fsr2l	equ	0xFD9
 40504                           status	equ	0xFD8
 40505                           
 40506 ;; *************** function _SwTimerStop *****************
 40507 ;; Defined at:
 40508 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40509 ;; Parameters:    Size  Location     Type
 40510 ;;  timerId         1    wreg     unsigned char 
 40511 ;; Auto vars:     Size  Location     Type
 40512 ;;  timerId         1    4[BANK0 ] unsigned char 
 40513 ;; Return value:  Size  Location     Type
 40514 ;;                  1    wreg      void 
 40515 ;; Registers used:
 40516 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40517 ;; Tracked objects:
 40518 ;;		On entry : 0/0
 40519 ;;		On exit  : 0/0
 40520 ;;		Unchanged: 0/0
 40521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40522 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40523 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40524 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40525 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40526 ;;Total ram usage:        1 bytes
 40527 ;; Hardware stack levels used:    1
 40528 ;; Hardware stack levels required when called:    7
 40529 ;; This function calls:
 40530 ;;		Nothing
 40531 ;; This function is called by:
 40532 ;;		_RADIO_Init
 40533 ;;		_RADIO_Transmit
 40534 ;;		_RADIO_RxDone
 40535 ;;		_RADIO_FSKPayloadReady
 40536 ;;		_RADIO_RxTimeout
 40537 ;;		_RADIO_TxDone
 40538 ;;		_RADIO_FSKPacketSent
 40539 ;;		_RADIO_RxFSKTimeout
 40540 ;;		_LORAWAN_TxDone
 40541 ;;		_StopAllSoftwareTimers
 40542 ;;		_LORAWAN_LinkCheckConfigure
 40543 ;;		_LORAWAN_RxDone
 40544 ;; This function uses a non-reentrant model
 40545 ;;
 40546                           
 40547                           	psect	text186
 40548  009E72                     __ptext186:
 40549                           	opt stack 0
 40550  009E72                     _SwTimerStop:
 40551                           	opt stack 20
 40552                           
 40553                           ; BSR set to: 0
 40554                           ;incstack = 0
 40555                           ;SwTimerStop@timerId stored from wreg
 40556  009E72  0100               	movlb	0	; () banked
 40557  009E74  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 40558                           
 40559                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 40560  009E76  9EF2               	bcf	intcon,7,c	;volatile
 40561                           
 40562                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 40563  009E78  0100               	movlb	0	; () banked
 40564  009E7A  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 40565  009E7C  0D08               	mullw	8
 40566  009E7E  0E04               	movlw	4
 40567  009E80  26F3               	addwf	prodl,f,c
 40568  009E82  0E00               	movlw	0
 40569  009E84  22F4               	addwfc	prodh,f,c
 40570  009E86  0E00               	movlw	low _swTimers
 40571  009E88  24F3               	addwf	prodl,w,c
 40572  009E8A  6ED9               	movwf	fsr2l,c
 40573  009E8C  0E03               	movlw	high _swTimers
 40574  009E8E  20F4               	addwfc	prodh,w,c
 40575  009E90  6EDA               	movwf	fsr2h,c
 40576  009E92  0E00               	movlw	0
 40577  009E94  6EDF               	movwf	indf2,c
 40578                           
 40579                           ; BSR set to: 0
 40580                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 40581  009E96  8EF2               	bsf	intcon,7,c	;volatile
 40582                           
 40583                           ; BSR set to: 0
 40584  009E98  0012               	return		;funcret
 40585  009E9A                     __end_of_SwTimerStop:
 40586                           	opt stack 0
 40587                           tosu	equ	0xFFF
 40588                           tosh	equ	0xFFE
 40589                           tosl	equ	0xFFD
 40590                           pclath	equ	0xFFA
 40591                           tblptru	equ	0xFF8
 40592                           tblptrh	equ	0xFF7
 40593                           tblptrl	equ	0xFF6
 40594                           tablat	equ	0xFF5
 40595                           prodh	equ	0xFF4
 40596                           prodl	equ	0xFF3
 40597                           intcon	equ	0xFF2
 40598                           intcon2	equ	0xFF1
 40599                           intcon3	equ	0xFF0
 40600                           indf0	equ	0xFEF
 40601                           postinc0	equ	0xFEE
 40602                           plusw0	equ	0xFEB
 40603                           fsr0h	equ	0xFEA
 40604                           fsr0l	equ	0xFE9
 40605                           wreg	equ	0xFE8
 40606                           postinc1	equ	0xFE6
 40607                           postdec1	equ	0xFE5
 40608                           plusw1	equ	0xFE3
 40609                           fsr1h	equ	0xFE2
 40610                           fsr1l	equ	0xFE1
 40611                           indf2	equ	0xFDF
 40612                           postinc2	equ	0xFDE
 40613                           postdec2	equ	0xFDD
 40614                           plusw2	equ	0xFDB
 40615                           fsr2h	equ	0xFDA
 40616                           fsr2l	equ	0xFD9
 40617                           status	equ	0xFD8
 40618                           
 40619 ;; *************** function _SwTimerStart *****************
 40620 ;; Defined at:
 40621 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40622 ;; Parameters:    Size  Location     Type
 40623 ;;  timerId         1    wreg     unsigned char 
 40624 ;; Auto vars:     Size  Location     Type
 40625 ;;  timerId         1   61[BANK0 ] unsigned char 
 40626 ;;  ticksRemaini    4   57[BANK0 ] unsigned long 
 40627 ;; Return value:  Size  Location     Type
 40628 ;;                  1    wreg      void 
 40629 ;; Registers used:
 40630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40631 ;; Tracked objects:
 40632 ;;		On entry : 0/0
 40633 ;;		On exit  : 0/0
 40634 ;;		Unchanged: 0/0
 40635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40636 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40637 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40638 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40639 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40640 ;;Total ram usage:        9 bytes
 40641 ;; Hardware stack levels used:    1
 40642 ;; Hardware stack levels required when called:   10
 40643 ;; This function calls:
 40644 ;;		_SwTimersInterrupt
 40645 ;;		_TMR_OverrideRemaining
 40646 ;; This function is called by:
 40647 ;;		_RADIO_Transmit
 40648 ;;		_RADIO_ReceiveStart
 40649 ;;		_LORAWAN_TxDone
 40650 ;;		_LORAWAN_RxTimeout
 40651 ;;		_StartReTxTimer
 40652 ;;		_DutyCycleCallback
 40653 ;;		_LORAWAN_Join
 40654 ;;		_LORAWAN_LinkCheckConfigure
 40655 ;;		_LORAWAN_LinkCheckCallback
 40656 ;;		_UpdateRetransmissionAckTimeoutState
 40657 ;;		_UpdateJoinSuccessState
 40658 ;; This function uses a non-reentrant model
 40659 ;;
 40660                           
 40661                           	psect	text187
 40662  008396                     __ptext187:
 40663                           	opt stack 0
 40664  008396                     _SwTimerStart:
 40665                           	opt stack 17
 40666                           
 40667                           ; BSR set to: 0
 40668                           ;incstack = 0
 40669                           ;SwTimerStart@timerId stored from wreg
 40670  008396  0100               	movlb	0	; () banked
 40671  008398  6F9D               	movwf	SwTimerStart@timerId& (0+255),b
 40672                           
 40673                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 40674                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 40675  00839A  9EF2               	bcf	intcon,7,c	;volatile
 40676                           
 40677                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 40678  00839C  ECA9  F036         	call	_SwTimersInterrupt	;wreg free
 40679  0083A0  C084  F099         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 40680  0083A4  C085  F09A         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 40681  0083A8  C086  F09B         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 40682  0083AC  C087  F09C         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 40683                           
 40684                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 40685  0083B0  0100               	movlb	0	; () banked
 40686  0083B2  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40687  0083B4  0D08               	mullw	8
 40688  0083B6  0E00               	movlw	low _swTimers
 40689  0083B8  24F3               	addwf	prodl,w,c
 40690  0083BA  6ED9               	movwf	fsr2l,c
 40691  0083BC  0E03               	movlw	high _swTimers
 40692  0083BE  20F4               	addwfc	prodh,w,c
 40693  0083C0  6EDA               	movwf	fsr2h,c
 40694  0083C2  0100               	movlb	0	; () banked
 40695  0083C4  5199               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 40696  0083C6  5CDE               	subwf	postinc2,w,c
 40697  0083C8  0100               	movlb	0	; () banked
 40698  0083CA  519A               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 40699  0083CC  58DE               	subwfb	postinc2,w,c
 40700  0083CE  0100               	movlb	0	; () banked
 40701  0083D0  519B               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 40702  0083D2  58DE               	subwfb	postinc2,w,c
 40703  0083D4  0100               	movlb	0	; () banked
 40704  0083D6  519C               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 40705  0083D8  58DE               	subwfb	postinc2,w,c
 40706  0083DA  B0D8               	btfsc	status,0,c
 40707  0083DC  D011               	goto	l13663
 40708                           
 40709                           ; BSR set to: 0
 40710                           ;sw_timer.c: 225: {
 40711                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 40712  0083DE  0100               	movlb	0	; () banked
 40713  0083E0  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40714  0083E2  0D08               	mullw	8
 40715  0083E4  0E00               	movlw	low _swTimers
 40716  0083E6  24F3               	addwf	prodl,w,c
 40717  0083E8  6ED9               	movwf	fsr2l,c
 40718  0083EA  0E03               	movlw	high _swTimers
 40719  0083EC  20F4               	addwfc	prodh,w,c
 40720  0083EE  6EDA               	movwf	fsr2h,c
 40721  0083F0  CFDE F099          	movff	postinc2,SwTimerStart@ticksRemaining
 40722  0083F4  CFDE F09A          	movff	postinc2,SwTimerStart@ticksRemaining+1
 40723  0083F8  CFDE F09B          	movff	postinc2,SwTimerStart@ticksRemaining+2
 40724  0083FC  CFDE F09C          	movff	postinc2,SwTimerStart@ticksRemaining+3
 40725  008400                     l13663:
 40726                           
 40727                           ; BSR set to: 0
 40728                           ;sw_timer.c: 227: }
 40729                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 40730  008400  C099  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 40731  008404  C09A  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 40732  008408  C09B  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 40733  00840C  C09C  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 40734  008410  EC26  F041         	call	_TMR_OverrideRemaining	;wreg free
 40735                           
 40736                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 40737  008414  0100               	movlb	0	; () banked
 40738  008416  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40739  008418  0D08               	mullw	8
 40740  00841A  0E04               	movlw	4
 40741  00841C  26F3               	addwf	prodl,f,c
 40742  00841E  0E00               	movlw	0
 40743  008420  22F4               	addwfc	prodh,f,c
 40744  008422  0E00               	movlw	low _swTimers
 40745  008424  24F3               	addwf	prodl,w,c
 40746  008426  6ED9               	movwf	fsr2l,c
 40747  008428  0E03               	movlw	high _swTimers
 40748  00842A  20F4               	addwfc	prodh,w,c
 40749  00842C  6EDA               	movwf	fsr2h,c
 40750  00842E  0E01               	movlw	1
 40751  008430  6EDF               	movwf	indf2,c
 40752                           
 40753                           ; BSR set to: 0
 40754                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 40755  008432  8EF2               	bsf	intcon,7,c	;volatile
 40756                           
 40757                           ; BSR set to: 0
 40758  008434  0012               	return		;funcret
 40759  008436                     __end_of_SwTimerStart:
 40760                           	opt stack 0
 40761                           tosu	equ	0xFFF
 40762                           tosh	equ	0xFFE
 40763                           tosl	equ	0xFFD
 40764                           pclath	equ	0xFFA
 40765                           tblptru	equ	0xFF8
 40766                           tblptrh	equ	0xFF7
 40767                           tblptrl	equ	0xFF6
 40768                           tablat	equ	0xFF5
 40769                           prodh	equ	0xFF4
 40770                           prodl	equ	0xFF3
 40771                           intcon	equ	0xFF2
 40772                           intcon2	equ	0xFF1
 40773                           intcon3	equ	0xFF0
 40774                           indf0	equ	0xFEF
 40775                           postinc0	equ	0xFEE
 40776                           plusw0	equ	0xFEB
 40777                           fsr0h	equ	0xFEA
 40778                           fsr0l	equ	0xFE9
 40779                           wreg	equ	0xFE8
 40780                           postinc1	equ	0xFE6
 40781                           postdec1	equ	0xFE5
 40782                           plusw1	equ	0xFE3
 40783                           fsr1h	equ	0xFE2
 40784                           fsr1l	equ	0xFE1
 40785                           indf2	equ	0xFDF
 40786                           postinc2	equ	0xFDE
 40787                           postdec2	equ	0xFDD
 40788                           plusw2	equ	0xFDB
 40789                           fsr2h	equ	0xFDA
 40790                           fsr2l	equ	0xFD9
 40791                           status	equ	0xFD8
 40792                           
 40793 ;; *************** function _TMR_OverrideRemaining *****************
 40794 ;; Defined at:
 40795 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40796 ;; Parameters:    Size  Location     Type
 40797 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 40798 ;; Auto vars:     Size  Location     Type
 40799 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 40800 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 40801 ;; Return value:  Size  Location     Type
 40802 ;;                  1    wreg      void 
 40803 ;; Registers used:
 40804 ;;		wreg, status,2, status,0, cstack
 40805 ;; Tracked objects:
 40806 ;;		On entry : 0/0
 40807 ;;		On exit  : 0/0
 40808 ;;		Unchanged: 0/0
 40809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40811 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40812 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40813 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40814 ;;Total ram usage:       10 bytes
 40815 ;; Hardware stack levels used:    1
 40816 ;; Hardware stack levels required when called:    9
 40817 ;; This function calls:
 40818 ;;		_TMR_SwapTimer
 40819 ;; This function is called by:
 40820 ;;		_SwTimerStart
 40821 ;; This function uses a non-reentrant model
 40822 ;;
 40823                           
 40824                           	psect	text188
 40825  00824C                     __ptext188:
 40826                           	opt stack 0
 40827  00824C                     _TMR_OverrideRemaining:
 40828                           	opt stack 17
 40829                           
 40830                           ;sw_timer.c: 67: uint16_t tmrVal;
 40831                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 40832                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 40833                           
 40834                           ; BSR set to: 0
 40835                           ;incstack = 0
 40836  00824C  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40837  00824E  105C               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40838  008250  105B               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40839  008252  E104               	bnz	u14610
 40840  008254  0E0B               	movlw	11
 40841  008256  5C5A               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 40842  008258  A0D8               	btfss	status,0,c
 40843  00825A  0012               	return	
 40844  00825C                     u14610:
 40845                           
 40846                           ;sw_timer.c: 72: {
 40847                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 40848  00825C  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 40849  00825E  0100               	movlb	0	; () banked
 40850  008260  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 40851  008262  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40852  008264  0100               	movlb	0	; () banked
 40853  008266  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 40854  008268  505C               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40855  00826A  0100               	movlb	0	; () banked
 40856  00826C  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 40857  00826E  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40858  008270  0100               	movlb	0	; () banked
 40859  008272  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 40860  008274  B0D8               	btfsc	status,0,c
 40861  008276  0012               	return	
 40862                           
 40863                           ; BSR set to: 0
 40864                           ;sw_timer.c: 74: {
 40865                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 40866  008278  C06E  F05A         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 40867  00827C  C06F  F05B         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 40868  008280  C070  F05C         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 40869  008284  C071  F05D         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 40870                           
 40871                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 40872  008288  C0F8  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 40873  00828C  C0F9  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 40874                           
 40875                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 40876  008290  C06E  F072         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 40877  008294  C06F  F073         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 40878  008298  0100               	movlb	0	; () banked
 40879  00829A  1F72               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 40880  00829C  1F73               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40881  00829E  4B72               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 40882  0082A0  2B73               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40883  0082A2  C072  F0F8         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 40884  0082A6  C073  F0F9         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 40885                           
 40886                           ; BSR set to: 0
 40887                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 40888  0082AA  C0F8  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 40889  0082AE  C0F9  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 40890  0082B2  ECF6  F04B         	call	_TMR_SwapTimer	;wreg free
 40891  0082B6  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 40892  0082BA  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 40893                           
 40894                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 40895  0082BE  C076  F072         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 40896  0082C2  C077  F073         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 40897  0082C6  0100               	movlb	0	; () banked
 40898  0082C8  1F72               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 40899  0082CA  1F73               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40900  0082CC  4B72               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 40901  0082CE  2B73               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40902  0082D0  0100               	movlb	0	; () banked
 40903  0082D2  5174               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 40904  0082D4  0100               	movlb	0	; () banked
 40905  0082D6  2772               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 40906  0082D8  0100               	movlb	0	; () banked
 40907  0082DA  5175               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 40908  0082DC  0100               	movlb	0	; () banked
 40909  0082DE  2373               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40910  0082E0  0100               	movlb	0	; () banked
 40911  0082E2  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 40912  0082E4  2640               	addwf	_ticksAdded,f,c	;volatile
 40913  0082E6  0100               	movlb	0	; () banked
 40914  0082E8  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 40915  0082EA  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 40916  0082EC  0E00               	movlw	0
 40917  0082EE  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 40918  0082F0  0E00               	movlw	0
 40919  0082F2  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 40920                           
 40921                           ; BSR set to: 0
 40922  0082F4  0012               	return	
 40923  0082F6                     __end_of_TMR_OverrideRemaining:
 40924                           	opt stack 0
 40925                           tosu	equ	0xFFF
 40926                           tosh	equ	0xFFE
 40927                           tosl	equ	0xFFD
 40928                           pclath	equ	0xFFA
 40929                           tblptru	equ	0xFF8
 40930                           tblptrh	equ	0xFF7
 40931                           tblptrl	equ	0xFF6
 40932                           tablat	equ	0xFF5
 40933                           prodh	equ	0xFF4
 40934                           prodl	equ	0xFF3
 40935                           intcon	equ	0xFF2
 40936                           intcon2	equ	0xFF1
 40937                           intcon3	equ	0xFF0
 40938                           indf0	equ	0xFEF
 40939                           postinc0	equ	0xFEE
 40940                           plusw0	equ	0xFEB
 40941                           fsr0h	equ	0xFEA
 40942                           fsr0l	equ	0xFE9
 40943                           wreg	equ	0xFE8
 40944                           postinc1	equ	0xFE6
 40945                           postdec1	equ	0xFE5
 40946                           plusw1	equ	0xFE3
 40947                           fsr1h	equ	0xFE2
 40948                           fsr1l	equ	0xFE1
 40949                           indf2	equ	0xFDF
 40950                           postinc2	equ	0xFDE
 40951                           postdec2	equ	0xFDD
 40952                           plusw2	equ	0xFDB
 40953                           fsr2h	equ	0xFDA
 40954                           fsr2l	equ	0xFD9
 40955                           status	equ	0xFD8
 40956                           
 40957 ;; *************** function _TMR_SwapTimer *****************
 40958 ;; Defined at:
 40959 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40960 ;; Parameters:    Size  Location     Type
 40961 ;;  timerVal        2   12[BANK0 ] unsigned int 
 40962 ;; Auto vars:     Size  Location     Type
 40963 ;;		None
 40964 ;; Return value:  Size  Location     Type
 40965 ;;                  2   12[BANK0 ] unsigned int 
 40966 ;; Registers used:
 40967 ;;		wreg, status,2, status,0, cstack
 40968 ;; Tracked objects:
 40969 ;;		On entry : 0/0
 40970 ;;		On exit  : 0/0
 40971 ;;		Unchanged: 0/0
 40972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40977 ;;Total ram usage:        2 bytes
 40978 ;; Hardware stack levels used:    1
 40979 ;; Hardware stack levels required when called:    8
 40980 ;; This function calls:
 40981 ;;		_TMR1_ReadTimer
 40982 ;;		_TMR1_WriteTimer
 40983 ;; This function is called by:
 40984 ;;		_TMR_OverrideRemaining
 40985 ;; This function uses a non-reentrant model
 40986 ;;
 40987                           
 40988                           	psect	text189
 40989  0097EC                     __ptext189:
 40990                           	opt stack 0
 40991  0097EC                     _TMR_SwapTimer:
 40992                           	opt stack 17
 40993                           
 40994                           ;sw_timer.c: 114: static uint16_t oldVal;
 40995                           ;sw_timer.c: 115: static uint16_t retVal;
 40996                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 40997                           
 40998                           ;incstack = 0
 40999  0097EC  EC4D  F04F         	call	_TMR1_ReadTimer	;wreg free
 41000  0097F0  C064  F046         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 41001  0097F4  C065  F047         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 41002  0097F8                     l13121:
 41003  0097F8  EC4D  F04F         	call	_TMR1_ReadTimer	;wreg free
 41004  0097FC  5046               	movf	TMR_SwapTimer@oldVal,w,c
 41005  0097FE  0100               	movlb	0	; () banked
 41006  009800  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 41007  009802  E105               	bnz	l13123
 41008  009804  5047               	movf	TMR_SwapTimer@oldVal+1,w,c
 41009  009806  0100               	movlb	0	; () banked
 41010  009808  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 41011  00980A  B4D8               	btfsc	status,2,c
 41012  00980C  D7F5               	goto	l13121
 41013  00980E                     l13123:
 41014                           
 41015                           ; BSR set to: 0
 41016                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 41017  00980E  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 41018  009812  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 41019  009816  EC0E  F050         	call	_TMR1_WriteTimer	;wreg free
 41020                           
 41021                           ;sw_timer.c: 128: oldVal++;
 41022  00981A  4A46               	infsnz	TMR_SwapTimer@oldVal,f,c
 41023  00981C  2A47               	incf	TMR_SwapTimer@oldVal+1,f,c
 41024                           
 41025                           ;sw_timer.c: 130: retVal = oldVal;
 41026  00981E  C046  F048         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 41027  009822  C047  F049         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 41028                           
 41029                           ;sw_timer.c: 132: return retVal;
 41030  009826  C048  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 41031  00982A  C049  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 41032  00982E  0012               	return	
 41033  009830                     __end_of_TMR_SwapTimer:
 41034                           	opt stack 0
 41035                           tosu	equ	0xFFF
 41036                           tosh	equ	0xFFE
 41037                           tosl	equ	0xFFD
 41038                           pclath	equ	0xFFA
 41039                           tblptru	equ	0xFF8
 41040                           tblptrh	equ	0xFF7
 41041                           tblptrl	equ	0xFF6
 41042                           tablat	equ	0xFF5
 41043                           prodh	equ	0xFF4
 41044                           prodl	equ	0xFF3
 41045                           intcon	equ	0xFF2
 41046                           intcon2	equ	0xFF1
 41047                           intcon3	equ	0xFF0
 41048                           indf0	equ	0xFEF
 41049                           postinc0	equ	0xFEE
 41050                           plusw0	equ	0xFEB
 41051                           fsr0h	equ	0xFEA
 41052                           fsr0l	equ	0xFE9
 41053                           wreg	equ	0xFE8
 41054                           postinc1	equ	0xFE6
 41055                           postdec1	equ	0xFE5
 41056                           plusw1	equ	0xFE3
 41057                           fsr1h	equ	0xFE2
 41058                           fsr1l	equ	0xFE1
 41059                           indf2	equ	0xFDF
 41060                           postinc2	equ	0xFDE
 41061                           postdec2	equ	0xFDD
 41062                           plusw2	equ	0xFDB
 41063                           fsr2h	equ	0xFDA
 41064                           fsr2l	equ	0xFD9
 41065                           status	equ	0xFD8
 41066                           
 41067 ;; *************** function _TMR1_WriteTimer *****************
 41068 ;; Defined at:
 41069 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 41070 ;; Parameters:    Size  Location     Type
 41071 ;;  timerVal        2    4[BANK0 ] unsigned int 
 41072 ;; Auto vars:     Size  Location     Type
 41073 ;;		None
 41074 ;; Return value:  Size  Location     Type
 41075 ;;                  1    wreg      void 
 41076 ;; Registers used:
 41077 ;;		wreg, status,2
 41078 ;; Tracked objects:
 41079 ;;		On entry : 0/0
 41080 ;;		On exit  : 0/0
 41081 ;;		Unchanged: 0/0
 41082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41083 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41086 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41087 ;;Total ram usage:        2 bytes
 41088 ;; Hardware stack levels used:    1
 41089 ;; Hardware stack levels required when called:    7
 41090 ;; This function calls:
 41091 ;;		Nothing
 41092 ;; This function is called by:
 41093 ;;		_TMR_SwapTimer
 41094 ;; This function uses a non-reentrant model
 41095 ;;
 41096                           
 41097                           	psect	text190
 41098  00A01C                     __ptext190:
 41099                           	opt stack 0
 41100  00A01C                     _TMR1_WriteTimer:
 41101                           	opt stack 17
 41102                           
 41103                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 41104                           
 41105                           ;incstack = 0
 41106  00A01C  A4CD               	btfss	4045,2,c	;volatile
 41107  00A01E  D008               	goto	l13049
 41108                           
 41109                           ;tmr1.c: 123: {
 41110                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 41111  00A020  90CD               	bcf	4045,0,c	;volatile
 41112                           
 41113                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 41114  00A022  0100               	movlb	0	; () banked
 41115  00A024  5165               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 41116  00A026  6ECF               	movwf	4047,c	;volatile
 41117                           
 41118                           ; BSR set to: 0
 41119                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 41120  00A028  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 41121                           
 41122                           ; BSR set to: 0
 41123                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 41124  00A02C  80CD               	bsf	4045,0,c	;volatile
 41125                           
 41126                           ;tmr1.c: 133: }
 41127  00A02E  0012               	return	
 41128  00A030                     l13049:
 41129                           
 41130                           ;tmr1.c: 134: else
 41131                           ;tmr1.c: 135: {
 41132                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 41133  00A030  0100               	movlb	0	; () banked
 41134  00A032  5165               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 41135  00A034  6ECF               	movwf	4047,c	;volatile
 41136                           
 41137                           ; BSR set to: 0
 41138                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 41139  00A036  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 41140  00A03A  0012               	return	
 41141  00A03C                     __end_of_TMR1_WriteTimer:
 41142                           	opt stack 0
 41143                           tosu	equ	0xFFF
 41144                           tosh	equ	0xFFE
 41145                           tosl	equ	0xFFD
 41146                           pclath	equ	0xFFA
 41147                           tblptru	equ	0xFF8
 41148                           tblptrh	equ	0xFF7
 41149                           tblptrl	equ	0xFF6
 41150                           tablat	equ	0xFF5
 41151                           prodh	equ	0xFF4
 41152                           prodl	equ	0xFF3
 41153                           intcon	equ	0xFF2
 41154                           intcon2	equ	0xFF1
 41155                           intcon3	equ	0xFF0
 41156                           indf0	equ	0xFEF
 41157                           postinc0	equ	0xFEE
 41158                           plusw0	equ	0xFEB
 41159                           fsr0h	equ	0xFEA
 41160                           fsr0l	equ	0xFE9
 41161                           wreg	equ	0xFE8
 41162                           postinc1	equ	0xFE6
 41163                           postdec1	equ	0xFE5
 41164                           plusw1	equ	0xFE3
 41165                           fsr1h	equ	0xFE2
 41166                           fsr1l	equ	0xFE1
 41167                           indf2	equ	0xFDF
 41168                           postinc2	equ	0xFDE
 41169                           postdec2	equ	0xFDD
 41170                           plusw2	equ	0xFDB
 41171                           fsr2h	equ	0xFDA
 41172                           fsr2l	equ	0xFD9
 41173                           status	equ	0xFD8
 41174                           
 41175 ;; *************** function _SwTimersInterrupt *****************
 41176 ;; Defined at:
 41177 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41178 ;; Parameters:    Size  Location     Type
 41179 ;;		None
 41180 ;; Auto vars:     Size  Location     Type
 41181 ;;  ticksToNextT    4   48[BANK0 ] unsigned long 
 41182 ;;  timeElapsed     4   44[BANK0 ] unsigned long 
 41183 ;;  i               1   52[BANK0 ] unsigned char 
 41184 ;; Return value:  Size  Location     Type
 41185 ;;                  4   36[BANK0 ] unsigned long 
 41186 ;; Registers used:
 41187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41188 ;; Tracked objects:
 41189 ;;		On entry : 0/0
 41190 ;;		On exit  : 0/0
 41191 ;;		Unchanged: 0/0
 41192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41194 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41195 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41196 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41197 ;;Total ram usage:       17 bytes
 41198 ;; Hardware stack levels used:    1
 41199 ;; Hardware stack levels required when called:    9
 41200 ;; This function calls:
 41201 ;;		_TMR_GetDeltaTime
 41202 ;; This function is called by:
 41203 ;;		_SwTimerReadValue
 41204 ;;		_SwTimerStart
 41205 ;;		_SwTimersCanSleep
 41206 ;; This function uses a non-reentrant model
 41207 ;;
 41208                           
 41209                           	psect	text191
 41210  006D52                     __ptext191:
 41211                           	opt stack 0
 41212  006D52                     _SwTimersInterrupt:
 41213                           	opt stack 17
 41214                           
 41215                           ;sw_timer.c: 289: uint8_t i;
 41216                           ;sw_timer.c: 290: uint32_t timeElapsed;
 41217                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 41218                           
 41219                           ; BSR set to: 0
 41220                           ;incstack = 0
 41221  006D52  0100               	movlb	0	; () banked
 41222  006D54  6990               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 41223  006D56  6991               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 41224  006D58  6992               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 41225  006D5A  6993               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 41226                           
 41227                           ; BSR set to: 0
 41228                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 41229  006D5C  EC1F  F02B         	call	_TMR_GetDeltaTime	;wreg free
 41230  006D60  C06C  F08C         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 41231  006D64  C06D  F08D         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 41232  006D68  C06E  F08E         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 41233  006D6C  C06F  F08F         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 41234                           
 41235                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 41236  006D70  0E00               	movlw	0
 41237  006D72  0100               	movlb	0	; () banked
 41238  006D74  6F94               	movwf	SwTimersInterrupt@i& (0+255),b
 41239  006D76  D071               	goto	l13369
 41240  006D78                     l13357:
 41241                           
 41242                           ; BSR set to: 0
 41243                           ;sw_timer.c: 298: {
 41244                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 41245  006D78  0100               	movlb	0	; () banked
 41246  006D7A  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41247  006D7C  0D08               	mullw	8
 41248  006D7E  0E04               	movlw	4
 41249  006D80  26F3               	addwf	prodl,f,c
 41250  006D82  0E00               	movlw	0
 41251  006D84  22F4               	addwfc	prodh,f,c
 41252  006D86  0E00               	movlw	low _swTimers
 41253  006D88  24F3               	addwf	prodl,w,c
 41254  006D8A  6ED9               	movwf	fsr2l,c
 41255  006D8C  0E03               	movlw	high _swTimers
 41256  006D8E  20F4               	addwfc	prodh,w,c
 41257  006D90  6EDA               	movwf	fsr2h,c
 41258  006D92  04DE               	decf	postinc2,w,c
 41259  006D94  A4D8               	btfss	status,2,c
 41260  006D96  D05F               	goto	l13367
 41261                           
 41262                           ; BSR set to: 0
 41263                           ;sw_timer.c: 302: {
 41264                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 41265  006D98  0100               	movlb	0	; () banked
 41266  006D9A  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41267  006D9C  0D08               	mullw	8
 41268  006D9E  0E00               	movlw	low _swTimers
 41269  006DA0  24F3               	addwf	prodl,w,c
 41270  006DA2  6ED9               	movwf	fsr2l,c
 41271  006DA4  0E03               	movlw	high _swTimers
 41272  006DA6  20F4               	addwfc	prodh,w,c
 41273  006DA8  6EDA               	movwf	fsr2h,c
 41274  006DAA  50DE               	movf	postinc2,w,c
 41275  006DAC  0100               	movlb	0	; () banked
 41276  006DAE  5D8C               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 41277  006DB0  50DE               	movf	postinc2,w,c
 41278  006DB2  0100               	movlb	0	; () banked
 41279  006DB4  598D               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 41280  006DB6  50DE               	movf	postinc2,w,c
 41281  006DB8  0100               	movlb	0	; () banked
 41282  006DBA  598E               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 41283  006DBC  50DE               	movf	postinc2,w,c
 41284  006DBE  0100               	movlb	0	; () banked
 41285  006DC0  598F               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 41286  006DC2  A0D8               	btfss	status,0,c
 41287  006DC4  D00E               	goto	l13363
 41288                           
 41289                           ; BSR set to: 0
 41290                           ;sw_timer.c: 304: {
 41291                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 41292  006DC6  0100               	movlb	0	; () banked
 41293  006DC8  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41294  006DCA  0D08               	mullw	8
 41295  006DCC  0E00               	movlw	low _swTimers
 41296  006DCE  24F3               	addwf	prodl,w,c
 41297  006DD0  6ED9               	movwf	fsr2l,c
 41298  006DD2  0E03               	movlw	high _swTimers
 41299  006DD4  20F4               	addwfc	prodh,w,c
 41300  006DD6  6EDA               	movwf	fsr2h,c
 41301  006DD8  6ADE               	clrf	postinc2,c
 41302  006DDA  6ADE               	clrf	postinc2,c
 41303  006DDC  6ADE               	clrf	postinc2,c
 41304  006DDE  6ADD               	clrf	postdec2,c
 41305                           
 41306                           ;sw_timer.c: 306: }
 41307  006DE0  D03A               	goto	l13367
 41308  006DE2                     l13363:
 41309                           
 41310                           ; BSR set to: 0
 41311                           ;sw_timer.c: 307: else
 41312                           ;sw_timer.c: 308: {
 41313                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 41314  006DE2  0100               	movlb	0	; () banked
 41315  006DE4  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41316  006DE6  0D08               	mullw	8
 41317  006DE8  0E00               	movlw	low _swTimers
 41318  006DEA  24F3               	addwf	prodl,w,c
 41319  006DEC  6ED9               	movwf	fsr2l,c
 41320  006DEE  0E03               	movlw	high _swTimers
 41321  006DF0  20F4               	addwfc	prodh,w,c
 41322  006DF2  6EDA               	movwf	fsr2h,c
 41323  006DF4  0100               	movlb	0	; () banked
 41324  006DF6  518C               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 41325  006DF8  5EDE               	subwf	postinc2,f,c
 41326  006DFA  518D               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 41327  006DFC  5ADE               	subwfb	postinc2,f,c
 41328  006DFE  518E               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 41329  006E00  5ADE               	subwfb	postinc2,f,c
 41330  006E02  518F               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 41331  006E04  5ADE               	subwfb	postinc2,f,c
 41332                           
 41333                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 41334  006E06  0100               	movlb	0	; () banked
 41335  006E08  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41336  006E0A  0D08               	mullw	8
 41337  006E0C  0E00               	movlw	low _swTimers
 41338  006E0E  24F3               	addwf	prodl,w,c
 41339  006E10  6ED9               	movwf	fsr2l,c
 41340  006E12  0E03               	movlw	high _swTimers
 41341  006E14  20F4               	addwfc	prodh,w,c
 41342  006E16  6EDA               	movwf	fsr2h,c
 41343  006E18  0100               	movlb	0	; () banked
 41344  006E1A  5190               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 41345  006E1C  5CDE               	subwf	postinc2,w,c
 41346  006E1E  0100               	movlb	0	; () banked
 41347  006E20  5191               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 41348  006E22  58DE               	subwfb	postinc2,w,c
 41349  006E24  0100               	movlb	0	; () banked
 41350  006E26  5192               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 41351  006E28  58DE               	subwfb	postinc2,w,c
 41352  006E2A  0100               	movlb	0	; () banked
 41353  006E2C  5193               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 41354  006E2E  58DE               	subwfb	postinc2,w,c
 41355  006E30  B0D8               	btfsc	status,0,c
 41356  006E32  D011               	goto	l13367
 41357                           
 41358                           ; BSR set to: 0
 41359                           ;sw_timer.c: 313: {
 41360                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 41361  006E34  0100               	movlb	0	; () banked
 41362  006E36  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41363  006E38  0D08               	mullw	8
 41364  006E3A  0E00               	movlw	low _swTimers
 41365  006E3C  24F3               	addwf	prodl,w,c
 41366  006E3E  6ED9               	movwf	fsr2l,c
 41367  006E40  0E03               	movlw	high _swTimers
 41368  006E42  20F4               	addwfc	prodh,w,c
 41369  006E44  6EDA               	movwf	fsr2h,c
 41370  006E46  CFDE F090          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 41371  006E4A  CFDE F091          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 41372  006E4E  CFDE F092          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 41373  006E52  CFDE F093          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 41374  006E56                     l13367:
 41375                           
 41376                           ; BSR set to: 0
 41377  006E56  0100               	movlb	0	; () banked
 41378  006E58  2B94               	incf	SwTimersInterrupt@i& (0+255),f,b
 41379  006E5A                     l13369:
 41380                           
 41381                           ; BSR set to: 0
 41382  006E5A  0100               	movlb	0	; () banked
 41383  006E5C  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 41384  006E5E  0100               	movlb	0	; () banked
 41385  006E60  5D94               	subwf	SwTimersInterrupt@i& (0+255),w,b
 41386  006E62  A0D8               	btfss	status,0,c
 41387  006E64  D789               	goto	l13357
 41388                           
 41389                           ; BSR set to: 0
 41390                           ;sw_timer.c: 315: }
 41391                           ;sw_timer.c: 316: }
 41392                           ;sw_timer.c: 317: }
 41393                           ;sw_timer.c: 318: }
 41394                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 41395  006E66  C090  F084         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 41396  006E6A  C091  F085         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 41397  006E6E  C092  F086         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 41398  006E72  C093  F087         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 41399                           
 41400                           ; BSR set to: 0
 41401  006E76  0012               	return		;funcret
 41402  006E78                     __end_of_SwTimersInterrupt:
 41403                           	opt stack 0
 41404                           tosu	equ	0xFFF
 41405                           tosh	equ	0xFFE
 41406                           tosl	equ	0xFFD
 41407                           pclath	equ	0xFFA
 41408                           tblptru	equ	0xFF8
 41409                           tblptrh	equ	0xFF7
 41410                           tblptrl	equ	0xFF6
 41411                           tablat	equ	0xFF5
 41412                           prodh	equ	0xFF4
 41413                           prodl	equ	0xFF3
 41414                           intcon	equ	0xFF2
 41415                           intcon2	equ	0xFF1
 41416                           intcon3	equ	0xFF0
 41417                           indf0	equ	0xFEF
 41418                           postinc0	equ	0xFEE
 41419                           plusw0	equ	0xFEB
 41420                           fsr0h	equ	0xFEA
 41421                           fsr0l	equ	0xFE9
 41422                           wreg	equ	0xFE8
 41423                           postinc1	equ	0xFE6
 41424                           postdec1	equ	0xFE5
 41425                           plusw1	equ	0xFE3
 41426                           fsr1h	equ	0xFE2
 41427                           fsr1l	equ	0xFE1
 41428                           indf2	equ	0xFDF
 41429                           postinc2	equ	0xFDE
 41430                           postdec2	equ	0xFDD
 41431                           plusw2	equ	0xFDB
 41432                           fsr2h	equ	0xFDA
 41433                           fsr2l	equ	0xFD9
 41434                           status	equ	0xFD8
 41435                           
 41436 ;; *************** function _TMR_GetDeltaTime *****************
 41437 ;; Defined at:
 41438 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41439 ;; Parameters:    Size  Location     Type
 41440 ;;		None
 41441 ;; Auto vars:     Size  Location     Type
 41442 ;;		None
 41443 ;; Return value:  Size  Location     Type
 41444 ;;                  4   12[BANK0 ] unsigned long 
 41445 ;; Registers used:
 41446 ;;		wreg, status,2, status,0, cstack
 41447 ;; Tracked objects:
 41448 ;;		On entry : 0/0
 41449 ;;		On exit  : 0/0
 41450 ;;		Unchanged: 0/0
 41451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41453 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41454 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41455 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41456 ;;Total ram usage:       24 bytes
 41457 ;; Hardware stack levels used:    1
 41458 ;; Hardware stack levels required when called:    8
 41459 ;; This function calls:
 41460 ;;		_TMR1_ReadTimer
 41461 ;; This function is called by:
 41462 ;;		_SwTimersInterrupt
 41463 ;; This function uses a non-reentrant model
 41464 ;;
 41465                           
 41466                           	psect	text192
 41467  00563E                     __ptext192:
 41468                           	opt stack 0
 41469  00563E                     _TMR_GetDeltaTime:
 41470                           	opt stack 17
 41471                           
 41472                           ;sw_timer.c: 90: static uint32_t retVal;
 41473                           ;sw_timer.c: 91: static uint16_t tmrVal;
 41474                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 41475                           
 41476                           ; BSR set to: 0
 41477                           ;incstack = 0
 41478  00563E  EC4D  F04F         	call	_TMR1_ReadTimer	;wreg free
 41479  005642  C064  F044         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 41480  005646  C065  F045         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 41481                           
 41482                           ;sw_timer.c: 95: if (timerOverflow == 1)
 41483  00564A  044D               	decf	_timerOverflow,w,c	;volatile
 41484  00564C  A4D8               	btfss	status,2,c
 41485  00564E  D092               	goto	l13147
 41486                           
 41487                           ;sw_timer.c: 96: {
 41488                           ;sw_timer.c: 97: timerOverflow = 0;
 41489  005650  0E00               	movlw	0
 41490  005652  6E4D               	movwf	_timerOverflow,c	;volatile
 41491                           
 41492                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 41493  005654  C03C  F070         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 41494  005658  C03D  F071         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 41495  00565C  C03E  F072         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 41496  005660  C03F  F073         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 41497  005664  0100               	movlb	0	; () banked
 41498  005666  1F70               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 41499  005668  1F71               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41500  00566A  1F72               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41501  00566C  1F73               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41502  00566E  2B70               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 41503  005670  0E00               	movlw	0
 41504  005672  2371               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41505  005674  2372               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41506  005676  2373               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41507  005678  0100               	movlb	0	; () banked
 41508  00567A  51F8               	movf	_reloadVal& (0+255),w,b	;volatile
 41509  00567C  0100               	movlb	0	; () banked
 41510  00567E  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 41511  005680  0100               	movlb	0	; () banked
 41512  005682  51F9               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 41513  005684  0100               	movlb	0	; () banked
 41514  005686  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 41515  005688  0100               	movlb	0	; () banked
 41516  00568A  6B76               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 41517  00568C  0100               	movlb	0	; () banked
 41518  00568E  6B77               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 41519  005690  0100               	movlb	0	; () banked
 41520  005692  1F74               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41521  005694  1F75               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41522  005696  1F76               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 41523  005698  1F77               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 41524  00569A  2B74               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41525  00569C  0E00               	movlw	0
 41526  00569E  2375               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41527  0056A0  2376               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 41528  0056A2  2377               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 41529  0056A4  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 41530  0056A6  0100               	movlb	0	; () banked
 41531  0056A8  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 41532  0056AA  0100               	movlb	0	; () banked
 41533  0056AC  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 41534  0056AE  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 41535  0056B0  0100               	movlb	0	; () banked
 41536  0056B2  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 41537  0056B4  0100               	movlb	0	; () banked
 41538  0056B6  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 41539  0056B8  0E00               	movlw	0
 41540  0056BA  0100               	movlb	0	; () banked
 41541  0056BC  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 41542  0056BE  0100               	movlb	0	; () banked
 41543  0056C0  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 41544  0056C2  0E00               	movlw	0
 41545  0056C4  0100               	movlb	0	; () banked
 41546  0056C6  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 41547  0056C8  0100               	movlb	0	; () banked
 41548  0056CA  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 41549  0056CC  0100               	movlb	0	; () banked
 41550  0056CE  5170               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 41551  0056D0  0100               	movlb	0	; () banked
 41552  0056D2  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 41553  0056D4  0100               	movlb	0	; () banked
 41554  0056D6  6F7C               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 41555  0056D8  0100               	movlb	0	; () banked
 41556  0056DA  5171               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 41557  0056DC  0100               	movlb	0	; () banked
 41558  0056DE  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 41559  0056E0  0100               	movlb	0	; () banked
 41560  0056E2  6F7D               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 41561  0056E4  0100               	movlb	0	; () banked
 41562  0056E6  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 41563  0056E8  0100               	movlb	0	; () banked
 41564  0056EA  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 41565  0056EC  0100               	movlb	0	; () banked
 41566  0056EE  6F7E               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 41567  0056F0  0100               	movlb	0	; () banked
 41568  0056F2  5173               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 41569  0056F4  0100               	movlb	0	; () banked
 41570  0056F6  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 41571  0056F8  0100               	movlb	0	; () banked
 41572  0056FA  6F7F               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 41573  0056FC  5040               	movf	_ticksAdded,w,c	;volatile
 41574  0056FE  0100               	movlb	0	; () banked
 41575  005700  257C               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 41576  005702  0100               	movlb	0	; () banked
 41577  005704  6F80               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 41578  005706  5041               	movf	_ticksAdded+1,w,c	;volatile
 41579  005708  0100               	movlb	0	; () banked
 41580  00570A  217D               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 41581  00570C  0100               	movlb	0	; () banked
 41582  00570E  6F81               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 41583  005710  5042               	movf	_ticksAdded+2,w,c	;volatile
 41584  005712  0100               	movlb	0	; () banked
 41585  005714  217E               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 41586  005716  0100               	movlb	0	; () banked
 41587  005718  6F82               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 41588  00571A  5043               	movf	_ticksAdded+3,w,c	;volatile
 41589  00571C  0100               	movlb	0	; () banked
 41590  00571E  217F               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 41591  005720  0100               	movlb	0	; () banked
 41592  005722  6F83               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 41593  005724  0E00               	movlw	0
 41594  005726  0100               	movlb	0	; () banked
 41595  005728  2580               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 41596  00572A  0101               	movlb	1	; () banked
 41597  00572C  6F6F               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41598  00572E  0E00               	movlw	0
 41599  005730  0100               	movlb	0	; () banked
 41600  005732  2181               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 41601  005734  0101               	movlb	1	; () banked
 41602  005736  6F70               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41603  005738  0E01               	movlw	1
 41604  00573A  0100               	movlb	0	; () banked
 41605  00573C  2182               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 41606  00573E  0101               	movlb	1	; () banked
 41607  005740  6F71               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41608  005742  0E00               	movlw	0
 41609  005744  0100               	movlb	0	; () banked
 41610  005746  2183               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 41611  005748  0101               	movlb	1	; () banked
 41612  00574A  6F72               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41613                           
 41614                           ; BSR set to: 1
 41615                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 41616  00574C  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 41617  005750  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 41618  005754  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 41619  005756  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 41620                           
 41621                           ; BSR set to: 1
 41622                           ;sw_timer.c: 100: ticksAdded = 0;
 41623  005758  0E00               	movlw	0
 41624  00575A  6E40               	movwf	_ticksAdded,c	;volatile
 41625  00575C  0E00               	movlw	0
 41626  00575E  6E41               	movwf	_ticksAdded+1,c	;volatile
 41627  005760  0E00               	movlw	0
 41628  005762  6E42               	movwf	_ticksAdded+2,c	;volatile
 41629  005764  0E00               	movlw	0
 41630  005766  6E43               	movwf	_ticksAdded+3,c	;volatile
 41631                           
 41632                           ; BSR set to: 1
 41633                           ;sw_timer.c: 101: reloadVal = 0;
 41634  005768  0E00               	movlw	0
 41635  00576A  0100               	movlb	0	; () banked
 41636  00576C  6FF9               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 41637  00576E  0E00               	movlw	0
 41638  005770  6FF8               	movwf	_reloadVal& (0+255),b	;volatile
 41639                           
 41640                           ;sw_timer.c: 102: }
 41641  005772  D057               	goto	l13149
 41642  005774                     l13147:
 41643                           
 41644                           ;sw_timer.c: 103: else
 41645                           ;sw_timer.c: 104: {
 41646                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 41647  005774  C03C  F070         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 41648  005778  C03D  F071         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 41649  00577C  C03E  F072         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 41650  005780  C03F  F073         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 41651  005784  0100               	movlb	0	; () banked
 41652  005786  1F70               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 41653  005788  1F71               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41654  00578A  1F72               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41655  00578C  1F73               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41656  00578E  2B70               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 41657  005790  0E00               	movlw	0
 41658  005792  2371               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41659  005794  2372               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41660  005796  2373               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41661  005798  C0F8  F074         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 41662  00579C  C0F9  F075         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 41663  0057A0  0100               	movlb	0	; () banked
 41664  0057A2  1F74               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41665  0057A4  1F75               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41666  0057A6  4B74               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41667  0057A8  2B75               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41668  0057AA  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 41669  0057AC  0100               	movlb	0	; () banked
 41670  0057AE  2774               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41671  0057B0  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 41672  0057B2  0100               	movlb	0	; () banked
 41673  0057B4  2375               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41674  0057B6  0100               	movlb	0	; () banked
 41675  0057B8  5174               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 41676  0057BA  0100               	movlb	0	; () banked
 41677  0057BC  2570               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 41678  0057BE  0100               	movlb	0	; () banked
 41679  0057C0  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 41680  0057C2  0100               	movlb	0	; () banked
 41681  0057C4  5175               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 41682  0057C6  0100               	movlb	0	; () banked
 41683  0057C8  2171               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 41684  0057CA  0100               	movlb	0	; () banked
 41685  0057CC  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 41686  0057CE  0E00               	movlw	0
 41687  0057D0  0100               	movlb	0	; () banked
 41688  0057D2  2172               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 41689  0057D4  0100               	movlb	0	; () banked
 41690  0057D6  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 41691  0057D8  0E00               	movlw	0
 41692  0057DA  0100               	movlb	0	; () banked
 41693  0057DC  2173               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 41694  0057DE  0100               	movlb	0	; () banked
 41695  0057E0  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 41696  0057E2  5040               	movf	_ticksAdded,w,c	;volatile
 41697  0057E4  0100               	movlb	0	; () banked
 41698  0057E6  2576               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 41699  0057E8  0101               	movlb	1	; () banked
 41700  0057EA  6F6F               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41701  0057EC  5041               	movf	_ticksAdded+1,w,c	;volatile
 41702  0057EE  0100               	movlb	0	; () banked
 41703  0057F0  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 41704  0057F2  0101               	movlb	1	; () banked
 41705  0057F4  6F70               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41706  0057F6  5042               	movf	_ticksAdded+2,w,c	;volatile
 41707  0057F8  0100               	movlb	0	; () banked
 41708  0057FA  2178               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 41709  0057FC  0101               	movlb	1	; () banked
 41710  0057FE  6F71               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41711  005800  5043               	movf	_ticksAdded+3,w,c	;volatile
 41712  005802  0100               	movlb	0	; () banked
 41713  005804  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 41714  005806  0101               	movlb	1	; () banked
 41715  005808  6F72               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41716                           
 41717                           ;sw_timer.c: 106: ticksAccounted += retVal;
 41718  00580A  0101               	movlb	1	; () banked
 41719  00580C  516F               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 41720  00580E  263C               	addwf	_ticksAccounted,f,c	;volatile
 41721  005810  0101               	movlb	1	; () banked
 41722  005812  5170               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 41723  005814  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 41724  005816  0101               	movlb	1	; () banked
 41725  005818  5171               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 41726  00581A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 41727  00581C  0101               	movlb	1	; () banked
 41728  00581E  5172               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 41729  005820  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 41730  005822                     l13149:
 41731                           
 41732                           ;sw_timer.c: 107: }
 41733                           ;sw_timer.c: 109: return retVal;
 41734  005822  C16F  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 41735  005826  C170  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 41736  00582A  C171  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 41737  00582E  C172  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 41738  005832  0012               	return	
 41739  005834                     __end_of_TMR_GetDeltaTime:
 41740                           	opt stack 0
 41741                           tosu	equ	0xFFF
 41742                           tosh	equ	0xFFE
 41743                           tosl	equ	0xFFD
 41744                           pclath	equ	0xFFA
 41745                           tblptru	equ	0xFF8
 41746                           tblptrh	equ	0xFF7
 41747                           tblptrl	equ	0xFF6
 41748                           tablat	equ	0xFF5
 41749                           prodh	equ	0xFF4
 41750                           prodl	equ	0xFF3
 41751                           intcon	equ	0xFF2
 41752                           intcon2	equ	0xFF1
 41753                           intcon3	equ	0xFF0
 41754                           indf0	equ	0xFEF
 41755                           postinc0	equ	0xFEE
 41756                           plusw0	equ	0xFEB
 41757                           fsr0h	equ	0xFEA
 41758                           fsr0l	equ	0xFE9
 41759                           wreg	equ	0xFE8
 41760                           postinc1	equ	0xFE6
 41761                           postdec1	equ	0xFE5
 41762                           plusw1	equ	0xFE3
 41763                           fsr1h	equ	0xFE2
 41764                           fsr1l	equ	0xFE1
 41765                           indf2	equ	0xFDF
 41766                           postinc2	equ	0xFDE
 41767                           postdec2	equ	0xFDD
 41768                           plusw2	equ	0xFDB
 41769                           fsr2h	equ	0xFDA
 41770                           fsr2l	equ	0xFD9
 41771                           status	equ	0xFD8
 41772                           
 41773 ;; *************** function _TMR1_ReadTimer *****************
 41774 ;; Defined at:
 41775 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 41776 ;; Parameters:    Size  Location     Type
 41777 ;;		None
 41778 ;; Auto vars:     Size  Location     Type
 41779 ;;  readVal         2    8[BANK0 ] unsigned int 
 41780 ;;  readValLow      1   11[BANK0 ] unsigned char 
 41781 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 41782 ;; Return value:  Size  Location     Type
 41783 ;;                  2    4[BANK0 ] unsigned int 
 41784 ;; Registers used:
 41785 ;;		wreg, status,2
 41786 ;; Tracked objects:
 41787 ;;		On entry : 0/0
 41788 ;;		On exit  : 0/0
 41789 ;;		Unchanged: 0/0
 41790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41791 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41792 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41793 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41794 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41795 ;;Total ram usage:        8 bytes
 41796 ;; Hardware stack levels used:    1
 41797 ;; Hardware stack levels required when called:    7
 41798 ;; This function calls:
 41799 ;;		Nothing
 41800 ;; This function is called by:
 41801 ;;		_TMR_GetDeltaTime
 41802 ;;		_TMR_SwapTimer
 41803 ;; This function uses a non-reentrant model
 41804 ;;
 41805                           
 41806                           	psect	text193
 41807  009E9A                     __ptext193:
 41808                           	opt stack 0
 41809  009E9A                     _TMR1_ReadTimer:
 41810                           	opt stack 17
 41811                           
 41812                           ;tmr1.c: 108: uint16_t readVal;
 41813                           ;tmr1.c: 109: uint8_t readValHigh;
 41814                           ;tmr1.c: 110: uint8_t readValLow;
 41815                           ;tmr1.c: 112: readValLow = TMR1L;
 41816                           
 41817                           ;incstack = 0
 41818  009E9A  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 41819                           
 41820                           ;tmr1.c: 113: readValHigh = TMR1H;
 41821  009E9E  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 41822                           
 41823                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 41824  009EA2  0100               	movlb	0	; () banked
 41825  009EA4  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 41826  009EA6  0100               	movlb	0	; () banked
 41827  009EA8  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 41828  009EAA  0100               	movlb	0	; () banked
 41829  009EAC  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 41830  009EAE  0100               	movlb	0	; () banked
 41831  009EB0  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 41832  009EB2  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 41833                           
 41834                           ; BSR set to: 0
 41835                           ;tmr1.c: 117: return readVal;
 41836  009EB6  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 41837  009EBA  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 41838  009EBE  0012               	return	
 41839  009EC0                     __end_of_TMR1_ReadTimer:
 41840                           	opt stack 0
 41841                           tosu	equ	0xFFF
 41842                           tosh	equ	0xFFE
 41843                           tosl	equ	0xFFD
 41844                           pclath	equ	0xFFA
 41845                           tblptru	equ	0xFF8
 41846                           tblptrh	equ	0xFF7
 41847                           tblptrl	equ	0xFF6
 41848                           tablat	equ	0xFF5
 41849                           prodh	equ	0xFF4
 41850                           prodl	equ	0xFF3
 41851                           intcon	equ	0xFF2
 41852                           intcon2	equ	0xFF1
 41853                           intcon3	equ	0xFF0
 41854                           indf0	equ	0xFEF
 41855                           postinc0	equ	0xFEE
 41856                           plusw0	equ	0xFEB
 41857                           fsr0h	equ	0xFEA
 41858                           fsr0l	equ	0xFE9
 41859                           wreg	equ	0xFE8
 41860                           postinc1	equ	0xFE6
 41861                           postdec1	equ	0xFE5
 41862                           plusw1	equ	0xFE3
 41863                           fsr1h	equ	0xFE2
 41864                           fsr1l	equ	0xFE1
 41865                           indf2	equ	0xFDF
 41866                           postinc2	equ	0xFDE
 41867                           postdec2	equ	0xFDD
 41868                           plusw2	equ	0xFDB
 41869                           fsr2h	equ	0xFDA
 41870                           fsr2l	equ	0xFD9
 41871                           status	equ	0xFD8
 41872                           
 41873 ;; *************** function _SwTimerSetTimeout *****************
 41874 ;; Defined at:
 41875 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41876 ;; Parameters:    Size  Location     Type
 41877 ;;  timerId         1    wreg     unsigned char 
 41878 ;;  timeout         4   17[BANK0 ] unsigned long 
 41879 ;; Auto vars:     Size  Location     Type
 41880 ;;  timerId         1   25[BANK0 ] unsigned char 
 41881 ;; Return value:  Size  Location     Type
 41882 ;;                  1    wreg      void 
 41883 ;; Registers used:
 41884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41885 ;; Tracked objects:
 41886 ;;		On entry : 0/0
 41887 ;;		On exit  : 0/0
 41888 ;;		Unchanged: 0/0
 41889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41890 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41891 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41892 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41893 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41894 ;;Total ram usage:        9 bytes
 41895 ;; Hardware stack levels used:    1
 41896 ;; Hardware stack levels required when called:    7
 41897 ;; This function calls:
 41898 ;;		Nothing
 41899 ;; This function is called by:
 41900 ;;		_RADIO_Transmit
 41901 ;;		_RADIO_ReceiveStart
 41902 ;;		_LORAWAN_TxDone
 41903 ;;		_LORAWAN_RxTimeout
 41904 ;;		_StartReTxTimer
 41905 ;;		_DutyCycleCallback
 41906 ;;		_LORAWAN_Join
 41907 ;;		_LORAWAN_LinkCheckConfigure
 41908 ;;		_LORAWAN_LinkCheckCallback
 41909 ;;		_UpdateRetransmissionAckTimeoutState
 41910 ;;		_UpdateJoinSuccessState
 41911 ;; This function uses a non-reentrant model
 41912 ;;
 41913                           
 41914                           	psect	text194
 41915  009466                     __ptext194:
 41916                           	opt stack 0
 41917  009466                     _SwTimerSetTimeout:
 41918                           	opt stack 20
 41919                           
 41920                           ; BSR set to: 0
 41921                           ;incstack = 0
 41922                           ;SwTimerSetTimeout@timerId stored from wreg
 41923  009466  0100               	movlb	0	; () banked
 41924  009468  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 41925                           
 41926                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 41927  00946A  9EF2               	bcf	intcon,7,c	;volatile
 41928                           
 41929                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 41930  00946C  0EE0               	movlw	224
 41931  00946E  0100               	movlb	0	; () banked
 41932  009470  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 41933  009472  0100               	movlb	0	; () banked
 41934  009474  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 41935  009476  0EFF               	movlw	255
 41936  009478  0100               	movlb	0	; () banked
 41937  00947A  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 41938  00947C  0100               	movlb	0	; () banked
 41939  00947E  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 41940  009480  0EFF               	movlw	255
 41941  009482  0100               	movlb	0	; () banked
 41942  009484  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 41943  009486  0100               	movlb	0	; () banked
 41944  009488  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 41945  00948A  0EFF               	movlw	255
 41946  00948C  0100               	movlb	0	; () banked
 41947  00948E  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 41948  009490  0100               	movlb	0	; () banked
 41949  009492  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 41950  009494  0100               	movlb	0	; () banked
 41951  009496  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 41952  009498  0D08               	mullw	8
 41953  00949A  0E00               	movlw	low _swTimers
 41954  00949C  24F3               	addwf	prodl,w,c
 41955  00949E  6ED9               	movwf	fsr2l,c
 41956  0094A0  0E03               	movlw	high _swTimers
 41957  0094A2  20F4               	addwfc	prodh,w,c
 41958  0094A4  6EDA               	movwf	fsr2h,c
 41959  0094A6  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 41960  0094AA  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 41961  0094AE  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 41962  0094B2  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 41963                           
 41964                           ; BSR set to: 0
 41965                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 41966  0094B6  8EF2               	bsf	intcon,7,c	;volatile
 41967                           
 41968                           ; BSR set to: 0
 41969  0094B8  0012               	return		;funcret
 41970  0094BA                     __end_of_SwTimerSetTimeout:
 41971                           	opt stack 0
 41972                           tosu	equ	0xFFF
 41973                           tosh	equ	0xFFE
 41974                           tosl	equ	0xFFD
 41975                           pclath	equ	0xFFA
 41976                           tblptru	equ	0xFF8
 41977                           tblptrh	equ	0xFF7
 41978                           tblptrl	equ	0xFF6
 41979                           tablat	equ	0xFF5
 41980                           prodh	equ	0xFF4
 41981                           prodl	equ	0xFF3
 41982                           intcon	equ	0xFF2
 41983                           intcon2	equ	0xFF1
 41984                           intcon3	equ	0xFF0
 41985                           indf0	equ	0xFEF
 41986                           postinc0	equ	0xFEE
 41987                           plusw0	equ	0xFEB
 41988                           fsr0h	equ	0xFEA
 41989                           fsr0l	equ	0xFE9
 41990                           wreg	equ	0xFE8
 41991                           postinc1	equ	0xFE6
 41992                           postdec1	equ	0xFE5
 41993                           plusw1	equ	0xFE3
 41994                           fsr1h	equ	0xFE2
 41995                           fsr1l	equ	0xFE1
 41996                           indf2	equ	0xFDF
 41997                           postinc2	equ	0xFDE
 41998                           postdec2	equ	0xFDD
 41999                           plusw2	equ	0xFDB
 42000                           fsr2h	equ	0xFDA
 42001                           fsr2l	equ	0xFD9
 42002                           status	equ	0xFD8
 42003                           
 42004 ;; *************** function _InitDefault868Channels *****************
 42005 ;; Defined at:
 42006 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42007 ;; Parameters:    Size  Location     Type
 42008 ;;		None
 42009 ;; Auto vars:     Size  Location     Type
 42010 ;;  i               1   14[BANK0 ] unsigned char 
 42011 ;; Return value:  Size  Location     Type
 42012 ;;                  1    wreg      void 
 42013 ;; Registers used:
 42014 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42015 ;; Tracked objects:
 42016 ;;		On entry : 0/0
 42017 ;;		On exit  : 0/0
 42018 ;;		Unchanged: 0/0
 42019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42024 ;;Total ram usage:        1 bytes
 42025 ;; Hardware stack levels used:    1
 42026 ;; Hardware stack levels required when called:    8
 42027 ;; This function calls:
 42028 ;;		_memcpy
 42029 ;;		_memset
 42030 ;; This function is called by:
 42031 ;;		_LORAWAN_Reset
 42032 ;; This function uses a non-reentrant model
 42033 ;;
 42034                           
 42035                           	psect	text195
 42036  008436                     __ptext195:
 42037                           	opt stack 0
 42038  008436                     _InitDefault868Channels:
 42039                           	opt stack 20
 42040                           
 42041                           ;lorawan_eu.c: 981: uint8_t i;
 42042                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 42043                           
 42044                           ; BSR set to: 0
 42045                           ;incstack = 0
 42046  008436  0E00               	movlw	low _Channels
 42047  008438  0100               	movlb	0	; () banked
 42048  00843A  6F64               	movwf	memset@p1& (0+255),b
 42049  00843C  0E04               	movlw	high _Channels
 42050  00843E  0100               	movlb	0	; () banked
 42051  008440  6F65               	movwf	(memset@p1+1)& (0+255),b
 42052  008442  0E00               	movlw	0
 42053  008444  0100               	movlb	0	; () banked
 42054  008446  6F67               	movwf	(memset@c+1)& (0+255),b
 42055  008448  0E00               	movlw	0
 42056  00844A  6F66               	movwf	memset@c& (0+255),b
 42057  00844C  0E00               	movlw	0
 42058  00844E  0100               	movlb	0	; () banked
 42059  008450  6F69               	movwf	(memset@n+1)& (0+255),b
 42060  008452  0EE0               	movlw	224
 42061  008454  6F68               	movwf	memset@n& (0+255),b
 42062  008456  ECCE  F04D         	call	_memset	;wreg free
 42063                           
 42064                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 42065  00845A  0E00               	movlw	low _Channels
 42066  00845C  0100               	movlb	0	; () banked
 42067  00845E  6F64               	movwf	memcpy@d1& (0+255),b
 42068  008460  0E04               	movlw	high _Channels
 42069  008462  0100               	movlb	0	; () banked
 42070  008464  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 42071  008466  0ED2               	movlw	low _DefaultChannels868
 42072  008468  0100               	movlb	0	; () banked
 42073  00846A  6F66               	movwf	memcpy@s1& (0+255),b
 42074  00846C  0EFF               	movlw	high _DefaultChannels868
 42075  00846E  0100               	movlb	0	; () banked
 42076  008470  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 42077  008472  0E00               	movlw	0
 42078  008474  0100               	movlb	0	; () banked
 42079  008476  6F69               	movwf	(memcpy@n+1)& (0+255),b
 42080  008478  0E2A               	movlw	42
 42081  00847A  6F68               	movwf	memcpy@n& (0+255),b
 42082  00847C  ECCA  F048         	call	_memcpy	;wreg free
 42083                           
 42084                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 42085  008480  0E03               	movlw	3
 42086  008482  0100               	movlb	0	; () banked
 42087  008484  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 42088  008486                     l16301:
 42089                           
 42090                           ; BSR set to: 0
 42091  008486  0E0F               	movlw	15
 42092  008488  0100               	movlb	0	; () banked
 42093  00848A  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 42094  00848C  D001               	goto	l16305
 42095  00848E  0012               	return	
 42096  008490                     l16305:
 42097                           
 42098                           ; BSR set to: 0
 42099                           ;lorawan_eu.c: 986: {
 42100                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 42101  008490  0100               	movlb	0	; () banked
 42102  008492  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 42103  008494  0D0E               	mullw	14
 42104  008496  0E06               	movlw	6
 42105  008498  26F3               	addwf	prodl,f,c
 42106  00849A  0E00               	movlw	0
 42107  00849C  22F4               	addwfc	prodh,f,c
 42108  00849E  0E00               	movlw	low _Channels
 42109  0084A0  24F3               	addwf	prodl,w,c
 42110  0084A2  6ED9               	movwf	fsr2l,c
 42111  0084A4  0E04               	movlw	high _Channels
 42112  0084A6  20F4               	addwfc	prodh,w,c
 42113  0084A8  6EDA               	movwf	fsr2h,c
 42114  0084AA  0EFF               	movlw	255
 42115  0084AC  6EDE               	movwf	postinc2,c
 42116  0084AE  0EFF               	movlw	255
 42117  0084B0  6EDD               	movwf	postdec2,c
 42118                           
 42119                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 42120  0084B2  0100               	movlb	0	; () banked
 42121  0084B4  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 42122  0084B6  0D0E               	mullw	14
 42123  0084B8  0E05               	movlw	5
 42124  0084BA  26F3               	addwf	prodl,f,c
 42125  0084BC  0E00               	movlw	0
 42126  0084BE  22F4               	addwfc	prodh,f,c
 42127  0084C0  0E00               	movlw	low _Channels
 42128  0084C2  24F3               	addwf	prodl,w,c
 42129  0084C4  6ED9               	movwf	fsr2l,c
 42130  0084C6  0E04               	movlw	high _Channels
 42131  0084C8  20F4               	addwfc	prodh,w,c
 42132  0084CA  6EDA               	movwf	fsr2h,c
 42133  0084CC  0EFF               	movlw	255
 42134  0084CE  6EDF               	movwf	indf2,c
 42135                           
 42136                           ; BSR set to: 0
 42137  0084D0  0100               	movlb	0	; () banked
 42138  0084D2  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 42139  0084D4  D7D8               	goto	l16301
 42140  0084D6                     __end_of_InitDefault868Channels:
 42141                           	opt stack 0
 42142                           tosu	equ	0xFFF
 42143                           tosh	equ	0xFFE
 42144                           tosl	equ	0xFFD
 42145                           pclath	equ	0xFFA
 42146                           tblptru	equ	0xFF8
 42147                           tblptrh	equ	0xFF7
 42148                           tblptrl	equ	0xFF6
 42149                           tablat	equ	0xFF5
 42150                           prodh	equ	0xFF4
 42151                           prodl	equ	0xFF3
 42152                           intcon	equ	0xFF2
 42153                           intcon2	equ	0xFF1
 42154                           intcon3	equ	0xFF0
 42155                           indf0	equ	0xFEF
 42156                           postinc0	equ	0xFEE
 42157                           plusw0	equ	0xFEB
 42158                           fsr0h	equ	0xFEA
 42159                           fsr0l	equ	0xFE9
 42160                           wreg	equ	0xFE8
 42161                           postinc1	equ	0xFE6
 42162                           postdec1	equ	0xFE5
 42163                           plusw1	equ	0xFE3
 42164                           fsr1h	equ	0xFE2
 42165                           fsr1l	equ	0xFE1
 42166                           indf2	equ	0xFDF
 42167                           postinc2	equ	0xFDE
 42168                           postdec2	equ	0xFDD
 42169                           plusw2	equ	0xFDB
 42170                           fsr2h	equ	0xFDA
 42171                           fsr2l	equ	0xFD9
 42172                           status	equ	0xFD8
 42173                           
 42174 ;; *************** function _InitDefault433Channels *****************
 42175 ;; Defined at:
 42176 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42177 ;; Parameters:    Size  Location     Type
 42178 ;;		None
 42179 ;; Auto vars:     Size  Location     Type
 42180 ;;  i               1   14[BANK0 ] unsigned char 
 42181 ;; Return value:  Size  Location     Type
 42182 ;;                  1    wreg      void 
 42183 ;; Registers used:
 42184 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42185 ;; Tracked objects:
 42186 ;;		On entry : 0/0
 42187 ;;		On exit  : 0/0
 42188 ;;		Unchanged: 0/0
 42189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42191 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42193 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42194 ;;Total ram usage:        1 bytes
 42195 ;; Hardware stack levels used:    1
 42196 ;; Hardware stack levels required when called:    8
 42197 ;; This function calls:
 42198 ;;		_memcpy
 42199 ;;		_memset
 42200 ;; This function is called by:
 42201 ;;		_LORAWAN_Reset
 42202 ;; This function uses a non-reentrant model
 42203 ;;
 42204                           
 42205                           	psect	text196
 42206  0084D6                     __ptext196:
 42207                           	opt stack 0
 42208  0084D6                     _InitDefault433Channels:
 42209                           	opt stack 20
 42210                           
 42211                           ;lorawan_eu.c: 996: uint8_t i;
 42212                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 42213                           
 42214                           ; BSR set to: 0
 42215                           ;incstack = 0
 42216  0084D6  0E00               	movlw	low _Channels
 42217  0084D8  0100               	movlb	0	; () banked
 42218  0084DA  6F64               	movwf	memset@p1& (0+255),b
 42219  0084DC  0E04               	movlw	high _Channels
 42220  0084DE  0100               	movlb	0	; () banked
 42221  0084E0  6F65               	movwf	(memset@p1+1)& (0+255),b
 42222  0084E2  0E00               	movlw	0
 42223  0084E4  0100               	movlb	0	; () banked
 42224  0084E6  6F67               	movwf	(memset@c+1)& (0+255),b
 42225  0084E8  0E00               	movlw	0
 42226  0084EA  6F66               	movwf	memset@c& (0+255),b
 42227  0084EC  0E00               	movlw	0
 42228  0084EE  0100               	movlb	0	; () banked
 42229  0084F0  6F69               	movwf	(memset@n+1)& (0+255),b
 42230  0084F2  0EE0               	movlw	224
 42231  0084F4  6F68               	movwf	memset@n& (0+255),b
 42232  0084F6  ECCE  F04D         	call	_memset	;wreg free
 42233                           
 42234                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 42235  0084FA  0E00               	movlw	low _Channels
 42236  0084FC  0100               	movlb	0	; () banked
 42237  0084FE  6F64               	movwf	memcpy@d1& (0+255),b
 42238  008500  0E04               	movlw	high _Channels
 42239  008502  0100               	movlb	0	; () banked
 42240  008504  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 42241  008506  0EA8               	movlw	low _DefaultChannels433
 42242  008508  0100               	movlb	0	; () banked
 42243  00850A  6F66               	movwf	memcpy@s1& (0+255),b
 42244  00850C  0EFF               	movlw	high _DefaultChannels433
 42245  00850E  0100               	movlb	0	; () banked
 42246  008510  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 42247  008512  0E00               	movlw	0
 42248  008514  0100               	movlb	0	; () banked
 42249  008516  6F69               	movwf	(memcpy@n+1)& (0+255),b
 42250  008518  0E2A               	movlw	42
 42251  00851A  6F68               	movwf	memcpy@n& (0+255),b
 42252  00851C  ECCA  F048         	call	_memcpy	;wreg free
 42253                           
 42254                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 42255  008520  0E03               	movlw	3
 42256  008522  0100               	movlb	0	; () banked
 42257  008524  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 42258  008526                     l16317:
 42259                           
 42260                           ; BSR set to: 0
 42261  008526  0E0F               	movlw	15
 42262  008528  0100               	movlb	0	; () banked
 42263  00852A  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 42264  00852C  D001               	goto	l16321
 42265  00852E  0012               	return	
 42266  008530                     l16321:
 42267                           
 42268                           ; BSR set to: 0
 42269                           ;lorawan_eu.c: 1001: {
 42270                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 42271  008530  0100               	movlb	0	; () banked
 42272  008532  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 42273  008534  0D0E               	mullw	14
 42274  008536  0E06               	movlw	6
 42275  008538  26F3               	addwf	prodl,f,c
 42276  00853A  0E00               	movlw	0
 42277  00853C  22F4               	addwfc	prodh,f,c
 42278  00853E  0E00               	movlw	low _Channels
 42279  008540  24F3               	addwf	prodl,w,c
 42280  008542  6ED9               	movwf	fsr2l,c
 42281  008544  0E04               	movlw	high _Channels
 42282  008546  20F4               	addwfc	prodh,w,c
 42283  008548  6EDA               	movwf	fsr2h,c
 42284  00854A  0EFF               	movlw	255
 42285  00854C  6EDE               	movwf	postinc2,c
 42286  00854E  0EFF               	movlw	255
 42287  008550  6EDD               	movwf	postdec2,c
 42288                           
 42289                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 42290  008552  0100               	movlb	0	; () banked
 42291  008554  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 42292  008556  0D0E               	mullw	14
 42293  008558  0E05               	movlw	5
 42294  00855A  26F3               	addwf	prodl,f,c
 42295  00855C  0E00               	movlw	0
 42296  00855E  22F4               	addwfc	prodh,f,c
 42297  008560  0E00               	movlw	low _Channels
 42298  008562  24F3               	addwf	prodl,w,c
 42299  008564  6ED9               	movwf	fsr2l,c
 42300  008566  0E04               	movlw	high _Channels
 42301  008568  20F4               	addwfc	prodh,w,c
 42302  00856A  6EDA               	movwf	fsr2h,c
 42303  00856C  0EFF               	movlw	255
 42304  00856E  6EDF               	movwf	indf2,c
 42305                           
 42306                           ; BSR set to: 0
 42307  008570  0100               	movlb	0	; () banked
 42308  008572  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 42309  008574  D7D8               	goto	l16317
 42310  008576                     __end_of_InitDefault433Channels:
 42311                           	opt stack 0
 42312                           tosu	equ	0xFFF
 42313                           tosh	equ	0xFFE
 42314                           tosl	equ	0xFFD
 42315                           pclath	equ	0xFFA
 42316                           tblptru	equ	0xFF8
 42317                           tblptrh	equ	0xFF7
 42318                           tblptrl	equ	0xFF6
 42319                           tablat	equ	0xFF5
 42320                           prodh	equ	0xFF4
 42321                           prodl	equ	0xFF3
 42322                           intcon	equ	0xFF2
 42323                           intcon2	equ	0xFF1
 42324                           intcon3	equ	0xFF0
 42325                           indf0	equ	0xFEF
 42326                           postinc0	equ	0xFEE
 42327                           plusw0	equ	0xFEB
 42328                           fsr0h	equ	0xFEA
 42329                           fsr0l	equ	0xFE9
 42330                           wreg	equ	0xFE8
 42331                           postinc1	equ	0xFE6
 42332                           postdec1	equ	0xFE5
 42333                           plusw1	equ	0xFE3
 42334                           fsr1h	equ	0xFE2
 42335                           fsr1l	equ	0xFE1
 42336                           indf2	equ	0xFDF
 42337                           postinc2	equ	0xFDE
 42338                           postdec2	equ	0xFDD
 42339                           plusw2	equ	0xFDB
 42340                           fsr2h	equ	0xFDA
 42341                           fsr2l	equ	0xFD9
 42342                           status	equ	0xFD8
 42343                           
 42344 ;; *************** function _memset *****************
 42345 ;; Defined at:
 42346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 42347 ;; Parameters:    Size  Location     Type
 42348 ;;  p1              2    4[BANK0 ] PTR void 
 42349 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 42350 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 42351 ;;  c               2    6[BANK0 ] int 
 42352 ;;  n               2    8[BANK0 ] unsigned int 
 42353 ;; Auto vars:     Size  Location     Type
 42354 ;;  p               2   10[BANK0 ] PTR unsigned char 
 42355 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 42356 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 42357 ;; Return value:  Size  Location     Type
 42358 ;;                  2    4[BANK0 ] PTR void 
 42359 ;; Registers used:
 42360 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42361 ;; Tracked objects:
 42362 ;;		On entry : 0/0
 42363 ;;		On exit  : 0/0
 42364 ;;		Unchanged: 0/0
 42365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42366 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42367 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42369 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42370 ;;Total ram usage:        8 bytes
 42371 ;; Hardware stack levels used:    1
 42372 ;; Hardware stack levels required when called:    7
 42373 ;; This function calls:
 42374 ;;		Nothing
 42375 ;; This function is called by:
 42376 ;;		_LORAWAN_Reset
 42377 ;;		_InitDefault868Channels
 42378 ;;		_InitDefault433Channels
 42379 ;;		_AESCmac
 42380 ;;		_GenerateSubkey
 42381 ;;		_AssemblePacket
 42382 ;;		_PrepareJoinRequestFrame
 42383 ;;		_PrepareSessionKeys
 42384 ;;		_AssembleEncryptionBlock
 42385 ;; This function uses a non-reentrant model
 42386 ;;
 42387                           
 42388                           	psect	text197
 42389  009B9C                     __ptext197:
 42390                           	opt stack 0
 42391  009B9C                     _memset:
 42392                           	opt stack 20
 42393                           
 42394                           ; BSR set to: 0
 42395                           ;incstack = 0
 42396  009B9C  C064  F06A         	movff	memset@p1,memset@p
 42397  009BA0  C065  F06B         	movff	memset@p1+1,memset@p+1
 42398  009BA4  D009               	goto	l13571
 42399  009BA6                     l13567:
 42400  009BA6  C06A  FFD9         	movff	memset@p,fsr2l
 42401  009BAA  C06B  FFDA         	movff	memset@p+1,fsr2h
 42402  009BAE  C066  FFDF         	movff	memset@c,indf2
 42403  009BB2  0100               	movlb	0	; () banked
 42404  009BB4  4B6A               	infsnz	memset@p& (0+255),f,b
 42405  009BB6  2B6B               	incf	(memset@p+1)& (0+255),f,b
 42406  009BB8                     l13571:
 42407  009BB8  0100               	movlb	0	; () banked
 42408  009BBA  0768               	decf	memset@n& (0+255),f,b
 42409  009BBC  A0D8               	btfss	status,0,c
 42410  009BBE  0769               	decf	(memset@n+1)& (0+255),f,b
 42411  009BC0  0100               	movlb	0	; () banked
 42412  009BC2  2968               	incf	memset@n& (0+255),w,b
 42413  009BC4  E1F0               	bnz	l13567
 42414  009BC6  0100               	movlb	0	; () banked
 42415  009BC8  2969               	incf	(memset@n+1)& (0+255),w,b
 42416  009BCA  B4D8               	btfsc	status,2,c
 42417  009BCC  0012               	return	
 42418  009BCE  D7EB               	goto	l13567
 42419  009BD0                     __end_of_memset:
 42420                           	opt stack 0
 42421                           tosu	equ	0xFFF
 42422                           tosh	equ	0xFFE
 42423                           tosl	equ	0xFFD
 42424                           pclath	equ	0xFFA
 42425                           tblptru	equ	0xFF8
 42426                           tblptrh	equ	0xFF7
 42427                           tblptrl	equ	0xFF6
 42428                           tablat	equ	0xFF5
 42429                           prodh	equ	0xFF4
 42430                           prodl	equ	0xFF3
 42431                           intcon	equ	0xFF2
 42432                           intcon2	equ	0xFF1
 42433                           intcon3	equ	0xFF0
 42434                           indf0	equ	0xFEF
 42435                           postinc0	equ	0xFEE
 42436                           plusw0	equ	0xFEB
 42437                           fsr0h	equ	0xFEA
 42438                           fsr0l	equ	0xFE9
 42439                           wreg	equ	0xFE8
 42440                           postinc1	equ	0xFE6
 42441                           postdec1	equ	0xFE5
 42442                           plusw1	equ	0xFE3
 42443                           fsr1h	equ	0xFE2
 42444                           fsr1l	equ	0xFE1
 42445                           indf2	equ	0xFDF
 42446                           postinc2	equ	0xFDE
 42447                           postdec2	equ	0xFDD
 42448                           plusw2	equ	0xFDB
 42449                           fsr2h	equ	0xFDA
 42450                           fsr2l	equ	0xFD9
 42451                           status	equ	0xFD8
 42452                           
 42453 ;; *************** function _memcpy *****************
 42454 ;; Defined at:
 42455 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 42456 ;; Parameters:    Size  Location     Type
 42457 ;;  d1              2    4[BANK0 ] PTR void 
 42458 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 42459 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 42460 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 42461 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 42462 ;;  s1              2    6[BANK0 ] PTR const void 
 42463 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 42464 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 42465 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 42466 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 42467 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 42468 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 42469 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 42470 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 42471 ;;		 -> NULL(0), 
 42472 ;;  n               2    8[BANK0 ] unsigned int 
 42473 ;; Auto vars:     Size  Location     Type
 42474 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 42475 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 42476 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 42477 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 42478 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 42479 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 42480 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 42481 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 42482 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 42483 ;;		 -> NULL(0), 
 42484 ;;  d               2   10[BANK0 ] PTR unsigned char 
 42485 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 42486 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 42487 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 42488 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 42489 ;; Return value:  Size  Location     Type
 42490 ;;                  2    4[BANK0 ] PTR void 
 42491 ;; Registers used:
 42492 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42493 ;; Tracked objects:
 42494 ;;		On entry : 0/0
 42495 ;;		On exit  : 0/0
 42496 ;;		Unchanged: 0/0
 42497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42498 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42499 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42500 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42501 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42502 ;;Total ram usage:       10 bytes
 42503 ;; Hardware stack levels used:    1
 42504 ;; Hardware stack levels required when called:    7
 42505 ;; This function calls:
 42506 ;;		Nothing
 42507 ;; This function is called by:
 42508 ;;		_RADIO_SetFSKSyncWord
 42509 ;;		_UpdateCfList
 42510 ;;		_InitDefault868Channels
 42511 ;;		_InitDefault433Channels
 42512 ;;		_AESCmac
 42513 ;;		_LORAWAN_SetNetworkSessionKey
 42514 ;;		_LORAWAN_SetApplicationSessionKey
 42515 ;;		_LORAWAN_RxDone
 42516 ;;		_AssemblePacket
 42517 ;;		_PrepareJoinRequestFrame
 42518 ;;		_PrepareSessionKeys
 42519 ;;		_AssembleEncryptionBlock
 42520 ;;		_ExtractMic
 42521 ;;		_ComputeMic
 42522 ;;		_AESEncodeLoRa
 42523 ;;		_RADIO_GetData
 42524 ;;		_RADIO_GetFSKSyncWord
 42525 ;;		_LORAWAN_SetMcastNetworkSessionKey
 42526 ;;		_LORAWAN_SetMcastApplicationSessionKey
 42527 ;;		_LORAWAN_GetMcastApplicationSessionKey
 42528 ;;		_LORAWAN_GetMcastNetworkSessionKey
 42529 ;;		_LORAWAN_SetDeviceEui
 42530 ;;		_LORAWAN_GetDeviceEui
 42531 ;;		_LORAWAN_SetApplicationEui
 42532 ;;		_LORAWAN_GetApplicationEui
 42533 ;;		_LORAWAN_GetNetworkSessionKey
 42534 ;;		_LORAWAN_GetApplicationSessionKey
 42535 ;;		_LORAWAN_SetApplicationKey
 42536 ;;		_LORAWAN_GetApplicationKey
 42537 ;; This function uses a non-reentrant model
 42538 ;;
 42539                           
 42540                           	psect	text198
 42541  009194                     __ptext198:
 42542                           	opt stack 0
 42543  009194                     _memcpy:
 42544                           	opt stack 17
 42545                           
 42546                           ; BSR set to: 0
 42547                           ;incstack = 0
 42548  009194  C066  F06C         	movff	memcpy@s1,memcpy@s
 42549  009198  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 42550  00919C  C064  F06A         	movff	memcpy@d1,memcpy@d
 42551  0091A0  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 42552  0091A4  D01C               	goto	l13195
 42553  0091A6                     l13189:
 42554  0091A6  C06C  FFF6         	movff	memcpy@s,tblptrl
 42555  0091AA  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 42556  0091AE  0E00               	movlw	low (__mediumconst shr (0+16))
 42557  0091B0  6EF8               	movwf	tblptru,c
 42558  0091B2  C06A  FFD9         	movff	memcpy@d,fsr2l
 42559  0091B6  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 42560  0091BA  0E0F               	movlw	(high __ramtop+-1)
 42561  0091BC  64F7               	cpfsgt	tblptrh,c
 42562  0091BE  D003               	bra	u14367
 42563  0091C0  0008               	tblrd		*
 42564  0091C2  50F5               	movf	tablat,w,c
 42565  0091C4  D005               	bra	u14360
 42566  0091C6                     u14367:
 42567  0091C6  CFF6 FFE9          	movff	tblptrl,fsr0l
 42568  0091CA  CFF7 FFEA          	movff	tblptrh,fsr0h
 42569  0091CE  50EF               	movf	indf0,w,c
 42570  0091D0                     u14360:
 42571  0091D0  6EDF               	movwf	indf2,c
 42572  0091D2  0100               	movlb	0	; () banked
 42573  0091D4  4B6C               	infsnz	memcpy@s& (0+255),f,b
 42574  0091D6  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 42575                           
 42576                           ; BSR set to: 0
 42577  0091D8  0100               	movlb	0	; () banked
 42578  0091DA  4B6A               	infsnz	memcpy@d& (0+255),f,b
 42579  0091DC  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 42580  0091DE                     l13195:
 42581  0091DE  0100               	movlb	0	; () banked
 42582  0091E0  0768               	decf	memcpy@n& (0+255),f,b
 42583  0091E2  A0D8               	btfss	status,0,c
 42584  0091E4  0769               	decf	(memcpy@n+1)& (0+255),f,b
 42585  0091E6  0100               	movlb	0	; () banked
 42586  0091E8  2968               	incf	memcpy@n& (0+255),w,b
 42587  0091EA  E1DD               	bnz	l13189
 42588  0091EC  0100               	movlb	0	; () banked
 42589  0091EE  2969               	incf	(memcpy@n+1)& (0+255),w,b
 42590  0091F0  B4D8               	btfsc	status,2,c
 42591  0091F2  0012               	return	
 42592  0091F4  D7D8               	goto	l13189
 42593  0091F6                     __end_of_memcpy:
 42594                           	opt stack 0
 42595                           tosu	equ	0xFFF
 42596                           tosh	equ	0xFFE
 42597                           tosl	equ	0xFFD
 42598                           pclath	equ	0xFFA
 42599                           tblptru	equ	0xFF8
 42600                           tblptrh	equ	0xFF7
 42601                           tblptrl	equ	0xFF6
 42602                           tablat	equ	0xFF5
 42603                           prodh	equ	0xFF4
 42604                           prodl	equ	0xFF3
 42605                           intcon	equ	0xFF2
 42606                           intcon2	equ	0xFF1
 42607                           intcon3	equ	0xFF0
 42608                           indf0	equ	0xFEF
 42609                           postinc0	equ	0xFEE
 42610                           plusw0	equ	0xFEB
 42611                           fsr0h	equ	0xFEA
 42612                           fsr0l	equ	0xFE9
 42613                           wreg	equ	0xFE8
 42614                           postinc1	equ	0xFE6
 42615                           postdec1	equ	0xFE5
 42616                           plusw1	equ	0xFE3
 42617                           fsr1h	equ	0xFE2
 42618                           fsr1l	equ	0xFE1
 42619                           indf2	equ	0xFDF
 42620                           postinc2	equ	0xFDE
 42621                           postdec2	equ	0xFDD
 42622                           plusw2	equ	0xFDB
 42623                           fsr2h	equ	0xFDA
 42624                           fsr2l	equ	0xFD9
 42625                           status	equ	0xFD8
 42626                           
 42627 ;; *************** function _CreateAllSoftwareTimers *****************
 42628 ;; Defined at:
 42629 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42630 ;; Parameters:    Size  Location     Type
 42631 ;;		None
 42632 ;; Auto vars:     Size  Location     Type
 42633 ;;		None
 42634 ;; Return value:  Size  Location     Type
 42635 ;;                  1    wreg      void 
 42636 ;; Registers used:
 42637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42638 ;; Tracked objects:
 42639 ;;		On entry : 0/0
 42640 ;;		On exit  : 0/0
 42641 ;;		Unchanged: 0/0
 42642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42647 ;;Total ram usage:        0 bytes
 42648 ;; Hardware stack levels used:    1
 42649 ;; Hardware stack levels required when called:    8
 42650 ;; This function calls:
 42651 ;;		_SwTimerCreate
 42652 ;; This function is called by:
 42653 ;;		_LORAWAN_Init
 42654 ;; This function uses a non-reentrant model
 42655 ;;
 42656                           
 42657                           	psect	text199
 42658  00950C                     __ptext199:
 42659                           	opt stack 0
 42660  00950C                     _CreateAllSoftwareTimers:
 42661                           	opt stack 21
 42662                           
 42663                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 42664                           
 42665                           ; BSR set to: 0
 42666                           ;incstack = 0
 42667  00950C  EC56  F043         	call	_SwTimerCreate	;wreg free
 42668  009510  0102               	movlb	2	; () banked
 42669  009512  6FE2               	movwf	(_loRa+226)& (0+255),b
 42670                           
 42671                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 42672  009514  EC56  F043         	call	_SwTimerCreate	;wreg free
 42673  009518  0102               	movlb	2	; () banked
 42674  00951A  6FE3               	movwf	(_loRa+227)& (0+255),b
 42675                           
 42676                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 42677  00951C  EC56  F043         	call	_SwTimerCreate	;wreg free
 42678  009520  0102               	movlb	2	; () banked
 42679  009522  6FE4               	movwf	(_loRa+228)& (0+255),b
 42680                           
 42681                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 42682  009524  EC56  F043         	call	_SwTimerCreate	;wreg free
 42683  009528  0102               	movlb	2	; () banked
 42684  00952A  6FE5               	movwf	(_loRa+229)& (0+255),b
 42685                           
 42686                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 42687  00952C  EC56  F043         	call	_SwTimerCreate	;wreg free
 42688  009530  0102               	movlb	2	; () banked
 42689  009532  6FE7               	movwf	(_loRa+231)& (0+255),b
 42690                           
 42691                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 42692  009534  EC56  F043         	call	_SwTimerCreate	;wreg free
 42693  009538  0102               	movlb	2	; () banked
 42694  00953A  6FE8               	movwf	(_loRa+232)& (0+255),b
 42695                           
 42696                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 42697  00953C  EC56  F043         	call	_SwTimerCreate	;wreg free
 42698  009540  0102               	movlb	2	; () banked
 42699  009542  6FE6               	movwf	(_loRa+230)& (0+255),b
 42700                           
 42701                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 42702  009544  EC56  F043         	call	_SwTimerCreate	;wreg free
 42703  009548  0102               	movlb	2	; () banked
 42704  00954A  6FEA               	movwf	(_loRa+234)& (0+255),b
 42705                           
 42706                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 42707  00954C  EC56  F043         	call	_SwTimerCreate	;wreg free
 42708  009550  0102               	movlb	2	; () banked
 42709  009552  6FF3               	movwf	(_loRa+243)& (0+255),b
 42710                           
 42711                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 42712  009554  EC56  F043         	call	_SwTimerCreate	;wreg free
 42713  009558  0102               	movlb	2	; () banked
 42714  00955A  6FE9               	movwf	(_loRa+233)& (0+255),b
 42715                           
 42716                           ; BSR set to: 2
 42717  00955C  0012               	return		;funcret
 42718  00955E                     __end_of_CreateAllSoftwareTimers:
 42719                           	opt stack 0
 42720                           tosu	equ	0xFFF
 42721                           tosh	equ	0xFFE
 42722                           tosl	equ	0xFFD
 42723                           pclath	equ	0xFFA
 42724                           tblptru	equ	0xFF8
 42725                           tblptrh	equ	0xFF7
 42726                           tblptrl	equ	0xFF6
 42727                           tablat	equ	0xFF5
 42728                           prodh	equ	0xFF4
 42729                           prodl	equ	0xFF3
 42730                           intcon	equ	0xFF2
 42731                           intcon2	equ	0xFF1
 42732                           intcon3	equ	0xFF0
 42733                           indf0	equ	0xFEF
 42734                           postinc0	equ	0xFEE
 42735                           plusw0	equ	0xFEB
 42736                           fsr0h	equ	0xFEA
 42737                           fsr0l	equ	0xFE9
 42738                           wreg	equ	0xFE8
 42739                           postinc1	equ	0xFE6
 42740                           postdec1	equ	0xFE5
 42741                           plusw1	equ	0xFE3
 42742                           fsr1h	equ	0xFE2
 42743                           fsr1l	equ	0xFE1
 42744                           indf2	equ	0xFDF
 42745                           postinc2	equ	0xFDE
 42746                           postdec2	equ	0xFDD
 42747                           plusw2	equ	0xFDB
 42748                           fsr2h	equ	0xFDA
 42749                           fsr2l	equ	0xFD9
 42750                           status	equ	0xFD8
 42751                           
 42752 ;; *************** function _SwTimerCreate *****************
 42753 ;; Defined at:
 42754 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42755 ;; Parameters:    Size  Location     Type
 42756 ;;		None
 42757 ;; Auto vars:     Size  Location     Type
 42758 ;;  retVal          1    4[BANK0 ] unsigned char 
 42759 ;; Return value:  Size  Location     Type
 42760 ;;                  1    wreg      unsigned char 
 42761 ;; Registers used:
 42762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42763 ;; Tracked objects:
 42764 ;;		On entry : 0/0
 42765 ;;		On exit  : 0/0
 42766 ;;		Unchanged: 0/0
 42767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42769 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42771 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42772 ;;Total ram usage:        1 bytes
 42773 ;; Hardware stack levels used:    1
 42774 ;; Hardware stack levels required when called:    7
 42775 ;; This function calls:
 42776 ;;		Nothing
 42777 ;; This function is called by:
 42778 ;;		_RADIO_Init
 42779 ;;		_CreateAllSoftwareTimers
 42780 ;; This function uses a non-reentrant model
 42781 ;;
 42782                           
 42783                           	psect	text200
 42784  0086AC                     __ptext200:
 42785                           	opt stack 0
 42786  0086AC                     _SwTimerCreate:
 42787                           	opt stack 21
 42788                           
 42789                           ;sw_timer.c: 156: uint8_t retVal;
 42790                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 42791                           
 42792                           ; BSR set to: 2
 42793                           ;incstack = 0
 42794  0086AC  0E14               	movlw	20
 42795  0086AE  0100               	movlb	0	; () banked
 42796  0086B0  61FA               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 42797  0086B2  D043               	goto	l126
 42798                           
 42799                           ; BSR set to: 0
 42800                           ;sw_timer.c: 158: {
 42801                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 42802  0086B4  9EF2               	bcf	intcon,7,c	;volatile
 42803                           
 42804                           ;sw_timer.c: 160: retVal = allocatedTimers;
 42805  0086B6  C0FA  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 42806                           
 42807                           ; BSR set to: 0
 42808                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 42809  0086BA  0100               	movlb	0	; () banked
 42810  0086BC  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42811  0086BE  0D08               	mullw	8
 42812  0086C0  0E04               	movlw	4
 42813  0086C2  26F3               	addwf	prodl,f,c
 42814  0086C4  0E00               	movlw	0
 42815  0086C6  22F4               	addwfc	prodh,f,c
 42816  0086C8  0E00               	movlw	low _swTimers
 42817  0086CA  24F3               	addwf	prodl,w,c
 42818  0086CC  6ED9               	movwf	fsr2l,c
 42819  0086CE  0E03               	movlw	high _swTimers
 42820  0086D0  20F4               	addwfc	prodh,w,c
 42821  0086D2  6EDA               	movwf	fsr2h,c
 42822  0086D4  0E00               	movlw	0
 42823  0086D6  6EDF               	movwf	indf2,c
 42824                           
 42825                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 42826  0086D8  0100               	movlb	0	; () banked
 42827  0086DA  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42828  0086DC  0D08               	mullw	8
 42829  0086DE  0E00               	movlw	low _swTimers
 42830  0086E0  24F3               	addwf	prodl,w,c
 42831  0086E2  6ED9               	movwf	fsr2l,c
 42832  0086E4  0E03               	movlw	high _swTimers
 42833  0086E6  20F4               	addwfc	prodh,w,c
 42834  0086E8  6EDA               	movwf	fsr2h,c
 42835  0086EA  6ADE               	clrf	postinc2,c
 42836  0086EC  6ADE               	clrf	postinc2,c
 42837  0086EE  6ADE               	clrf	postinc2,c
 42838  0086F0  6ADD               	clrf	postdec2,c
 42839                           
 42840                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 42841  0086F2  0100               	movlb	0	; () banked
 42842  0086F4  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42843  0086F6  0D08               	mullw	8
 42844  0086F8  0E05               	movlw	5
 42845  0086FA  26F3               	addwf	prodl,f,c
 42846  0086FC  0E00               	movlw	0
 42847  0086FE  22F4               	addwfc	prodh,f,c
 42848  008700  0E00               	movlw	low _swTimers
 42849  008702  24F3               	addwf	prodl,w,c
 42850  008704  6ED9               	movwf	fsr2l,c
 42851  008706  0E03               	movlw	high _swTimers
 42852  008708  20F4               	addwfc	prodh,w,c
 42853  00870A  6EDA               	movwf	fsr2h,c
 42854  00870C  0E00               	movlw	0
 42855  00870E  6EDF               	movwf	indf2,c
 42856                           
 42857                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 42858  008710  0100               	movlb	0	; () banked
 42859  008712  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42860  008714  0D08               	mullw	8
 42861  008716  0E06               	movlw	6
 42862  008718  26F3               	addwf	prodl,f,c
 42863  00871A  0E00               	movlw	0
 42864  00871C  22F4               	addwfc	prodh,f,c
 42865  00871E  0E00               	movlw	low _swTimers
 42866  008720  24F3               	addwf	prodl,w,c
 42867  008722  6ED9               	movwf	fsr2l,c
 42868  008724  0E03               	movlw	high _swTimers
 42869  008726  20F4               	addwfc	prodh,w,c
 42870  008728  6EDA               	movwf	fsr2h,c
 42871  00872A  0E00               	movlw	0
 42872  00872C  6EDE               	movwf	postinc2,c
 42873  00872E  0E00               	movlw	0
 42874  008730  6EDD               	movwf	postdec2,c
 42875                           
 42876                           ; BSR set to: 0
 42877                           ;sw_timer.c: 165: allocatedTimers++;
 42878  008732  0100               	movlb	0	; () banked
 42879  008734  2BFA               	incf	_allocatedTimers& (0+255),f,b	;volatile
 42880                           
 42881                           ; BSR set to: 0
 42882                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 42883  008736  8EF2               	bsf	intcon,7,c	;volatile
 42884                           
 42885                           ;sw_timer.c: 167: }
 42886  008738  D001               	goto	l10717
 42887  00873A                     l126:
 42888                           
 42889                           ;sw_timer.c: 171: {
 42890  00873A  D7FF               	goto	l126
 42891  00873C                     l10717:
 42892                           
 42893                           ;sw_timer.c: 175: }
 42894                           ;sw_timer.c: 176: }
 42895                           ;sw_timer.c: 177: return retVal;
 42896  00873C  0100               	movlb	0	; () banked
 42897  00873E  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42898  008740  0012               	return	
 42899  008742                     __end_of_SwTimerCreate:
 42900                           	opt stack 0
 42901                           tosu	equ	0xFFF
 42902                           tosh	equ	0xFFE
 42903                           tosl	equ	0xFFD
 42904                           pclath	equ	0xFFA
 42905                           tblptru	equ	0xFF8
 42906                           tblptrh	equ	0xFF7
 42907                           tblptrl	equ	0xFF6
 42908                           tablat	equ	0xFF5
 42909                           prodh	equ	0xFF4
 42910                           prodl	equ	0xFF3
 42911                           intcon	equ	0xFF2
 42912                           intcon2	equ	0xFF1
 42913                           intcon3	equ	0xFF0
 42914                           indf0	equ	0xFEF
 42915                           postinc0	equ	0xFEE
 42916                           plusw0	equ	0xFEB
 42917                           fsr0h	equ	0xFEA
 42918                           fsr0l	equ	0xFE9
 42919                           wreg	equ	0xFE8
 42920                           postinc1	equ	0xFE6
 42921                           postdec1	equ	0xFE5
 42922                           plusw1	equ	0xFE3
 42923                           fsr1h	equ	0xFE2
 42924                           fsr1l	equ	0xFE1
 42925                           indf2	equ	0xFDF
 42926                           postinc2	equ	0xFDE
 42927                           postdec2	equ	0xFDD
 42928                           plusw2	equ	0xFDB
 42929                           fsr2h	equ	0xFDA
 42930                           fsr2l	equ	0xFD9
 42931                           status	equ	0xFD8
 42932                           
 42933 ;; *************** function _LORAWAN_GetState *****************
 42934 ;; Defined at:
 42935 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 42936 ;; Parameters:    Size  Location     Type
 42937 ;;		None
 42938 ;; Auto vars:     Size  Location     Type
 42939 ;;		None
 42940 ;; Return value:  Size  Location     Type
 42941 ;;                  1    wreg      unsigned char 
 42942 ;; Registers used:
 42943 ;;		wreg, status,2, status,0
 42944 ;; Tracked objects:
 42945 ;;		On entry : 0/0
 42946 ;;		On exit  : 0/0
 42947 ;;		Unchanged: 0/0
 42948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42953 ;;Total ram usage:        0 bytes
 42954 ;; Hardware stack levels used:    1
 42955 ;; Hardware stack levels required when called:    7
 42956 ;; This function calls:
 42957 ;;		Nothing
 42958 ;; This function is called by:
 42959 ;;		_main
 42960 ;; This function uses a non-reentrant model
 42961 ;;
 42962                           
 42963                           	psect	text201
 42964  00A3A4                     __ptext201:
 42965                           	opt stack 0
 42966  00A3A4                     _LORAWAN_GetState:
 42967                           	opt stack 23
 42968                           
 42969                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 42970                           
 42971                           ; BSR set to: 0
 42972                           ;incstack = 0
 42973  00A3A4  0102               	movlb	2	; () banked
 42974  00A3A6  5102               	movf	(_loRa+2)& (0+255),w,b
 42975  00A3A8  0B0F               	andlw	15
 42976  00A3AA  0012               	return	
 42977  00A3AC                     __end_of_LORAWAN_GetState:
 42978                           	opt stack 0
 42979                           tosu	equ	0xFFF
 42980                           tosh	equ	0xFFE
 42981                           tosl	equ	0xFFD
 42982                           pclath	equ	0xFFA
 42983                           tblptru	equ	0xFF8
 42984                           tblptrh	equ	0xFF7
 42985                           tblptrl	equ	0xFF6
 42986                           tablat	equ	0xFF5
 42987                           prodh	equ	0xFF4
 42988                           prodl	equ	0xFF3
 42989                           intcon	equ	0xFF2
 42990                           intcon2	equ	0xFF1
 42991                           intcon3	equ	0xFF0
 42992                           indf0	equ	0xFEF
 42993                           postinc0	equ	0xFEE
 42994                           plusw0	equ	0xFEB
 42995                           fsr0h	equ	0xFEA
 42996                           fsr0l	equ	0xFE9
 42997                           wreg	equ	0xFE8
 42998                           postinc1	equ	0xFE6
 42999                           postdec1	equ	0xFE5
 43000                           plusw1	equ	0xFE3
 43001                           fsr1h	equ	0xFE2
 43002                           fsr1l	equ	0xFE1
 43003                           indf2	equ	0xFDF
 43004                           postinc2	equ	0xFDE
 43005                           postdec2	equ	0xFDD
 43006                           plusw2	equ	0xFDB
 43007                           fsr2h	equ	0xFDA
 43008                           fsr2l	equ	0xFD9
 43009                           status	equ	0xFD8
 43010                           
 43011 ;; *************** function _IO_pins_init *****************
 43012 ;; Defined at:
 43013 ;;		line 118 in file "main.c"
 43014 ;; Parameters:    Size  Location     Type
 43015 ;;		None
 43016 ;; Auto vars:     Size  Location     Type
 43017 ;;		None
 43018 ;; Return value:  Size  Location     Type
 43019 ;;                  1    wreg      void 
 43020 ;; Registers used:
 43021 ;;		None
 43022 ;; Tracked objects:
 43023 ;;		On entry : 0/0
 43024 ;;		On exit  : 0/0
 43025 ;;		Unchanged: 0/0
 43026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43030 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43031 ;;Total ram usage:        0 bytes
 43032 ;; Hardware stack levels used:    1
 43033 ;; Hardware stack levels required when called:    7
 43034 ;; This function calls:
 43035 ;;		Nothing
 43036 ;; This function is called by:
 43037 ;;		_main
 43038 ;; This function uses a non-reentrant model
 43039 ;;
 43040                           
 43041                           	psect	text202
 43042  00A252                     __ptext202:
 43043                           	opt stack 0
 43044  00A252                     _IO_pins_init:
 43045                           	opt stack 23
 43046                           
 43047                           ;main.c: 120: TRISAbits.TRISA4 = 0;
 43048                           
 43049                           ; BSR set to: 2
 43050                           ;incstack = 0
 43051  00A252  9892               	bcf	3986,4,c	;volatile
 43052                           
 43053                           ;main.c: 121: TRISCbits.TRISC0 = 0;
 43054  00A254  9094               	bcf	3988,0,c	;volatile
 43055                           
 43056                           ;main.c: 122: TRISDbits.TRISD2 = 0;
 43057  00A256  9495               	bcf	3989,2,c	;volatile
 43058                           
 43059                           ;main.c: 123: TRISCbits.TRISC3 = 1;
 43060  00A258  8694               	bsf	3988,3,c	;volatile
 43061                           
 43062                           ;main.c: 125: ANSELDbits.ANSD2 = 0;
 43063  00A25A  010F               	movlb	15	; () banked
 43064  00A25C  953B               	bcf	59,2,b	;volatile
 43065                           
 43066                           ;main.c: 126: ANSELCbits.ANSC3 = 1;
 43067  00A25E  010F               	movlb	15	; () banked
 43068  00A260  873A               	bsf	58,3,b	;volatile
 43069                           
 43070                           ; BSR set to: 15
 43071  00A262  0012               	return		;funcret
 43072  00A264                     __end_of_IO_pins_init:
 43073                           	opt stack 0
 43074                           tosu	equ	0xFFF
 43075                           tosh	equ	0xFFE
 43076                           tosl	equ	0xFFD
 43077                           pclath	equ	0xFFA
 43078                           tblptru	equ	0xFF8
 43079                           tblptrh	equ	0xFF7
 43080                           tblptrl	equ	0xFF6
 43081                           tablat	equ	0xFF5
 43082                           prodh	equ	0xFF4
 43083                           prodl	equ	0xFF3
 43084                           intcon	equ	0xFF2
 43085                           intcon2	equ	0xFF1
 43086                           intcon3	equ	0xFF0
 43087                           indf0	equ	0xFEF
 43088                           postinc0	equ	0xFEE
 43089                           plusw0	equ	0xFEB
 43090                           fsr0h	equ	0xFEA
 43091                           fsr0l	equ	0xFE9
 43092                           wreg	equ	0xFE8
 43093                           postinc1	equ	0xFE6
 43094                           postdec1	equ	0xFE5
 43095                           plusw1	equ	0xFE3
 43096                           fsr1h	equ	0xFE2
 43097                           fsr1l	equ	0xFE1
 43098                           indf2	equ	0xFDF
 43099                           postinc2	equ	0xFDE
 43100                           postdec2	equ	0xFDD
 43101                           plusw2	equ	0xFDB
 43102                           fsr2h	equ	0xFDA
 43103                           fsr2l	equ	0xFD9
 43104                           status	equ	0xFD8
 43105                           
 43106 ;; *************** function _ADC_Init *****************
 43107 ;; Defined at:
 43108 ;;		line 144 in file "main.c"
 43109 ;; Parameters:    Size  Location     Type
 43110 ;;		None
 43111 ;; Auto vars:     Size  Location     Type
 43112 ;;		None
 43113 ;; Return value:  Size  Location     Type
 43114 ;;                  1    wreg      void 
 43115 ;; Registers used:
 43116 ;;		wreg, status,2
 43117 ;; Tracked objects:
 43118 ;;		On entry : 0/0
 43119 ;;		On exit  : 0/0
 43120 ;;		Unchanged: 0/0
 43121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43126 ;;Total ram usage:        0 bytes
 43127 ;; Hardware stack levels used:    1
 43128 ;; Hardware stack levels required when called:    7
 43129 ;; This function calls:
 43130 ;;		Nothing
 43131 ;; This function is called by:
 43132 ;;		_main
 43133 ;; This function uses a non-reentrant model
 43134 ;;
 43135                           
 43136                           	psect	text203
 43137  00A2CE                     __ptext203:
 43138                           	opt stack 0
 43139  00A2CE                     _ADC_Init:
 43140                           	opt stack 23
 43141                           
 43142                           ;main.c: 145: ADCON0bits.GO = 0;
 43143                           
 43144                           ; BSR set to: 15
 43145                           ;incstack = 0
 43146  00A2CE  92C2               	bcf	4034,1,c	;volatile
 43147                           
 43148                           ;main.c: 146: ADCON2bits.ADFM = 1;
 43149  00A2D0  8EC0               	bsf	4032,7,c	;volatile
 43150                           
 43151                           ;main.c: 147: ADCON2bits.ADCS = 3;
 43152  00A2D2  50C0               	movf	4032,w,c	;volatile
 43153  00A2D4  0BF8               	andlw	-8
 43154  00A2D6  0903               	iorlw	3
 43155  00A2D8  6EC0               	movwf	4032,c	;volatile
 43156  00A2DA  0012               	return	
 43157  00A2DC                     __end_of_ADC_Init:
 43158                           	opt stack 0
 43159                           tosu	equ	0xFFF
 43160                           tosh	equ	0xFFE
 43161                           tosl	equ	0xFFD
 43162                           pclath	equ	0xFFA
 43163                           tblptru	equ	0xFF8
 43164                           tblptrh	equ	0xFF7
 43165                           tblptrl	equ	0xFF6
 43166                           tablat	equ	0xFF5
 43167                           prodh	equ	0xFF4
 43168                           prodl	equ	0xFF3
 43169                           intcon	equ	0xFF2
 43170                           intcon2	equ	0xFF1
 43171                           intcon3	equ	0xFF0
 43172                           indf0	equ	0xFEF
 43173                           postinc0	equ	0xFEE
 43174                           plusw0	equ	0xFEB
 43175                           fsr0h	equ	0xFEA
 43176                           fsr0l	equ	0xFE9
 43177                           wreg	equ	0xFE8
 43178                           postinc1	equ	0xFE6
 43179                           postdec1	equ	0xFE5
 43180                           plusw1	equ	0xFE3
 43181                           fsr1h	equ	0xFE2
 43182                           fsr1l	equ	0xFE1
 43183                           indf2	equ	0xFDF
 43184                           postinc2	equ	0xFDE
 43185                           postdec2	equ	0xFDD
 43186                           plusw2	equ	0xFDB
 43187                           fsr2h	equ	0xFDA
 43188                           fsr2l	equ	0xFD9
 43189                           status	equ	0xFD8
 43190                           
 43191 ;; *************** function _INTERRUPT_InterruptManager *****************
 43192 ;; Defined at:
 43193 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 43194 ;; Parameters:    Size  Location     Type
 43195 ;;		None
 43196 ;; Auto vars:     Size  Location     Type
 43197 ;;		None
 43198 ;; Return value:  Size  Location     Type
 43199 ;;                  1    wreg      void 
 43200 ;; Registers used:
 43201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43202 ;; Tracked objects:
 43203 ;;		On entry : 0/0
 43204 ;;		On exit  : 0/0
 43205 ;;		Unchanged: 0/0
 43206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43209 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43210 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43211 ;;Total ram usage:        8 bytes
 43212 ;; Hardware stack levels used:    1
 43213 ;; Hardware stack levels required when called:    6
 43214 ;; This function calls:
 43215 ;;		_INT1_ISR
 43216 ;;		_INT2_ISR
 43217 ;;		_PIN_MANAGER_IOC
 43218 ;;		_TMR1_ISR
 43219 ;; This function is called by:
 43220 ;;		Interrupt level 2
 43221 ;; This function uses a non-reentrant model
 43222 ;;
 43223                           
 43224                           	psect	intcode
 43225  000008                     __pintcode:
 43226                           	opt stack 0
 43227  000008                     _INTERRUPT_InterruptManager:
 43228                           	opt stack 12
 43229                           
 43230                           ;incstack = 0
 43231  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 43232  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 43233  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 43234  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 43235  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 43236  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 43237  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 43238  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 43239  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 43240                           
 43241                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 43242  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 43243  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 43244  000030  D003               	goto	i2l2439
 43245                           
 43246                           ;interrupt_manager.c: 61: {
 43247                           ;interrupt_manager.c: 62: INT1_ISR();
 43248  000032  ECDA  F051         	call	_INT1_ISR	;wreg free
 43249                           
 43250                           ;interrupt_manager.c: 63: }
 43251  000036  D013               	goto	i2l2447
 43252  000038                     i2l2439:
 43253                           
 43254                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 43255  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 43256  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 43257  00003C  D003               	goto	i2l2441
 43258                           
 43259                           ;interrupt_manager.c: 65: {
 43260                           ;interrupt_manager.c: 66: INT2_ISR();
 43261  00003E  ECD6  F051         	call	_INT2_ISR	;wreg free
 43262                           
 43263                           ;interrupt_manager.c: 67: }
 43264  000042  D00D               	goto	i2l2447
 43265  000044                     i2l2441:
 43266                           
 43267                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 43268  000044  BCF2               	btfsc	intcon,6,c	;volatile
 43269  000046  A09D               	btfss	3997,0,c	;volatile
 43270  000048  D005               	goto	i2l2443
 43271  00004A  A09E               	btfss	3998,0,c	;volatile
 43272  00004C  D003               	goto	i2l2443
 43273                           
 43274                           ;interrupt_manager.c: 69: {
 43275                           ;interrupt_manager.c: 70: TMR1_ISR();
 43276  00004E  EC42  F051         	call	_TMR1_ISR	;wreg free
 43277                           
 43278                           ;interrupt_manager.c: 71: }
 43279  000052  D005               	goto	i2l2447
 43280  000054                     i2l2443:
 43281                           
 43282                           ;interrupt_manager.c: 72: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 43283  000054  B6F2               	btfsc	intcon,3,c	;volatile
 43284  000056  A0F2               	btfss	intcon,0,c	;volatile
 43285  000058  D002               	goto	i2l2447
 43286                           
 43287                           ;interrupt_manager.c: 73: {
 43288                           ;interrupt_manager.c: 74: PIN_MANAGER_IOC();
 43289  00005A  EC4A  F051         	call	_PIN_MANAGER_IOC	;wreg free
 43290  00005E                     i2l2447:
 43291  00005E  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 43292  000062  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 43293  000066  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 43294  00006A  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 43295  00006E  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 43296  000072  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 43297  000076  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 43298  00007A  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 43299  00007E  0011               	retfie		f
 43300  000080                     __end_of_INTERRUPT_InterruptManager:
 43301                           	opt stack 0
 43302                           tosu	equ	0xFFF
 43303                           tosh	equ	0xFFE
 43304                           tosl	equ	0xFFD
 43305                           pclatu	equ	0xFFB
 43306                           pclath	equ	0xFFA
 43307                           tblptru	equ	0xFF8
 43308                           tblptrh	equ	0xFF7
 43309                           tblptrl	equ	0xFF6
 43310                           tablat	equ	0xFF5
 43311                           prodh	equ	0xFF4
 43312                           prodl	equ	0xFF3
 43313                           intcon	equ	0xFF2
 43314                           intcon2	equ	0xFF1
 43315                           intcon3	equ	0xFF0
 43316                           indf0	equ	0xFEF
 43317                           postinc0	equ	0xFEE
 43318                           plusw0	equ	0xFEB
 43319                           fsr0h	equ	0xFEA
 43320                           fsr0l	equ	0xFE9
 43321                           wreg	equ	0xFE8
 43322                           postinc1	equ	0xFE6
 43323                           postdec1	equ	0xFE5
 43324                           plusw1	equ	0xFE3
 43325                           fsr1h	equ	0xFE2
 43326                           fsr1l	equ	0xFE1
 43327                           indf2	equ	0xFDF
 43328                           postinc2	equ	0xFDE
 43329                           postdec2	equ	0xFDD
 43330                           plusw2	equ	0xFDB
 43331                           fsr2h	equ	0xFDA
 43332                           fsr2l	equ	0xFD9
 43333                           status	equ	0xFD8
 43334                           
 43335 ;; *************** function _TMR1_ISR *****************
 43336 ;; Defined at:
 43337 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 43338 ;; Parameters:    Size  Location     Type
 43339 ;;		None
 43340 ;; Auto vars:     Size  Location     Type
 43341 ;;		None
 43342 ;; Return value:  Size  Location     Type
 43343 ;;                  1    wreg      void 
 43344 ;; Registers used:
 43345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43346 ;; Tracked objects:
 43347 ;;		On entry : 0/0
 43348 ;;		On exit  : 0/0
 43349 ;;		Unchanged: 0/0
 43350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43355 ;;Total ram usage:        0 bytes
 43356 ;; Hardware stack levels used:    1
 43357 ;; Hardware stack levels required when called:    5
 43358 ;; This function calls:
 43359 ;;		_TMR1_CallBack
 43360 ;; This function is called by:
 43361 ;;		_INTERRUPT_InterruptManager
 43362 ;; This function uses a non-reentrant model
 43363 ;;
 43364                           
 43365                           	psect	text205
 43366  00A284                     __ptext205:
 43367                           	opt stack 0
 43368  00A284                     _TMR1_ISR:
 43369                           	opt stack 12
 43370                           
 43371                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 43372                           
 43373                           ;incstack = 0
 43374  00A284  909E               	bcf	3998,0,c	;volatile
 43375                           
 43376                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 43377  00A286  505F               	movf	_timer1ReloadVal+1,w,c	;volatile
 43378  00A288  6ECF               	movwf	4047,c	;volatile
 43379                           
 43380                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 43381  00A28A  C05E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 43382                           
 43383                           ;tmr1.c: 171: TMR1_CallBack();
 43384  00A28E  EC72  F04F         	call	_TMR1_CallBack	;wreg free
 43385  00A292  0012               	return		;funcret
 43386  00A294                     __end_of_TMR1_ISR:
 43387                           	opt stack 0
 43388                           tosu	equ	0xFFF
 43389                           tosh	equ	0xFFE
 43390                           tosl	equ	0xFFD
 43391                           pclatu	equ	0xFFB
 43392                           pclath	equ	0xFFA
 43393                           tblptru	equ	0xFF8
 43394                           tblptrh	equ	0xFF7
 43395                           tblptrl	equ	0xFF6
 43396                           tablat	equ	0xFF5
 43397                           prodh	equ	0xFF4
 43398                           prodl	equ	0xFF3
 43399                           intcon	equ	0xFF2
 43400                           intcon2	equ	0xFF1
 43401                           intcon3	equ	0xFF0
 43402                           indf0	equ	0xFEF
 43403                           postinc0	equ	0xFEE
 43404                           plusw0	equ	0xFEB
 43405                           fsr0h	equ	0xFEA
 43406                           fsr0l	equ	0xFE9
 43407                           wreg	equ	0xFE8
 43408                           postinc1	equ	0xFE6
 43409                           postdec1	equ	0xFE5
 43410                           plusw1	equ	0xFE3
 43411                           fsr1h	equ	0xFE2
 43412                           fsr1l	equ	0xFE1
 43413                           indf2	equ	0xFDF
 43414                           postinc2	equ	0xFDE
 43415                           postdec2	equ	0xFDD
 43416                           plusw2	equ	0xFDB
 43417                           fsr2h	equ	0xFDA
 43418                           fsr2l	equ	0xFD9
 43419                           status	equ	0xFD8
 43420                           
 43421 ;; *************** function _TMR1_CallBack *****************
 43422 ;; Defined at:
 43423 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 43424 ;; Parameters:    Size  Location     Type
 43425 ;;		None
 43426 ;; Auto vars:     Size  Location     Type
 43427 ;;		None
 43428 ;; Return value:  Size  Location     Type
 43429 ;;                  1    wreg      void 
 43430 ;; Registers used:
 43431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43432 ;; Tracked objects:
 43433 ;;		On entry : 0/0
 43434 ;;		On exit  : 0/0
 43435 ;;		Unchanged: 0/0
 43436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43441 ;;Total ram usage:        0 bytes
 43442 ;; Hardware stack levels used:    1
 43443 ;; Hardware stack levels required when called:    4
 43444 ;; This function calls:
 43445 ;;		Absolute function
 43446 ;;		_TMR1_DefaultInterruptHandler
 43447 ;;		_TMR_ISR_lora
 43448 ;; This function is called by:
 43449 ;;		_TMR1_ISR
 43450 ;; This function uses a non-reentrant model
 43451 ;;
 43452                           
 43453                           	psect	text206
 43454  009EE4                     __ptext206:
 43455                           	opt stack 0
 43456  009EE4                     _TMR1_CallBack:
 43457                           	opt stack 12
 43458                           
 43459                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 43460                           
 43461                           ;incstack = 0
 43462  009EE4  0101               	movlb	1	; () banked
 43463  009EE6  51EF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 43464  009EE8  0101               	movlb	1	; () banked
 43465  009EEA  11F0               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 43466  009EEC  B4D8               	btfsc	status,2,c
 43467  009EEE  0012               	return	
 43468                           
 43469                           ; BSR set to: 1
 43470                           ;tmr1.c: 178: {
 43471                           ;tmr1.c: 179: TMR1_InterruptHandler();
 43472  009EF0  D801               	call	i2u2200_48
 43473  009EF2  0012               	return	
 43474  009EF4                     i2u2200_48:
 43475  009EF4  0005               	push	
 43476  009EF6  6EFA               	movwf	pclath,c
 43477  009EF8  0101               	movlb	1	; () banked
 43478  009EFA  51EF               	movf	_TMR1_InterruptHandler& (0+255),w,b
 43479  009EFC  6EFD               	movwf	tosl,c
 43480  009EFE  51F0               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 43481  009F00  6EFE               	movwf	tosh,c
 43482  009F02  6AFF               	clrf	tosu,c
 43483  009F04  50FA               	movf	pclath,w,c
 43484  009F06  0012               	return		;indir
 43485  009F08                     __end_of_TMR1_CallBack:
 43486                           	opt stack 0
 43487                           tosu	equ	0xFFF
 43488                           tosh	equ	0xFFE
 43489                           tosl	equ	0xFFD
 43490                           pclatu	equ	0xFFB
 43491                           pclath	equ	0xFFA
 43492                           tblptru	equ	0xFF8
 43493                           tblptrh	equ	0xFF7
 43494                           tblptrl	equ	0xFF6
 43495                           tablat	equ	0xFF5
 43496                           prodh	equ	0xFF4
 43497                           prodl	equ	0xFF3
 43498                           intcon	equ	0xFF2
 43499                           intcon2	equ	0xFF1
 43500                           intcon3	equ	0xFF0
 43501                           indf0	equ	0xFEF
 43502                           postinc0	equ	0xFEE
 43503                           plusw0	equ	0xFEB
 43504                           fsr0h	equ	0xFEA
 43505                           fsr0l	equ	0xFE9
 43506                           wreg	equ	0xFE8
 43507                           postinc1	equ	0xFE6
 43508                           postdec1	equ	0xFE5
 43509                           plusw1	equ	0xFE3
 43510                           fsr1h	equ	0xFE2
 43511                           fsr1l	equ	0xFE1
 43512                           indf2	equ	0xFDF
 43513                           postinc2	equ	0xFDE
 43514                           postdec2	equ	0xFDD
 43515                           plusw2	equ	0xFDB
 43516                           fsr2h	equ	0xFDA
 43517                           fsr2l	equ	0xFD9
 43518                           status	equ	0xFD8
 43519                           
 43520 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 43521 ;; Defined at:
 43522 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 43523 ;; Parameters:    Size  Location     Type
 43524 ;;		None
 43525 ;; Auto vars:     Size  Location     Type
 43526 ;;		None
 43527 ;; Return value:  Size  Location     Type
 43528 ;;                  1    wreg      void 
 43529 ;; Registers used:
 43530 ;;		None
 43531 ;; Tracked objects:
 43532 ;;		On entry : 0/0
 43533 ;;		On exit  : 0/0
 43534 ;;		Unchanged: 0/0
 43535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43540 ;;Total ram usage:        0 bytes
 43541 ;; Hardware stack levels used:    1
 43542 ;; This function calls:
 43543 ;;		Nothing
 43544 ;; This function is called by:
 43545 ;;		_TMR1_Initialize
 43546 ;;		_TMR1_CallBack
 43547 ;; This function uses a non-reentrant model
 43548 ;;
 43549                           
 43550                           	psect	text207
 43551  00A3FE                     __ptext207:
 43552                           	opt stack 0
 43553  00A3FE                     _TMR1_DefaultInterruptHandler:
 43554                           	opt stack 15
 43555                           
 43556                           ;incstack = 0
 43557  00A3FE  0012               	return		;funcret
 43558  00A400                     __end_of_TMR1_DefaultInterruptHandler:
 43559                           	opt stack 0
 43560                           tosu	equ	0xFFF
 43561                           tosh	equ	0xFFE
 43562                           tosl	equ	0xFFD
 43563                           pclatu	equ	0xFFB
 43564                           pclath	equ	0xFFA
 43565                           tblptru	equ	0xFF8
 43566                           tblptrh	equ	0xFF7
 43567                           tblptrl	equ	0xFF6
 43568                           tablat	equ	0xFF5
 43569                           prodh	equ	0xFF4
 43570                           prodl	equ	0xFF3
 43571                           intcon	equ	0xFF2
 43572                           intcon2	equ	0xFF1
 43573                           intcon3	equ	0xFF0
 43574                           indf0	equ	0xFEF
 43575                           postinc0	equ	0xFEE
 43576                           plusw0	equ	0xFEB
 43577                           fsr0h	equ	0xFEA
 43578                           fsr0l	equ	0xFE9
 43579                           wreg	equ	0xFE8
 43580                           postinc1	equ	0xFE6
 43581                           postdec1	equ	0xFE5
 43582                           plusw1	equ	0xFE3
 43583                           fsr1h	equ	0xFE2
 43584                           fsr1l	equ	0xFE1
 43585                           indf2	equ	0xFDF
 43586                           postinc2	equ	0xFDE
 43587                           postdec2	equ	0xFDD
 43588                           plusw2	equ	0xFDB
 43589                           fsr2h	equ	0xFDA
 43590                           fsr2l	equ	0xFD9
 43591                           status	equ	0xFD8
 43592                           
 43593 ;; *************** function _TMR_ISR_lora *****************
 43594 ;; Defined at:
 43595 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 43596 ;; Parameters:    Size  Location     Type
 43597 ;;		None
 43598 ;; Auto vars:     Size  Location     Type
 43599 ;;		None
 43600 ;; Return value:  Size  Location     Type
 43601 ;;                  1    wreg      void 
 43602 ;; Registers used:
 43603 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43604 ;; Tracked objects:
 43605 ;;		On entry : 0/0
 43606 ;;		On exit  : 0/0
 43607 ;;		Unchanged: 0/0
 43608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43611 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43612 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43613 ;;Total ram usage:        2 bytes
 43614 ;; Hardware stack levels used:    1
 43615 ;; Hardware stack levels required when called:    3
 43616 ;; This function calls:
 43617 ;;		i2_SwTimersInterrupt
 43618 ;;		i2_TMR_SwapTimer
 43619 ;; This function is called by:
 43620 ;;		_TMR_ISR_Lora_Init
 43621 ;;		_TMR1_CallBack
 43622 ;; This function uses a non-reentrant model
 43623 ;;
 43624                           
 43625                           	psect	text208
 43626  009368                     __ptext208:
 43627                           	opt stack 0
 43628  009368                     _TMR_ISR_lora:
 43629                           	opt stack 12
 43630                           
 43631                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 43632                           
 43633                           ;incstack = 0
 43634  009368  0E01               	movlw	1
 43635  00936A  6E4D               	movwf	_timerOverflow,c	;volatile
 43636                           
 43637                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 43638  00936C  EC52  F03A         	call	i2_SwTimersInterrupt	;wreg free
 43639  009370  C021  F05A         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 43640  009374  C022  F05B         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 43641  009378  C023  F05C         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 43642  00937C  C024  F05D         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 43643                           
 43644                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 43645  009380  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 43646  009382  E11C               	bnz	i2l242
 43647  009384  045C               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 43648  009386  B0D8               	btfsc	status,0,c
 43649  009388  0012               	return	
 43650                           
 43651                           ;tmr_lora_addons.c: 66: {
 43652                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 43653  00938A  C05A  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 43654  00938E  C05B  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 43655  009392  1E32               	comf	??_TMR_ISR_lora,f,c
 43656  009394  1E33               	comf	??_TMR_ISR_lora+1,f,c
 43657  009396  4A32               	infsnz	??_TMR_ISR_lora,f,c
 43658  009398  2A33               	incf	??_TMR_ISR_lora+1,f,c
 43659  00939A  C032  F0F8         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 43660  00939E  C033  F0F9         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 43661                           
 43662                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 43663  0093A2  C0F8  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 43664  0093A6  C0F9  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 43665  0093AA  EC79  F04C         	call	i2_TMR_SwapTimer	;wreg free
 43666  0093AE  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 43667  0093B2  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 43668  0093B6  6A42               	clrf	_ticksAdded+2,c	;volatile
 43669  0093B8  6A43               	clrf	_ticksAdded+3,c	;volatile
 43670  0093BA  0012               	return	
 43671  0093BC                     i2l242:
 43672  0093BC  0012               	return		;funcret
 43673  0093BE                     __end_of_TMR_ISR_lora:
 43674                           	opt stack 0
 43675                           tosu	equ	0xFFF
 43676                           tosh	equ	0xFFE
 43677                           tosl	equ	0xFFD
 43678                           pclatu	equ	0xFFB
 43679                           pclath	equ	0xFFA
 43680                           tblptru	equ	0xFF8
 43681                           tblptrh	equ	0xFF7
 43682                           tblptrl	equ	0xFF6
 43683                           tablat	equ	0xFF5
 43684                           prodh	equ	0xFF4
 43685                           prodl	equ	0xFF3
 43686                           intcon	equ	0xFF2
 43687                           intcon2	equ	0xFF1
 43688                           intcon3	equ	0xFF0
 43689                           indf0	equ	0xFEF
 43690                           postinc0	equ	0xFEE
 43691                           plusw0	equ	0xFEB
 43692                           fsr0h	equ	0xFEA
 43693                           fsr0l	equ	0xFE9
 43694                           wreg	equ	0xFE8
 43695                           postinc1	equ	0xFE6
 43696                           postdec1	equ	0xFE5
 43697                           plusw1	equ	0xFE3
 43698                           fsr1h	equ	0xFE2
 43699                           fsr1l	equ	0xFE1
 43700                           indf2	equ	0xFDF
 43701                           postinc2	equ	0xFDE
 43702                           postdec2	equ	0xFDD
 43703                           plusw2	equ	0xFDB
 43704                           fsr2h	equ	0xFDA
 43705                           fsr2l	equ	0xFD9
 43706                           status	equ	0xFD8
 43707                           
 43708 ;; *************** function i2_TMR_SwapTimer *****************
 43709 ;; Defined at:
 43710 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 43711 ;; Parameters:    Size  Location     Type
 43712 ;;  timerVal        2    8[COMRAM] unsigned int 
 43713 ;; Auto vars:     Size  Location     Type
 43714 ;;		None
 43715 ;; Return value:  Size  Location     Type
 43716 ;;                  2    8[COMRAM] unsigned int 
 43717 ;; Registers used:
 43718 ;;		wreg, status,2, status,0, cstack
 43719 ;; Tracked objects:
 43720 ;;		On entry : 0/0
 43721 ;;		On exit  : 0/0
 43722 ;;		Unchanged: 0/0
 43723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43724 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43725 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43727 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43728 ;;Total ram usage:        2 bytes
 43729 ;; Hardware stack levels used:    1
 43730 ;; Hardware stack levels required when called:    1
 43731 ;; This function calls:
 43732 ;;		i2_TMR1_ReadTimer
 43733 ;;		i2_TMR1_WriteTimer
 43734 ;; This function is called by:
 43735 ;;		_TMR_ISR_lora
 43736 ;; This function uses a non-reentrant model
 43737 ;;
 43738                           
 43739                           	psect	text209
 43740  0098F2                     __ptext209:
 43741                           	opt stack 0
 43742  0098F2                     i2_TMR_SwapTimer:
 43743                           	opt stack 13
 43744                           
 43745                           ;sw_timer.c: 114: static uint16_t oldVal;
 43746                           ;sw_timer.c: 115: static uint16_t retVal;
 43747                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 43748                           
 43749                           ;incstack = 0
 43750  0098F2  EC87  F050         	call	i2_TMR1_ReadTimer	;wreg free
 43751  0098F6  C001  F046         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 43752  0098FA  C002  F047         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 43753  0098FE                     i2l11369:
 43754  0098FE  EC87  F050         	call	i2_TMR1_ReadTimer	;wreg free
 43755  009902  5046               	movf	TMR_SwapTimer@oldVal,w,c
 43756  009904  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 43757  009906  E104               	bnz	i2l11371
 43758  009908  5047               	movf	TMR_SwapTimer@oldVal+1,w,c
 43759  00990A  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 43760  00990C  B4D8               	btfsc	status,2,c
 43761  00990E  D7F7               	goto	i2l11369
 43762  009910                     i2l11371:
 43763                           
 43764                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 43765  009910  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 43766  009914  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 43767  009918  ECA4  F050         	call	i2_TMR1_WriteTimer	;wreg free
 43768                           
 43769                           ;sw_timer.c: 128: oldVal++;
 43770  00991C  4A46               	infsnz	TMR_SwapTimer@oldVal,f,c
 43771  00991E  2A47               	incf	TMR_SwapTimer@oldVal+1,f,c
 43772                           
 43773                           ;sw_timer.c: 130: retVal = oldVal;
 43774  009920  C046  F048         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 43775  009924  C047  F049         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 43776                           
 43777                           ;sw_timer.c: 132: return retVal;
 43778  009928  C048  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 43779  00992C  C049  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 43780  009930  0012               	return	
 43781  009932                     __end_ofi2_TMR_SwapTimer:
 43782                           	opt stack 0
 43783                           tosu	equ	0xFFF
 43784                           tosh	equ	0xFFE
 43785                           tosl	equ	0xFFD
 43786                           pclatu	equ	0xFFB
 43787                           pclath	equ	0xFFA
 43788                           tblptru	equ	0xFF8
 43789                           tblptrh	equ	0xFF7
 43790                           tblptrl	equ	0xFF6
 43791                           tablat	equ	0xFF5
 43792                           prodh	equ	0xFF4
 43793                           prodl	equ	0xFF3
 43794                           intcon	equ	0xFF2
 43795                           intcon2	equ	0xFF1
 43796                           intcon3	equ	0xFF0
 43797                           indf0	equ	0xFEF
 43798                           postinc0	equ	0xFEE
 43799                           plusw0	equ	0xFEB
 43800                           fsr0h	equ	0xFEA
 43801                           fsr0l	equ	0xFE9
 43802                           wreg	equ	0xFE8
 43803                           postinc1	equ	0xFE6
 43804                           postdec1	equ	0xFE5
 43805                           plusw1	equ	0xFE3
 43806                           fsr1h	equ	0xFE2
 43807                           fsr1l	equ	0xFE1
 43808                           indf2	equ	0xFDF
 43809                           postinc2	equ	0xFDE
 43810                           postdec2	equ	0xFDD
 43811                           plusw2	equ	0xFDB
 43812                           fsr2h	equ	0xFDA
 43813                           fsr2l	equ	0xFD9
 43814                           status	equ	0xFD8
 43815                           
 43816 ;; *************** function i2_TMR1_WriteTimer *****************
 43817 ;; Defined at:
 43818 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 43819 ;; Parameters:    Size  Location     Type
 43820 ;;  timerVal        2    0[COMRAM] unsigned int 
 43821 ;; Auto vars:     Size  Location     Type
 43822 ;;		None
 43823 ;; Return value:  Size  Location     Type
 43824 ;;                  1    wreg      void 
 43825 ;; Registers used:
 43826 ;;		wreg, status,2
 43827 ;; Tracked objects:
 43828 ;;		On entry : 0/0
 43829 ;;		On exit  : 0/0
 43830 ;;		Unchanged: 0/0
 43831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43835 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43836 ;;Total ram usage:        2 bytes
 43837 ;; Hardware stack levels used:    1
 43838 ;; This function calls:
 43839 ;;		Nothing
 43840 ;; This function is called by:
 43841 ;;		i2_TMR_SwapTimer
 43842 ;; This function uses a non-reentrant model
 43843 ;;
 43844                           
 43845                           	psect	text210
 43846  00A148                     __ptext210:
 43847                           	opt stack 0
 43848  00A148                     i2_TMR1_WriteTimer:
 43849                           	opt stack 13
 43850                           
 43851                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 43852                           
 43853                           ;incstack = 0
 43854  00A148  A4CD               	btfss	4045,2,c	;volatile
 43855  00A14A  D007               	goto	i2l10697
 43856                           
 43857                           ;tmr1.c: 123: {
 43858                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 43859  00A14C  90CD               	bcf	4045,0,c	;volatile
 43860                           
 43861                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 43862  00A14E  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 43863  00A150  6ECF               	movwf	4047,c	;volatile
 43864                           
 43865                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 43866  00A152  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 43867                           
 43868                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 43869  00A156  80CD               	bsf	4045,0,c	;volatile
 43870                           
 43871                           ;tmr1.c: 133: }
 43872  00A158  0012               	return	
 43873  00A15A                     i2l10697:
 43874                           
 43875                           ;tmr1.c: 134: else
 43876                           ;tmr1.c: 135: {
 43877                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 43878  00A15A  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 43879  00A15C  6ECF               	movwf	4047,c	;volatile
 43880                           
 43881                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 43882  00A15E  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 43883  00A162  0012               	return	
 43884  00A164                     __end_ofi2_TMR1_WriteTimer:
 43885                           	opt stack 0
 43886                           tosu	equ	0xFFF
 43887                           tosh	equ	0xFFE
 43888                           tosl	equ	0xFFD
 43889                           pclatu	equ	0xFFB
 43890                           pclath	equ	0xFFA
 43891                           tblptru	equ	0xFF8
 43892                           tblptrh	equ	0xFF7
 43893                           tblptrl	equ	0xFF6
 43894                           tablat	equ	0xFF5
 43895                           prodh	equ	0xFF4
 43896                           prodl	equ	0xFF3
 43897                           intcon	equ	0xFF2
 43898                           intcon2	equ	0xFF1
 43899                           intcon3	equ	0xFF0
 43900                           indf0	equ	0xFEF
 43901                           postinc0	equ	0xFEE
 43902                           plusw0	equ	0xFEB
 43903                           fsr0h	equ	0xFEA
 43904                           fsr0l	equ	0xFE9
 43905                           wreg	equ	0xFE8
 43906                           postinc1	equ	0xFE6
 43907                           postdec1	equ	0xFE5
 43908                           plusw1	equ	0xFE3
 43909                           fsr1h	equ	0xFE2
 43910                           fsr1l	equ	0xFE1
 43911                           indf2	equ	0xFDF
 43912                           postinc2	equ	0xFDE
 43913                           postdec2	equ	0xFDD
 43914                           plusw2	equ	0xFDB
 43915                           fsr2h	equ	0xFDA
 43916                           fsr2l	equ	0xFD9
 43917                           status	equ	0xFD8
 43918                           
 43919 ;; *************** function i2_SwTimersInterrupt *****************
 43920 ;; Defined at:
 43921 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 43922 ;; Parameters:    Size  Location     Type
 43923 ;;		None
 43924 ;; Auto vars:     Size  Location     Type
 43925 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 43926 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 43927 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 43928 ;; Return value:  Size  Location     Type
 43929 ;;                  4   32[COMRAM] unsigned long 
 43930 ;; Registers used:
 43931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43932 ;; Tracked objects:
 43933 ;;		On entry : 0/0
 43934 ;;		On exit  : 0/0
 43935 ;;		Unchanged: 0/0
 43936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43938 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43940 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43941 ;;Total ram usage:       17 bytes
 43942 ;; Hardware stack levels used:    1
 43943 ;; Hardware stack levels required when called:    2
 43944 ;; This function calls:
 43945 ;;		i2_TMR_GetDeltaTime
 43946 ;; This function is called by:
 43947 ;;		_TMR_ISR_lora
 43948 ;; This function uses a non-reentrant model
 43949 ;;
 43950                           
 43951                           	psect	text211
 43952  0074A4                     __ptext211:
 43953                           	opt stack 0
 43954  0074A4                     i2_SwTimersInterrupt:
 43955                           	opt stack 12
 43956                           
 43957                           ;sw_timer.c: 289: uint8_t i;
 43958                           ;sw_timer.c: 290: uint32_t timeElapsed;
 43959                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 43960                           
 43961                           ;incstack = 0
 43962  0074A4  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 43963  0074A6  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 43964  0074A8  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 43965  0074AA  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 43966                           
 43967                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 43968  0074AC  EC3C  F02F         	call	i2_TMR_GetDeltaTime	;wreg free
 43969  0074B0  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 43970  0074B4  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 43971  0074B8  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 43972  0074BC  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 43973                           
 43974                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 43975  0074C0  0E00               	movlw	0
 43976  0074C2  6E31               	movwf	i2SwTimersInterrupt@i,c
 43977  0074C4  D061               	goto	i2l11399
 43978  0074C6                     i2l11387:
 43979                           
 43980                           ;sw_timer.c: 298: {
 43981                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 43982  0074C6  5031               	movf	i2SwTimersInterrupt@i,w,c
 43983  0074C8  0D08               	mullw	8
 43984  0074CA  0E04               	movlw	4
 43985  0074CC  26F3               	addwf	prodl,f,c
 43986  0074CE  0E00               	movlw	0
 43987  0074D0  22F4               	addwfc	prodh,f,c
 43988  0074D2  0E00               	movlw	low _swTimers
 43989  0074D4  24F3               	addwf	prodl,w,c
 43990  0074D6  6ED9               	movwf	fsr2l,c
 43991  0074D8  0E03               	movlw	high _swTimers
 43992  0074DA  20F4               	addwfc	prodh,w,c
 43993  0074DC  6EDA               	movwf	fsr2h,c
 43994  0074DE  04DE               	decf	postinc2,w,c
 43995  0074E0  A4D8               	btfss	status,2,c
 43996  0074E2  D051               	goto	i2l11397
 43997                           
 43998                           ;sw_timer.c: 302: {
 43999                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 44000  0074E4  5031               	movf	i2SwTimersInterrupt@i,w,c
 44001  0074E6  0D08               	mullw	8
 44002  0074E8  0E00               	movlw	low _swTimers
 44003  0074EA  24F3               	addwf	prodl,w,c
 44004  0074EC  6ED9               	movwf	fsr2l,c
 44005  0074EE  0E03               	movlw	high _swTimers
 44006  0074F0  20F4               	addwfc	prodh,w,c
 44007  0074F2  6EDA               	movwf	fsr2h,c
 44008  0074F4  50DE               	movf	postinc2,w,c
 44009  0074F6  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 44010  0074F8  50DE               	movf	postinc2,w,c
 44011  0074FA  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 44012  0074FC  50DE               	movf	postinc2,w,c
 44013  0074FE  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 44014  007500  50DE               	movf	postinc2,w,c
 44015  007502  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 44016  007504  A0D8               	btfss	status,0,c
 44017  007506  D00D               	goto	i2l11393
 44018                           
 44019                           ;sw_timer.c: 304: {
 44020                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 44021  007508  5031               	movf	i2SwTimersInterrupt@i,w,c
 44022  00750A  0D08               	mullw	8
 44023  00750C  0E00               	movlw	low _swTimers
 44024  00750E  24F3               	addwf	prodl,w,c
 44025  007510  6ED9               	movwf	fsr2l,c
 44026  007512  0E03               	movlw	high _swTimers
 44027  007514  20F4               	addwfc	prodh,w,c
 44028  007516  6EDA               	movwf	fsr2h,c
 44029  007518  6ADE               	clrf	postinc2,c
 44030  00751A  6ADE               	clrf	postinc2,c
 44031  00751C  6ADE               	clrf	postinc2,c
 44032  00751E  6ADD               	clrf	postdec2,c
 44033                           
 44034                           ;sw_timer.c: 306: }
 44035  007520  D032               	goto	i2l11397
 44036  007522                     i2l11393:
 44037                           
 44038                           ;sw_timer.c: 307: else
 44039                           ;sw_timer.c: 308: {
 44040                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 44041  007522  5031               	movf	i2SwTimersInterrupt@i,w,c
 44042  007524  0D08               	mullw	8
 44043  007526  0E00               	movlw	low _swTimers
 44044  007528  24F3               	addwf	prodl,w,c
 44045  00752A  6ED9               	movwf	fsr2l,c
 44046  00752C  0E03               	movlw	high _swTimers
 44047  00752E  20F4               	addwfc	prodh,w,c
 44048  007530  6EDA               	movwf	fsr2h,c
 44049  007532  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 44050  007534  5EDE               	subwf	postinc2,f,c
 44051  007536  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 44052  007538  5ADE               	subwfb	postinc2,f,c
 44053  00753A  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 44054  00753C  5ADE               	subwfb	postinc2,f,c
 44055  00753E  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 44056  007540  5ADE               	subwfb	postinc2,f,c
 44057                           
 44058                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 44059  007542  5031               	movf	i2SwTimersInterrupt@i,w,c
 44060  007544  0D08               	mullw	8
 44061  007546  0E00               	movlw	low _swTimers
 44062  007548  24F3               	addwf	prodl,w,c
 44063  00754A  6ED9               	movwf	fsr2l,c
 44064  00754C  0E03               	movlw	high _swTimers
 44065  00754E  20F4               	addwfc	prodh,w,c
 44066  007550  6EDA               	movwf	fsr2h,c
 44067  007552  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 44068  007554  5CDE               	subwf	postinc2,w,c
 44069  007556  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 44070  007558  58DE               	subwfb	postinc2,w,c
 44071  00755A  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 44072  00755C  58DE               	subwfb	postinc2,w,c
 44073  00755E  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 44074  007560  58DE               	subwfb	postinc2,w,c
 44075  007562  B0D8               	btfsc	status,0,c
 44076  007564  D010               	goto	i2l11397
 44077                           
 44078                           ;sw_timer.c: 313: {
 44079                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 44080  007566  5031               	movf	i2SwTimersInterrupt@i,w,c
 44081  007568  0D08               	mullw	8
 44082  00756A  0E00               	movlw	low _swTimers
 44083  00756C  24F3               	addwf	prodl,w,c
 44084  00756E  6ED9               	movwf	fsr2l,c
 44085  007570  0E03               	movlw	high _swTimers
 44086  007572  20F4               	addwfc	prodh,w,c
 44087  007574  6EDA               	movwf	fsr2h,c
 44088  007576  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 44089  00757A  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 44090  00757E  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 44091  007582  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 44092  007586                     i2l11397:
 44093  007586  2A31               	incf	i2SwTimersInterrupt@i,f,c
 44094  007588                     i2l11399:
 44095  007588  0100               	movlb	0	; () banked
 44096  00758A  51FA               	movf	_allocatedTimers& (0+255),w,b	;volatile
 44097  00758C  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 44098  00758E  A0D8               	btfss	status,0,c
 44099  007590  D79A               	goto	i2l11387
 44100                           
 44101                           ; BSR set to: 0
 44102                           ;sw_timer.c: 315: }
 44103                           ;sw_timer.c: 316: }
 44104                           ;sw_timer.c: 317: }
 44105                           ;sw_timer.c: 318: }
 44106                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 44107  007592  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 44108  007596  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 44109  00759A  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 44110  00759E  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 44111                           
 44112                           ; BSR set to: 0
 44113  0075A2  0012               	return		;funcret
 44114  0075A4                     __end_ofi2_SwTimersInterrupt:
 44115                           	opt stack 0
 44116                           tosu	equ	0xFFF
 44117                           tosh	equ	0xFFE
 44118                           tosl	equ	0xFFD
 44119                           pclatu	equ	0xFFB
 44120                           pclath	equ	0xFFA
 44121                           tblptru	equ	0xFF8
 44122                           tblptrh	equ	0xFF7
 44123                           tblptrl	equ	0xFF6
 44124                           tablat	equ	0xFF5
 44125                           prodh	equ	0xFF4
 44126                           prodl	equ	0xFF3
 44127                           intcon	equ	0xFF2
 44128                           intcon2	equ	0xFF1
 44129                           intcon3	equ	0xFF0
 44130                           indf0	equ	0xFEF
 44131                           postinc0	equ	0xFEE
 44132                           plusw0	equ	0xFEB
 44133                           fsr0h	equ	0xFEA
 44134                           fsr0l	equ	0xFE9
 44135                           wreg	equ	0xFE8
 44136                           postinc1	equ	0xFE6
 44137                           postdec1	equ	0xFE5
 44138                           plusw1	equ	0xFE3
 44139                           fsr1h	equ	0xFE2
 44140                           fsr1l	equ	0xFE1
 44141                           indf2	equ	0xFDF
 44142                           postinc2	equ	0xFDE
 44143                           postdec2	equ	0xFDD
 44144                           plusw2	equ	0xFDB
 44145                           fsr2h	equ	0xFDA
 44146                           fsr2l	equ	0xFD9
 44147                           status	equ	0xFD8
 44148                           
 44149 ;; *************** function i2_TMR_GetDeltaTime *****************
 44150 ;; Defined at:
 44151 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 44152 ;; Parameters:    Size  Location     Type
 44153 ;;		None
 44154 ;; Auto vars:     Size  Location     Type
 44155 ;;		None
 44156 ;; Return value:  Size  Location     Type
 44157 ;;                  4    8[COMRAM] unsigned long 
 44158 ;; Registers used:
 44159 ;;		wreg, status,2, status,0, cstack
 44160 ;; Tracked objects:
 44161 ;;		On entry : 0/0
 44162 ;;		On exit  : 0/0
 44163 ;;		Unchanged: 0/0
 44164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44165 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44167 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44168 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44169 ;;Total ram usage:       24 bytes
 44170 ;; Hardware stack levels used:    1
 44171 ;; Hardware stack levels required when called:    1
 44172 ;; This function calls:
 44173 ;;		i2_TMR1_ReadTimer
 44174 ;; This function is called by:
 44175 ;;		i2_SwTimersInterrupt
 44176 ;; This function uses a non-reentrant model
 44177 ;;
 44178                           
 44179                           	psect	text212
 44180  005E78                     __ptext212:
 44181                           	opt stack 0
 44182  005E78                     i2_TMR_GetDeltaTime:
 44183                           	opt stack 12
 44184                           
 44185                           ;sw_timer.c: 90: static uint32_t retVal;
 44186                           ;sw_timer.c: 91: static uint16_t tmrVal;
 44187                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 44188                           
 44189                           ; BSR set to: 0
 44190                           ;incstack = 0
 44191  005E78  EC87  F050         	call	i2_TMR1_ReadTimer	;wreg free
 44192  005E7C  C001  F044         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 44193  005E80  C002  F045         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 44194                           
 44195                           ;sw_timer.c: 95: if (timerOverflow == 1)
 44196  005E84  044D               	decf	_timerOverflow,w,c	;volatile
 44197  005E86  A4D8               	btfss	status,2,c
 44198  005E88  D06C               	goto	i2l10681
 44199                           
 44200                           ;sw_timer.c: 96: {
 44201                           ;sw_timer.c: 97: timerOverflow = 0;
 44202  005E8A  0E00               	movlw	0
 44203  005E8C  6E4D               	movwf	_timerOverflow,c	;volatile
 44204                           
 44205                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 44206  005E8E  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 44207  005E92  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 44208  005E96  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 44209  005E9A  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 44210  005E9E  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 44211  005EA0  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 44212  005EA2  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 44213  005EA4  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 44214  005EA6  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 44215  005EA8  0E00               	movlw	0
 44216  005EAA  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 44217  005EAC  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 44218  005EAE  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 44219  005EB0  0100               	movlb	0	; () banked
 44220  005EB2  51F8               	movf	_reloadVal& (0+255),w,b	;volatile
 44221  005EB4  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 44222  005EB6  0100               	movlb	0	; () banked
 44223  005EB8  51F9               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 44224  005EBA  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 44225  005EBC  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 44226  005EBE  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 44227  005EC0  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 44228  005EC2  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 44229  005EC4  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 44230  005EC6  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 44231  005EC8  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 44232  005ECA  0E00               	movlw	0
 44233  005ECC  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 44234  005ECE  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 44235  005ED0  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 44236  005ED2  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 44237  005ED4  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 44238  005ED6  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 44239  005ED8  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 44240  005EDA  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 44241  005EDC  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 44242  005EDE  0E00               	movlw	0
 44243  005EE0  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 44244  005EE2  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 44245  005EE4  0E00               	movlw	0
 44246  005EE6  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 44247  005EE8  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 44248  005EEA  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 44249  005EEC  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 44250  005EEE  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 44251  005EF0  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 44252  005EF2  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 44253  005EF4  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 44254  005EF6  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 44255  005EF8  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 44256  005EFA  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 44257  005EFC  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 44258  005EFE  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 44259  005F00  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 44260  005F02  5040               	movf	_ticksAdded,w,c	;volatile
 44261  005F04  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 44262  005F06  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 44263  005F08  5041               	movf	_ticksAdded+1,w,c	;volatile
 44264  005F0A  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 44265  005F0C  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 44266  005F0E  5042               	movf	_ticksAdded+2,w,c	;volatile
 44267  005F10  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 44268  005F12  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 44269  005F14  5043               	movf	_ticksAdded+3,w,c	;volatile
 44270  005F16  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 44271  005F18  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 44272  005F1A  0E00               	movlw	0
 44273  005F1C  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 44274  005F1E  0101               	movlb	1	; () banked
 44275  005F20  6F6F               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 44276  005F22  0E00               	movlw	0
 44277  005F24  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 44278  005F26  0101               	movlb	1	; () banked
 44279  005F28  6F70               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 44280  005F2A  0E01               	movlw	1
 44281  005F2C  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 44282  005F2E  0101               	movlb	1	; () banked
 44283  005F30  6F71               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 44284  005F32  0E00               	movlw	0
 44285  005F34  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 44286  005F36  0101               	movlb	1	; () banked
 44287  005F38  6F72               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 44288                           
 44289                           ; BSR set to: 1
 44290                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 44291  005F3A  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 44292  005F3E  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 44293  005F42  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 44294  005F44  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 44295                           
 44296                           ; BSR set to: 1
 44297                           ;sw_timer.c: 100: ticksAdded = 0;
 44298  005F46  0E00               	movlw	0
 44299  005F48  6E40               	movwf	_ticksAdded,c	;volatile
 44300  005F4A  0E00               	movlw	0
 44301  005F4C  6E41               	movwf	_ticksAdded+1,c	;volatile
 44302  005F4E  0E00               	movlw	0
 44303  005F50  6E42               	movwf	_ticksAdded+2,c	;volatile
 44304  005F52  0E00               	movlw	0
 44305  005F54  6E43               	movwf	_ticksAdded+3,c	;volatile
 44306                           
 44307                           ; BSR set to: 1
 44308                           ;sw_timer.c: 101: reloadVal = 0;
 44309  005F56  0E00               	movlw	0
 44310  005F58  0100               	movlb	0	; () banked
 44311  005F5A  6FF9               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 44312  005F5C  0E00               	movlw	0
 44313  005F5E  6FF8               	movwf	_reloadVal& (0+255),b	;volatile
 44314                           
 44315                           ;sw_timer.c: 102: }
 44316  005F60  D045               	goto	i2l10683
 44317  005F62                     i2l10681:
 44318                           
 44319                           ;sw_timer.c: 103: else
 44320                           ;sw_timer.c: 104: {
 44321                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 44322  005F62  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 44323  005F66  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 44324  005F6A  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 44325  005F6E  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 44326  005F72  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 44327  005F74  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 44328  005F76  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 44329  005F78  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 44330  005F7A  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 44331  005F7C  0E00               	movlw	0
 44332  005F7E  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 44333  005F80  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 44334  005F82  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 44335  005F84  C0F8  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 44336  005F88  C0F9  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 44337  005F8C  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 44338  005F8E  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 44339  005F90  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 44340  005F92  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 44341  005F94  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 44342  005F96  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 44343  005F98  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 44344  005F9A  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 44345  005F9C  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 44346  005F9E  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 44347  005FA0  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 44348  005FA2  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 44349  005FA4  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 44350  005FA6  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 44351  005FA8  0E00               	movlw	0
 44352  005FAA  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 44353  005FAC  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 44354  005FAE  0E00               	movlw	0
 44355  005FB0  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 44356  005FB2  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 44357  005FB4  5040               	movf	_ticksAdded,w,c	;volatile
 44358  005FB6  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 44359  005FB8  0101               	movlb	1	; () banked
 44360  005FBA  6F6F               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 44361  005FBC  5041               	movf	_ticksAdded+1,w,c	;volatile
 44362  005FBE  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 44363  005FC0  0101               	movlb	1	; () banked
 44364  005FC2  6F70               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 44365  005FC4  5042               	movf	_ticksAdded+2,w,c	;volatile
 44366  005FC6  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 44367  005FC8  0101               	movlb	1	; () banked
 44368  005FCA  6F71               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 44369  005FCC  5043               	movf	_ticksAdded+3,w,c	;volatile
 44370  005FCE  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 44371  005FD0  0101               	movlb	1	; () banked
 44372  005FD2  6F72               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 44373                           
 44374                           ;sw_timer.c: 106: ticksAccounted += retVal;
 44375  005FD4  0101               	movlb	1	; () banked
 44376  005FD6  516F               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 44377  005FD8  263C               	addwf	_ticksAccounted,f,c	;volatile
 44378  005FDA  0101               	movlb	1	; () banked
 44379  005FDC  5170               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 44380  005FDE  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 44381  005FE0  0101               	movlb	1	; () banked
 44382  005FE2  5171               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 44383  005FE4  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 44384  005FE6  0101               	movlb	1	; () banked
 44385  005FE8  5172               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 44386  005FEA  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 44387  005FEC                     i2l10683:
 44388                           
 44389                           ;sw_timer.c: 107: }
 44390                           ;sw_timer.c: 109: return retVal;
 44391  005FEC  C16F  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 44392  005FF0  C170  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 44393  005FF4  C171  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 44394  005FF8  C172  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 44395  005FFC  0012               	return	
 44396  005FFE                     __end_ofi2_TMR_GetDeltaTime:
 44397                           	opt stack 0
 44398                           tosu	equ	0xFFF
 44399                           tosh	equ	0xFFE
 44400                           tosl	equ	0xFFD
 44401                           pclatu	equ	0xFFB
 44402                           pclath	equ	0xFFA
 44403                           tblptru	equ	0xFF8
 44404                           tblptrh	equ	0xFF7
 44405                           tblptrl	equ	0xFF6
 44406                           tablat	equ	0xFF5
 44407                           prodh	equ	0xFF4
 44408                           prodl	equ	0xFF3
 44409                           intcon	equ	0xFF2
 44410                           intcon2	equ	0xFF1
 44411                           intcon3	equ	0xFF0
 44412                           indf0	equ	0xFEF
 44413                           postinc0	equ	0xFEE
 44414                           plusw0	equ	0xFEB
 44415                           fsr0h	equ	0xFEA
 44416                           fsr0l	equ	0xFE9
 44417                           wreg	equ	0xFE8
 44418                           postinc1	equ	0xFE6
 44419                           postdec1	equ	0xFE5
 44420                           plusw1	equ	0xFE3
 44421                           fsr1h	equ	0xFE2
 44422                           fsr1l	equ	0xFE1
 44423                           indf2	equ	0xFDF
 44424                           postinc2	equ	0xFDE
 44425                           postdec2	equ	0xFDD
 44426                           plusw2	equ	0xFDB
 44427                           fsr2h	equ	0xFDA
 44428                           fsr2l	equ	0xFD9
 44429                           status	equ	0xFD8
 44430                           
 44431 ;; *************** function i2_TMR1_ReadTimer *****************
 44432 ;; Defined at:
 44433 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 44434 ;; Parameters:    Size  Location     Type
 44435 ;;		None
 44436 ;; Auto vars:     Size  Location     Type
 44437 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 44438 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 44439 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 44440 ;; Return value:  Size  Location     Type
 44441 ;;                  2    0[COMRAM] unsigned int 
 44442 ;; Registers used:
 44443 ;;		wreg, status,2
 44444 ;; Tracked objects:
 44445 ;;		On entry : 0/0
 44446 ;;		On exit  : 0/0
 44447 ;;		Unchanged: 0/0
 44448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44449 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44450 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44451 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44452 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44453 ;;Total ram usage:        8 bytes
 44454 ;; Hardware stack levels used:    1
 44455 ;; This function calls:
 44456 ;;		Nothing
 44457 ;; This function is called by:
 44458 ;;		i2_TMR_GetDeltaTime
 44459 ;;		i2_TMR_SwapTimer
 44460 ;; This function uses a non-reentrant model
 44461 ;;
 44462                           
 44463                           	psect	text213
 44464  00A10E                     __ptext213:
 44465                           	opt stack 0
 44466  00A10E                     i2_TMR1_ReadTimer:
 44467                           	opt stack 13
 44468                           
 44469                           ;tmr1.c: 108: uint16_t readVal;
 44470                           ;tmr1.c: 109: uint8_t readValHigh;
 44471                           ;tmr1.c: 110: uint8_t readValLow;
 44472                           ;tmr1.c: 112: readValLow = TMR1L;
 44473                           
 44474                           ;incstack = 0
 44475  00A10E  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 44476                           
 44477                           ;tmr1.c: 113: readValHigh = TMR1H;
 44478  00A112  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 44479                           
 44480                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 44481  00A116  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 44482  00A118  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 44483  00A11A  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 44484  00A11C  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 44485  00A11E  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 44486                           
 44487                           ;tmr1.c: 117: return readVal;
 44488  00A122  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 44489  00A126  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 44490  00A12A  0012               	return	
 44491  00A12C                     __end_ofi2_TMR1_ReadTimer:
 44492                           	opt stack 0
 44493                           tosu	equ	0xFFF
 44494                           tosh	equ	0xFFE
 44495                           tosl	equ	0xFFD
 44496                           pclatu	equ	0xFFB
 44497                           pclath	equ	0xFFA
 44498                           tblptru	equ	0xFF8
 44499                           tblptrh	equ	0xFF7
 44500                           tblptrl	equ	0xFF6
 44501                           tablat	equ	0xFF5
 44502                           prodh	equ	0xFF4
 44503                           prodl	equ	0xFF3
 44504                           intcon	equ	0xFF2
 44505                           intcon2	equ	0xFF1
 44506                           intcon3	equ	0xFF0
 44507                           indf0	equ	0xFEF
 44508                           postinc0	equ	0xFEE
 44509                           plusw0	equ	0xFEB
 44510                           fsr0h	equ	0xFEA
 44511                           fsr0l	equ	0xFE9
 44512                           wreg	equ	0xFE8
 44513                           postinc1	equ	0xFE6
 44514                           postdec1	equ	0xFE5
 44515                           plusw1	equ	0xFE3
 44516                           fsr1h	equ	0xFE2
 44517                           fsr1l	equ	0xFE1
 44518                           indf2	equ	0xFDF
 44519                           postinc2	equ	0xFDE
 44520                           postdec2	equ	0xFDD
 44521                           plusw2	equ	0xFDB
 44522                           fsr2h	equ	0xFDA
 44523                           fsr2l	equ	0xFD9
 44524                           status	equ	0xFD8
 44525                           
 44526 ;; *************** function _PIN_MANAGER_IOC *****************
 44527 ;; Defined at:
 44528 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
 44529 ;; Parameters:    Size  Location     Type
 44530 ;;		None
 44531 ;; Auto vars:     Size  Location     Type
 44532 ;;		None
 44533 ;; Return value:  Size  Location     Type
 44534 ;;                  1    wreg      void 
 44535 ;; Registers used:
 44536 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44537 ;; Tracked objects:
 44538 ;;		On entry : 0/0
 44539 ;;		On exit  : 0/0
 44540 ;;		Unchanged: 0/0
 44541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44542 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44543 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44544 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44545 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44546 ;;Total ram usage:        0 bytes
 44547 ;; Hardware stack levels used:    1
 44548 ;; Hardware stack levels required when called:    2
 44549 ;; This function calls:
 44550 ;;		_IOCB4_ISR
 44551 ;;		_IOCB5_ISR
 44552 ;; This function is called by:
 44553 ;;		_INTERRUPT_InterruptManager
 44554 ;; This function uses a non-reentrant model
 44555 ;;
 44556                           
 44557                           	psect	text214
 44558  00A294                     __ptext214:
 44559                           	opt stack 0
 44560  00A294                     _PIN_MANAGER_IOC:
 44561                           	opt stack 15
 44562                           
 44563                           ;pin_manager.c: 109: if(IOCBbits.IOCB4 == 1)
 44564                           
 44565                           ;incstack = 0
 44566  00A294  B862               	btfsc	3938,4,c	;volatile
 44567                           
 44568                           ;pin_manager.c: 110: {
 44569                           ;pin_manager.c: 111: IOCB4_ISR();
 44570  00A296  EC96  F04F         	call	_IOCB4_ISR	;wreg free
 44571                           
 44572                           ;pin_manager.c: 112: }
 44573                           ;pin_manager.c: 114: if(IOCBbits.IOCB5 == 1)
 44574  00A29A  BA62               	btfsc	3938,5,c	;volatile
 44575                           
 44576                           ;pin_manager.c: 115: {
 44577                           ;pin_manager.c: 116: IOCB5_ISR();
 44578  00A29C  EC84  F04F         	call	_IOCB5_ISR	;wreg free
 44579                           
 44580                           ;pin_manager.c: 117: }
 44581                           ;pin_manager.c: 120: INTCONbits.RBIF = 0;
 44582  00A2A0  90F2               	bcf	intcon,0,c	;volatile
 44583  00A2A2  0012               	return		;funcret
 44584  00A2A4                     __end_of_PIN_MANAGER_IOC:
 44585                           	opt stack 0
 44586                           tosu	equ	0xFFF
 44587                           tosh	equ	0xFFE
 44588                           tosl	equ	0xFFD
 44589                           pclatu	equ	0xFFB
 44590                           pclath	equ	0xFFA
 44591                           tblptru	equ	0xFF8
 44592                           tblptrh	equ	0xFF7
 44593                           tblptrl	equ	0xFF6
 44594                           tablat	equ	0xFF5
 44595                           prodh	equ	0xFF4
 44596                           prodl	equ	0xFF3
 44597                           intcon	equ	0xFF2
 44598                           intcon2	equ	0xFF1
 44599                           intcon3	equ	0xFF0
 44600                           indf0	equ	0xFEF
 44601                           postinc0	equ	0xFEE
 44602                           plusw0	equ	0xFEB
 44603                           fsr0h	equ	0xFEA
 44604                           fsr0l	equ	0xFE9
 44605                           wreg	equ	0xFE8
 44606                           postinc1	equ	0xFE6
 44607                           postdec1	equ	0xFE5
 44608                           plusw1	equ	0xFE3
 44609                           fsr1h	equ	0xFE2
 44610                           fsr1l	equ	0xFE1
 44611                           indf2	equ	0xFDF
 44612                           postinc2	equ	0xFDE
 44613                           postdec2	equ	0xFDD
 44614                           plusw2	equ	0xFDB
 44615                           fsr2h	equ	0xFDA
 44616                           fsr2l	equ	0xFD9
 44617                           status	equ	0xFD8
 44618                           
 44619 ;; *************** function _IOCB5_ISR *****************
 44620 ;; Defined at:
 44621 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
 44622 ;; Parameters:    Size  Location     Type
 44623 ;;		None
 44624 ;; Auto vars:     Size  Location     Type
 44625 ;;		None
 44626 ;; Return value:  Size  Location     Type
 44627 ;;                  1    wreg      void 
 44628 ;; Registers used:
 44629 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44630 ;; Tracked objects:
 44631 ;;		On entry : 0/0
 44632 ;;		On exit  : 0/0
 44633 ;;		Unchanged: 0/0
 44634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44639 ;;Total ram usage:        0 bytes
 44640 ;; Hardware stack levels used:    1
 44641 ;; Hardware stack levels required when called:    1
 44642 ;; This function calls:
 44643 ;;		Absolute function
 44644 ;;		_IOCB5_DefaultInterruptHandler
 44645 ;; This function is called by:
 44646 ;;		_PIN_MANAGER_IOC
 44647 ;; This function uses a non-reentrant model
 44648 ;;
 44649                           
 44650                           	psect	text215
 44651  009F08                     __ptext215:
 44652                           	opt stack 0
 44653  009F08                     _IOCB5_ISR:
 44654                           	opt stack 15
 44655                           
 44656                           ;pin_manager.c: 161: if(IOCB5_InterruptHandler)
 44657                           
 44658                           ;incstack = 0
 44659  009F08  0101               	movlb	1	; () banked
 44660  009F0A  51ED               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 44661  009F0C  0101               	movlb	1	; () banked
 44662  009F0E  11EE               	iorwf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 44663  009F10  B4D8               	btfsc	status,2,c
 44664  009F12  0012               	return	
 44665                           
 44666                           ; BSR set to: 1
 44667                           ;pin_manager.c: 162: {
 44668                           ;pin_manager.c: 163: IOCB5_InterruptHandler();
 44669  009F14  D801               	call	i2u2204_48
 44670  009F16  0012               	return	
 44671  009F18                     i2u2204_48:
 44672  009F18  0005               	push	
 44673  009F1A  6EFA               	movwf	pclath,c
 44674  009F1C  0101               	movlb	1	; () banked
 44675  009F1E  51ED               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 44676  009F20  6EFD               	movwf	tosl,c
 44677  009F22  51EE               	movf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 44678  009F24  6EFE               	movwf	tosh,c
 44679  009F26  6AFF               	clrf	tosu,c
 44680  009F28  50FA               	movf	pclath,w,c
 44681  009F2A  0012               	return		;indir
 44682  009F2C                     __end_of_IOCB5_ISR:
 44683                           	opt stack 0
 44684                           tosu	equ	0xFFF
 44685                           tosh	equ	0xFFE
 44686                           tosl	equ	0xFFD
 44687                           pclatu	equ	0xFFB
 44688                           pclath	equ	0xFFA
 44689                           tblptru	equ	0xFF8
 44690                           tblptrh	equ	0xFF7
 44691                           tblptrl	equ	0xFF6
 44692                           tablat	equ	0xFF5
 44693                           prodh	equ	0xFF4
 44694                           prodl	equ	0xFF3
 44695                           intcon	equ	0xFF2
 44696                           intcon2	equ	0xFF1
 44697                           intcon3	equ	0xFF0
 44698                           indf0	equ	0xFEF
 44699                           postinc0	equ	0xFEE
 44700                           plusw0	equ	0xFEB
 44701                           fsr0h	equ	0xFEA
 44702                           fsr0l	equ	0xFE9
 44703                           wreg	equ	0xFE8
 44704                           postinc1	equ	0xFE6
 44705                           postdec1	equ	0xFE5
 44706                           plusw1	equ	0xFE3
 44707                           fsr1h	equ	0xFE2
 44708                           fsr1l	equ	0xFE1
 44709                           indf2	equ	0xFDF
 44710                           postinc2	equ	0xFDE
 44711                           postdec2	equ	0xFDD
 44712                           plusw2	equ	0xFDB
 44713                           fsr2h	equ	0xFDA
 44714                           fsr2l	equ	0xFD9
 44715                           status	equ	0xFD8
 44716                           
 44717 ;; *************** function _IOCB5_DefaultInterruptHandler *****************
 44718 ;; Defined at:
 44719 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
 44720 ;; Parameters:    Size  Location     Type
 44721 ;;		None
 44722 ;; Auto vars:     Size  Location     Type
 44723 ;;		None
 44724 ;; Return value:  Size  Location     Type
 44725 ;;                  1    wreg      void 
 44726 ;; Registers used:
 44727 ;;		None
 44728 ;; Tracked objects:
 44729 ;;		On entry : 0/0
 44730 ;;		On exit  : 0/0
 44731 ;;		Unchanged: 0/0
 44732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44736 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44737 ;;Total ram usage:        0 bytes
 44738 ;; Hardware stack levels used:    1
 44739 ;; This function calls:
 44740 ;;		Nothing
 44741 ;; This function is called by:
 44742 ;;		_PIN_MANAGER_Initialize
 44743 ;;		_IOCB5_ISR
 44744 ;; This function uses a non-reentrant model
 44745 ;;
 44746                           
 44747                           	psect	text216
 44748  00A400                     __ptext216:
 44749                           	opt stack 0
 44750  00A400                     _IOCB5_DefaultInterruptHandler:
 44751                           	opt stack 15
 44752                           
 44753                           ;incstack = 0
 44754  00A400  0012               	return		;funcret
 44755  00A402                     __end_of_IOCB5_DefaultInterruptHandler:
 44756                           	opt stack 0
 44757                           tosu	equ	0xFFF
 44758                           tosh	equ	0xFFE
 44759                           tosl	equ	0xFFD
 44760                           pclatu	equ	0xFFB
 44761                           pclath	equ	0xFFA
 44762                           tblptru	equ	0xFF8
 44763                           tblptrh	equ	0xFF7
 44764                           tblptrl	equ	0xFF6
 44765                           tablat	equ	0xFF5
 44766                           prodh	equ	0xFF4
 44767                           prodl	equ	0xFF3
 44768                           intcon	equ	0xFF2
 44769                           intcon2	equ	0xFF1
 44770                           intcon3	equ	0xFF0
 44771                           indf0	equ	0xFEF
 44772                           postinc0	equ	0xFEE
 44773                           plusw0	equ	0xFEB
 44774                           fsr0h	equ	0xFEA
 44775                           fsr0l	equ	0xFE9
 44776                           wreg	equ	0xFE8
 44777                           postinc1	equ	0xFE6
 44778                           postdec1	equ	0xFE5
 44779                           plusw1	equ	0xFE3
 44780                           fsr1h	equ	0xFE2
 44781                           fsr1l	equ	0xFE1
 44782                           indf2	equ	0xFDF
 44783                           postinc2	equ	0xFDE
 44784                           postdec2	equ	0xFDD
 44785                           plusw2	equ	0xFDB
 44786                           fsr2h	equ	0xFDA
 44787                           fsr2l	equ	0xFD9
 44788                           status	equ	0xFD8
 44789                           
 44790 ;; *************** function _IOCB4_ISR *****************
 44791 ;; Defined at:
 44792 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 44793 ;; Parameters:    Size  Location     Type
 44794 ;;		None
 44795 ;; Auto vars:     Size  Location     Type
 44796 ;;		None
 44797 ;; Return value:  Size  Location     Type
 44798 ;;                  1    wreg      void 
 44799 ;; Registers used:
 44800 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44801 ;; Tracked objects:
 44802 ;;		On entry : 0/0
 44803 ;;		On exit  : 0/0
 44804 ;;		Unchanged: 0/0
 44805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44807 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44809 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44810 ;;Total ram usage:        0 bytes
 44811 ;; Hardware stack levels used:    1
 44812 ;; Hardware stack levels required when called:    1
 44813 ;; This function calls:
 44814 ;;		Absolute function
 44815 ;;		_DIO2_ISR_Lora
 44816 ;;		_IOCB4_DefaultInterruptHandler
 44817 ;; This function is called by:
 44818 ;;		_PIN_MANAGER_IOC
 44819 ;; This function uses a non-reentrant model
 44820 ;;
 44821                           
 44822                           	psect	text217
 44823  009F2C                     __ptext217:
 44824                           	opt stack 0
 44825  009F2C                     _IOCB4_ISR:
 44826                           	opt stack 15
 44827                           
 44828                           ;pin_manager.c: 132: if(IOCB4_InterruptHandler)
 44829                           
 44830                           ;incstack = 0
 44831  009F2C  0101               	movlb	1	; () banked
 44832  009F2E  51EB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 44833  009F30  0101               	movlb	1	; () banked
 44834  009F32  11EC               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 44835  009F34  B4D8               	btfsc	status,2,c
 44836  009F36  0012               	return	
 44837                           
 44838                           ; BSR set to: 1
 44839                           ;pin_manager.c: 133: {
 44840                           ;pin_manager.c: 134: IOCB4_InterruptHandler();
 44841  009F38  D801               	call	i2u2202_48
 44842  009F3A  0012               	return	
 44843  009F3C                     i2u2202_48:
 44844  009F3C  0005               	push	
 44845  009F3E  6EFA               	movwf	pclath,c
 44846  009F40  0101               	movlb	1	; () banked
 44847  009F42  51EB               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 44848  009F44  6EFD               	movwf	tosl,c
 44849  009F46  51EC               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 44850  009F48  6EFE               	movwf	tosh,c
 44851  009F4A  6AFF               	clrf	tosu,c
 44852  009F4C  50FA               	movf	pclath,w,c
 44853  009F4E  0012               	return		;indir
 44854  009F50                     __end_of_IOCB4_ISR:
 44855                           	opt stack 0
 44856                           tosu	equ	0xFFF
 44857                           tosh	equ	0xFFE
 44858                           tosl	equ	0xFFD
 44859                           pclatu	equ	0xFFB
 44860                           pclath	equ	0xFFA
 44861                           tblptru	equ	0xFF8
 44862                           tblptrh	equ	0xFF7
 44863                           tblptrl	equ	0xFF6
 44864                           tablat	equ	0xFF5
 44865                           prodh	equ	0xFF4
 44866                           prodl	equ	0xFF3
 44867                           intcon	equ	0xFF2
 44868                           intcon2	equ	0xFF1
 44869                           intcon3	equ	0xFF0
 44870                           indf0	equ	0xFEF
 44871                           postinc0	equ	0xFEE
 44872                           plusw0	equ	0xFEB
 44873                           fsr0h	equ	0xFEA
 44874                           fsr0l	equ	0xFE9
 44875                           wreg	equ	0xFE8
 44876                           postinc1	equ	0xFE6
 44877                           postdec1	equ	0xFE5
 44878                           plusw1	equ	0xFE3
 44879                           fsr1h	equ	0xFE2
 44880                           fsr1l	equ	0xFE1
 44881                           indf2	equ	0xFDF
 44882                           postinc2	equ	0xFDE
 44883                           postdec2	equ	0xFDD
 44884                           plusw2	equ	0xFDB
 44885                           fsr2h	equ	0xFDA
 44886                           fsr2l	equ	0xFD9
 44887                           status	equ	0xFD8
 44888                           
 44889 ;; *************** function _DIO2_ISR_Lora *****************
 44890 ;; Defined at:
 44891 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 44892 ;; Parameters:    Size  Location     Type
 44893 ;;		None
 44894 ;; Auto vars:     Size  Location     Type
 44895 ;;		None
 44896 ;; Return value:  Size  Location     Type
 44897 ;;                  1    wreg      void 
 44898 ;; Registers used:
 44899 ;;		status,2, status,0
 44900 ;; Tracked objects:
 44901 ;;		On entry : 0/0
 44902 ;;		On exit  : 0/0
 44903 ;;		Unchanged: 0/0
 44904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44909 ;;Total ram usage:        0 bytes
 44910 ;; Hardware stack levels used:    1
 44911 ;; This function calls:
 44912 ;;		Nothing
 44913 ;; This function is called by:
 44914 ;;		_DIO2_ISR_Lora_Init
 44915 ;;		_IOCB4_ISR
 44916 ;; This function uses a non-reentrant model
 44917 ;;
 44918                           
 44919                           	psect	text218
 44920  00A3EE                     __ptext218:
 44921                           	opt stack 0
 44922  00A3EE                     _DIO2_ISR_Lora:
 44923                           	opt stack 15
 44924                           
 44925                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 44926                           
 44927                           ;incstack = 0
 44928  00A3EE  844C               	bsf	_dioStatus,2,c	;volatile
 44929  00A3F0  0012               	return		;funcret
 44930  00A3F2                     __end_of_DIO2_ISR_Lora:
 44931                           	opt stack 0
 44932                           tosu	equ	0xFFF
 44933                           tosh	equ	0xFFE
 44934                           tosl	equ	0xFFD
 44935                           pclatu	equ	0xFFB
 44936                           pclath	equ	0xFFA
 44937                           tblptru	equ	0xFF8
 44938                           tblptrh	equ	0xFF7
 44939                           tblptrl	equ	0xFF6
 44940                           tablat	equ	0xFF5
 44941                           prodh	equ	0xFF4
 44942                           prodl	equ	0xFF3
 44943                           intcon	equ	0xFF2
 44944                           intcon2	equ	0xFF1
 44945                           intcon3	equ	0xFF0
 44946                           indf0	equ	0xFEF
 44947                           postinc0	equ	0xFEE
 44948                           plusw0	equ	0xFEB
 44949                           fsr0h	equ	0xFEA
 44950                           fsr0l	equ	0xFE9
 44951                           wreg	equ	0xFE8
 44952                           postinc1	equ	0xFE6
 44953                           postdec1	equ	0xFE5
 44954                           plusw1	equ	0xFE3
 44955                           fsr1h	equ	0xFE2
 44956                           fsr1l	equ	0xFE1
 44957                           indf2	equ	0xFDF
 44958                           postinc2	equ	0xFDE
 44959                           postdec2	equ	0xFDD
 44960                           plusw2	equ	0xFDB
 44961                           fsr2h	equ	0xFDA
 44962                           fsr2l	equ	0xFD9
 44963                           status	equ	0xFD8
 44964                           
 44965 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 44966 ;; Defined at:
 44967 ;;		line 148 in file "mcc_generated_files/pin_manager.c"
 44968 ;; Parameters:    Size  Location     Type
 44969 ;;		None
 44970 ;; Auto vars:     Size  Location     Type
 44971 ;;		None
 44972 ;; Return value:  Size  Location     Type
 44973 ;;                  1    wreg      void 
 44974 ;; Registers used:
 44975 ;;		None
 44976 ;; Tracked objects:
 44977 ;;		On entry : 0/0
 44978 ;;		On exit  : 0/0
 44979 ;;		Unchanged: 0/0
 44980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44984 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44985 ;;Total ram usage:        0 bytes
 44986 ;; Hardware stack levels used:    1
 44987 ;; This function calls:
 44988 ;;		Nothing
 44989 ;; This function is called by:
 44990 ;;		_PIN_MANAGER_Initialize
 44991 ;;		_IOCB4_ISR
 44992 ;; This function uses a non-reentrant model
 44993 ;;
 44994                           
 44995                           	psect	text219
 44996  00A402                     __ptext219:
 44997                           	opt stack 0
 44998  00A402                     _IOCB4_DefaultInterruptHandler:
 44999                           	opt stack 15
 45000                           
 45001                           ;incstack = 0
 45002  00A402  0012               	return		;funcret
 45003  00A404                     __end_of_IOCB4_DefaultInterruptHandler:
 45004                           	opt stack 0
 45005                           tosu	equ	0xFFF
 45006                           tosh	equ	0xFFE
 45007                           tosl	equ	0xFFD
 45008                           pclatu	equ	0xFFB
 45009                           pclath	equ	0xFFA
 45010                           tblptru	equ	0xFF8
 45011                           tblptrh	equ	0xFF7
 45012                           tblptrl	equ	0xFF6
 45013                           tablat	equ	0xFF5
 45014                           prodh	equ	0xFF4
 45015                           prodl	equ	0xFF3
 45016                           intcon	equ	0xFF2
 45017                           intcon2	equ	0xFF1
 45018                           intcon3	equ	0xFF0
 45019                           indf0	equ	0xFEF
 45020                           postinc0	equ	0xFEE
 45021                           plusw0	equ	0xFEB
 45022                           fsr0h	equ	0xFEA
 45023                           fsr0l	equ	0xFE9
 45024                           wreg	equ	0xFE8
 45025                           postinc1	equ	0xFE6
 45026                           postdec1	equ	0xFE5
 45027                           plusw1	equ	0xFE3
 45028                           fsr1h	equ	0xFE2
 45029                           fsr1l	equ	0xFE1
 45030                           indf2	equ	0xFDF
 45031                           postinc2	equ	0xFDE
 45032                           postdec2	equ	0xFDD
 45033                           plusw2	equ	0xFDB
 45034                           fsr2h	equ	0xFDA
 45035                           fsr2l	equ	0xFD9
 45036                           status	equ	0xFD8
 45037                           
 45038 ;; *************** function _INT2_ISR *****************
 45039 ;; Defined at:
 45040 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 45041 ;; Parameters:    Size  Location     Type
 45042 ;;		None
 45043 ;; Auto vars:     Size  Location     Type
 45044 ;;		None
 45045 ;; Return value:  Size  Location     Type
 45046 ;;                  1    wreg      void 
 45047 ;; Registers used:
 45048 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45049 ;; Tracked objects:
 45050 ;;		On entry : 0/0
 45051 ;;		On exit  : 0/0
 45052 ;;		Unchanged: 0/0
 45053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45058 ;;Total ram usage:        0 bytes
 45059 ;; Hardware stack levels used:    1
 45060 ;; Hardware stack levels required when called:    2
 45061 ;; This function calls:
 45062 ;;		_INT2_CallBack
 45063 ;; This function is called by:
 45064 ;;		_INTERRUPT_InterruptManager
 45065 ;; This function uses a non-reentrant model
 45066 ;;
 45067                           
 45068                           	psect	text220
 45069  00A3AC                     __ptext220:
 45070                           	opt stack 0
 45071  00A3AC                     _INT2_ISR:
 45072                           	opt stack 15
 45073                           
 45074                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 45075                           
 45076                           ;incstack = 0
 45077  00A3AC  92F0               	bcf	intcon3,1,c	;volatile
 45078                           
 45079                           ;ext_int.c: 95: INT2_CallBack();
 45080  00A3AE  ECA8  F04F         	call	_INT2_CallBack	;wreg free
 45081  00A3B2  0012               	return		;funcret
 45082  00A3B4                     __end_of_INT2_ISR:
 45083                           	opt stack 0
 45084                           tosu	equ	0xFFF
 45085                           tosh	equ	0xFFE
 45086                           tosl	equ	0xFFD
 45087                           pclatu	equ	0xFFB
 45088                           pclath	equ	0xFFA
 45089                           tblptru	equ	0xFF8
 45090                           tblptrh	equ	0xFF7
 45091                           tblptrl	equ	0xFF6
 45092                           tablat	equ	0xFF5
 45093                           prodh	equ	0xFF4
 45094                           prodl	equ	0xFF3
 45095                           intcon	equ	0xFF2
 45096                           intcon2	equ	0xFF1
 45097                           intcon3	equ	0xFF0
 45098                           indf0	equ	0xFEF
 45099                           postinc0	equ	0xFEE
 45100                           plusw0	equ	0xFEB
 45101                           fsr0h	equ	0xFEA
 45102                           fsr0l	equ	0xFE9
 45103                           wreg	equ	0xFE8
 45104                           postinc1	equ	0xFE6
 45105                           postdec1	equ	0xFE5
 45106                           plusw1	equ	0xFE3
 45107                           fsr1h	equ	0xFE2
 45108                           fsr1l	equ	0xFE1
 45109                           indf2	equ	0xFDF
 45110                           postinc2	equ	0xFDE
 45111                           postdec2	equ	0xFDD
 45112                           plusw2	equ	0xFDB
 45113                           fsr2h	equ	0xFDA
 45114                           fsr2l	equ	0xFD9
 45115                           status	equ	0xFD8
 45116                           
 45117 ;; *************** function _INT2_CallBack *****************
 45118 ;; Defined at:
 45119 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 45120 ;; Parameters:    Size  Location     Type
 45121 ;;		None
 45122 ;; Auto vars:     Size  Location     Type
 45123 ;;		None
 45124 ;; Return value:  Size  Location     Type
 45125 ;;                  1    wreg      void 
 45126 ;; Registers used:
 45127 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45128 ;; Tracked objects:
 45129 ;;		On entry : 0/0
 45130 ;;		On exit  : 0/0
 45131 ;;		Unchanged: 0/0
 45132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45137 ;;Total ram usage:        0 bytes
 45138 ;; Hardware stack levels used:    1
 45139 ;; Hardware stack levels required when called:    1
 45140 ;; This function calls:
 45141 ;;		Absolute function
 45142 ;;		_DIO1_ISR_Lora
 45143 ;;		_INT2_DefaultInterruptHandler
 45144 ;; This function is called by:
 45145 ;;		_INT2_ISR
 45146 ;; This function uses a non-reentrant model
 45147 ;;
 45148                           
 45149                           	psect	text221
 45150  009F50                     __ptext221:
 45151                           	opt stack 0
 45152  009F50                     _INT2_CallBack:
 45153                           	opt stack 15
 45154                           
 45155                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 45156                           
 45157                           ;incstack = 0
 45158  009F50  0101               	movlb	1	; () banked
 45159  009F52  51E9               	movf	_INT2_InterruptHandler& (0+255),w,b
 45160  009F54  0101               	movlb	1	; () banked
 45161  009F56  11EA               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 45162  009F58  B4D8               	btfsc	status,2,c
 45163  009F5A  0012               	return	
 45164                           
 45165                           ; BSR set to: 1
 45166                           ;ext_int.c: 105: {
 45167                           ;ext_int.c: 106: INT2_InterruptHandler();
 45168  009F5C  D801               	call	i2u2193_48
 45169  009F5E  0012               	return	
 45170  009F60                     i2u2193_48:
 45171  009F60  0005               	push	
 45172  009F62  6EFA               	movwf	pclath,c
 45173  009F64  0101               	movlb	1	; () banked
 45174  009F66  51E9               	movf	_INT2_InterruptHandler& (0+255),w,b
 45175  009F68  6EFD               	movwf	tosl,c
 45176  009F6A  51EA               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 45177  009F6C  6EFE               	movwf	tosh,c
 45178  009F6E  6AFF               	clrf	tosu,c
 45179  009F70  50FA               	movf	pclath,w,c
 45180  009F72  0012               	return		;indir
 45181  009F74                     __end_of_INT2_CallBack:
 45182                           	opt stack 0
 45183                           tosu	equ	0xFFF
 45184                           tosh	equ	0xFFE
 45185                           tosl	equ	0xFFD
 45186                           pclatu	equ	0xFFB
 45187                           pclath	equ	0xFFA
 45188                           tblptru	equ	0xFF8
 45189                           tblptrh	equ	0xFF7
 45190                           tblptrl	equ	0xFF6
 45191                           tablat	equ	0xFF5
 45192                           prodh	equ	0xFF4
 45193                           prodl	equ	0xFF3
 45194                           intcon	equ	0xFF2
 45195                           intcon2	equ	0xFF1
 45196                           intcon3	equ	0xFF0
 45197                           indf0	equ	0xFEF
 45198                           postinc0	equ	0xFEE
 45199                           plusw0	equ	0xFEB
 45200                           fsr0h	equ	0xFEA
 45201                           fsr0l	equ	0xFE9
 45202                           wreg	equ	0xFE8
 45203                           postinc1	equ	0xFE6
 45204                           postdec1	equ	0xFE5
 45205                           plusw1	equ	0xFE3
 45206                           fsr1h	equ	0xFE2
 45207                           fsr1l	equ	0xFE1
 45208                           indf2	equ	0xFDF
 45209                           postinc2	equ	0xFDE
 45210                           postdec2	equ	0xFDD
 45211                           plusw2	equ	0xFDB
 45212                           fsr2h	equ	0xFDA
 45213                           fsr2l	equ	0xFD9
 45214                           status	equ	0xFD8
 45215                           
 45216 ;; *************** function _DIO1_ISR_Lora *****************
 45217 ;; Defined at:
 45218 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 45219 ;; Parameters:    Size  Location     Type
 45220 ;;		None
 45221 ;; Auto vars:     Size  Location     Type
 45222 ;;		None
 45223 ;; Return value:  Size  Location     Type
 45224 ;;                  1    wreg      void 
 45225 ;; Registers used:
 45226 ;;		status,2, status,0
 45227 ;; Tracked objects:
 45228 ;;		On entry : 0/0
 45229 ;;		On exit  : 0/0
 45230 ;;		Unchanged: 0/0
 45231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45236 ;;Total ram usage:        0 bytes
 45237 ;; Hardware stack levels used:    1
 45238 ;; This function calls:
 45239 ;;		Nothing
 45240 ;; This function is called by:
 45241 ;;		_DIO1_ISR_Lora_Init
 45242 ;;		_INT2_CallBack
 45243 ;; This function uses a non-reentrant model
 45244 ;;
 45245                           
 45246                           	psect	text222
 45247  00A3F2                     __ptext222:
 45248                           	opt stack 0
 45249  00A3F2                     _DIO1_ISR_Lora:
 45250                           	opt stack 15
 45251                           
 45252                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 45253                           
 45254                           ;incstack = 0
 45255  00A3F2  824C               	bsf	_dioStatus,1,c	;volatile
 45256  00A3F4  0012               	return		;funcret
 45257  00A3F6                     __end_of_DIO1_ISR_Lora:
 45258                           	opt stack 0
 45259                           tosu	equ	0xFFF
 45260                           tosh	equ	0xFFE
 45261                           tosl	equ	0xFFD
 45262                           pclatu	equ	0xFFB
 45263                           pclath	equ	0xFFA
 45264                           tblptru	equ	0xFF8
 45265                           tblptrh	equ	0xFF7
 45266                           tblptrl	equ	0xFF6
 45267                           tablat	equ	0xFF5
 45268                           prodh	equ	0xFF4
 45269                           prodl	equ	0xFF3
 45270                           intcon	equ	0xFF2
 45271                           intcon2	equ	0xFF1
 45272                           intcon3	equ	0xFF0
 45273                           indf0	equ	0xFEF
 45274                           postinc0	equ	0xFEE
 45275                           plusw0	equ	0xFEB
 45276                           fsr0h	equ	0xFEA
 45277                           fsr0l	equ	0xFE9
 45278                           wreg	equ	0xFE8
 45279                           postinc1	equ	0xFE6
 45280                           postdec1	equ	0xFE5
 45281                           plusw1	equ	0xFE3
 45282                           fsr1h	equ	0xFE2
 45283                           fsr1l	equ	0xFE1
 45284                           indf2	equ	0xFDF
 45285                           postinc2	equ	0xFDE
 45286                           postdec2	equ	0xFDD
 45287                           plusw2	equ	0xFDB
 45288                           fsr2h	equ	0xFDA
 45289                           fsr2l	equ	0xFD9
 45290                           status	equ	0xFD8
 45291                           
 45292 ;; *************** function _INT2_DefaultInterruptHandler *****************
 45293 ;; Defined at:
 45294 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 45295 ;; Parameters:    Size  Location     Type
 45296 ;;		None
 45297 ;; Auto vars:     Size  Location     Type
 45298 ;;		None
 45299 ;; Return value:  Size  Location     Type
 45300 ;;                  1    wreg      void 
 45301 ;; Registers used:
 45302 ;;		None
 45303 ;; Tracked objects:
 45304 ;;		On entry : 0/0
 45305 ;;		On exit  : 0/0
 45306 ;;		Unchanged: 0/0
 45307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45312 ;;Total ram usage:        0 bytes
 45313 ;; Hardware stack levels used:    1
 45314 ;; This function calls:
 45315 ;;		Nothing
 45316 ;; This function is called by:
 45317 ;;		_EXT_INT_Initialize
 45318 ;;		_INT2_CallBack
 45319 ;; This function uses a non-reentrant model
 45320 ;;
 45321                           
 45322                           	psect	text223
 45323  00A404                     __ptext223:
 45324                           	opt stack 0
 45325  00A404                     _INT2_DefaultInterruptHandler:
 45326                           	opt stack 15
 45327                           
 45328                           ;incstack = 0
 45329  00A404  0012               	return		;funcret
 45330  00A406                     __end_of_INT2_DefaultInterruptHandler:
 45331                           	opt stack 0
 45332                           tosu	equ	0xFFF
 45333                           tosh	equ	0xFFE
 45334                           tosl	equ	0xFFD
 45335                           pclatu	equ	0xFFB
 45336                           pclath	equ	0xFFA
 45337                           tblptru	equ	0xFF8
 45338                           tblptrh	equ	0xFF7
 45339                           tblptrl	equ	0xFF6
 45340                           tablat	equ	0xFF5
 45341                           prodh	equ	0xFF4
 45342                           prodl	equ	0xFF3
 45343                           intcon	equ	0xFF2
 45344                           intcon2	equ	0xFF1
 45345                           intcon3	equ	0xFF0
 45346                           indf0	equ	0xFEF
 45347                           postinc0	equ	0xFEE
 45348                           plusw0	equ	0xFEB
 45349                           fsr0h	equ	0xFEA
 45350                           fsr0l	equ	0xFE9
 45351                           wreg	equ	0xFE8
 45352                           postinc1	equ	0xFE6
 45353                           postdec1	equ	0xFE5
 45354                           plusw1	equ	0xFE3
 45355                           fsr1h	equ	0xFE2
 45356                           fsr1l	equ	0xFE1
 45357                           indf2	equ	0xFDF
 45358                           postinc2	equ	0xFDE
 45359                           postdec2	equ	0xFDD
 45360                           plusw2	equ	0xFDB
 45361                           fsr2h	equ	0xFDA
 45362                           fsr2l	equ	0xFD9
 45363                           status	equ	0xFD8
 45364                           
 45365 ;; *************** function _INT1_ISR *****************
 45366 ;; Defined at:
 45367 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 45368 ;; Parameters:    Size  Location     Type
 45369 ;;		None
 45370 ;; Auto vars:     Size  Location     Type
 45371 ;;		None
 45372 ;; Return value:  Size  Location     Type
 45373 ;;                  1    wreg      void 
 45374 ;; Registers used:
 45375 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45376 ;; Tracked objects:
 45377 ;;		On entry : 0/0
 45378 ;;		On exit  : 0/0
 45379 ;;		Unchanged: 0/0
 45380 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45381 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45382 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45383 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45384 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45385 ;;Total ram usage:        0 bytes
 45386 ;; Hardware stack levels used:    1
 45387 ;; Hardware stack levels required when called:    2
 45388 ;; This function calls:
 45389 ;;		_INT1_CallBack
 45390 ;; This function is called by:
 45391 ;;		_INTERRUPT_InterruptManager
 45392 ;; This function uses a non-reentrant model
 45393 ;;
 45394                           
 45395                           	psect	text224
 45396  00A3B4                     __ptext224:
 45397                           	opt stack 0
 45398  00A3B4                     _INT1_ISR:
 45399                           	opt stack 15
 45400                           
 45401                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 45402                           
 45403                           ;incstack = 0
 45404  00A3B4  90F0               	bcf	intcon3,0,c	;volatile
 45405                           
 45406                           ;ext_int.c: 54: INT1_CallBack();
 45407  00A3B6  ECBA  F04F         	call	_INT1_CallBack	;wreg free
 45408  00A3BA  0012               	return		;funcret
 45409  00A3BC                     __end_of_INT1_ISR:
 45410                           	opt stack 0
 45411                           tosu	equ	0xFFF
 45412                           tosh	equ	0xFFE
 45413                           tosl	equ	0xFFD
 45414                           pclatu	equ	0xFFB
 45415                           pclath	equ	0xFFA
 45416                           tblptru	equ	0xFF8
 45417                           tblptrh	equ	0xFF7
 45418                           tblptrl	equ	0xFF6
 45419                           tablat	equ	0xFF5
 45420                           prodh	equ	0xFF4
 45421                           prodl	equ	0xFF3
 45422                           intcon	equ	0xFF2
 45423                           intcon2	equ	0xFF1
 45424                           intcon3	equ	0xFF0
 45425                           indf0	equ	0xFEF
 45426                           postinc0	equ	0xFEE
 45427                           plusw0	equ	0xFEB
 45428                           fsr0h	equ	0xFEA
 45429                           fsr0l	equ	0xFE9
 45430                           wreg	equ	0xFE8
 45431                           postinc1	equ	0xFE6
 45432                           postdec1	equ	0xFE5
 45433                           plusw1	equ	0xFE3
 45434                           fsr1h	equ	0xFE2
 45435                           fsr1l	equ	0xFE1
 45436                           indf2	equ	0xFDF
 45437                           postinc2	equ	0xFDE
 45438                           postdec2	equ	0xFDD
 45439                           plusw2	equ	0xFDB
 45440                           fsr2h	equ	0xFDA
 45441                           fsr2l	equ	0xFD9
 45442                           status	equ	0xFD8
 45443                           
 45444 ;; *************** function _INT1_CallBack *****************
 45445 ;; Defined at:
 45446 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 45447 ;; Parameters:    Size  Location     Type
 45448 ;;		None
 45449 ;; Auto vars:     Size  Location     Type
 45450 ;;		None
 45451 ;; Return value:  Size  Location     Type
 45452 ;;                  1    wreg      void 
 45453 ;; Registers used:
 45454 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45455 ;; Tracked objects:
 45456 ;;		On entry : 0/0
 45457 ;;		On exit  : 0/0
 45458 ;;		Unchanged: 0/0
 45459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45464 ;;Total ram usage:        0 bytes
 45465 ;; Hardware stack levels used:    1
 45466 ;; Hardware stack levels required when called:    1
 45467 ;; This function calls:
 45468 ;;		Absolute function
 45469 ;;		_DIO0_ISR_Lora
 45470 ;;		_INT1_DefaultInterruptHandler
 45471 ;; This function is called by:
 45472 ;;		_INT1_ISR
 45473 ;; This function uses a non-reentrant model
 45474 ;;
 45475                           
 45476                           	psect	text225
 45477  009F74                     __ptext225:
 45478                           	opt stack 0
 45479  009F74                     _INT1_CallBack:
 45480                           	opt stack 15
 45481                           
 45482                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 45483                           
 45484                           ;incstack = 0
 45485  009F74  0101               	movlb	1	; () banked
 45486  009F76  51E7               	movf	_INT1_InterruptHandler& (0+255),w,b
 45487  009F78  0101               	movlb	1	; () banked
 45488  009F7A  11E8               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45489  009F7C  B4D8               	btfsc	status,2,c
 45490  009F7E  0012               	return	
 45491                           
 45492                           ; BSR set to: 1
 45493                           ;ext_int.c: 64: {
 45494                           ;ext_int.c: 65: INT1_InterruptHandler();
 45495  009F80  D801               	call	i2u2191_48
 45496  009F82  0012               	return	
 45497  009F84                     i2u2191_48:
 45498  009F84  0005               	push	
 45499  009F86  6EFA               	movwf	pclath,c
 45500  009F88  0101               	movlb	1	; () banked
 45501  009F8A  51E7               	movf	_INT1_InterruptHandler& (0+255),w,b
 45502  009F8C  6EFD               	movwf	tosl,c
 45503  009F8E  51E8               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45504  009F90  6EFE               	movwf	tosh,c
 45505  009F92  6AFF               	clrf	tosu,c
 45506  009F94  50FA               	movf	pclath,w,c
 45507  009F96  0012               	return		;indir
 45508  009F98                     __end_of_INT1_CallBack:
 45509                           	opt stack 0
 45510                           tosu	equ	0xFFF
 45511                           tosh	equ	0xFFE
 45512                           tosl	equ	0xFFD
 45513                           pclatu	equ	0xFFB
 45514                           pclath	equ	0xFFA
 45515                           tblptru	equ	0xFF8
 45516                           tblptrh	equ	0xFF7
 45517                           tblptrl	equ	0xFF6
 45518                           tablat	equ	0xFF5
 45519                           prodh	equ	0xFF4
 45520                           prodl	equ	0xFF3
 45521                           intcon	equ	0xFF2
 45522                           intcon2	equ	0xFF1
 45523                           intcon3	equ	0xFF0
 45524                           indf0	equ	0xFEF
 45525                           postinc0	equ	0xFEE
 45526                           plusw0	equ	0xFEB
 45527                           fsr0h	equ	0xFEA
 45528                           fsr0l	equ	0xFE9
 45529                           wreg	equ	0xFE8
 45530                           postinc1	equ	0xFE6
 45531                           postdec1	equ	0xFE5
 45532                           plusw1	equ	0xFE3
 45533                           fsr1h	equ	0xFE2
 45534                           fsr1l	equ	0xFE1
 45535                           indf2	equ	0xFDF
 45536                           postinc2	equ	0xFDE
 45537                           postdec2	equ	0xFDD
 45538                           plusw2	equ	0xFDB
 45539                           fsr2h	equ	0xFDA
 45540                           fsr2l	equ	0xFD9
 45541                           status	equ	0xFD8
 45542                           
 45543 ;; *************** function _DIO0_ISR_Lora *****************
 45544 ;; Defined at:
 45545 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 45546 ;; Parameters:    Size  Location     Type
 45547 ;;		None
 45548 ;; Auto vars:     Size  Location     Type
 45549 ;;		None
 45550 ;; Return value:  Size  Location     Type
 45551 ;;                  1    wreg      void 
 45552 ;; Registers used:
 45553 ;;		status,2, status,0
 45554 ;; Tracked objects:
 45555 ;;		On entry : 0/0
 45556 ;;		On exit  : 0/0
 45557 ;;		Unchanged: 0/0
 45558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45562 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45563 ;;Total ram usage:        0 bytes
 45564 ;; Hardware stack levels used:    1
 45565 ;; This function calls:
 45566 ;;		Nothing
 45567 ;; This function is called by:
 45568 ;;		_DIO0_ISR_Lora_Init
 45569 ;;		_INT1_CallBack
 45570 ;; This function uses a non-reentrant model
 45571 ;;
 45572                           
 45573                           	psect	text226
 45574  00A3F6                     __ptext226:
 45575                           	opt stack 0
 45576  00A3F6                     _DIO0_ISR_Lora:
 45577                           	opt stack 15
 45578                           
 45579                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 45580                           
 45581                           ;incstack = 0
 45582  00A3F6  804C               	bsf	_dioStatus,0,c	;volatile
 45583  00A3F8  0012               	return		;funcret
 45584  00A3FA                     __end_of_DIO0_ISR_Lora:
 45585                           	opt stack 0
 45586                           tosu	equ	0xFFF
 45587                           tosh	equ	0xFFE
 45588                           tosl	equ	0xFFD
 45589                           pclatu	equ	0xFFB
 45590                           pclath	equ	0xFFA
 45591                           tblptru	equ	0xFF8
 45592                           tblptrh	equ	0xFF7
 45593                           tblptrl	equ	0xFF6
 45594                           tablat	equ	0xFF5
 45595                           prodh	equ	0xFF4
 45596                           prodl	equ	0xFF3
 45597                           intcon	equ	0xFF2
 45598                           intcon2	equ	0xFF1
 45599                           intcon3	equ	0xFF0
 45600                           indf0	equ	0xFEF
 45601                           postinc0	equ	0xFEE
 45602                           plusw0	equ	0xFEB
 45603                           fsr0h	equ	0xFEA
 45604                           fsr0l	equ	0xFE9
 45605                           wreg	equ	0xFE8
 45606                           postinc1	equ	0xFE6
 45607                           postdec1	equ	0xFE5
 45608                           plusw1	equ	0xFE3
 45609                           fsr1h	equ	0xFE2
 45610                           fsr1l	equ	0xFE1
 45611                           indf2	equ	0xFDF
 45612                           postinc2	equ	0xFDE
 45613                           postdec2	equ	0xFDD
 45614                           plusw2	equ	0xFDB
 45615                           fsr2h	equ	0xFDA
 45616                           fsr2l	equ	0xFD9
 45617                           status	equ	0xFD8
 45618                           
 45619 ;; *************** function _INT1_DefaultInterruptHandler *****************
 45620 ;; Defined at:
 45621 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 45622 ;; Parameters:    Size  Location     Type
 45623 ;;		None
 45624 ;; Auto vars:     Size  Location     Type
 45625 ;;		None
 45626 ;; Return value:  Size  Location     Type
 45627 ;;                  1    wreg      void 
 45628 ;; Registers used:
 45629 ;;		None
 45630 ;; Tracked objects:
 45631 ;;		On entry : 0/0
 45632 ;;		On exit  : 0/0
 45633 ;;		Unchanged: 0/0
 45634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45635 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45638 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45639 ;;Total ram usage:        0 bytes
 45640 ;; Hardware stack levels used:    1
 45641 ;; This function calls:
 45642 ;;		Nothing
 45643 ;; This function is called by:
 45644 ;;		_EXT_INT_Initialize
 45645 ;;		_INT1_CallBack
 45646 ;; This function uses a non-reentrant model
 45647 ;;
 45648                           
 45649                           	psect	text227
 45650  00A406                     __ptext227:
 45651                           	opt stack 0
 45652  00A406                     _INT1_DefaultInterruptHandler:
 45653                           	opt stack 15
 45654                           
 45655                           ;incstack = 0
 45656  00A406  0012               	return		;funcret
 45657  00A408                     __end_of_INT1_DefaultInterruptHandler:
 45658                           	opt stack 0
 45659                           tosu	equ	0xFFF
 45660                           tosh	equ	0xFFE
 45661                           tosl	equ	0xFFD
 45662                           pclatu	equ	0xFFB
 45663                           pclath	equ	0xFFA
 45664                           tblptru	equ	0xFF8
 45665                           tblptrh	equ	0xFF7
 45666                           tblptrl	equ	0xFF6
 45667                           tablat	equ	0xFF5
 45668                           prodh	equ	0xFF4
 45669                           prodl	equ	0xFF3
 45670                           intcon	equ	0xFF2
 45671                           intcon2	equ	0xFF1
 45672                           intcon3	equ	0xFF0
 45673                           indf0	equ	0xFEF
 45674                           postinc0	equ	0xFEE
 45675                           plusw0	equ	0xFEB
 45676                           fsr0h	equ	0xFEA
 45677                           fsr0l	equ	0xFE9
 45678                           wreg	equ	0xFE8
 45679                           postinc1	equ	0xFE6
 45680                           postdec1	equ	0xFE5
 45681                           plusw1	equ	0xFE3
 45682                           fsr1h	equ	0xFE2
 45683                           fsr1l	equ	0xFE1
 45684                           indf2	equ	0xFDF
 45685                           postinc2	equ	0xFDE
 45686                           postdec2	equ	0xFDD
 45687                           plusw2	equ	0xFDB
 45688                           fsr2h	equ	0xFDA
 45689                           fsr2l	equ	0xFD9
 45690                           status	equ	0xFD8
 45691                           tosu	equ	0xFFF
 45692                           tosh	equ	0xFFE
 45693                           tosl	equ	0xFFD
 45694                           pclatu	equ	0xFFB
 45695                           pclath	equ	0xFFA
 45696                           tblptru	equ	0xFF8
 45697                           tblptrh	equ	0xFF7
 45698                           tblptrl	equ	0xFF6
 45699                           tablat	equ	0xFF5
 45700                           prodh	equ	0xFF4
 45701                           prodl	equ	0xFF3
 45702                           intcon	equ	0xFF2
 45703                           intcon2	equ	0xFF1
 45704                           intcon3	equ	0xFF0
 45705                           indf0	equ	0xFEF
 45706                           postinc0	equ	0xFEE
 45707                           plusw0	equ	0xFEB
 45708                           fsr0h	equ	0xFEA
 45709                           fsr0l	equ	0xFE9
 45710                           wreg	equ	0xFE8
 45711                           postinc1	equ	0xFE6
 45712                           postdec1	equ	0xFE5
 45713                           plusw1	equ	0xFE3
 45714                           fsr1h	equ	0xFE2
 45715                           fsr1l	equ	0xFE1
 45716                           indf2	equ	0xFDF
 45717                           postinc2	equ	0xFDE
 45718                           postdec2	equ	0xFDD
 45719                           plusw2	equ	0xFDB
 45720                           fsr2h	equ	0xFDA
 45721                           fsr2l	equ	0xFD9
 45722                           status	equ	0xFD8
 45723                           
 45724                           	psect	text228
 45725  000000                     __ptext228:
 45726                           	opt stack 0
 45727                           tosu	equ	0xFFF
 45728                           tosh	equ	0xFFE
 45729                           tosl	equ	0xFFD
 45730                           pclatu	equ	0xFFB
 45731                           pclath	equ	0xFFA
 45732                           tblptru	equ	0xFF8
 45733                           tblptrh	equ	0xFF7
 45734                           tblptrl	equ	0xFF6
 45735                           tablat	equ	0xFF5
 45736                           prodh	equ	0xFF4
 45737                           prodl	equ	0xFF3
 45738                           intcon	equ	0xFF2
 45739                           intcon2	equ	0xFF1
 45740                           intcon3	equ	0xFF0
 45741                           indf0	equ	0xFEF
 45742                           postinc0	equ	0xFEE
 45743                           plusw0	equ	0xFEB
 45744                           fsr0h	equ	0xFEA
 45745                           fsr0l	equ	0xFE9
 45746                           wreg	equ	0xFE8
 45747                           postinc1	equ	0xFE6
 45748                           postdec1	equ	0xFE5
 45749                           plusw1	equ	0xFE3
 45750                           fsr1h	equ	0xFE2
 45751                           fsr1l	equ	0xFE1
 45752                           indf2	equ	0xFDF
 45753                           postinc2	equ	0xFDE
 45754                           postdec2	equ	0xFDD
 45755                           plusw2	equ	0xFDB
 45756                           fsr2h	equ	0xFDA
 45757                           fsr2l	equ	0xFD9
 45758                           status	equ	0xFD8
 45759                           
 45760                           	psect	rparam
 45761  0000                     tosu	equ	0xFFF
 45762                           tosh	equ	0xFFE
 45763                           tosl	equ	0xFFD
 45764                           pclatu	equ	0xFFB
 45765                           pclath	equ	0xFFA
 45766                           tblptru	equ	0xFF8
 45767                           tblptrh	equ	0xFF7
 45768                           tblptrl	equ	0xFF6
 45769                           tablat	equ	0xFF5
 45770                           prodh	equ	0xFF4
 45771                           prodl	equ	0xFF3
 45772                           intcon	equ	0xFF2
 45773                           intcon2	equ	0xFF1
 45774                           intcon3	equ	0xFF0
 45775                           indf0	equ	0xFEF
 45776                           postinc0	equ	0xFEE
 45777                           plusw0	equ	0xFEB
 45778                           fsr0h	equ	0xFEA
 45779                           fsr0l	equ	0xFE9
 45780                           wreg	equ	0xFE8
 45781                           postinc1	equ	0xFE6
 45782                           postdec1	equ	0xFE5
 45783                           plusw1	equ	0xFE3
 45784                           fsr1h	equ	0xFE2
 45785                           fsr1l	equ	0xFE1
 45786                           indf2	equ	0xFDF
 45787                           postinc2	equ	0xFDE
 45788                           postdec2	equ	0xFDD
 45789                           plusw2	equ	0xFDB
 45790                           fsr2h	equ	0xFDA
 45791                           fsr2l	equ	0xFD9
 45792                           status	equ	0xFD8
 45793                           
 45794                           	psect	temp
 45795  00004E                     btemp:
 45796                           	opt stack 0
 45797  00004E                     	ds	12
 45798                           tosu	equ	0xFFF
 45799                           tosh	equ	0xFFE
 45800                           tosl	equ	0xFFD
 45801                           pclatu	equ	0xFFB
 45802                           pclath	equ	0xFFA
 45803                           tblptru	equ	0xFF8
 45804                           tblptrh	equ	0xFF7
 45805                           tblptrl	equ	0xFF6
 45806                           tablat	equ	0xFF5
 45807                           prodh	equ	0xFF4
 45808                           prodl	equ	0xFF3
 45809                           intcon	equ	0xFF2
 45810                           intcon2	equ	0xFF1
 45811                           intcon3	equ	0xFF0
 45812                           indf0	equ	0xFEF
 45813                           postinc0	equ	0xFEE
 45814                           plusw0	equ	0xFEB
 45815                           fsr0h	equ	0xFEA
 45816                           fsr0l	equ	0xFE9
 45817                           wreg	equ	0xFE8
 45818                           postinc1	equ	0xFE6
 45819                           postdec1	equ	0xFE5
 45820                           plusw1	equ	0xFE3
 45821                           fsr1h	equ	0xFE2
 45822                           fsr1l	equ	0xFE1
 45823                           indf2	equ	0xFDF
 45824                           postinc2	equ	0xFDE
 45825                           postdec2	equ	0xFDD
 45826                           plusw2	equ	0xFDB
 45827                           fsr2h	equ	0xFDA
 45828                           fsr2l	equ	0xFD9
 45829                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        61
    BSS         1274
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      83
    BANK0           160    148     156
    BANK1           256    111     241
    BANK2           256      0     245
    BANK3           256     20     196
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1654$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncode@masterKey	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncode@key(BANK0[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1654$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1654$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S979$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S979$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPacketSent
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RxDataDone->_LORAWAN_SetCurrentDataRate
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _LORAWAN_Mainloop->_RADIO_DIO0
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 6895128
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          0     0      0  327559
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      68
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      22
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2111
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     311
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2     111
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0    1000
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     200
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     600
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14068
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14068
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6097336
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366341
                                            142 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156243
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693904
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508599
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158240
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9348
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9791
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327491
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166213
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              9 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              9 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              9 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             30 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554822
                                            111 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518231
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             29 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3109707
                                            107 BANK1      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217548
                                            135 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1096006
                                            145 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              4 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1578116
                                            145 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492489
                                            102 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326746
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1069356
                                            142 BANK0      3     0      3
                                            102 BANK1      5     5      0
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9209
                                             62 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9246
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25139
                                             74 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9500
                                             62 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168540
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             84 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                             11 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                             10 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             74 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             74 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             19 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             16 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              8 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  327491
                                            135 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  158691
                                            123 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          15    10      5    2532
                                              4 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     455
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   46616
                                             69 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   20040
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14659
                                             14 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39507
                                             69 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18479
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207916
                                            135 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      44    42      2  185500
                                             95 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             53 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163373
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    5167
                                              7 BANK0      5     1      4
         _LORAWAN_SetCurrentDataRate
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (6) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126779
                                             85 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15512
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263746
                                            143 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   23170
                                             95 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    7600
                                             83 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   15372
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   15076
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   14133
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  127906
                                             85 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            11     9      2   91386
                                             74 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10383
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  109159
                                            132 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    6391
                                             81 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    5712
                                             74 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             76 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84601
                                            123 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   69911
                                            109 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   27279
                                             69 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   20797
                                             49 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           39    35      4    5098
                                             10 BANK0     39    35      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     4      2    1164
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  176129
                                             86 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             22 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             16 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  100540
                                             85 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46235
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15915
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16640
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9796
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     702
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     658
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15254
                                             74 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    5712
                                             62 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1418
                                             53 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     799
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     534
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             36 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    24    20      4     102
                                             12 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17601
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17601
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13902
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     547
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
                          _IOCB5_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB5_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _SysConfigSleep
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           ___awdiv
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
             _rand
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
     _IOCB5_ISR
       Absolute function(Fake) *
       _IOCB5_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      C4      11       76.6%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     6F      F1       7       94.1%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     94      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     479      12        0.0%
DATA                 0      0     699       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 20 22:42:36 2022

                                        ??_LORAWAN_TxDone 00C1  
                              __end_of_DIO3_ISR_Lora_Init A3FE  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0046  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 9DF6  
                                            ___awdiv@sign 0069  
                         __size_of_UpdateJoinSuccessState 0154  
                                     ___wmul@multiplicand 0066  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 9368  
                                   __end_of_AESEncodeLoRa 99E8  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C6  
                                                     l126 873A  
                                                     l192 A24A  
                                                     l464 1C5C  
                                                     l458 19FE  
                                                     l477 1D4C  
                                             ?_RADIO_Init 007D  
                                                     l590 96C6  
                                                     l671 9592  
                                                     l674 95A8  
                                                     l668 99A6  
                                                     l688 802C  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 8D04  
                   __size_of_SelectChannelForTransmission 0076  
                            _SelectChannelForTransmission 8C8E  
                                  _ExecuteRxParamSetupReq 4464  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init A1E6  
                                      __size_of_AESEncode 04FA  
                                         _timer1ReloadVal 005E  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 87D6  
                                   _RADIO_SetLoRaSyncWord A392  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 3084  
                                 __end_of_SwTimersExecute 769C  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00EF  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B6  
                            __end_of_FindSmallestDataRate 72A0  
                     __end_of_RADIO_SetFrequencyHopPeriod A388  
                             _RADIO_SetFrequencyHopPeriod A37E  
                                              _CheckFlags 906C  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 9F74  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 0024  
                                      __size_of_IOCB5_ISR 0024  
                                                    l1020 125C  
                                                    l1202 63B8  
                                                    l2011 6ADA  
                                                    l1108 42F6  
                                                    l1052 30D4  
                                                    l1029 15E6  
                                                    l1213 60DE  
                                                    l1221 A090  
                                                    l1125 45EA  
                                                    l1134 6552  
                                                    l1150 493A  
                                                    l1047 30C8  
                                                    l1144 65AA  
                                                    l1081 9C8E  
                                                    l2017 8A8A  
                                                    l1242 9C5E  
                                                    l2043 7122  
                                                    l2220 1FFE  
                                                    l1236 940C  
                                                    l2124 0E06  
                                                    l1077 A0CC  
                                                    l2221 2056  
                                                    l1229 8B0C  
                                                    l3102 918A  
                                                    l1262 8D9C  
                                                    l2038 66FA  
                                                    l2231 222E  
                                                    l2215 1ED6  
                                                    l2216 1F2E  
                                                    l1248 9DF0  
                                                    l1089 911C  
                                                    l1097 3954  
                                                    l2067 012A  
                                                    l2180 2962  
                                                    l2229 21D4  
                                                    l1277 8936  
                                                    l3039 7EBA  
                                                    l2255 8762  
                                                    l1295 4178  
                                                    l2192 2988  
                                                    l2184 295C  
                                                    l3049 869A  
                                                    l2179 285A  
                                                    l2189 2970  
                   RADIO_WriteConfiguration@symbolTimeout 00AA  
                                                    l1666 7DD4  
                                                    l1941 6212  
                                                    l1694 7784  
                                                    l1960 7A86  
                                                    l1962 7B0C  
                                                    l2674 95C6  
                                                    l1965 7952  
                                                    l1974 7968  
                                                    l1989 5E6E  
                                        _RADIO_WritePower 6E78  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 5240  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1190 00BC  
                                     _RADIO_Transmit$1192 00C0  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 9F50  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 00AE  
                                      _PrepareSessionKeys 796C  
                                                    _loRa 0200  
                                                    _main 80F4  
                                                    _rand 92B4  
                          __end_of_UpdateMinMaxChDataRate 719E  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0262  
                                                    btemp 004E  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00E0  
                                           ComputeMic@key 00DB  
                               __end_of_LORAWAN_RxTimeout 3456  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0054  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init A2DC  
                                        __end_of_ADC_Read 95F8  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 950C  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0080  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 73A2  
                                   ExecuteLinkAdr@txPower 0079  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00E0  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 0044  
                              __end_of_RADIO_GetPacketSnr A3C2  
                                            ___param_bank 000010  
                                              _GetRx1Freq A21C  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 955E  
                  SearchAvailableChannel@transmissionType 00B3  
                         __size_of_HALResetPinOutputValue 001E  
                                   MacExecuteCommands@ptr 00BA  
                                   _RADIO_WriteFSKBitRate 8F9E  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR A3BC  
                                        __end_of_INT2_ISR A3B4  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 007C  
                           __end_of_OSCILLATOR_Initialize A2B2  
                      __size_of_LORAWAN_LinkCheckCallback 0186  
                                                   l10339 A102  
                                                   l13121 97F8  
                                                   l13123 980E  
                                                   l13211 2312  
                                                   l13203 22D2  
                                         __end_of___abdiv 8612  
                                                   l10717 873C  
                                                   l13221 2356  
                                                   l14005 7CE6  
                                                   l14021 7D36  
                                                   l13311 7E4E  
                                                   l13223 235C  
                                                   l13215 231C  
                                                   l14007 7CF2  
                                                   l13049 A030  
                                                   l13321 7EA8  
                                                   l13313 7E54  
                                                   l13401 6B70  
                                                   l13065 3C7E  
                                                   l13233 23BC  
                                                   l13209 2304  
                                                   l14041 4952  
                                                   l14025 7D4A  
                                                   l14017 7D28  
                                                   l14009 7CF8  
                                                   l14201 9C88  
                                                   l14113 8B06  
                                                   l13147 5774  
                                                   l13155 9B00  
                                                   l13331 863E  
                                                   l13067 3C8E  
                                                   l13251 2522  
                                                   l13243 23DE  
                                                   l13227 2366  
                                                   l14051 4988  
                                                   l15003 2994  
                                                   l14131 9406  
                                                   l13149 5822  
                                                   l13309 7E3E  
                                                   l13333 8644  
                                                   l13421 6BD0  
                                                   l13405 6B86  
                                                   l13253 2534  
                                                   l14053 4994  
                                                   l15005 29AC  
                                                   l14221 8D92  
                                                   l14109 8ACE  
                                                   l13159 9B1E  
                                                   l13431 6BFA  
                                                   l11671 70AE  
                                                   l13263 25A6  
                                                   l13239 23D4  
                                                   l13503 6F18  
                                                   l14071 4A32  
                                                   l14047 496C  
                                                   l14143 6344  
                                                   l13337 8688  
                                                   l13329 862E  
                                                   l13433 6C06  
                                                   l13417 6BC0  
                                                   l11681 718C  
                                                   l13265 25B8  
                                                   l13257 2564  
                                                   l13521 6F60  
                                                   l14057 49C2  
                                                   l16001 1678  
                                                   l14233 8DCA  
                                                   l14153 6422  
                                                   l15201 5950  
                                                   l13195 91DE  
                                                   l13363 6DE2  
                                                   l13419 6BC6  
                                                   l11683 7190  
                                                   l13283 2778  
                                                   l13259 2576  
                                                   l13275 2758  
                                                   l14403 2FF4  
                                                   l13507 6F2A  
                                                   l14083 4B22  
                                                   l14067 4A16  
                                                   l14059 49EE  
                                                   l15035 2B5A  
                                                   l15019 2A36  
                                                   l14171 921C  
                                                   l14155 6426  
                                                   l15131 793A  
                                                   l13189 91A6  
                                                   l13357 6D78  
                                                   l14413 3048  
                                                   l14341 2D34  
                                                   l13541 7FBE  
                                                   l14077 4AB4  
                                                   l16021 177C  
                                                   l14501 55C8  
                                                   l15029 2AD8  
                                                   l14245 8DEA  
                                                   l13367 6E56  
                                                   l13295 8D16  
                                                   l13279 276E  
                                                   l13199 22C8  
                                                   l13623 8B88  
                                                   l14407 2FFE  
                                                   l14351 2DD6  
                                                   l14335 2CE4  
                                                   l14343 2D7E  
                                                   l13527 6F6E  
                                                   l13711 19F4  
                                                   l16015 1762  
                                                   l14511 72AE  
                                                   l14431 71C4  
                                                   l15231 76FA  
                                                   l15223 76C6  
                                                   l14239 8DE6  
                                                   l14175 924E  
                                                   l15151 46F4  
                                                   l15135 794A  
                                                   l13369 6E5A  
                                                   l13385 6B22  
                                                   l13377 6B02  
                                                   l13289 27B2  
                                                   l14361 2E4A  
                                                   l14329 2CB0  
                                                   l13641 9158  
                                                   l13801 1C44  
                                                   l13713 19FA  
                                                   l13545 7FF6  
                                                   l13561 9AA2  
                                                   l14089 4B9A  
                                                   l16025 17BA  
                                                   l16009 16EA  
                                                   l14521 739C  
                                                   l14441 7250  
                                                   l15401 3692  
                                                   l13571 9BB8  
                                                   l13299 8D3C  
                                                   l16107 51BE  
                                                   l13619 8B24  
                                                   l14371 2E60  
                                                   l14355 2E10  
                                                   l14347 2DCC  
                                                   l13475 6E96  
                                                   l13707 19E0  
                                                   l13803 1C6A  
                                                   l14283 654E  
                                                   l14267 6476  
                                                   l15323 88A4  
                                                   l14515 733A  
                                                   l14507 5626  
                                                   l14443 725C  
                                                   l14531 1D82  
                                                   l15411 3700  
                                                   l15403 36A8  
                                                   l15171 4934  
                                                   l15155 46FE  
                                                   l16043 85A0  
                                                   l15139 7960  
                                                   l16301 8486  
                                                   l13397 6B5E  
                                                   l14381 2ED6  
                                                   l14365 2E50  
                                                   l13645 917C  
                                                   l13637 9146  
                                                   l13493 6EE4  
                                                   l13733 1A56  
                                                   l14269 647E  
                                                   l14285 6556  
                                                   l14293 6580  
                                                   l14517 738C  
                                                   l14453 7290  
                                                   l14429 71BC  
                                                   l14621 22B4  
                                                   l15237 770E  
                                                   l15405 36BE  
                                                   l15421 3774  
                                                   l16061 85F2  
                                                   l16053 85C2  
                                                   l16037 8590  
                                                   l16133 7804  
                                                   l16125 77DC  
                                                   l13567 9BA6  
                                                   l13663 8400  
                                                   l13911 5C08  
                                                   l14383 2EDC  
                                                   l14367 2E56  
                                                   l14359 2E34  
                                                   l13639 9152  
                                                   l13479 6EA8  
                                                   l13495 6EF6  
                                                   l13823 1D1A  
                                                   l13815 1CE2  
                                                   l13743 1A86  
                                                   l13751 1AA8  
                                                   l14295 658A  
                                                   l15335 88C6  
                                                   l15327 88A8  
                                                   l14519 7390  
                                                   l14439 724C  
                                                   l14615 2266  
                                                   l14199 9C80  
                                                   l15431 37D0  
                                                   l15415 3720  
                                                   l15407 36D4  
                                                   l15511 02BE  
                                                   l16055 85D4  
                                                   l16223 68EE  
                                                   l16321 8530  
                                                   l16305 8490  
                                                   l13921 5C4C  
                                                   l14393 2F5C  
                                                   l14377 2EAA  
                                                   l13681 18E8  
                                                   l14713 4DFC  
                                                   l14641 4BD2  
                                                   l14289 656C  
                                                   l15345 88F2  
                                                   l15329 88C2  
                                                   l14449 727A  
                                                   l14457 729A  
                                                   l14609 2238  
                                                   l14617 22A4  
                                                   l13585 6062  
                                                   l15409 36EA  
                                                   l15169 4922  
                                                   l16049 85B8  
                                                   l16065 85FE  
                                                   l16137 7826  
                                                   l13915 5C12  
                                                   l13907 5BE4  
                                                   l14387 2EE6  
                                                   l13499 6F08  
                                                   l13819 1CF4  
                                                   l13683 1910  
                                                   l13691 1974  
                                                   l14707 4D84  
                                                   l14635 4BB8  
                                                   l14299 65A4  
                                                   l14491 5564  
                                                   l14483 54CA  
                                                   l14475 547C  
                                                   l14571 20B0  
                                                   l14555 1F6E  
                                                   l14539 1E46  
                                                   l14619 22A8  
                                                   l13587 606A  
                                                   l14467 962E  
                                                   l15419 3738  
                                                   l15427 3798  
                                                   l15363 87B8  
                                                   l15187 5846  
                                                   l15179 A06A  
                                                   l15603 065C  
                                                   l15507 02A0  
                                                   l16147 7858  
                                                   l16317 8526  
                                                   l13933 5CA0  
                                                   l13925 5C76  
                                                   l13829 1D40  
                                                   l13685 1948  
                                                   l13693 1992  
                                                   l16245 67A0  
                                                   l14493 5568  
                                                   l14581 2104  
                                                   l13597 6148  
                                                   l15365 87BC  
                                                   l16173 7C36  
                                                   l16069 860C  
                                                   l16149 785C  
                                                   l16413 7A8A  
                                                   l15285 66D4  
                                                   l16351 6276  
                                                   l16343 6200  
                                                   l14399 2F9E  
                                                   l13695 19A4  
                                                   l13679 18C0  
                                                   l14751 8CFE  
                                                   l15383 90B4  
                                                   l15375 9084  
                                                   l14479 54C0  
                                                   l14583 211E  
                                                   l14567 2094  
                                                   l13599 614C  
                                                   l14823 3A78  
                                                   l14903 459E  
                                                   l15391 3466  
                                                   l15199 594C  
                                                   l15631 078C  
                                                   l15463 0124  
                                                   l16191 7C74  
                                                   l16431 5D0C  
                                                   l16503 6AD6  
                                                   l15279 6638  
                                                   l16337 61CC  
                                                   l16345 6204  
                                                   l16097 5170  
                                                   l13929 5C96  
                                                   l13793 1C0C  
                                                   l13785 1BB0  
                                                   l13689 195C  
                                                   l14673 4C88  
                                                   l14649 4BEE  
                                                   l14585 2124  
                                                   l13881 8926  
                                                   l14825 3B2C  
                                                   l13849 9C58  
                                                   l15529 032E  
                                                   l15481 01D6  
                                                   l15457 00BE  
                                                   l16193 7C78  
                                                   l16169 7C14  
                                                   l16257 9B4E  
                                                   l16601 9360  
                                                   l16513 8A4A  
                                                   l16099 5188  
                                                   l13795 1C18  
                                                   l14683 4CBA  
                                                   l14667 4C5E  
                                                   l15379 909C  
                                                   l13971 6CF2  
                                                   l14931 8F98  
                                                   l13875 8906  
                                                   l14819 3A58  
                                                   l15395 3666  
                                                   l15811 0DFA  
                                                   l15707 0A72  
                                                   l15619 0736  
                                                   l15555 051A  
                                                   l15563 052A  
                                                   l15547 0470  
                                                   l14669 4C76  
                                                   l13869 8238  
                                                   l14589 2144  
                                                   l13893 8974  
                                                   l14917 46D0  
                                                   l15821 0E4A  
                                                   l15805 0DBA  
                                                   l15813 0E00  
                                                   l15741 0B42  
                                                   l15733 0ADC  
                                                   l15717 0A90  
                                                   l15573 0578  
                                                   l15565 0542  
                                                   l15637 079C  
                                                   l15485 01EA  
                                                   l15477 01D0  
                                                   l16197 7C90  
                                                   l16613 929C  
                                                   l16453 5DD2  
                                                   l16437 5D2A  
                                                   l14679 4C9A  
                                                   l14767 9128  
                                                   l13887 894C  
                                                   l13879 8918  
                                                   l14791 38A8  
                                                   l14871 43E4  
                                                   l14855 4270  
                                                   l15399 367C  
                                                   l15743 0B56  
                                                   l15671 093A  
                                                   l15583 05C4  
                                                   l16607 928E  
                                                   l16439 5D3A  
                                                   l16447 5D6A  
                                                   l16375 3F70  
                                                   l16367 3EA6  
                                  __end_of_SysConfigSleep 8866  
                                                   l16801 52A0  
                                                   l13969 6CC2  
                                                   l13993 7CB2  
                                                   l14929 8F6C  
                                                   l13889 895A  
                                                   l14857 42AC  
                                                   l15833 0EA0  
                                                   l15729 0AC8  
                                                   l15649 07EA  
                                                   l15577 05B4  
                                                   l15921 334C  
                                                   l15905 323A  
                                                   l16561 8334  
                                                   l16609 9294  
                                                   l16377 3F8A  
                                                   l16385 4026  
                                                   l16811 5306  
                                                   l14875 4446  
                                                   l15835 0EA6  
                                                   l15683 09F6  
                                                   l15595 062A  
                                                   l15843 0EC4  
                                                   l15907 3242  
                                                   l15931 341A  
                                                   l16563 833A  
                                                   l16483 6A50  
                                                   l16661 7F52  
                                                   l16653 7F16  
                                                   l16805 52AA  
                                                   l14981 2914  
                                                   l14949 2850  
                                                   l14877 4456  
                                                   l14869 43D4  
                                                   l15853 0F0E  
                                                   l15829 0E62  
                                                   l15837 0EAA  
                                                   l15773 0D1E  
                                                   l15589 061A  
                                                   l15925 33DA  
                                                   l16573 836A  
                                                   l16493 6A84  
                                                   l16397 40D4  
                                                   l17701 7686  
                                                   l16735 4F50  
                                                   l16815 5316  
                                                   l13999 7CC8  
                                                   l14799 390A  
                                                   l14879 445A  
                                                   l15767 0D08  
                                                   l15759 0C50  
                                                   l15599 0648  
                                                   l15847 0ECA  
                                                   l15919 3348  
                                                   l16559 832E  
                                                   l16567 8342  
                                                   l16583 838A  
                                                   l16591 9340  
                                                   l16487 6A56  
                                                   l17703 7688  
                                                   l16649 7F0C  
                                                   l16825 537C  
                                                   l15769 0D16  
                                                   l15697 0A18  
                                                   l15881 3168  
                                                   l15865 30B4  
                                                   l16577 837A  
                                                   l16569 8354  
                                                   l16593 9346  
                                                   l17705 768C  
                                                   l16819 5320  
                                                   l15955 1120  
                                                   l14979 290E  
                                                   l14899 4552  
                                                   l15795 0D9E  
                                                   l15699 0A30  
                                                   l16579 8382  
                                                   l15973 1482  
                                                   l16589 933A  
                                                   l16597 934E  
                                                   l15975 1488  
                                                   l15887 31A8  
                                                   l16857 901E  
                                                   l15969 13E2  
                                                   l16859 9022  
                                                   l15979 1492  
                                                   l15899 31FA  
                                                   l17691 75AE  
                                                   l17827 8166  
                                                   l15989 15C4  
                                                   l15997 1672  
                                                   l17839 8184  
                                                   ?_main 0001  
                                                   ?_rand 00AA  
                                         __end_of___awdiv 7D54  
                                              _FillSubKey 8B12  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer A3D2  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler A306  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 7ECC  
                                         RADIO_Transmit@i 00C5  
                                                   _IDLEN 007E9F  
                                                   u20028 8A76  
                                         ___awdiv@divisor 0066  
                                                   u20125 8306  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 86AC  
                                                   u20195 9942  
                                       ??_EnableChannels1 006D  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _LATD1 007C61  
                                    RxJoinResponse@status 0001  
                                                   _LATD3 007C63  
                                                   u15060 8B82  
                                                   _LATD4 007C64  
                                                   u14350 A2E4  
                                                   u15070 8B84  
                                                   u15150 198A  
                                                   u14360 91D0  
                       __end_of_AckRetransmissionCallback 6AE0  
                  SearchAvailableChannel@randomNumberCopy 00BA  
                                                   u14610 825C  
                                                   u22267 9B08  
                                                   u15155 197E  
                                                   u14367 91C6  
                                                   u15255 1ACA  
                                                   u16180 2CC2  
                                                   u16165 2C88  
                                                   u16190 2CC4  
                                                   u15471 5B7A  
                                                   u18031 0304  
                                                   u15720 4AE2  
                                                   u19000 141A  
                                                   u18200 06B4  
                                                   u15705 4A5E  
                                                   u19100 16AA  
                                                   u16540 1E44  
                                                   u18108 0506  
                                                   u18060 0460  
                                                   u19005 140C  
                                                   u18230 07CC  
                                                   u17318 7926  
                                          __CFG_DEBUG$OFF 000000  
                                                   u15735 4B0A  
                                                   u15745 4B34  
                                                   u18250 091C  
                                                   u21978 7672  
                                                   u19115 16D2  
                                                   u17348 9A7A  
                                                   u18308 09E2  
                                                   u18228 0778  
                                                   u18148 05A0  
                                                   u19125 16FC  
                                                   u16750 4D44  
                                                   u16808 89F6  
                                                   u17640 65F0  
                                                   u17625 8BBA  
                                                   u16834 910A  
                                                   u18178 0606  
                                                   u16835 9102  
                                                   u19420 675A  
                                                   u16765 4D6C  
                                                   u17485 5978  
                                                   u19158 17A6  
                                                   u19430 6774  
                                                   u18390 0B9A  
                                                   u16775 4D96  
                                                   u17655 6628  
                                                   u19440 67E0  
                                                   u17808 87A4  
                                                   u18528 0E36  
                                                   u17665 664A  
                                                   u19178 17E2  
                                                   u18618 0EFA  
                                                   u18458 0D8A  
                                                   u19370 68A8  
                                                   u19435 6766  
                                                   u18715 3110  
                                                   u18628 0F24  
                                                   u19380 68C2  
                                                   u19605 625E  
                                                   u19445 67D2  
                                                   u17950 01B0  
                                                   u19390 692E  
                                                   u19615 6288  
                                                   u17688 66E4  
                                                   u19385 68B4  
                                                   u19705 40C4  
                                                   u18738 3194  
                                                   u19395 6920  
                                                   u19715 40EE  
                                                   u19820 5D8A  
                                                   u18925 0FC0  
                                                   u19590 6236  
                                                   u18935 1052  
                                                   u18855 336A  
                                                   u19920 6A4A  
                                                   u18945 1164  
                                                   u19690 407E  
                                                   u18955 11F6  
                                                   u19835 5DC2  
                                                   u18980 1396  
                                                   u18788 3226  
                                                   u19845 5DE4  
                                                   u18990 13B6  
                                                   u18878 3406  
                                         __end_of___lwmod 9194  
                                                   u18898 3442  
                                                   u18995 13AA  
                                                   u19948 6A82  
                                                   i2l242 93BC  
                                                   u19988 6AC2  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0068  
                     __size_of_LORAWAN_SetCurrentDataRate 0034  
                             __size_of_RADIO_ReceiveStart 0266  
                     __size_of_LORAWAN_SetChannelIdStatus 0060  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                              _LoRaWakeUp A324  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 00A2  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse A3DA  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR A294  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00CA  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 004E  
                                                   __rcon 004A  
                                 __end_of_PIN_MANAGER_IOC A2A4  
                            ??_IncludeMacCommandsResponse 0069  
                           __end_of_RADIO_WatchdogTimeout 95AC  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 001E  
                                                   _randx 01D0  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand A274  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                  _UpdateJoinSuccessState 65B0  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler A310  
                                              _ComputeMic 8E5C  
                                 __end_of_TMR1_Initialize 9C02  
                                  UpdateCfList@joinAccept 00AA  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 017A  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate A34C  
                            __size_of_RADIO_FSKPacketSent 0152  
                           __end_of_UpdateChannelIdStatus 6178  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 3456  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00B1  
                                     __size_of_RADIO_DIO0 00A0  
                                     __size_of_RADIO_DIO1 0056  
                                     __size_of_RADIO_DIO2 005E  
                                     __size_of_RADIO_DIO3 0024  
                                     __size_of_RADIO_DIO4 003E  
                                     __size_of_RADIO_DIO5 002E  
                      PrepareJoinRequestFrame@bufferIndex 00EE  
                                         _TMR1_WriteTimer A01C  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 013E  
                                       __end_of_AESEncode 27BC  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0212  
                        __end_of_RADIO_WriteConfiguration 1D66  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 7B16  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00E7  
                             __size_of_DIO1_ISR_Lora_Init 0012  
                                     ?_MacExecuteCommands 00B4  
                                       _SPI2_Exchange8bit A240  
                                            __end_of_main 81A0  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 9312  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 7F86  
                                        _SetJoinFailState 9A58  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress A0D2  
                                    _ExecuteRxTimingSetup 9D76  
                                       __end_of_IOCB4_ISR 9F50  
                                       __end_of_IOCB5_ISR 9F2C  
                               __size_of_UpdateDLSettings 001E  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 001E  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00CF  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower A356  
                                               ??_AESCmac 00D4  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 00B9  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00F4  
                                                  ??_rand 00AC  
                                          ??_RADIO_RxDone 00F1  
                                          ??_RADIO_TxDone 00E7  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse A3DE  
                       __end_of_LORAWAN_LinkCheckCallback 5E78  
                          __end_of_SetReceptionNotOkState 87D6  
                             __end_of_UpdateReceiveDelays 9644  
                         __end_of_AssembleEncryptionBlock 6D52  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 009E  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 97EC  
                                              _RxDataDone 9644  
                                          _EnableChannels A096  
                                      __size_of_LoRaSleep 002A  
                               ??_PrepareJoinRequestFrame 00E4  
                                          _HALSPICSAssert A3E2  
                                    ??_MacExecuteCommands 00B7  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00BF  
                                              _ExtractMic 8C12  
                         __size_of_SearchAvailableChannel 015E  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue A0F0  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                        ___awdiv@dividend 0064  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0076  
                  __end_of_LORAWAN_ReceiveWindow1Callback 7B16  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00C4  
                          _LORAWAN_ReceiveWindow1Callback 7A52  
                                _RADIO_FSKPacketSent$1211 00EF  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 9C64  
                          ?_IOCB5_DefaultInterruptHandler 0001  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 009D  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 37DA  
                  __end_of_LORAWAN_ReceiveWindow2Callback 796C  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00EA  
                          _LORAWAN_ReceiveWindow2Callback 7882  
                                                  i2l2441 0044  
                                                  i2l2443 0054  
                                                  i2l2447 005E  
                                                  i2l2439 0038  
                           __size_of_RADIO_SetFSKSyncWord 0038  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 002A  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 00A0  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00B6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00E7  
                         __size_of_AutomaticReplyCallback 002C  
                              __size_of_LORAWAN_RxTimeout 03D2  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init A21C  
                                __size_ofi2_TMR_SwapTimer 0040  
                                       ExecuteLinkAdr@ptr 0073  
                           __size_of_RADIO_WriteFrequency 0102  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00D6  
                             __size_of_ComputeSessionKeys 00B6  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit A252  
                                     LORAWAN_TxDone@found 00D5  
                                         _CheckMcastFlags 8866  
                                     LORAWAN_TxDone@minim 00E2  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 9FBA  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00DE  
                                              _TimeToSend 0173  
                      SearchAvailableChannel@randomNumber 00BD  
                    __end_of_TMR1_DefaultInterruptHandler A400  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler A3FE  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 968E  
                                               ??___abdiv 0065  
                                                  ___lmul 8D04  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer A3D6  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 9AC8  
                             ?_LORAWAN_LinkCheckConfigure 00AA  
                                   ?_ExecuteRxTimingSetup 006B  
                                               ??___awdiv 0068  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 719E  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 00B0  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 00A6  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 00AA  
                                  __size_of_LORAWAN_Reset 0226  
                                                  _memcpy 9194  
                                                  _memset 9B9C  
                                                  clear_0 7B7E  
                                                  clear_1 7B90  
                                                  clear_2 7B9C  
                                                  clear_3 7BA8  
                                                  clear_4 7BB4  
                                                  clear_5 7BC0  
                                                  clear_6 7BCC  
                                 SwTimerIsRunning@timerId 0064  
                                        ___awdiv@quotient 006A  
                             __size_of_DIO5_ISR_Lora_Init 0012  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 019A  
                                  __end_of_EnableChannels A0B4  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler A406  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler A404  
                                            __pdataCOMRAM 005A  
                                  __end_of_HALSPICSAssert A3E6  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 0074  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 0095  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                         RADIO_FHSSChangeChannel@irqFlags 007D  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0076  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0099  
                                         _UpdateDataRange 62F0  
                                  __end_of_ExecuteLinkAdr 3B36  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 9B9C  
                              _LORAWAN_SetCurrentDataRate 9B68  
               IOCB5_SetInterruptHandler@InterruptHandler 0064  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 9256  
                              _LORAWAN_SetChannelIdStatus 91F6  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 008E  
                                           AESEncode@aux2 008D  
                                           AESEncode@aux3 008F  
                                 __end_of_TMR1_WriteTimer A03C  
                                   __end_of_SwTimerCreate 8742  
                          ??_SelectChannelForTransmission 00BF  
                                             ?_ComputeMic 00DB  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 9F08  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00CF  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize A03C  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0188  
                                          ??_LORAWAN_Init 00BA  
                                          ??_LORAWAN_Join 00EF  
                                          ??_LORAWAN_Send 00EB  
                          __size_of_RADIO_FSKPayloadReady 00BE  
                                              __accesstop 0060  
                                 __end_of__initialization 7BD2  
                           __end_of_RADIO_FSKPayloadReady 7C96  
                                          _RADIO_Transmit 4BA6  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 00EE  
                                  RADIO_ReadRandom@retVal 0073  
                                        _ConfigureRadioRx 9DF6  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 9412  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize FF67  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                               ExecuteLinkAdr@channelMask 0077  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend A2CE  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 9DCC  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 6452  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 9E20  
                                            __pidataBANK3 A264  
                                     ??_SYSTEM_Initialize 0066  
                              __end_of_DIO4_ISR_Lora_Init A3FC  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 0064  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 17F6  
                                    __size_of_readAndSend 002C  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF95  
                               __size_of_LORAWAN_Mainloop 0040  
                                        ??_EncKeySchedule 0066  
                   __end_of_IOCB4_DefaultInterruptHandler A404  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler A402  
                                __end_of_RADIO_WritePower 6F94  
                                 ?_ExecuteRxParamSetupReq 00AA  
                                           __end_of_srand A284  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 016B  
                                            ??_RADIO_DIO1 00CF  
                                            ??_RADIO_DIO2 007E  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 84D6  
                                         _UpdateFrequency 96D4  
                                  _AutomaticReplyCallback 9D4A  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 0042  
                                         _UpdateDutyCycle 971A  
                                         ?_EnableChannels 0070  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 9C94  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init A3FC  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput A3EE  
                                 __size_of_TMR1_ReadTimer 0026  
                        __end_of_INT2_SetInterruptHandler A310  
                                        RADIO_DIO0@opMode 016E  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0067  
                      __end_of_IncludeMacCommandsResponse 22C2  
                              _IncludeMacCommandsResponse 1D66  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 00A0  
                                UpdateCfList@bufferLength 00AC  
                                        RADIO_DIO2@opMode 007F  
                                   LORAWAN_Send@confirmed 00ED  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0073  
                                        _ValidateDataRate A0B4  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize A05A  
                      __size_of_RADIO_SetChannelFrequency 00B8  
                                                 ??_srand 0078  
                                  __end_of_RADIO_Transmit 4E08  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 4E08  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00F4  
                                              __pbssBANK1 016F  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 9E9A  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 88F6  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF6F  
                                   _INT0_InterruptHandler 01E5  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0094  
                                    _RADIO_SetOutputPower A34C  
                                              __pnvCOMRAM 005E  
                                    __end_of_RADIO_SetCRC A36A  
                                  __size_of_DIO0_ISR_Lora 0004  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 7882  
                              __end_of_RADIO_RxFSKTimeout 99AC  
                                    __end_of_RADIO_TxDone 699C  
                                     __size_of_FillSubKey 0084  
                                      __end_of_RADIO_DIO0 8396  
                                      __end_of_RADIO_DIO1 9368  
                                      __end_of_RADIO_DIO2 92B4  
                                      __end_of_RADIO_DIO3 9EE4  
                                      __end_of_RADIO_DIO4 9970  
                                      __end_of_RADIO_DIO5 9CC2  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0046  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 5240  
                       __size_of_LORAWAN_SetDeviceAddress 001A  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BF  
                                                 ?_Random 00B1  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0004  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer A10E  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 88F6  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                     __size_of_LoRaWakeUp 000A  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 0134  
                                  ??_ExecuteRxTimingSetup 006D  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 00BF  
                                                 ?___lmul 009E  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 46DA  
                                      ??_CountfOptsLength 0064  
                                                 ?___wmul 0064  
                                  __size_of_DIO2_ISR_Lora 0004  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00B9  
                                      EncryptFRMPayload@j 00BA  
                                      EncryptFRMPayload@k 00B8  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings A05A  
                                        _ValidateRxOffset A078  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 00A6  
                                       _TMR_ISR_Lora_Init A1C2  
                      __size_of_IOCB5_SetInterruptHandler 000A  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 006E  
                                  RADIO_Transmit@regValue 00C4  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 6704  
                                                 _AESCmac 2C26  
                              ?_IOCB5_SetInterruptHandler 0064  
                                  ComputeMic@bufferLength 00DF  
                                 __size_of_ADC_SelChannel 001C  
                                 __end_of_UpdateDataRange 6452  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l11371 9910  
                                                 i2l10681 5F62  
                                                 i2l11393 7522  
                                                 i2l11369 98FE  
                                                 i2l10683 5FEC  
                                                 i2l11387 74C6  
                                                 i2l11397 7586  
                                                 i2l11399 7588  
                                                 i2l10697 A15A  
                                    EncryptFRMPayload@dir 00A8  
                                      _RADIO_GetPacketSnr A3BC  
                                    EncryptFRMPayload@key 00AD  
                                   __end_of_UpdateTxPower A338  
                                     _RADIO_SetIQInverted A356  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00AC  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 0186  
                                     i2_SwTimersInterrupt 74A4  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF8E  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 9A90  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 00B5  
                                 _ValidateChannelMaskCntl 9DCC  
                                         ___abdiv@counter 0067  
                                     StartReTxTimer@minim 00A2  
                              AssemblePacket@bufferLength 00DE  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 803E  
                             PrepareJoinRequestFrame@iCtr 00ED  
                               _IOCB4_SetInterruptHandler A2FC  
                       __end_of_SetCallbackSoftwareTimers 709A  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 699C  
                             PrepareJoinRequestFrame@mhdr 00EC  
                                  __size_of_AESEncodeLoRa 003C  
                       __size_of_INT0_SetInterruptHandler 000A  
                           __size_of_LORAWAN_PlatformInit 0022  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00CD  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00E8  
                                  _InitDefault868Channels 8436  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00EA  
                                   _StopAllSoftwareTimers 94BA  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 971A  
                                     AssemblePacket@fCtrl 00E4  
                                                 ___abdiv 8576  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 004A  
                                              AESEncode@i 0090  
                                               _AESEncode 22C2  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init A1D4  
                                                 ___awdiv 7C96  
                                         __size_of___lmul 0076  
                             __size_of_DIO2_ISR_Lora_Init 0012  
                                 __end_of_UpdateDutyCycle 9760  
                                                 ___lldiv 7E10  
                                     __size_of_ExtractMic 007C  
                                         __size_of___wmul 0036  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 8612  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 9132  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                                 _devAddr 01CC  
                                    ValidateChannelMask@i 0068  
                                                 __pcinit 7B16  
                      __size_of_LORAWAN_GetMaxPayloadSize 0068  
                                                 _appSKey 03B4  
                                         __size_of_memcpy 0062  
                              __end_of_RADIO_ReceiveStart 4BA6  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 0034  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00B2  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 80F4  
                                                 __ptext1 9D1E  
                                                 __ptext2 95AC  
                                                 __ptext3 A12C  
                                                 __ptext4 87D6  
                                                 __ptext5 A03C  
                                                 __ptext6 9BD0  
                                                 __ptext7 A3D2  
                                                 __ptext8 8DEE  
                                                 __ptext9 A2E8  
                                    __end_of_LORAWAN_Init 906C  
                                    __end_of_LORAWAN_Join 7E10  
                                    __end_of_LORAWAN_Send 7794  
                                           _DIO0_ISR_Lora A3F6  
                          ??_TMR1_DefaultInterruptHandler 0001  
                       __end_of_IOCB5_SetInterruptHandler A2F2  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 59D0  
                                               _IOCB4_ISR 9F2C  
                              ExecuteNewChannel@frequency 00AF  
                                               _IOCB5_ISR 9F08  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 0012  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00C0  
                                 __size_of_LORAWAN_RxDone 0EB0  
                                   _OSCILLATOR_Initialize A2A4  
                          __end_of_UpdateJoinSuccessState 6704  
                                 __size_of_LORAWAN_TxDone 08BE  
                              __end_of_RADIO_SetBandwidth A392  
                                         _RADIO_GetStatus A3C2  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF95  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora A3F2  
                                             _SwTimerStop 9E72  
                                                 _payload 01BA  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01D5  
                             IncludeMacCommandsResponse@i 0071  
                                           ?_UpdateCfList 00AA  
                                       _ExecuteNewChannel 4182  
                             __size_of_PrepareSessionKeys 00E6  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 01F6  
                                           _DIO2_ISR_Lora A3EE  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 9A20  
                   __size_of_LORAWAN_SetNetworkSessionKey 0038  
                            _LORAWAN_SetNetworkSessionKey 99E8  
                                      ?_ExecuteNewChannel 00AA  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00DD  
                                    end_of_initialization 7BD2  
                                 _CreateAllSoftwareTimers 950C  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler A306  
                                   ??_RADIO_FSKPacketSent 00E7  
                                          _GenerateSubkey 5B6A  
                                   _RADIO_WatchdogTimeout 955E  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF6F  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 8982  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 5CF2  
                                          ??_SwTimerStart 0095  
                                               i2u2200_48 9EF4  
                                               i2u2202_48 9F3C  
                                               i2u2204_48 9F18  
                                     ??_ExecuteNewChannel 00AC  
                                               i2u2191_48 9F84  
                                   _UpdateCurrentDataRate A342  
                                   _UpdateChannelIdStatus 5FFE  
                                               i2u2193_48 9F60  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init A20A  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 8D7A  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 007A  
                                       GenerateSubkey@key 00A5  
                                        _LORAWAN_GetState A3A4  
                                    _HALResetPinMakeInput A3EA  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00B8  
                              LORAWAN_RxDone@bufferLength 00F0  
                        __end_of_RADIO_SetSpreadingFactor A374  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                         ??_IOCB5_DefaultInterruptHandler 0001  
                                         _SystemTimerInit A39C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 9872  
                            __end_of_RADIO_SetFSKSyncWord 9AC8  
                                      LORAWAN_Join@result 00F0  
                                      __end_of_CheckFlags 90D0  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 00BC  
                                  __end_of_EncodeShiftRow 5B6A  
                                      _DIO0_ISR_Lora_Init A20A  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                               _PORTAbits 000F80  
                                   _INT1_InterruptHandler 01E7  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                        RxDataDone@status 006A  
                                            ??_FillSubKey 0069  
                            SwTimersInterrupt@timeElapsed 008C  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 99AC  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 74A4  
                              __end_of_RADIO_RegisterRead 9E72  
                       __end_of_LORAWAN_GetMaxPayloadSize 8F9E  
                          __end_of_HALResetPinOutputValue A10E  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 9E20  
                                __end_of_ConfigureRadioTx 9466  
                                              ?_IOCB5_ISR 0001  
                                              _portNumber 01D4  
                                         _RADIO_RxTimeout 9CC2  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 4464  
                                        EnableChannels1@i 006F  
                                 __size_of_AssemblePacket 046A  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 9466  
                                          _TMR1_ReadTimer 9E9A  
                                          ??_UpdateCfList 00AC  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                               _TRISAbits 000F92  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00B5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0036  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 0384  
                                    ExecuteNewChannel@ptr 00AA  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 5CF2  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 004C  
                                           RADIO_RxDone@i 00F2  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00E5  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 00FB  
                                      __end_of_GetRx1Freq A22E  
                                   __size_of_RADIO_RxDone 00EE  
                                            ??_ComputeMic 00E0  
                            __size_of_UpdateReceiveDelays 004C  
                                   __size_of_RADIO_TxDone 0146  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 00AF  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00B5  
                               __size_of_SwTimerIsRunning 002E  
                              __end_of_ComputeSessionKeys 80F4  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00F8  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus A22E  
                                         _RADIO_WriteMode 6AE0  
                              ??_RADIO_WriteConfiguration 00AC  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 00B3  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00F3  
                               __size_of_ExecuteDutyCycle 0062  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00E2  
                                      __end_of_FillSubKey 8B96  
                                 _AssembleEncryptionBlock 6C1E  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0095  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp A32E  
                                      LORAWAN_Send@buffer 00E8  
                                          __end_of_Random 9FDC  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0012  
                                __end_of_ValidateDataRate A0D2  
                            __end_of_INTERRUPT_Initialize A3DA  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init A1E6  
                                 __end_of_RADIO_GetStatus A3C8  
                                          __end_of___lmul 8D7A  
                                      LORAWAN_Send@result 00EC  
                                        ??_EnableChannels 0073  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 9AFE  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 9DA2  
                                           __pidataCOMRAM A3CE  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0091  
                                       __size_of_TMR1_ISR 0010  
                                          _ADC_SelChannel A12C  
                                      __end_of_ComputeMic 8ECA  
                                               Random@max 00B1  
                                          __end_of_memcpy 91F6  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 94BA  
                                  __end_of_TMR1_ReadTimer 9EC0  
                                          __end_of_memset 9BD0  
                                         _SPI2_Initialize A2B2  
                        LORAWAN_SetChannelIdStatus@result 0069  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC A360  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0075  
                                   UpdateCfList@frequency 00AD  
                                            _RADIO_RxDone 7794  
                                            _RADIO_TxDone 6856  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 7B16  
                                          _ConfigureRadio 81A0  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 006B  
                                      _DIO4_ISR_Lora_Init A3FA  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer A12C  
                          __size_of_TMR_OverrideRemaining 00AA  
                                     _RADIO_RegisterWrite 9FFC  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0069  
                         __size_of_PIN_MANAGER_Initialize 006E  
                           __end_of_TMR_OverrideRemaining 82F6  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 9F98  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 00B0  
                                            AESCmac@input 00D1  
                        __end_of_LORAWAN_SetDeviceAddress A17E  
                                         ?_GenerateSubkey 00A5  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00E6  
                                   LORAWAN_Init@RxPayload 00B6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 9F74  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings A078  
                              SwTimerStart@ticksRemaining 0099  
                                  RADIO_WriteMode@newMode 006E  
                                __end_of_ValidateRxOffset A096  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation A374  
                           ExecuteNewChannel@channelIndex 00B3  
                          __end_of_SearchAvailableChannel 65B0  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 98F2  
                                 __size_of_StartReTxTimer 019C  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 00B6  
                                 __end_of_SystemTimerInit A3A4  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0034  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0046  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 0010  
                                     TMR_SwapTimer@retVal 0048  
                                   _RADIO_FSKPayloadReady 7BD8  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput A3EA  
                                                ??_Random 00B3  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00EE  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0099  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 8576  
                          __end_of_AutomaticReplyCallback 9D76  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0032  
                                    _macEndDevCmdReplyLen FF8E  
                                                ??___lmul 00A6  
                                             ??_AESEncode 006E  
                       RADIO_WriteConfiguration@tempValue 00B0  
                                   __size_of_LORAWAN_Init 0066  
                      __size_of_AckRetransmissionCallback 0144  
                                   __size_of_LORAWAN_Join 00BC  
                                                ??___wmul 0068  
                                   __size_of_LORAWAN_Send 00F8  
                                 __end_of_RADIO_RxTimeout 9CF0  
                                MacExecuteCommands@buffer 00B4  
                                      __end_of_RxDataDone 968E  
                                ??_SetReceptionNotOkState 00BF  
                                          ??_TMR_ISR_lora 0032  
                                  __end_of_ADC_SelChannel A148  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01BC  
                                             __pdataBANK3 03B4  
                                       _ValidateDataRange 93BE  
                                      __end_of_ExtractMic 8C8E  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 0090  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 0096  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 9872  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 9C34  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor A36A  
                                      _RADIO_RxFSKTimeout 9970  
                                                ?_AESCmac 00CD  
                                  __size_of_TMR1_CallBack 0024  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                   __end_of_IOCB5_DefaultInterruptHandler A402  
                  __size_of_IOCB5_DefaultInterruptHandler 0002  
                           _IOCB5_DefaultInterruptHandler A400  
                             ??_IOCB5_SetInterruptHandler 0066  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 008C  
                                            AESEncode@key 0076  
                                  TMR_GetDeltaTime@retVal 016F  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                             ??_IOCB5_ISR 0001  
                                  __end_of_ConfigureRadio 824C  
                                          _LORAWAN_RxDone 0088  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 0044  
                                          _LORAWAN_TxDone 0F38  
                              __size_of_ExecuteNewChannel 02E2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 8436  
                  __end_of_LORAWAN_EnterContinuousReceive 8A0A  
                 __size_of_LORAWAN_EnterContinuousReceive 0088  
                          _LORAWAN_EnterContinuousReceive 8982  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 0102  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 00B8  
                        __end_of_INT0_SetInterruptHandler A324  
                                      LORAWAN_RxTimeout@i 00CE  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 563E  
                           EnableChannels@channelMaskCntl 0072  
                                 __end_of_RADIO_WriteMode 6C1E  
                 __end_of_UnconfirmedTransmissionCallback 8A8E  
                __size_of_UnconfirmedTransmissionCallback 0084  
                         _UnconfirmedTransmissionCallback 8A0A  
                                 SearchAvailableChannel@i 00BE  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 0104  
                                 _RADIO_ReceiveStart$1195 00BB  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01AA  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 009D  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 9A90  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 97A6  
       __end_of_ResetParametersForUnconfirmedTransmission A196  
      __size_of_ResetParametersForUnconfirmedTransmission 0018  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission A17E  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01E9  
                                               _bandwidth FF87  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 9006  
                                            _LORAWAN_Join 7D54  
                                            _LORAWAN_Send 769C  
                                  RADIO_FSKPayloadReady@i 00F2  
                                       _ValidateFrequency 8A8E  
                                               __pnvBANK1 01E5  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 73A2  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert A3DE  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 97EC  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 8DEE  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 4940  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 0070  
                                               _macBuffer 04E0  
                                               _dioStatus 004C  
                               __end_of_ValidateDataRange 9412  
                           RADIO_FSKPayloadReady@irqFlags 00F1  
                                       _SwTimersInterrupt 6D52  
                                       ??_SwTimersExecute 00EE  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler A2FC  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 00B7  
                                 __end_of_SPI2_Initialize A2C0  
                                                ?___awdiv 0064  
                                               __ptext100 5444  
                                               __ptext101 7C96  
                                               __ptext110 0F38  
                                               __ptext102 6C1E  
                               __end_of_ValidateChannelId 9C64  
                                               __ptext111 98B2  
                                               __ptext103 72A0  
                                               __ptext200 86AC  
                                               __ptext120 A1AC  
                                               __ptext112 9CF0  
                                               __ptext104 8C12  
                                               __ptext201 A3A4  
                                               __ptext121 A3C8  
                                               __ptext113 A3C2  
                                               __ptext105 803E  
                                               __ptext210 A148  
                                               __ptext202 A252  
                                               __ptext130 9412  
                                               __ptext122 9FDC  
                                               __ptext114 8982  
                                               __ptext106 796C  
                                               __ptext211 74A4  
                                               __ptext203 A2CE  
                                               __ptext131 A34C  
                                               __ptext123 4940  
                                               __ptext115 9644  
                                               __ptext107 8866  
                                               __ptext220 A3AC  
                                               __ptext212 5E78  
                                               __ptext140 A388  
                                               __ptext132 A356  
                                               __ptext124 9DF6  
                                               __ptext116 9B68  
                                               __ptext108 906C  
                                               __ptext221 9F50  
                                               __ptext213 A10E  
                                               __ptext205 A284  
                                               __ptext141 4BA6  
                                               __ptext133 A360  
                                               __ptext125 A22E  
                                               __ptext117 A0B4  
                                               __ptext109 6704  
                                               __ptext222 A3F2  
                                               __ptext214 A294  
                                               __ptext206 9EE4  
                                               __ptext150 8E5C  
                                               __ptext142 17F6  
                                               __ptext134 81A0  
                                               __ptext126 7D54  
                                               __ptext118 A342  
                                               __ptext223 A404  
                                               __ptext215 9F08  
                                               __ptext207 A3FE  
                                               __ptext151 2C26  
                                               __ptext143 6E78  
                                               __ptext135 A36A  
                                               __ptext127 A0D2  
                                               __ptext119 A17E  
                                               __ptext224 A3B4  
                                               __ptext216 A400  
                                               __ptext208 9368  
                                               __ptext160 6F94  
                                               __ptext152 5B6A  
                                               __ptext144 8ECA  
                                               __ptext136 A374  
                                               __ptext128 8C8E  
                                               __ptext225 9F74  
                                               __ptext217 9F2C  
                                               __ptext209 98F2  
                                               __ptext161 7ECC  
                                               __ptext153 8B12  
                                               __ptext145 8F9E  
                                               __ptext137 A37E  
                                               __ptext129 6452  
                                               __ptext226 A3F6  
                                               __ptext218 A3EE  
                                               __ptext170 A2DC  
                                               __ptext162 4E08  
                                               __ptext154 99AC  
                                               __ptext146 5240  
                                               __ptext138 9A90  
                                               __ptext227 A406  
                                               __ptext219 A402  
                                               __ptext171 73A2  
                                               __ptext163 709A  
                                               __ptext155 22C2  
                                               __ptext147 9FBA  
                                               __ptext139 7F86  
                                               __ptext228 0000  
                                               __ptext180 A0F0  
                                               __ptext172 8612  
                                               __ptext164 94BA  
                                               __ptext156 59D0  
                                               __ptext148 92B4  
                                               __ptext181 A3E6  
                                               __ptext173 9FFC  
                                               __ptext165 A392  
                                               __ptext157 3B36  
                                               __ptext149 9132  
                                               __ptext190 A01C  
                                               __ptext182 A3EA  
                                               __ptext174 A2C0  
                                               __ptext166 502E  
                                               __ptext158 9006  
                                               __ptext191 6D52  
                                               __ptext183 6178  
                                               __ptext175 A240  
                                               __ptext167 9760  
                                               __ptext159 A274  
                                               __ptext192 563E  
                                               __ptext184 8D04  
                                               __ptext176 A3DE  
                                               __ptext168 6AE0  
                                               __ptext193 9E9A  
                                               __ptext185 7E10  
                                               __ptext177 A3E2  
                                               __ptext169 9E4A  
                                               __ptext194 9466  
                                               __ptext186 9E72  
                                               __ptext178 97A6  
                                               __ptext195 8436  
                                               __ptext187 8396  
                                               __ptext179 9AFE  
                                               __ptext196 84D6  
                                               __ptext188 824C  
                                               __ptext197 9B9C  
                                               __ptext189 97EC  
                                               __ptext198 9194  
                                               __ptext199 950C  
                                       _EncryptFRMPayload 5444  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00EB  
                           __size_of_UpdateJoinInProgress 001E  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 002C  
                                         ??_AESEncodeLoRa 0095  
                SelectChannelForTransmission@channelIndex 00C1  
                         __end_of_PrepareJoinRequestFrame 5444  
                                                ?___lwmod 00AC  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 0084  
                               _RADIO_SetChannelFrequency 7F86  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 0072  
                               _SetCallbackSoftwareTimers 6F94  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0F38  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 17F6  
                                      ?_EncryptFRMPayload 00A5  
                                     __end_of_readAndSend 9D4A  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 9FBA  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus A338  
                           __end_of_RADIO_SetLoRaSyncWord A39C  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0054  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00B4  
                        ExecuteRxParamSetupReq@dlSettings 00B2  
                                          _AssemblePacket 27BC  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00E6  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 5FFE  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0088  
                                    RADIO_DIO0@dioMapping 016D  
                                       _DutyCycleCallback 3E6E  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 9830  
                                                _ADC_Init A2CE  
                                                _ADC_Read 95AC  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00B3  
                                __end_of_LORAWAN_GetState A3AC  
                                 __end_ofi2_TMR_SwapTimer 9932  
                                 __size_of_EncKeySchedule 0338  
                                      AssemblePacket@mhdr 00E3  
                                      AssemblePacket@port 00DB  
                               __size_of_RADIO_ReadRandom 00BA  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 4940  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 98B2  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize A3D6  
                                           _SwTimerCreate 86AC  
                          __end_of_InitDefault868Channels 84D6  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 9EE4  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 8B12  
                               _IOCB5_SetInterruptHandler A2E8  
                                        _SwTimerIsRunning 9CF0  
                                        _ExecuteLinkCheck 9C02  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR A3B4  
                                _LORAWAN_SetDeviceAddress A164  
                                                _INT2_ISR A3AC  
                                       EncKeySchedule@key 0064  
                                          ___wmul@product 0068  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth A388  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                                        __CFG_WDTEN$NOSLP 000000  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F8  
                                     ?_RADIO_ReceiveStart 00B5  
                                        _SwTimerReadValue 98B2  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 90D0  
                                         _HALDIO5PinValue A2DC  
                                    RADIO_DIO1@dioMapping 00D0  
                               __end_of_SwTimersInterrupt 6E78  
                                __size_of_TMR1_WriteTimer 0020  
                                      AESEncode@masterKey 006C  
                     __size_of_INTERRUPT_InterruptManager 0078  
                              __end_of_DIO2_ISR_Lora_Init A1F8  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 00A7  
                                        GenerateSubkey@k2 00A9  
                                    ConfigureRadioRx@freq 0076  
                               __end_of_EncryptFRMPayload 563E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 006A  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 9006  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0067  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B4  
                                               _rxPayload 00F4  
                                    __end_of_IO_pins_init A264  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 709A  
                           EncryptFRMPayload@bufferLength 00A7  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 0102  
                                                _TMR1_ISR A284  
                                ConfigureRadioTx@dataRate 007A  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 055C  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00AC  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 95F8  
                         __size_of_SetReceptionNotOkState 0094  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2C26  
                                         ?_LORAWAN_RxDone 00EE  
                                         ?_LORAWAN_TxDone 00BF  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 006A  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init A1F8  
                               __end_of_DutyCycleCallback 4182  
                                       ___wmul@multiplier 0064  
                                        __size_of_AESCmac 045E  
                                    ??_RADIO_ReceiveStart 00B7  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 7A52  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                    RADIO_DIO2@dioMapping 0080  
                                      AESEncodeLoRa@block 0091  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 6856  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 009E  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 7B2A  
                                               copy_data1 7B4A  
                                               copy_data2 7B6A  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                     _EncKeySchedule$3853 0068  
                                _INT0_SetInterruptHandler A31A  
                             __end_of_RADIO_SetIQInverted A360  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 93BE  
                                             _RADIO_Reset 97A6  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 9E4A  
                                __size_of_ValidateTxPower 0030  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 5834  
                             __end_ofi2_SwTimersInterrupt 75A4  
                               _LORAWAN_GetMaxPayloadSize 8F36  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 00A9  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00D3  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 00AC  
                     __size_of_LORAWAN_LinkCheckConfigure 0178  
                                        ___abdiv@quotient 0069  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                                    RADIO_DIO3@dioMapping 006A  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 9B34  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer A148  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 9D1E  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0090  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0054  
                               _ticksToScheduledInterrupt 005A  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 0030  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 009C  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 00BE  
                                      _ComputeSessionKeys 803E  
                                   __size_of_SwTimerStart 00A0  
                                        __size_of___lldiv 00BC  
                                        __size_of___llmod 009A  
                                        __size_of___lwmod 0062  
                                         ?_AssemblePacket 00DB  
                                    AssemblePacket@buffer 00DC  
                                        SwTimersExecute@i 00F2  
                                      ??_ValidateDataRate 0064  
                                _TMR1_SetInterruptHandler A2F2  
                                  _IOCB4_InterruptHandler 01EB  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission A1C2  
        __size_of_ResetParametersForConfirmedTransmission 0016  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission A1AC  
                                   _TMR1_InterruptHandler 01EF  
                                        ??_GenerateSubkey 00AB  
                                        _CountfOptsLength 72A0  
                                              _HALSPISend A2C0  
                                     ?_ComputeSessionKeys 00A5  
                                          _rxWindowOffset FF77  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 37DA  
                                 __size_of_SysConfigSleep 0090  
                                    ??_RADIO_RegisterRead 0066  
                                    RADIO_DIO4@dioMapping 006B  
                        __end_of_RADIO_UnhandledInterrupt 9B68  
                                           _UpdateTxPower A32E  
                                    RADIO_Transmit@buffer 00B5  
                         __end_of_RADIO_FHSSChangeChannel 96D4  
                                         _allocatedTimers 00FA  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus A240  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init A1D4  
                                                __ptext10 A2A4  
                                                __ptext11 9F98  
                                                __ptext20 A1F8  
                                                __ptext12 A1C2  
                                                __ptext21 A20A  
                                                __ptext13 A2F2  
                                              _T1GCONbits 000FCC  
                                                __ptext30 99E8  
                                                __ptext22 A3D6  
                                                __ptext14 A39C  
                                                __ptext31 A164  
                                                __ptext23 9830  
                                                __ptext15 A1D4  
                                                __ptext40 7A52  
                                                __ptext32 9A20  
                                                __ptext24 A306  
                                                __ptext16 A3FA  
                                                __ptext41 7882  
                                                __ptext33 9872  
                                                __ptext25 A310  
                                                __ptext17 A3FC  
                                                __ptext50 9312  
                                                __ptext42 955E  
                                                __ptext34 75A4  
                                                __ptext26 A31A  
                                                __ptext18 A1E6  
                                                __ptext51 9CC2  
                                                __ptext43 9970  
                                                __ptext35 3E6E  
                                                __ptext27 A324  
                                                __ptext19 A2FC  
                                                __ptext60 0088  
                                                __ptext52 968E  
                                                __ptext44 8A0A  
                                                __ptext36 65B0  
                                                __ptext28 A2B2  
                                                __ptext61 8B96  
                                                __ptext53 82F6  
                                                __ptext45 A21C  
                                                __ptext37 9D4A  
                                                __ptext29 9DA2  
                                                __ptext70 95F8  
                                                __ptext62 A05A  
                                                __ptext54 9B34  
                                                __ptext46 9C94  
                                                __ptext38 699C  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 9AC8  
                                                __ptext63 46DA  
                                                __ptext55 6856  
                                                __ptext47 9932  
                                                __ptext39 5CF2  
                                                __ptext80 62F0  
                                                __ptext72 4464  
                                                __ptext64 5834  
                                                __ptext56 7794  
                                                __ptext48 9EC0  
                                                __ptext81 91F6  
                                                __ptext73 A078  
                                                __ptext65 8742  
                                                __ptext57 8576  
                                                __ptext49 9256  
                                                __ptext90 88F6  
                                                __ptext82 9C34  
                                                __ptext74 A196  
                                                __ptext66 9A58  
                                                __ptext58 7BD8  
                                                __ptext91 5FFE  
                                                __ptext83 9C02  
                                                __ptext75 4182  
                                                __ptext67 A3DA  
                                                __ptext59 3084  
                                                __ptext92 90D0  
                                                __ptext84 37DA  
                                                __ptext76 8A8E  
                                                __ptext68 3456  
                                                __ptext93 A338  
                                                __ptext85 9C64  
                                                __ptext77 93BE  
                                                __ptext69 9D76  
                                                __ptext94 769C  
                                                __ptext86 9DCC  
                                                __ptext78 96D4  
                                                __ptext95 8F36  
                                                __ptext87 8D7A  
                                                __ptext79 971A  
                                                __ptext96 27BC  
                                                __ptext88 A32E  
                                                __ptext97 1D66  
                                                __ptext89 A096  
                                                __ptext98 A3BC  
                                                __ptext99 719E  
                                 ExecuteRxTimingSetup@ptr 006B  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 006A  
                                   __end_of_LORAWAN_Reset 502E  
                                  __end_of_StartReTxTimer 59D0  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 0162  
                                  _SetReceptionNotOkState 8742  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01BC  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 011C  
                                 __end_of_HALDIO5PinValue A2E8  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0084  
                        __size_of_PrepareJoinRequestFrame 0204  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 0266  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 00AC  
                                           __size_of_rand 005E  
                                       _RADIO_ReceiveStop 9FDC  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 9F98  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer A164  
               IncludeMacCommandsResponse@bIncludeInFopts 0068  
                                    ??_ComputeSessionKeys 00A7  
                                           _timerOverflow 004D  
                                            _SwTimerStart 8396  
                              __size_of_SwTimersInterrupt 0126  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                    RADIO_DIO5@dioMapping 006A  
                                   RADIO_TxDone@timeOnAir 00EB  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 0012  
                              __size_of_EncryptFRMPayload 01FA  
                                         GenerateSubkey@i 00CC  
                                         GenerateSubkey@l 00BC  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 5834  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00F1  
                             __end_of_ValidateChannelMask 8DEE  
                                           UpdateCfList@i 00B2  
                      __end_of_INTERRUPT_InterruptManager 0080  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData A3C8  
                                       ??_TMR1_WriteTimer 0066  
                                              _RADIO_DIO0 82F6  
                                              _RADIO_DIO1 9312  
                                              _RADIO_DIO2 9256  
                                              _RADIO_DIO3 9EC0  
                                              _RADIO_DIO4 9932  
                                              _RADIO_DIO5 9C94  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler A408  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler A406  
                       __size_of_RADIO_WriteConfiguration 0570  
                                  __end_of_rxWindowOffset FF7F  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 0314  
                                 EncryptFRMPayload@buffer 00A5  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00AA  
                                      __end_of_modulation FF77  
                                              _RADIO_Init 502E  
                         ExecuteRxParamSetupReq@frequency 00AE  
                                __size_of_UpdateFrequency 0046  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 004B  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert A3E2  
                                __size_of_UpdateDutyCycle 0046  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 3B36  
                      __size_of_SetCallbackSoftwareTimers 0106  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 46DA  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 7ECC  
                                       _RADIO_TxDone$1207 00EF  
                                      _EXT_INT_Initialize 9830  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 824C  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B5  
                               __end_of_RADIO_ReceiveStop 9FFC  
                                         _SwTimersExecute 75A4  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 00AC  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus A342  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0012  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0068  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 00AC  
                         __size_of_ExecuteRxParamSetupReq 0276  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2088 00CD  
                                     _LORAWAN_TxDone$2089 00D1  
                                     _LORAWAN_TxDone$6261 00DA  
                      __end_of_LORAWAN_LinkCheckConfigure 62F0  
                               __end_of_RADIO_ReleaseData A3CE  
                              _LORAWAN_LinkCheckConfigure 6178  
                                      __end_of_txPower433 FFA2  
                                __size_of_EnableChannels1 008C  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput A3E6  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 0024  
                               RADIO_WriteConfiguration@i 00AF  
                               ExecuteRxTimingSetup@delay 006D  
                                        AESEncodeLoRa@key 0093  
                               __size_of_SetJoinFailState 0038  
                        LORAWAN_LinkCheckConfigure@period 00AA  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 9760  
             __end_of_UpdateRetransmissionAckTimeoutState 8C12  
            __size_of_UpdateRetransmissionAckTimeoutState 007C  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009E  
                     _UpdateRetransmissionAckTimeoutState 8B96  
                                       RADIO_ReadRandom@i 0075  
                            SearchAvailableChannel@result 00BB  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 0024  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$3867 0086  
                                          _AESEncode$3868 0088  
                                          _AESEncode$3869 008A  
                                   __end_of_DIO0_ISR_Lora A3FA  
                                __end_of_SwTimerIsRunning 9D1E  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 9C34  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule 3E6E  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora A3F6  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 98F2  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 9132  
                                         ___lwmod@divisor 00AE  
                  __end_of_UpdateReceiveWindow2Parameters A1AC  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters A196  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 00B0  
                         _LORAWAN_LinkCheckConfigure$3273 00B0  
                        __end_of_INT1_SetInterruptHandler A31A  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00F1  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora A3F2  
                                    _SystemBlockingWaitMs 9AFE  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 00A5  
                                 __size_of_EnableChannels 001E  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress A0F0  
                            __end_of_ExecuteRxTimingSetup 9DA2  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init A252  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 8F36  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006C  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 8ECA  
                __end_of_LORAWAN_SetApplicationSessionKey 9A58  
               __size_of_LORAWAN_SetApplicationSessionKey 0038  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 9A20  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00F1  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 9B34  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 8E5C  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite A01C  
                                 __size_of_ExecuteLinkAdr 035C  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 5E78  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                  _IOCB5_InterruptHandler 01ED  
                                         _PIN_MANAGER_IOC A294  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00F4  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 9BD0  
                        RADIO_WriteConfiguration@regValue 00B4  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0174  
                                           ExtractMic@mic 0076  
                                       _LORAWAN_RxTimeout 3084  
                             __end_of_RADIO_SetModulation A37E  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 0166  
                                     ?i2_TMR_GetDeltaTime 0009  
