

Microchip Technology PIC18 PRO Macro Assembler V1.38 build -256452561 
                                                                                               Tue Sep 27 23:40:16 2022

Microchip Technology Omniscient Code Generator v1.38 (PRO mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	pm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    17                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    18                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    20                           	psect	cstackBANK3,global,class=BANK3,space=1,delta=1
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	text16,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	text91,global,reloc=2,class=CODE,delta=1
   116                           	psect	text92,global,reloc=2,class=CODE,delta=1
   117                           	psect	text93,global,reloc=2,class=CODE,delta=1
   118                           	psect	text94,global,reloc=2,class=CODE,delta=1
   119                           	psect	text95,global,reloc=2,class=CODE,delta=1
   120                           	psect	text96,global,reloc=2,class=CODE,delta=1
   121                           	psect	text97,global,reloc=2,class=CODE,delta=1
   122                           	psect	text98,global,reloc=2,class=CODE,delta=1
   123                           	psect	text99,global,reloc=2,class=CODE,delta=1
   124                           	psect	text100,global,reloc=2,class=CODE,delta=1
   125                           	psect	text101,global,reloc=2,class=CODE,delta=1
   126                           	psect	text102,global,reloc=2,class=CODE,delta=1
   127                           	psect	text103,global,reloc=2,class=CODE,delta=1
   128                           	psect	text104,global,reloc=2,class=CODE,delta=1
   129                           	psect	text105,global,reloc=2,class=CODE,delta=1
   130                           	psect	text106,global,reloc=2,class=CODE,delta=1
   131                           	psect	text107,global,reloc=2,class=CODE,delta=1
   132                           	psect	text108,global,reloc=2,class=CODE,delta=1
   133                           	psect	text109,global,reloc=2,class=CODE,delta=1
   134                           	psect	text110,global,reloc=2,class=CODE,delta=1
   135                           	psect	text111,global,reloc=2,class=CODE,delta=1
   136                           	psect	text112,global,reloc=2,class=CODE,delta=1
   137                           	psect	text113,global,reloc=2,class=CODE,delta=1
   138                           	psect	text114,global,reloc=2,class=CODE,delta=1
   139                           	psect	text115,global,reloc=2,class=CODE,delta=1
   140                           	psect	text116,global,reloc=2,class=CODE,delta=1
   141                           	psect	text117,global,reloc=2,class=CODE,delta=1
   142                           	psect	text118,global,reloc=2,class=CODE,delta=1
   143                           	psect	text119,global,reloc=2,class=CODE,delta=1
   144                           	psect	text120,global,reloc=2,class=CODE,delta=1
   145                           	psect	text121,global,reloc=2,class=CODE,delta=1
   146                           	psect	text122,global,reloc=2,class=CODE,delta=1
   147                           	psect	text123,global,reloc=2,class=CODE,delta=1
   148                           	psect	text124,global,reloc=2,class=CODE,delta=1
   149                           	psect	text125,global,reloc=2,class=CODE,delta=1
   150                           	psect	text126,global,reloc=2,class=CODE,delta=1
   151                           	psect	text127,global,reloc=2,class=CODE,delta=1
   152                           	psect	text128,global,reloc=2,class=CODE,delta=1
   153                           	psect	text129,global,reloc=2,class=CODE,delta=1
   154                           	psect	text130,global,reloc=2,class=CODE,delta=1
   155                           	psect	text131,global,reloc=2,class=CODE,delta=1
   156                           	psect	text132,global,reloc=2,class=CODE,delta=1
   157                           	psect	text133,global,reloc=2,class=CODE,delta=1
   158                           	psect	text134,global,reloc=2,class=CODE,delta=1
   159                           	psect	text135,global,reloc=2,class=CODE,delta=1
   160                           	psect	text136,global,reloc=2,class=CODE,delta=1
   161                           	psect	text137,global,reloc=2,class=CODE,delta=1
   162                           	psect	text138,global,reloc=2,class=CODE,delta=1
   163                           	psect	text139,global,reloc=2,class=CODE,delta=1
   164                           	psect	text140,global,reloc=2,class=CODE,delta=1
   165                           	psect	text141,global,reloc=2,class=CODE,delta=1
   166                           	psect	text142,global,reloc=2,class=CODE,delta=1
   167                           	psect	text143,global,reloc=2,class=CODE,delta=1
   168                           	psect	text144,global,reloc=2,class=CODE,delta=1
   169                           	psect	text145,global,reloc=2,class=CODE,delta=1
   170                           	psect	text146,global,reloc=2,class=CODE,delta=1
   171                           	psect	text147,global,reloc=2,class=CODE,delta=1
   172                           	psect	text148,global,reloc=2,class=CODE,delta=1
   173                           	psect	text149,global,reloc=2,class=CODE,delta=1
   174                           	psect	text150,global,reloc=2,class=CODE,delta=1
   175                           	psect	text151,global,reloc=2,class=CODE,delta=1
   176                           	psect	text152,global,reloc=2,class=CODE,delta=1
   177                           	psect	text153,global,reloc=2,class=CODE,delta=1
   178                           	psect	text154,global,reloc=2,class=CODE,delta=1
   179                           	psect	text155,global,reloc=2,class=CODE,delta=1
   180                           	psect	text156,global,reloc=2,class=CODE,delta=1
   181                           	psect	text157,global,reloc=2,class=CODE,delta=1
   182                           	psect	text158,global,reloc=2,class=CODE,delta=1
   183                           	psect	text159,global,reloc=2,class=CODE,delta=1
   184                           	psect	text160,global,reloc=2,class=CODE,delta=1
   185                           	psect	text161,global,reloc=2,class=CODE,delta=1
   186                           	psect	text162,global,reloc=2,class=CODE,delta=1
   187                           	psect	text163,global,reloc=2,class=CODE,delta=1
   188                           	psect	text164,global,reloc=2,class=CODE,delta=1
   189                           	psect	text165,global,reloc=2,class=CODE,delta=1
   190                           	psect	text166,global,reloc=2,class=CODE,delta=1
   191                           	psect	text167,global,reloc=2,class=CODE,delta=1
   192                           	psect	text168,global,reloc=2,class=CODE,delta=1
   193                           	psect	text169,global,reloc=2,class=CODE,delta=1
   194                           	psect	text170,global,reloc=2,class=CODE,delta=1
   195                           	psect	text171,global,reloc=2,class=CODE,delta=1
   196                           	psect	text172,global,reloc=2,class=CODE,delta=1
   197                           	psect	text173,global,reloc=2,class=CODE,delta=1
   198                           	psect	text174,global,reloc=2,class=CODE,delta=1
   199                           	psect	text175,global,reloc=2,class=CODE,delta=1
   200                           	psect	text176,global,reloc=2,class=CODE,delta=1
   201                           	psect	text177,global,reloc=2,class=CODE,delta=1
   202                           	psect	text178,global,reloc=2,class=CODE,delta=1
   203                           	psect	text179,global,reloc=2,class=CODE,delta=1
   204                           	psect	text180,global,reloc=2,class=CODE,delta=1
   205                           	psect	text181,global,reloc=2,class=CODE,delta=1
   206                           	psect	text182,global,reloc=2,class=CODE,delta=1
   207                           	psect	text183,global,reloc=2,class=CODE,delta=1
   208                           	psect	text184,global,reloc=2,class=CODE,delta=1
   209                           	psect	text185,global,reloc=2,class=CODE,delta=1
   210                           	psect	text186,global,reloc=2,class=CODE,delta=1
   211                           	psect	text187,global,reloc=2,class=CODE,delta=1
   212                           	psect	text188,global,reloc=2,class=CODE,delta=1
   213                           	psect	text189,global,reloc=2,class=CODE,delta=1
   214                           	psect	text190,global,reloc=2,class=CODE,delta=1
   215                           	psect	text191,global,reloc=2,class=CODE,delta=1
   216                           	psect	text192,global,reloc=2,class=CODE,delta=1
   217                           	psect	text193,global,reloc=2,class=CODE,delta=1
   218                           	psect	text194,global,reloc=2,class=CODE,delta=1
   219                           	psect	text195,global,reloc=2,class=CODE,delta=1
   220                           	psect	text196,global,reloc=2,class=CODE,delta=1
   221                           	psect	text197,global,reloc=2,class=CODE,delta=1
   222                           	psect	text198,global,reloc=2,class=CODE,delta=1
   223                           	psect	text199,global,reloc=2,class=CODE,delta=1
   224                           	psect	text200,global,reloc=2,class=CODE,delta=1
   225                           	psect	text201,global,reloc=2,class=CODE,delta=1
   226                           	psect	text202,global,reloc=2,class=CODE,delta=1
   227                           	psect	text203,global,reloc=2,class=CODE,delta=1
   228                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   229                           	psect	text205,global,reloc=2,class=CODE,delta=1
   230                           	psect	text206,global,reloc=2,class=CODE,delta=1
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	text208,global,reloc=2,class=CODE,delta=1
   233                           	psect	text209,global,reloc=2,class=CODE,delta=1
   234                           	psect	text210,global,reloc=2,class=CODE,delta=1
   235                           	psect	text211,global,reloc=2,class=CODE,delta=1
   236                           	psect	text212,global,reloc=2,class=CODE,delta=1
   237                           	psect	text213,global,reloc=2,class=CODE,delta=1
   238                           	psect	text214,global,reloc=2,class=CODE,delta=1
   239                           	psect	text215,global,reloc=2,class=CODE,delta=1
   240                           	psect	text216,global,reloc=2,class=CODE,delta=1
   241                           	psect	text217,global,reloc=2,class=CODE,delta=1
   242                           	psect	text218,global,reloc=2,class=CODE,delta=1
   243                           	psect	text219,global,reloc=2,class=CODE,delta=1
   244                           	psect	text220,global,reloc=2,class=CODE,delta=1
   245                           	psect	text221,global,reloc=2,class=CODE,delta=1
   246                           	psect	text222,global,reloc=2,class=CODE,delta=1
   247                           	psect	text223,global,reloc=2,class=CODE,delta=1
   248                           	psect	text224,global,reloc=2,class=CODE,delta=1
   249                           	psect	text225,global,reloc=2,class=CODE,delta=1
   250                           	psect	text226,global,reloc=2,class=CODE,delta=1
   251                           	psect	text227,global,reloc=2,class=CODE,delta=1
   252                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   253                           	psect	text228,global,reloc=2,class=CODE,delta=1
   254                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   255                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   256  0000                     
   257 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   258  0000                     
   259 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   260  0000                     
   261 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   262 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   263 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   264 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   265 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   266 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   267 ;;_LORAWAN_LinkCheckCallback$3296	offset	0
   268 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   269 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   270 ;;_DutyCycleCallback$2272	offset	0
   271 ;;DutyCycleCallback@minim	offset	4
   272 ;;DutyCycleCallback@i	offset	8
   273 ;;DutyCycleCallback@found	offset	9
   274 ;;DutyCycleCallback@param	offset=-1 (param)
   275 ;;AutomaticReplyCallback@param	offset=-1 (param)
   276 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   277 ;;AckRetransmissionCallback@param	offset=-1 (param)
   278 ;;_param	offset=-1 (param)
   279 ;;_UpdateJoinSuccessState$3313	offset	0
   280 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   281                           
   282                           	psect	idataCOMRAM
   283  007A3C                     __pidataCOMRAM:
   284                           	opt stack 0
   285                           
   286                           ;initializer for _randx
   287  007A3C  0001               	dw	1
   288  007A3E  0000               	dw	0
   289                           
   290                           ;initializer for _ticksToScheduledInterrupt
   291  007A40  FFFF               	dw	65535
   292  007A42  FFFF               	dw	65535
   293                           
   294                           	psect	idataBANK1
   295  0071E8                     __pidataBANK1:
   296                           	opt stack 0
   297                           
   298                           ;initializer for GenerateSubkey@F7870
   299  0071E8  00                 	db	0
   300  0071E9  00                 	db	0
   301  0071EA  00                 	db	0
   302  0071EB  00                 	db	0
   303  0071EC  00                 	db	0
   304  0071ED  00                 	db	0
   305  0071EE  00                 	db	0
   306  0071EF  00                 	db	0
   307  0071F0  00                 	db	0
   308  0071F1  00                 	db	0
   309  0071F2  00                 	db	0
   310  0071F3  00                 	db	0
   311  0071F4  00                 	db	0
   312  0071F5  00                 	db	0
   313  0071F6  00                 	db	0
   314  0071F7  87                 	db	135
   315                           
   316                           ;initializer for _count
   317  0071F8  0001               	dw	1
   318                           
   319                           ;initializer for _appSKey
   320  0071FA  DD                 	db	221
   321  0071FB  32                 	db	50
   322  0071FC  54                 	db	84
   323  0071FD  F0                 	db	240
   324  0071FE  8D                 	db	141
   325  0071FF  55                 	db	85
   326  007200  D6                 	db	214
   327  007201  52                 	db	82
   328  007202  E7                 	db	231
   329  007203  73                 	db	115
   330  007204  0B                 	db	11
   331  007205  BC                 	db	188
   332  007206  26                 	db	38
   333  007207  3E                 	db	62
   334  007208  0A                 	db	10
   335  007209  DA                 	db	218
   336                           
   337                           ;initializer for _nwkSKey
   338  00720A  75                 	db	117
   339  00720B  E0                 	db	224
   340  00720C  66                 	db	102
   341  00720D  1A                 	db	26
   342  00720E  A0                 	db	160
   343  00720F  BC                 	db	188
   344  007210  21                 	db	33
   345  007211  E4                 	db	228
   346  007212  4B                 	db	75
   347  007213  57                 	db	87
   348  007214  21                 	db	33
   349  007215  B0                 	db	176
   350  007216  D6                 	db	214
   351  007217  30                 	db	48
   352  007218  F7                 	db	247
   353  007219  B2                 	db	178
   354                           
   355                           	psect	mediumconst
   356  00FD24                     __pmediumconst:
   357                           	opt stack 0
   358  00FD24  00                 	db	0
   359  00FD25                     _STable:
   360                           	opt stack 0
   361  00FD25  63                 	db	99
   362  00FD26  7C                 	db	124
   363  00FD27  77                 	db	119
   364  00FD28  7B                 	db	123
   365  00FD29  F2                 	db	242
   366  00FD2A  6B                 	db	107
   367  00FD2B  6F                 	db	111
   368  00FD2C  C5                 	db	197
   369  00FD2D  30                 	db	48
   370  00FD2E  01                 	db	1
   371  00FD2F  67                 	db	103
   372  00FD30  2B                 	db	43
   373  00FD31  FE                 	db	254
   374  00FD32  D7                 	db	215
   375  00FD33  AB                 	db	171
   376  00FD34  76                 	db	118
   377  00FD35  CA                 	db	202
   378  00FD36  82                 	db	130
   379  00FD37  C9                 	db	201
   380  00FD38  7D                 	db	125
   381  00FD39  FA                 	db	250
   382  00FD3A  59                 	db	89
   383  00FD3B  47                 	db	71
   384  00FD3C  F0                 	db	240
   385  00FD3D  AD                 	db	173
   386  00FD3E  D4                 	db	212
   387  00FD3F  A2                 	db	162
   388  00FD40  AF                 	db	175
   389  00FD41  9C                 	db	156
   390  00FD42  A4                 	db	164
   391  00FD43  72                 	db	114
   392  00FD44  C0                 	db	192
   393  00FD45  B7                 	db	183
   394  00FD46  FD                 	db	253
   395  00FD47  93                 	db	147
   396  00FD48  26                 	db	38
   397  00FD49  36                 	db	54
   398  00FD4A  3F                 	db	63
   399  00FD4B  F7                 	db	247
   400  00FD4C  CC                 	db	204
   401  00FD4D  34                 	db	52
   402  00FD4E  A5                 	db	165
   403  00FD4F  E5                 	db	229
   404  00FD50  F1                 	db	241
   405  00FD51  71                 	db	113
   406  00FD52  D8                 	db	216
   407  00FD53  31                 	db	49
   408  00FD54  15                 	db	21
   409  00FD55  04                 	db	4
   410  00FD56  C7                 	db	199
   411  00FD57  23                 	db	35
   412  00FD58  C3                 	db	195
   413  00FD59  18                 	db	24
   414  00FD5A  96                 	db	150
   415  00FD5B  05                 	db	5
   416  00FD5C  9A                 	db	154
   417  00FD5D  07                 	db	7
   418  00FD5E  12                 	db	18
   419  00FD5F  80                 	db	128
   420  00FD60  E2                 	db	226
   421  00FD61  EB                 	db	235
   422  00FD62  27                 	db	39
   423  00FD63  B2                 	db	178
   424  00FD64  75                 	db	117
   425  00FD65  09                 	db	9
   426  00FD66  83                 	db	131
   427  00FD67  2C                 	db	44
   428  00FD68  1A                 	db	26
   429  00FD69  1B                 	db	27
   430  00FD6A  6E                 	db	110
   431  00FD6B  5A                 	db	90
   432  00FD6C  A0                 	db	160
   433  00FD6D  52                 	db	82
   434  00FD6E  3B                 	db	59
   435  00FD6F  D6                 	db	214
   436  00FD70  B3                 	db	179
   437  00FD71  29                 	db	41
   438  00FD72  E3                 	db	227
   439  00FD73  2F                 	db	47
   440  00FD74  84                 	db	132
   441  00FD75  53                 	db	83
   442  00FD76  D1                 	db	209
   443  00FD77  00                 	db	0
   444  00FD78  ED                 	db	237
   445  00FD79  20                 	db	32
   446  00FD7A  FC                 	db	252
   447  00FD7B  B1                 	db	177
   448  00FD7C  5B                 	db	91
   449  00FD7D  6A                 	db	106
   450  00FD7E  CB                 	db	203
   451  00FD7F  BE                 	db	190
   452  00FD80  39                 	db	57
   453  00FD81  4A                 	db	74
   454  00FD82  4C                 	db	76
   455  00FD83  58                 	db	88
   456  00FD84  CF                 	db	207
   457  00FD85  D0                 	db	208
   458  00FD86  EF                 	db	239
   459  00FD87  AA                 	db	170
   460  00FD88  FB                 	db	251
   461  00FD89  43                 	db	67
   462  00FD8A  4D                 	db	77
   463  00FD8B  33                 	db	51
   464  00FD8C  85                 	db	133
   465  00FD8D  45                 	db	69
   466  00FD8E  F9                 	db	249
   467  00FD8F  02                 	db	2
   468  00FD90  7F                 	db	127
   469  00FD91  50                 	db	80
   470  00FD92  3C                 	db	60
   471  00FD93  9F                 	db	159
   472  00FD94  A8                 	db	168
   473  00FD95  51                 	db	81
   474  00FD96  A3                 	db	163
   475  00FD97  40                 	db	64
   476  00FD98  8F                 	db	143
   477  00FD99  92                 	db	146
   478  00FD9A  9D                 	db	157
   479  00FD9B  38                 	db	56
   480  00FD9C  F5                 	db	245
   481  00FD9D  BC                 	db	188
   482  00FD9E  B6                 	db	182
   483  00FD9F  DA                 	db	218
   484  00FDA0  21                 	db	33
   485  00FDA1  10                 	db	16
   486  00FDA2  FF                 	db	255
   487  00FDA3  F3                 	db	243
   488  00FDA4  D2                 	db	210
   489  00FDA5  CD                 	db	205
   490  00FDA6  0C                 	db	12
   491  00FDA7  13                 	db	19
   492  00FDA8  EC                 	db	236
   493  00FDA9  5F                 	db	95
   494  00FDAA  97                 	db	151
   495  00FDAB  44                 	db	68
   496  00FDAC  17                 	db	23
   497  00FDAD  C4                 	db	196
   498  00FDAE  A7                 	db	167
   499  00FDAF  7E                 	db	126
   500  00FDB0  3D                 	db	61
   501  00FDB1  64                 	db	100
   502  00FDB2  5D                 	db	93
   503  00FDB3  19                 	db	25
   504  00FDB4  73                 	db	115
   505  00FDB5  60                 	db	96
   506  00FDB6  81                 	db	129
   507  00FDB7  4F                 	db	79
   508  00FDB8  DC                 	db	220
   509  00FDB9  22                 	db	34
   510  00FDBA  2A                 	db	42
   511  00FDBB  90                 	db	144
   512  00FDBC  88                 	db	136
   513  00FDBD  46                 	db	70
   514  00FDBE  EE                 	db	238
   515  00FDBF  B8                 	db	184
   516  00FDC0  14                 	db	20
   517  00FDC1  DE                 	db	222
   518  00FDC2  5E                 	db	94
   519  00FDC3  0B                 	db	11
   520  00FDC4  DB                 	db	219
   521  00FDC5  E0                 	db	224
   522  00FDC6  32                 	db	50
   523  00FDC7  3A                 	db	58
   524  00FDC8  0A                 	db	10
   525  00FDC9  49                 	db	73
   526  00FDCA  06                 	db	6
   527  00FDCB  24                 	db	36
   528  00FDCC  5C                 	db	92
   529  00FDCD  C2                 	db	194
   530  00FDCE  D3                 	db	211
   531  00FDCF  AC                 	db	172
   532  00FDD0  62                 	db	98
   533  00FDD1  91                 	db	145
   534  00FDD2  95                 	db	149
   535  00FDD3  E4                 	db	228
   536  00FDD4  79                 	db	121
   537  00FDD5  E7                 	db	231
   538  00FDD6  C8                 	db	200
   539  00FDD7  37                 	db	55
   540  00FDD8  6D                 	db	109
   541  00FDD9  8D                 	db	141
   542  00FDDA  D5                 	db	213
   543  00FDDB  4E                 	db	78
   544  00FDDC  A9                 	db	169
   545  00FDDD  6C                 	db	108
   546  00FDDE  56                 	db	86
   547  00FDDF  F4                 	db	244
   548  00FDE0  EA                 	db	234
   549  00FDE1  65                 	db	101
   550  00FDE2  7A                 	db	122
   551  00FDE3  AE                 	db	174
   552  00FDE4  08                 	db	8
   553  00FDE5  BA                 	db	186
   554  00FDE6  78                 	db	120
   555  00FDE7  25                 	db	37
   556  00FDE8  2E                 	db	46
   557  00FDE9  1C                 	db	28
   558  00FDEA  A6                 	db	166
   559  00FDEB  B4                 	db	180
   560  00FDEC  C6                 	db	198
   561  00FDED  E8                 	db	232
   562  00FDEE  DD                 	db	221
   563  00FDEF  74                 	db	116
   564  00FDF0  1F                 	db	31
   565  00FDF1  4B                 	db	75
   566  00FDF2  BD                 	db	189
   567  00FDF3  8B                 	db	139
   568  00FDF4  8A                 	db	138
   569  00FDF5  70                 	db	112
   570  00FDF6  3E                 	db	62
   571  00FDF7  B5                 	db	181
   572  00FDF8  66                 	db	102
   573  00FDF9  48                 	db	72
   574  00FDFA  03                 	db	3
   575  00FDFB  F6                 	db	246
   576  00FDFC  0E                 	db	14
   577  00FDFD  61                 	db	97
   578  00FDFE  35                 	db	53
   579  00FDFF  57                 	db	87
   580  00FE00  B9                 	db	185
   581  00FE01  86                 	db	134
   582  00FE02  C1                 	db	193
   583  00FE03  1D                 	db	29
   584  00FE04  9E                 	db	158
   585  00FE05  E1                 	db	225
   586  00FE06  F8                 	db	248
   587  00FE07  98                 	db	152
   588  00FE08  11                 	db	17
   589  00FE09  69                 	db	105
   590  00FE0A  D9                 	db	217
   591  00FE0B  8E                 	db	142
   592  00FE0C  94                 	db	148
   593  00FE0D  9B                 	db	155
   594  00FE0E  1E                 	db	30
   595  00FE0F  87                 	db	135
   596  00FE10  E9                 	db	233
   597  00FE11  CE                 	db	206
   598  00FE12  55                 	db	85
   599  00FE13  28                 	db	40
   600  00FE14  DF                 	db	223
   601  00FE15  8C                 	db	140
   602  00FE16  A1                 	db	161
   603  00FE17  89                 	db	137
   604  00FE18  0D                 	db	13
   605  00FE19  BF                 	db	191
   606  00FE1A  E6                 	db	230
   607  00FE1B  42                 	db	66
   608  00FE1C  68                 	db	104
   609  00FE1D  41                 	db	65
   610  00FE1E  99                 	db	153
   611  00FE1F  2D                 	db	45
   612  00FE20  0F                 	db	15
   613  00FE21  B0                 	db	176
   614  00FE22  54                 	db	84
   615  00FE23  BB                 	db	187
   616  00FE24  16                 	db	22
   617  00FE25                     __end_of_STable:
   618                           	opt stack 0
   619  00FE25                     _dpowers:
   620                           	opt stack 0
   621  00FE25  0001               	dw	1
   622  00FE27  000A               	dw	10
   623  00FE29  0064               	dw	100
   624  00FE2B  03E8               	dw	1000
   625  00FE2D  2710               	dw	10000
   626  00FE2F                     __end_of_dpowers:
   627                           	opt stack 0
   628  00FE2F                     _maxPayloadSize:
   629                           	opt stack 0
   630  00FE2F  33                 	db	51
   631  00FE30  33                 	db	51
   632  00FE31  33                 	db	51
   633  00FE32  73                 	db	115
   634  00FE33  F2                 	db	242
   635  00FE34  F2                 	db	242
   636  00FE35  F2                 	db	242
   637  00FE36  38                 	db	56
   638  00FE37                     __end_of_maxPayloadSize:
   639                           	opt stack 0
   640  00FE37                     _modulation:
   641                           	opt stack 0
   642  00FE37  01                 	db	1
   643  00FE38  01                 	db	1
   644  00FE39  01                 	db	1
   645  00FE3A  01                 	db	1
   646  00FE3B  01                 	db	1
   647  00FE3C  01                 	db	1
   648  00FE3D  01                 	db	1
   649  00FE3E  00                 	db	0
   650  00FE3F                     __end_of_modulation:
   651                           	opt stack 0
   652  00FE3F                     _rxWindowOffset:
   653                           	opt stack 0
   654  00FE3F  DF                 	db	223
   655  00FE40  CE                 	db	206
   656  00FE41  C6                 	db	198
   657  00FE42  C2                 	db	194
   658  00FE43  BE                 	db	190
   659  00FE44  BC                 	db	188
   660  00FE45  F1                 	db	241
   661  00FE46  FE                 	db	254
   662  00FE47                     __end_of_rxWindowOffset:
   663                           	opt stack 0
   664  00FE47                     _rxWindowSize:
   665                           	opt stack 0
   666  00FE47  08                 	db	8
   667  00FE48  0A                 	db	10
   668  00FE49  0E                 	db	14
   669  00FE4A  1A                 	db	26
   670  00FE4B  31                 	db	49
   671  00FE4C  58                 	db	88
   672  00FE4D  3C                 	db	60
   673  00FE4E  08                 	db	8
   674  00FE4F                     __end_of_rxWindowSize:
   675                           	opt stack 0
   676  00FE4F                     _bandwidth:
   677                           	opt stack 0
   678  00FE4F  07                 	db	7
   679  00FE50  07                 	db	7
   680  00FE51  07                 	db	7
   681  00FE52  07                 	db	7
   682  00FE53  07                 	db	7
   683  00FE54  07                 	db	7
   684  00FE55  08                 	db	8
   685  00FE56                     __end_of_bandwidth:
   686                           	opt stack 0
   687  00FE56                     _macEndDevCmdReplyLen:
   688                           	opt stack 0
   689  00FE56  01                 	db	1
   690  00FE57  02                 	db	2
   691  00FE58  01                 	db	1
   692  00FE59  02                 	db	2
   693  00FE5A  03                 	db	3
   694  00FE5B  02                 	db	2
   695  00FE5C  01                 	db	1
   696  00FE5D                     __end_of_macEndDevCmdReplyLen:
   697                           	opt stack 0
   698  00FE5D                     _spreadingFactor:
   699                           	opt stack 0
   700  00FE5D  0C                 	db	12
   701  00FE5E  0B                 	db	11
   702  00FE5F  0A                 	db	10
   703  00FE60  09                 	db	9
   704  00FE61  08                 	db	8
   705  00FE62  07                 	db	7
   706  00FE63  07                 	db	7
   707  00FE64                     __end_of_spreadingFactor:
   708                           	opt stack 0
   709  00FE64                     _txPower868:
   710                           	opt stack 0
   711  00FE64  14                 	db	20
   712  00FE65  0E                 	db	14
   713  00FE66  0B                 	db	11
   714  00FE67  08                 	db	8
   715  00FE68  05                 	db	5
   716  00FE69  02                 	db	2
   717  00FE6A                     __end_of_txPower868:
   718                           	opt stack 0
   719  00FE6A                     _DefaultChannels433:
   720                           	opt stack 0
   721  00FE6A  B9D8               	dw	47576
   722  00FE6C  19D1               	dw	6609
   723  00FE6E  01                 	db	1
   724  00FE6F  50                 	db	80
   725  00FE70  012E               	dw	302
   726  00FE72  0000               	dw	0
   727  00FE74  0000               	dw	0
   728  00FE76  01                 	db	1
   729  00FE77  FF                 	db	255
   730  00FE78  C718               	dw	50968
   731  00FE7A  19D4               	dw	6612
   732  00FE7C  01                 	db	1
   733  00FE7D  50                 	db	80
   734  00FE7E  012E               	dw	302
   735  00FE80  0000               	dw	0
   736  00FE82  0000               	dw	0
   737  00FE84  01                 	db	1
   738  00FE85  FF                 	db	255
   739  00FE86  D458               	dw	54360
   740  00FE88  19D7               	dw	6615
   741  00FE8A  01                 	db	1
   742  00FE8B  50                 	db	80
   743  00FE8C  012E               	dw	302
   744  00FE8E  0000               	dw	0
   745  00FE90  0000               	dw	0
   746  00FE92  01                 	db	1
   747  00FE93  FF                 	db	255
   748  00FE94                     __end_of_DefaultChannels433:
   749                           	opt stack 0
   750  00FE94                     _DefaultChannels868:
   751                           	opt stack 0
   752  00FE94  27A0               	dw	10144
   753  00FE96  33BE               	dw	13246
   754  00FE98  01                 	db	1
   755  00FE99  50                 	db	80
   756  00FE9A  012E               	dw	302
   757  00FE9C  0000               	dw	0
   758  00FE9E  0000               	dw	0
   759  00FEA0  01                 	db	1
   760  00FEA1  FF                 	db	255
   761  00FEA2  34E0               	dw	13536
   762  00FEA4  33C1               	dw	13249
   763  00FEA6  01                 	db	1
   764  00FEA7  50                 	db	80
   765  00FEA8  012E               	dw	302
   766  00FEAA  0000               	dw	0
   767  00FEAC  0000               	dw	0
   768  00FEAE  01                 	db	1
   769  00FEAF  FF                 	db	255
   770  00FEB0  4220               	dw	16928
   771  00FEB2  33C4               	dw	13252
   772  00FEB4  01                 	db	1
   773  00FEB5  50                 	db	80
   774  00FEB6  012E               	dw	302
   775  00FEB8  0000               	dw	0
   776  00FEBA  0000               	dw	0
   777  00FEBC  01                 	db	1
   778  00FEBD  FF                 	db	255
   779  00FEBE                     __end_of_DefaultChannels868:
   780                           	opt stack 0
   781  00FEBE                     _FskSyncWordBuff:
   782                           	opt stack 0
   783  00FEBE  C1                 	db	193
   784  00FEBF  94                 	db	148
   785  00FEC0  C1                 	db	193
   786  00FEC1                     __end_of_FskSyncWordBuff:
   787                           	opt stack 0
   788  00FEC1                     STR_11:
   789                           
   790                           ; BSR set to: 1
   791  00FEC1  43                 	db	67	;'C'
   792  00FEC2  61                 	db	97	;'a'
   793  00FEC3  6C                 	db	108	;'l'
   794  00FEC4  6C                 	db	108	;'l'
   795  00FEC5  62                 	db	98	;'b'
   796  00FEC6  61                 	db	97	;'a'
   797  00FEC7  63                 	db	99	;'c'
   798  00FEC8  6B                 	db	107	;'k'
   799  00FEC9  20                 	db	32
   800  00FECA  66                 	db	102	;'f'
   801  00FECB  75                 	db	117	;'u'
   802  00FECC  6E                 	db	110	;'n'
   803  00FECD  63                 	db	99	;'c'
   804  00FECE  74                 	db	116	;'t'
   805  00FECF  69                 	db	105	;'i'
   806  00FED0  6F                 	db	111	;'o'
   807  00FED1  6E                 	db	110	;'n'
   808  00FED2  21                 	db	33
   809  00FED3  20                 	db	32
   810  00FED4  4C                 	db	76	;'L'
   811  00FED5  6F                 	db	111	;'o'
   812  00FED6  52                 	db	82	;'R'
   813  00FED7  61                 	db	97	;'a'
   814  00FED8  57                 	db	87	;'W'
   815  00FED9  41                 	db	65	;'A'
   816  00FEDA  4E                 	db	78	;'N'
   817  00FEDB  20                 	db	32
   818  00FEDC  49                 	db	73	;'I'
   819  00FEDD  6E                 	db	110	;'n'
   820  00FEDE  69                 	db	105	;'i'
   821  00FEDF  74                 	db	116	;'t'
   822  00FEE0  69                 	db	105	;'i'
   823  00FEE1  61                 	db	97	;'a'
   824  00FEE2  6C                 	db	108	;'l'
   825  00FEE3  69                 	db	105	;'i'
   826  00FEE4  7A                 	db	122	;'z'
   827  00FEE5  65                 	db	101	;'e'
   828  00FEE6  64                 	db	100	;'d'
   829  00FEE7  20                 	db	32
   830  00FEE8  73                 	db	115	;'s'
   831  00FEE9  75                 	db	117	;'u'
   832  00FEEA  63                 	db	99	;'c'
   833  00FEEB  63                 	db	99	;'c'
   834  00FEEC  65                 	db	101	;'e'
   835  00FEED  73                 	db	115	;'s'
   836  00FEEE  73                 	db	115	;'s'
   837  00FEEF  66                 	db	102	;'f'
   838  00FEF0  75                 	db	117	;'u'
   839  00FEF1  6C                 	db	108	;'l'
   840  00FEF2  6C                 	db	108	;'l'
   841  00FEF3  79                 	db	121	;'y'
   842  00FEF4  0A                 	db	10
   843  00FEF5  0D                 	db	13
   844  00FEF6  00                 	db	0
   845  00FEF7                     STR_12:
   846                           
   847                           ; BSR set to: 1
   848  00FEF7  50                 	db	80	;'P'
   849  00FEF8  61                 	db	97	;'a'
   850  00FEF9  63                 	db	99	;'c'
   851  00FEFA  6B                 	db	107	;'k'
   852  00FEFB  65                 	db	101	;'e'
   853  00FEFC  74                 	db	116	;'t'
   854  00FEFD  20                 	db	32
   855  00FEFE  23                 	db	35
   856  00FEFF  25                 	db	37
   857  00FF00  64                 	db	100	;'d'
   858  00FF01  20                 	db	32
   859  00FF02  73                 	db	115	;'s'
   860  00FF03  65                 	db	101	;'e'
   861  00FF04  6E                 	db	110	;'n'
   862  00FF05  74                 	db	116	;'t'
   863  00FF06  3A                 	db	58	;':'
   864  00FF07  20                 	db	32
   865  00FF08  74                 	db	116	;'t'
   866  00FF09  65                 	db	101	;'e'
   867  00FF0A  6D                 	db	109	;'m'
   868  00FF0B  70                 	db	112	;'p'
   869  00FF0C  65                 	db	101	;'e'
   870  00FF0D  72                 	db	114	;'r'
   871  00FF0E  61                 	db	97	;'a'
   872  00FF0F  74                 	db	116	;'t'
   873  00FF10  75                 	db	117	;'u'
   874  00FF11  72                 	db	114	;'r'
   875  00FF12  65                 	db	101	;'e'
   876  00FF13  20                 	db	32
   877  00FF14  76                 	db	118	;'v'
   878  00FF15  61                 	db	97	;'a'
   879  00FF16  6C                 	db	108	;'l'
   880  00FF17  75                 	db	117	;'u'
   881  00FF18  65                 	db	101	;'e'
   882  00FF19  3A                 	db	58	;':'
   883  00FF1A  20                 	db	32
   884  00FF1B  25                 	db	37
   885  00FF1C  64                 	db	100	;'d'
   886  00FF1D  0A                 	db	10
   887  00FF1E  0D                 	db	13
   888  00FF1F  00                 	db	0
   889  00FF20                     STR_5:
   890                           
   891                           ; BSR set to: 1
   892  00FF20  49                 	db	73	;'I'
   893  00FF21  74                 	db	116	;'t'
   894  00FF22  27                 	db	39
   895  00FF23  73                 	db	115	;'s'
   896  00FF24  20                 	db	32
   897  00FF25  74                 	db	116	;'t'
   898  00FF26  69                 	db	105	;'i'
   899  00FF27  6D                 	db	109	;'m'
   900  00FF28  65                 	db	101	;'e'
   901  00FF29  20                 	db	32
   902  00FF2A  74                 	db	116	;'t'
   903  00FF2B  6F                 	db	111	;'o'
   904  00FF2C  20                 	db	32
   905  00FF2D  73                 	db	115	;'s'
   906  00FF2E  65                 	db	101	;'e'
   907  00FF2F  6E                 	db	110	;'n'
   908  00FF30  64                 	db	100	;'d'
   909  00FF31  20                 	db	32
   910  00FF32  61                 	db	97	;'a'
   911  00FF33  20                 	db	32
   912  00FF34  70                 	db	112	;'p'
   913  00FF35  61                 	db	97	;'a'
   914  00FF36  63                 	db	99	;'c'
   915  00FF37  6B                 	db	107	;'k'
   916  00FF38  65                 	db	101	;'e'
   917  00FF39  74                 	db	116	;'t'
   918  00FF3A  2E                 	db	46
   919  00FF3B  2E                 	db	46
   920  00FF3C  2E                 	db	46
   921  00FF3D  0A                 	db	10
   922  00FF3E  0D                 	db	13
   923  00FF3F  00                 	db	0
   924  00FF40                     STR_2:
   925                           
   926                           ; BSR set to: 1
   927  00FF40  0A                 	db	10
   928  00FF41  0D                 	db	13
   929  00FF42  50                 	db	80	;'P'
   930  00FF43  6F                 	db	111	;'o'
   931  00FF44  77                 	db	119	;'w'
   932  00FF45  65                 	db	101	;'e'
   933  00FF46  72                 	db	114	;'r'
   934  00FF47  69                 	db	105	;'i'
   935  00FF48  6E                 	db	110	;'n'
   936  00FF49  67                 	db	103	;'g'
   937  00FF4A  20                 	db	32
   938  00FF4B  75                 	db	117	;'u'
   939  00FF4C  70                 	db	112	;'p'
   940  00FF4D  20                 	db	32
   941  00FF4E  53                 	db	83	;'S'
   942  00FF4F  58                 	db	88	;'X'
   943  00FF50  31                 	db	49	;'1'
   944  00FF51  32                 	db	50	;'2'
   945  00FF52  37                 	db	55	;'7'
   946  00FF53  36                 	db	54	;'6'
   947  00FF54  20                 	db	32
   948  00FF55  6D                 	db	109	;'m'
   949  00FF56  6F                 	db	111	;'o'
   950  00FF57  64                 	db	100	;'d'
   951  00FF58  75                 	db	117	;'u'
   952  00FF59  6C                 	db	108	;'l'
   953  00FF5A  65                 	db	101	;'e'
   954  00FF5B  0A                 	db	10
   955  00FF5C  0D                 	db	13
   956  00FF5D  00                 	db	0
   957  00FF5E                     STR_7:
   958                           
   959                           ; BSR set to: 1
   960  00FF5E  50                 	db	80	;'P'
   961  00FF5F  6F                 	db	111	;'o'
   962  00FF60  77                 	db	119	;'w'
   963  00FF61  65                 	db	101	;'e'
   964  00FF62  72                 	db	114	;'r'
   965  00FF63  69                 	db	105	;'i'
   966  00FF64  6E                 	db	110	;'n'
   967  00FF65  67                 	db	103	;'g'
   968  00FF66  20                 	db	32
   969  00FF67  6F                 	db	111	;'o'
   970  00FF68  66                 	db	102	;'f'
   971  00FF69  66                 	db	102	;'f'
   972  00FF6A  20                 	db	32
   973  00FF6B  53                 	db	83	;'S'
   974  00FF6C  58                 	db	88	;'X'
   975  00FF6D  31                 	db	49	;'1'
   976  00FF6E  32                 	db	50	;'2'
   977  00FF6F  37                 	db	55	;'7'
   978  00FF70  36                 	db	54	;'6'
   979  00FF71  20                 	db	32
   980  00FF72  6D                 	db	109	;'m'
   981  00FF73  6F                 	db	111	;'o'
   982  00FF74  64                 	db	100	;'d'
   983  00FF75  75                 	db	117	;'u'
   984  00FF76  6C                 	db	108	;'l'
   985  00FF77  65                 	db	101	;'e'
   986  00FF78  0A                 	db	10
   987  00FF79  0D                 	db	13
   988  00FF7A  00                 	db	0
   989  00FF7B                     STR_3:
   990                           
   991                           ; BSR set to: 1
   992  00FF7B  49                 	db	73	;'I'
   993  00FF7C  6E                 	db	110	;'n'
   994  00FF7D  69                 	db	105	;'i'
   995  00FF7E  74                 	db	116	;'t'
   996  00FF7F  69                 	db	105	;'i'
   997  00FF80  61                 	db	97	;'a'
   998  00FF81  6C                 	db	108	;'l'
   999  00FF82  69                 	db	105	;'i'
  1000  00FF83  7A                 	db	122	;'z'
  1001  00FF84  69                 	db	105	;'i'
  1002  00FF85  6E                 	db	110	;'n'
  1003  00FF86  67                 	db	103	;'g'
  1004  00FF87  20                 	db	32
  1005  00FF88  4C                 	db	76	;'L'
  1006  00FF89  6F                 	db	111	;'o'
  1007  00FF8A  52                 	db	82	;'R'
  1008  00FF8B  61                 	db	97	;'a'
  1009  00FF8C  57                 	db	87	;'W'
  1010  00FF8D  41                 	db	65	;'A'
  1011  00FF8E  4E                 	db	78	;'N'
  1012  00FF8F  20                 	db	32
  1013  00FF90  53                 	db	83	;'S'
  1014  00FF91  74                 	db	116	;'t'
  1015  00FF92  61                 	db	97	;'a'
  1016  00FF93  63                 	db	99	;'c'
  1017  00FF94  6B                 	db	107	;'k'
  1018  00FF95  0A                 	db	10
  1019  00FF96  0D                 	db	13
  1020  00FF97  00                 	db	0
  1021  00FF98                     STR_4:
  1022                           
  1023                           ; BSR set to: 1
  1024  00FF98  4C                 	db	76	;'L'
  1025  00FF99  6F                 	db	111	;'o'
  1026  00FF9A  52                 	db	82	;'R'
  1027  00FF9B  61                 	db	97	;'a'
  1028  00FF9C  57                 	db	87	;'W'
  1029  00FF9D  41                 	db	65	;'A'
  1030  00FF9E  4E                 	db	78	;'N'
  1031  00FF9F  20                 	db	32
  1032  00FFA0  53                 	db	83	;'S'
  1033  00FFA1  74                 	db	116	;'t'
  1034  00FFA2  61                 	db	97	;'a'
  1035  00FFA3  63                 	db	99	;'c'
  1036  00FFA4  6B                 	db	107	;'k'
  1037  00FFA5  20                 	db	32
  1038  00FFA6  49                 	db	73	;'I'
  1039  00FFA7  6E                 	db	110	;'n'
  1040  00FFA8  69                 	db	105	;'i'
  1041  00FFA9  74                 	db	116	;'t'
  1042  00FFAA  69                 	db	105	;'i'
  1043  00FFAB  61                 	db	97	;'a'
  1044  00FFAC  6C                 	db	108	;'l'
  1045  00FFAD  69                 	db	105	;'i'
  1046  00FFAE  7A                 	db	122	;'z'
  1047  00FFAF  65                 	db	101	;'e'
  1048  00FFB0  64                 	db	100	;'d'
  1049  00FFB1  0A                 	db	10
  1050  00FFB2  0D                 	db	13
  1051  00FFB3  00                 	db	0
  1052  00FFB4                     STR_1:
  1053                           
  1054                           ; BSR set to: 1
  1055  00FFB4  0A                 	db	10
  1056  00FFB5  0D                 	db	13
  1057  00FFB6  53                 	db	83	;'S'
  1058  00FFB7  79                 	db	121	;'y'
  1059  00FFB8  73                 	db	115	;'s'
  1060  00FFB9  74                 	db	116	;'t'
  1061  00FFBA  65                 	db	101	;'e'
  1062  00FFBB  6D                 	db	109	;'m'
  1063  00FFBC  20                 	db	32
  1064  00FFBD  49                 	db	73	;'I'
  1065  00FFBE  6E                 	db	110	;'n'
  1066  00FFBF  69                 	db	105	;'i'
  1067  00FFC0  74                 	db	116	;'t'
  1068  00FFC1  69                 	db	105	;'i'
  1069  00FFC2  61                 	db	97	;'a'
  1070  00FFC3  6C                 	db	108	;'l'
  1071  00FFC4  69                 	db	105	;'i'
  1072  00FFC5  7A                 	db	122	;'z'
  1073  00FFC6  65                 	db	101	;'e'
  1074  00FFC7  64                 	db	100	;'d'
  1075  00FFC8  0A                 	db	10
  1076  00FFC9  0D                 	db	13
  1077  00FFCA  00                 	db	0
  1078  00FFCB                     STR_6:
  1079                           
  1080                           ; BSR set to: 1
  1081  00FFCB  44                 	db	68	;'D'
  1082  00FFCC  6F                 	db	111	;'o'
  1083  00FFCD  6E                 	db	110	;'n'
  1084  00FFCE  65                 	db	101	;'e'
  1085  00FFCF  20                 	db	32
  1086  00FFD0  70                 	db	112	;'p'
  1087  00FFD1  75                 	db	117	;'u'
  1088  00FFD2  6C                 	db	108	;'l'
  1089  00FFD3  6C                 	db	108	;'l'
  1090  00FFD4  65                 	db	101	;'e'
  1091  00FFD5  64                 	db	100	;'d'
  1092  00FFD6  20                 	db	32
  1093  00FFD7  68                 	db	104	;'h'
  1094  00FFD8  69                 	db	105	;'i'
  1095  00FFD9  67                 	db	103	;'g'
  1096  00FFDA  68                 	db	104	;'h'
  1097  00FFDB  2E                 	db	46
  1098  00FFDC  2E                 	db	46
  1099  00FFDD  0A                 	db	10
  1100  00FFDE  0D                 	db	13
  1101  00FFDF  00                 	db	0
  1102  00FFE0                     STR_8:
  1103                           
  1104                           ; BSR set to: 1
  1105  00FFE0  47                 	db	71	;'G'
  1106  00FFE1  6F                 	db	111	;'o'
  1107  00FFE2  69                 	db	105	;'i'
  1108  00FFE3  6E                 	db	110	;'n'
  1109  00FFE4  67                 	db	103	;'g'
  1110  00FFE5  20                 	db	32
  1111  00FFE6  74                 	db	116	;'t'
  1112  00FFE7  6F                 	db	111	;'o'
  1113  00FFE8  20                 	db	32
  1114  00FFE9  73                 	db	115	;'s'
  1115  00FFEA  6C                 	db	108	;'l'
  1116  00FFEB  65                 	db	101	;'e'
  1117  00FFEC  65                 	db	101	;'e'
  1118  00FFED  70                 	db	112	;'p'
  1119  00FFEE  21                 	db	33
  1120  00FFEF  0A                 	db	10
  1121  00FFF0  0D                 	db	13
  1122  00FFF1  00                 	db	0
  1123  00FFF2                     STR_9:
  1124                           
  1125                           ; BSR set to: 1
  1126  00FFF2  49                 	db	73	;'I'
  1127  00FFF3  27                 	db	39
  1128  00FFF4  6D                 	db	109	;'m'
  1129  00FFF5  20                 	db	32
  1130  00FFF6  61                 	db	97	;'a'
  1131  00FFF7  77                 	db	119	;'w'
  1132  00FFF8  61                 	db	97	;'a'
  1133  00FFF9  6B                 	db	107	;'k'
  1134  00FFFA  65                 	db	101	;'e'
  1135  00FFFB  21                 	db	33
  1136  00FFFC  0A                 	db	10
  1137  00FFFD  0D                 	db	13
  1138  00FFFE  00                 	db	0
  1139  0000                     
  1140                           ; #config settings
  1141  00FFFF  00                 	db	0	; dummy byte at the end
  1142  0000                     
  1143                           	psect	nvCOMRAM
  1144  00005E                     __pnvCOMRAM:
  1145                           	opt stack 0
  1146  00005E                     _timer1ReloadVal:
  1147                           	opt stack 0
  1148  00005E                     	ds	2
  1149                           
  1150                           	psect	nvBANK1
  1151  0001F3                     __pnvBANK1:
  1152                           	opt stack 0
  1153  0001F3                     _INT1_InterruptHandler:
  1154                           	opt stack 0
  1155  0001F3                     	ds	2
  1156  0001F5                     _INT2_InterruptHandler:
  1157                           	opt stack 0
  1158  0001F5                     	ds	2
  1159  0001F7                     _IOCB4_InterruptHandler:
  1160                           	opt stack 0
  1161  0001F7                     	ds	2
  1162  0001F9                     _IOCB5_InterruptHandler:
  1163                           	opt stack 0
  1164  0001F9                     	ds	2
  1165  0001FB                     _TMR1_InterruptHandler:
  1166                           	opt stack 0
  1167  0001FB                     	ds	2
  1168  0000                     _ANSELA	set	3896
  1169  0000                     _ANSELB	set	3897
  1170  0000                     _ANSELC	set	3898
  1171  0000                     _ANSELD	set	3899
  1172  0000                     _ANSELE	set	3900
  1173  0000                     _ANSD0	set	31192
  1174  0000                     _ANSD1	set	31193
  1175  0000                     _ANSD3	set	31195
  1176  0000                     _ANSD4	set	31196
  1177  0000                     _CCP1MD	set	31216
  1178  0000                     _CCP2MD	set	31217
  1179  0000                     _CCP3MD	set	31218
  1180  0000                     _CCP4MD	set	31219
  1181  0000                     _CCP5MD	set	31220
  1182  0000                     _CMP1MD	set	31209
  1183  0000                     _CMP2MD	set	31210
  1184  0000                     _CTMUMD	set	31211
  1185  0000                     _MSSP1MD	set	31222
  1186  0000                     _MSSP2MD	set	31223
  1187  0000                     _TMR2MD	set	31225
  1188  0000                     _TMR4MD	set	31227
  1189  0000                     _TMR5MD	set	31228
  1190  0000                     _TMR6MD	set	31229
  1191  0000                     _UART2MD	set	31231
  1192  0000                     _TMR1	set	4046
  1193  0000                     _ADCON0	set	4034
  1194  0000                     _ADCON0bits	set	4034
  1195  0000                     _ADCON1	set	4033
  1196  0000                     _ADCON2	set	4032
  1197  0000                     _ADRESH	set	4036
  1198  0000                     _ADRESL	set	4035
  1199  0000                     _BAUDCON1	set	4024
  1200  0000                     _INTCON2bits	set	4081
  1201  0000                     _INTCON3bits	set	4080
  1202  0000                     _INTCONbits	set	4082
  1203  0000                     _IOCBbits	set	3938
  1204  0000                     _LATA	set	3977
  1205  0000                     _LATAbits	set	3977
  1206  0000                     _LATB	set	3978
  1207  0000                     _LATC	set	3979
  1208  0000                     _LATCbits	set	3979
  1209  0000                     _LATD	set	3980
  1210  0000                     _LATDbits	set	3980
  1211  0000                     _LATE	set	3981
  1212  0000                     _OSCCON	set	4051
  1213  0000                     _OSCCON2	set	4050
  1214  0000                     _OSCTUNE	set	3995
  1215  0000                     _PIE1bits	set	3997
  1216  0000                     _PIR1bits	set	3998
  1217  0000                     _PORTAbits	set	3968
  1218  0000                     _PORTBbits	set	3969
  1219  0000                     _RCONbits	set	4048
  1220  0000                     _RCSTA1	set	4011
  1221  0000                     _SPBRG1	set	4015
  1222  0000                     _SPBRGH1	set	4016
  1223  0000                     _SSP2ADD	set	3950
  1224  0000                     _SSP2BUF	set	3951
  1225  0000                     _SSP2CON1	set	3948
  1226  0000                     _SSP2CON1bits	set	3948
  1227  0000                     _SSP2STAT	set	3949
  1228  0000                     _SSP2STATbits	set	3949
  1229  0000                     _T1CON	set	4045
  1230  0000                     _T1CONbits	set	4045
  1231  0000                     _T1GCON	set	4044
  1232  0000                     _TMR1H	set	4047
  1233  0000                     _TMR1L	set	4046
  1234  0000                     _TRISA	set	3986
  1235  0000                     _TRISB	set	3987
  1236  0000                     _TRISC	set	3988
  1237  0000                     _TRISD	set	3989
  1238  0000                     _TRISE	set	3990
  1239  0000                     _TXREG1	set	4013
  1240  0000                     _TXSTA1	set	4012
  1241  0000                     _WPUB	set	3937
  1242  0000                     _IDLEN	set	32415
  1243  0000                     _LATC2	set	31834
  1244  0000                     _LATD0	set	31840
  1245  0000                     _LATD1	set	31841
  1246  0000                     _LATD3	set	31843
  1247  0000                     _LATD4	set	31844
  1248  0000                     _TRISC2	set	31906
  1249  0000                     _TRISD0	set	31912
  1250  0000                     _TRISD1	set	31913
  1251  0000                     _TRISD3	set	31915
  1252  0000                     _TRISD4	set	31916
  1253                           
  1254                           	psect	cinit
  1255  005C5C                     __pcinit:
  1256                           	opt stack 0
  1257  005C5C                     start_initialization:
  1258                           	opt stack 0
  1259  005C5C                     __initialization:
  1260                           	opt stack 0
  1261                           
  1262                           ; Initialize objects allocated to BANK1 (50 bytes)
  1263                           ; load TBLPTR registers with __pidataBANK1
  1264  005C5C  0EE8               	movlw	low __pidataBANK1
  1265  005C5E  6EF6               	movwf	tblptrl,c
  1266  005C60  0E71               	movlw	high __pidataBANK1
  1267  005C62  6EF7               	movwf	tblptrh,c
  1268  005C64  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1269  005C66  6EF8               	movwf	tblptru,c
  1270  005C68  EE01  F0C1         	lfsr	0,__pdataBANK1
  1271  005C6C  EE20 F032          	lfsr	2,50
  1272  005C70                     copy_data0:
  1273  005C70  0009               	tblrd		*+
  1274  005C72  CFF5 FFEE          	movff	tablat,postinc0
  1275  005C76  50DD               	movf	postdec2,w,c
  1276  005C78  50D9               	movf	fsr2l,w,c
  1277  005C7A  E1FA               	bnz	copy_data0
  1278                           
  1279                           ; Initialize objects allocated to COMRAM (8 bytes)
  1280                           ; load TBLPTR registers with __pidataCOMRAM
  1281  005C7C  0E3C               	movlw	low __pidataCOMRAM
  1282  005C7E  6EF6               	movwf	tblptrl,c
  1283  005C80  0E7A               	movlw	high __pidataCOMRAM
  1284  005C82  6EF7               	movwf	tblptrh,c
  1285  005C84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1286  005C86  6EF8               	movwf	tblptru,c
  1287  005C88  EE00  F056         	lfsr	0,__pdataCOMRAM
  1288  005C8C  EE20 F008          	lfsr	2,8
  1289  005C90                     copy_data1:
  1290  005C90  0009               	tblrd		*+
  1291  005C92  CFF5 FFEE          	movff	tablat,postinc0
  1292  005C96  50DD               	movf	postdec2,w,c
  1293  005C98  50D9               	movf	fsr2l,w,c
  1294  005C9A  E1FA               	bnz	copy_data1
  1295                           
  1296                           ; Clear objects allocated to BIGRAM (542 bytes)
  1297  005C9C  EE04  F0E0         	lfsr	0,__pbssBIGRAM
  1298  005CA0  EE22 F01E          	lfsr	2,542
  1299  005CA4                     clear_0:
  1300  005CA4  6AEE               	clrf	postinc0,c
  1301  005CA6  50DD               	movf	postdec2,w,c
  1302  005CA8  50D9               	movf	fsr2l,w,c
  1303  005CAA  E1FC               	bnz	clear_0
  1304  005CAC  50DA               	movf	fsr2h,w,c
  1305  005CAE  E1FA               	bnz	clear_0
  1306                           
  1307                           ; Clear objects allocated to BANK4 (224 bytes)
  1308  005CB0  EE04  F000         	lfsr	0,__pbssBANK4
  1309  005CB4  0EE0               	movlw	224
  1310  005CB6                     clear_1:
  1311  005CB6  6AEE               	clrf	postinc0,c
  1312  005CB8  06E8               	decf	wreg,f,c
  1313  005CBA  E1FD               	bnz	clear_1
  1314                           
  1315                           ; Clear objects allocated to BANK3 (160 bytes)
  1316  005CBC  EE03  F000         	lfsr	0,__pbssBANK3
  1317  005CC0  0EA0               	movlw	160
  1318  005CC2                     clear_2:
  1319  005CC2  6AEE               	clrf	postinc0,c
  1320  005CC4  06E8               	decf	wreg,f,c
  1321  005CC6  E1FD               	bnz	clear_2
  1322                           
  1323                           ; Clear objects allocated to BANK2 (245 bytes)
  1324  005CC8  EE02  F000         	lfsr	0,__pbssBANK2
  1325  005CCC  0EF5               	movlw	245
  1326  005CCE                     clear_3:
  1327  005CCE  6AEE               	clrf	postinc0,c
  1328  005CD0  06E8               	decf	wreg,f,c
  1329  005CD2  E1FD               	bnz	clear_3
  1330                           
  1331                           ; Clear objects allocated to BANK1 (79 bytes)
  1332  005CD4  EE01  F072         	lfsr	0,__pbssBANK1
  1333  005CD8  0E4F               	movlw	79
  1334  005CDA                     clear_4:
  1335  005CDA  6AEE               	clrf	postinc0,c
  1336  005CDC  06E8               	decf	wreg,f,c
  1337  005CDE  E1FD               	bnz	clear_4
  1338                           
  1339                           ; Clear objects allocated to BANK0 (3 bytes)
  1340  005CE0  0100               	movlb	0
  1341  005CE2  6BF2               	clrf	(__pbssBANK0+2)& (0+255),b
  1342  005CE4  6BF1               	clrf	(__pbssBANK0+1)& (0+255),b
  1343  005CE6  6BF0               	clrf	__pbssBANK0& (0+255),b
  1344                           
  1345                           ; Clear objects allocated to COMRAM (24 bytes)
  1346  005CE8  EE00  F032         	lfsr	0,__pbssCOMRAM
  1347  005CEC  0E18               	movlw	24
  1348  005CEE                     clear_5:
  1349  005CEE  6AEE               	clrf	postinc0,c
  1350  005CF0  06E8               	decf	wreg,f,c
  1351  005CF2  E1FD               	bnz	clear_5
  1352  005CF4                     end_of_initialization:
  1353                           	opt stack 0
  1354  005CF4                     __end_of__initialization:
  1355                           	opt stack 0
  1356  005CF4  0100               	movlb	0
  1357  005CF6  EF16  F022         	goto	_main	;jump to C main() function
  1358                           tblptru	equ	0xFF8
  1359                           tblptrh	equ	0xFF7
  1360                           tblptrl	equ	0xFF6
  1361                           tablat	equ	0xFF5
  1362                           postinc0	equ	0xFEE
  1363                           wreg	equ	0xFE8
  1364                           postdec2	equ	0xFDD
  1365                           fsr2h	equ	0xFDA
  1366                           fsr2l	equ	0xFD9
  1367                           
  1368                           	psect	bssCOMRAM
  1369  000032                     __pbssCOMRAM:
  1370                           	opt stack 0
  1371  000032                     TMR_GetDeltaTime@retVal:
  1372                           	opt stack 0
  1373  000032                     	ds	4
  1374  000036                     _ticksAccounted:
  1375                           	opt stack 0
  1376  000036                     	ds	4
  1377  00003A                     _ticksAdded:
  1378                           	opt stack 0
  1379  00003A                     	ds	4
  1380  00003E                     TMR1_ISR@CountCallBack:
  1381                           	opt stack 0
  1382  00003E                     	ds	2
  1383  000040                     TMR_GetDeltaTime@tmrVal:
  1384                           	opt stack 0
  1385  000040                     	ds	2
  1386  000042                     TMR_SwapTimer@oldVal:
  1387                           	opt stack 0
  1388  000042                     	ds	2
  1389  000044                     TMR_SwapTimer@retVal:
  1390                           	opt stack 0
  1391  000044                     	ds	2
  1392  000046                     __rcon:
  1393                           	opt stack 0
  1394  000046                     	ds	1
  1395  000047                     __roundCounter:
  1396                           	opt stack 0
  1397  000047                     	ds	1
  1398  000048                     _dioStatus:
  1399                           	opt stack 0
  1400  000048                     	ds	1
  1401  000049                     _timerOverflow:
  1402                           	opt stack 0
  1403  000049                     	ds	1
  1404                           tblptru	equ	0xFF8
  1405                           tblptrh	equ	0xFF7
  1406                           tblptrl	equ	0xFF6
  1407                           tablat	equ	0xFF5
  1408                           postinc0	equ	0xFEE
  1409                           wreg	equ	0xFE8
  1410                           postdec2	equ	0xFDD
  1411                           fsr2h	equ	0xFDA
  1412                           fsr2l	equ	0xFD9
  1413                           
  1414                           	psect	dataCOMRAM
  1415  000056                     __pdataCOMRAM:
  1416                           	opt stack 0
  1417  000056                     _randx:
  1418                           	opt stack 0
  1419  000056                     	ds	4
  1420  00005A                     _ticksToScheduledInterrupt:
  1421                           	opt stack 0
  1422  00005A                     	ds	4
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           postinc0	equ	0xFEE
  1428                           wreg	equ	0xFE8
  1429                           postdec2	equ	0xFDD
  1430                           fsr2h	equ	0xFDA
  1431                           fsr2l	equ	0xFD9
  1432                           
  1433                           	psect	bssBANK0
  1434  0000F0                     __pbssBANK0:
  1435                           	opt stack 0
  1436  0000F0                     _reloadVal:
  1437                           	opt stack 0
  1438  0000F0                     	ds	2
  1439  0000F2                     _allocatedTimers:
  1440                           	opt stack 0
  1441  0000F2                     	ds	1
  1442                           tblptru	equ	0xFF8
  1443                           tblptrh	equ	0xFF7
  1444                           tblptrl	equ	0xFF6
  1445                           tablat	equ	0xFF5
  1446                           postinc0	equ	0xFEE
  1447                           wreg	equ	0xFE8
  1448                           postdec2	equ	0xFDD
  1449                           fsr2h	equ	0xFDA
  1450                           fsr2l	equ	0xFD9
  1451                           
  1452                           	psect	bssBANK1
  1453  000172                     __pbssBANK1:
  1454                           	opt stack 0
  1455  000172                     _rxPayload:
  1456                           	opt stack 0
  1457  000172                     	ds	4
  1458  000176                     _JoinedServer:
  1459                           	opt stack 0
  1460  000176                     	ds	1
  1461  000177                     _TimeToSend:
  1462                           	opt stack 0
  1463  000177                     	ds	1
  1464  000178                     _localDioStatus:
  1465                           	opt stack 0
  1466  000178                     	ds	1
  1467  000179                     _RadioConfiguration:
  1468                           	opt stack 0
  1469  000179                     	ds	54
  1470  0001AF                     _aesBuffer:
  1471                           	opt stack 0
  1472  0001AF                     	ds	16
  1473  0001BF                     _payload:
  1474                           	opt stack 0
  1475  0001BF                     	ds	2
  1476                           tblptru	equ	0xFF8
  1477                           tblptrh	equ	0xFF7
  1478                           tblptrl	equ	0xFF6
  1479                           tablat	equ	0xFF5
  1480                           postinc0	equ	0xFEE
  1481                           wreg	equ	0xFE8
  1482                           postdec2	equ	0xFDD
  1483                           fsr2h	equ	0xFDA
  1484                           fsr2l	equ	0xFD9
  1485                           
  1486                           	psect	dataBANK1
  1487  0001C1                     __pdataBANK1:
  1488                           	opt stack 0
  1489  0001C1                     GenerateSubkey@F7870:
  1490                           	opt stack 0
  1491  0001C1                     	ds	16
  1492  0001D1                     _count:
  1493                           	opt stack 0
  1494  0001D1                     	ds	2
  1495  0001D3                     _appSKey:
  1496                           	opt stack 0
  1497  0001D3                     	ds	16
  1498  0001E3                     _nwkSKey:
  1499                           	opt stack 0
  1500  0001E3                     	ds	16
  1501                           tblptru	equ	0xFF8
  1502                           tblptrh	equ	0xFF7
  1503                           tblptrl	equ	0xFF6
  1504                           tablat	equ	0xFF5
  1505                           postinc0	equ	0xFEE
  1506                           wreg	equ	0xFE8
  1507                           postdec2	equ	0xFDD
  1508                           fsr2h	equ	0xFDA
  1509                           fsr2l	equ	0xFD9
  1510                           
  1511                           	psect	bssBANK2
  1512  000200                     __pbssBANK2:
  1513                           	opt stack 0
  1514  000200                     _loRa:
  1515                           	opt stack 0
  1516  000200                     	ds	245
  1517                           tblptru	equ	0xFF8
  1518                           tblptrh	equ	0xFF7
  1519                           tblptrl	equ	0xFF6
  1520                           tablat	equ	0xFF5
  1521                           postinc0	equ	0xFEE
  1522                           wreg	equ	0xFE8
  1523                           postdec2	equ	0xFDD
  1524                           fsr2h	equ	0xFDA
  1525                           fsr2l	equ	0xFD9
  1526                           
  1527                           	psect	bssBANK3
  1528  000300                     __pbssBANK3:
  1529                           	opt stack 0
  1530  000300                     _swTimers:
  1531                           	opt stack 0
  1532  000300                     	ds	160
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           postinc0	equ	0xFEE
  1538                           wreg	equ	0xFE8
  1539                           postdec2	equ	0xFDD
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           
  1543                           	psect	bssBANK4
  1544  000400                     __pbssBANK4:
  1545                           	opt stack 0
  1546  000400                     _Channels:
  1547                           	opt stack 0
  1548  000400                     	ds	224
  1549                           tblptru	equ	0xFF8
  1550                           tblptrh	equ	0xFF7
  1551                           tblptrl	equ	0xFF6
  1552                           tablat	equ	0xFF5
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           postdec2	equ	0xFDD
  1556                           fsr2h	equ	0xFDA
  1557                           fsr2l	equ	0xFD9
  1558                           
  1559                           	psect	bssBIGRAM
  1560  0004E0                     __pbssBIGRAM:
  1561                           	opt stack 0
  1562  0004E0                     _macBuffer:
  1563                           	opt stack 0
  1564  0004E0                     	ds	271
  1565  0005EF                     _radioBuffer:
  1566                           	opt stack 0
  1567  0005EF                     	ds	271
  1568                           tblptru	equ	0xFF8
  1569                           tblptrh	equ	0xFF7
  1570                           tblptrl	equ	0xFF6
  1571                           tablat	equ	0xFF5
  1572                           postinc0	equ	0xFEE
  1573                           wreg	equ	0xFE8
  1574                           postdec2	equ	0xFDD
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           
  1578                           	psect	cstackBANK3
  1579  0003A0                     __pcstackBANK3:
  1580                           	opt stack 0
  1581  0003A0                     LORAWAN_RxDone@fPort:
  1582                           	opt stack 0
  1583                           
  1584                           ; 1 bytes @ 0x0
  1585  0003A0                     	ds	1
  1586  0003A1                     LORAWAN_RxDone@channelIndex:
  1587                           	opt stack 0
  1588                           
  1589                           ; 1 bytes @ 0x1
  1590  0003A1                     	ds	1
  1591  0003A2                     LORAWAN_RxDone@mhdr:
  1592                           	opt stack 0
  1593                           
  1594                           ; 1 bytes @ 0x2
  1595  0003A2                     	ds	1
  1596  0003A3                     LORAWAN_RxDone@extractedMic:
  1597                           	opt stack 0
  1598                           
  1599                           ; 4 bytes @ 0x3
  1600  0003A3                     	ds	4
  1601  0003A7                     LORAWAN_RxDone@bufferIndex:
  1602                           	opt stack 0
  1603                           
  1604                           ; 1 bytes @ 0x7
  1605  0003A7                     	ds	1
  1606  0003A8                     LORAWAN_RxDone@temp:
  1607                           	opt stack 0
  1608                           
  1609                           ; 1 bytes @ 0x8
  1610  0003A8                     	ds	1
  1611  0003A9                     LORAWAN_RxDone@packet:
  1612                           	opt stack 0
  1613                           
  1614                           ; 2 bytes @ 0x9
  1615  0003A9                     	ds	2
  1616  0003AB                     LORAWAN_RxDone@computedMic:
  1617                           	opt stack 0
  1618                           
  1619                           ; 4 bytes @ 0xB
  1620  0003AB                     	ds	4
  1621  0003AF                     LORAWAN_RxDone@joinAccept:
  1622                           	opt stack 0
  1623                           
  1624                           ; 2 bytes @ 0xF
  1625  0003AF                     	ds	2
  1626  0003B1                     LORAWAN_RxDone@frmPayloadLength:
  1627                           	opt stack 0
  1628                           
  1629                           ; 1 bytes @ 0x11
  1630  0003B1                     	ds	1
  1631  0003B2                     LORAWAN_RxDone@hdr:
  1632                           	opt stack 0
  1633                           
  1634                           ; 2 bytes @ 0x12
  1635  0003B2                     	ds	2
  1636                           tblptru	equ	0xFF8
  1637                           tblptrh	equ	0xFF7
  1638                           tblptrl	equ	0xFF6
  1639                           tablat	equ	0xFF5
  1640                           postinc0	equ	0xFEE
  1641                           wreg	equ	0xFE8
  1642                           postdec2	equ	0xFDD
  1643                           fsr2h	equ	0xFDA
  1644                           fsr2l	equ	0xFD9
  1645                           
  1646                           	psect	cstackBANK1
  1647  000100                     __pcstackBANK1:
  1648                           	opt stack 0
  1649  000100                     AESCmac@k2:
  1650                           	opt stack 0
  1651                           
  1652                           ; 16 bytes @ 0x0
  1653  000100                     	ds	16
  1654  000110                     AESCmac@k1:
  1655                           	opt stack 0
  1656                           
  1657                           ; 16 bytes @ 0x10
  1658  000110                     	ds	16
  1659  000120                     AESCmac@mLast:
  1660                           	opt stack 0
  1661                           
  1662                           ; 16 bytes @ 0x20
  1663  000120                     	ds	16
  1664  000130                     AESCmac@padded:
  1665                           	opt stack 0
  1666                           
  1667                           ; 16 bytes @ 0x30
  1668  000130                     	ds	16
  1669  000140                     AESCmac@y:
  1670                           	opt stack 0
  1671                           
  1672                           ; 16 bytes @ 0x40
  1673  000140                     	ds	16
  1674  000150                     AESCmac@x:
  1675                           	opt stack 0
  1676                           
  1677                           ; 16 bytes @ 0x50
  1678  000150                     	ds	16
  1679  000160                     AESCmac@ptr:
  1680                           	opt stack 0
  1681                           
  1682                           ; 2 bytes @ 0x60
  1683  000160                     	ds	2
  1684  000162                     AESCmac@flag:
  1685                           	opt stack 0
  1686                           
  1687                           ; 1 bytes @ 0x62
  1688  000162                     	ds	1
  1689  000163                     AESCmac@n:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0x63
  1693  000163                     	ds	1
  1694  000164                     AESCmac@j:
  1695                           	opt stack 0
  1696                           
  1697                           ; 1 bytes @ 0x64
  1698  000164                     	ds	1
  1699  000165                     AESCmac@i:
  1700                           	opt stack 0
  1701                           
  1702                           ; 1 bytes @ 0x65
  1703  000165                     	ds	1
  1704  000166                     ?_ComputeMic:
  1705                           	opt stack 0
  1706  000166                     AssemblePacket@port:
  1707                           	opt stack 0
  1708  000166                     ComputeMic@key:
  1709                           	opt stack 0
  1710                           
  1711                           ; 2 bytes @ 0x66
  1712  000166                     	ds	1
  1713  000167                     AssemblePacket@buffer:
  1714                           	opt stack 0
  1715                           
  1716                           ; 2 bytes @ 0x67
  1717  000167                     	ds	1
  1718  000168                     ComputeMic@buffer:
  1719                           	opt stack 0
  1720                           
  1721                           ; 2 bytes @ 0x68
  1722  000168                     	ds	1
  1723  000169                     AssemblePacket@bufferLength:
  1724                           	opt stack 0
  1725                           
  1726                           ; 2 bytes @ 0x69
  1727  000169                     	ds	1
  1728  00016A                     ComputeMic@bufferLength:
  1729                           	opt stack 0
  1730                           
  1731                           ; 1 bytes @ 0x6A
  1732  00016A                     	ds	1
  1733  00016B                     LORAWAN_Send@port:
  1734                           	opt stack 0
  1735                           
  1736                           ; 1 bytes @ 0x6B
  1737  00016B                     	ds	1
  1738  00016C                     LORAWAN_Send@buffer:
  1739                           	opt stack 0
  1740                           
  1741                           ; 2 bytes @ 0x6C
  1742  00016C                     	ds	2
  1743  00016E                     LORAWAN_Send@bufferLength:
  1744                           	opt stack 0
  1745                           
  1746                           ; 1 bytes @ 0x6E
  1747  00016E                     	ds	1
  1748  00016F                     LORAWAN_RxDone@buffer:
  1749                           	opt stack 0
  1750                           
  1751                           ; 2 bytes @ 0x6F
  1752  00016F                     	ds	2
  1753  000171                     LORAWAN_RxDone@bufferLength:
  1754                           	opt stack 0
  1755                           
  1756                           ; 1 bytes @ 0x71
  1757  000171                     	ds	1
  1758                           tblptru	equ	0xFF8
  1759                           tblptrh	equ	0xFF7
  1760                           tblptrl	equ	0xFF6
  1761                           tablat	equ	0xFF5
  1762                           postinc0	equ	0xFEE
  1763                           wreg	equ	0xFE8
  1764                           postdec2	equ	0xFDD
  1765                           fsr2h	equ	0xFDA
  1766                           fsr2l	equ	0xFD9
  1767                           
  1768                           	psect	cstackBANK0
  1769  000060                     __pcstackBANK0:
  1770                           	opt stack 0
  1771  000060                     	ds	4
  1772  000064                     ??_UpdateMinMaxChDataRate:
  1773  000064                     ??_FindSmallestDataRate:
  1774  000064                     ??_UpdateReceiveDelays:
  1775  000064                     ??_CountfOptsLength:
  1776  000064                     ?_TMR1_ReadTimer:
  1777                           	opt stack 0
  1778  000064                     ?_ExecuteLinkCheck:
  1779                           	opt stack 0
  1780  000064                     ?_ExecuteDutyCycle:
  1781                           	opt stack 0
  1782  000064                     ?_ExecuteDevStatus:
  1783                           	opt stack 0
  1784  000064                     ?_ADC_GetConversion:
  1785                           	opt stack 0
  1786  000064                     ?___lwdiv:
  1787                           	opt stack 0
  1788  000064                     ?_GetRx1Freq:
  1789                           	opt stack 0
  1790  000064                     ?___lmul:
  1791                           	opt stack 0
  1792  000064                     ?___lldiv:
  1793                           	opt stack 0
  1794  000064                     ?___llmod:
  1795                           	opt stack 0
  1796  000064                     SwTimerCreate@retVal:
  1797                           	opt stack 0
  1798  000064                     SwTimerIsRunning@timerId:
  1799                           	opt stack 0
  1800  000064                     SwTimerStop@timerId:
  1801                           	opt stack 0
  1802  000064                     SPI2_Exchange8bit@data:
  1803                           	opt stack 0
  1804  000064                     HALResetPinOutputValue@value:
  1805                           	opt stack 0
  1806  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1807                           	opt stack 0
  1808  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1809                           	opt stack 0
  1810  000064                     RADIO_SetOutputPower@power:
  1811                           	opt stack 0
  1812  000064                     RADIO_SetCRC@crc:
  1813                           	opt stack 0
  1814  000064                     RADIO_SetIQInverted@iqInverted:
  1815                           	opt stack 0
  1816  000064                     RADIO_SetBandwidth@bandwidth:
  1817                           	opt stack 0
  1818  000064                     RADIO_SetModulation@modulation:
  1819                           	opt stack 0
  1820  000064                     ValidateDataRate@dataRate:
  1821                           	opt stack 0
  1822  000064                     ValidateTxPower@result:
  1823                           	opt stack 0
  1824  000064                     UpdateDLSettings@dlRx1DrOffset:
  1825                           	opt stack 0
  1826  000064                     UpdateDataRange@dataRangeNew:
  1827                           	opt stack 0
  1828  000064                     UpdateChannelIdStatus@statusNew:
  1829                           	opt stack 0
  1830  000064                     ValidateRxOffset@rxOffset:
  1831                           	opt stack 0
  1832  000064                     ValidateChannelId@allowedForDefaultChannels:
  1833                           	opt stack 0
  1834  000064                     ValidateChannelMaskCntl@result:
  1835                           	opt stack 0
  1836  000064                     UpdateCurrentDataRate@valueNew:
  1837                           	opt stack 0
  1838  000064                     UpdateTxPower@txPowerNew:
  1839                           	opt stack 0
  1840  000064                     UpdateJoinInProgress@state:
  1841                           	opt stack 0
  1842  000064                     INTERRUPT_GetDioStatus@a:
  1843                           	opt stack 0
  1844  000064                     EncKeySchedule@key:
  1845                           	opt stack 0
  1846  000064                     EUSART1_Write@txData:
  1847                           	opt stack 0
  1848  000064                     ___abdiv@divisor:
  1849                           	opt stack 0
  1850  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1851                           	opt stack 0
  1852  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1853                           	opt stack 0
  1854  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1855                           	opt stack 0
  1856  000064                     SwTimerSetCallback@callback:
  1857                           	opt stack 0
  1858  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1859                           	opt stack 0
  1860  000064                     ExecuteDutyCycle@ptr:
  1861                           	opt stack 0
  1862  000064                     ExecuteDevStatus@ptr:
  1863                           	opt stack 0
  1864  000064                     UpdateDutyCycle@dutyCycleNew:
  1865                           	opt stack 0
  1866  000064                     ValidateChannelMask@channelMask:
  1867                           	opt stack 0
  1868  000064                     TMR1_WriteTimer@timerVal:
  1869                           	opt stack 0
  1870  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1871                           	opt stack 0
  1872  000064                     FillSubKey@source:
  1873                           	opt stack 0
  1874  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1875                           	opt stack 0
  1876  000064                     IOCB5_SetInterruptHandler@InterruptHandler:
  1877                           	opt stack 0
  1878  000064                     ExecuteLinkCheck@ptr:
  1879                           	opt stack 0
  1880  000064                     IncludeMacCommandsResponse@macBuffer:
  1881                           	opt stack 0
  1882  000064                     CheckFlags@hdr:
  1883                           	opt stack 0
  1884  000064                     CheckMcastFlags@hdr:
  1885                           	opt stack 0
  1886  000064                     EncodeShiftRow@stateTable:
  1887                           	opt stack 0
  1888  000064                     RxDataDone@pData:
  1889                           	opt stack 0
  1890  000064                     ___lwdiv@dividend:
  1891                           	opt stack 0
  1892  000064                     memcpy@d1:
  1893                           	opt stack 0
  1894  000064                     memset@p1:
  1895                           	opt stack 0
  1896  000064                     SystemBlockingWaitMs@ms:
  1897                           	opt stack 0
  1898  000064                     RADIO_SetChannelFrequency@frequency:
  1899                           	opt stack 0
  1900  000064                     ValidateFrequency@frequencyNew:
  1901                           	opt stack 0
  1902  000064                     UpdateFrequency@frequencyNew:
  1903                           	opt stack 0
  1904  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1905                           	opt stack 0
  1906  000064                     UpdateReceiveWindow2Parameters@frequency:
  1907                           	opt stack 0
  1908  000064                     ___lmul@multiplier:
  1909                           	opt stack 0
  1910  000064                     ___lldiv@dividend:
  1911                           	opt stack 0
  1912  000064                     ___llmod@dividend:
  1913                           	opt stack 0
  1914                           
  1915                           ; 4 bytes @ 0x4
  1916  000064                     	ds	1
  1917  000065                     ??_UpdateDataRange:
  1918  000065                     ??_UpdateChannelIdStatus:
  1919  000065                     ??_EncKeySchedule:
  1920  000065                     SwTimerIsRunning@isRunning:
  1921                           	opt stack 0
  1922  000065                     HALSPISend@data:
  1923                           	opt stack 0
  1924  000065                     ValidateDataRate@result:
  1925                           	opt stack 0
  1926  000065                     ValidateTxPower@txPowerNew:
  1927                           	opt stack 0
  1928  000065                     UpdateDLSettings@dlRx2Dr:
  1929                           	opt stack 0
  1930  000065                     ValidateRxOffset@result:
  1931                           	opt stack 0
  1932  000065                     ValidateChannelId@result:
  1933                           	opt stack 0
  1934  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1935                           	opt stack 0
  1936  000065                     UpdateMinMaxChDataRate@i:
  1937                           	opt stack 0
  1938  000065                     FindSmallestDataRate@found:
  1939                           	opt stack 0
  1940  000065                     putch@txData:
  1941                           	opt stack 0
  1942  000065                     ___abdiv@counter:
  1943                           	opt stack 0
  1944                           
  1945                           ; 1 bytes @ 0x5
  1946  000065                     	ds	1
  1947  000066                     ??_TMR1_ReadTimer:
  1948  000066                     ??_ExecuteDutyCycle:
  1949  000066                     ??_ADC_GetConversion:
  1950  000066                     SwTimerSetCallback@callbackParameter:
  1951                           	opt stack 0
  1952  000066                     RADIO_RegisterWrite@value:
  1953                           	opt stack 0
  1954  000066                     RADIO_RegisterRead@reg:
  1955                           	opt stack 0
  1956  000066                     UpdateDataRange@channelId:
  1957                           	opt stack 0
  1958  000066                     UpdateChannelIdStatus@channelId:
  1959                           	opt stack 0
  1960  000066                     ValidateDataRange@result:
  1961                           	opt stack 0
  1962  000066                     ValidateChannelId@channelId:
  1963                           	opt stack 0
  1964  000066                     UpdateDutyCycle@channelId:
  1965                           	opt stack 0
  1966  000066                     ValidateChannelMask@i:
  1967                           	opt stack 0
  1968  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1969                           	opt stack 0
  1970  000066                     FindSmallestDataRate@i:
  1971                           	opt stack 0
  1972  000066                     EncodeShiftRow@temp:
  1973                           	opt stack 0
  1974  000066                     RxDataDone@dataLength:
  1975                           	opt stack 0
  1976  000066                     ___abdiv@sign:
  1977                           	opt stack 0
  1978  000066                     FillSubKey@key:
  1979                           	opt stack 0
  1980  000066                     ___lwdiv@divisor:
  1981                           	opt stack 0
  1982  000066                     memcpy@s1:
  1983                           	opt stack 0
  1984  000066                     memset@c:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0x6
  1988  000066                     	ds	1
  1989  000067                     SwTimerSetCallback@timerId:
  1990                           	opt stack 0
  1991  000067                     RADIO_RegisterWrite@reg:
  1992                           	opt stack 0
  1993  000067                     RADIO_RegisterRead@readValue:
  1994                           	opt stack 0
  1995  000067                     UpdateDataRange@i:
  1996                           	opt stack 0
  1997  000067                     UpdateChannelIdStatus@i:
  1998                           	opt stack 0
  1999  000067                     ValidateDataRange@dataRangeNew:
  2000                           	opt stack 0
  2001  000067                     IncludeMacCommandsResponse@bIncludeInFopts:
  2002                           	opt stack 0
  2003  000067                     FindSmallestDataRate@dataRate:
  2004                           	opt stack 0
  2005  000067                     RxDataDone@status:
  2006                           	opt stack 0
  2007  000067                     ___abdiv@quotient:
  2008                           	opt stack 0
  2009                           
  2010                           ; 1 bytes @ 0x7
  2011  000067                     	ds	1
  2012  000068                     ??_IncludeMacCommandsResponse:
  2013  000068                     ??_SystemBlockingWaitMs:
  2014  000068                     RADIO_WritePower@ocp:
  2015                           	opt stack 0
  2016  000068                     RADIO_UnhandledInterrupt@modulation:
  2017                           	opt stack 0
  2018  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  2019                           	opt stack 0
  2020  000068                     ValidateFrequency@result:
  2021                           	opt stack 0
  2022  000068                     ValidateDataRange@dataRateMax:
  2023                           	opt stack 0
  2024  000068                     UpdateFrequency@channelId:
  2025                           	opt stack 0
  2026  000068                     FillSubKey@size:
  2027                           	opt stack 0
  2028  000068                     UpdateReceiveWindow2Parameters@dataRate:
  2029                           	opt stack 0
  2030  000068                     UpdateReceiveDelays@delay:
  2031                           	opt stack 0
  2032  000068                     ADC_GetConversion@channel:
  2033                           	opt stack 0
  2034  000068                     ___abdiv@dividend:
  2035                           	opt stack 0
  2036  000068                     ___lwdiv@counter:
  2037                           	opt stack 0
  2038  000068                     EnableChannels1@channelMask:
  2039                           	opt stack 0
  2040  000068                     TMR1_ReadTimer@readVal:
  2041                           	opt stack 0
  2042  000068                     _EncKeySchedule$3862:
  2043                           	opt stack 0
  2044  000068                     memcpy@n:
  2045                           	opt stack 0
  2046  000068                     memset@n:
  2047                           	opt stack 0
  2048  000068                     ___lmul@multiplicand:
  2049                           	opt stack 0
  2050  000068                     ___lldiv@divisor:
  2051                           	opt stack 0
  2052  000068                     ___llmod@divisor:
  2053                           	opt stack 0
  2054                           
  2055                           ; 4 bytes @ 0x8
  2056  000068                     	ds	1
  2057  000069                     ??_FillSubKey:
  2058  000069                     ??_RADIO_DIO3:
  2059  000069                     ??_RADIO_DIO4:
  2060  000069                     ??_RADIO_DIO5:
  2061  000069                     ?_ExecuteRxTimingSetup:
  2062                           	opt stack 0
  2063  000069                     RADIO_WriteMode@newModulation:
  2064                           	opt stack 0
  2065  000069                     RADIO_WritePower@paDac:
  2066                           	opt stack 0
  2067  000069                     ExecuteDutyCycle@maxDCycle:
  2068                           	opt stack 0
  2069  000069                     ValidateDataRange@dataRateMin:
  2070                           	opt stack 0
  2071  000069                     ExecuteRxTimingSetup@ptr:
  2072                           	opt stack 0
  2073  000069                     ___lwdiv@quotient:
  2074                           	opt stack 0
  2075                           
  2076                           ; 2 bytes @ 0x9
  2077  000069                     	ds	1
  2078  00006A                     RADIO_WriteMode@blocking:
  2079                           	opt stack 0
  2080  00006A                     RADIO_WritePower@power:
  2081                           	opt stack 0
  2082  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  2083                           	opt stack 0
  2084  00006A                     EnableChannels1@channelMaskCntl:
  2085                           	opt stack 0
  2086  00006A                     TMR1_ReadTimer@readValHigh:
  2087                           	opt stack 0
  2088  00006A                     FillSubKey@carry:
  2089                           	opt stack 0
  2090  00006A                     CountfOptsLength@macCommandLength:
  2091                           	opt stack 0
  2092  00006A                     AESEncode@block:
  2093                           	opt stack 0
  2094  00006A                     memcpy@d:
  2095                           	opt stack 0
  2096  00006A                     memset@p:
  2097                           	opt stack 0
  2098                           
  2099                           ; 2 bytes @ 0xA
  2100  00006A                     	ds	1
  2101  00006B                     RADIO_WriteMode@currentModulation:
  2102                           	opt stack 0
  2103  00006B                     EnableChannels1@channelIndexMin:
  2104                           	opt stack 0
  2105  00006B                     TMR1_ReadTimer@readValLow:
  2106                           	opt stack 0
  2107  00006B                     FillSubKey@i:
  2108                           	opt stack 0
  2109  00006B                     ExecuteRxTimingSetup@delay:
  2110                           	opt stack 0
  2111  00006B                     CountfOptsLength@i:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0xB
  2115  00006B                     	ds	1
  2116  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  2117  00006C                     ?_TMR_SwapTimer:
  2118                           	opt stack 0
  2119  00006C                     ?_TMR_GetDeltaTime:
  2120                           	opt stack 0
  2121  00006C                     RADIO_WriteMode@dioMapping:
  2122                           	opt stack 0
  2123  00006C                     EnableChannels1@channelIndexMax:
  2124                           	opt stack 0
  2125  00006C                     AESEncode@masterKey:
  2126                           	opt stack 0
  2127  00006C                     ___llmod@counter:
  2128                           	opt stack 0
  2129  00006C                     TMR_SwapTimer@timerVal:
  2130                           	opt stack 0
  2131  00006C                     memcpy@s:
  2132                           	opt stack 0
  2133  00006C                     ___lmul@product:
  2134                           	opt stack 0
  2135  00006C                     ___lldiv@quotient:
  2136                           	opt stack 0
  2137                           
  2138                           ; 4 bytes @ 0xC
  2139  00006C                     	ds	1
  2140  00006D                     ??_AESEncode:
  2141  00006D                     RADIO_WriteMode@currentMode:
  2142                           	opt stack 0
  2143  00006D                     EnableChannels1@i:
  2144                           	opt stack 0
  2145  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  2146                           	opt stack 0
  2147                           
  2148                           ; 1 bytes @ 0xD
  2149  00006D                     	ds	1
  2150  00006E                     ?_ExtractMic:
  2151                           	opt stack 0
  2152  00006E                     RADIO_WriteMode@newMode:
  2153                           	opt stack 0
  2154  00006E                     InitDefault868Channels@i:
  2155                           	opt stack 0
  2156  00006E                     InitDefault433Channels@i:
  2157                           	opt stack 0
  2158  00006E                     LORAWAN_GetMaxPayloadSize@result:
  2159                           	opt stack 0
  2160  00006E                     IncludeMacCommandsResponse@i:
  2161                           	opt stack 0
  2162  00006E                     RADIO_SetFSKSyncWord@syncWord:
  2163                           	opt stack 0
  2164  00006E                     EnableChannels@channelMask:
  2165                           	opt stack 0
  2166  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  2167                           	opt stack 0
  2168  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  2169                           	opt stack 0
  2170  00006E                     PrepareSessionKeys@sessionKey:
  2171                           	opt stack 0
  2172  00006E                     ExtractMic@buffer:
  2173                           	opt stack 0
  2174  00006E                     TMR_OverrideRemaining@ticksRemaining:
  2175                           	opt stack 0
  2176  00006E                     AssembleEncryptionBlock@frameCounter:
  2177                           	opt stack 0
  2178                           
  2179                           ; 4 bytes @ 0xE
  2180  00006E                     	ds	1
  2181  00006F                     RADIO_WriteMode@opMode:
  2182                           	opt stack 0
  2183  00006F                     IncludeMacCommandsResponse@bufferIndex:
  2184                           	opt stack 0
  2185                           
  2186                           ; 1 bytes @ 0xF
  2187  00006F                     	ds	1
  2188  000070                     ??_TMR_GetDeltaTime:
  2189  000070                     ?_rand:
  2190                           	opt stack 0
  2191  000070                     ?_RADIO_ReadRandom:
  2192                           	opt stack 0
  2193  000070                     ?_ExecuteNewChannel:
  2194                           	opt stack 0
  2195  000070                     ?_ExecuteRxParamSetupReq:
  2196                           	opt stack 0
  2197  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  2198                           	opt stack 0
  2199  000070                     EnableChannels@channelMaskCntl:
  2200                           	opt stack 0
  2201  000070                     ExtractMic@bufferLength:
  2202                           	opt stack 0
  2203  000070                     ___lldiv@counter:
  2204                           	opt stack 0
  2205  000070                     ExecuteNewChannel@ptr:
  2206                           	opt stack 0
  2207  000070                     ExecuteRxParamSetupReq@ptr:
  2208                           	opt stack 0
  2209  000070                     UpdateCfList@joinAccept:
  2210                           	opt stack 0
  2211  000070                     PrepareSessionKeys@appNonce:
  2212                           	opt stack 0
  2213                           
  2214                           ; 2 bytes @ 0x10
  2215  000070                     	ds	1
  2216  000071                     ?_ExecuteLinkAdr:
  2217                           	opt stack 0
  2218  000071                     ExecuteLinkAdr@ptr:
  2219                           	opt stack 0
  2220  000071                     SwTimerSetTimeout@timeout:
  2221                           	opt stack 0
  2222  000071                     RADIO_WriteFrequency@frequency:
  2223                           	opt stack 0
  2224  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  2225                           	opt stack 0
  2226  000071                     RADIO_WriteFSKBitRate@bitRate:
  2227                           	opt stack 0
  2228  000071                     ConfigureRadio@freq:
  2229                           	opt stack 0
  2230                           
  2231                           ; 4 bytes @ 0x11
  2232  000071                     	ds	1
  2233  000072                     ??_ExtractMic:
  2234  000072                     ??_TMR_OverrideRemaining:
  2235  000072                     ??_UpdateCfList:
  2236  000072                     ?___lwmod:
  2237                           	opt stack 0
  2238  000072                     ExecuteNewChannel@drRange:
  2239                           	opt stack 0
  2240  000072                     AssembleEncryptionBlock@blockId:
  2241                           	opt stack 0
  2242  000072                     RADIO_ReadRandom@retVal:
  2243                           	opt stack 0
  2244  000072                     PrepareSessionKeys@networkId:
  2245                           	opt stack 0
  2246  000072                     ___lwmod@dividend:
  2247                           	opt stack 0
  2248  000072                     ExecuteRxParamSetupReq@frequency:
  2249                           	opt stack 0
  2250                           
  2251                           ; 4 bytes @ 0x12
  2252  000072                     	ds	1
  2253  000073                     ??_ExecuteLinkAdr:
  2254  000073                     AssembleEncryptionBlock@firstByte:
  2255                           	opt stack 0
  2256  000073                     ExecuteNewChannel@frequency:
  2257                           	opt stack 0
  2258                           
  2259                           ; 4 bytes @ 0x13
  2260  000073                     	ds	1
  2261  000074                     RADIO_ReadRandom@i:
  2262                           	opt stack 0
  2263  000074                     UpdateCfList@bufferLength:
  2264                           	opt stack 0
  2265  000074                     PrepareSessionKeys@index:
  2266                           	opt stack 0
  2267  000074                     AssembleEncryptionBlock@multicastStatus:
  2268                           	opt stack 0
  2269  000074                     TMR_OverrideRemaining@tmrVal:
  2270                           	opt stack 0
  2271  000074                     ExecuteLinkAdr@channelMask:
  2272                           	opt stack 0
  2273  000074                     ___lwmod@divisor:
  2274                           	opt stack 0
  2275  000074                     ExtractMic@mic:
  2276                           	opt stack 0
  2277                           
  2278                           ; 4 bytes @ 0x14
  2279  000074                     	ds	1
  2280  000075                     ??_SwTimerSetTimeout:
  2281  000075                     ConfigureRadio@dataRate:
  2282                           	opt stack 0
  2283  000075                     AssembleEncryptionBlock@dir:
  2284                           	opt stack 0
  2285  000075                     srand@x:
  2286                           	opt stack 0
  2287  000075                     RADIO_WriteFrequency@num_mod:
  2288                           	opt stack 0
  2289  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  2290                           	opt stack 0
  2291  000075                     RADIO_WriteFSKBitRate@num:
  2292                           	opt stack 0
  2293  000075                     UpdateCfList@frequency:
  2294                           	opt stack 0
  2295  000075                     AESEncode@key:
  2296                           	opt stack 0
  2297                           
  2298                           ; 16 bytes @ 0x15
  2299  000075                     	ds	1
  2300  000076                     ExecuteLinkAdr@txPower:
  2301                           	opt stack 0
  2302  000076                     ExecuteRxParamSetupReq@dlSettings:
  2303                           	opt stack 0
  2304  000076                     AssembleEncryptionBlock@bufferIndex:
  2305                           	opt stack 0
  2306  000076                     ___lwmod@counter:
  2307                           	opt stack 0
  2308  000076                     TMR_OverrideRemaining@oldReloadVal:
  2309                           	opt stack 0
  2310  000076                     ConfigureRadioTx@freq:
  2311                           	opt stack 0
  2312  000076                     ConfigureRadioRx@freq:
  2313                           	opt stack 0
  2314                           
  2315                           ; 4 bytes @ 0x16
  2316  000076                     	ds	1
  2317  000077                     ?_Random:
  2318                           	opt stack 0
  2319  000077                     ?_printf:
  2320                           	opt stack 0
  2321  000077                     ExecuteNewChannel@channelIndex:
  2322                           	opt stack 0
  2323  000077                     ExecuteLinkAdr@redundancy:
  2324                           	opt stack 0
  2325  000077                     Random@max:
  2326                           	opt stack 0
  2327  000077                     printf@f:
  2328                           	opt stack 0
  2329                           
  2330                           ; 2 bytes @ 0x17
  2331  000077                     	ds	2
  2332  000079                     SwTimerSetTimeout@timerId:
  2333                           	opt stack 0
  2334  000079                     ExecuteLinkAdr@dataRate:
  2335                           	opt stack 0
  2336  000079                     SearchAvailableChannel@transmissionType:
  2337                           	opt stack 0
  2338  000079                     UpdateCfList@channelIndex:
  2339                           	opt stack 0
  2340  000079                     RADIO_WriteFrequency@num:
  2341                           	opt stack 0
  2342                           
  2343                           ; 4 bytes @ 0x19
  2344  000079                     	ds	1
  2345  00007A                     ?_MacExecuteCommands:
  2346                           	opt stack 0
  2347  00007A                     UpdateCfList@i:
  2348                           	opt stack 0
  2349  00007A                     ConfigureRadioTx@dataRate:
  2350                           	opt stack 0
  2351  00007A                     ConfigureRadioRx@dataRate:
  2352                           	opt stack 0
  2353  00007A                     SearchAvailableChannel@channelIndex:
  2354                           	opt stack 0
  2355  00007A                     MacExecuteCommands@buffer:
  2356                           	opt stack 0
  2357                           
  2358                           ; 2 bytes @ 0x1A
  2359  00007A                     	ds	1
  2360  00007B                     ConfigureRadioTx@txPower:
  2361                           	opt stack 0
  2362                           
  2363                           ; 1 bytes @ 0x1B
  2364  00007B                     	ds	1
  2365  00007C                     ??_SearchAvailableChannel:
  2366  00007C                     ?_SwTimersInterrupt:
  2367                           	opt stack 0
  2368  00007C                     MacExecuteCommands@fOptsLen:
  2369                           	opt stack 0
  2370                           
  2371                           ; 1 bytes @ 0x1C
  2372  00007C                     	ds	1
  2373  00007D                     ??_MacExecuteCommands:
  2374  00007D                     ??_printf:
  2375  00007D                     ??_RADIO_DIO2:
  2376  00007D                     RADIO_Init@radioBuffer:
  2377                           	opt stack 0
  2378  00007D                     RADIO_WriteConfiguration@symbolTimeout:
  2379                           	opt stack 0
  2380                           
  2381                           ; 2 bytes @ 0x1D
  2382  00007D                     	ds	1
  2383  00007E                     RADIO_DIO2@dioMapping:
  2384                           	opt stack 0
  2385  00007E                     printf@ap:
  2386                           	opt stack 0
  2387                           
  2388                           ; 1 bytes @ 0x1E
  2389  00007E                     	ds	1
  2390  00007F                     ??_RADIO_WriteConfiguration:
  2391  00007F                     MacExecuteCommands@done:
  2392                           	opt stack 0
  2393  00007F                     printf@flag:
  2394                           	opt stack 0
  2395  00007F                     RADIO_Init@frequency:
  2396                           	opt stack 0
  2397                           
  2398                           ; 4 bytes @ 0x1F
  2399  00007F                     	ds	1
  2400  000080                     SearchAvailableChannel@randomNumberCopy:
  2401                           	opt stack 0
  2402  000080                     printf@prec:
  2403                           	opt stack 0
  2404  000080                     MacExecuteCommands@ptr:
  2405                           	opt stack 0
  2406                           
  2407                           ; 2 bytes @ 0x20
  2408  000080                     	ds	1
  2409  000081                     RADIO_WriteConfiguration@i:
  2410                           	opt stack 0
  2411  000081                     SearchAvailableChannel@result:
  2412                           	opt stack 0
  2413  000081                     printf@val:
  2414                           	opt stack 0
  2415                           
  2416                           ; 2 bytes @ 0x21
  2417  000081                     	ds	1
  2418  000082                     SearchAvailableChannel@maxChannels:
  2419                           	opt stack 0
  2420  000082                     RADIO_WriteConfiguration@tempValue:
  2421                           	opt stack 0
  2422                           
  2423                           ; 4 bytes @ 0x22
  2424  000082                     	ds	1
  2425  000083                     ??_RADIO_Init:
  2426  000083                     SearchAvailableChannel@randomNumber:
  2427                           	opt stack 0
  2428  000083                     printf@c:
  2429                           	opt stack 0
  2430                           
  2431                           ; 1 bytes @ 0x23
  2432  000083                     	ds	1
  2433  000084                     SearchAvailableChannel@i:
  2434                           	opt stack 0
  2435  000084                     SwTimersInterrupt@timeElapsed:
  2436                           	opt stack 0
  2437                           
  2438                           ; 4 bytes @ 0x24
  2439  000084                     	ds	1
  2440  000085                     SelectChannelForTransmission@transmissionType:
  2441                           	opt stack 0
  2442  000085                     _AESEncode$3876:
  2443                           	opt stack 0
  2444                           
  2445                           ; 2 bytes @ 0x25
  2446  000085                     	ds	1
  2447  000086                     RADIO_WriteConfiguration@regValue:
  2448                           	opt stack 0
  2449  000086                     SelectChannelForTransmission@result:
  2450                           	opt stack 0
  2451                           
  2452                           ; 1 bytes @ 0x26
  2453  000086                     	ds	1
  2454  000087                     SelectChannelForTransmission@channelIndex:
  2455                           	opt stack 0
  2456  000087                     _AESEncode$3877:
  2457                           	opt stack 0
  2458                           
  2459                           ; 2 bytes @ 0x27
  2460  000087                     	ds	1
  2461  000088                     SwTimersInterrupt@ticksToNextTimerEvent:
  2462                           	opt stack 0
  2463                           
  2464                           ; 4 bytes @ 0x28
  2465  000088                     	ds	1
  2466  000089                     _AESEncode$3878:
  2467                           	opt stack 0
  2468                           
  2469                           ; 2 bytes @ 0x29
  2470  000089                     	ds	2
  2471  00008B                     AESEncode@aux:
  2472                           	opt stack 0
  2473                           
  2474                           ; 1 bytes @ 0x2B
  2475  00008B                     	ds	1
  2476  00008C                     SwTimersInterrupt@i:
  2477                           	opt stack 0
  2478  00008C                     AESEncode@aux2:
  2479                           	opt stack 0
  2480                           
  2481                           ; 1 bytes @ 0x2C
  2482  00008C                     	ds	1
  2483  00008D                     ?_SwTimerReadValue:
  2484                           	opt stack 0
  2485  00008D                     AESEncode@aux1:
  2486                           	opt stack 0
  2487                           
  2488                           ; 1 bytes @ 0x2D
  2489  00008D                     	ds	1
  2490  00008E                     AESEncode@aux3:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0x2E
  2494  00008E                     	ds	1
  2495  00008F                     AESEncode@i:
  2496                           	opt stack 0
  2497                           
  2498                           ; 1 bytes @ 0x2F
  2499  00008F                     	ds	1
  2500  000090                     AESEncodeLoRa@block:
  2501                           	opt stack 0
  2502                           
  2503                           ; 2 bytes @ 0x30
  2504  000090                     	ds	1
  2505  000091                     SwTimerReadValue@ticksCount:
  2506                           	opt stack 0
  2507  000091                     SwTimerStart@ticksRemaining:
  2508                           	opt stack 0
  2509                           
  2510                           ; 4 bytes @ 0x31
  2511  000091                     	ds	1
  2512  000092                     AESEncodeLoRa@key:
  2513                           	opt stack 0
  2514                           
  2515                           ; 2 bytes @ 0x32
  2516  000092                     	ds	2
  2517  000094                     AESEncodeLoRa@useKey:
  2518                           	opt stack 0
  2519                           
  2520                           ; 16 bytes @ 0x34
  2521  000094                     	ds	1
  2522  000095                     SwTimerReadValue@timerId:
  2523                           	opt stack 0
  2524  000095                     SwTimerStart@timerId:
  2525                           	opt stack 0
  2526                           
  2527                           ; 1 bytes @ 0x35
  2528  000095                     	ds	1
  2529  000096                     ??_UpdateRetransmissionAckTimeoutState:
  2530  000096                     ??_StartReTxTimer:
  2531  000096                     ?_RADIO_Transmit:
  2532                           	opt stack 0
  2533  000096                     ?_RADIO_ReceiveStart:
  2534                           	opt stack 0
  2535  000096                     RADIO_Transmit@buffer:
  2536                           	opt stack 0
  2537  000096                     RADIO_ReceiveStart@rxWindowSize:
  2538                           	opt stack 0
  2539  000096                     LORAWAN_LinkCheckConfigure@period:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x36
  2543  000096                     	ds	2
  2544  000098                     ??_LORAWAN_LinkCheckConfigure:
  2545  000098                     ??_RADIO_ReceiveStart:
  2546  000098                     RADIO_Transmit@bufferLen:
  2547                           	opt stack 0
  2548                           
  2549                           ; 1 bytes @ 0x38
  2550  000098                     	ds	1
  2551  000099                     ??_RADIO_Transmit:
  2552                           
  2553                           ; 1 bytes @ 0x39
  2554  000099                     	ds	1
  2555  00009A                     StartReTxTimer@minim:
  2556                           	opt stack 0
  2557                           
  2558                           ; 4 bytes @ 0x3A
  2559  00009A                     	ds	2
  2560  00009C                     _RADIO_ReceiveStart$1203:
  2561                           	opt stack 0
  2562                           
  2563                           ; 4 bytes @ 0x3C
  2564  00009C                     	ds	2
  2565  00009E                     StartReTxTimer@i:
  2566                           	opt stack 0
  2567                           
  2568                           ; 1 bytes @ 0x3E
  2569  00009E                     	ds	2
  2570  0000A0                     LORAWAN_TxDone@timeOnAir:
  2571                           	opt stack 0
  2572  0000A0                     _LORAWAN_LinkCheckConfigure$3282:
  2573                           	opt stack 0
  2574                           
  2575                           ; 4 bytes @ 0x40
  2576  0000A0                     	ds	1
  2577  0000A1                     _RADIO_Transmit$1200:
  2578                           	opt stack 0
  2579                           
  2580                           ; 4 bytes @ 0x41
  2581  0000A1                     	ds	1
  2582  0000A2                     ??_LORAWAN_TxDone:
  2583                           
  2584                           ; 1 bytes @ 0x42
  2585  0000A2                     	ds	2
  2586  0000A4                     LORAWAN_LinkCheckConfigure@iCtr:
  2587                           	opt stack 0
  2588  0000A4                     GenerateSubkey@key:
  2589                           	opt stack 0
  2590  0000A4                     ComputeSessionKeys@joinAcceptBuffer:
  2591                           	opt stack 0
  2592  0000A4                     EncryptFRMPayload@buffer:
  2593                           	opt stack 0
  2594                           
  2595                           ; 2 bytes @ 0x44
  2596  0000A4                     	ds	1
  2597  0000A5                     RADIO_Transmit@regValue:
  2598                           	opt stack 0
  2599  0000A5                     LORAWAN_Reset@ismBandNew:
  2600                           	opt stack 0
  2601                           
  2602                           ; 1 bytes @ 0x45
  2603  0000A5                     	ds	1
  2604  0000A6                     RADIO_Transmit@i:
  2605                           	opt stack 0
  2606  0000A6                     EncryptFRMPayload@bufferLength:
  2607                           	opt stack 0
  2608  0000A6                     LORAWAN_Init@RxPayload:
  2609                           	opt stack 0
  2610  0000A6                     GenerateSubkey@k1:
  2611                           	opt stack 0
  2612                           
  2613                           ; 2 bytes @ 0x46
  2614  0000A6                     	ds	1
  2615  0000A7                     ??_LORAWAN_RxTimeout:
  2616  0000A7                     EncryptFRMPayload@dir:
  2617                           	opt stack 0
  2618                           
  2619                           ; 1 bytes @ 0x47
  2620  0000A7                     	ds	1
  2621  0000A8                     LORAWAN_Init@RxJoinResponse:
  2622                           	opt stack 0
  2623  0000A8                     GenerateSubkey@k2:
  2624                           	opt stack 0
  2625  0000A8                     EncryptFRMPayload@frameCounter:
  2626                           	opt stack 0
  2627                           
  2628                           ; 4 bytes @ 0x48
  2629  0000A8                     	ds	2
  2630  0000AA                     ??_GenerateSubkey:
  2631  0000AA                     
  2632                           ; 1 bytes @ 0x4A
  2633  0000AA                     	ds	1
  2634  0000AB                     LORAWAN_RxTimeout@minim:
  2635                           	opt stack 0
  2636  0000AB                     GenerateSubkey@const_Rb:
  2637                           	opt stack 0
  2638                           
  2639                           ; 16 bytes @ 0x4B
  2640  0000AB                     	ds	1
  2641  0000AC                     EncryptFRMPayload@key:
  2642                           	opt stack 0
  2643                           
  2644                           ; 2 bytes @ 0x4C
  2645  0000AC                     	ds	2
  2646  0000AE                     EncryptFRMPayload@macBufferIndex:
  2647                           	opt stack 0
  2648                           
  2649                           ; 1 bytes @ 0x4E
  2650  0000AE                     	ds	1
  2651  0000AF                     LORAWAN_RxTimeout@i:
  2652                           	opt stack 0
  2653  0000AF                     EncryptFRMPayload@bufferToBeEncrypted:
  2654                           	opt stack 0
  2655                           
  2656                           ; 2 bytes @ 0x4F
  2657  0000AF                     	ds	1
  2658  0000B0                     ??_RADIO_DIO1:
  2659                           
  2660                           ; 1 bytes @ 0x50
  2661  0000B0                     	ds	1
  2662  0000B1                     RADIO_DIO1@dioMapping:
  2663                           	opt stack 0
  2664  0000B1                     EncryptFRMPayload@multicastStatus:
  2665                           	opt stack 0
  2666                           
  2667                           ; 1 bytes @ 0x51
  2668  0000B1                     	ds	1
  2669  0000B2                     ??_EncryptFRMPayload:
  2670                           
  2671                           ; 1 bytes @ 0x52
  2672  0000B2                     	ds	5
  2673  0000B7                     EncryptFRMPayload@k:
  2674                           	opt stack 0
  2675                           
  2676                           ; 1 bytes @ 0x57
  2677  0000B7                     	ds	1
  2678  0000B8                     EncryptFRMPayload@i:
  2679                           	opt stack 0
  2680                           
  2681                           ; 1 bytes @ 0x58
  2682  0000B8                     	ds	1
  2683  0000B9                     EncryptFRMPayload@j:
  2684                           	opt stack 0
  2685                           
  2686                           ; 1 bytes @ 0x59
  2687  0000B9                     	ds	2
  2688  0000BB                     GenerateSubkey@l:
  2689                           	opt stack 0
  2690                           
  2691                           ; 16 bytes @ 0x5B
  2692  0000BB                     	ds	1
  2693  0000BC                     _LORAWAN_TxDone$2096:
  2694                           	opt stack 0
  2695                           
  2696                           ; 4 bytes @ 0x5C
  2697  0000BC                     	ds	4
  2698  0000C0                     _LORAWAN_TxDone$2097:
  2699                           	opt stack 0
  2700                           
  2701                           ; 4 bytes @ 0x60
  2702  0000C0                     	ds	4
  2703  0000C4                     LORAWAN_TxDone@found:
  2704                           	opt stack 0
  2705                           
  2706                           ; 1 bytes @ 0x64
  2707  0000C4                     	ds	1
  2708  0000C5                     LORAWAN_TxDone@delta:
  2709                           	opt stack 0
  2710                           
  2711                           ; 4 bytes @ 0x65
  2712  0000C5                     	ds	4
  2713  0000C9                     LORAWAN_TxDone@ticks:
  2714                           	opt stack 0
  2715                           
  2716                           ; 4 bytes @ 0x69
  2717  0000C9                     	ds	2
  2718  0000CB                     GenerateSubkey@i:
  2719                           	opt stack 0
  2720                           
  2721                           ; 1 bytes @ 0x6B
  2722  0000CB                     	ds	1
  2723  0000CC                     AESCmac@key:
  2724                           	opt stack 0
  2725                           
  2726                           ; 2 bytes @ 0x6C
  2727  0000CC                     	ds	1
  2728  0000CD                     LORAWAN_TxDone@minim:
  2729                           	opt stack 0
  2730                           
  2731                           ; 4 bytes @ 0x6D
  2732  0000CD                     	ds	1
  2733  0000CE                     AESCmac@output:
  2734                           	opt stack 0
  2735                           
  2736                           ; 2 bytes @ 0x6E
  2737  0000CE                     	ds	2
  2738  0000D0                     AESCmac@input:
  2739                           	opt stack 0
  2740                           
  2741                           ; 2 bytes @ 0x70
  2742  0000D0                     	ds	1
  2743  0000D1                     LORAWAN_TxDone@i:
  2744                           	opt stack 0
  2745                           
  2746                           ; 1 bytes @ 0x71
  2747  0000D1                     	ds	1
  2748  0000D2                     ??_RADIO_TxDone:
  2749  0000D2                     ??_RADIO_FSKPacketSent:
  2750  0000D2                     AESCmac@size:
  2751                           	opt stack 0
  2752                           
  2753                           ; 1 bytes @ 0x72
  2754  0000D2                     	ds	1
  2755  0000D3                     ??_AESCmac:
  2756                           
  2757                           ; 1 bytes @ 0x73
  2758  0000D3                     	ds	3
  2759  0000D6                     RADIO_TxDone@timeOnAir:
  2760                           	opt stack 0
  2761  0000D6                     RADIO_FSKPacketSent@timeOnAir:
  2762                           	opt stack 0
  2763                           
  2764                           ; 4 bytes @ 0x76
  2765  0000D6                     	ds	4
  2766  0000DA                     ??_AssemblePacket:
  2767  0000DA                     _RADIO_TxDone$1215:
  2768                           	opt stack 0
  2769  0000DA                     _RADIO_FSKPacketSent$1219:
  2770                           	opt stack 0
  2771  0000DA                     ComputeMic@mic:
  2772                           	opt stack 0
  2773                           
  2774                           ; 4 bytes @ 0x7A
  2775  0000DA                     	ds	2
  2776  0000DC                     AssemblePacket@confirmed:
  2777                           	opt stack 0
  2778                           
  2779                           ; 1 bytes @ 0x7C
  2780  0000DC                     	ds	1
  2781  0000DD                     AssemblePacket@mhdr:
  2782                           	opt stack 0
  2783                           
  2784                           ; 1 bytes @ 0x7D
  2785  0000DD                     	ds	1
  2786  0000DE                     ??_PrepareJoinRequestFrame:
  2787  0000DE                     RADIO_FSKPacketSent@irqFlags:
  2788                           	opt stack 0
  2789  0000DE                     AssemblePacket@fCtrl:
  2790                           	opt stack 0
  2791                           
  2792                           ; 1 bytes @ 0x7E
  2793  0000DE                     	ds	1
  2794  0000DF                     AssemblePacket@macCmdIdx:
  2795                           	opt stack 0
  2796                           
  2797                           ; 1 bytes @ 0x7F
  2798  0000DF                     	ds	1
  2799  0000E0                     AssemblePacket@bufferIndex:
  2800                           	opt stack 0
  2801  0000E0                     PrepareJoinRequestFrame@mic:
  2802                           	opt stack 0
  2803                           
  2804                           ; 4 bytes @ 0x80
  2805  0000E0                     	ds	1
  2806  0000E1                     ??_LORAWAN_Send:
  2807                           
  2808                           ; 1 bytes @ 0x81
  2809  0000E1                     	ds	1
  2810  0000E2                     LORAWAN_Send@result:
  2811                           	opt stack 0
  2812                           
  2813                           ; 1 bytes @ 0x82
  2814  0000E2                     	ds	1
  2815  0000E3                     LORAWAN_Send@confirmed:
  2816                           	opt stack 0
  2817                           
  2818                           ; 1 bytes @ 0x83
  2819  0000E3                     	ds	1
  2820  0000E4                     ??_LORAWAN_RxDone:
  2821  0000E4                     ??_SwTimersExecute:
  2822  0000E4                     PrepareJoinRequestFrame@mhdr:
  2823                           	opt stack 0
  2824                           
  2825                           ; 1 bytes @ 0x84
  2826  0000E4                     	ds	1
  2827  0000E5                     PrepareJoinRequestFrame@bufferIndex:
  2828                           	opt stack 0
  2829                           
  2830                           ; 1 bytes @ 0x85
  2831  0000E5                     	ds	1
  2832  0000E6                     PrepareJoinRequestFrame@iCtr:
  2833                           	opt stack 0
  2834                           
  2835                           ; 1 bytes @ 0x86
  2836  0000E6                     	ds	1
  2837  0000E7                     LORAWAN_Join@bufferIndex:
  2838                           	opt stack 0
  2839                           
  2840                           ; 1 bytes @ 0x87
  2841  0000E7                     	ds	1
  2842  0000E8                     SwTimersExecute@i:
  2843                           	opt stack 0
  2844  0000E8                     LORAWAN_Join@result:
  2845                           	opt stack 0
  2846                           
  2847                           ; 1 bytes @ 0x88
  2848  0000E8                     	ds	1
  2849  0000E9                     RADIO_RxDone@irqFlags:
  2850                           	opt stack 0
  2851  0000E9                     RADIO_FSKPayloadReady@irqFlags:
  2852                           	opt stack 0
  2853  0000E9                     LORAWAN_Join@activationTypeNew:
  2854                           	opt stack 0
  2855                           
  2856                           ; 1 bytes @ 0x89
  2857  0000E9                     	ds	1
  2858  0000EA                     RADIO_RxDone@i:
  2859                           	opt stack 0
  2860  0000EA                     RADIO_FSKPayloadReady@i:
  2861                           	opt stack 0
  2862                           
  2863                           ; 1 bytes @ 0x8A
  2864  0000EA                     	ds	1
  2865  0000EB                     ??_RADIO_DIO0:
  2866                           
  2867                           ; 1 bytes @ 0x8B
  2868  0000EB                     	ds	2
  2869  0000ED                     RADIO_DIO0@dioMapping:
  2870                           	opt stack 0
  2871                           
  2872                           ; 1 bytes @ 0x8D
  2873  0000ED                     	ds	1
  2874  0000EE                     RADIO_DIO0@opMode:
  2875                           	opt stack 0
  2876                           
  2877                           ; 1 bytes @ 0x8E
  2878  0000EE                     	ds	1
  2879  0000EF                     ??_main:
  2880                           
  2881                           ; 1 bytes @ 0x8F
  2882  0000EF                     	ds	1
  2883                           tblptru	equ	0xFF8
  2884                           tblptrh	equ	0xFF7
  2885                           tblptrl	equ	0xFF6
  2886                           tablat	equ	0xFF5
  2887                           postinc0	equ	0xFEE
  2888                           wreg	equ	0xFE8
  2889                           postdec2	equ	0xFDD
  2890                           fsr2h	equ	0xFDA
  2891                           fsr2l	equ	0xFD9
  2892                           
  2893                           	psect	cstackCOMRAM
  2894  000001                     __pcstackCOMRAM:
  2895                           	opt stack 0
  2896  000001                     ?i2_TMR1_ReadTimer:
  2897                           	opt stack 0
  2898  000001                     i2TMR1_WriteTimer@timerVal:
  2899                           	opt stack 0
  2900                           
  2901                           ; 2 bytes @ 0x0
  2902  000001                     	ds	2
  2903  000003                     ??i2_TMR1_ReadTimer:
  2904  000003                     
  2905                           ; 1 bytes @ 0x2
  2906  000003                     	ds	2
  2907  000005                     i2TMR1_ReadTimer@readVal:
  2908                           	opt stack 0
  2909                           
  2910                           ; 2 bytes @ 0x4
  2911  000005                     	ds	2
  2912  000007                     i2TMR1_ReadTimer@readValHigh:
  2913                           	opt stack 0
  2914                           
  2915                           ; 1 bytes @ 0x6
  2916  000007                     	ds	1
  2917  000008                     i2TMR1_ReadTimer@readValLow:
  2918                           	opt stack 0
  2919                           
  2920                           ; 1 bytes @ 0x7
  2921  000008                     	ds	1
  2922  000009                     ?i2_TMR_SwapTimer:
  2923                           	opt stack 0
  2924  000009                     ?i2_TMR_GetDeltaTime:
  2925                           	opt stack 0
  2926  000009                     i2TMR_SwapTimer@timerVal:
  2927                           	opt stack 0
  2928                           
  2929                           ; 2 bytes @ 0x8
  2930  000009                     	ds	2
  2931  00000B                     
  2932                           ; 1 bytes @ 0xA
  2933  00000B                     	ds	2
  2934  00000D                     ??i2_TMR_GetDeltaTime:
  2935                           
  2936                           ; 1 bytes @ 0xC
  2937  00000D                     	ds	12
  2938  000019                     ?i2_SwTimersInterrupt:
  2939                           	opt stack 0
  2940                           
  2941                           ; 4 bytes @ 0x18
  2942  000019                     	ds	4
  2943  00001D                     
  2944                           ; 1 bytes @ 0x1C
  2945  00001D                     	ds	4
  2946  000021                     i2SwTimersInterrupt@timeElapsed:
  2947                           	opt stack 0
  2948                           
  2949                           ; 4 bytes @ 0x20
  2950  000021                     	ds	4
  2951  000025                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2952                           	opt stack 0
  2953                           
  2954                           ; 4 bytes @ 0x24
  2955  000025                     	ds	4
  2956  000029                     i2SwTimersInterrupt@i:
  2957                           	opt stack 0
  2958                           
  2959                           ; 1 bytes @ 0x28
  2960  000029                     	ds	1
  2961  00002A                     ??_INTERRUPT_InterruptManager:
  2962                           
  2963                           ; 1 bytes @ 0x29
  2964  00002A                     	ds	8
  2965                           tblptru	equ	0xFF8
  2966                           tblptrh	equ	0xFF7
  2967                           tblptrl	equ	0xFF6
  2968                           tablat	equ	0xFF5
  2969                           postinc0	equ	0xFEE
  2970                           wreg	equ	0xFE8
  2971                           postdec2	equ	0xFDD
  2972                           fsr2h	equ	0xFDA
  2973                           fsr2l	equ	0xFD9
  2974                           
  2975 ;;
  2976 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2977 ;;
  2978 ;; *************** function _main *****************
  2979 ;; Defined at:
  2980 ;;		line 24 in file "main.c"
  2981 ;; Parameters:    Size  Location     Type
  2982 ;;		None
  2983 ;; Auto vars:     Size  Location     Type
  2984 ;;		None
  2985 ;; Return value:  Size  Location     Type
  2986 ;;                  1    wreg      void 
  2987 ;; Registers used:
  2988 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2989 ;; Tracked objects:
  2990 ;;		On entry : 0/0
  2991 ;;		On exit  : F/1
  2992 ;;		Unchanged: 0/0
  2993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2994 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2995 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2996 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2997 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;Total ram usage:        1 bytes
  2999 ;; Hardware stack levels required when called:   19
  3000 ;; This function calls:
  3001 ;;		_LORAWAN_GetState
  3002 ;;		_LORAWAN_Init
  3003 ;;		_LORAWAN_Join
  3004 ;;		_LORAWAN_Mainloop
  3005 ;;		_LORAWAN_SetApplicationSessionKey
  3006 ;;		_LORAWAN_SetDeviceAddress
  3007 ;;		_LORAWAN_SetNetworkSessionKey
  3008 ;;		_LoRaSleep
  3009 ;;		_LoRaWakeUp
  3010 ;;		_SYSTEM_Initialize
  3011 ;;		_SysConfigSleep
  3012 ;;		_printf
  3013 ;;		_readAndSend
  3014 ;; This function is called by:
  3015 ;;		Startup code after reset
  3016 ;; This function uses a non-reentrant model
  3017 ;;
  3018                           
  3019                           	psect	text0
  3020  00442C                     __ptext0:
  3021                           	opt stack 0
  3022  00442C                     _main:
  3023                           	opt stack 12
  3024                           
  3025                           ;main.c: 27: SYSTEM_Initialize();
  3026                           
  3027                           ; BSR set to: 1
  3028                           ;incstack = 0
  3029  00442C  EC66  F03A         	call	_SYSTEM_Initialize	;wreg free
  3030                           
  3031                           ; BSR set to: 0
  3032                           ;main.c: 28: SysConfigSleep();
  3033  004430  EC54  F03A         	call	_SysConfigSleep	;wreg free
  3034                           
  3035                           ; BSR set to: 15
  3036                           ;main.c: 29: printf("\n\rSystem Initialized\n\r");
  3037  004434  0EB4               	movlw	low STR_1
  3038  004436  0100               	movlb	0	; () banked
  3039  004438  6F77               	movwf	printf@f& (0+255),b
  3040  00443A  0EFF               	movlw	high STR_1
  3041  00443C  6F78               	movwf	(printf@f+1)& (0+255),b
  3042  00443E  EC7C  F024         	call	_printf	;wreg free
  3043                           
  3044                           ; BSR set to: 0
  3045  004442  848C               	bsf	3980,2,c	;volatile
  3046                           
  3047                           ; BSR set to: 0
  3048                           ;main.c: 31: printf("\n\rPowering up SX1276 module\n\r");
  3049  004444  0E40               	movlw	low STR_2
  3050  004446  6F77               	movwf	printf@f& (0+255),b
  3051  004448  0EFF               	movlw	high STR_2
  3052  00444A  6F78               	movwf	(printf@f+1)& (0+255),b
  3053  00444C  EC7C  F024         	call	_printf	;wreg free
  3054                           
  3055                           ; BSR set to: 0
  3056                           ;main.c: 33: (INTCONbits.GIE = 1);
  3057  004450  8EF2               	bsf	intcon,7,c	;volatile
  3058                           
  3059                           ; BSR set to: 0
  3060                           ;main.c: 34: (INTCONbits.PEIE = 1);
  3061  004452  8CF2               	bsf	intcon,6,c	;volatile
  3062                           
  3063                           ; BSR set to: 0
  3064                           ;main.c: 36: printf("Initializing LoRaWAN Stack\n\r");
  3065  004454  0E7B               	movlw	low STR_3
  3066  004456  6F77               	movwf	printf@f& (0+255),b
  3067  004458  0EFF               	movlw	high STR_3
  3068  00445A  6F78               	movwf	(printf@f+1)& (0+255),b
  3069  00445C  EC7C  F024         	call	_printf	;wreg free
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;main.c: 37: LORAWAN_Init(RxDataDone, RxJoinResponse);
  3073  004460  0EDC               	movlw	low _RxDataDone
  3074  004462  6FA6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  3075  004464  0E7A               	movlw	high _RxDataDone
  3076  004466  6FA7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  3077  004468  0E48               	movlw	low _RxJoinResponse
  3078  00446A  6FA8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  3079  00446C  0E78               	movlw	high _RxJoinResponse
  3080  00446E  6FA9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  3081  004470  EC20  F034         	call	_LORAWAN_Init	;wreg free
  3082                           
  3083                           ;main.c: 38: LORAWAN_SetNetworkSessionKey(nwkSKey);
  3084  004474  0EE3               	movlw	low _nwkSKey
  3085  004476  0100               	movlb	0	; () banked
  3086  004478  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  3087  00447A  0E01               	movlw	high _nwkSKey
  3088  00447C  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  3089  00447E  ECB2  F039         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  3090                           
  3091                           ;main.c: 39: LORAWAN_SetApplicationSessionKey(appSKey);
  3092  004482  0ED3               	movlw	low _appSKey
  3093  004484  0100               	movlb	0	; () banked
  3094  004486  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  3095  004488  0E01               	movlw	high _appSKey
  3096  00448A  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  3097  00448C  ECC7  F039         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  3098                           
  3099                           ;main.c: 40: LORAWAN_SetDeviceAddress(devAddr);
  3100  004490  0E78               	movlw	120
  3101  004492  0100               	movlb	0	; () banked
  3102  004494  6F64               	movwf	LORAWAN_SetDeviceAddress@deviceAddressNew& (0+255),b
  3103  004496  0E56               	movlw	86
  3104  004498  6F65               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+1)& (0+255),b
  3105  00449A  0E34               	movlw	52
  3106  00449C  6F66               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+2)& (0+255),b
  3107  00449E  0E12               	movlw	18
  3108  0044A0  6F67               	movwf	(LORAWAN_SetDeviceAddress@deviceAddressNew+3)& (0+255),b
  3109  0044A2  ECF4  F03B         	call	_LORAWAN_SetDeviceAddress	;wreg free
  3110                           
  3111                           ; BSR set to: 2
  3112                           ;main.c: 41: LORAWAN_Join(ABP);
  3113  0044A6  0E01               	movlw	1
  3114  0044A8  EC13  F02F         	call	_LORAWAN_Join
  3115                           
  3116                           ;main.c: 42: printf("LoRaWAN Stack Initialized\n\r");
  3117  0044AC  0E98               	movlw	low STR_4
  3118  0044AE  0100               	movlb	0	; () banked
  3119  0044B0  6F77               	movwf	printf@f& (0+255),b
  3120  0044B2  0EFF               	movlw	high STR_4
  3121  0044B4  6F78               	movwf	(printf@f+1)& (0+255),b
  3122  0044B6  EC7C  F024         	call	_printf	;wreg free
  3123                           
  3124                           ; BSR set to: 0
  3125  0044BA  8889               	bsf	3977,4,c	;volatile
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;main.c: 46: TimeToSend = 1;
  3129  0044BC  0E01               	movlw	1
  3130  0044BE  0101               	movlb	1	; () banked
  3131  0044C0  6F77               	movwf	_TimeToSend& (0+255),b
  3132                           
  3133                           ;main.c: 48: while(JoinedServer == 0){
  3134  0044C2  D002               	goto	l16490
  3135  0044C4                     l16488:
  3136                           
  3137                           ; BSR set to: 1
  3138                           ;main.c: 49: LORAWAN_Mainloop();
  3139  0044C4  ECFB  F037         	call	_LORAWAN_Mainloop	;wreg free
  3140  0044C8                     l16490:
  3141  0044C8  0101               	movlb	1	; () banked
  3142  0044CA  5176               	movf	_JoinedServer& (0+255),w,b
  3143  0044CC  E0FB               	bz	l16488
  3144  0044CE                     l2707:
  3145                           
  3146                           ;main.c: 53: {
  3147                           ;main.c: 54: PORTAbits.RA4 = 1;
  3148  0044CE  8880               	bsf	3968,4,c	;volatile
  3149                           
  3150                           ;main.c: 55: LORAWAN_Mainloop();
  3151  0044D0  ECFB  F037         	call	_LORAWAN_Mainloop	;wreg free
  3152                           
  3153                           ;main.c: 57: if(TimeToSend == 1){
  3154  0044D4  0101               	movlb	1	; () banked
  3155  0044D6  0577               	decf	_TimeToSend& (0+255),w,b
  3156  0044D8  E10A               	bnz	l16502
  3157                           
  3158                           ; BSR set to: 1
  3159                           ;main.c: 58: printf("It's time to send a packet...\n\r");
  3160  0044DA  0E20               	movlw	low STR_5
  3161  0044DC  0100               	movlb	0	; () banked
  3162  0044DE  6F77               	movwf	printf@f& (0+255),b
  3163  0044E0  0EFF               	movlw	high STR_5
  3164  0044E2  6F78               	movwf	(printf@f+1)& (0+255),b
  3165  0044E4  EC7C  F024         	call	_printf	;wreg free
  3166                           
  3167                           ; BSR set to: 0
  3168                           ;main.c: 59: readAndSend();
  3169  0044E8  EC7D  F035         	call	_readAndSend	;wreg free
  3170                           
  3171                           ; BSR set to: 1
  3172                           ;main.c: 60: TimeToSend = 0;
  3173  0044EC  6B77               	clrf	_TimeToSend& (0+255),b
  3174  0044EE                     l16502:
  3175                           
  3176                           ; BSR set to: 1
  3177                           ;main.c: 61: }
  3178                           ;main.c: 63: if(LORAWAN_GetState() == IDLE){
  3179  0044EE  EC3E  F03D         	call	_LORAWAN_GetState	;wreg free
  3180  0044F2  0900               	iorlw	0
  3181  0044F4  E1EC               	bnz	l2707
  3182                           
  3183                           ; BSR set to: 2
  3184                           
  3185                           ;main.c: 64: do { LATCbits.LATC0 = 1; } while(0);
  3186  0044F6  808B               	bsf	3979,0,c	;volatile
  3187                           
  3188                           ; BSR set to: 2
  3189                           ;main.c: 65: printf("Done pulled high..\n\r");
  3190  0044F8  0ECB               	movlw	low STR_6
  3191  0044FA  0100               	movlb	0	; () banked
  3192  0044FC  6F77               	movwf	printf@f& (0+255),b
  3193  0044FE  0EFF               	movlw	high STR_6
  3194  004500  6F78               	movwf	(printf@f+1)& (0+255),b
  3195  004502  EC7C  F024         	call	_printf	;wreg free
  3196                           
  3197                           ; BSR set to: 0
  3198  004506  948C               	bcf	3980,2,c	;volatile
  3199                           
  3200                           ; BSR set to: 0
  3201                           ;main.c: 67: printf("Powering off SX1276 module\n\r");
  3202  004508  0E5E               	movlw	low STR_7
  3203  00450A  6F77               	movwf	printf@f& (0+255),b
  3204  00450C  0EFF               	movlw	high STR_7
  3205  00450E  6F78               	movwf	(printf@f+1)& (0+255),b
  3206  004510  EC7C  F024         	call	_printf	;wreg free
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;main.c: 68: _delay((unsigned long)((1)*(16000000/4000.0)));
  3210  004514  0E06               	movlw	6
  3211  004516  6FEF               	movwf	??_main& (0+255),b
  3212  004518  0E30               	movlw	48
  3213  00451A                     u19887:
  3214  00451A  2EE8               	decfsz	wreg,f,c
  3215  00451C  D7FE               	goto	u19887
  3216  00451E  2FEF               	decfsz	??_main& (0+255),f,b
  3217  004520  D7FC               	goto	u19887
  3218  004522  D000               	nop2	
  3219                           
  3220                           ;main.c: 69: printf("Going to sleep!\n\r");
  3221  004524  0EE0               	movlw	low STR_8
  3222  004526  0100               	movlb	0	; () banked
  3223  004528  6F77               	movwf	printf@f& (0+255),b
  3224  00452A  0EFF               	movlw	high STR_8
  3225  00452C  6F78               	movwf	(printf@f+1)& (0+255),b
  3226  00452E  EC7C  F024         	call	_printf	;wreg free
  3227                           
  3228                           ; BSR set to: 0
  3229  004532  908B               	bcf	3979,0,c	;volatile
  3230                           
  3231                           ; BSR set to: 0
  3232                           ;main.c: 71: SysConfigSleep();
  3233  004534  EC54  F03A         	call	_SysConfigSleep	;wreg free
  3234                           
  3235                           ; BSR set to: 15
  3236                           ;main.c: 72: LoRaSleep();
  3237  004538  EC01  F03B         	call	_LoRaSleep	;wreg free
  3238                           
  3239                           ; BSR set to: 15
  3240                           ;main.c: 73: PORTAbits.RA4 = 0;
  3241  00453C  9880               	bcf	3968,4,c	;volatile
  3242  00453E  0003               	sleep		;# 
  3243  004540  848C               	bsf	3980,2,c	;volatile
  3244                           
  3245                           ;main.c: 79: printf("I'm awake!\n\r");
  3246  004542  0EF2               	movlw	low STR_9
  3247  004544  0100               	movlb	0	; () banked
  3248  004546  6F77               	movwf	printf@f& (0+255),b
  3249  004548  0EFF               	movlw	high STR_9
  3250  00454A  6F78               	movwf	(printf@f+1)& (0+255),b
  3251  00454C  EC7C  F024         	call	_printf	;wreg free
  3252                           
  3253                           ; BSR set to: 0
  3254                           ;main.c: 80: LoRaWakeUp();
  3255  004550  EC22  F03D         	call	_LoRaWakeUp	;wreg free
  3256                           
  3257                           ;main.c: 81: printf("Powering up SX1276 module\n\r");
  3258  004554  0E42               	movlw	low (STR_2+2)
  3259  004556  0100               	movlb	0	; () banked
  3260  004558  6F77               	movwf	printf@f& (0+255),b
  3261  00455A  0EFF               	movlw	high (STR_2+2)
  3262  00455C  6F78               	movwf	(printf@f+1)& (0+255),b
  3263  00455E  EC7C  F024         	call	_printf	;wreg free
  3264                           
  3265                           ; BSR set to: 0
  3266                           ;main.c: 82: TimeToSend = 1;
  3267  004562  0E01               	movlw	1
  3268  004564  0101               	movlb	1	; () banked
  3269  004566  6F77               	movwf	_TimeToSend& (0+255),b
  3270  004568  D7B2               	goto	l2707
  3271  00456A                     __end_of_main:
  3272                           	opt stack 0
  3273                           tblptru	equ	0xFF8
  3274                           tblptrh	equ	0xFF7
  3275                           tblptrl	equ	0xFF6
  3276                           tablat	equ	0xFF5
  3277                           intcon	equ	0xFF2
  3278                           postinc0	equ	0xFEE
  3279                           wreg	equ	0xFE8
  3280                           postdec2	equ	0xFDD
  3281                           fsr2h	equ	0xFDA
  3282                           fsr2l	equ	0xFD9
  3283                           
  3284 ;; *************** function _readAndSend *****************
  3285 ;; Defined at:
  3286 ;;		line 103 in file "main.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;		None
  3289 ;; Auto vars:     Size  Location     Type
  3290 ;;		None
  3291 ;; Return value:  Size  Location     Type
  3292 ;;                  1    wreg      void 
  3293 ;; Registers used:
  3294 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3295 ;; Tracked objects:
  3296 ;;		On entry : F/0
  3297 ;;		On exit  : F/1
  3298 ;;		Unchanged: 0/0
  3299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3300 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3303 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;Total ram usage:        0 bytes
  3305 ;; Hardware stack levels used:    1
  3306 ;; Hardware stack levels required when called:   14
  3307 ;; This function calls:
  3308 ;;		_ADC_GetConversion
  3309 ;;		_LORAWAN_Send
  3310 ;;		_printf
  3311 ;; This function is called by:
  3312 ;;		_main
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316                           	psect	text1
  3317  006AFA                     __ptext1:
  3318                           	opt stack 0
  3319  006AFA                     _readAndSend:
  3320                           	opt stack 16
  3321                           
  3322                           ; BSR set to: 0
  3323                           ;main.c: 104: ADCON0bits.ADON = 1;
  3324                           
  3325                           ; BSR set to: 1
  3326                           ;incstack = 0
  3327  006AFA  80C2               	bsf	4034,0,c	;volatile
  3328                           
  3329                           ; BSR set to: 0
  3330                           ;main.c: 106: payload[0] = ADC_GetConversion(TEMP);
  3331  006AFC  0E0F               	movlw	15
  3332  006AFE  ECA6  F038         	call	_ADC_GetConversion
  3333  006B02  C064  F1BF         	movff	?_ADC_GetConversion,_payload
  3334  006B06  C065  F1C0         	movff	?_ADC_GetConversion+1,_payload+1
  3335                           
  3336                           ; BSR set to: 0
  3337                           ;main.c: 108: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  3338  006B0A  0E02               	movlw	2
  3339  006B0C  0101               	movlb	1	; () banked
  3340  006B0E  6F6B               	movwf	LORAWAN_Send@port& (0+255),b
  3341  006B10  0EBF               	movlw	low _payload
  3342  006B12  6F6C               	movwf	LORAWAN_Send@buffer& (0+255),b
  3343  006B14  0E01               	movlw	high _payload
  3344  006B16  6F6D               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  3345  006B18  0E02               	movlw	2
  3346  006B1A  6F6E               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  3347  006B1C  0E00               	movlw	0
  3348  006B1E  EC5A  F02B         	call	_LORAWAN_Send
  3349                           
  3350                           ;main.c: 109: printf("Packet #%d sent: temperature value: %d\n\r", count, payload[0]);
  3351  006B22  0EF7               	movlw	low STR_12
  3352  006B24  0100               	movlb	0	; () banked
  3353  006B26  6F77               	movwf	printf@f& (0+255),b
  3354  006B28  0EFE               	movlw	high STR_12
  3355  006B2A  6F78               	movwf	(printf@f+1)& (0+255),b
  3356  006B2C  C1D1  F079         	movff	_count,?_printf+2
  3357  006B30  C1D2  F07A         	movff	_count+1,?_printf+3
  3358  006B34  C1BF  F07B         	movff	_payload,?_printf+4
  3359  006B38  C1C0  F07C         	movff	_payload+1,?_printf+5
  3360  006B3C  EC7C  F024         	call	_printf	;wreg free
  3361                           
  3362                           ; BSR set to: 0
  3363                           ;main.c: 110: count++;
  3364  006B40  0101               	movlb	1	; () banked
  3365  006B42  4BD1               	infsnz	_count& (0+255),f,b
  3366  006B44  2BD2               	incf	(_count+1)& (0+255),f,b
  3367                           
  3368                           ; BSR set to: 1
  3369  006B46  0012               	return		;funcret
  3370  006B48                     __end_of_readAndSend:
  3371                           	opt stack 0
  3372                           tblptru	equ	0xFF8
  3373                           tblptrh	equ	0xFF7
  3374                           tblptrl	equ	0xFF6
  3375                           tablat	equ	0xFF5
  3376                           intcon	equ	0xFF2
  3377                           postinc0	equ	0xFEE
  3378                           wreg	equ	0xFE8
  3379                           postdec2	equ	0xFDD
  3380                           fsr2h	equ	0xFDA
  3381                           fsr2l	equ	0xFD9
  3382                           
  3383 ;; *************** function _ADC_GetConversion *****************
  3384 ;; Defined at:
  3385 ;;		line 106 in file "mcc_generated_files/adc.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;  channel         1    wreg     enum E7757
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  channel         1    8[BANK0 ] enum E7757
  3390 ;; Return value:  Size  Location     Type
  3391 ;;                  2    4[BANK0 ] unsigned int 
  3392 ;; Registers used:
  3393 ;;		wreg, status,2, status,0
  3394 ;; Tracked objects:
  3395 ;;		On entry : F/0
  3396 ;;		On exit  : F/0
  3397 ;;		Unchanged: 0/0
  3398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3399 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3400 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3401 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;Total ram usage:        5 bytes
  3404 ;; Hardware stack levels used:    1
  3405 ;; Hardware stack levels required when called:    7
  3406 ;; This function calls:
  3407 ;;		Nothing
  3408 ;; This function is called by:
  3409 ;;		_readAndSend
  3410 ;; This function uses a non-reentrant model
  3411 ;;
  3412                           
  3413                           	psect	text2
  3414  00714C                     __ptext2:
  3415                           	opt stack 0
  3416  00714C                     _ADC_GetConversion:
  3417                           	opt stack 22
  3418                           
  3419                           ; BSR set to: 1
  3420                           ;incstack = 0
  3421                           ;ADC_GetConversion@channel stored from wreg
  3422  00714C  6F68               	movwf	ADC_GetConversion@channel& (0+255),b
  3423                           
  3424                           ;adc.c: 109: ADCON0bits.CHS = channel;
  3425  00714E  C068  F066         	movff	ADC_GetConversion@channel,??_ADC_GetConversion
  3426  007152  0100               	movlb	0	; () banked
  3427  007154  4766               	rlncf	??_ADC_GetConversion& (0+255),f,b
  3428  007156  4766               	rlncf	??_ADC_GetConversion& (0+255),f,b
  3429  007158  50C2               	movf	4034,w,c	;volatile
  3430  00715A  1966               	xorwf	??_ADC_GetConversion& (0+255),w,b
  3431  00715C  0B83               	andlw	-125
  3432  00715E  1966               	xorwf	??_ADC_GetConversion& (0+255),w,b
  3433  007160  6EC2               	movwf	4034,c	;volatile
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;adc.c: 112: ADCON0bits.ADON = 1;
  3437  007162  80C2               	bsf	4034,0,c	;volatile
  3438                           
  3439                           ; BSR set to: 0
  3440                           ;adc.c: 115: ADCON0bits.GO_nDONE = 1;
  3441  007164  82C2               	bsf	4034,1,c	;volatile
  3442  007166                     l2568:
  3443  007166  B2C2               	btfsc	4034,1,c	;volatile
  3444  007168  D7FE               	goto	l2568
  3445                           
  3446                           ;adc.c: 120: }
  3447                           ;adc.c: 122: return ((ADRESH << 8) + ADRESL);
  3448  00716A  50C4               	movf	4036,w,c	;volatile
  3449  00716C  0100               	movlb	0	; () banked
  3450  00716E  6F67               	movwf	(??_ADC_GetConversion+1)& (0+255),b
  3451  007170  6B66               	clrf	??_ADC_GetConversion& (0+255),b
  3452  007172  50C3               	movf	4035,w,c	;volatile
  3453  007174  2566               	addwf	??_ADC_GetConversion& (0+255),w,b
  3454  007176  6F64               	movwf	?_ADC_GetConversion& (0+255),b
  3455  007178  0E00               	movlw	0
  3456  00717A  2167               	addwfc	(??_ADC_GetConversion+1)& (0+255),w,b
  3457  00717C  6F65               	movwf	(?_ADC_GetConversion+1)& (0+255),b
  3458                           
  3459                           ; BSR set to: 0
  3460  00717E  0012               	return		;funcret
  3461  007180                     __end_of_ADC_GetConversion:
  3462                           	opt stack 0
  3463                           tblptru	equ	0xFF8
  3464                           tblptrh	equ	0xFF7
  3465                           tblptrl	equ	0xFF6
  3466                           tablat	equ	0xFF5
  3467                           intcon	equ	0xFF2
  3468                           postinc0	equ	0xFEE
  3469                           wreg	equ	0xFE8
  3470                           postdec2	equ	0xFDD
  3471                           fsr2h	equ	0xFDA
  3472                           fsr2l	equ	0xFD9
  3473                           
  3474 ;; *************** function _SysConfigSleep *****************
  3475 ;; Defined at:
  3476 ;;		line 114 in file "main.c"
  3477 ;; Parameters:    Size  Location     Type
  3478 ;;		None
  3479 ;; Auto vars:     Size  Location     Type
  3480 ;;		None
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		None
  3485 ;; Tracked objects:
  3486 ;;		On entry : F/0
  3487 ;;		On exit  : F/F
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3494 ;;Total ram usage:        0 bytes
  3495 ;; Hardware stack levels used:    1
  3496 ;; Hardware stack levels required when called:    7
  3497 ;; This function calls:
  3498 ;;		Nothing
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text3
  3505  0074A8                     __ptext3:
  3506                           	opt stack 0
  3507  0074A8                     _SysConfigSleep:
  3508                           	opt stack 23
  3509                           
  3510                           ; BSR set to: 0
  3511                           ;main.c: 117: ADCON0bits.ADON = 0;
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;incstack = 0
  3515  0074A8  90C2               	bcf	4034,0,c	;volatile
  3516                           
  3517                           ;main.c: 118: UART2MD = 1;
  3518  0074AA  010F               	movlb	15	; () banked
  3519  0074AC  8F3F               	bsf	63,7,b	;volatile
  3520                           
  3521                           ;main.c: 120: TMR6MD = 1;
  3522  0074AE  8B3F               	bsf	63,5,b	;volatile
  3523                           
  3524                           ;main.c: 121: TMR5MD = 1;
  3525  0074B0  893F               	bsf	63,4,b	;volatile
  3526                           
  3527                           ;main.c: 122: TMR4MD = 1;
  3528  0074B2  873F               	bsf	63,3,b	;volatile
  3529                           
  3530                           ;main.c: 123: TMR2MD = 1;
  3531  0074B4  833F               	bsf	63,1,b	;volatile
  3532                           
  3533                           ;main.c: 126: MSSP1MD = 1;
  3534  0074B6  8D3E               	bsf	62,6,b	;volatile
  3535                           
  3536                           ;main.c: 128: CCP5MD = 1;
  3537  0074B8  893E               	bsf	62,4,b	;volatile
  3538                           
  3539                           ;main.c: 129: CCP4MD = 1;
  3540  0074BA  873E               	bsf	62,3,b	;volatile
  3541                           
  3542                           ;main.c: 130: CCP3MD = 1;
  3543  0074BC  853E               	bsf	62,2,b	;volatile
  3544                           
  3545                           ;main.c: 131: CCP2MD = 1;
  3546  0074BE  833E               	bsf	62,1,b	;volatile
  3547                           
  3548                           ;main.c: 132: CCP1MD = 1;
  3549  0074C0  813E               	bsf	62,0,b	;volatile
  3550                           
  3551                           ;main.c: 133: CTMUMD = 1;
  3552  0074C2  873D               	bsf	61,3,b	;volatile
  3553                           
  3554                           ;main.c: 134: CMP2MD = 1;
  3555  0074C4  853D               	bsf	61,2,b	;volatile
  3556                           
  3557                           ;main.c: 135: CMP1MD = 1;
  3558  0074C6  833D               	bsf	61,1,b	;volatile
  3559                           
  3560                           ;main.c: 138: IDLEN = 0;
  3561  0074C8  9ED3               	bcf	4051,7,c	;volatile
  3562                           
  3563                           ; BSR set to: 15
  3564  0074CA  0012               	return		;funcret
  3565  0074CC                     __end_of_SysConfigSleep:
  3566                           	opt stack 0
  3567                           tblptru	equ	0xFF8
  3568                           tblptrh	equ	0xFF7
  3569                           tblptrl	equ	0xFF6
  3570                           tablat	equ	0xFF5
  3571                           intcon	equ	0xFF2
  3572                           postinc0	equ	0xFEE
  3573                           wreg	equ	0xFE8
  3574                           postdec2	equ	0xFDD
  3575                           fsr2h	equ	0xFDA
  3576                           fsr2l	equ	0xFD9
  3577                           
  3578 ;; *************** function _SYSTEM_Initialize *****************
  3579 ;; Defined at:
  3580 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3581 ;; Parameters:    Size  Location     Type
  3582 ;;		None
  3583 ;; Auto vars:     Size  Location     Type
  3584 ;;		None
  3585 ;; Return value:  Size  Location     Type
  3586 ;;                  1    wreg      void 
  3587 ;; Registers used:
  3588 ;;		wreg, status,2, status,0, cstack
  3589 ;; Tracked objects:
  3590 ;;		On entry : 0/0
  3591 ;;		On exit  : F/0
  3592 ;;		Unchanged: 0/0
  3593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3594 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3596 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3597 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3598 ;;Total ram usage:        0 bytes
  3599 ;; Hardware stack levels used:    1
  3600 ;; Hardware stack levels required when called:   10
  3601 ;; This function calls:
  3602 ;;		_ADC_Initialize
  3603 ;;		_EUSART1_Initialize
  3604 ;;		_EXT_INT_Initialize
  3605 ;;		_INTERRUPT_Initialize
  3606 ;;		_LORAWAN_PlatformInit
  3607 ;;		_OSCILLATOR_Initialize
  3608 ;;		_PIN_MANAGER_Initialize
  3609 ;;		_SPI2_Initialize
  3610 ;;		_TMR1_Initialize
  3611 ;; This function is called by:
  3612 ;;		_main
  3613 ;; This function uses a non-reentrant model
  3614 ;;
  3615                           
  3616                           	psect	text4
  3617  0074CC                     __ptext4:
  3618                           	opt stack 0
  3619  0074CC                     _SYSTEM_Initialize:
  3620                           	opt stack 20
  3621                           
  3622                           ;mcc.c: 114: INTERRUPT_Initialize();
  3623                           
  3624                           ; BSR set to: 15
  3625                           ;incstack = 0
  3626  0074CC  EC5B  F03D         	call	_INTERRUPT_Initialize	;wreg free
  3627                           
  3628                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3629  0074D0  EC7D  F034         	call	_PIN_MANAGER_Initialize	;wreg free
  3630                           
  3631                           ; BSR set to: 0
  3632                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3633  0074D4  ECB8  F03C         	call	_OSCILLATOR_Initialize	;wreg free
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;mcc.c: 117: SPI2_Initialize();
  3637  0074D8  ECD6  F03C         	call	_SPI2_Initialize	;wreg free
  3638                           
  3639                           ;mcc.c: 118: ADC_Initialize();
  3640  0074DC  EC84  F03C         	call	_ADC_Initialize	;wreg free
  3641                           
  3642                           ;mcc.c: 119: TMR1_Initialize();
  3643  0074E0  EC86  F039         	call	_TMR1_Initialize	;wreg free
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;mcc.c: 120: EXT_INT_Initialize();
  3647  0074E4  EC58  F039         	call	_EXT_INT_Initialize	;wreg free
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;mcc.c: 121: EUSART1_Initialize();
  3651  0074E8  EC3C  F03C         	call	_EUSART1_Initialize	;wreg free
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;mcc.c: 122: LORAWAN_PlatformInit();
  3655  0074EC  EFE1  F03A         	goto	_LORAWAN_PlatformInit	;wreg free
  3656  0074F0                     __end_of_SYSTEM_Initialize:
  3657                           	opt stack 0
  3658                           tblptru	equ	0xFF8
  3659                           tblptrh	equ	0xFF7
  3660                           tblptrl	equ	0xFF6
  3661                           tablat	equ	0xFF5
  3662                           intcon	equ	0xFF2
  3663                           postinc0	equ	0xFEE
  3664                           wreg	equ	0xFE8
  3665                           postdec2	equ	0xFDD
  3666                           fsr2h	equ	0xFDA
  3667                           fsr2l	equ	0xFD9
  3668                           
  3669 ;; *************** function _TMR1_Initialize *****************
  3670 ;; Defined at:
  3671 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;		None
  3674 ;; Auto vars:     Size  Location     Type
  3675 ;;		None
  3676 ;; Return value:  Size  Location     Type
  3677 ;;                  1    wreg      void 
  3678 ;; Registers used:
  3679 ;;		wreg, status,2, status,0, cstack
  3680 ;; Tracked objects:
  3681 ;;		On entry : 0/0
  3682 ;;		On exit  : F/0
  3683 ;;		Unchanged: 0/0
  3684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3686 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3688 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3689 ;;Total ram usage:        0 bytes
  3690 ;; Hardware stack levels used:    1
  3691 ;; Hardware stack levels required when called:    8
  3692 ;; This function calls:
  3693 ;;		_TMR1_SetInterruptHandler
  3694 ;;		_TMR1_StartTimer
  3695 ;; This function is called by:
  3696 ;;		_SYSTEM_Initialize
  3697 ;; This function uses a non-reentrant model
  3698 ;;
  3699                           
  3700                           	psect	text5
  3701  00730C                     __ptext5:
  3702                           	opt stack 0
  3703  00730C                     _TMR1_Initialize:
  3704                           	opt stack 21
  3705                           
  3706                           ;tmr1.c: 67: T1CON = 0x34;
  3707                           
  3708                           ; BSR set to: 0
  3709                           ;incstack = 0
  3710  00730C  0E34               	movlw	52
  3711  00730E  6ECD               	movwf	4045,c	;volatile
  3712                           
  3713                           ;tmr1.c: 70: T1GCON = 0x00;
  3714  007310  6ACC               	clrf	4044,c	;volatile
  3715                           
  3716                           ;tmr1.c: 73: TMR1H = 0x0B;
  3717  007312  0E0B               	movlw	11
  3718  007314  6ECF               	movwf	4047,c	;volatile
  3719                           
  3720                           ;tmr1.c: 76: TMR1L = 0xDC;
  3721  007316  0EDC               	movlw	220
  3722  007318  6ECE               	movwf	4046,c	;volatile
  3723                           
  3724                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3725  00731A  CFCE F05E          	movff	4046,_timer1ReloadVal	;volatile
  3726  00731E  CFCF F05F          	movff	4047,_timer1ReloadVal+1	;volatile
  3727                           
  3728                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3729  007322  909E               	bcf	3998,0,c	;volatile
  3730                           
  3731                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3732  007324  809D               	bsf	3997,0,c	;volatile
  3733                           
  3734                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3735  007326  0EDE               	movlw	low _TMR1_DefaultInterruptHandler
  3736  007328  0100               	movlb	0	; () banked
  3737  00732A  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3738  00732C  0E7A               	movlw	high _TMR1_DefaultInterruptHandler
  3739  00732E  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3740  007330  ECE7  F03C         	call	_TMR1_SetInterruptHandler	;wreg free
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;tmr1.c: 91: TMR1_StartTimer();
  3744  007334  EF57  F03D         	goto	_TMR1_StartTimer	;wreg free
  3745  007338                     __end_of_TMR1_Initialize:
  3746                           	opt stack 0
  3747                           tblptru	equ	0xFF8
  3748                           tblptrh	equ	0xFF7
  3749                           tblptrl	equ	0xFF6
  3750                           tablat	equ	0xFF5
  3751                           intcon	equ	0xFF2
  3752                           postinc0	equ	0xFEE
  3753                           wreg	equ	0xFE8
  3754                           postdec2	equ	0xFDD
  3755                           fsr2h	equ	0xFDA
  3756                           fsr2l	equ	0xFD9
  3757                           
  3758 ;; *************** function _TMR1_StartTimer *****************
  3759 ;; Defined at:
  3760 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;		None
  3765 ;; Return value:  Size  Location     Type
  3766 ;;                  1    wreg      void 
  3767 ;; Registers used:
  3768 ;;		None
  3769 ;; Tracked objects:
  3770 ;;		On entry : F/0
  3771 ;;		On exit  : F/0
  3772 ;;		Unchanged: F/0
  3773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;Total ram usage:        0 bytes
  3779 ;; Hardware stack levels used:    1
  3780 ;; Hardware stack levels required when called:    7
  3781 ;; This function calls:
  3782 ;;		Nothing
  3783 ;; This function is called by:
  3784 ;;		_TMR1_Initialize
  3785 ;; This function uses a non-reentrant model
  3786 ;;
  3787                           
  3788                           	psect	text6
  3789  007AAE                     __ptext6:
  3790                           	opt stack 0
  3791  007AAE                     _TMR1_StartTimer:
  3792                           	opt stack 21
  3793                           
  3794                           ; BSR set to: 0
  3795                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3796                           
  3797                           ; BSR set to: 0
  3798                           ;incstack = 0
  3799  007AAE  80CD               	bsf	4045,0,c	;volatile
  3800                           
  3801                           ; BSR set to: 0
  3802  007AB0  0012               	return		;funcret
  3803  007AB2                     __end_of_TMR1_StartTimer:
  3804                           	opt stack 0
  3805                           tblptru	equ	0xFF8
  3806                           tblptrh	equ	0xFF7
  3807                           tblptrl	equ	0xFF6
  3808                           tablat	equ	0xFF5
  3809                           intcon	equ	0xFF2
  3810                           postinc0	equ	0xFEE
  3811                           wreg	equ	0xFE8
  3812                           postdec2	equ	0xFDD
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           
  3816 ;; *************** function _PIN_MANAGER_Initialize *****************
  3817 ;; Defined at:
  3818 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  3819 ;; Parameters:    Size  Location     Type
  3820 ;;		None
  3821 ;; Auto vars:     Size  Location     Type
  3822 ;;		None
  3823 ;; Return value:  Size  Location     Type
  3824 ;;                  1    wreg      void 
  3825 ;; Registers used:
  3826 ;;		wreg, status,2, status,0, cstack
  3827 ;; Tracked objects:
  3828 ;;		On entry : 0/0
  3829 ;;		On exit  : F/0
  3830 ;;		Unchanged: 0/0
  3831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3833 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3835 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3836 ;;Total ram usage:        0 bytes
  3837 ;; Hardware stack levels used:    1
  3838 ;; Hardware stack levels required when called:    8
  3839 ;; This function calls:
  3840 ;;		_IOCB4_SetInterruptHandler
  3841 ;;		_IOCB5_SetInterruptHandler
  3842 ;; This function is called by:
  3843 ;;		_SYSTEM_Initialize
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text7
  3848  0068FA                     __ptext7:
  3849                           	opt stack 0
  3850  0068FA                     _PIN_MANAGER_Initialize:
  3851                           	opt stack 21
  3852                           
  3853                           ;pin_manager.c: 58: LATE = 0x00;
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;incstack = 0
  3857  0068FA  6A8D               	clrf	3981,c	;volatile
  3858                           
  3859                           ;pin_manager.c: 59: LATD = 0x00;
  3860  0068FC  6A8C               	clrf	3980,c	;volatile
  3861                           
  3862                           ;pin_manager.c: 60: LATA = 0x00;
  3863  0068FE  6A89               	clrf	3977,c	;volatile
  3864                           
  3865                           ;pin_manager.c: 61: LATB = 0x00;
  3866  006900  6A8A               	clrf	3978,c	;volatile
  3867                           
  3868                           ;pin_manager.c: 62: LATC = 0x00;
  3869  006902  6A8B               	clrf	3979,c	;volatile
  3870                           
  3871                           ;pin_manager.c: 67: TRISE = 0x07;
  3872  006904  0E07               	movlw	7
  3873  006906  6E96               	movwf	3990,c	;volatile
  3874                           
  3875                           ;pin_manager.c: 68: TRISA = 0xEF;
  3876  006908  0EEF               	movlw	239
  3877  00690A  6E92               	movwf	3986,c	;volatile
  3878                           
  3879                           ;pin_manager.c: 69: TRISB = 0xFF;
  3880  00690C  6893               	setf	3987,c	;volatile
  3881                           
  3882                           ;pin_manager.c: 70: TRISC = 0xBE;
  3883  00690E  0EBE               	movlw	190
  3884  006910  6E94               	movwf	3988,c	;volatile
  3885                           
  3886                           ;pin_manager.c: 71: TRISD = 0xE2;
  3887  006912  0EE2               	movlw	226
  3888  006914  6E95               	movwf	3989,c	;volatile
  3889                           
  3890                           ;pin_manager.c: 76: ANSELC = 0xB8;
  3891  006916  0EB8               	movlw	184
  3892  006918  010F               	movlb	15	; () banked
  3893  00691A  6F3A               	movwf	58,b	;volatile
  3894                           
  3895                           ;pin_manager.c: 77: ANSELB = 0x08;
  3896  00691C  0E08               	movlw	8
  3897  00691E  6F39               	movwf	57,b	;volatile
  3898                           
  3899                           ;pin_manager.c: 78: ANSELD = 0xE0;
  3900  006920  0EE0               	movlw	224
  3901  006922  6F3B               	movwf	59,b	;volatile
  3902                           
  3903                           ;pin_manager.c: 79: ANSELE = 0x07;
  3904  006924  0E07               	movlw	7
  3905  006926  6F3C               	movwf	60,b	;volatile
  3906                           
  3907                           ;pin_manager.c: 80: ANSELA = 0x2F;
  3908  006928  0E2F               	movlw	47
  3909  00692A  6F38               	movwf	56,b	;volatile
  3910                           
  3911                           ; BSR set to: 15
  3912                           ;pin_manager.c: 85: WPUB = 0xFF;
  3913  00692C  6861               	setf	3937,c	;volatile
  3914                           
  3915                           ; BSR set to: 15
  3916                           ;pin_manager.c: 86: INTCON2bits.nRBPU = 0;
  3917  00692E  9EF1               	bcf	intcon2,7,c	;volatile
  3918                           
  3919                           ; BSR set to: 15
  3920                           ;pin_manager.c: 94: IOCBbits.IOCB4 = 1;
  3921  006930  8862               	bsf	3938,4,c	;volatile
  3922                           
  3923                           ; BSR set to: 15
  3924                           ;pin_manager.c: 95: IOCBbits.IOCB5 = 1;
  3925  006932  8A62               	bsf	3938,5,c	;volatile
  3926                           
  3927                           ; BSR set to: 15
  3928                           ;pin_manager.c: 98: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3929  006934  0EE2               	movlw	low _IOCB4_DefaultInterruptHandler
  3930  006936  0100               	movlb	0	; () banked
  3931  006938  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3932  00693A  0E7A               	movlw	high _IOCB4_DefaultInterruptHandler
  3933  00693C  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3934  00693E  ECEC  F03C         	call	_IOCB4_SetInterruptHandler	;wreg free
  3935                           
  3936                           ; BSR set to: 0
  3937                           ;pin_manager.c: 99: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  3938  006942  0EE0               	movlw	low _IOCB5_DefaultInterruptHandler
  3939  006944  6F64               	movwf	IOCB5_SetInterruptHandler@InterruptHandler& (0+255),b
  3940  006946  0E7A               	movlw	high _IOCB5_DefaultInterruptHandler
  3941  006948  6F65               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3942  00694A  ECE2  F03C         	call	_IOCB5_SetInterruptHandler	;wreg free
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;pin_manager.c: 102: INTCONbits.RBIE = 1;
  3946  00694E  86F2               	bsf	intcon,3,c	;volatile
  3947                           
  3948                           ; BSR set to: 0
  3949  006950  0012               	return		;funcret
  3950  006952                     __end_of_PIN_MANAGER_Initialize:
  3951                           	opt stack 0
  3952                           tblptru	equ	0xFF8
  3953                           tblptrh	equ	0xFF7
  3954                           tblptrl	equ	0xFF6
  3955                           tablat	equ	0xFF5
  3956                           intcon	equ	0xFF2
  3957                           intcon2	equ	0xFF1
  3958                           postinc0	equ	0xFEE
  3959                           wreg	equ	0xFE8
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           
  3964 ;; *************** function _IOCB5_SetInterruptHandler *****************
  3965 ;; Defined at:
  3966 ;;		line 170 in file "mcc_generated_files/pin_manager.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3969 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0
  3976 ;; Tracked objects:
  3977 ;;		On entry : F/0
  3978 ;;		On exit  : F/0
  3979 ;;		Unchanged: F/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3981 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3984 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3985 ;;Total ram usage:        2 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:    7
  3988 ;; This function calls:
  3989 ;;		Nothing
  3990 ;; This function is called by:
  3991 ;;		_PIN_MANAGER_Initialize
  3992 ;; This function uses a non-reentrant model
  3993 ;;
  3994                           
  3995                           	psect	text8
  3996  0079C4                     __ptext8:
  3997                           	opt stack 0
  3998  0079C4                     _IOCB5_SetInterruptHandler:
  3999                           	opt stack 21
  4000                           
  4001                           ; BSR set to: 0
  4002                           ;pin_manager.c: 171: IOCB5_InterruptHandler = InterruptHandler;
  4003                           
  4004                           ; BSR set to: 0
  4005                           ;incstack = 0
  4006  0079C4  C064  F1F9         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  4007  0079C8  C065  F1FA         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  4008                           
  4009                           ; BSR set to: 0
  4010  0079CC  0012               	return		;funcret
  4011  0079CE                     __end_of_IOCB5_SetInterruptHandler:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           postdec2	equ	0xFDD
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           
  4025 ;; *************** function _OSCILLATOR_Initialize *****************
  4026 ;; Defined at:
  4027 ;;		line 125 in file "mcc_generated_files/mcc.c"
  4028 ;; Parameters:    Size  Location     Type
  4029 ;;		None
  4030 ;; Auto vars:     Size  Location     Type
  4031 ;;		None
  4032 ;; Return value:  Size  Location     Type
  4033 ;;                  1    wreg      void 
  4034 ;; Registers used:
  4035 ;;		wreg, status,2
  4036 ;; Tracked objects:
  4037 ;;		On entry : F/0
  4038 ;;		On exit  : F/0
  4039 ;;		Unchanged: F/0
  4040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4042 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;Total ram usage:        0 bytes
  4046 ;; Hardware stack levels used:    1
  4047 ;; Hardware stack levels required when called:    7
  4048 ;; This function calls:
  4049 ;;		Nothing
  4050 ;; This function is called by:
  4051 ;;		_SYSTEM_Initialize
  4052 ;; This function uses a non-reentrant model
  4053 ;;
  4054                           
  4055                           	psect	text9
  4056  007970                     __ptext9:
  4057                           	opt stack 0
  4058  007970                     _OSCILLATOR_Initialize:
  4059                           	opt stack 22
  4060                           
  4061                           ; BSR set to: 0
  4062                           ;mcc.c: 128: OSCCON = 0x70;
  4063                           
  4064                           ; BSR set to: 0
  4065                           ;incstack = 0
  4066  007970  0E70               	movlw	112
  4067  007972  6ED3               	movwf	4051,c	;volatile
  4068                           
  4069                           ;mcc.c: 130: OSCCON2 = 0x04;
  4070  007974  0E04               	movlw	4
  4071  007976  6ED2               	movwf	4050,c	;volatile
  4072                           
  4073                           ; BSR set to: 0
  4074                           ;mcc.c: 132: OSCTUNE = 0x00;
  4075  007978  6A9B               	clrf	3995,c	;volatile
  4076                           
  4077                           ; BSR set to: 0
  4078  00797A  0012               	return		;funcret
  4079  00797C                     __end_of_OSCILLATOR_Initialize:
  4080                           	opt stack 0
  4081                           tblptru	equ	0xFF8
  4082                           tblptrh	equ	0xFF7
  4083                           tblptrl	equ	0xFF6
  4084                           tablat	equ	0xFF5
  4085                           intcon	equ	0xFF2
  4086                           intcon2	equ	0xFF1
  4087                           postinc0	equ	0xFEE
  4088                           wreg	equ	0xFE8
  4089                           postdec2	equ	0xFDD
  4090                           fsr2h	equ	0xFDA
  4091                           fsr2l	equ	0xFD9
  4092                           
  4093 ;; *************** function _LORAWAN_PlatformInit *****************
  4094 ;; Defined at:
  4095 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4096 ;; Parameters:    Size  Location     Type
  4097 ;;		None
  4098 ;; Auto vars:     Size  Location     Type
  4099 ;;		None
  4100 ;; Return value:  Size  Location     Type
  4101 ;;                  1    wreg      void 
  4102 ;; Registers used:
  4103 ;;		wreg, status,2, status,0, cstack
  4104 ;; Tracked objects:
  4105 ;;		On entry : F/0
  4106 ;;		On exit  : F/0
  4107 ;;		Unchanged: 0/0
  4108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4113 ;;Total ram usage:        0 bytes
  4114 ;; Hardware stack levels used:    1
  4115 ;; Hardware stack levels required when called:    9
  4116 ;; This function calls:
  4117 ;;		_DIO0_ISR_Lora_Init
  4118 ;;		_DIO1_ISR_Lora_Init
  4119 ;;		_DIO2_ISR_Lora_Init
  4120 ;;		_DIO3_ISR_Lora_Init
  4121 ;;		_DIO4_ISR_Lora_Init
  4122 ;;		_DIO5_ISR_Lora_Init
  4123 ;;		_SystemTimerInit
  4124 ;;		_TMR_ISR_Lora_Init
  4125 ;; This function is called by:
  4126 ;;		_SYSTEM_Initialize
  4127 ;; This function uses a non-reentrant model
  4128 ;;
  4129                           
  4130                           	psect	text10
  4131  0075C2                     __ptext10:
  4132                           	opt stack 0
  4133  0075C2                     _LORAWAN_PlatformInit:
  4134                           	opt stack 20
  4135                           
  4136                           ; BSR set to: 0
  4137                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  4138                           
  4139                           ; BSR set to: 0
  4140                           ;incstack = 0
  4141  0075C2  ECBE  F03C         	call	_TMR_ISR_Lora_Init	;wreg free
  4142                           
  4143                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  4144  0075C6  ECD0  F03C         	call	_DIO0_ISR_Lora_Init	;wreg free
  4145                           
  4146                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  4147  0075CA  ECCA  F03C         	call	_DIO1_ISR_Lora_Init	;wreg free
  4148                           
  4149                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  4150  0075CE  ECC4  F03C         	call	_DIO2_ISR_Lora_Init	;wreg free
  4151                           
  4152                           ; BSR set to: 0
  4153                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  4154  0075D2  EC6C  F03D         	call	_DIO3_ISR_Lora_Init	;wreg free
  4155                           
  4156                           ; BSR set to: 0
  4157                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  4158  0075D6  EC6B  F03D         	call	_DIO4_ISR_Lora_Init	;wreg free
  4159                           
  4160                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  4161  0075DA  EC42  F03D         	call	_DIO5_ISR_Lora_Init	;wreg free
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;lorawan_init.c: 81: SystemTimerInit();
  4165  0075DE  EF59  F03D         	goto	_SystemTimerInit	;wreg free
  4166  0075E2                     __end_of_LORAWAN_PlatformInit:
  4167                           	opt stack 0
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           intcon	equ	0xFF2
  4173                           intcon2	equ	0xFF1
  4174                           postinc0	equ	0xFEE
  4175                           wreg	equ	0xFE8
  4176                           postdec2	equ	0xFDD
  4177                           fsr2h	equ	0xFDA
  4178                           fsr2l	equ	0xFD9
  4179                           
  4180 ;; *************** function _TMR_ISR_Lora_Init *****************
  4181 ;; Defined at:
  4182 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4183 ;; Parameters:    Size  Location     Type
  4184 ;;		None
  4185 ;; Auto vars:     Size  Location     Type
  4186 ;;		None
  4187 ;; Return value:  Size  Location     Type
  4188 ;;                  1    wreg      void 
  4189 ;; Registers used:
  4190 ;;		wreg, status,2, status,0, cstack
  4191 ;; Tracked objects:
  4192 ;;		On entry : F/0
  4193 ;;		On exit  : F/0
  4194 ;;		Unchanged: 0/0
  4195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4200 ;;Total ram usage:        0 bytes
  4201 ;; Hardware stack levels used:    1
  4202 ;; Hardware stack levels required when called:    8
  4203 ;; This function calls:
  4204 ;;		_TMR1_SetInterruptHandler
  4205 ;; This function is called by:
  4206 ;;		_LORAWAN_PlatformInit
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text11
  4211  00797C                     __ptext11:
  4212                           	opt stack 0
  4213  00797C                     _TMR_ISR_Lora_Init:
  4214                           	opt stack 20
  4215                           
  4216                           ; BSR set to: 0
  4217                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;incstack = 0
  4221  00797C  0E7E               	movlw	low _TMR_ISR_lora
  4222  00797E  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4223  007980  0E6C               	movlw	high _TMR_ISR_lora
  4224  007982  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4225  007984  EFE7  F03C         	goto	_TMR1_SetInterruptHandler	;wreg free
  4226  007988                     __end_of_TMR_ISR_Lora_Init:
  4227                           	opt stack 0
  4228                           tblptru	equ	0xFF8
  4229                           tblptrh	equ	0xFF7
  4230                           tblptrl	equ	0xFF6
  4231                           tablat	equ	0xFF5
  4232                           intcon	equ	0xFF2
  4233                           intcon2	equ	0xFF1
  4234                           postinc0	equ	0xFEE
  4235                           wreg	equ	0xFE8
  4236                           postdec2	equ	0xFDD
  4237                           fsr2h	equ	0xFDA
  4238                           fsr2l	equ	0xFD9
  4239                           
  4240 ;; *************** function _TMR1_SetInterruptHandler *****************
  4241 ;; Defined at:
  4242 ;;		line 190 in file "mcc_generated_files/tmr1.c"
  4243 ;; Parameters:    Size  Location     Type
  4244 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4245 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4246 ;; Auto vars:     Size  Location     Type
  4247 ;;		None
  4248 ;; Return value:  Size  Location     Type
  4249 ;;                  1    wreg      void 
  4250 ;; Registers used:
  4251 ;;		wreg, status,2, status,0
  4252 ;; Tracked objects:
  4253 ;;		On entry : F/0
  4254 ;;		On exit  : F/0
  4255 ;;		Unchanged: F/0
  4256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4257 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4260 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4261 ;;Total ram usage:        2 bytes
  4262 ;; Hardware stack levels used:    1
  4263 ;; Hardware stack levels required when called:    7
  4264 ;; This function calls:
  4265 ;;		Nothing
  4266 ;; This function is called by:
  4267 ;;		_TMR_ISR_Lora_Init
  4268 ;;		_TMR1_Initialize
  4269 ;; This function uses a non-reentrant model
  4270 ;;
  4271                           
  4272                           	psect	text12
  4273  0079CE                     __ptext12:
  4274                           	opt stack 0
  4275  0079CE                     _TMR1_SetInterruptHandler:
  4276                           	opt stack 21
  4277                           
  4278                           ; BSR set to: 0
  4279                           ;tmr1.c: 191: TMR1_InterruptHandler = InterruptHandler;
  4280                           
  4281                           ; BSR set to: 0
  4282                           ;incstack = 0
  4283  0079CE  C064  F1FB         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4284  0079D2  C065  F1FC         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4285                           
  4286                           ; BSR set to: 0
  4287  0079D6  0012               	return		;funcret
  4288  0079D8                     __end_of_TMR1_SetInterruptHandler:
  4289                           	opt stack 0
  4290                           tblptru	equ	0xFF8
  4291                           tblptrh	equ	0xFF7
  4292                           tblptrl	equ	0xFF6
  4293                           tablat	equ	0xFF5
  4294                           intcon	equ	0xFF2
  4295                           intcon2	equ	0xFF1
  4296                           postinc0	equ	0xFEE
  4297                           wreg	equ	0xFE8
  4298                           postdec2	equ	0xFDD
  4299                           fsr2h	equ	0xFDA
  4300                           fsr2l	equ	0xFD9
  4301                           
  4302 ;; *************** function _SystemTimerInit *****************
  4303 ;; Defined at:
  4304 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4305 ;; Parameters:    Size  Location     Type
  4306 ;;		None
  4307 ;; Auto vars:     Size  Location     Type
  4308 ;;		None
  4309 ;; Return value:  Size  Location     Type
  4310 ;;                  1    wreg      void 
  4311 ;; Registers used:
  4312 ;;		None
  4313 ;; Tracked objects:
  4314 ;;		On entry : F/0
  4315 ;;		On exit  : F/0
  4316 ;;		Unchanged: 0/0
  4317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4322 ;;Total ram usage:        0 bytes
  4323 ;; Hardware stack levels used:    1
  4324 ;; Hardware stack levels required when called:    7
  4325 ;; This function calls:
  4326 ;;		Nothing
  4327 ;; This function is called by:
  4328 ;;		_LORAWAN_PlatformInit
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text13
  4333  007AB2                     __ptext13:
  4334                           	opt stack 0
  4335  007AB2                     _SystemTimerInit:
  4336                           	opt stack 21
  4337                           
  4338                           ; BSR set to: 0
  4339                           ;sw_timer.c: 137: allocatedTimers = 0;
  4340                           
  4341                           ; BSR set to: 0
  4342                           ;incstack = 0
  4343  007AB2  6BF2               	clrf	_allocatedTimers& (0+255),b	;volatile
  4344                           
  4345                           ; BSR set to: 0
  4346  007AB4  0012               	return		;funcret
  4347  007AB6                     __end_of_SystemTimerInit:
  4348                           	opt stack 0
  4349                           tblptru	equ	0xFF8
  4350                           tblptrh	equ	0xFF7
  4351                           tblptrl	equ	0xFF6
  4352                           tablat	equ	0xFF5
  4353                           intcon	equ	0xFF2
  4354                           intcon2	equ	0xFF1
  4355                           postinc0	equ	0xFEE
  4356                           wreg	equ	0xFE8
  4357                           postdec2	equ	0xFDD
  4358                           fsr2h	equ	0xFDA
  4359                           fsr2l	equ	0xFD9
  4360                           
  4361 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4362 ;; Defined at:
  4363 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;		None
  4366 ;; Auto vars:     Size  Location     Type
  4367 ;;		None
  4368 ;; Return value:  Size  Location     Type
  4369 ;;                  1    wreg      void 
  4370 ;; Registers used:
  4371 ;;		wreg, status,2, status,0, cstack
  4372 ;; Tracked objects:
  4373 ;;		On entry : F/0
  4374 ;;		On exit  : F/0
  4375 ;;		Unchanged: 0/0
  4376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4377 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4378 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4380 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4381 ;;Total ram usage:        0 bytes
  4382 ;; Hardware stack levels used:    1
  4383 ;; Hardware stack levels required when called:    8
  4384 ;; This function calls:
  4385 ;;		_INT0_SetInterruptHandler
  4386 ;; This function is called by:
  4387 ;;		_LORAWAN_PlatformInit
  4388 ;; This function uses a non-reentrant model
  4389 ;;
  4390                           
  4391                           	psect	text14
  4392  007A84                     __ptext14:
  4393                           	opt stack 0
  4394  007A84                     _DIO5_ISR_Lora_Init:
  4395                           	opt stack 20
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;incstack = 0
  4402  007A84  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4403  007A86  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4404  007A88  0C00               	retlw	0	;wreg free
  4405  007A8A                     __end_of_DIO5_ISR_Lora_Init:
  4406                           	opt stack 0
  4407                           tblptru	equ	0xFF8
  4408                           tblptrh	equ	0xFF7
  4409                           tblptrl	equ	0xFF6
  4410                           tablat	equ	0xFF5
  4411                           intcon	equ	0xFF2
  4412                           intcon2	equ	0xFF1
  4413                           postinc0	equ	0xFEE
  4414                           wreg	equ	0xFE8
  4415                           postdec2	equ	0xFDD
  4416                           fsr2h	equ	0xFDA
  4417                           fsr2l	equ	0xFD9
  4418                           
  4419 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4420 ;; Defined at:
  4421 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4422 ;; Parameters:    Size  Location     Type
  4423 ;;		None
  4424 ;; Auto vars:     Size  Location     Type
  4425 ;;		None
  4426 ;; Return value:  Size  Location     Type
  4427 ;;                  1    wreg      void 
  4428 ;; Registers used:
  4429 ;;		None
  4430 ;; Tracked objects:
  4431 ;;		On entry : F/0
  4432 ;;		On exit  : F/0
  4433 ;;		Unchanged: F/0
  4434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4435 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4438 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4439 ;;Total ram usage:        0 bytes
  4440 ;; Hardware stack levels used:    1
  4441 ;; Hardware stack levels required when called:    7
  4442 ;; This function calls:
  4443 ;;		Nothing
  4444 ;; This function is called by:
  4445 ;;		_LORAWAN_PlatformInit
  4446 ;; This function uses a non-reentrant model
  4447 ;;
  4448                           
  4449                           	psect	text15
  4450  007AD6                     __ptext15:
  4451                           	opt stack 0
  4452  007AD6                     _DIO4_ISR_Lora_Init:
  4453                           	opt stack 21
  4454                           
  4455                           ; BSR set to: 0
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;incstack = 0
  4459  007AD6  0012               	return		;funcret
  4460  007AD8                     __end_of_DIO4_ISR_Lora_Init:
  4461                           	opt stack 0
  4462                           tblptru	equ	0xFF8
  4463                           tblptrh	equ	0xFF7
  4464                           tblptrl	equ	0xFF6
  4465                           tablat	equ	0xFF5
  4466                           intcon	equ	0xFF2
  4467                           intcon2	equ	0xFF1
  4468                           postinc0	equ	0xFEE
  4469                           wreg	equ	0xFE8
  4470                           postdec2	equ	0xFDD
  4471                           fsr2h	equ	0xFDA
  4472                           fsr2l	equ	0xFD9
  4473                           
  4474 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4475 ;; Defined at:
  4476 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4477 ;; Parameters:    Size  Location     Type
  4478 ;;		None
  4479 ;; Auto vars:     Size  Location     Type
  4480 ;;		None
  4481 ;; Return value:  Size  Location     Type
  4482 ;;                  1    wreg      void 
  4483 ;; Registers used:
  4484 ;;		None
  4485 ;; Tracked objects:
  4486 ;;		On entry : F/0
  4487 ;;		On exit  : F/0
  4488 ;;		Unchanged: F/0
  4489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4491 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4493 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4494 ;;Total ram usage:        0 bytes
  4495 ;; Hardware stack levels used:    1
  4496 ;; Hardware stack levels required when called:    7
  4497 ;; This function calls:
  4498 ;;		Nothing
  4499 ;; This function is called by:
  4500 ;;		_LORAWAN_PlatformInit
  4501 ;; This function uses a non-reentrant model
  4502 ;;
  4503                           
  4504                           	psect	text16
  4505  007AD8                     __ptext16:
  4506                           	opt stack 0
  4507  007AD8                     _DIO3_ISR_Lora_Init:
  4508                           	opt stack 21
  4509                           
  4510                           ; BSR set to: 0
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;incstack = 0
  4514  007AD8  0012               	return		;funcret
  4515  007ADA                     __end_of_DIO3_ISR_Lora_Init:
  4516                           	opt stack 0
  4517                           tblptru	equ	0xFF8
  4518                           tblptrh	equ	0xFF7
  4519                           tblptrl	equ	0xFF6
  4520                           tablat	equ	0xFF5
  4521                           intcon	equ	0xFF2
  4522                           intcon2	equ	0xFF1
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           postdec2	equ	0xFDD
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           
  4529 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4530 ;; Defined at:
  4531 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4532 ;; Parameters:    Size  Location     Type
  4533 ;;		None
  4534 ;; Auto vars:     Size  Location     Type
  4535 ;;		None
  4536 ;; Return value:  Size  Location     Type
  4537 ;;                  1    wreg      void 
  4538 ;; Registers used:
  4539 ;;		wreg, status,2, status,0, cstack
  4540 ;; Tracked objects:
  4541 ;;		On entry : F/0
  4542 ;;		On exit  : F/0
  4543 ;;		Unchanged: 0/0
  4544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4549 ;;Total ram usage:        0 bytes
  4550 ;; Hardware stack levels used:    1
  4551 ;; Hardware stack levels required when called:    8
  4552 ;; This function calls:
  4553 ;;		_IOCB4_SetInterruptHandler
  4554 ;; This function is called by:
  4555 ;;		_LORAWAN_PlatformInit
  4556 ;; This function uses a non-reentrant model
  4557 ;;
  4558                           
  4559                           	psect	text17
  4560  007988                     __ptext17:
  4561                           	opt stack 0
  4562  007988                     _DIO2_ISR_Lora_Init:
  4563                           	opt stack 20
  4564                           
  4565                           ; BSR set to: 0
  4566                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4567                           
  4568                           ; BSR set to: 0
  4569                           ;incstack = 0
  4570  007988  0ECA               	movlw	low _DIO2_ISR_Lora
  4571  00798A  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4572  00798C  0E7A               	movlw	high _DIO2_ISR_Lora
  4573  00798E  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4574  007990  EFEC  F03C         	goto	_IOCB4_SetInterruptHandler	;wreg free
  4575  007994                     __end_of_DIO2_ISR_Lora_Init:
  4576                           	opt stack 0
  4577                           tblptru	equ	0xFF8
  4578                           tblptrh	equ	0xFF7
  4579                           tblptrl	equ	0xFF6
  4580                           tablat	equ	0xFF5
  4581                           intcon	equ	0xFF2
  4582                           intcon2	equ	0xFF1
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           postdec2	equ	0xFDD
  4586                           fsr2h	equ	0xFDA
  4587                           fsr2l	equ	0xFD9
  4588                           
  4589 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4590 ;; Defined at:
  4591 ;;		line 141 in file "mcc_generated_files/pin_manager.c"
  4592 ;; Parameters:    Size  Location     Type
  4593 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4594 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4595 ;; Auto vars:     Size  Location     Type
  4596 ;;		None
  4597 ;; Return value:  Size  Location     Type
  4598 ;;                  1    wreg      void 
  4599 ;; Registers used:
  4600 ;;		wreg, status,2, status,0
  4601 ;; Tracked objects:
  4602 ;;		On entry : F/0
  4603 ;;		On exit  : F/0
  4604 ;;		Unchanged: F/0
  4605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4606 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4607 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4608 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4609 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4610 ;;Total ram usage:        2 bytes
  4611 ;; Hardware stack levels used:    1
  4612 ;; Hardware stack levels required when called:    7
  4613 ;; This function calls:
  4614 ;;		Nothing
  4615 ;; This function is called by:
  4616 ;;		_PIN_MANAGER_Initialize
  4617 ;;		_DIO2_ISR_Lora_Init
  4618 ;; This function uses a non-reentrant model
  4619 ;;
  4620                           
  4621                           	psect	text18
  4622  0079D8                     __ptext18:
  4623                           	opt stack 0
  4624  0079D8                     _IOCB4_SetInterruptHandler:
  4625                           	opt stack 21
  4626                           
  4627                           ; BSR set to: 0
  4628                           ;pin_manager.c: 142: IOCB4_InterruptHandler = InterruptHandler;
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;incstack = 0
  4632  0079D8  C064  F1F7         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4633  0079DC  C065  F1F8         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4634                           
  4635                           ; BSR set to: 0
  4636  0079E0  0012               	return		;funcret
  4637  0079E2                     __end_of_IOCB4_SetInterruptHandler:
  4638                           	opt stack 0
  4639                           tblptru	equ	0xFF8
  4640                           tblptrh	equ	0xFF7
  4641                           tblptrl	equ	0xFF6
  4642                           tablat	equ	0xFF5
  4643                           intcon	equ	0xFF2
  4644                           intcon2	equ	0xFF1
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postdec2	equ	0xFDD
  4648                           fsr2h	equ	0xFDA
  4649                           fsr2l	equ	0xFD9
  4650                           
  4651 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4652 ;; Defined at:
  4653 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;		None
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;		None
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2, status,0, cstack
  4662 ;; Tracked objects:
  4663 ;;		On entry : F/0
  4664 ;;		On exit  : F/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4667 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;Total ram usage:        0 bytes
  4672 ;; Hardware stack levels used:    1
  4673 ;; Hardware stack levels required when called:    8
  4674 ;; This function calls:
  4675 ;;		_INT2_SetInterruptHandler
  4676 ;; This function is called by:
  4677 ;;		_LORAWAN_PlatformInit
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text19
  4682  007994                     __ptext19:
  4683                           	opt stack 0
  4684  007994                     _DIO1_ISR_Lora_Init:
  4685                           	opt stack 20
  4686                           
  4687                           ; BSR set to: 0
  4688                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4689                           
  4690                           ; BSR set to: 0
  4691                           ;incstack = 0
  4692  007994  0ECE               	movlw	low _DIO1_ISR_Lora
  4693  007996  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4694  007998  0E7A               	movlw	high _DIO1_ISR_Lora
  4695  00799A  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4696  00799C  EFF1  F03C         	goto	_INT2_SetInterruptHandler	;wreg free
  4697  0079A0                     __end_of_DIO1_ISR_Lora_Init:
  4698                           	opt stack 0
  4699                           tblptru	equ	0xFF8
  4700                           tblptrh	equ	0xFF7
  4701                           tblptrl	equ	0xFF6
  4702                           tablat	equ	0xFF5
  4703                           intcon	equ	0xFF2
  4704                           intcon2	equ	0xFF1
  4705                           postinc0	equ	0xFEE
  4706                           wreg	equ	0xFE8
  4707                           postdec2	equ	0xFDD
  4708                           fsr2h	equ	0xFDA
  4709                           fsr2l	equ	0xFD9
  4710                           
  4711 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4712 ;; Defined at:
  4713 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;		None
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;		None
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2, status,0, cstack
  4722 ;; Tracked objects:
  4723 ;;		On entry : F/0
  4724 ;;		On exit  : F/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        0 bytes
  4732 ;; Hardware stack levels used:    1
  4733 ;; Hardware stack levels required when called:    8
  4734 ;; This function calls:
  4735 ;;		_INT1_SetInterruptHandler
  4736 ;; This function is called by:
  4737 ;;		_LORAWAN_PlatformInit
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text20
  4742  0079A0                     __ptext20:
  4743                           	opt stack 0
  4744  0079A0                     _DIO0_ISR_Lora_Init:
  4745                           	opt stack 20
  4746                           
  4747                           ; BSR set to: 0
  4748                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4749                           
  4750                           ; BSR set to: 0
  4751                           ;incstack = 0
  4752  0079A0  0ED2               	movlw	low _DIO0_ISR_Lora
  4753  0079A2  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4754  0079A4  0E7A               	movlw	high _DIO0_ISR_Lora
  4755  0079A6  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4756  0079A8  EFF6  F03C         	goto	_INT1_SetInterruptHandler	;wreg free
  4757  0079AC                     __end_of_DIO0_ISR_Lora_Init:
  4758                           	opt stack 0
  4759                           tblptru	equ	0xFF8
  4760                           tblptrh	equ	0xFF7
  4761                           tblptrl	equ	0xFF6
  4762                           tablat	equ	0xFF5
  4763                           intcon	equ	0xFF2
  4764                           intcon2	equ	0xFF1
  4765                           postinc0	equ	0xFEE
  4766                           wreg	equ	0xFE8
  4767                           postdec2	equ	0xFDD
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           
  4771 ;; *************** function _INTERRUPT_Initialize *****************
  4772 ;; Defined at:
  4773 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4774 ;; Parameters:    Size  Location     Type
  4775 ;;		None
  4776 ;; Auto vars:     Size  Location     Type
  4777 ;;		None
  4778 ;; Return value:  Size  Location     Type
  4779 ;;                  1    wreg      void 
  4780 ;; Registers used:
  4781 ;;		None
  4782 ;; Tracked objects:
  4783 ;;		On entry : 0/0
  4784 ;;		On exit  : 0/0
  4785 ;;		Unchanged: 0/0
  4786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4787 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4788 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4790 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4791 ;;Total ram usage:        0 bytes
  4792 ;; Hardware stack levels used:    1
  4793 ;; Hardware stack levels required when called:    7
  4794 ;; This function calls:
  4795 ;;		Nothing
  4796 ;; This function is called by:
  4797 ;;		_SYSTEM_Initialize
  4798 ;; This function uses a non-reentrant model
  4799 ;;
  4800                           
  4801                           	psect	text21
  4802  007AB6                     __ptext21:
  4803                           	opt stack 0
  4804  007AB6                     _INTERRUPT_Initialize:
  4805                           	opt stack 22
  4806                           
  4807                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4808                           
  4809                           ; BSR set to: 0
  4810                           ;incstack = 0
  4811  007AB6  9ED0               	bcf	4048,7,c	;volatile
  4812  007AB8  0012               	return		;funcret
  4813  007ABA                     __end_of_INTERRUPT_Initialize:
  4814                           	opt stack 0
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           intcon	equ	0xFF2
  4820                           intcon2	equ	0xFF1
  4821                           postinc0	equ	0xFEE
  4822                           wreg	equ	0xFE8
  4823                           postdec2	equ	0xFDD
  4824                           fsr2h	equ	0xFDA
  4825                           fsr2l	equ	0xFD9
  4826                           
  4827 ;; *************** function _EXT_INT_Initialize *****************
  4828 ;; Defined at:
  4829 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4830 ;; Parameters:    Size  Location     Type
  4831 ;;		None
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  1    wreg      void 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0, cstack
  4838 ;; Tracked objects:
  4839 ;;		On entry : F/0
  4840 ;;		On exit  : F/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4846 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4847 ;;Total ram usage:        0 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    8
  4850 ;; This function calls:
  4851 ;;		_INT0_SetInterruptHandler
  4852 ;;		_INT1_SetInterruptHandler
  4853 ;;		_INT2_SetInterruptHandler
  4854 ;; This function is called by:
  4855 ;;		_SYSTEM_Initialize
  4856 ;; This function uses a non-reentrant model
  4857 ;;
  4858                           
  4859                           	psect	text22
  4860  0072B0                     __ptext22:
  4861                           	opt stack 0
  4862  0072B0                     _EXT_INT_Initialize:
  4863                           	opt stack 21
  4864                           
  4865                           ; BSR set to: 0
  4866                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4867                           
  4868                           ;incstack = 0
  4869  0072B0  90F0               	bcf	intcon3,0,c	;volatile
  4870                           
  4871                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4872  0072B2  8AF1               	bsf	intcon2,5,c	;volatile
  4873                           
  4874                           ; BSR set to: 0
  4875                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4876  0072B4  0EE6               	movlw	low _INT1_DefaultInterruptHandler
  4877  0072B6  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4878  0072B8  0E7A               	movlw	high _INT1_DefaultInterruptHandler
  4879  0072BA  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4880  0072BC  ECF6  F03C         	call	_INT1_SetInterruptHandler	;wreg free
  4881                           
  4882                           ; BSR set to: 0
  4883                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4884  0072C0  86F0               	bsf	intcon3,3,c	;volatile
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4888  0072C2  92F0               	bcf	intcon3,1,c	;volatile
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4892  0072C4  88F1               	bsf	intcon2,4,c	;volatile
  4893                           
  4894                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4895  0072C6  0EE4               	movlw	low _INT2_DefaultInterruptHandler
  4896  0072C8  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4897  0072CA  0E7A               	movlw	high _INT2_DefaultInterruptHandler
  4898  0072CC  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4899  0072CE  ECF1  F03C         	call	_INT2_SetInterruptHandler	;wreg free
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4903  0072D2  88F0               	bsf	intcon3,4,c	;volatile
  4904                           
  4905                           ; BSR set to: 0
  4906                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4907  0072D4  92F2               	bcf	intcon,1,c	;volatile
  4908                           
  4909                           ; BSR set to: 0
  4910                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4911  0072D6  8CF1               	bsf	intcon2,6,c	;volatile
  4912                           
  4913                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4914  0072D8  6B64               	clrf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4915  0072DA  6B65               	clrf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4916  0072DC  0C00               	retlw	0	;wreg free
  4917  0072DE                     __end_of_EXT_INT_Initialize:
  4918                           	opt stack 0
  4919                           tblptru	equ	0xFF8
  4920                           tblptrh	equ	0xFF7
  4921                           tblptrl	equ	0xFF6
  4922                           tablat	equ	0xFF5
  4923                           intcon	equ	0xFF2
  4924                           intcon2	equ	0xFF1
  4925                           intcon3	equ	0xFF0
  4926                           postinc0	equ	0xFEE
  4927                           wreg	equ	0xFE8
  4928                           postdec2	equ	0xFDD
  4929                           fsr2h	equ	0xFDA
  4930                           fsr2l	equ	0xFD9
  4931                           
  4932 ;; *************** function _INT2_SetInterruptHandler *****************
  4933 ;; Defined at:
  4934 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4937 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;		None
  4940 ;; Return value:  Size  Location     Type
  4941 ;;                  1    wreg      void 
  4942 ;; Registers used:
  4943 ;;		wreg, status,2, status,0
  4944 ;; Tracked objects:
  4945 ;;		On entry : F/0
  4946 ;;		On exit  : F/0
  4947 ;;		Unchanged: F/0
  4948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4949 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4953 ;;Total ram usage:        2 bytes
  4954 ;; Hardware stack levels used:    1
  4955 ;; Hardware stack levels required when called:    7
  4956 ;; This function calls:
  4957 ;;		Nothing
  4958 ;; This function is called by:
  4959 ;;		_EXT_INT_Initialize
  4960 ;;		_DIO1_ISR_Lora_Init
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           	psect	text23
  4965  0079E2                     __ptext23:
  4966                           	opt stack 0
  4967  0079E2                     _INT2_SetInterruptHandler:
  4968                           	opt stack 20
  4969                           
  4970                           ; BSR set to: 0
  4971                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4972                           
  4973                           ; BSR set to: 0
  4974                           ;incstack = 0
  4975  0079E2  C064  F1F5         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4976  0079E6  C065  F1F6         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4977                           
  4978                           ; BSR set to: 0
  4979  0079EA  0012               	return		;funcret
  4980  0079EC                     __end_of_INT2_SetInterruptHandler:
  4981                           	opt stack 0
  4982                           tblptru	equ	0xFF8
  4983                           tblptrh	equ	0xFF7
  4984                           tblptrl	equ	0xFF6
  4985                           tablat	equ	0xFF5
  4986                           intcon	equ	0xFF2
  4987                           intcon2	equ	0xFF1
  4988                           intcon3	equ	0xFF0
  4989                           postinc0	equ	0xFEE
  4990                           wreg	equ	0xFE8
  4991                           postdec2	equ	0xFDD
  4992                           fsr2h	equ	0xFDA
  4993                           fsr2l	equ	0xFD9
  4994                           
  4995 ;; *************** function _INT1_SetInterruptHandler *****************
  4996 ;; Defined at:
  4997 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4998 ;; Parameters:    Size  Location     Type
  4999 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  5000 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  5001 ;; Auto vars:     Size  Location     Type
  5002 ;;		None
  5003 ;; Return value:  Size  Location     Type
  5004 ;;                  1    wreg      void 
  5005 ;; Registers used:
  5006 ;;		wreg, status,2, status,0
  5007 ;; Tracked objects:
  5008 ;;		On entry : F/0
  5009 ;;		On exit  : F/0
  5010 ;;		Unchanged: F/0
  5011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5012 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5015 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5016 ;;Total ram usage:        2 bytes
  5017 ;; Hardware stack levels used:    1
  5018 ;; Hardware stack levels required when called:    7
  5019 ;; This function calls:
  5020 ;;		Nothing
  5021 ;; This function is called by:
  5022 ;;		_EXT_INT_Initialize
  5023 ;;		_DIO0_ISR_Lora_Init
  5024 ;; This function uses a non-reentrant model
  5025 ;;
  5026                           
  5027                           	psect	text24
  5028  0079EC                     __ptext24:
  5029                           	opt stack 0
  5030  0079EC                     _INT1_SetInterruptHandler:
  5031                           	opt stack 20
  5032                           
  5033                           ; BSR set to: 0
  5034                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  5035                           
  5036                           ; BSR set to: 0
  5037                           ;incstack = 0
  5038  0079EC  C064  F1F3         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  5039  0079F0  C065  F1F4         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  5040                           
  5041                           ; BSR set to: 0
  5042  0079F4  0012               	return		;funcret
  5043  0079F6                     __end_of_INT1_SetInterruptHandler:
  5044                           	opt stack 0
  5045                           tblptru	equ	0xFF8
  5046                           tblptrh	equ	0xFF7
  5047                           tblptrl	equ	0xFF6
  5048                           tablat	equ	0xFF5
  5049                           intcon	equ	0xFF2
  5050                           intcon2	equ	0xFF1
  5051                           intcon3	equ	0xFF0
  5052                           postinc0	equ	0xFEE
  5053                           wreg	equ	0xFE8
  5054                           postdec2	equ	0xFDD
  5055                           fsr2h	equ	0xFDA
  5056                           fsr2l	equ	0xFD9
  5057                           
  5058 ;; *************** function _INT0_SetInterruptHandler *****************
  5059 ;; Defined at:
  5060 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  5063 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  5064 ;; Auto vars:     Size  Location     Type
  5065 ;;		None
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  1    wreg      void 
  5068 ;; Registers used:
  5069 ;;		None
  5070 ;; Tracked objects:
  5071 ;;		On entry : F/0
  5072 ;;		On exit  : F/0
  5073 ;;		Unchanged: F/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5075 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5078 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5079 ;;Total ram usage:        2 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    7
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_EXT_INT_Initialize
  5086 ;;		_DIO5_ISR_Lora_Init
  5087 ;; This function uses a non-reentrant model
  5088 ;;
  5089                           
  5090                           	psect	text25
  5091  007ADA                     __ptext25:
  5092                           	opt stack 0
  5093  007ADA                     _INT0_SetInterruptHandler:
  5094                           	opt stack 20
  5095                           
  5096                           ; BSR set to: 0
  5097                           
  5098                           ; BSR set to: 0
  5099                           ;incstack = 0
  5100  007ADA  0012               	return		;funcret
  5101  007ADC                     __end_of_INT0_SetInterruptHandler:
  5102                           	opt stack 0
  5103                           tblptru	equ	0xFF8
  5104                           tblptrh	equ	0xFF7
  5105                           tblptrl	equ	0xFF6
  5106                           tablat	equ	0xFF5
  5107                           intcon	equ	0xFF2
  5108                           intcon2	equ	0xFF1
  5109                           intcon3	equ	0xFF0
  5110                           postinc0	equ	0xFEE
  5111                           wreg	equ	0xFE8
  5112                           postdec2	equ	0xFDD
  5113                           fsr2h	equ	0xFDA
  5114                           fsr2l	equ	0xFD9
  5115                           
  5116 ;; *************** function _EUSART1_Initialize *****************
  5117 ;; Defined at:
  5118 ;;		line 55 in file "mcc_generated_files/eusart1.c"
  5119 ;; Parameters:    Size  Location     Type
  5120 ;;		None
  5121 ;; Auto vars:     Size  Location     Type
  5122 ;;		None
  5123 ;; Return value:  Size  Location     Type
  5124 ;;                  1    wreg      void 
  5125 ;; Registers used:
  5126 ;;		wreg, status,2
  5127 ;; Tracked objects:
  5128 ;;		On entry : F/0
  5129 ;;		On exit  : F/0
  5130 ;;		Unchanged: F/0
  5131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5136 ;;Total ram usage:        0 bytes
  5137 ;; Hardware stack levels used:    1
  5138 ;; Hardware stack levels required when called:    7
  5139 ;; This function calls:
  5140 ;;		Nothing
  5141 ;; This function is called by:
  5142 ;;		_SYSTEM_Initialize
  5143 ;; This function uses a non-reentrant model
  5144 ;;
  5145                           
  5146                           	psect	text26
  5147  007878                     __ptext26:
  5148                           	opt stack 0
  5149  007878                     _EUSART1_Initialize:
  5150                           	opt stack 22
  5151                           
  5152                           ; BSR set to: 0
  5153                           ;eusart1.c: 60: BAUDCON1 = 0x08;
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;incstack = 0
  5157  007878  0E08               	movlw	8
  5158  00787A  6EB8               	movwf	4024,c	;volatile
  5159                           
  5160                           ;eusart1.c: 63: RCSTA1 = 0x80;
  5161  00787C  0E80               	movlw	128
  5162  00787E  6EAB               	movwf	4011,c	;volatile
  5163                           
  5164                           ;eusart1.c: 66: TXSTA1 = 0x24;
  5165  007880  0E24               	movlw	36
  5166  007882  6EAC               	movwf	4012,c	;volatile
  5167                           
  5168                           ;eusart1.c: 69: SPBRG1 = 0xA0;
  5169  007884  0EA0               	movlw	160
  5170  007886  6EAF               	movwf	4015,c	;volatile
  5171                           
  5172                           ;eusart1.c: 72: SPBRGH1 = 0x01;
  5173  007888  0E01               	movlw	1
  5174  00788A  6EB0               	movwf	4016,c	;volatile
  5175                           
  5176                           ; BSR set to: 0
  5177  00788C  0C01               	retlw	1	;funcret
  5178  00788E                     __end_of_EUSART1_Initialize:
  5179                           	opt stack 0
  5180                           tblptru	equ	0xFF8
  5181                           tblptrh	equ	0xFF7
  5182                           tblptrl	equ	0xFF6
  5183                           tablat	equ	0xFF5
  5184                           intcon	equ	0xFF2
  5185                           intcon2	equ	0xFF1
  5186                           intcon3	equ	0xFF0
  5187                           postinc0	equ	0xFEE
  5188                           wreg	equ	0xFE8
  5189                           postdec2	equ	0xFDD
  5190                           fsr2h	equ	0xFDA
  5191                           fsr2l	equ	0xFD9
  5192                           
  5193 ;; *************** function _ADC_Initialize *****************
  5194 ;; Defined at:
  5195 ;;		line 58 in file "mcc_generated_files/adc.c"
  5196 ;; Parameters:    Size  Location     Type
  5197 ;;		None
  5198 ;; Auto vars:     Size  Location     Type
  5199 ;;		None
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  1    wreg      void 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5213 ;;Total ram usage:        0 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    7
  5216 ;; This function calls:
  5217 ;;		Nothing
  5218 ;; This function is called by:
  5219 ;;		_SYSTEM_Initialize
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           
  5223                           	psect	text27
  5224  007908                     __ptext27:
  5225                           	opt stack 0
  5226  007908                     _ADC_Initialize:
  5227                           	opt stack 22
  5228                           
  5229                           ;adc.c: 63: ADCON0 = 0x01;
  5230                           
  5231                           ; BSR set to: 0
  5232                           ;incstack = 0
  5233  007908  0E01               	movlw	1
  5234  00790A  6EC2               	movwf	4034,c	;volatile
  5235                           
  5236                           ;adc.c: 66: ADCON1 = 0x00;
  5237  00790C  6AC1               	clrf	4033,c	;volatile
  5238                           
  5239                           ;adc.c: 69: ADCON2 = 0x80;
  5240  00790E  0E80               	movlw	128
  5241  007910  6EC0               	movwf	4032,c	;volatile
  5242                           
  5243                           ;adc.c: 72: ADRESL = 0x00;
  5244  007912  6AC3               	clrf	4035,c	;volatile
  5245                           
  5246                           ;adc.c: 75: ADRESH = 0x00;
  5247  007914  6AC4               	clrf	4036,c	;volatile
  5248  007916  0012               	return		;funcret
  5249  007918                     __end_of_ADC_Initialize:
  5250                           	opt stack 0
  5251                           tblptru	equ	0xFF8
  5252                           tblptrh	equ	0xFF7
  5253                           tblptrl	equ	0xFF6
  5254                           tablat	equ	0xFF5
  5255                           intcon	equ	0xFF2
  5256                           intcon2	equ	0xFF1
  5257                           intcon3	equ	0xFF0
  5258                           postinc0	equ	0xFEE
  5259                           wreg	equ	0xFE8
  5260                           postdec2	equ	0xFDD
  5261                           fsr2h	equ	0xFDA
  5262                           fsr2l	equ	0xFD9
  5263                           
  5264 ;; *************** function _LoRaWakeUp *****************
  5265 ;; Defined at:
  5266 ;;		line 254 in file "main.c"
  5267 ;; Parameters:    Size  Location     Type
  5268 ;;		None
  5269 ;; Auto vars:     Size  Location     Type
  5270 ;;		None
  5271 ;; Return value:  Size  Location     Type
  5272 ;;                  1    wreg      void 
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : F/0
  5277 ;;		On exit  : 0/0
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5280 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5283 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5284 ;;Total ram usage:        0 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    8
  5287 ;; This function calls:
  5288 ;;		_SPI2_Initialize
  5289 ;; This function is called by:
  5290 ;;		_main
  5291 ;; This function uses a non-reentrant model
  5292 ;;
  5293                           
  5294                           	psect	text28
  5295  007A44                     __ptext28:
  5296                           	opt stack 0
  5297  007A44                     _LoRaWakeUp:
  5298                           	opt stack 22
  5299                           
  5300                           ; BSR set to: 0
  5301                           ;main.c: 256: MSSP2MD = 0;
  5302                           
  5303                           ;incstack = 0
  5304  007A44  010F               	movlb	15	; () banked
  5305  007A46  9F3E               	bcf	62,7,b	;volatile
  5306                           
  5307                           ; BSR set to: 15
  5308                           ;main.c: 257: SPI2_Initialize();
  5309  007A48  EFD6  F03C         	goto	_SPI2_Initialize	;wreg free
  5310  007A4C                     __end_of_LoRaWakeUp:
  5311                           	opt stack 0
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           intcon	equ	0xFF2
  5317                           intcon2	equ	0xFF1
  5318                           intcon3	equ	0xFF0
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           postdec2	equ	0xFDD
  5322                           fsr2h	equ	0xFDA
  5323                           fsr2l	equ	0xFD9
  5324                           
  5325 ;; *************** function _SPI2_Initialize *****************
  5326 ;; Defined at:
  5327 ;;		line 63 in file "mcc_generated_files/spi2.c"
  5328 ;; Parameters:    Size  Location     Type
  5329 ;;		None
  5330 ;; Auto vars:     Size  Location     Type
  5331 ;;		None
  5332 ;; Return value:  Size  Location     Type
  5333 ;;                  1    wreg      void 
  5334 ;; Registers used:
  5335 ;;		wreg, status,2
  5336 ;; Tracked objects:
  5337 ;;		On entry : 0/0
  5338 ;;		On exit  : 0/0
  5339 ;;		Unchanged: 0/0
  5340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;Total ram usage:        0 bytes
  5346 ;; Hardware stack levels used:    1
  5347 ;; Hardware stack levels required when called:    7
  5348 ;; This function calls:
  5349 ;;		Nothing
  5350 ;; This function is called by:
  5351 ;;		_SYSTEM_Initialize
  5352 ;;		_LoRaWakeUp
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text29
  5357  0079AC                     __ptext29:
  5358                           	opt stack 0
  5359  0079AC                     _SPI2_Initialize:
  5360                           	opt stack 22
  5361                           
  5362                           ;spi2.c: 68: SSP2STAT = 0x40;
  5363                           
  5364                           ;incstack = 0
  5365  0079AC  0E40               	movlw	64
  5366  0079AE  6E6D               	movwf	3949,c	;volatile
  5367                           
  5368                           ;spi2.c: 71: SSP2CON1 = 0x20;
  5369  0079B0  0E20               	movlw	32
  5370  0079B2  6E6C               	movwf	3948,c	;volatile
  5371                           
  5372                           ;spi2.c: 74: SSP2ADD = 0x00;
  5373  0079B4  6A6E               	clrf	3950,c	;volatile
  5374  0079B6  0012               	return		;funcret
  5375  0079B8                     __end_of_SPI2_Initialize:
  5376                           	opt stack 0
  5377                           tblptru	equ	0xFF8
  5378                           tblptrh	equ	0xFF7
  5379                           tblptrl	equ	0xFF6
  5380                           tablat	equ	0xFF5
  5381                           intcon	equ	0xFF2
  5382                           intcon2	equ	0xFF1
  5383                           intcon3	equ	0xFF0
  5384                           postinc0	equ	0xFEE
  5385                           wreg	equ	0xFE8
  5386                           postdec2	equ	0xFDD
  5387                           fsr2h	equ	0xFDA
  5388                           fsr2l	equ	0xFD9
  5389                           
  5390 ;; *************** function _LoRaSleep *****************
  5391 ;; Defined at:
  5392 ;;		line 224 in file "main.c"
  5393 ;; Parameters:    Size  Location     Type
  5394 ;;		None
  5395 ;; Auto vars:     Size  Location     Type
  5396 ;;		None
  5397 ;; Return value:  Size  Location     Type
  5398 ;;                  1    wreg      void 
  5399 ;; Registers used:
  5400 ;;		None
  5401 ;; Tracked objects:
  5402 ;;		On entry : F/F
  5403 ;;		On exit  : F/F
  5404 ;;		Unchanged: 0/0
  5405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5406 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5407 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5408 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5409 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5410 ;;Total ram usage:        0 bytes
  5411 ;; Hardware stack levels used:    1
  5412 ;; Hardware stack levels required when called:    7
  5413 ;; This function calls:
  5414 ;;		Nothing
  5415 ;; This function is called by:
  5416 ;;		_main
  5417 ;; This function uses a non-reentrant model
  5418 ;;
  5419                           
  5420                           	psect	text30
  5421  007602                     __ptext30:
  5422                           	opt stack 0
  5423  007602                     _LoRaSleep:
  5424                           	opt stack 23
  5425                           
  5426                           ; BSR set to: 15
  5427                           ;main.c: 227: SSP2CON1 = 0x00;
  5428                           
  5429                           ;incstack = 0
  5430  007602  6A6C               	clrf	3948,c	;volatile
  5431                           
  5432                           ;main.c: 230: MSSP2MD = 1;
  5433  007604  8F3E               	bsf	62,7,b	;volatile
  5434                           
  5435                           ;main.c: 234: ANSD3 = 0;
  5436  007606  973B               	bcf	59,3,b	;volatile
  5437                           
  5438                           ;main.c: 235: TRISD3 = 0;
  5439  007608  9695               	bcf	3989,3,c	;volatile
  5440                           
  5441                           ;main.c: 236: LATD3 = 1;
  5442  00760A  868C               	bsf	3980,3,c	;volatile
  5443                           
  5444                           ;main.c: 239: ANSD1 = 0;
  5445  00760C  933B               	bcf	59,1,b	;volatile
  5446                           
  5447                           ;main.c: 240: TRISD1 = 0;
  5448  00760E  9295               	bcf	3989,1,c	;volatile
  5449                           
  5450                           ;main.c: 241: LATD1 = 0;
  5451  007610  928C               	bcf	3980,1,c	;volatile
  5452                           
  5453                           ;main.c: 244: ANSD4 = 0;
  5454  007612  993B               	bcf	59,4,b	;volatile
  5455                           
  5456                           ;main.c: 245: TRISD4 = 0;
  5457  007614  9895               	bcf	3989,4,c	;volatile
  5458                           
  5459                           ;main.c: 246: LATD4 = 0;
  5460  007616  988C               	bcf	3980,4,c	;volatile
  5461                           
  5462                           ;main.c: 249: ANSD0 = 0;
  5463  007618  913B               	bcf	59,0,b	;volatile
  5464                           
  5465                           ;main.c: 250: TRISD0 = 0;
  5466  00761A  9095               	bcf	3989,0,c	;volatile
  5467                           
  5468                           ;main.c: 251: LATD0 = 0;
  5469  00761C  908C               	bcf	3980,0,c	;volatile
  5470                           
  5471                           ; BSR set to: 15
  5472  00761E  0012               	return		;funcret
  5473  007620                     __end_of_LoRaSleep:
  5474                           	opt stack 0
  5475                           tblptru	equ	0xFF8
  5476                           tblptrh	equ	0xFF7
  5477                           tblptrl	equ	0xFF6
  5478                           tablat	equ	0xFF5
  5479                           intcon	equ	0xFF2
  5480                           intcon2	equ	0xFF1
  5481                           intcon3	equ	0xFF0
  5482                           postinc0	equ	0xFEE
  5483                           wreg	equ	0xFE8
  5484                           postdec2	equ	0xFDD
  5485                           fsr2h	equ	0xFDA
  5486                           fsr2l	equ	0xFD9
  5487                           
  5488 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5489 ;; Defined at:
  5490 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5491 ;; Parameters:    Size  Location     Type
  5492 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5493 ;;		 -> nwkSKey(16), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;		None
  5496 ;; Return value:  Size  Location     Type
  5497 ;;                  1    wreg      void 
  5498 ;; Registers used:
  5499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5500 ;; Tracked objects:
  5501 ;;		On entry : F/0
  5502 ;;		On exit  : D/0
  5503 ;;		Unchanged: 0/0
  5504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5505 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5508 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5509 ;;Total ram usage:        2 bytes
  5510 ;; Hardware stack levels used:    1
  5511 ;; Hardware stack levels required when called:    8
  5512 ;; This function calls:
  5513 ;;		_memcpy
  5514 ;; This function is called by:
  5515 ;;		_main
  5516 ;; This function uses a non-reentrant model
  5517 ;;
  5518                           
  5519                           	psect	text31
  5520  007364                     __ptext31:
  5521                           	opt stack 0
  5522  007364                     _LORAWAN_SetNetworkSessionKey:
  5523                           	opt stack 22
  5524                           
  5525                           ; BSR set to: 0
  5526                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5527                           
  5528                           ; BSR set to: 15
  5529                           ;incstack = 0
  5530  007364  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5531  007366  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5532  007368  B4D8               	btfsc	status,2,c
  5533  00736A  0012               	return	
  5534                           
  5535                           ; BSR set to: 0
  5536                           ;lorawan.c: 382: {
  5537                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5538  00736C  0E22               	movlw	low (_loRa+34)
  5539  00736E  6F64               	movwf	memcpy@d1& (0+255),b
  5540  007370  0E02               	movlw	high (_loRa+34)
  5541  007372  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5542  007374  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5543  007378  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5544  00737C  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5545  00737E  0E10               	movlw	16
  5546  007380  6F68               	movwf	memcpy@n& (0+255),b
  5547  007382  ECD5  F034         	call	_memcpy	;wreg free
  5548                           
  5549                           ; BSR set to: 0
  5550                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5551  007386  0102               	movlb	2	; () banked
  5552  007388  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5553                           
  5554                           ; BSR set to: 2
  5555                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5556  00738A  9902               	bcf	(_loRa+2)& (0+255),4,b
  5557  00738C  0012               	return		;funcret
  5558  00738E                     __end_of_LORAWAN_SetNetworkSessionKey:
  5559                           	opt stack 0
  5560                           tblptru	equ	0xFF8
  5561                           tblptrh	equ	0xFF7
  5562                           tblptrl	equ	0xFF6
  5563                           tablat	equ	0xFF5
  5564                           intcon	equ	0xFF2
  5565                           intcon2	equ	0xFF1
  5566                           intcon3	equ	0xFF0
  5567                           postinc0	equ	0xFEE
  5568                           wreg	equ	0xFE8
  5569                           postdec2	equ	0xFDD
  5570                           fsr2h	equ	0xFDA
  5571                           fsr2l	equ	0xFD9
  5572                           status	equ	0xFD8
  5573                           
  5574 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5575 ;; Defined at:
  5576 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5577 ;; Parameters:    Size  Location     Type
  5578 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5579 ;; Auto vars:     Size  Location     Type
  5580 ;;		None
  5581 ;; Return value:  Size  Location     Type
  5582 ;;                  1    wreg      void 
  5583 ;; Registers used:
  5584 ;;		None
  5585 ;; Tracked objects:
  5586 ;;		On entry : F/0
  5587 ;;		On exit  : F/2
  5588 ;;		Unchanged: 0/0
  5589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5590 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5593 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5594 ;;Total ram usage:        4 bytes
  5595 ;; Hardware stack levels used:    1
  5596 ;; Hardware stack levels required when called:    7
  5597 ;; This function calls:
  5598 ;;		Nothing
  5599 ;; This function is called by:
  5600 ;;		_main
  5601 ;; This function uses a non-reentrant model
  5602 ;;
  5603                           
  5604                           	psect	text32
  5605  0077E8                     __ptext32:
  5606                           	opt stack 0
  5607  0077E8                     _LORAWAN_SetDeviceAddress:
  5608                           	opt stack 23
  5609                           
  5610                           ; BSR set to: 0
  5611                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5612                           
  5613                           ;incstack = 0
  5614  0077E8  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5615  0077EC  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5616  0077F0  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5617  0077F4  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5618                           
  5619                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5620  0077F8  0102               	movlb	2	; () banked
  5621  0077FA  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5622                           
  5623                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5624  0077FC  9902               	bcf	(_loRa+2)& (0+255),4,b
  5625                           
  5626                           ; BSR set to: 2
  5627  0077FE  0012               	return		;funcret
  5628  007800                     __end_of_LORAWAN_SetDeviceAddress:
  5629                           	opt stack 0
  5630                           tblptru	equ	0xFF8
  5631                           tblptrh	equ	0xFF7
  5632                           tblptrl	equ	0xFF6
  5633                           tablat	equ	0xFF5
  5634                           intcon	equ	0xFF2
  5635                           intcon2	equ	0xFF1
  5636                           intcon3	equ	0xFF0
  5637                           postinc0	equ	0xFEE
  5638                           wreg	equ	0xFE8
  5639                           postdec2	equ	0xFDD
  5640                           fsr2h	equ	0xFDA
  5641                           fsr2l	equ	0xFD9
  5642                           status	equ	0xFD8
  5643                           
  5644 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5645 ;; Defined at:
  5646 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5649 ;;		 -> appSKey(16), 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;		None
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      void 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : F/0
  5658 ;;		On exit  : D/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5661 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5665 ;;Total ram usage:        2 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    8
  5668 ;; This function calls:
  5669 ;;		_memcpy
  5670 ;; This function is called by:
  5671 ;;		_main
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text33
  5676  00738E                     __ptext33:
  5677                           	opt stack 0
  5678  00738E                     _LORAWAN_SetApplicationSessionKey:
  5679                           	opt stack 22
  5680                           
  5681                           ; BSR set to: 0
  5682                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5683                           
  5684                           ; BSR set to: 2
  5685                           ;incstack = 0
  5686  00738E  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5687  007390  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5688  007392  B4D8               	btfsc	status,2,c
  5689  007394  0012               	return	
  5690                           
  5691                           ; BSR set to: 0
  5692                           ;lorawan.c: 397: {
  5693                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5694  007396  0E32               	movlw	low (_loRa+50)
  5695  007398  6F64               	movwf	memcpy@d1& (0+255),b
  5696  00739A  0E02               	movlw	high (_loRa+50)
  5697  00739C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5698  00739E  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5699  0073A2  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5700  0073A6  6B69               	clrf	(memcpy@n+1)& (0+255),b
  5701  0073A8  0E10               	movlw	16
  5702  0073AA  6F68               	movwf	memcpy@n& (0+255),b
  5703  0073AC  ECD5  F034         	call	_memcpy	;wreg free
  5704                           
  5705                           ; BSR set to: 0
  5706                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5707  0073B0  0102               	movlb	2	; () banked
  5708  0073B2  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5709                           
  5710                           ; BSR set to: 2
  5711                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5712  0073B4  9902               	bcf	(_loRa+2)& (0+255),4,b
  5713  0073B6  0012               	return		;funcret
  5714  0073B8                     __end_of_LORAWAN_SetApplicationSessionKey:
  5715                           	opt stack 0
  5716                           tblptru	equ	0xFF8
  5717                           tblptrh	equ	0xFF7
  5718                           tblptrl	equ	0xFF6
  5719                           tablat	equ	0xFF5
  5720                           intcon	equ	0xFF2
  5721                           intcon2	equ	0xFF1
  5722                           intcon3	equ	0xFF0
  5723                           postinc0	equ	0xFEE
  5724                           wreg	equ	0xFE8
  5725                           postdec2	equ	0xFDD
  5726                           fsr2h	equ	0xFDA
  5727                           fsr2l	equ	0xFD9
  5728                           status	equ	0xFD8
  5729                           
  5730 ;; *************** function _LORAWAN_Mainloop *****************
  5731 ;; Defined at:
  5732 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5733 ;; Parameters:    Size  Location     Type
  5734 ;;		None
  5735 ;; Auto vars:     Size  Location     Type
  5736 ;;		None
  5737 ;; Return value:  Size  Location     Type
  5738 ;;                  1    wreg      void 
  5739 ;; Registers used:
  5740 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5741 ;; Tracked objects:
  5742 ;;		On entry : 0/1
  5743 ;;		On exit  : 0/0
  5744 ;;		Unchanged: 0/0
  5745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5746 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;Total ram usage:        0 bytes
  5751 ;; Hardware stack levels used:    1
  5752 ;; Hardware stack levels required when called:   18
  5753 ;; This function calls:
  5754 ;;		_INTERRUPT_GetDioStatus
  5755 ;;		_RADIO_DIO0
  5756 ;;		_RADIO_DIO1
  5757 ;;		_RADIO_DIO2
  5758 ;;		_RADIO_DIO3
  5759 ;;		_RADIO_DIO4
  5760 ;;		_RADIO_DIO5
  5761 ;;		_SwTimersExecute
  5762 ;; This function is called by:
  5763 ;;		_main
  5764 ;; This function uses a non-reentrant model
  5765 ;;
  5766                           
  5767                           	psect	text34
  5768  006FF6                     __ptext34:
  5769                           	opt stack 0
  5770  006FF6                     _LORAWAN_Mainloop:
  5771                           	opt stack 12
  5772                           
  5773                           ;lorawan.c: 2240: SwTimersExecute();
  5774                           
  5775                           ;incstack = 0
  5776  006FF6  EC29  F02D         	call	_SwTimersExecute	;wreg free
  5777                           
  5778                           ; BSR set to: 0
  5779                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5780  006FFA  ECAA  F03C         	call	_INTERRUPT_GetDioStatus	;wreg free
  5781  006FFE  0101               	movlb	1	; () banked
  5782  007000  6F78               	movwf	_localDioStatus& (0+255),b
  5783                           
  5784                           ; BSR set to: 1
  5785                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5786  007002  B178               	btfsc	_localDioStatus& (0+255),0,b
  5787                           
  5788                           ; BSR set to: 1
  5789                           ;lorawan.c: 2246: {
  5790                           ;lorawan.c: 2247: RADIO_DIO0();
  5791  007004  ECFB  F032         	call	_RADIO_DIO0	;wreg free
  5792                           
  5793                           ;lorawan.c: 2248: }
  5794                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5795  007008  0101               	movlb	1	; () banked
  5796  00700A  B378               	btfsc	_localDioStatus& (0+255),1,b
  5797                           
  5798                           ; BSR set to: 1
  5799                           ;lorawan.c: 2250: {
  5800                           ;lorawan.c: 2251: RADIO_DIO1();
  5801  00700C  EC19  F038         	call	_RADIO_DIO1	;wreg free
  5802                           
  5803                           ;lorawan.c: 2252: }
  5804                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5805  007010  0101               	movlb	1	; () banked
  5806  007012  B578               	btfsc	_localDioStatus& (0+255),2,b
  5807                           
  5808                           ; BSR set to: 1
  5809                           ;lorawan.c: 2254: {
  5810                           ;lorawan.c: 2255: RADIO_DIO2();
  5811  007014  ECD4  F036         	call	_RADIO_DIO2	;wreg free
  5812                           
  5813                           ;lorawan.c: 2256: }
  5814                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5815  007018  0101               	movlb	1	; () banked
  5816  00701A  B778               	btfsc	_localDioStatus& (0+255),3,b
  5817                           
  5818                           ; BSR set to: 1
  5819                           ;lorawan.c: 2258: {
  5820                           ;lorawan.c: 2259: RADIO_DIO3();
  5821  00701C  EC18  F03C         	call	_RADIO_DIO3	;wreg free
  5822                           
  5823                           ;lorawan.c: 2260: }
  5824                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5825  007020  0101               	movlb	1	; () banked
  5826  007022  B978               	btfsc	_localDioStatus& (0+255),4,b
  5827                           
  5828                           ; BSR set to: 1
  5829                           ;lorawan.c: 2262: {
  5830                           ;lorawan.c: 2263: RADIO_DIO4();
  5831  007024  EC0C  F03C         	call	_RADIO_DIO4	;wreg free
  5832                           
  5833                           ;lorawan.c: 2264: }
  5834                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5835  007028  0101               	movlb	1	; () banked
  5836  00702A  BB78               	btfsc	_localDioStatus& (0+255),5,b
  5837                           
  5838                           ; BSR set to: 1
  5839                           ;lorawan.c: 2266: {
  5840                           ;lorawan.c: 2267: RADIO_DIO5();
  5841  00702C  EC00  F03C         	call	_RADIO_DIO5	;wreg free
  5842  007030  0012               	return		;funcret
  5843  007032                     __end_of_LORAWAN_Mainloop:
  5844                           	opt stack 0
  5845                           tblptru	equ	0xFF8
  5846                           tblptrh	equ	0xFF7
  5847                           tblptrl	equ	0xFF6
  5848                           tablat	equ	0xFF5
  5849                           intcon	equ	0xFF2
  5850                           intcon2	equ	0xFF1
  5851                           intcon3	equ	0xFF0
  5852                           postinc0	equ	0xFEE
  5853                           wreg	equ	0xFE8
  5854                           postdec2	equ	0xFDD
  5855                           fsr2h	equ	0xFDA
  5856                           fsr2l	equ	0xFD9
  5857                           status	equ	0xFD8
  5858                           
  5859 ;; *************** function _SwTimersExecute *****************
  5860 ;; Defined at:
  5861 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5862 ;; Parameters:    Size  Location     Type
  5863 ;;		None
  5864 ;; Auto vars:     Size  Location     Type
  5865 ;;  i               1  136[BANK0 ] unsigned char 
  5866 ;; Return value:  Size  Location     Type
  5867 ;;                  1    wreg      void 
  5868 ;; Registers used:
  5869 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+4, btemp+5, btemp
      ++6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5870 ;; Tracked objects:
  5871 ;;		On entry : 0/1
  5872 ;;		On exit  : F/0
  5873 ;;		Unchanged: 0/0
  5874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5877 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5879 ;;Total ram usage:        5 bytes
  5880 ;; Hardware stack levels used:    1
  5881 ;; Hardware stack levels required when called:   17
  5882 ;; This function calls:
  5883 ;;		Absolute function
  5884 ;;		_AckRetransmissionCallback
  5885 ;;		_AutomaticReplyCallback
  5886 ;;		_DutyCycleCallback
  5887 ;;		_LORAWAN_LinkCheckCallback
  5888 ;;		_LORAWAN_ReceiveWindow1Callback
  5889 ;;		_LORAWAN_ReceiveWindow2Callback
  5890 ;;		_RADIO_RxFSKTimeout
  5891 ;;		_RADIO_WatchdogTimeout
  5892 ;;		_UnconfirmedTransmissionCallback
  5893 ;;		_UpdateJoinSuccessState
  5894 ;; This function is called by:
  5895 ;;		_LORAWAN_Mainloop
  5896 ;; This function uses a non-reentrant model
  5897 ;;
  5898                           
  5899                           	psect	text35
  5900  005A52                     __ptext35:
  5901                           	opt stack 0
  5902  005A52                     _SwTimersExecute:
  5903                           	opt stack 12
  5904                           
  5905                           ;sw_timer.c: 262: uint8_t i;
  5906                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5907                           
  5908                           ;incstack = 0
  5909  005A52  9EF2               	bcf	intcon,7,c	;volatile
  5910                           
  5911                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5912  005A54  0100               	movlb	0	; () banked
  5913  005A56  6BE8               	clrf	SwTimersExecute@i& (0+255),b
  5914  005A58  D050               	goto	l16368
  5915  005A5A                     l16354:
  5916                           
  5917                           ; BSR set to: 0
  5918                           ;sw_timer.c: 266: {
  5919                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5920  005A5A  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5921  005A5C  0D08               	mullw	8
  5922  005A5E  0E04               	movlw	low (_swTimers+4)
  5923  005A60  24F3               	addwf	prodl,w,c
  5924  005A62  6ED9               	movwf	fsr2l,c
  5925  005A64  0E03               	movlw	high (_swTimers+4)
  5926  005A66  20F4               	addwfc	prodh,w,c
  5927  005A68  6EDA               	movwf	fsr2h,c
  5928  005A6A  04DE               	decf	postinc2,w,c
  5929  005A6C  E144               	bnz	l16366
  5930                           
  5931                           ; BSR set to: 0
  5932                           ;sw_timer.c: 270: {
  5933                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5934  005A6E  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5935  005A70  0D08               	mullw	8
  5936  005A72  0E00               	movlw	low _swTimers
  5937  005A74  24F3               	addwf	prodl,w,c
  5938  005A76  6ED9               	movwf	fsr2l,c
  5939  005A78  0E03               	movlw	high _swTimers
  5940  005A7A  20F4               	addwfc	prodh,w,c
  5941  005A7C  6EDA               	movwf	fsr2h,c
  5942  005A7E  50DE               	movf	postinc2,w,c
  5943  005A80  10DE               	iorwf	postinc2,w,c
  5944  005A82  10DE               	iorwf	postinc2,w,c
  5945  005A84  10DE               	iorwf	postinc2,w,c
  5946  005A86  E137               	bnz	l16366
  5947                           
  5948                           ; BSR set to: 0
  5949                           ;sw_timer.c: 272: {
  5950                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5951  005A88  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5952  005A8A  0D08               	mullw	8
  5953  005A8C  0E04               	movlw	low (_swTimers+4)
  5954  005A8E  24F3               	addwf	prodl,w,c
  5955  005A90  6ED9               	movwf	fsr2l,c
  5956  005A92  0E03               	movlw	high (_swTimers+4)
  5957  005A94  20F4               	addwfc	prodh,w,c
  5958  005A96  6EDA               	movwf	fsr2h,c
  5959  005A98  6ADF               	clrf	indf2,c
  5960                           
  5961                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5962  005A9A  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5963  005A9C  0D08               	mullw	8
  5964  005A9E  0E06               	movlw	low (_swTimers+6)
  5965  005AA0  24F3               	addwf	prodl,w,c
  5966  005AA2  6ED9               	movwf	fsr2l,c
  5967  005AA4  0E03               	movlw	high (_swTimers+6)
  5968  005AA6  20F4               	addwfc	prodh,w,c
  5969  005AA8  6EDA               	movwf	fsr2h,c
  5970  005AAA  50DE               	movf	postinc2,w,c
  5971  005AAC  10DE               	iorwf	postinc2,w,c
  5972  005AAE  E023               	bz	l16366
  5973                           
  5974                           ; BSR set to: 0
  5975                           ;sw_timer.c: 275: {
  5976                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5977  005AB0  8EF2               	bsf	intcon,7,c	;volatile
  5978                           
  5979                           ; BSR set to: 0
  5980                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5981  005AB2  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5982  005AB4  0D08               	mullw	8
  5983  005AB6  0E05               	movlw	low (_swTimers+5)
  5984  005AB8  24F3               	addwf	prodl,w,c
  5985  005ABA  6ED9               	movwf	fsr2l,c
  5986  005ABC  0E03               	movlw	high (_swTimers+5)
  5987  005ABE  20F4               	addwfc	prodh,w,c
  5988  005AC0  6EDA               	movwf	fsr2h,c
  5989  005AC2  50DF               	movf	indf2,w,c
  5990  005AC4  6EE6               	movwf	postinc1,c
  5991  005AC6  51E8               	movf	SwTimersExecute@i& (0+255),w,b
  5992  005AC8  0D08               	mullw	8
  5993  005ACA  0E06               	movlw	low (_swTimers+6)
  5994  005ACC  24F3               	addwf	prodl,w,c
  5995  005ACE  6ED9               	movwf	fsr2l,c
  5996  005AD0  0E03               	movlw	high (_swTimers+6)
  5997  005AD2  20F4               	addwfc	prodh,w,c
  5998  005AD4  6EDA               	movwf	fsr2h,c
  5999  005AD6  CFDE F0E4          	movff	postinc2,??_SwTimersExecute
  6000  005ADA  CFDD F0E5          	movff	postdec2,??_SwTimersExecute+1
  6001  005ADE  D801               	call	u19598
  6002  005AE0  D009               	goto	l16364
  6003  005AE2                     u19598:
  6004  005AE2  0005               	push	
  6005  005AE4  6EFA               	movwf	pclath,c
  6006  005AE6  51E4               	movf	??_SwTimersExecute& (0+255),w,b
  6007  005AE8  6EFD               	movwf	tosl,c
  6008  005AEA  51E5               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  6009  005AEC  6EFE               	movwf	tosh,c
  6010  005AEE  6AFF               	clrf	tosu,c
  6011  005AF0  50FA               	movf	pclath,w,c
  6012  005AF2  0012               	return		;indir
  6013  005AF4                     l16364:
  6014                           
  6015                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  6016  005AF4  9EF2               	bcf	intcon,7,c	;volatile
  6017  005AF6                     l16366:
  6018  005AF6  0100               	movlb	0	; () banked
  6019  005AF8  2BE8               	incf	SwTimersExecute@i& (0+255),f,b
  6020  005AFA                     l16368:
  6021                           
  6022                           ; BSR set to: 0
  6023  005AFA  51F2               	movf	_allocatedTimers& (0+255),w,b	;volatile
  6024  005AFC  5DE8               	subwf	SwTimersExecute@i& (0+255),w,b
  6025  005AFE  E3AD               	bnc	l16354
  6026                           
  6027                           ; BSR set to: 0
  6028                           ;sw_timer.c: 279: }
  6029                           ;sw_timer.c: 280: }
  6030                           ;sw_timer.c: 281: }
  6031                           ;sw_timer.c: 282: }
  6032                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  6033  005B00  8EF2               	bsf	intcon,7,c	;volatile
  6034                           
  6035                           ; BSR set to: 0
  6036  005B02  0012               	return		;funcret
  6037  005B04                     __end_of_SwTimersExecute:
  6038                           	opt stack 0
  6039                           tosu	equ	0xFFF
  6040                           tosh	equ	0xFFE
  6041                           tosl	equ	0xFFD
  6042                           pclath	equ	0xFFA
  6043                           tblptru	equ	0xFF8
  6044                           tblptrh	equ	0xFF7
  6045                           tblptrl	equ	0xFF6
  6046                           tablat	equ	0xFF5
  6047                           prodh	equ	0xFF4
  6048                           prodl	equ	0xFF3
  6049                           intcon	equ	0xFF2
  6050                           intcon2	equ	0xFF1
  6051                           intcon3	equ	0xFF0
  6052                           postinc0	equ	0xFEE
  6053                           wreg	equ	0xFE8
  6054                           postinc1	equ	0xFE6
  6055                           indf2	equ	0xFDF
  6056                           postinc2	equ	0xFDE
  6057                           postdec2	equ	0xFDD
  6058                           fsr2h	equ	0xFDA
  6059                           fsr2l	equ	0xFD9
  6060                           status	equ	0xFD8
  6061                           
  6062 ;; *************** function _DutyCycleCallback *****************
  6063 ;; Defined at:
  6064 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  6065 ;; Parameters:    Size  Location     Type
  6066 ;;  param           1  [STACK] unsigned char 
  6067 ;; Auto vars:     Size  Location     Type
  6068 ;;  minim           4  [STACK] unsigned long 
  6069 ;;  i               1  [STACK] unsigned char 
  6070 ;;  found           1  [STACK] unsigned char 
  6071 ;; Return value:  Size  Location     Type
  6072 ;;                  1  [STACK] void 
  6073 ;; Registers used:
  6074 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9,
      + btemp+10, btemp+11, prodl, prodh, cstack
  6075 ;; Tracked objects:
  6076 ;;		On entry : F/0
  6077 ;;		On exit  : 0/0
  6078 ;;		Unchanged: 0/0
  6079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6080 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6081 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;Total ram usage:        0 bytes
  6085 ;; Hardware stack levels used:    1
  6086 ;; Hardware stack levels required when called:   11
  6087 ;; This function calls:
  6088 ;;		_SwTimerSetTimeout
  6089 ;;		_SwTimerStart
  6090 ;;		___lldiv
  6091 ;; This function is called by:
  6092 ;;		_SetCallbackSoftwareTimers
  6093 ;;		_SwTimersExecute
  6094 ;; This function uses a reentrant model
  6095 ;;
  6096                           
  6097                           	psect	text36
  6098  00242A                     __ptext36:
  6099                           	opt stack 0
  6100  00242A                     _DutyCycleCallback:
  6101                           	opt stack 0
  6102                           
  6103                           ; BSR set to: 0
  6104                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  6105  00242A  0E0A               	movlw	10
  6106  00242C  26E1               	addwf	fsr1l,f,c
  6107  00242E  0E00               	movlw	0
  6108  002430  22E2               	addwfc	fsr1h,f,c
  6109                           
  6110                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  6111                           
  6112                           ;incstack = 0
  6113  002432  6852               	setf	btemp+8,c
  6114  002434  6853               	setf	btemp+9,c
  6115  002436  6854               	setf	btemp+10,c
  6116  002438  6855               	setf	btemp+11,c
  6117                           
  6118                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6119  00243A  0EFA               	movlw	-6
  6120  00243C  C052  FFE3         	movff	btemp+8,plusw1
  6121  002440  0EFB               	movlw	-5
  6122  002442  C053  FFE3         	movff	btemp+9,plusw1
  6123  002446  0EFC               	movlw	-4
  6124  002448  C054  FFE3         	movff	btemp+10,plusw1
  6125  00244C  0EFD               	movlw	-3
  6126  00244E  C055  FFE3         	movff	btemp+11,plusw1
  6127                           
  6128                           ;lorawan_eu.c: 1224: bool found = 0;
  6129                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6130  002452  0EFF               	movlw	-1
  6131  002454  6AE3               	clrf	plusw1,c
  6132                           
  6133                           ;lorawan_eu.c: 1225: uint8_t i;
  6134                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  6135                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6136  002456  0EFE               	movlw	-2
  6137  002458  6AE3               	clrf	plusw1,c
  6138  00245A                     l15268:
  6139                           
  6140                           ;lorawan_eu.c: 1228: {
  6141                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  6142                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6143  00245A  0EFE               	movlw	-2
  6144  00245C  50E3               	movf	plusw1,w,c
  6145  00245E  0D0E               	mullw	14
  6146  002460  0E04               	movlw	low (_Channels+4)
  6147  002462  24F3               	addwf	prodl,w,c
  6148  002464  6ED9               	movwf	fsr2l,c
  6149  002466  0E04               	movlw	high (_Channels+4)
  6150  002468  20F4               	addwfc	prodh,w,c
  6151  00246A  6EDA               	movwf	fsr2h,c
  6152  00246C  04DE               	decf	postinc2,w,c
  6153  00246E  E001 D0AA          	bnz	l15286
  6154                           
  6155                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6156  002472  0EFE               	movlw	-2
  6157  002474  50E3               	movf	plusw1,w,c
  6158  002476  0D0E               	mullw	14
  6159  002478  0E08               	movlw	low (_Channels+8)
  6160  00247A  24F3               	addwf	prodl,w,c
  6161  00247C  6ED9               	movwf	fsr2l,c
  6162  00247E  0E04               	movlw	high (_Channels+8)
  6163  002480  20F4               	addwfc	prodh,w,c
  6164  002482  6EDA               	movwf	fsr2h,c
  6165  002484  50DE               	movf	postinc2,w,c
  6166  002486  10DE               	iorwf	postinc2,w,c
  6167  002488  10DE               	iorwf	postinc2,w,c
  6168  00248A  10DE               	iorwf	postinc2,w,c
  6169  00248C  E101 D09B          	bz	l15286
  6170                           
  6171                           ;lorawan_eu.c: 1231: {
  6172                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  6173                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6174  002490  0EFE               	movlw	-2
  6175  002492  50E3               	movf	plusw1,w,c
  6176  002494  0D0E               	mullw	14
  6177  002496  0E08               	movlw	low (_Channels+8)
  6178  002498  24F3               	addwf	prodl,w,c
  6179  00249A  6ED9               	movwf	fsr2l,c
  6180  00249C  0E04               	movlw	high (_Channels+8)
  6181  00249E  20F4               	addwfc	prodh,w,c
  6182  0024A0  6EDA               	movwf	fsr2h,c
  6183  0024A2  50DE               	movf	postinc2,w,c
  6184  0024A4  0102               	movlb	2	; () banked
  6185  0024A6  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  6186  0024A8  50DE               	movf	postinc2,w,c
  6187  0024AA  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  6188  0024AC  50DE               	movf	postinc2,w,c
  6189  0024AE  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  6190  0024B0  50DE               	movf	postinc2,w,c
  6191  0024B2  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  6192  0024B4  E22F               	bc	l15276
  6193                           
  6194                           ; BSR set to: 2
  6195                           ;lorawan_eu.c: 1233: {
  6196                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  6197                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6198  0024B6  0EFE               	movlw	-2
  6199  0024B8  50E3               	movf	plusw1,w,c
  6200  0024BA  0D0E               	mullw	14
  6201  0024BC  0E08               	movlw	low (_Channels+8)
  6202  0024BE  24F3               	addwf	prodl,w,c
  6203  0024C0  6ED9               	movwf	fsr2l,c
  6204  0024C2  0E04               	movlw	high (_Channels+8)
  6205  0024C4  20F4               	addwfc	prodh,w,c
  6206  0024C6  6EDA               	movwf	fsr2h,c
  6207  0024C8  CFDE F052          	movff	postinc2,btemp+8
  6208  0024CC  CFDE F053          	movff	postinc2,btemp+9
  6209  0024D0  CFDE F054          	movff	postinc2,btemp+10
  6210  0024D4  CFDE F055          	movff	postinc2,btemp+11
  6211  0024D8  51C8               	movf	(_loRa+200)& (0+255),w,b
  6212  0024DA  5C52               	subwf	btemp+8,w,c
  6213  0024DC  6E4E               	movwf	btemp+4,c
  6214  0024DE  51C9               	movf	(_loRa+201)& (0+255),w,b
  6215  0024E0  5853               	subwfb	btemp+9,w,c
  6216  0024E2  6E4F               	movwf	btemp+5,c
  6217  0024E4  51CA               	movf	(_loRa+202)& (0+255),w,b
  6218  0024E6  5854               	subwfb	btemp+10,w,c
  6219  0024E8  6E50               	movwf	btemp+6,c
  6220  0024EA  51CB               	movf	(_loRa+203)& (0+255),w,b
  6221  0024EC  5855               	subwfb	btemp+11,w,c
  6222  0024EE  6E51               	movwf	btemp+7,c
  6223                           
  6224                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6225  0024F0  0EFE               	movlw	-2
  6226  0024F2  50E3               	movf	plusw1,w,c
  6227  0024F4  0D0E               	mullw	14
  6228  0024F6  0E08               	movlw	low (_Channels+8)
  6229  0024F8  24F3               	addwf	prodl,w,c
  6230  0024FA  6ED9               	movwf	fsr2l,c
  6231  0024FC  0E04               	movlw	high (_Channels+8)
  6232  0024FE  20F4               	addwfc	prodh,w,c
  6233  002500  6EDA               	movwf	fsr2h,c
  6234  002502  C04E  FFDE         	movff	btemp+4,postinc2
  6235  002506  C04F  FFDE         	movff	btemp+5,postinc2
  6236  00250A  C050  FFDE         	movff	btemp+6,postinc2
  6237  00250E  C051  FFDE         	movff	btemp+7,postinc2
  6238                           
  6239                           ;lorawan_eu.c: 1235: }
  6240  002512  D00D               	goto	l15278
  6241  002514                     l15276:
  6242                           
  6243                           ; BSR set to: 2
  6244                           ;lorawan_eu.c: 1236: else
  6245                           ;lorawan_eu.c: 1237: {
  6246                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  6247                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6248  002514  0EFE               	movlw	-2
  6249  002516  50E3               	movf	plusw1,w,c
  6250  002518  0D0E               	mullw	14
  6251  00251A  0E08               	movlw	low (_Channels+8)
  6252  00251C  24F3               	addwf	prodl,w,c
  6253  00251E  6ED9               	movwf	fsr2l,c
  6254  002520  0E04               	movlw	high (_Channels+8)
  6255  002522  20F4               	addwfc	prodh,w,c
  6256  002524  6EDA               	movwf	fsr2h,c
  6257  002526  6ADE               	clrf	postinc2,c
  6258  002528  6ADE               	clrf	postinc2,c
  6259  00252A  6ADE               	clrf	postinc2,c
  6260  00252C  6ADD               	clrf	postdec2,c
  6261  00252E                     l15278:
  6262                           
  6263                           ; BSR set to: 2
  6264                           ;lorawan_eu.c: 1239: }
  6265                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  6266                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6267  00252E  0EFE               	movlw	-2
  6268  002530  50E3               	movf	plusw1,w,c
  6269  002532  0D0E               	mullw	14
  6270  002534  0E08               	movlw	low (_Channels+8)
  6271  002536  24F3               	addwf	prodl,w,c
  6272  002538  6ED9               	movwf	fsr2l,c
  6273  00253A  0E04               	movlw	high (_Channels+8)
  6274  00253C  20F4               	addwfc	prodh,w,c
  6275  00253E  6EDA               	movwf	fsr2h,c
  6276                           
  6277                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6278  002540  0EFA               	movlw	-6
  6279  002542  CFE3 F04B          	movff	plusw1,btemp+1
  6280  002546  50DE               	movf	postinc2,w,c
  6281  002548  5C4B               	subwf	btemp+1,w,c
  6282  00254A  0EFB               	movlw	-5
  6283  00254C  CFE3 F04B          	movff	plusw1,btemp+1
  6284  002550  50DE               	movf	postinc2,w,c
  6285  002552  584B               	subwfb	btemp+1,w,c
  6286  002554  0EFC               	movlw	-4
  6287  002556  CFE3 F04B          	movff	plusw1,btemp+1
  6288  00255A  50DE               	movf	postinc2,w,c
  6289  00255C  584B               	subwfb	btemp+1,w,c
  6290  00255E  0EFD               	movlw	-3
  6291  002560  CFE3 F04B          	movff	plusw1,btemp+1
  6292  002564  50DE               	movf	postinc2,w,c
  6293  002566  584B               	subwfb	btemp+1,w,c
  6294  002568  E32E               	bnc	l15286
  6295                           
  6296                           ; BSR set to: 2
  6297                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6298  00256A  0EFE               	movlw	-2
  6299  00256C  50E3               	movf	plusw1,w,c
  6300  00256E  0D0E               	mullw	14
  6301  002570  0E08               	movlw	low (_Channels+8)
  6302  002572  24F3               	addwf	prodl,w,c
  6303  002574  6ED9               	movwf	fsr2l,c
  6304  002576  0E04               	movlw	high (_Channels+8)
  6305  002578  20F4               	addwfc	prodh,w,c
  6306  00257A  6EDA               	movwf	fsr2h,c
  6307  00257C  50DE               	movf	postinc2,w,c
  6308  00257E  10DE               	iorwf	postinc2,w,c
  6309  002580  10DE               	iorwf	postinc2,w,c
  6310  002582  10DE               	iorwf	postinc2,w,c
  6311  002584  E020               	bz	l15286
  6312                           
  6313                           ; BSR set to: 2
  6314                           ;lorawan_eu.c: 1241: {
  6315                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  6316                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6317  002586  0EFE               	movlw	-2
  6318  002588  50E3               	movf	plusw1,w,c
  6319  00258A  0D0E               	mullw	14
  6320  00258C  0E08               	movlw	low (_Channels+8)
  6321  00258E  24F3               	addwf	prodl,w,c
  6322  002590  6ED9               	movwf	fsr2l,c
  6323  002592  0E04               	movlw	high (_Channels+8)
  6324  002594  20F4               	addwfc	prodh,w,c
  6325  002596  6EDA               	movwf	fsr2h,c
  6326  002598  CFDE F052          	movff	postinc2,btemp+8
  6327  00259C  CFDE F053          	movff	postinc2,btemp+9
  6328  0025A0  CFDE F054          	movff	postinc2,btemp+10
  6329  0025A4  CFDE F055          	movff	postinc2,btemp+11
  6330                           
  6331                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6332  0025A8  0EFA               	movlw	-6
  6333  0025AA  C052  FFE3         	movff	btemp+8,plusw1
  6334  0025AE  0EFB               	movlw	-5
  6335  0025B0  C053  FFE3         	movff	btemp+9,plusw1
  6336  0025B4  0EFC               	movlw	-4
  6337  0025B6  C054  FFE3         	movff	btemp+10,plusw1
  6338  0025BA  0EFD               	movlw	-3
  6339  0025BC  C055  FFE3         	movff	btemp+11,plusw1
  6340                           
  6341                           ; BSR set to: 2
  6342                           ;lorawan_eu.c: 1243: found = 1;
  6343                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6344  0025C0  0EFF               	movlw	-1
  6345  0025C2  6AE3               	clrf	plusw1,c
  6346  0025C4  2AE3               	incf	plusw1,f,c
  6347  0025C6                     l15286:
  6348                           
  6349                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6350  0025C6  0EFE               	movlw	-2
  6351  0025C8  2AE3               	incf	plusw1,f,c
  6352                           
  6353                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6354  0025CA  CFE3 F04B          	movff	plusw1,btemp+1
  6355  0025CE  0E0F               	movlw	15
  6356  0025D0  644B               	cpfsgt	btemp+1,c
  6357  0025D2  D743               	goto	l15268
  6358                           
  6359                           ;lorawan_eu.c: 1244: }
  6360                           ;lorawan_eu.c: 1245: }
  6361                           ;lorawan_eu.c: 1246: }
  6362                           ;lorawan_eu.c: 1247: if ( found == 1 )
  6363                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6364  0025D4  0EFF               	movlw	-1
  6365  0025D6  04E3               	decf	plusw1,w,c
  6366  0025D8  E001 D096          	bnz	l1299
  6367                           
  6368                           ;lorawan_eu.c: 1248: {
  6369                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6370                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6371  0025DC  50E1               	movf	fsr1l,w,c
  6372  0025DE  0FFA               	addlw	-6
  6373  0025E0  6ED9               	movwf	fsr2l,c
  6374  0025E2  50E2               	movf	fsr1h,w,c
  6375  0025E4  6EDA               	movwf	fsr2h,c
  6376  0025E6  0EFF               	movlw	255
  6377  0025E8  22DA               	addwfc	fsr2h,f,c
  6378  0025EA  CFDE F2C8          	movff	postinc2,_loRa+200
  6379  0025EE  CFDE F2C9          	movff	postinc2,_loRa+201
  6380  0025F2  CFDE F2CA          	movff	postinc2,_loRa+202
  6381  0025F6  CFDE F2CB          	movff	postinc2,_loRa+203
  6382                           
  6383                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6384                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6385  0025FA  0EFD               	movlw	-3
  6386  0025FC  50E3               	movf	plusw1,w,c
  6387  0025FE  E10D               	bnz	u17810
  6388  002600  0EFA               	movlw	-6
  6389  002602  28E3               	incf	plusw1,w,c
  6390  002604  0EFB               	movlw	-5
  6391  002606  CFE3 F04B          	movff	plusw1,btemp+1
  6392  00260A  0EFF               	movlw	255
  6393  00260C  5A4B               	subwfb	btemp+1,f,c
  6394  00260E  0EFC               	movlw	-4
  6395  002610  CFE3 F04B          	movff	plusw1,btemp+1
  6396  002614  0E0F               	movlw	15
  6397  002616  5A4B               	subwfb	btemp+1,f,c
  6398  002618  E328               	bnc	l15298
  6399  00261A                     u17810:
  6400                           
  6401                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6402  00261A  50E1               	movf	fsr1l,w,c
  6403  00261C  0FFA               	addlw	-6
  6404  00261E  6ED9               	movwf	fsr2l,c
  6405  002620  50E2               	movf	fsr1h,w,c
  6406  002622  6EDA               	movwf	fsr2h,c
  6407  002624  0EFF               	movlw	255
  6408  002626  22DA               	addwfc	fsr2h,f,c
  6409  002628  CFDE F064          	movff	postinc2,___lldiv@dividend
  6410  00262C  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6411  002630  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6412  002634  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6413  002638  0E7D               	movlw	125
  6414  00263A  0100               	movlb	0	; () banked
  6415  00263C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6416  00263E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6417  002640  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6418  002642  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6419  002644  EC1B  F031         	call	___lldiv	;wreg free
  6420  002648  C064  F052         	movff	?___lldiv,btemp+8
  6421  00264C  C065  F053         	movff	?___lldiv+1,btemp+9
  6422  002650  C066  F054         	movff	?___lldiv+2,btemp+10
  6423  002654  C067  F055         	movff	?___lldiv+3,btemp+11
  6424  002658  0E0C               	movlw	12
  6425  00265A                     u17825:
  6426  00265A  90D8               	bcf	status,0,c
  6427  00265C  3652               	rlcf	btemp+8,f,c
  6428  00265E  3653               	rlcf	btemp+9,f,c
  6429  002660  3654               	rlcf	btemp+10,f,c
  6430  002662  3655               	rlcf	btemp+11,f,c
  6431  002664  2EE8               	decfsz	wreg,f,c
  6432  002666  D7F9               	goto	u17825
  6433  002668  D02C               	goto	L1
  6434  00266A                     l15298:
  6435                           
  6436                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6437  00266A  0EFA               	movlw	-6
  6438  00266C  CFE3 F052          	movff	plusw1,btemp+8
  6439  002670  0EFB               	movlw	-5
  6440  002672  CFE3 F053          	movff	plusw1,btemp+9
  6441  002676  0EFC               	movlw	-4
  6442  002678  CFE3 F054          	movff	plusw1,btemp+10
  6443  00267C  0EFD               	movlw	-3
  6444  00267E  CFE3 F055          	movff	plusw1,btemp+11
  6445  002682  0E0C               	movlw	12
  6446  002684                     u17835:
  6447  002684  90D8               	bcf	status,0,c
  6448  002686  3652               	rlcf	btemp+8,f,c
  6449  002688  3653               	rlcf	btemp+9,f,c
  6450  00268A  3654               	rlcf	btemp+10,f,c
  6451  00268C  3655               	rlcf	btemp+11,f,c
  6452  00268E  2EE8               	decfsz	wreg,f,c
  6453  002690  D7F9               	goto	u17835
  6454  002692  C052  F064         	movff	btemp+8,___lldiv@dividend
  6455  002696  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  6456  00269A  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  6457  00269E  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  6458  0026A2  0E7D               	movlw	125
  6459  0026A4  0100               	movlb	0	; () banked
  6460  0026A6  6F68               	movwf	___lldiv@divisor& (0+255),b
  6461  0026A8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6462  0026AA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6463  0026AC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6464  0026AE  EC1B  F031         	call	___lldiv	;wreg free
  6465  0026B2  C064  F052         	movff	?___lldiv,btemp+8
  6466  0026B6  C065  F053         	movff	?___lldiv+1,btemp+9
  6467  0026BA  C066  F054         	movff	?___lldiv+2,btemp+10
  6468  0026BE  C067  F055         	movff	?___lldiv+3,btemp+11
  6469  0026C2                     L1:
  6470                           
  6471                           ;stkvar	_DutyCycleCallback$2272 @ sp[(-10)+0]
  6472  0026C2  0EF6               	movlw	-10
  6473  0026C4  C052  FFE3         	movff	btemp+8,plusw1
  6474  0026C8  0EF7               	movlw	-9
  6475  0026CA  C053  FFE3         	movff	btemp+9,plusw1
  6476  0026CE  0EF8               	movlw	-8
  6477  0026D0  C054  FFE3         	movff	btemp+10,plusw1
  6478  0026D4  0EF9               	movlw	-7
  6479  0026D6  C055  FFE3         	movff	btemp+11,plusw1
  6480                           
  6481                           ; BSR set to: 0
  6482                           ;stkvar	_DutyCycleCallback$2272 @ sp[(-10)+0]
  6483  0026DA  50E1               	movf	fsr1l,w,c
  6484  0026DC  0FF6               	addlw	-10
  6485  0026DE  6ED9               	movwf	fsr2l,c
  6486  0026E0  50E2               	movf	fsr1h,w,c
  6487  0026E2  6EDA               	movwf	fsr2h,c
  6488  0026E4  0EFF               	movlw	255
  6489  0026E6  22DA               	addwfc	fsr2h,f,c
  6490  0026E8  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6491  0026EC  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6492  0026F0  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6493  0026F4  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6494  0026F8  0102               	movlb	2	; () banked
  6495  0026FA  51E9               	movf	(_loRa+233)& (0+255),w,b
  6496  0026FC  EC5E  F037         	call	_SwTimerSetTimeout
  6497                           
  6498                           ; BSR set to: 0
  6499                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6500  002700  0102               	movlb	2	; () banked
  6501  002702  51E9               	movf	(_loRa+233)& (0+255),w,b
  6502  002704  EC59  F02F         	call	_SwTimerStart
  6503  002708                     l1299:
  6504                           
  6505                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6506  002708  0EF5               	movlw	245
  6507  00270A  26E1               	addwf	fsr1l,f,c
  6508  00270C  0EFF               	movlw	255
  6509  00270E  22E2               	addwfc	fsr1h,f,c
  6510  002710  0CFF               	retlw	255	;funcret
  6511  002712                     __end_of_DutyCycleCallback:
  6512                           	opt stack 0
  6513                           tosu	equ	0xFFF
  6514                           tosh	equ	0xFFE
  6515                           tosl	equ	0xFFD
  6516                           pclath	equ	0xFFA
  6517                           tblptru	equ	0xFF8
  6518                           tblptrh	equ	0xFF7
  6519                           tblptrl	equ	0xFF6
  6520                           tablat	equ	0xFF5
  6521                           prodh	equ	0xFF4
  6522                           prodl	equ	0xFF3
  6523                           intcon	equ	0xFF2
  6524                           intcon2	equ	0xFF1
  6525                           intcon3	equ	0xFF0
  6526                           postinc0	equ	0xFEE
  6527                           wreg	equ	0xFE8
  6528                           postinc1	equ	0xFE6
  6529                           plusw1	equ	0xFE3
  6530                           fsr1h	equ	0xFE2
  6531                           fsr1l	equ	0xFE1
  6532                           indf2	equ	0xFDF
  6533                           postinc2	equ	0xFDE
  6534                           postdec2	equ	0xFDD
  6535                           fsr2h	equ	0xFDA
  6536                           fsr2l	equ	0xFD9
  6537                           status	equ	0xFD8
  6538                           
  6539 ;; *************** function _UpdateJoinSuccessState *****************
  6540 ;; Defined at:
  6541 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6542 ;; Parameters:    Size  Location     Type
  6543 ;;  param           1  [STACK] unsigned char 
  6544 ;; Auto vars:     Size  Location     Type
  6545 ;;		None
  6546 ;; Return value:  Size  Location     Type
  6547 ;;                  1  [STACK] void 
  6548 ;; Registers used:
  6549 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tb
      +lptrh, tblptru, prodl, prodh, cstack
  6550 ;; Tracked objects:
  6551 ;;		On entry : F/0
  6552 ;;		On exit  : F/1
  6553 ;;		Unchanged: 0/0
  6554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6555 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6557 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6558 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6559 ;;Total ram usage:        0 bytes
  6560 ;; Hardware stack levels used:    1
  6561 ;; Hardware stack levels required when called:   11
  6562 ;; This function calls:
  6563 ;;		_RxJoinResponse
  6564 ;;		_SwTimerSetTimeout
  6565 ;;		_SwTimerStart
  6566 ;;		___lldiv
  6567 ;; This function is called by:
  6568 ;;		_SetCallbackSoftwareTimers
  6569 ;;		_LORAWAN_RxDone
  6570 ;;		_SwTimersExecute
  6571 ;; This function uses a reentrant model
  6572 ;;
  6573                           
  6574                           	psect	text37
  6575  0047CC                     __ptext37:
  6576                           	opt stack 0
  6577  0047CC                     _UpdateJoinSuccessState:
  6578                           	opt stack 0
  6579                           
  6580                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6581  0047CC  52E6               	movf	postinc1,f,c
  6582  0047CE  52E6               	movf	postinc1,f,c
  6583  0047D0  52E6               	movf	postinc1,f,c
  6584  0047D2  52E6               	movf	postinc1,f,c
  6585                           
  6586                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6587                           
  6588                           ;incstack = 0
  6589  0047D4  0102               	movlb	2	; () banked
  6590  0047D6  9500               	bcf	_loRa& (0+255),2,b
  6591                           
  6592                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6593  0047D8  8902               	bsf	(_loRa+2)& (0+255),4,b
  6594                           
  6595                           ; BSR set to: 2
  6596                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6597  0047DA  0EF0               	movlw	-16
  6598  0047DC  1702               	andwf	(_loRa+2)& (0+255),f,b
  6599                           
  6600                           ; BSR set to: 2
  6601                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6602  0047DE  6BD0               	clrf	(_loRa+208)& (0+255),b
  6603  0047E0  6BD1               	clrf	(_loRa+209)& (0+255),b
  6604                           
  6605                           ; BSR set to: 2
  6606                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6607  0047E2  6BEE               	clrf	(_loRa+238)& (0+255),b
  6608                           
  6609                           ; BSR set to: 2
  6610                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6611  0047E4  A503               	btfss	(_loRa+3)& (0+255),2,b
  6612  0047E6  D074               	goto	l14230
  6613                           
  6614                           ; BSR set to: 2
  6615                           ;lorawan.c: 1052: {
  6616                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6617  0047E8  51CF               	movf	(_loRa+207)& (0+255),w,b
  6618  0047EA  E106               	bnz	u15880
  6619  0047EC  29CC               	incf	(_loRa+204)& (0+255),w,b
  6620  0047EE  0EFF               	movlw	255
  6621  0047F0  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6622  0047F2  0E0F               	movlw	15
  6623  0047F4  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6624  0047F6  E321               	bnc	l14224
  6625  0047F8                     u15880:
  6626                           
  6627                           ; BSR set to: 2
  6628  0047F8  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6629  0047FC  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6630  004800  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6631  004804  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6632  004808  0E7D               	movlw	125
  6633  00480A  0100               	movlb	0	; () banked
  6634  00480C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6635  00480E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6636  004810  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6637  004812  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6638  004814  EC1B  F031         	call	___lldiv	;wreg free
  6639  004818  C064  F052         	movff	?___lldiv,btemp+8
  6640  00481C  C065  F053         	movff	?___lldiv+1,btemp+9
  6641  004820  C066  F054         	movff	?___lldiv+2,btemp+10
  6642  004824  C067  F055         	movff	?___lldiv+3,btemp+11
  6643  004828  0E0C               	movlw	12
  6644  00482A                     u15895:
  6645  00482A  90D8               	bcf	status,0,c
  6646  00482C  3652               	rlcf	btemp+8,f,c
  6647  00482E  3653               	rlcf	btemp+9,f,c
  6648  004830  3654               	rlcf	btemp+10,f,c
  6649  004832  3655               	rlcf	btemp+11,f,c
  6650  004834  2EE8               	decfsz	wreg,f,c
  6651  004836  D7F9               	goto	u15895
  6652  004838  D028               	goto	L2
  6653  00483A                     l14224:
  6654                           
  6655                           ; BSR set to: 2
  6656  00483A  C2CC  F052         	movff	_loRa+204,btemp+8
  6657  00483E  C2CD  F053         	movff	_loRa+205,btemp+9
  6658  004842  C2CE  F054         	movff	_loRa+206,btemp+10
  6659  004846  C2CF  F055         	movff	_loRa+207,btemp+11
  6660  00484A  0E0C               	movlw	12
  6661  00484C                     u15905:
  6662  00484C  90D8               	bcf	status,0,c
  6663  00484E  3652               	rlcf	btemp+8,f,c
  6664  004850  3653               	rlcf	btemp+9,f,c
  6665  004852  3654               	rlcf	btemp+10,f,c
  6666  004854  3655               	rlcf	btemp+11,f,c
  6667  004856  2EE8               	decfsz	wreg,f,c
  6668  004858  D7F9               	goto	u15905
  6669  00485A  C052  F064         	movff	btemp+8,___lldiv@dividend
  6670  00485E  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  6671  004862  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  6672  004866  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  6673  00486A  0E7D               	movlw	125
  6674  00486C  0100               	movlb	0	; () banked
  6675  00486E  6F68               	movwf	___lldiv@divisor& (0+255),b
  6676  004870  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  6677  004872  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  6678  004874  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  6679  004876  EC1B  F031         	call	___lldiv	;wreg free
  6680  00487A  C064  F052         	movff	?___lldiv,btemp+8
  6681  00487E  C065  F053         	movff	?___lldiv+1,btemp+9
  6682  004882  C066  F054         	movff	?___lldiv+2,btemp+10
  6683  004886  C067  F055         	movff	?___lldiv+3,btemp+11
  6684  00488A                     L2:
  6685                           
  6686                           ;stkvar	_UpdateJoinSuccessState$3313 @ sp[(-4)+0]
  6687  00488A  0EFC               	movlw	-4
  6688  00488C  C052  FFE3         	movff	btemp+8,plusw1
  6689  004890  0EFD               	movlw	-3
  6690  004892  C053  FFE3         	movff	btemp+9,plusw1
  6691  004896  0EFE               	movlw	-2
  6692  004898  C054  FFE3         	movff	btemp+10,plusw1
  6693  00489C  0EFF               	movlw	-1
  6694  00489E  C055  FFE3         	movff	btemp+11,plusw1
  6695                           
  6696                           ; BSR set to: 0
  6697                           ;stkvar	_UpdateJoinSuccessState$3313 @ sp[(-4)+0]
  6698  0048A2  50E1               	movf	fsr1l,w,c
  6699  0048A4  0FFC               	addlw	-4
  6700  0048A6  6ED9               	movwf	fsr2l,c
  6701  0048A8  50E2               	movf	fsr1h,w,c
  6702  0048AA  6EDA               	movwf	fsr2h,c
  6703  0048AC  0EFF               	movlw	255
  6704  0048AE  22DA               	addwfc	fsr2h,f,c
  6705  0048B0  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6706  0048B4  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6707  0048B8  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6708  0048BC  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6709  0048C0  0102               	movlb	2	; () banked
  6710  0048C2  51E7               	movf	(_loRa+231)& (0+255),w,b
  6711  0048C4  EC5E  F037         	call	_SwTimerSetTimeout
  6712                           
  6713                           ; BSR set to: 0
  6714                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6715  0048C8  0102               	movlb	2	; () banked
  6716  0048CA  51E7               	movf	(_loRa+231)& (0+255),w,b
  6717  0048CC  EC59  F02F         	call	_SwTimerStart
  6718  0048D0                     l14230:
  6719                           
  6720                           ;lorawan.c: 1055: }
  6721                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6722  0048D0  0101               	movlb	1	; () banked
  6723  0048D2  5174               	movf	(_rxPayload+2)& (0+255),w,b
  6724  0048D4  1175               	iorwf	(_rxPayload+3)& (0+255),w,b
  6725  0048D6  E00B               	bz	l2045
  6726                           
  6727                           ; BSR set to: 1
  6728                           ;lorawan.c: 1058: {
  6729                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6730  0048D8  D801               	call	u15928
  6731  0048DA  D009               	goto	l2045
  6732  0048DC                     u15928:
  6733  0048DC  0005               	push	
  6734  0048DE  6EFA               	movwf	pclath,c
  6735  0048E0  5174               	movf	(_rxPayload+2)& (0+255),w,b
  6736  0048E2  6EFD               	movwf	tosl,c
  6737  0048E4  5175               	movf	(_rxPayload+3)& (0+255),w,b
  6738  0048E6  6EFE               	movwf	tosh,c
  6739  0048E8  6AFF               	clrf	tosu,c
  6740  0048EA  50FA               	movf	pclath,w,c
  6741  0048EC  0C01               	retlw	1	;indir
  6742  0048EE                     l2045:
  6743                           
  6744                           ; BSR set to: 1
  6745                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6746  0048EE  0EFB               	movlw	251
  6747  0048F0  26E1               	addwf	fsr1l,f,c
  6748  0048F2  0EFF               	movlw	255
  6749  0048F4  22E2               	addwfc	fsr1h,f,c
  6750  0048F6  0CFF               	retlw	255	;funcret
  6751  0048F8                     __end_of_UpdateJoinSuccessState:
  6752                           	opt stack 0
  6753                           tosu	equ	0xFFF
  6754                           tosh	equ	0xFFE
  6755                           tosl	equ	0xFFD
  6756                           pclath	equ	0xFFA
  6757                           tblptru	equ	0xFF8
  6758                           tblptrh	equ	0xFF7
  6759                           tblptrl	equ	0xFF6
  6760                           tablat	equ	0xFF5
  6761                           prodh	equ	0xFF4
  6762                           prodl	equ	0xFF3
  6763                           intcon	equ	0xFF2
  6764                           intcon2	equ	0xFF1
  6765                           intcon3	equ	0xFF0
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postinc1	equ	0xFE6
  6769                           plusw1	equ	0xFE3
  6770                           fsr1h	equ	0xFE2
  6771                           fsr1l	equ	0xFE1
  6772                           indf2	equ	0xFDF
  6773                           postinc2	equ	0xFDE
  6774                           postdec2	equ	0xFDD
  6775                           fsr2h	equ	0xFDA
  6776                           fsr2l	equ	0xFD9
  6777                           status	equ	0xFD8
  6778                           
  6779 ;; *************** function _AutomaticReplyCallback *****************
  6780 ;; Defined at:
  6781 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6782 ;; Parameters:    Size  Location     Type
  6783 ;;  param           1  [STACK] unsigned char 
  6784 ;; Auto vars:     Size  Location     Type
  6785 ;;		None
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  1  [STACK] void 
  6788 ;; Registers used:
  6789 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : F/0
  6792 ;;		On exit  : F/2
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6798 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;Total ram usage:        0 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:   14
  6802 ;; This function calls:
  6803 ;;		_LORAWAN_Send
  6804 ;; This function is called by:
  6805 ;;		_SetCallbackSoftwareTimers
  6806 ;;		_SwTimersExecute
  6807 ;; This function uses a reentrant model
  6808 ;;
  6809                           
  6810                           	psect	text38
  6811  007620                     __ptext38:
  6812                           	opt stack 0
  6813  007620                     _AutomaticReplyCallback:
  6814                           	opt stack 14
  6815                           
  6816                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6817                           
  6818                           ; BSR set to: 1
  6819                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6820                           ;incstack = 0
  6821  007620  0EF0               	movlw	-16
  6822  007622  0102               	movlb	2	; () banked
  6823  007624  1702               	andwf	(_loRa+2)& (0+255),f,b
  6824                           
  6825                           ; BSR set to: 2
  6826                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6827  007626  0E00               	movlw	0
  6828  007628  0101               	movlb	1	; () banked
  6829  00762A  6F6B               	movwf	LORAWAN_Send@port& (0+255),b
  6830  00762C  6F6C               	movwf	LORAWAN_Send@buffer& (0+255),b
  6831  00762E  6F6D               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6832  007630  6F6E               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6833  007632  EC5A  F02B         	call	_LORAWAN_Send
  6834                           
  6835                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6836  007636  0102               	movlb	2	; () banked
  6837  007638  9700               	bcf	_loRa& (0+255),3,b
  6838                           
  6839                           ; BSR set to: 2
  6840                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6841  00763A  52E5               	movf	postdec1,f,c
  6842  00763C  0012               	return		;funcret
  6843  00763E                     __end_of_AutomaticReplyCallback:
  6844                           	opt stack 0
  6845                           tosu	equ	0xFFF
  6846                           tosh	equ	0xFFE
  6847                           tosl	equ	0xFFD
  6848                           pclath	equ	0xFFA
  6849                           tblptru	equ	0xFF8
  6850                           tblptrh	equ	0xFF7
  6851                           tblptrl	equ	0xFF6
  6852                           tablat	equ	0xFF5
  6853                           prodh	equ	0xFF4
  6854                           prodl	equ	0xFF3
  6855                           intcon	equ	0xFF2
  6856                           intcon2	equ	0xFF1
  6857                           intcon3	equ	0xFF0
  6858                           postinc0	equ	0xFEE
  6859                           wreg	equ	0xFE8
  6860                           postinc1	equ	0xFE6
  6861                           postdec1	equ	0xFE5
  6862                           plusw1	equ	0xFE3
  6863                           fsr1h	equ	0xFE2
  6864                           fsr1l	equ	0xFE1
  6865                           indf2	equ	0xFDF
  6866                           postinc2	equ	0xFDE
  6867                           postdec2	equ	0xFDD
  6868                           fsr2h	equ	0xFDA
  6869                           fsr2l	equ	0xFD9
  6870                           status	equ	0xFD8
  6871                           
  6872 ;; *************** function _AckRetransmissionCallback *****************
  6873 ;; Defined at:
  6874 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6875 ;; Parameters:    Size  Location     Type
  6876 ;;  param           1  [STACK] unsigned char 
  6877 ;; Auto vars:     Size  Location     Type
  6878 ;;  maximumPacke    1  [STACK] unsigned char 
  6879 ;; Return value:  Size  Location     Type
  6880 ;;                  1  [STACK] void 
  6881 ;; Registers used:
  6882 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6883 ;; Tracked objects:
  6884 ;;		On entry : F/0
  6885 ;;		On exit  : C/0
  6886 ;;		Unchanged: 0/0
  6887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6892 ;;Total ram usage:        0 bytes
  6893 ;; Hardware stack levels used:    1
  6894 ;; Hardware stack levels required when called:   13
  6895 ;; This function calls:
  6896 ;;		_FindSmallestDataRate
  6897 ;;		_LORAWAN_GetMaxPayloadSize
  6898 ;;		_RADIO_Transmit
  6899 ;;		_ResetParametersForConfirmedTransmission
  6900 ;;		_RxDataDone
  6901 ;;		_SelectChannelForTransmission
  6902 ;;		_UpdateRetransmissionAckTimeoutState
  6903 ;; This function is called by:
  6904 ;;		_SetCallbackSoftwareTimers
  6905 ;;		_SwTimersExecute
  6906 ;; This function uses a reentrant model
  6907 ;;
  6908                           
  6909                           	psect	text39
  6910  004C12                     __ptext39:
  6911                           	opt stack 0
  6912  004C12                     _AckRetransmissionCallback:
  6913                           	opt stack 0
  6914                           
  6915                           ; BSR set to: 2
  6916                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6917  004C12  52E6               	movf	postinc1,f,c
  6918                           
  6919                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6920                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6921                           
  6922                           ;incstack = 0
  6923  004C14  0102               	movlb	2	; () banked
  6924  004C16  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6925  004C18  D073               	goto	l15404
  6926                           
  6927                           ; BSR set to: 2
  6928                           ;lorawan.c: 939: {
  6929                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6930  004C1A  51D9               	movf	(_loRa+217)& (0+255),w,b
  6931  004C1C  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6932  004C1E  E353               	bnc	l15394
  6933                           
  6934                           ; BSR set to: 2
  6935                           ;lorawan.c: 941: {
  6936                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6937  004C20  EC19  F036         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6938  004C24  6E55               	movwf	btemp+11,c
  6939  004C26  0E0D               	movlw	13
  6940  004C28  2655               	addwf	btemp+11,f,c
  6941                           
  6942                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6943  004C2A  0EFF               	movlw	-1
  6944  004C2C  C055  FFE3         	movff	btemp+11,plusw1
  6945                           
  6946                           ; BSR set to: 0
  6947                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6948                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6949  004C30  50E3               	movf	plusw1,w,c
  6950  004C32  6E4B               	movwf	btemp+1,c
  6951  004C34  6A4C               	clrf	btemp+2,c
  6952  004C36  0102               	movlb	2	; () banked
  6953  004C38  51D4               	movf	(_loRa+212)& (0+255),w,b
  6954  004C3A  5C4B               	subwf	btemp+1,w,c
  6955  004C3C  51D5               	movf	(_loRa+213)& (0+255),w,b
  6956  004C3E  584C               	subwfb	btemp+2,w,c
  6957  004C40  E333               	bnc	l15388
  6958                           
  6959                           ; BSR set to: 2
  6960                           ;lorawan.c: 946: {
  6961                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6962  004C42  0E01               	movlw	1
  6963  004C44  ECC1  F033         	call	_SelectChannelForTransmission
  6964  004C48  0900               	iorlw	0
  6965  004C4A  E12B               	bnz	l15384
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;lorawan.c: 948: {
  6969                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6970  004C4C  0EF0               	movlw	low (_macBuffer+16)
  6971  004C4E  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  6972  004C50  0E04               	movlw	high (_macBuffer+16)
  6973  004C52  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6974  004C54  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6975  004C58  EC00  F018         	call	_RADIO_Transmit	;wreg free
  6976  004C5C  C096  F04B         	movff	?_RADIO_Transmit,btemp+1
  6977  004C60  C097  F04C         	movff	?_RADIO_Transmit+1,btemp+2
  6978  004C64  504B               	movf	btemp+1,w,c
  6979  004C66  104C               	iorwf	btemp+2,w,c
  6980  004C68  E11C               	bnz	l15384
  6981                           
  6982                           ; BSR set to: 0
  6983                           ;lorawan.c: 951: {
  6984                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6985  004C6A  0102               	movlb	2	; () banked
  6986  004C6C  5102               	movf	(_loRa+2)& (0+255),w,b
  6987  004C6E  0BF0               	andlw	-16
  6988  004C70  0901               	iorlw	1
  6989  004C72  6F02               	movwf	(_loRa+2)& (0+255),b
  6990                           
  6991                           ; BSR set to: 2
  6992                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6993  004C74  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6994                           
  6995                           ; BSR set to: 2
  6996                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6997  004C76  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6998  004C78  D045               	goto	l2018
  6999                           
  7000                           ; BSR set to: 2
  7001  004C7A  51DF               	movf	(_loRa+223)& (0+255),w,b
  7002  004C7C  E043               	bz	l2018
  7003                           
  7004                           ; BSR set to: 2
  7005  004C7E  51D9               	movf	(_loRa+217)& (0+255),w,b
  7006  004C80  6E4B               	movwf	btemp+1,c
  7007  004C82  6A4C               	clrf	btemp+2,c
  7008  004C84  51D7               	movf	(_loRa+215)& (0+255),w,b
  7009  004C86  6E54               	movwf	btemp+10,c
  7010  004C88  6A55               	clrf	btemp+11,c
  7011  004C8A  2A54               	incf	btemp+10,f,c
  7012  004C8C  0E00               	movlw	0
  7013  004C8E  2255               	addwfc	btemp+11,f,c
  7014  004C90  504B               	movf	btemp+1,w,c
  7015  004C92  1854               	xorwf	btemp+10,w,c
  7016  004C94  E103               	bnz	u18040
  7017  004C96  504C               	movf	btemp+2,w,c
  7018  004C98  1855               	xorwf	btemp+11,w,c
  7019  004C9A  E034               	bz	l2018
  7020  004C9C                     u18040:
  7021                           
  7022                           ; BSR set to: 2
  7023                           ;lorawan.c: 957: {
  7024                           ;lorawan.c: 958: FindSmallestDataRate();
  7025  004C9C  ECDB  F02D         	call	_FindSmallestDataRate	;wreg free
  7026  004CA0  D031               	goto	l2018
  7027  004CA2                     l15384:
  7028                           
  7029                           ; BSR set to: 0
  7030                           ;lorawan.c: 961: else
  7031                           ;lorawan.c: 962: {
  7032                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  7033  004CA2  ECC4  F031         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  7034  004CA6  D02E               	goto	l2018
  7035  004CA8                     l15388:
  7036                           
  7037                           ; BSR set to: 2
  7038                           ;lorawan.c: 973: else
  7039                           ;lorawan.c: 974: {
  7040                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  7041  004CA8  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7042                           
  7043                           ; BSR set to: 2
  7044                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  7045  004CAC  0101               	movlb	1	; () banked
  7046  004CAE  5172               	movf	_rxPayload& (0+255),w,b
  7047  004CB0  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  7048  004CB2  E028               	bz	l2018
  7049                           
  7050                           ; BSR set to: 1
  7051                           ;lorawan.c: 977: {
  7052                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  7053  004CB4  0100               	movlb	0	; () banked
  7054  004CB6  6B64               	clrf	RxDataDone@pData& (0+255),b
  7055  004CB8  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7056  004CBA  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7057  004CBC  0E04               	movlw	4
  7058  004CBE  6F67               	movwf	RxDataDone@status& (0+255),b
  7059  004CC0  D801               	call	u18068
  7060  004CC2  D020               	goto	l2018
  7061  004CC4                     u18068:
  7062  004CC4  D013               	goto	u18108
  7063  004CC6                     l15394:
  7064                           
  7065                           ; BSR set to: 2
  7066                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  7067  004CC6  51D9               	movf	(_loRa+217)& (0+255),w,b
  7068  004CC8  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  7069  004CCA  E21C               	bc	l2018
  7070                           
  7071                           ; BSR set to: 2
  7072  004CCC  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7073  004CCE  D01A               	goto	l2018
  7074                           
  7075                           ; BSR set to: 2
  7076                           ;lorawan.c: 983: {
  7077                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  7078  004CD0  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7079                           
  7080                           ; BSR set to: 2
  7081                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  7082  004CD4  0101               	movlb	1	; () banked
  7083  004CD6  5172               	movf	_rxPayload& (0+255),w,b
  7084  004CD8  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  7085  004CDA  E014               	bz	l2018
  7086                           
  7087                           ; BSR set to: 1
  7088                           ;lorawan.c: 986: {
  7089                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7090  004CDC  0E00               	movlw	0
  7091  004CDE  0100               	movlb	0	; () banked
  7092  004CE0  6B64               	clrf	RxDataDone@pData& (0+255),b
  7093  004CE2  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7094  004CE4  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7095  004CE6  6B67               	clrf	RxDataDone@status& (0+255),b
  7096  004CE8  D801               	call	u18108
  7097  004CEA  D00C               	goto	l2018
  7098  004CEC                     u18108:
  7099  004CEC  0005               	push	
  7100  004CEE  6EFA               	movwf	pclath,c
  7101  004CF0  0101               	movlb	1	; () banked
  7102  004CF2  5172               	movf	_rxPayload& (0+255),w,b
  7103  004CF4  6EFD               	movwf	tosl,c
  7104  004CF6  5173               	movf	(_rxPayload+1)& (0+255),w,b
  7105  004CF8  6EFE               	movwf	tosh,c
  7106  004CFA  6AFF               	clrf	tosu,c
  7107  004CFC  50FA               	movf	pclath,w,c
  7108  004CFE  0012               	return		;indir
  7109  004D00                     l15404:
  7110                           
  7111                           ; BSR set to: 2
  7112                           ;lorawan.c: 991: else
  7113                           ;lorawan.c: 992: {
  7114                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  7115  004D00  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7116  004D04                     l2018:
  7117                           
  7118                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7119  004D04  52E5               	movf	postdec1,f,c
  7120  004D06  52E5               	movf	postdec1,f,c
  7121  004D08  0012               	return		;funcret
  7122  004D0A                     __end_of_AckRetransmissionCallback:
  7123                           	opt stack 0
  7124                           tosu	equ	0xFFF
  7125                           tosh	equ	0xFFE
  7126                           tosl	equ	0xFFD
  7127                           pclath	equ	0xFFA
  7128                           tblptru	equ	0xFF8
  7129                           tblptrh	equ	0xFF7
  7130                           tblptrl	equ	0xFF6
  7131                           tablat	equ	0xFF5
  7132                           prodh	equ	0xFF4
  7133                           prodl	equ	0xFF3
  7134                           intcon	equ	0xFF2
  7135                           intcon2	equ	0xFF1
  7136                           intcon3	equ	0xFF0
  7137                           postinc0	equ	0xFEE
  7138                           wreg	equ	0xFE8
  7139                           postinc1	equ	0xFE6
  7140                           postdec1	equ	0xFE5
  7141                           plusw1	equ	0xFE3
  7142                           fsr1h	equ	0xFE2
  7143                           fsr1l	equ	0xFE1
  7144                           indf2	equ	0xFDF
  7145                           postinc2	equ	0xFDE
  7146                           postdec2	equ	0xFDD
  7147                           fsr2h	equ	0xFDA
  7148                           fsr2l	equ	0xFD9
  7149                           status	equ	0xFD8
  7150                           
  7151 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  7152 ;; Defined at:
  7153 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  param           1  [STACK] unsigned char 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  iCtr            1  [STACK] unsigned char 
  7158 ;; Return value:  Size  Location     Type
  7159 ;;                  1  [STACK] void 
  7160 ;; Registers used:
  7161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+1, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, c
      +stack
  7162 ;; Tracked objects:
  7163 ;;		On entry : F/0
  7164 ;;		On exit  : D/0
  7165 ;;		Unchanged: 0/0
  7166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7167 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7168 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7169 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7170 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7171 ;;Total ram usage:        0 bytes
  7172 ;; Hardware stack levels used:    1
  7173 ;; Hardware stack levels required when called:   11
  7174 ;; This function calls:
  7175 ;;		_SwTimerSetTimeout
  7176 ;;		_SwTimerStart
  7177 ;;		___lldiv
  7178 ;; This function is called by:
  7179 ;;		_SetCallbackSoftwareTimers
  7180 ;;		_SwTimersExecute
  7181 ;; This function uses a reentrant model
  7182 ;;
  7183                           
  7184                           	psect	text40
  7185  004038                     __ptext40:
  7186                           	opt stack 0
  7187  004038                     _LORAWAN_LinkCheckCallback:
  7188                           	opt stack 0
  7189                           
  7190                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7191  004038  0E05               	movlw	5
  7192  00403A  26E1               	addwf	fsr1l,f,c
  7193  00403C  0E00               	movlw	0
  7194  00403E  22E2               	addwfc	fsr1h,f,c
  7195                           
  7196                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  7197                           
  7198                           ;incstack = 0
  7199  004040  0102               	movlb	2	; () banked
  7200  004042  A103               	btfss	(_loRa+3)& (0+255),0,b
  7201                           
  7202                           ; BSR set to: 2
  7203  004044  A503               	btfss	(_loRa+3)& (0+255),2,b
  7204  004046  D029               	goto	l15348
  7205                           
  7206                           ; BSR set to: 2
  7207                           ;lorawan.c: 886: {
  7208                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  7209                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7210  004048  0EFF               	movlw	-1
  7211  00404A  6AE3               	clrf	plusw1,c
  7212  00404C  D00E               	goto	l15338
  7213  00404E                     l15332:
  7214                           
  7215                           ; BSR set to: 2
  7216                           ;lorawan.c: 889: {
  7217                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  7218                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7219  00404E  0EFF               	movlw	-1
  7220  004050  50E3               	movf	plusw1,w,c
  7221  004052  0D02               	mullw	2
  7222  004054  0EA8               	movlw	low (_loRa+168)
  7223  004056  24F3               	addwf	prodl,w,c
  7224  004058  6ED9               	movwf	fsr2l,c
  7225  00405A  0E02               	movlw	high (_loRa+168)
  7226  00405C  20F4               	addwfc	prodh,w,c
  7227  00405E  6EDA               	movwf	fsr2h,c
  7228  004060  0E02               	movlw	2
  7229  004062  18DE               	xorwf	postinc2,w,c
  7230  004064  E008               	bz	l15340
  7231                           
  7232                           ; BSR set to: 2
  7233                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7234  004066  0EFF               	movlw	-1
  7235  004068  2AE3               	incf	plusw1,f,c
  7236  00406A                     l15338:
  7237                           
  7238                           ; BSR set to: 2
  7239                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7240  00406A  0EFF               	movlw	-1
  7241  00406C  CFE3 F04B          	movff	plusw1,btemp+1
  7242  004070  51A7               	movf	(_loRa+167)& (0+255),w,b
  7243  004072  5C4B               	subwf	btemp+1,w,c
  7244  004074  E3EC               	bnc	l15332
  7245  004076                     l15340:
  7246                           
  7247                           ; BSR set to: 2
  7248                           ;lorawan.c: 893: }
  7249                           ;lorawan.c: 894: }
  7250                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  7251                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7252  004076  0EFF               	movlw	-1
  7253  004078  50E3               	movf	plusw1,w,c
  7254  00407A  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  7255  00407C  E10E               	bnz	l15348
  7256                           
  7257                           ; BSR set to: 2
  7258                           ;lorawan.c: 897: {
  7259                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  7260  00407E  51A7               	movf	(_loRa+167)& (0+255),w,b
  7261  004080  0D02               	mullw	2
  7262  004082  0EA8               	movlw	low (_loRa+168)
  7263  004084  24F3               	addwf	prodl,w,c
  7264  004086  6ED9               	movwf	fsr2l,c
  7265  004088  0E02               	movlw	high (_loRa+168)
  7266  00408A  20F4               	addwfc	prodh,w,c
  7267  00408C  6EDA               	movwf	fsr2h,c
  7268  00408E  0E02               	movlw	2
  7269  004090  6EDF               	movwf	indf2,c
  7270                           
  7271                           ; BSR set to: 2
  7272                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  7273  004092  0E10               	movlw	16
  7274  004094  61A7               	cpfslt	(_loRa+167)& (0+255),b
  7275  004096  D001               	goto	l15348
  7276                           
  7277                           ; BSR set to: 2
  7278                           ;lorawan.c: 901: {
  7279                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  7280  004098  2BA7               	incf	(_loRa+167)& (0+255),f,b
  7281  00409A                     l15348:
  7282                           
  7283                           ; BSR set to: 2
  7284                           ;lorawan.c: 903: }
  7285                           ;lorawan.c: 904: }
  7286                           ;lorawan.c: 905: }
  7287                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  7288  00409A  A503               	btfss	(_loRa+3)& (0+255),2,b
  7289  00409C  D074               	goto	l1996
  7290                           
  7291                           ; BSR set to: 2
  7292                           ;lorawan.c: 909: {
  7293                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  7294  00409E  51CF               	movf	(_loRa+207)& (0+255),w,b
  7295  0040A0  E106               	bnz	u17940
  7296  0040A2  29CC               	incf	(_loRa+204)& (0+255),w,b
  7297  0040A4  0EFF               	movlw	255
  7298  0040A6  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  7299  0040A8  0E0F               	movlw	15
  7300  0040AA  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  7301  0040AC  E321               	bnc	l15354
  7302  0040AE                     u17940:
  7303                           
  7304                           ; BSR set to: 2
  7305  0040AE  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  7306  0040B2  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  7307  0040B6  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  7308  0040BA  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  7309  0040BE  0E7D               	movlw	125
  7310  0040C0  0100               	movlb	0	; () banked
  7311  0040C2  6F68               	movwf	___lldiv@divisor& (0+255),b
  7312  0040C4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  7313  0040C6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  7314  0040C8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  7315  0040CA  EC1B  F031         	call	___lldiv	;wreg free
  7316  0040CE  C064  F052         	movff	?___lldiv,btemp+8
  7317  0040D2  C065  F053         	movff	?___lldiv+1,btemp+9
  7318  0040D6  C066  F054         	movff	?___lldiv+2,btemp+10
  7319  0040DA  C067  F055         	movff	?___lldiv+3,btemp+11
  7320  0040DE  0E0C               	movlw	12
  7321  0040E0                     u17955:
  7322  0040E0  90D8               	bcf	status,0,c
  7323  0040E2  3652               	rlcf	btemp+8,f,c
  7324  0040E4  3653               	rlcf	btemp+9,f,c
  7325  0040E6  3654               	rlcf	btemp+10,f,c
  7326  0040E8  3655               	rlcf	btemp+11,f,c
  7327  0040EA  2EE8               	decfsz	wreg,f,c
  7328  0040EC  D7F9               	goto	u17955
  7329  0040EE  D028               	goto	L3
  7330  0040F0                     l15354:
  7331                           
  7332                           ; BSR set to: 2
  7333  0040F0  C2CC  F052         	movff	_loRa+204,btemp+8
  7334  0040F4  C2CD  F053         	movff	_loRa+205,btemp+9
  7335  0040F8  C2CE  F054         	movff	_loRa+206,btemp+10
  7336  0040FC  C2CF  F055         	movff	_loRa+207,btemp+11
  7337  004100  0E0C               	movlw	12
  7338  004102                     u17965:
  7339  004102  90D8               	bcf	status,0,c
  7340  004104  3652               	rlcf	btemp+8,f,c
  7341  004106  3653               	rlcf	btemp+9,f,c
  7342  004108  3654               	rlcf	btemp+10,f,c
  7343  00410A  3655               	rlcf	btemp+11,f,c
  7344  00410C  2EE8               	decfsz	wreg,f,c
  7345  00410E  D7F9               	goto	u17965
  7346  004110  C052  F064         	movff	btemp+8,___lldiv@dividend
  7347  004114  C053  F065         	movff	btemp+9,___lldiv@dividend+1
  7348  004118  C054  F066         	movff	btemp+10,___lldiv@dividend+2
  7349  00411C  C055  F067         	movff	btemp+11,___lldiv@dividend+3
  7350  004120  0E7D               	movlw	125
  7351  004122  0100               	movlb	0	; () banked
  7352  004124  6F68               	movwf	___lldiv@divisor& (0+255),b
  7353  004126  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
  7354  004128  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
  7355  00412A  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
  7356  00412C  EC1B  F031         	call	___lldiv	;wreg free
  7357  004130  C064  F052         	movff	?___lldiv,btemp+8
  7358  004134  C065  F053         	movff	?___lldiv+1,btemp+9
  7359  004138  C066  F054         	movff	?___lldiv+2,btemp+10
  7360  00413C  C067  F055         	movff	?___lldiv+3,btemp+11
  7361  004140                     L3:
  7362                           
  7363                           ;stkvar	_LORAWAN_LinkCheckCallback$3296 @ sp[(-5)+0]
  7364  004140  0EFB               	movlw	-5
  7365  004142  C052  FFE3         	movff	btemp+8,plusw1
  7366  004146  0EFC               	movlw	-4
  7367  004148  C053  FFE3         	movff	btemp+9,plusw1
  7368  00414C  0EFD               	movlw	-3
  7369  00414E  C054  FFE3         	movff	btemp+10,plusw1
  7370  004152  0EFE               	movlw	-2
  7371  004154  C055  FFE3         	movff	btemp+11,plusw1
  7372                           
  7373                           ; BSR set to: 0
  7374                           ;stkvar	_LORAWAN_LinkCheckCallback$3296 @ sp[(-5)+0]
  7375  004158  50E1               	movf	fsr1l,w,c
  7376  00415A  0FFB               	addlw	-5
  7377  00415C  6ED9               	movwf	fsr2l,c
  7378  00415E  50E2               	movf	fsr1h,w,c
  7379  004160  6EDA               	movwf	fsr2h,c
  7380  004162  0EFF               	movlw	255
  7381  004164  22DA               	addwfc	fsr2h,f,c
  7382  004166  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7383  00416A  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7384  00416E  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7385  004172  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7386  004176  0102               	movlb	2	; () banked
  7387  004178  51E7               	movf	(_loRa+231)& (0+255),w,b
  7388  00417A  EC5E  F037         	call	_SwTimerSetTimeout
  7389                           
  7390                           ; BSR set to: 0
  7391                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7392  00417E  0102               	movlb	2	; () banked
  7393  004180  51E7               	movf	(_loRa+231)& (0+255),w,b
  7394  004182  EC59  F02F         	call	_SwTimerStart
  7395  004186                     l1996:
  7396                           
  7397                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7398  004186  0EFA               	movlw	250
  7399  004188  26E1               	addwf	fsr1l,f,c
  7400  00418A  0EFF               	movlw	255
  7401  00418C  22E2               	addwfc	fsr1h,f,c
  7402  00418E  0CFF               	retlw	255	;funcret
  7403  004190                     __end_of_LORAWAN_LinkCheckCallback:
  7404                           	opt stack 0
  7405                           tosu	equ	0xFFF
  7406                           tosh	equ	0xFFE
  7407                           tosl	equ	0xFFD
  7408                           pclath	equ	0xFFA
  7409                           tblptru	equ	0xFF8
  7410                           tblptrh	equ	0xFF7
  7411                           tblptrl	equ	0xFF6
  7412                           tablat	equ	0xFF5
  7413                           prodh	equ	0xFF4
  7414                           prodl	equ	0xFF3
  7415                           intcon	equ	0xFF2
  7416                           intcon2	equ	0xFF1
  7417                           intcon3	equ	0xFF0
  7418                           postinc0	equ	0xFEE
  7419                           wreg	equ	0xFE8
  7420                           postinc1	equ	0xFE6
  7421                           postdec1	equ	0xFE5
  7422                           plusw1	equ	0xFE3
  7423                           fsr1h	equ	0xFE2
  7424                           fsr1l	equ	0xFE1
  7425                           indf2	equ	0xFDF
  7426                           postinc2	equ	0xFDE
  7427                           postdec2	equ	0xFDD
  7428                           fsr2h	equ	0xFDA
  7429                           fsr2l	equ	0xFD9
  7430                           status	equ	0xFD8
  7431                           
  7432 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7433 ;; Defined at:
  7434 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  param           1  [STACK] unsigned char 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;  freq            4  [STACK] unsigned long 
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  1  [STACK] void 
  7441 ;; Registers used:
  7442 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7443 ;; Tracked objects:
  7444 ;;		On entry : F/0
  7445 ;;		On exit  : D/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7452 ;;Total ram usage:        0 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; Hardware stack levels required when called:   13
  7455 ;; This function calls:
  7456 ;;		_ConfigureRadioRx
  7457 ;;		_GetRx1Freq
  7458 ;;		_RADIO_ReceiveStart
  7459 ;;		_RADIO_ReceiveStop
  7460 ;;		_RADIO_ReleaseData
  7461 ;; This function is called by:
  7462 ;;		_SetCallbackSoftwareTimers
  7463 ;;		_SwTimersExecute
  7464 ;; This function uses a reentrant model
  7465 ;;
  7466                           
  7467                           	psect	text41
  7468  0058EA                     __ptext41:
  7469                           	opt stack 0
  7470  0058EA                     _LORAWAN_ReceiveWindow1Callback:
  7471                           	opt stack 0
  7472                           
  7473                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7474  0058EA  52E6               	movf	postinc1,f,c
  7475  0058EC  52E6               	movf	postinc1,f,c
  7476  0058EE  52E6               	movf	postinc1,f,c
  7477  0058F0  52E6               	movf	postinc1,f,c
  7478                           
  7479                           ;lorawan.c: 798: uint32_t freq;
  7480                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7481                           
  7482                           ;incstack = 0
  7483  0058F2  0102               	movlb	2	; () banked
  7484  0058F4  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7485  0058F6  D04E               	goto	l1969
  7486                           
  7487                           ; BSR set to: 2
  7488                           ;lorawan.c: 801: {
  7489                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7490  0058F8  0E02               	movlw	2
  7491  0058FA  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7492  0058FC  E102               	bnz	l15310
  7493                           
  7494                           ; BSR set to: 2
  7495                           ;lorawan.c: 803: {
  7496                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7497  0058FE  EC2E  F03B         	call	_RADIO_ReceiveStop	;wreg free
  7498  005902                     l15310:
  7499                           
  7500                           ;lorawan.c: 805: }
  7501                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7502  005902  0102               	movlb	2	; () banked
  7503  005904  51EF               	movf	(_loRa+239)& (0+255),w,b
  7504  005906  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7505  005908  E304               	bnc	l1967
  7506                           
  7507                           ; BSR set to: 2
  7508                           ;lorawan.c: 807: {
  7509                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7510  00590A  51EF               	movf	(_loRa+239)& (0+255),w,b
  7511  00590C  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7512  00590E  6F17               	movwf	(_loRa+23)& (0+255),b
  7513                           
  7514                           ;lorawan.c: 809: }
  7515  005910  D001               	goto	l15314
  7516  005912                     l1967:
  7517                           
  7518                           ; BSR set to: 2
  7519                           ;lorawan.c: 810: else
  7520                           ;lorawan.c: 811: {
  7521                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7522  005912  6B17               	clrf	(_loRa+23)& (0+255),b
  7523  005914                     l15314:
  7524                           
  7525                           ; BSR set to: 2
  7526                           ;lorawan.c: 813: }
  7527                           ;lorawan.c: 815: freq = GetRx1Freq();
  7528  005914  EC7B  F03C         	call	_GetRx1Freq	;wreg free
  7529  005918  C064  F052         	movff	?_GetRx1Freq,btemp+8
  7530  00591C  C065  F053         	movff	?_GetRx1Freq+1,btemp+9
  7531  005920  C066  F054         	movff	?_GetRx1Freq+2,btemp+10
  7532  005924  C067  F055         	movff	?_GetRx1Freq+3,btemp+11
  7533                           
  7534                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7535  005928  0EFC               	movlw	-4
  7536  00592A  C052  FFE3         	movff	btemp+8,plusw1
  7537  00592E  0EFD               	movlw	-3
  7538  005930  C053  FFE3         	movff	btemp+9,plusw1
  7539  005934  0EFE               	movlw	-2
  7540  005936  C054  FFE3         	movff	btemp+10,plusw1
  7541  00593A  0EFF               	movlw	-1
  7542  00593C  C055  FFE3         	movff	btemp+11,plusw1
  7543                           
  7544                           ; BSR set to: 2
  7545                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7546  005940  5102               	movf	(_loRa+2)& (0+255),w,b
  7547  005942  0BF0               	andlw	-16
  7548  005944  0903               	iorlw	3
  7549  005946  6F02               	movwf	(_loRa+2)& (0+255),b
  7550                           
  7551                           ; BSR set to: 2
  7552                           ;lorawan.c: 819: RADIO_ReleaseData();
  7553  005948  EC4B  F03D         	call	_RADIO_ReleaseData	;wreg free
  7554                           
  7555                           ; BSR set to: 1
  7556                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7557                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7558  00594C  50E1               	movf	fsr1l,w,c
  7559  00594E  0FFC               	addlw	-4
  7560  005950  6ED9               	movwf	fsr2l,c
  7561  005952  50E2               	movf	fsr1h,w,c
  7562  005954  6EDA               	movwf	fsr2h,c
  7563  005956  0EFF               	movlw	255
  7564  005958  22DA               	addwfc	fsr2h,f,c
  7565  00595A  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7566  00595E  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7567  005962  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7568  005966  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7569  00596A  0102               	movlb	2	; () banked
  7570  00596C  5117               	movf	(_loRa+23)& (0+255),w,b
  7571  00596E  EC2E  F03A         	call	_ConfigureRadioRx
  7572                           
  7573                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7574  005972  0E47               	movlw	low _rxWindowSize
  7575  005974  0102               	movlb	2	; () banked
  7576  005976  2517               	addwf	(_loRa+23)& (0+255),w,b
  7577  005978  6EF6               	movwf	tblptrl,c
  7578  00597A  6AF7               	clrf	tblptrh,c
  7579  00597C  0EFE               	movlw	high _rxWindowSize
  7580  00597E  22F7               	addwfc	tblptrh,f,c
  7581  005980                     	if	1	;There are 3 active tblptr bytes
  7582  005980  6AF8               	clrf	tblptru,c
  7583  005982  0E00               	movlw	low (__mediumconst shr (0+16))
  7584  005984  22F8               	addwfc	tblptru,f,c
  7585  005986                     	endif
  7586  005986  0008               	tblrd		*
  7587  005988  50F5               	movf	tablat,w,c
  7588  00598A  0100               	movlb	0	; () banked
  7589  00598C  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7590  00598E  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7591  005990  EC08  F016         	call	_RADIO_ReceiveStart	;wreg free
  7592  005994                     l1969:
  7593                           
  7594                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7595  005994  0EFB               	movlw	251
  7596  005996  26E1               	addwf	fsr1l,f,c
  7597  005998  0EFF               	movlw	255
  7598  00599A  22E2               	addwfc	fsr1h,f,c
  7599  00599C  0CFF               	retlw	255	;funcret
  7600  00599E                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7601                           	opt stack 0
  7602                           tosu	equ	0xFFF
  7603                           tosh	equ	0xFFE
  7604                           tosl	equ	0xFFD
  7605                           pclath	equ	0xFFA
  7606                           tblptru	equ	0xFF8
  7607                           tblptrh	equ	0xFF7
  7608                           tblptrl	equ	0xFF6
  7609                           tablat	equ	0xFF5
  7610                           prodh	equ	0xFF4
  7611                           prodl	equ	0xFF3
  7612                           intcon	equ	0xFF2
  7613                           intcon2	equ	0xFF1
  7614                           intcon3	equ	0xFF0
  7615                           postinc0	equ	0xFEE
  7616                           wreg	equ	0xFE8
  7617                           postinc1	equ	0xFE6
  7618                           postdec1	equ	0xFE5
  7619                           plusw1	equ	0xFE3
  7620                           fsr1h	equ	0xFE2
  7621                           fsr1l	equ	0xFE1
  7622                           indf2	equ	0xFDF
  7623                           postinc2	equ	0xFDE
  7624                           postdec2	equ	0xFDD
  7625                           fsr2h	equ	0xFDA
  7626                           fsr2l	equ	0xFD9
  7627                           status	equ	0xFD8
  7628                           
  7629 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7630 ;; Defined at:
  7631 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7632 ;; Parameters:    Size  Location     Type
  7633 ;;  param           1  [STACK] unsigned char 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;		None
  7636 ;; Return value:  Size  Location     Type
  7637 ;;                  1  [STACK] void 
  7638 ;; Registers used:
  7639 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7640 ;; Tracked objects:
  7641 ;;		On entry : D/0
  7642 ;;		On exit  : C/0
  7643 ;;		Unchanged: 0/0
  7644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7649 ;;Total ram usage:        0 bytes
  7650 ;; Hardware stack levels used:    1
  7651 ;; Hardware stack levels required when called:   14
  7652 ;; This function calls:
  7653 ;;		_ConfigureRadioRx
  7654 ;;		_LORAWAN_EnterContinuousReceive
  7655 ;;		_RADIO_GetStatus
  7656 ;;		_RADIO_ReceiveStart
  7657 ;;		_RADIO_ReceiveStop
  7658 ;;		_RADIO_ReleaseData
  7659 ;;		_ResetParametersForConfirmedTransmission
  7660 ;;		_ResetParametersForUnconfirmedTransmission
  7661 ;;		_RxDataDone
  7662 ;; This function is called by:
  7663 ;;		_LORAWAN_RxTimeout
  7664 ;;		_SetCallbackSoftwareTimers
  7665 ;;		_SwTimersExecute
  7666 ;; This function uses a reentrant model
  7667 ;;
  7668                           
  7669                           	psect	text42
  7670  0055E8                     __ptext42:
  7671                           	opt stack 0
  7672  0055E8                     _LORAWAN_ReceiveWindow2Callback:
  7673                           	opt stack 12
  7674                           
  7675                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7676                           
  7677                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7678                           ;incstack = 0
  7679  0055E8  0102               	movlb	2	; () banked
  7680  0055EA  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7681  0055EC  D059               	goto	l1972
  7682                           
  7683                           ; BSR set to: 2
  7684                           ;lorawan.c: 831: {
  7685                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7686  0055EE  EC48  F03D         	call	_RADIO_GetStatus	;wreg free
  7687  0055F2  6E55               	movwf	btemp+11,c
  7688  0055F4  B255               	btfsc	btemp+11,1,c
  7689  0055F6  D050               	goto	l14078
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;lorawan.c: 833: {
  7693                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7694  0055F8  0102               	movlb	2	; () banked
  7695  0055FA  5102               	movf	(_loRa+2)& (0+255),w,b
  7696  0055FC  0BF0               	andlw	-16
  7697  0055FE  0905               	iorlw	5
  7698  005600  6F02               	movwf	(_loRa+2)& (0+255),b
  7699                           
  7700                           ; BSR set to: 2
  7701                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7702  005602  EC2E  F03B         	call	_RADIO_ReceiveStop	;wreg free
  7703                           
  7704                           ; BSR set to: 1
  7705                           ;lorawan.c: 837: RADIO_ReleaseData();
  7706  005606  EC4B  F03D         	call	_RADIO_ReleaseData	;wreg free
  7707                           
  7708                           ; BSR set to: 1
  7709                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7710  00560A  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7711  00560E  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7712  005612  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7713  005616  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7714  00561A  0102               	movlb	2	; () banked
  7715  00561C  511C               	movf	(_loRa+28)& (0+255),w,b
  7716  00561E  EC2E  F03A         	call	_ConfigureRadioRx
  7717                           
  7718                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7719  005622  0102               	movlb	2	; () banked
  7720  005624  5112               	movf	(_loRa+18)& (0+255),w,b
  7721  005626  E131               	bnz	l14074
  7722                           
  7723                           ; BSR set to: 2
  7724                           ;lorawan.c: 842: {
  7725                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7726  005628  0E47               	movlw	low _rxWindowSize
  7727  00562A  251C               	addwf	(_loRa+28)& (0+255),w,b
  7728  00562C  6EF6               	movwf	tblptrl,c
  7729  00562E  6AF7               	clrf	tblptrh,c
  7730  005630  0EFE               	movlw	high _rxWindowSize
  7731  005632  22F7               	addwfc	tblptrh,f,c
  7732  005634                     	if	1	;There are 3 active tblptr bytes
  7733  005634  6AF8               	clrf	tblptru,c
  7734  005636  0E00               	movlw	low (__mediumconst shr (0+16))
  7735  005638  22F8               	addwfc	tblptru,f,c
  7736  00563A                     	endif
  7737  00563A  0008               	tblrd		*
  7738  00563C  50F5               	movf	tablat,w,c
  7739  00563E  0100               	movlb	0	; () banked
  7740  005640  6F96               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7741  005642  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7742  005644  EC08  F016         	call	_RADIO_ReceiveStart	;wreg free
  7743  005648  C096  F04B         	movff	?_RADIO_ReceiveStart,btemp+1
  7744  00564C  C097  F04C         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7745  005650  504B               	movf	btemp+1,w,c
  7746  005652  104C               	iorwf	btemp+2,w,c
  7747  005654  E02D               	bz	l1981
  7748                           
  7749                           ; BSR set to: 0
  7750                           ;lorawan.c: 844: {
  7751                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7752  005656  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7753                           
  7754                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7755  00565A  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7756                           
  7757                           ; BSR set to: 2
  7758                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7759  00565E  0101               	movlb	1	; () banked
  7760  005660  5172               	movf	_rxPayload& (0+255),w,b
  7761  005662  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  7762  005664  E025               	bz	l1981
  7763                           
  7764                           ; BSR set to: 1
  7765                           ;lorawan.c: 848: {
  7766                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7767  005666  0E00               	movlw	0
  7768  005668  0100               	movlb	0	; () banked
  7769  00566A  6B64               	clrf	RxDataDone@pData& (0+255),b
  7770  00566C  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  7771  00566E  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  7772  005670  6B67               	clrf	RxDataDone@status& (0+255),b
  7773  005672  D801               	call	u15568
  7774  005674  D01D               	goto	l1981
  7775  005676                     u15568:
  7776  005676  0005               	push	
  7777  005678  6EFA               	movwf	pclath,c
  7778  00567A  0101               	movlb	1	; () banked
  7779  00567C  5172               	movf	_rxPayload& (0+255),w,b
  7780  00567E  6EFD               	movwf	tosl,c
  7781  005680  5173               	movf	(_rxPayload+1)& (0+255),w,b
  7782  005682  6EFE               	movwf	tosh,c
  7783  005684  6AFF               	clrf	tosu,c
  7784  005686  50FA               	movf	pclath,w,c
  7785  005688  0012               	return		;indir
  7786  00568A                     l14074:
  7787                           
  7788                           ; BSR set to: 2
  7789                           ;lorawan.c: 853: else
  7790                           ;lorawan.c: 854: {
  7791                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7792  00568A  5102               	movf	(_loRa+2)& (0+255),w,b
  7793  00568C  0BF0               	andlw	-16
  7794  00568E  0909               	iorlw	9
  7795  005690  6F02               	movwf	(_loRa+2)& (0+255),b
  7796                           
  7797                           ; BSR set to: 2
  7798                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7799  005692  EC62  F032         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7800  005696  D00C               	goto	l1981
  7801  005698                     l14078:
  7802                           
  7803                           ; BSR set to: 1
  7804                           ;lorawan.c: 859: else
  7805                           ;lorawan.c: 860: {
  7806                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7807  005698  0E01               	movlw	1
  7808  00569A  0102               	movlb	2	; () banked
  7809  00569C  6FF1               	movwf	(_loRa+241)& (0+255),b
  7810                           
  7811                           ; BSR set to: 1
  7812                           ;lorawan.c: 864: }
  7813                           ;lorawan.c: 865: }
  7814  00569E  D008               	goto	l1981
  7815  0056A0                     l1972:
  7816                           
  7817                           ; BSR set to: 2
  7818                           ;lorawan.c: 866: else
  7819                           ;lorawan.c: 867: {
  7820                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7821  0056A0  A500               	btfss	_loRa& (0+255),2,b
  7822  0056A2  D002               	goto	l14082
  7823                           
  7824                           ; BSR set to: 2
  7825                           ;lorawan.c: 871: {
  7826                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7827  0056A4  9500               	bcf	_loRa& (0+255),2,b
  7828                           
  7829                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7830  0056A6  9902               	bcf	(_loRa+2)& (0+255),4,b
  7831  0056A8                     l14082:
  7832                           
  7833                           ; BSR set to: 2
  7834                           ;lorawan.c: 874: }
  7835                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7836  0056A8  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7837                           
  7838                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7839  0056AC  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7840  0056B0                     l1981:
  7841                           
  7842                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7843  0056B0  52E5               	movf	postdec1,f,c
  7844  0056B2  0012               	return		;funcret
  7845  0056B4                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7846                           	opt stack 0
  7847                           tosu	equ	0xFFF
  7848                           tosh	equ	0xFFE
  7849                           tosl	equ	0xFFD
  7850                           pclath	equ	0xFFA
  7851                           tblptru	equ	0xFF8
  7852                           tblptrh	equ	0xFF7
  7853                           tblptrl	equ	0xFF6
  7854                           tablat	equ	0xFF5
  7855                           prodh	equ	0xFF4
  7856                           prodl	equ	0xFF3
  7857                           intcon	equ	0xFF2
  7858                           intcon2	equ	0xFF1
  7859                           intcon3	equ	0xFF0
  7860                           postinc0	equ	0xFEE
  7861                           wreg	equ	0xFE8
  7862                           postinc1	equ	0xFE6
  7863                           postdec1	equ	0xFE5
  7864                           plusw1	equ	0xFE3
  7865                           fsr1h	equ	0xFE2
  7866                           fsr1l	equ	0xFE1
  7867                           indf2	equ	0xFDF
  7868                           postinc2	equ	0xFDE
  7869                           postdec2	equ	0xFDD
  7870                           fsr2h	equ	0xFDA
  7871                           fsr2l	equ	0xFD9
  7872                           status	equ	0xFD8
  7873                           
  7874 ;; *************** function _RADIO_WatchdogTimeout *****************
  7875 ;; Defined at:
  7876 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  param           1  [STACK] unsigned char 
  7879 ;; Auto vars:     Size  Location     Type
  7880 ;;		None
  7881 ;; Return value:  Size  Location     Type
  7882 ;;                  1  [STACK] void 
  7883 ;; Registers used:
  7884 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7885 ;; Tracked objects:
  7886 ;;		On entry : F/0
  7887 ;;		On exit  : C/0
  7888 ;;		Unchanged: 0/0
  7889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7894 ;;Total ram usage:        0 bytes
  7895 ;; Hardware stack levels used:    1
  7896 ;; Hardware stack levels required when called:   16
  7897 ;; This function calls:
  7898 ;;		_LORAWAN_RxTimeout
  7899 ;;		_LORAWAN_TxDone
  7900 ;;		_RADIO_WriteMode
  7901 ;; This function is called by:
  7902 ;;		_RADIO_Init
  7903 ;;		_SwTimersExecute
  7904 ;; This function uses a reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text43
  7908  006E38                     __ptext43:
  7909                           	opt stack 0
  7910  006E38                     _RADIO_WatchdogTimeout:
  7911                           	opt stack 12
  7912                           
  7913                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7914                           
  7915                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7916                           ;incstack = 0
  7917  006E38  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7918  006E3C  0E01               	movlw	1
  7919  006E3E  0100               	movlb	0	; () banked
  7920  006E40  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7921  006E42  ECB9  F029         	call	_RADIO_WriteMode
  7922                           
  7923                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7924  006E46  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7925  006E4A  0E00               	movlw	0
  7926  006E4C  0100               	movlb	0	; () banked
  7927  006E4E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7928  006E50  ECB9  F029         	call	_RADIO_WriteMode
  7929                           
  7930                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7931  006E54  0101               	movlb	1	; () banked
  7932  006E56  899C               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7933                           
  7934                           ; BSR set to: 1
  7935                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7936  006E58  A39C               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7937  006E5A  D004               	goto	l675
  7938                           
  7939                           ; BSR set to: 1
  7940                           ;radio_driver_SX1276.c: 1414: {
  7941                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7942  006E5C  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7943                           
  7944                           ; BSR set to: 1
  7945                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7946  006E5E  EC89  F013         	call	_LORAWAN_RxTimeout	;wreg free
  7947                           
  7948                           ;radio_driver_SX1276.c: 1417: }
  7949  006E62  D009               	goto	l678
  7950  006E64                     l675:
  7951                           
  7952                           ; BSR set to: 1
  7953                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7954  006E64  A19C               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7955  006E66  D007               	goto	l678
  7956                           
  7957                           ; BSR set to: 1
  7958                           ;radio_driver_SX1276.c: 1419: {
  7959                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7960  006E68  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7961                           
  7962                           ; BSR set to: 1
  7963                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7964  006E6A  C1A3  F0A0         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7965  006E6E  C1A4  F0A1         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7966  006E72  EC8C  F005         	call	_LORAWAN_TxDone	;wreg free
  7967  006E76                     l678:
  7968                           
  7969                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7970  006E76  52E5               	movf	postdec1,f,c
  7971  006E78  0012               	return		;funcret
  7972  006E7A                     __end_of_RADIO_WatchdogTimeout:
  7973                           	opt stack 0
  7974                           tosu	equ	0xFFF
  7975                           tosh	equ	0xFFE
  7976                           tosl	equ	0xFFD
  7977                           pclath	equ	0xFFA
  7978                           tblptru	equ	0xFF8
  7979                           tblptrh	equ	0xFF7
  7980                           tblptrl	equ	0xFF6
  7981                           tablat	equ	0xFF5
  7982                           prodh	equ	0xFF4
  7983                           prodl	equ	0xFF3
  7984                           intcon	equ	0xFF2
  7985                           intcon2	equ	0xFF1
  7986                           intcon3	equ	0xFF0
  7987                           postinc0	equ	0xFEE
  7988                           wreg	equ	0xFE8
  7989                           postinc1	equ	0xFE6
  7990                           postdec1	equ	0xFE5
  7991                           plusw1	equ	0xFE3
  7992                           fsr1h	equ	0xFE2
  7993                           fsr1l	equ	0xFE1
  7994                           indf2	equ	0xFDF
  7995                           postinc2	equ	0xFDE
  7996                           postdec2	equ	0xFDD
  7997                           fsr2h	equ	0xFDA
  7998                           fsr2l	equ	0xFD9
  7999                           status	equ	0xFD8
  8000                           
  8001 ;; *************** function _RADIO_RxFSKTimeout *****************
  8002 ;; Defined at:
  8003 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  param           1  [STACK] unsigned char 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  irqFlags        1  [STACK] unsigned char 
  8008 ;; Return value:  Size  Location     Type
  8009 ;;                  1  [STACK] void 
  8010 ;; Registers used:
  8011 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  8012 ;; Tracked objects:
  8013 ;;		On entry : F/0
  8014 ;;		On exit  : C/0
  8015 ;;		Unchanged: 0/0
  8016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8021 ;;Total ram usage:        0 bytes
  8022 ;; Hardware stack levels used:    1
  8023 ;; Hardware stack levels required when called:   16
  8024 ;; This function calls:
  8025 ;;		_LORAWAN_RxTimeout
  8026 ;;		_RADIO_RegisterRead
  8027 ;;		_RADIO_WriteMode
  8028 ;;		_SwTimerStop
  8029 ;; This function is called by:
  8030 ;;		_RADIO_Init
  8031 ;;		_SwTimersExecute
  8032 ;; This function uses a reentrant model
  8033 ;;
  8034                           
  8035                           	psect	text44
  8036  007116                     __ptext44:
  8037                           	opt stack 0
  8038  007116                     _RADIO_RxFSKTimeout:
  8039                           	opt stack 0
  8040                           
  8041                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8042  007116  52E6               	movf	postinc1,f,c
  8043                           
  8044                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  8045                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  8046                           
  8047                           ;incstack = 0
  8048  007118  0E3E               	movlw	62
  8049  00711A  EC41  F03A         	call	_RADIO_RegisterRead
  8050  00711E  6E55               	movwf	btemp+11,c
  8051                           
  8052                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  8053  007120  0EFF               	movlw	-1
  8054  007122  C055  FFE3         	movff	btemp+11,plusw1
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  8058                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  8059  007126  B0E3               	btfsc	plusw1,0,c
  8060  007128  D00E               	goto	l672
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;radio_driver_SX1276.c: 1397: {
  8064                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8065  00712A  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8066  00712E  0E00               	movlw	0
  8067  007130  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8068  007132  ECB9  F029         	call	_RADIO_WriteMode
  8069                           
  8070                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8071  007136  0101               	movlb	1	; () banked
  8072  007138  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8073  00713A  EC6A  F03B         	call	_SwTimerStop
  8074                           
  8075                           ; BSR set to: 0
  8076                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  8077  00713E  0101               	movlb	1	; () banked
  8078  007140  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8079                           
  8080                           ; BSR set to: 1
  8081                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  8082  007142  EC89  F013         	call	_LORAWAN_RxTimeout	;wreg free
  8083  007146                     l672:
  8084                           
  8085                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8086  007146  52E5               	movf	postdec1,f,c
  8087  007148  52E5               	movf	postdec1,f,c
  8088  00714A  0012               	return		;funcret
  8089  00714C                     __end_of_RADIO_RxFSKTimeout:
  8090                           	opt stack 0
  8091                           tosu	equ	0xFFF
  8092                           tosh	equ	0xFFE
  8093                           tosl	equ	0xFFD
  8094                           pclath	equ	0xFFA
  8095                           tblptru	equ	0xFF8
  8096                           tblptrh	equ	0xFF7
  8097                           tblptrl	equ	0xFF6
  8098                           tablat	equ	0xFF5
  8099                           prodh	equ	0xFF4
  8100                           prodl	equ	0xFF3
  8101                           intcon	equ	0xFF2
  8102                           intcon2	equ	0xFF1
  8103                           intcon3	equ	0xFF0
  8104                           postinc0	equ	0xFEE
  8105                           wreg	equ	0xFE8
  8106                           postinc1	equ	0xFE6
  8107                           postdec1	equ	0xFE5
  8108                           plusw1	equ	0xFE3
  8109                           fsr1h	equ	0xFE2
  8110                           fsr1l	equ	0xFE1
  8111                           indf2	equ	0xFDF
  8112                           postinc2	equ	0xFDE
  8113                           postdec2	equ	0xFDD
  8114                           fsr2h	equ	0xFDA
  8115                           fsr2l	equ	0xFD9
  8116                           status	equ	0xFD8
  8117                           
  8118 ;; *************** function _UnconfirmedTransmissionCallback *****************
  8119 ;; Defined at:
  8120 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8121 ;; Parameters:    Size  Location     Type
  8122 ;;  param           1  [STACK] unsigned char 
  8123 ;; Auto vars:     Size  Location     Type
  8124 ;;		None
  8125 ;; Return value:  Size  Location     Type
  8126 ;;                  1  [STACK] void 
  8127 ;; Registers used:
  8128 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  8129 ;; Tracked objects:
  8130 ;;		On entry : F/0
  8131 ;;		On exit  : C/0
  8132 ;;		Unchanged: 0/0
  8133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8135 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8137 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8138 ;;Total ram usage:        0 bytes
  8139 ;; Hardware stack levels used:    1
  8140 ;; Hardware stack levels required when called:   13
  8141 ;; This function calls:
  8142 ;;		_RADIO_Transmit
  8143 ;;		_ResetParametersForUnconfirmedTransmission
  8144 ;;		_RxDataDone
  8145 ;;		_SelectChannelForTransmission
  8146 ;; This function is called by:
  8147 ;;		_SetCallbackSoftwareTimers
  8148 ;;		_SwTimersExecute
  8149 ;; This function uses a reentrant model
  8150 ;;
  8151                           
  8152                           	psect	text45
  8153  00631E                     __ptext45:
  8154                           	opt stack 0
  8155  00631E                     _UnconfirmedTransmissionCallback:
  8156                           	opt stack 15
  8157                           
  8158                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  8159                           
  8160                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8161                           ;incstack = 0
  8162  00631E  0E01               	movlw	1
  8163  006320  ECC1  F033         	call	_SelectChannelForTransmission
  8164  006324  0900               	iorlw	0
  8165  006326  E116               	bnz	l15414
  8166                           
  8167                           ; BSR set to: 0
  8168  006328  0EF0               	movlw	low (_macBuffer+16)
  8169  00632A  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
  8170  00632C  0E04               	movlw	high (_macBuffer+16)
  8171  00632E  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8172  006330  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8173  006334  EC00  F018         	call	_RADIO_Transmit	;wreg free
  8174  006338  C096  F04B         	movff	?_RADIO_Transmit,btemp+1
  8175  00633C  C097  F04C         	movff	?_RADIO_Transmit+1,btemp+2
  8176  006340  504B               	movf	btemp+1,w,c
  8177  006342  104C               	iorwf	btemp+2,w,c
  8178  006344  E107               	bnz	l15414
  8179                           
  8180                           ; BSR set to: 0
  8181                           ;lorawan.c: 1001: {
  8182                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  8183  006346  0102               	movlb	2	; () banked
  8184  006348  2BD8               	incf	(_loRa+216)& (0+255),f,b
  8185                           
  8186                           ; BSR set to: 2
  8187                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8188  00634A  5102               	movf	(_loRa+2)& (0+255),w,b
  8189  00634C  0BF0               	andlw	-16
  8190  00634E  0901               	iorlw	1
  8191  006350  6F02               	movwf	(_loRa+2)& (0+255),b
  8192                           
  8193                           ;lorawan.c: 1005: }
  8194  006352  D018               	goto	l2024
  8195  006354                     l15414:
  8196                           
  8197                           ; BSR set to: 0
  8198                           ;lorawan.c: 1006: else
  8199                           ;lorawan.c: 1008: {
  8200                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  8201  006354  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  8202                           
  8203                           ; BSR set to: 2
  8204                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  8205  006358  0101               	movlb	1	; () banked
  8206  00635A  5172               	movf	_rxPayload& (0+255),w,b
  8207  00635C  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
  8208  00635E  E012               	bz	l2024
  8209                           
  8210                           ; BSR set to: 1
  8211                           ;lorawan.c: 1011: {
  8212                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  8213  006360  0E00               	movlw	0
  8214  006362  0100               	movlb	0	; () banked
  8215  006364  6B64               	clrf	RxDataDone@pData& (0+255),b
  8216  006366  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
  8217  006368  6B66               	clrf	RxDataDone@dataLength& (0+255),b
  8218  00636A  6B67               	clrf	RxDataDone@status& (0+255),b
  8219  00636C  D801               	call	u18148
  8220  00636E  D00A               	goto	l2024
  8221  006370                     u18148:
  8222  006370  0005               	push	
  8223  006372  6EFA               	movwf	pclath,c
  8224  006374  0101               	movlb	1	; () banked
  8225  006376  5172               	movf	_rxPayload& (0+255),w,b
  8226  006378  6EFD               	movwf	tosl,c
  8227  00637A  5173               	movf	(_rxPayload+1)& (0+255),w,b
  8228  00637C  6EFE               	movwf	tosh,c
  8229  00637E  6AFF               	clrf	tosu,c
  8230  006380  50FA               	movf	pclath,w,c
  8231  006382  0012               	return		;indir
  8232  006384                     l2024:
  8233                           
  8234                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  8235  006384  52E5               	movf	postdec1,f,c
  8236  006386  0012               	return		;funcret
  8237  006388                     __end_of_UnconfirmedTransmissionCallback:
  8238                           	opt stack 0
  8239                           tosu	equ	0xFFF
  8240                           tosh	equ	0xFFE
  8241                           tosl	equ	0xFFD
  8242                           pclath	equ	0xFFA
  8243                           tblptru	equ	0xFF8
  8244                           tblptrh	equ	0xFF7
  8245                           tblptrl	equ	0xFF6
  8246                           tablat	equ	0xFF5
  8247                           prodh	equ	0xFF4
  8248                           prodl	equ	0xFF3
  8249                           intcon	equ	0xFF2
  8250                           intcon2	equ	0xFF1
  8251                           intcon3	equ	0xFF0
  8252                           postinc0	equ	0xFEE
  8253                           wreg	equ	0xFE8
  8254                           postinc1	equ	0xFE6
  8255                           postdec1	equ	0xFE5
  8256                           plusw1	equ	0xFE3
  8257                           fsr1h	equ	0xFE2
  8258                           fsr1l	equ	0xFE1
  8259                           indf2	equ	0xFDF
  8260                           postinc2	equ	0xFDE
  8261                           postdec2	equ	0xFDD
  8262                           fsr2h	equ	0xFDA
  8263                           fsr2l	equ	0xFD9
  8264                           status	equ	0xFD8
  8265                           
  8266 ;; *************** function _GetRx1Freq *****************
  8267 ;; Defined at:
  8268 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;		None
  8271 ;; Auto vars:     Size  Location     Type
  8272 ;;		None
  8273 ;; Return value:  Size  Location     Type
  8274 ;;                  4    4[BANK0 ] unsigned long 
  8275 ;; Registers used:
  8276 ;;		None
  8277 ;; Tracked objects:
  8278 ;;		On entry : F/2
  8279 ;;		On exit  : F/2
  8280 ;;		Unchanged: F/0
  8281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8282 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8283 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8285 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8286 ;;Total ram usage:        4 bytes
  8287 ;; Hardware stack levels used:    1
  8288 ;; Hardware stack levels required when called:    7
  8289 ;; This function calls:
  8290 ;;		Nothing
  8291 ;; This function is called by:
  8292 ;;		_LORAWAN_ReceiveWindow1Callback
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text46
  8297  0078F6                     __ptext46:
  8298                           	opt stack 0
  8299  0078F6                     _GetRx1Freq:
  8300                           	opt stack 20
  8301                           
  8302                           ; BSR set to: 2
  8303                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  8304                           
  8305                           ;incstack = 0
  8306  0078F6  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  8307  0078FA  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  8308  0078FE  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  8309  007902  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  8310                           
  8311                           ; BSR set to: 2
  8312  007906  0012               	return		;funcret
  8313  007908                     __end_of_GetRx1Freq:
  8314                           	opt stack 0
  8315                           tosu	equ	0xFFF
  8316                           tosh	equ	0xFFE
  8317                           tosl	equ	0xFFD
  8318                           pclath	equ	0xFFA
  8319                           tblptru	equ	0xFF8
  8320                           tblptrh	equ	0xFF7
  8321                           tblptrl	equ	0xFF6
  8322                           tablat	equ	0xFF5
  8323                           prodh	equ	0xFF4
  8324                           prodl	equ	0xFF3
  8325                           intcon	equ	0xFF2
  8326                           intcon2	equ	0xFF1
  8327                           intcon3	equ	0xFF0
  8328                           postinc0	equ	0xFEE
  8329                           wreg	equ	0xFE8
  8330                           postinc1	equ	0xFE6
  8331                           postdec1	equ	0xFE5
  8332                           plusw1	equ	0xFE3
  8333                           fsr1h	equ	0xFE2
  8334                           fsr1l	equ	0xFE1
  8335                           indf2	equ	0xFDF
  8336                           postinc2	equ	0xFDE
  8337                           postdec2	equ	0xFDD
  8338                           fsr2h	equ	0xFDA
  8339                           fsr2l	equ	0xFD9
  8340                           status	equ	0xFD8
  8341                           
  8342 ;; *************** function _RADIO_DIO5 *****************
  8343 ;; Defined at:
  8344 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8345 ;; Parameters:    Size  Location     Type
  8346 ;;		None
  8347 ;; Auto vars:     Size  Location     Type
  8348 ;;  dioMapping      1    0        unsigned char 
  8349 ;; Return value:  Size  Location     Type
  8350 ;;                  1    wreg      void 
  8351 ;; Registers used:
  8352 ;;		wreg, status,2, status,0, cstack
  8353 ;; Tracked objects:
  8354 ;;		On entry : F/1
  8355 ;;		On exit  : 0/0
  8356 ;;		Unchanged: 0/0
  8357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8359 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8361 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8362 ;;Total ram usage:        1 bytes
  8363 ;; Hardware stack levels used:    1
  8364 ;; Hardware stack levels required when called:   11
  8365 ;; This function calls:
  8366 ;;		_RADIO_RegisterRead
  8367 ;;		_RADIO_UnhandledInterrupt
  8368 ;; This function is called by:
  8369 ;;		_LORAWAN_Mainloop
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text47
  8374  007800                     __ptext47:
  8375                           	opt stack 0
  8376  007800                     _RADIO_DIO5:
  8377                           	opt stack 18
  8378                           
  8379                           ; BSR set to: 1
  8380                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8381                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8382                           
  8383                           ; BSR set to: 2
  8384                           ;incstack = 0
  8385  007800  0E41               	movlw	65
  8386  007802  EC41  F03A         	call	_RADIO_RegisterRead
  8387                           
  8388                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8389  007806  0E01               	movlw	1
  8390  007808  EC41  F03A         	call	_RADIO_RegisterRead
  8391  00780C  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8392  00780E  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8393  007810  0012               	return	
  8394                           
  8395                           ; BSR set to: 0
  8396                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8397  007812  0E01               	movlw	1
  8398  007814  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  8399  007818                     __end_of_RADIO_DIO5:
  8400                           	opt stack 0
  8401                           tosu	equ	0xFFF
  8402                           tosh	equ	0xFFE
  8403                           tosl	equ	0xFFD
  8404                           pclath	equ	0xFFA
  8405                           tblptru	equ	0xFF8
  8406                           tblptrh	equ	0xFF7
  8407                           tblptrl	equ	0xFF6
  8408                           tablat	equ	0xFF5
  8409                           prodh	equ	0xFF4
  8410                           prodl	equ	0xFF3
  8411                           intcon	equ	0xFF2
  8412                           intcon2	equ	0xFF1
  8413                           intcon3	equ	0xFF0
  8414                           postinc0	equ	0xFEE
  8415                           wreg	equ	0xFE8
  8416                           postinc1	equ	0xFE6
  8417                           postdec1	equ	0xFE5
  8418                           plusw1	equ	0xFE3
  8419                           fsr1h	equ	0xFE2
  8420                           fsr1l	equ	0xFE1
  8421                           indf2	equ	0xFDF
  8422                           postinc2	equ	0xFDE
  8423                           postdec2	equ	0xFDD
  8424                           fsr2h	equ	0xFDA
  8425                           fsr2l	equ	0xFD9
  8426                           status	equ	0xFD8
  8427                           
  8428 ;; *************** function _RADIO_DIO4 *****************
  8429 ;; Defined at:
  8430 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8431 ;; Parameters:    Size  Location     Type
  8432 ;;		None
  8433 ;; Auto vars:     Size  Location     Type
  8434 ;;  dioMapping      1    0        unsigned char 
  8435 ;; Return value:  Size  Location     Type
  8436 ;;                  1    wreg      void 
  8437 ;; Registers used:
  8438 ;;		wreg, status,2, status,0, cstack
  8439 ;; Tracked objects:
  8440 ;;		On entry : F/1
  8441 ;;		On exit  : 0/0
  8442 ;;		Unchanged: 0/0
  8443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8446 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8448 ;;Total ram usage:        1 bytes
  8449 ;; Hardware stack levels used:    1
  8450 ;; Hardware stack levels required when called:   11
  8451 ;; This function calls:
  8452 ;;		_RADIO_RegisterRead
  8453 ;;		_RADIO_UnhandledInterrupt
  8454 ;; This function is called by:
  8455 ;;		_LORAWAN_Mainloop
  8456 ;; This function uses a non-reentrant model
  8457 ;;
  8458                           
  8459                           	psect	text48
  8460  007818                     __ptext48:
  8461                           	opt stack 0
  8462  007818                     _RADIO_DIO4:
  8463                           	opt stack 18
  8464                           
  8465                           ; BSR set to: 1
  8466                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8467                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8468                           
  8469                           ;incstack = 0
  8470  007818  0E41               	movlw	65
  8471  00781A  EC41  F03A         	call	_RADIO_RegisterRead
  8472                           
  8473                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8474  00781E  0E01               	movlw	1
  8475  007820  EC41  F03A         	call	_RADIO_RegisterRead
  8476  007824  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8477  007826  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8478  007828  0012               	return	
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8482  00782A  0E01               	movlw	1
  8483  00782C  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  8484  007830                     __end_of_RADIO_DIO4:
  8485                           	opt stack 0
  8486                           tosu	equ	0xFFF
  8487                           tosh	equ	0xFFE
  8488                           tosl	equ	0xFFD
  8489                           pclath	equ	0xFFA
  8490                           tblptru	equ	0xFF8
  8491                           tblptrh	equ	0xFF7
  8492                           tblptrl	equ	0xFF6
  8493                           tablat	equ	0xFF5
  8494                           prodh	equ	0xFF4
  8495                           prodl	equ	0xFF3
  8496                           intcon	equ	0xFF2
  8497                           intcon2	equ	0xFF1
  8498                           intcon3	equ	0xFF0
  8499                           postinc0	equ	0xFEE
  8500                           wreg	equ	0xFE8
  8501                           postinc1	equ	0xFE6
  8502                           postdec1	equ	0xFE5
  8503                           plusw1	equ	0xFE3
  8504                           fsr1h	equ	0xFE2
  8505                           fsr1l	equ	0xFE1
  8506                           indf2	equ	0xFDF
  8507                           postinc2	equ	0xFDE
  8508                           postdec2	equ	0xFDD
  8509                           fsr2h	equ	0xFDA
  8510                           fsr2l	equ	0xFD9
  8511                           status	equ	0xFD8
  8512                           
  8513 ;; *************** function _RADIO_DIO3 *****************
  8514 ;; Defined at:
  8515 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8516 ;; Parameters:    Size  Location     Type
  8517 ;;		None
  8518 ;; Auto vars:     Size  Location     Type
  8519 ;;  dioMapping      1    0        unsigned char 
  8520 ;; Return value:  Size  Location     Type
  8521 ;;                  1    wreg      void 
  8522 ;; Registers used:
  8523 ;;		wreg, status,2, status,0, cstack
  8524 ;; Tracked objects:
  8525 ;;		On entry : F/1
  8526 ;;		On exit  : 0/0
  8527 ;;		Unchanged: 0/0
  8528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8531 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8532 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8533 ;;Total ram usage:        1 bytes
  8534 ;; Hardware stack levels used:    1
  8535 ;; Hardware stack levels required when called:   11
  8536 ;; This function calls:
  8537 ;;		_RADIO_RegisterRead
  8538 ;;		_RADIO_UnhandledInterrupt
  8539 ;; This function is called by:
  8540 ;;		_LORAWAN_Mainloop
  8541 ;; This function uses a non-reentrant model
  8542 ;;
  8543                           
  8544                           	psect	text49
  8545  007830                     __ptext49:
  8546                           	opt stack 0
  8547  007830                     _RADIO_DIO3:
  8548                           	opt stack 18
  8549                           
  8550                           ; BSR set to: 1
  8551                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8552                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8553                           
  8554                           ;incstack = 0
  8555  007830  0E40               	movlw	64
  8556  007832  EC41  F03A         	call	_RADIO_RegisterRead
  8557                           
  8558                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8559  007836  0E01               	movlw	1
  8560  007838  EC41  F03A         	call	_RADIO_RegisterRead
  8561  00783C  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8562  00783E  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8563  007840  0012               	return	
  8564                           
  8565                           ; BSR set to: 0
  8566                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8567  007842  0E01               	movlw	1
  8568  007844  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  8569  007848                     __end_of_RADIO_DIO3:
  8570                           	opt stack 0
  8571                           tosu	equ	0xFFF
  8572                           tosh	equ	0xFFE
  8573                           tosl	equ	0xFFD
  8574                           pclath	equ	0xFFA
  8575                           tblptru	equ	0xFF8
  8576                           tblptrh	equ	0xFF7
  8577                           tblptrl	equ	0xFF6
  8578                           tablat	equ	0xFF5
  8579                           prodh	equ	0xFF4
  8580                           prodl	equ	0xFF3
  8581                           intcon	equ	0xFF2
  8582                           intcon2	equ	0xFF1
  8583                           intcon3	equ	0xFF0
  8584                           postinc0	equ	0xFEE
  8585                           wreg	equ	0xFE8
  8586                           postinc1	equ	0xFE6
  8587                           postdec1	equ	0xFE5
  8588                           plusw1	equ	0xFE3
  8589                           fsr1h	equ	0xFE2
  8590                           fsr1l	equ	0xFE1
  8591                           indf2	equ	0xFDF
  8592                           postinc2	equ	0xFDE
  8593                           postdec2	equ	0xFDD
  8594                           fsr2h	equ	0xFDA
  8595                           fsr2l	equ	0xFD9
  8596                           status	equ	0xFD8
  8597                           
  8598 ;; *************** function _RADIO_DIO2 *****************
  8599 ;; Defined at:
  8600 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8601 ;; Parameters:    Size  Location     Type
  8602 ;;		None
  8603 ;; Auto vars:     Size  Location     Type
  8604 ;;  dioMapping      1   30[BANK0 ] unsigned char 
  8605 ;;  opMode          1    0        unsigned char 
  8606 ;; Return value:  Size  Location     Type
  8607 ;;                  1    wreg      void 
  8608 ;; Registers used:
  8609 ;;		wreg, status,2, status,0, cstack
  8610 ;; Tracked objects:
  8611 ;;		On entry : F/1
  8612 ;;		On exit  : 0/0
  8613 ;;		Unchanged: 0/0
  8614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8616 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8617 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8618 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8619 ;;Total ram usage:        2 bytes
  8620 ;; Hardware stack levels used:    1
  8621 ;; Hardware stack levels required when called:   12
  8622 ;; This function calls:
  8623 ;;		_RADIO_FHSSChangeChannel
  8624 ;;		_RADIO_RegisterRead
  8625 ;;		_RADIO_UnhandledInterrupt
  8626 ;; This function is called by:
  8627 ;;		_LORAWAN_Mainloop
  8628 ;; This function uses a non-reentrant model
  8629 ;;
  8630                           
  8631                           	psect	text50
  8632  006DA8                     __ptext50:
  8633                           	opt stack 0
  8634  006DA8                     _RADIO_DIO2:
  8635                           	opt stack 17
  8636                           
  8637                           ; BSR set to: 1
  8638                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8639                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8640                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8641                           
  8642                           ;incstack = 0
  8643  006DA8  0E40               	movlw	64
  8644  006DAA  EC41  F03A         	call	_RADIO_RegisterRead
  8645  006DAE  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8646  006DB0  90D8               	bcf	status,0,c
  8647  006DB2  337D               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8648  006DB4  90D8               	bcf	status,0,c
  8649  006DB6  317D               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8650  006DB8  0B03               	andlw	3
  8651  006DBA  6F7E               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8652                           
  8653                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8654  006DBC  0E01               	movlw	1
  8655  006DBE  EC41  F03A         	call	_RADIO_RegisterRead
  8656                           
  8657                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8658  006DC2  0E01               	movlw	1
  8659  006DC4  EC41  F03A         	call	_RADIO_RegisterRead
  8660  006DC8  6F7D               	movwf	??_RADIO_DIO2& (0+255),b
  8661  006DCA  AF7D               	btfss	??_RADIO_DIO2& (0+255),7,b
  8662  006DCC  0012               	return	
  8663  006DCE  D003               	goto	l15512
  8664  006DD0                     l15508:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8668  006DD0  0E01               	movlw	1
  8669  006DD2  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  8670  006DD6                     l15512:
  8671                           
  8672                           ; BSR set to: 0
  8673  006DD6  517E               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8674                           
  8675                           ; Switch size 1, requested type "speed"
  8676                           ; Number of cases is 3, Range of values is 0 to 2
  8677                           ; switch strategies available:
  8678                           ; Name         Instructions Cycles
  8679                           ; simple_byte           10     6 (average)
  8680                           ;	Chosen strategy is simple_byte
  8681  006DD8  E102 EF6F  F039    	bz	_RADIO_FHSSChangeChannel
  8682  006DDE  0A01               	xorlw	1	; case 1
  8683  006DE0  E102 EF6F  F039    	bz	_RADIO_FHSSChangeChannel
  8684  006DE6  0A03               	xorlw	3	; case 2
  8685  006DE8  E102 EF6F  F039    	bz	_RADIO_FHSSChangeChannel
  8686  006DEE  D7F0               	goto	l15508
  8687  006DF0                     __end_of_RADIO_DIO2:
  8688                           	opt stack 0
  8689                           tosu	equ	0xFFF
  8690                           tosh	equ	0xFFE
  8691                           tosl	equ	0xFFD
  8692                           pclath	equ	0xFFA
  8693                           tblptru	equ	0xFF8
  8694                           tblptrh	equ	0xFF7
  8695                           tblptrl	equ	0xFF6
  8696                           tablat	equ	0xFF5
  8697                           prodh	equ	0xFF4
  8698                           prodl	equ	0xFF3
  8699                           intcon	equ	0xFF2
  8700                           intcon2	equ	0xFF1
  8701                           intcon3	equ	0xFF0
  8702                           postinc0	equ	0xFEE
  8703                           wreg	equ	0xFE8
  8704                           postinc1	equ	0xFE6
  8705                           postdec1	equ	0xFE5
  8706                           plusw1	equ	0xFE3
  8707                           fsr1h	equ	0xFE2
  8708                           fsr1l	equ	0xFE1
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _RADIO_DIO1 *****************
  8717 ;; Defined at:
  8718 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  dioMapping      1   81[BANK0 ] unsigned char 
  8723 ;; Return value:  Size  Location     Type
  8724 ;;                  1    wreg      void 
  8725 ;; Registers used:
  8726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8727 ;; Tracked objects:
  8728 ;;		On entry : F/1
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8733 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8734 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8735 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8736 ;;Total ram usage:        2 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; Hardware stack levels required when called:   17
  8739 ;; This function calls:
  8740 ;;		_RADIO_FHSSChangeChannel
  8741 ;;		_RADIO_RegisterRead
  8742 ;;		_RADIO_RxTimeout
  8743 ;;		_RADIO_UnhandledInterrupt
  8744 ;; This function is called by:
  8745 ;;		_LORAWAN_Mainloop
  8746 ;; This function uses a non-reentrant model
  8747 ;;
  8748                           
  8749                           	psect	text51
  8750  007032                     __ptext51:
  8751                           	opt stack 0
  8752  007032                     _RADIO_DIO1:
  8753                           	opt stack 12
  8754                           
  8755                           ; BSR set to: 1
  8756                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8757                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8758                           
  8759                           ;incstack = 0
  8760  007032  0E40               	movlw	64
  8761  007034  EC41  F03A         	call	_RADIO_RegisterRead
  8762  007038  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8763  00703A  39B0               	swapf	??_RADIO_DIO1& (0+255),w,b
  8764  00703C  0B0F               	andlw	15
  8765  00703E  0B03               	andlw	3
  8766  007040  6FB1               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8767                           
  8768                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8769  007042  0E01               	movlw	1
  8770  007044  EC41  F03A         	call	_RADIO_RegisterRead
  8771  007048  6FB0               	movwf	??_RADIO_DIO1& (0+255),b
  8772  00704A  AFB0               	btfss	??_RADIO_DIO1& (0+255),7,b
  8773  00704C  D00D               	goto	l15500
  8774  00704E  D003               	goto	l15496
  8775  007050                     l15492:
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8779  007050  0E01               	movlw	1
  8780  007052  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  8781  007056                     l15496:
  8782                           
  8783                           ; BSR set to: 0
  8784  007056  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8785                           
  8786                           ; Switch size 1, requested type "speed"
  8787                           ; Number of cases is 2, Range of values is 0 to 1
  8788                           ; switch strategies available:
  8789                           ; Name         Instructions Cycles
  8790                           ; simple_byte            7     4 (average)
  8791                           ;	Chosen strategy is simple_byte
  8792  007058  E102 EF06  F03A    	bz	_RADIO_RxTimeout
  8793  00705E  0A01               	xorlw	1	; case 1
  8794  007060  E102 EF6F  F039    	bz	_RADIO_FHSSChangeChannel
  8795  007066  D7F4               	goto	l15492
  8796  007068                     l15500:
  8797                           
  8798                           ; BSR set to: 0
  8799  007068  51B1               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8800                           
  8801                           ; Switch size 1, requested type "speed"
  8802                           ; Number of cases is 1, Range of values is 0 to 0
  8803                           ; switch strategies available:
  8804                           ; Name         Instructions Cycles
  8805                           ; simple_byte            4     3 (average)
  8806                           ;	Chosen strategy is simple_byte
  8807  00706A  0012               	return	
  8808  00706C                     __end_of_RADIO_DIO1:
  8809                           	opt stack 0
  8810                           tosu	equ	0xFFF
  8811                           tosh	equ	0xFFE
  8812                           tosl	equ	0xFFD
  8813                           pclath	equ	0xFFA
  8814                           tblptru	equ	0xFF8
  8815                           tblptrh	equ	0xFF7
  8816                           tblptrl	equ	0xFF6
  8817                           tablat	equ	0xFF5
  8818                           prodh	equ	0xFF4
  8819                           prodl	equ	0xFF3
  8820                           intcon	equ	0xFF2
  8821                           intcon2	equ	0xFF1
  8822                           intcon3	equ	0xFF0
  8823                           postinc0	equ	0xFEE
  8824                           wreg	equ	0xFE8
  8825                           postinc1	equ	0xFE6
  8826                           postdec1	equ	0xFE5
  8827                           plusw1	equ	0xFE3
  8828                           fsr1h	equ	0xFE2
  8829                           fsr1l	equ	0xFE1
  8830                           indf2	equ	0xFDF
  8831                           postinc2	equ	0xFDE
  8832                           postdec2	equ	0xFDD
  8833                           fsr2h	equ	0xFDA
  8834                           fsr2l	equ	0xFD9
  8835                           status	equ	0xFD8
  8836                           
  8837 ;; *************** function _RADIO_RxTimeout *****************
  8838 ;; Defined at:
  8839 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8840 ;; Parameters:    Size  Location     Type
  8841 ;;		None
  8842 ;; Auto vars:     Size  Location     Type
  8843 ;;		None
  8844 ;; Return value:  Size  Location     Type
  8845 ;;                  1    wreg      void 
  8846 ;; Registers used:
  8847 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8848 ;; Tracked objects:
  8849 ;;		On entry : E/0
  8850 ;;		On exit  : C/0
  8851 ;;		Unchanged: 0/0
  8852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8857 ;;Total ram usage:        0 bytes
  8858 ;; Hardware stack levels used:    1
  8859 ;; Hardware stack levels required when called:   16
  8860 ;; This function calls:
  8861 ;;		_LORAWAN_RxTimeout
  8862 ;;		_RADIO_RegisterWrite
  8863 ;;		_RADIO_WriteMode
  8864 ;;		_SwTimerStop
  8865 ;; This function is called by:
  8866 ;;		_RADIO_DIO1
  8867 ;; This function uses a non-reentrant model
  8868 ;;
  8869                           
  8870                           	psect	text52
  8871  00740C                     __ptext52:
  8872                           	opt stack 0
  8873  00740C                     _RADIO_RxTimeout:
  8874                           	opt stack 12
  8875                           
  8876                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8877                           
  8878                           ;incstack = 0
  8879  00740C  0101               	movlb	1	; () banked
  8880  00740E  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8881  007410  EC6A  F03B         	call	_SwTimerStop
  8882                           
  8883                           ; BSR set to: 0
  8884                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8885  007414  0E80               	movlw	128
  8886  007416  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8887  007418  0E12               	movlw	18
  8888  00741A  EC3D  F03B         	call	_RADIO_RegisterWrite
  8889                           
  8890                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8891  00741E  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8892  007422  0E00               	movlw	0
  8893  007424  0100               	movlb	0	; () banked
  8894  007426  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8895  007428  ECB9  F029         	call	_RADIO_WriteMode
  8896                           
  8897                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8898  00742C  0101               	movlb	1	; () banked
  8899  00742E  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8900                           
  8901                           ; BSR set to: 1
  8902                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  8903  007430  EF89  F013         	goto	_LORAWAN_RxTimeout	;wreg free
  8904  007434                     __end_of_RADIO_RxTimeout:
  8905                           	opt stack 0
  8906                           tosu	equ	0xFFF
  8907                           tosh	equ	0xFFE
  8908                           tosl	equ	0xFFD
  8909                           pclath	equ	0xFFA
  8910                           tblptru	equ	0xFF8
  8911                           tblptrh	equ	0xFF7
  8912                           tblptrl	equ	0xFF6
  8913                           tablat	equ	0xFF5
  8914                           prodh	equ	0xFF4
  8915                           prodl	equ	0xFF3
  8916                           intcon	equ	0xFF2
  8917                           intcon2	equ	0xFF1
  8918                           intcon3	equ	0xFF0
  8919                           postinc0	equ	0xFEE
  8920                           wreg	equ	0xFE8
  8921                           postinc1	equ	0xFE6
  8922                           postdec1	equ	0xFE5
  8923                           plusw1	equ	0xFE3
  8924                           fsr1h	equ	0xFE2
  8925                           fsr1l	equ	0xFE1
  8926                           indf2	equ	0xFDF
  8927                           postinc2	equ	0xFDE
  8928                           postdec2	equ	0xFDD
  8929                           fsr2h	equ	0xFDA
  8930                           fsr2l	equ	0xFD9
  8931                           status	equ	0xFD8
  8932                           
  8933 ;; *************** function _RADIO_FHSSChangeChannel *****************
  8934 ;; Defined at:
  8935 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8936 ;; Parameters:    Size  Location     Type
  8937 ;;		None
  8938 ;; Auto vars:     Size  Location     Type
  8939 ;;  irqFlags        1    0        unsigned char 
  8940 ;; Return value:  Size  Location     Type
  8941 ;;                  1    wreg      void 
  8942 ;; Registers used:
  8943 ;;		wreg, status,2, status,0, cstack
  8944 ;; Tracked objects:
  8945 ;;		On entry : E/0
  8946 ;;		On exit  : 0/0
  8947 ;;		Unchanged: 0/0
  8948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;Total ram usage:        0 bytes
  8954 ;; Hardware stack levels used:    1
  8955 ;; Hardware stack levels required when called:   11
  8956 ;; This function calls:
  8957 ;;		_RADIO_RegisterRead
  8958 ;;		_RADIO_RegisterWrite
  8959 ;;		_RADIO_WriteFrequency
  8960 ;; This function is called by:
  8961 ;;		_RADIO_DIO1
  8962 ;;		_RADIO_DIO2
  8963 ;; This function uses a non-reentrant model
  8964 ;;
  8965                           
  8966                           	psect	text53
  8967  0072DE                     __ptext53:
  8968                           	opt stack 0
  8969  0072DE                     _RADIO_FHSSChangeChannel:
  8970                           	opt stack 17
  8971                           
  8972                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  8973                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  8974                           
  8975                           ;incstack = 0
  8976  0072DE  0E12               	movlw	18
  8977  0072E0  EC41  F03A         	call	_RADIO_RegisterRead
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  8981  0072E4  0101               	movlb	1	; () banked
  8982  0072E6  5197               	movf	(_RadioConfiguration+30)& (0+255),w,b
  8983  0072E8  1198               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  8984  0072EA  E00A               	bz	l594
  8985                           
  8986                           ; BSR set to: 1
  8987                           ;radio_driver_SX1276.c: 1164: {
  8988                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  8989  0072EC  51A8               	movf	(_RadioConfiguration+47)& (0+255),w,b
  8990  0072EE  11A9               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  8991  0072F0  E007               	bz	l594
  8992                           
  8993                           ; BSR set to: 1
  8994                           ;radio_driver_SX1276.c: 1166: {
  8995                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  8996  0072F2  0100               	movlb	0	; () banked
  8997  0072F4  6B71               	clrf	RADIO_WriteFrequency@frequency& (0+255),b
  8998  0072F6  6B72               	clrf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  8999  0072F8  6B73               	clrf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  9000  0072FA  6B74               	clrf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  9001  0072FC  EC4B  F029         	call	_RADIO_WriteFrequency	;wreg free
  9002  007300                     l594:
  9003                           
  9004                           ;radio_driver_SX1276.c: 1168: }
  9005                           ;radio_driver_SX1276.c: 1169: }
  9006                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  9007  007300  0E02               	movlw	2
  9008  007302  0100               	movlb	0	; () banked
  9009  007304  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9010  007306  0E12               	movlw	18
  9011  007308  EF3D  F03B         	goto	_RADIO_RegisterWrite
  9012  00730C                     __end_of_RADIO_FHSSChangeChannel:
  9013                           	opt stack 0
  9014                           tosu	equ	0xFFF
  9015                           tosh	equ	0xFFE
  9016                           tosl	equ	0xFFD
  9017                           pclath	equ	0xFFA
  9018                           tblptru	equ	0xFF8
  9019                           tblptrh	equ	0xFF7
  9020                           tblptrl	equ	0xFF6
  9021                           tablat	equ	0xFF5
  9022                           prodh	equ	0xFF4
  9023                           prodl	equ	0xFF3
  9024                           intcon	equ	0xFF2
  9025                           intcon2	equ	0xFF1
  9026                           intcon3	equ	0xFF0
  9027                           postinc0	equ	0xFEE
  9028                           wreg	equ	0xFE8
  9029                           postinc1	equ	0xFE6
  9030                           postdec1	equ	0xFE5
  9031                           plusw1	equ	0xFE3
  9032                           fsr1h	equ	0xFE2
  9033                           fsr1l	equ	0xFE1
  9034                           indf2	equ	0xFDF
  9035                           postinc2	equ	0xFDE
  9036                           postdec2	equ	0xFDD
  9037                           fsr2h	equ	0xFDA
  9038                           fsr2l	equ	0xFD9
  9039                           status	equ	0xFD8
  9040                           
  9041 ;; *************** function _RADIO_DIO0 *****************
  9042 ;; Defined at:
  9043 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9044 ;; Parameters:    Size  Location     Type
  9045 ;;		None
  9046 ;; Auto vars:     Size  Location     Type
  9047 ;;  opMode          1  142[BANK0 ] unsigned char 
  9048 ;;  dioMapping      1  141[BANK0 ] unsigned char 
  9049 ;; Return value:  Size  Location     Type
  9050 ;;                  1    wreg      void 
  9051 ;; Registers used:
  9052 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9053 ;; Tracked objects:
  9054 ;;		On entry : F/1
  9055 ;;		On exit  : 0/0
  9056 ;;		Unchanged: 0/0
  9057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9059 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9060 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9061 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9062 ;;Total ram usage:        4 bytes
  9063 ;; Hardware stack levels used:    1
  9064 ;; Hardware stack levels required when called:   17
  9065 ;; This function calls:
  9066 ;;		_RADIO_FSKPacketSent
  9067 ;;		_RADIO_FSKPayloadReady
  9068 ;;		_RADIO_RegisterRead
  9069 ;;		_RADIO_RxDone
  9070 ;;		_RADIO_TxDone
  9071 ;;		_RADIO_UnhandledInterrupt
  9072 ;; This function is called by:
  9073 ;;		_LORAWAN_Mainloop
  9074 ;; This function uses a non-reentrant model
  9075 ;;
  9076                           
  9077                           	psect	text54
  9078  0065F6                     __ptext54:
  9079                           	opt stack 0
  9080  0065F6                     _RADIO_DIO0:
  9081                           	opt stack 12
  9082                           
  9083                           ; BSR set to: 1
  9084                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  9085                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  9086                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  9087                           
  9088                           ;incstack = 0
  9089  0065F6  0E40               	movlw	64
  9090  0065F8  EC41  F03A         	call	_RADIO_RegisterRead
  9091  0065FC  6FEB               	movwf	??_RADIO_DIO0& (0+255),b
  9092  0065FE  0E06               	movlw	6
  9093  006600  6FEC               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  9094  006602                     u18245:
  9095  006602  90D8               	bcf	status,0,c
  9096  006604  33EB               	rrcf	??_RADIO_DIO0& (0+255),f,b
  9097  006606  2FEC               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  9098  006608  D7FC               	goto	u18245
  9099  00660A  51EB               	movf	??_RADIO_DIO0& (0+255),w,b
  9100  00660C  0B03               	andlw	3
  9101  00660E  6FED               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  9102                           
  9103                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  9104  006610  0E01               	movlw	1
  9105  006612  EC41  F03A         	call	_RADIO_RegisterRead
  9106  006616  6FEE               	movwf	RADIO_DIO0@opMode& (0+255),b
  9107                           
  9108                           ; BSR set to: 0
  9109                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  9110  006618  AFEE               	btfss	RADIO_DIO0@opMode& (0+255),7,b
  9111  00661A  D01C               	goto	l15482
  9112  00661C  D003               	goto	l15466
  9113  00661E                     l15462:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9117  00661E  0E01               	movlw	1
  9118  006620  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  9119  006624                     l15466:
  9120                           
  9121                           ; BSR set to: 0
  9122  006624  51ED               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9123                           
  9124                           ; Switch size 1, requested type "speed"
  9125                           ; Number of cases is 2, Range of values is 0 to 1
  9126                           ; switch strategies available:
  9127                           ; Name         Instructions Cycles
  9128                           ; simple_byte            7     4 (average)
  9129                           ;	Chosen strategy is simple_byte
  9130  006626  E102 EF25  F02A    	bz	_RADIO_RxDone
  9131  00662C  0A01               	xorlw	1	; case 1
  9132  00662E  E102 EFF7  F01D    	bz	_RADIO_TxDone
  9133  006634  D7F4               	goto	l15462
  9134  006636                     l15468:
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  9138  006636  0E07               	movlw	7
  9139  006638  17EE               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  9140                           
  9141                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  9142  00663A  0E03               	movlw	3
  9143  00663C  19EE               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9144  00663E  E102               	bnz	l15472
  9145                           
  9146                           ; BSR set to: 0
  9147                           ;radio_driver_SX1276.c: 1209: {
  9148                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  9149  006640  EF2E  F01D         	goto	_RADIO_FSKPacketSent	;wreg free
  9150  006644                     l15472:
  9151                           
  9152                           ; BSR set to: 0
  9153                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  9154  006644  0E05               	movlw	5
  9155  006646  19EE               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9156  006648  E102               	bnz	l15478
  9157                           
  9158                           ; BSR set to: 0
  9159                           ;radio_driver_SX1276.c: 1214: {
  9160                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  9161  00664A  EF7D  F02E         	goto	_RADIO_FSKPayloadReady	;wreg free
  9162  00664E                     l15478:
  9163                           
  9164                           ; BSR set to: 0
  9165                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9166  00664E  0E00               	movlw	0
  9167  006650  EFAE  F03A         	goto	_RADIO_UnhandledInterrupt
  9168  006654                     l15482:
  9169                           
  9170                           ; BSR set to: 0
  9171  006654  51ED               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9172                           
  9173                           ; Switch size 1, requested type "speed"
  9174                           ; Number of cases is 1, Range of values is 0 to 0
  9175                           ; switch strategies available:
  9176                           ; Name         Instructions Cycles
  9177                           ; simple_byte            4     3 (average)
  9178                           ;	Chosen strategy is simple_byte
  9179  006656  E0EF               	bz	l15468
  9180  006658  D7FA               	goto	l15478
  9181  00665A                     __end_of_RADIO_DIO0:
  9182                           	opt stack 0
  9183                           tosu	equ	0xFFF
  9184                           tosh	equ	0xFFE
  9185                           tosl	equ	0xFFD
  9186                           pclath	equ	0xFFA
  9187                           tblptru	equ	0xFF8
  9188                           tblptrh	equ	0xFF7
  9189                           tblptrl	equ	0xFF6
  9190                           tablat	equ	0xFF5
  9191                           prodh	equ	0xFF4
  9192                           prodl	equ	0xFF3
  9193                           intcon	equ	0xFF2
  9194                           intcon2	equ	0xFF1
  9195                           intcon3	equ	0xFF0
  9196                           postinc0	equ	0xFEE
  9197                           wreg	equ	0xFE8
  9198                           postinc1	equ	0xFE6
  9199                           postdec1	equ	0xFE5
  9200                           plusw1	equ	0xFE3
  9201                           fsr1h	equ	0xFE2
  9202                           fsr1l	equ	0xFE1
  9203                           indf2	equ	0xFDF
  9204                           postinc2	equ	0xFDE
  9205                           postdec2	equ	0xFDD
  9206                           fsr2h	equ	0xFDA
  9207                           fsr2l	equ	0xFD9
  9208                           status	equ	0xFD8
  9209                           
  9210 ;; *************** function _RADIO_UnhandledInterrupt *****************
  9211 ;; Defined at:
  9212 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9213 ;; Parameters:    Size  Location     Type
  9214 ;;  modulation      1    wreg     enum E7751
  9215 ;; Auto vars:     Size  Location     Type
  9216 ;;  modulation      1    8[BANK0 ] enum E7751
  9217 ;; Return value:  Size  Location     Type
  9218 ;;                  1    wreg      void 
  9219 ;; Registers used:
  9220 ;;		wreg, status,2, status,0, cstack
  9221 ;; Tracked objects:
  9222 ;;		On entry : E/0
  9223 ;;		On exit  : 0/0
  9224 ;;		Unchanged: 0/0
  9225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9229 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9230 ;;Total ram usage:        1 bytes
  9231 ;; Hardware stack levels used:    1
  9232 ;; Hardware stack levels required when called:   10
  9233 ;; This function calls:
  9234 ;;		_RADIO_RegisterWrite
  9235 ;; This function is called by:
  9236 ;;		_RADIO_DIO0
  9237 ;;		_RADIO_DIO1
  9238 ;;		_RADIO_DIO2
  9239 ;;		_RADIO_DIO3
  9240 ;;		_RADIO_DIO4
  9241 ;;		_RADIO_DIO5
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           	psect	text55
  9246  00755C                     __ptext55:
  9247                           	opt stack 0
  9248  00755C                     _RADIO_UnhandledInterrupt:
  9249                           	opt stack 18
  9250                           
  9251                           ;incstack = 0
  9252                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  9253  00755C  0100               	movlb	0	; () banked
  9254  00755E  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  9255                           
  9256                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  9257  007560  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  9258  007562  E104               	bnz	l15158
  9259                           
  9260                           ; BSR set to: 0
  9261                           ;radio_driver_SX1276.c: 1145: {
  9262                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  9263  007564  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  9264  007566  0E12               	movlw	18
  9265  007568  EF3D  F03B         	goto	_RADIO_RegisterWrite
  9266  00756C                     l15158:
  9267                           
  9268                           ; BSR set to: 0
  9269                           ;radio_driver_SX1276.c: 1148: else
  9270                           ;radio_driver_SX1276.c: 1149: {
  9271                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  9272  00756C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  9273  00756E  0E3E               	movlw	62
  9274  007570  EC3D  F03B         	call	_RADIO_RegisterWrite
  9275                           
  9276                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  9277  007574  0100               	movlb	0	; () banked
  9278  007576  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
  9279  007578  0E3F               	movlw	63
  9280  00757A  EF3D  F03B         	goto	_RADIO_RegisterWrite
  9281  00757E                     __end_of_RADIO_UnhandledInterrupt:
  9282                           	opt stack 0
  9283                           tosu	equ	0xFFF
  9284                           tosh	equ	0xFFE
  9285                           tosl	equ	0xFFD
  9286                           pclath	equ	0xFFA
  9287                           tblptru	equ	0xFF8
  9288                           tblptrh	equ	0xFF7
  9289                           tblptrl	equ	0xFF6
  9290                           tablat	equ	0xFF5
  9291                           prodh	equ	0xFF4
  9292                           prodl	equ	0xFF3
  9293                           intcon	equ	0xFF2
  9294                           intcon2	equ	0xFF1
  9295                           intcon3	equ	0xFF0
  9296                           postinc0	equ	0xFEE
  9297                           wreg	equ	0xFE8
  9298                           postinc1	equ	0xFE6
  9299                           postdec1	equ	0xFE5
  9300                           plusw1	equ	0xFE3
  9301                           fsr1h	equ	0xFE2
  9302                           fsr1l	equ	0xFE1
  9303                           indf2	equ	0xFDF
  9304                           postinc2	equ	0xFDE
  9305                           postdec2	equ	0xFDD
  9306                           fsr2h	equ	0xFDA
  9307                           fsr2l	equ	0xFD9
  9308                           status	equ	0xFD8
  9309                           
  9310 ;; *************** function _RADIO_TxDone *****************
  9311 ;; Defined at:
  9312 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9313 ;; Parameters:    Size  Location     Type
  9314 ;;		None
  9315 ;; Auto vars:     Size  Location     Type
  9316 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
  9317 ;; Return value:  Size  Location     Type
  9318 ;;                  1    wreg      void 
  9319 ;; Registers used:
  9320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9321 ;; Tracked objects:
  9322 ;;		On entry : E/0
  9323 ;;		On exit  : C/0
  9324 ;;		Unchanged: 0/0
  9325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9327 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9328 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9329 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9330 ;;Total ram usage:       12 bytes
  9331 ;; Hardware stack levels used:    1
  9332 ;; Hardware stack levels required when called:   15
  9333 ;; This function calls:
  9334 ;;		_LORAWAN_TxDone
  9335 ;;		_RADIO_RegisterWrite
  9336 ;;		_RADIO_WriteMode
  9337 ;;		_SwTimerReadValue
  9338 ;;		_SwTimerStop
  9339 ;; This function is called by:
  9340 ;;		_RADIO_DIO0
  9341 ;; This function uses a non-reentrant model
  9342 ;;
  9343                           
  9344                           	psect	text56
  9345  003BEE                     __ptext56:
  9346                           	opt stack 0
  9347  003BEE                     _RADIO_TxDone:
  9348                           	opt stack 13
  9349                           
  9350                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  9351                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9352                           
  9353                           ;incstack = 0
  9354  003BEE  0101               	movlb	1	; () banked
  9355  003BF0  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9356  003BF2  EC6A  F03B         	call	_SwTimerStop
  9357                           
  9358                           ; BSR set to: 0
  9359                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  9360  003BF6  0E08               	movlw	8
  9361  003BF8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9362  003BFA  0E12               	movlw	18
  9363  003BFC  EC3D  F03B         	call	_RADIO_RegisterWrite
  9364                           
  9365                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9366  003C00  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9367  003C04  0E00               	movlw	0
  9368  003C06  0100               	movlb	0	; () banked
  9369  003C08  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9370  003C0A  ECB9  F029         	call	_RADIO_WriteMode
  9371                           
  9372                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9373  003C0E  0101               	movlb	1	; () banked
  9374  003C10  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9375                           
  9376                           ; BSR set to: 1
  9377                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9378  003C12  B99C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9379  003C14  0012               	return	
  9380                           
  9381                           ; BSR set to: 1
  9382                           ;radio_driver_SX1276.c: 1087: {
  9383                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9384  003C16  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9385  003C18  EC7F  F037         	call	_SwTimerReadValue
  9386  003C1C  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9387  003C1E  E107               	bnz	u17510
  9388  003C20  0E1F               	movlw	31
  9389  003C22  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
  9390  003C24  0EAC               	movlw	172
  9391  003C26  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9392  003C28  0EDF               	movlw	223
  9393  003C2A  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9394  003C2C  E346               	bnc	l15124
  9395  003C2E                     u17510:
  9396                           
  9397                           ; BSR set to: 0
  9398  003C2E  0101               	movlb	1	; () banked
  9399  003C30  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9400  003C32  EC7F  F037         	call	_SwTimerReadValue
  9401  003C36  0E0D               	movlw	13
  9402  003C38  D005               	goto	u17520
  9403  003C3A                     u17525:
  9404  003C3A  90D8               	bcf	status,0,c
  9405  003C3C  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9406  003C3E  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9407  003C40  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9408  003C42  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9409  003C44                     u17520:
  9410  003C44  2EE8               	decfsz	wreg,f,c
  9411  003C46  D7F9               	goto	u17525
  9412  003C48  0E7D               	movlw	125
  9413  003C4A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9414  003C4C  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9415  003C50  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9416  003C54  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9417  003C56  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9418  003C58  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9419  003C5A  50F3               	movf	prodl,w,c
  9420  003C5C  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9421  003C5E  50F4               	movf	prodh,w,c
  9422  003C60  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9423  003C62  0E00               	movlw	0
  9424  003C64  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9425  003C66  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9426  003C68  50F3               	movf	prodl,w,c
  9427  003C6A  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9428  003C6C  50F4               	movf	prodh,w,c
  9429  003C6E  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9430  003C70  0E00               	movlw	0
  9431  003C72  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9432  003C74  0E7D               	movlw	125
  9433  003C76  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9434  003C78  50F3               	movf	prodl,w,c
  9435  003C7A  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9436  003C7C  50F4               	movf	prodh,w,c
  9437  003C7E  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9438  003C80  0E00               	movlw	0
  9439  003C82  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9440  003C84  50F3               	movf	prodl,w,c
  9441  003C86  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9442  003C88  50F4               	movf	prodh,w,c
  9443  003C8A  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9444  003C8C  0E00               	movlw	0
  9445  003C8E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9446  003C90  50F3               	movf	prodl,w,c
  9447  003C92  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9448  003C94  50F4               	movf	prodh,w,c
  9449  003C96  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9450  003C98  0E7D               	movlw	125
  9451  003C9A  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9452  003C9C  50F3               	movf	prodl,w,c
  9453  003C9E  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9454  003CA0  0E00               	movlw	0
  9455  003CA2  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9456  003CA4  50F3               	movf	prodl,w,c
  9457  003CA6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9458  003CA8  0E00               	movlw	0
  9459  003CAA  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9460  003CAC  50F3               	movf	prodl,w,c
  9461  003CAE  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9462  003CB0  0E00               	movlw	0
  9463  003CB2  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9464  003CB4  50F3               	movf	prodl,w,c
  9465  003CB6  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9466  003CB8  D045               	goto	L4
  9467  003CBA                     l15124:
  9468                           
  9469                           ; BSR set to: 0
  9470  003CBA  0101               	movlb	1	; () banked
  9471  003CBC  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9472  003CBE  EC7F  F037         	call	_SwTimerReadValue
  9473  003CC2  0E7D               	movlw	125
  9474  003CC4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9475  003CC6  CFF3 F0D2          	movff	prodl,??_RADIO_TxDone
  9476  003CCA  CFF4 F0D3          	movff	prodh,??_RADIO_TxDone+1
  9477  003CCE  6BD4               	clrf	(??_RADIO_TxDone+2)& (0+255),b
  9478  003CD0  6BD5               	clrf	(??_RADIO_TxDone+3)& (0+255),b
  9479  003CD2  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9480  003CD4  50F3               	movf	prodl,w,c
  9481  003CD6  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9482  003CD8  50F4               	movf	prodh,w,c
  9483  003CDA  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9484  003CDC  0E00               	movlw	0
  9485  003CDE  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9486  003CE0  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9487  003CE2  50F3               	movf	prodl,w,c
  9488  003CE4  27D3               	addwf	(??_RADIO_TxDone+1)& (0+255),f,b
  9489  003CE6  50F4               	movf	prodh,w,c
  9490  003CE8  23D4               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9491  003CEA  0E00               	movlw	0
  9492  003CEC  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9493  003CEE  0E7D               	movlw	125
  9494  003CF0  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9495  003CF2  50F3               	movf	prodl,w,c
  9496  003CF4  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9497  003CF6  50F4               	movf	prodh,w,c
  9498  003CF8  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9499  003CFA  0E00               	movlw	0
  9500  003CFC  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9501  003CFE  50F3               	movf	prodl,w,c
  9502  003D00  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9503  003D02  50F4               	movf	prodh,w,c
  9504  003D04  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9505  003D06  0E00               	movlw	0
  9506  003D08  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9507  003D0A  50F3               	movf	prodl,w,c
  9508  003D0C  27D4               	addwf	(??_RADIO_TxDone+2)& (0+255),f,b
  9509  003D0E  50F4               	movf	prodh,w,c
  9510  003D10  23D5               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9511  003D12  0E7D               	movlw	125
  9512  003D14  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
  9513  003D16  50F3               	movf	prodl,w,c
  9514  003D18  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9515  003D1A  0E00               	movlw	0
  9516  003D1C  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
  9517  003D1E  50F3               	movf	prodl,w,c
  9518  003D20  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9519  003D22  0E00               	movlw	0
  9520  003D24  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
  9521  003D26  50F3               	movf	prodl,w,c
  9522  003D28  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9523  003D2A  0E00               	movlw	0
  9524  003D2C  038D               	mulwf	?_SwTimerReadValue& (0+255),b
  9525  003D2E  50F3               	movf	prodl,w,c
  9526  003D30  27D5               	addwf	(??_RADIO_TxDone+3)& (0+255),f,b
  9527  003D32  0E0D               	movlw	13
  9528  003D34  D005               	goto	u17530
  9529  003D36                     u17535:
  9530  003D36  90D8               	bcf	status,0,c
  9531  003D38  33D5               	rrcf	(??_RADIO_TxDone+3)& (0+255),f,b
  9532  003D3A  33D4               	rrcf	(??_RADIO_TxDone+2)& (0+255),f,b
  9533  003D3C  33D3               	rrcf	(??_RADIO_TxDone+1)& (0+255),f,b
  9534  003D3E  33D2               	rrcf	??_RADIO_TxDone& (0+255),f,b
  9535  003D40                     u17530:
  9536  003D40  2EE8               	decfsz	wreg,f,c
  9537  003D42  D7F9               	goto	u17535
  9538  003D44                     L4:
  9539  003D44  C0D2  F0DA         	movff	??_RADIO_TxDone,_RADIO_TxDone$1215
  9540  003D48  C0D3  F0DB         	movff	??_RADIO_TxDone+1,_RADIO_TxDone$1215+1
  9541  003D4C  C0D4  F0DC         	movff	??_RADIO_TxDone+2,_RADIO_TxDone$1215+2
  9542  003D50  C0D5  F0DD         	movff	??_RADIO_TxDone+3,_RADIO_TxDone$1215+3
  9543                           
  9544                           ; BSR set to: 0
  9545  003D54  51DA               	movf	_RADIO_TxDone$1215& (0+255),w,b
  9546  003D56  0820               	sublw	32
  9547  003D58  6FD6               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9548  003D5A  0E4E               	movlw	78
  9549  003D5C  55DB               	subfwb	(_RADIO_TxDone$1215+1)& (0+255),w,b
  9550  003D5E  6FD7               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9551  003D60  0E00               	movlw	0
  9552  003D62  55DC               	subfwb	(_RADIO_TxDone$1215+2)& (0+255),w,b
  9553  003D64  6FD8               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9554  003D66  0E00               	movlw	0
  9555  003D68  55DD               	subfwb	(_RADIO_TxDone$1215+3)& (0+255),w,b
  9556  003D6A  6FD9               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9557                           
  9558                           ; BSR set to: 0
  9559                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9560  003D6C  C0D6  F0A0         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9561  003D70  C0D7  F0A1         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9562  003D74  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
  9563  003D78                     __end_of_RADIO_TxDone:
  9564                           	opt stack 0
  9565                           tosu	equ	0xFFF
  9566                           tosh	equ	0xFFE
  9567                           tosl	equ	0xFFD
  9568                           pclath	equ	0xFFA
  9569                           tblptru	equ	0xFF8
  9570                           tblptrh	equ	0xFF7
  9571                           tblptrl	equ	0xFF6
  9572                           tablat	equ	0xFF5
  9573                           prodh	equ	0xFF4
  9574                           prodl	equ	0xFF3
  9575                           intcon	equ	0xFF2
  9576                           intcon2	equ	0xFF1
  9577                           intcon3	equ	0xFF0
  9578                           postinc0	equ	0xFEE
  9579                           wreg	equ	0xFE8
  9580                           postinc1	equ	0xFE6
  9581                           postdec1	equ	0xFE5
  9582                           plusw1	equ	0xFE3
  9583                           fsr1h	equ	0xFE2
  9584                           fsr1l	equ	0xFE1
  9585                           indf2	equ	0xFDF
  9586                           postinc2	equ	0xFDE
  9587                           postdec2	equ	0xFDD
  9588                           fsr2h	equ	0xFDA
  9589                           fsr2l	equ	0xFD9
  9590                           status	equ	0xFD8
  9591                           
  9592 ;; *************** function _RADIO_RxDone *****************
  9593 ;; Defined at:
  9594 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9595 ;; Parameters:    Size  Location     Type
  9596 ;;		None
  9597 ;; Auto vars:     Size  Location     Type
  9598 ;;  i               1  138[BANK0 ] unsigned char 
  9599 ;;  irqFlags        1  137[BANK0 ] unsigned char 
  9600 ;; Return value:  Size  Location     Type
  9601 ;;                  1    wreg      void 
  9602 ;; Registers used:
  9603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9604 ;; Tracked objects:
  9605 ;;		On entry : E/0
  9606 ;;		On exit  : C/0
  9607 ;;		Unchanged: 0/0
  9608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9610 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9612 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9613 ;;Total ram usage:        2 bytes
  9614 ;; Hardware stack levels used:    1
  9615 ;; Hardware stack levels required when called:   16
  9616 ;; This function calls:
  9617 ;;		_HALSPICSAssert
  9618 ;;		_HALSPICSDeassert
  9619 ;;		_HALSPISend
  9620 ;;		_LORAWAN_RxDone
  9621 ;;		_RADIO_RegisterRead
  9622 ;;		_RADIO_RegisterWrite
  9623 ;;		_RADIO_WriteMode
  9624 ;;		_SwTimerStop
  9625 ;;		___abdiv
  9626 ;; This function is called by:
  9627 ;;		_RADIO_DIO0
  9628 ;; This function uses a non-reentrant model
  9629 ;;
  9630                           
  9631                           	psect	text57
  9632  00544A                     __ptext57:
  9633                           	opt stack 0
  9634  00544A                     _RADIO_RxDone:
  9635                           	opt stack 12
  9636                           
  9637                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9638                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9639                           
  9640                           ;incstack = 0
  9641  00544A  0E12               	movlw	18
  9642  00544C  EC41  F03A         	call	_RADIO_RegisterRead
  9643  005450  6FE9               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9644                           
  9645                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9646  005452  0E70               	movlw	112
  9647  005454  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9648  005456  0E12               	movlw	18
  9649  005458  EC3D  F03B         	call	_RADIO_RegisterWrite
  9650                           
  9651                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9652  00545C  0100               	movlb	0	; () banked
  9653  00545E  51E9               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9654  005460  0B50               	andlw	80
  9655  005462  0A50               	xorlw	80
  9656  005464  A4D8               	btfss	status,2,c
  9657  005466  0012               	return	
  9658                           
  9659                           ; BSR set to: 0
  9660                           ;radio_driver_SX1276.c: 969: {
  9661                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9662  005468  0101               	movlb	1	; () banked
  9663  00546A  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9664  00546C  EC6A  F03B         	call	_SwTimerStop
  9665                           
  9666                           ; BSR set to: 0
  9667                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9668  005470  0E1C               	movlw	28
  9669  005472  EC41  F03A         	call	_RADIO_RegisterRead
  9670  005476  6FEA               	movwf	RADIO_RxDone@i& (0+255),b
  9671                           
  9672                           ; BSR set to: 0
  9673                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9674  005478  0101               	movlb	1	; () banked
  9675  00547A  5195               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9676  00547C  E004               	bz	l15026
  9677                           
  9678                           ; BSR set to: 1
  9679  00547E  0100               	movlb	0	; () banked
  9680  005480  ABE9               	btfss	RADIO_RxDone@irqFlags& (0+255),5,b
  9681                           
  9682                           ; BSR set to: 0
  9683  005482  ADEA               	btfss	RADIO_RxDone@i& (0+255),6,b
  9684  005484  D037               	goto	l15048
  9685  005486                     l15026:
  9686                           
  9687                           ;radio_driver_SX1276.c: 976: {
  9688                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9689  005486  0E13               	movlw	19
  9690  005488  EC41  F03A         	call	_RADIO_RegisterRead
  9691  00548C  0101               	movlb	1	; () banked
  9692  00548E  6F9D               	movwf	(_RadioConfiguration+36)& (0+255),b
  9693                           
  9694                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9695  005490  0100               	movlb	0	; () banked
  9696  005492  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
  9697  005494  0E0D               	movlw	13
  9698  005496  EC3D  F03B         	call	_RADIO_RegisterWrite
  9699                           
  9700                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9701  00549A  EC5F  F03D         	call	_HALSPICSAssert	;wreg free
  9702                           
  9703                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9704  00549E  0E00               	movlw	0
  9705  0054A0  EC19  F03D         	call	_HALSPISend
  9706                           
  9707                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9708  0054A4  0100               	movlb	0	; () banked
  9709  0054A6  6BEA               	clrf	RADIO_RxDone@i& (0+255),b
  9710  0054A8  D00D               	goto	l15038
  9711  0054AA                     l15034:
  9712                           
  9713                           ; BSR set to: 0
  9714                           ;radio_driver_SX1276.c: 990: {
  9715                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9716  0054AA  51EA               	movf	RADIO_RxDone@i& (0+255),w,b
  9717  0054AC  0101               	movlb	1	; () banked
  9718  0054AE  259E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9719  0054B0  6ED9               	movwf	fsr2l,c
  9720  0054B2  0E00               	movlw	0
  9721  0054B4  219F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9722  0054B6  6EDA               	movwf	fsr2h,c
  9723  0054B8  0EFF               	movlw	255
  9724  0054BA  EC19  F03D         	call	_HALSPISend
  9725  0054BE  6EDF               	movwf	indf2,c
  9726  0054C0  0100               	movlb	0	; () banked
  9727  0054C2  2BEA               	incf	RADIO_RxDone@i& (0+255),f,b
  9728  0054C4                     l15038:
  9729                           
  9730                           ; BSR set to: 0
  9731  0054C4  0101               	movlb	1	; () banked
  9732  0054C6  519D               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9733  0054C8  0100               	movlb	0	; () banked
  9734  0054CA  5DEA               	subwf	RADIO_RxDone@i& (0+255),w,b
  9735  0054CC  E3EE               	bnc	l15034
  9736                           
  9737                           ; BSR set to: 0
  9738                           ;radio_driver_SX1276.c: 992: }
  9739                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9740  0054CE  EC5D  F03D         	call	_HALSPICSDeassert	;wreg free
  9741                           
  9742                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9743  0054D2  0101               	movlb	1	; () banked
  9744  0054D4  859C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9745                           
  9746                           ; BSR set to: 1
  9747                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9748  0054D6  0E19               	movlw	25
  9749  0054D8  EC41  F03A         	call	_RADIO_RegisterRead
  9750  0054DC  0101               	movlb	1	; () banked
  9751  0054DE  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
  9752                           
  9753                           ; BSR set to: 1
  9754                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9755  0054E0  0E04               	movlw	4
  9756  0054E2  0100               	movlb	0	; () banked
  9757  0054E4  6F64               	movwf	___abdiv@divisor& (0+255),b
  9758  0054E6  0101               	movlb	1	; () banked
  9759  0054E8  51AB               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9760  0054EA  EC2B  F035         	call	___abdiv
  9761  0054EE  0101               	movlb	1	; () banked
  9762  0054F0  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
  9763                           
  9764                           ;radio_driver_SX1276.c: 998: }
  9765  0054F2  D002               	goto	l15050
  9766  0054F4                     l15048:
  9767                           
  9768                           ; BSR set to: 0
  9769                           ;radio_driver_SX1276.c: 999: else
  9770                           ;radio_driver_SX1276.c: 1000: {
  9771                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9772  0054F4  0101               	movlb	1	; () banked
  9773  0054F6  879C               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9774  0054F8                     l15050:
  9775                           
  9776                           ; BSR set to: 1
  9777                           ;radio_driver_SX1276.c: 1003: }
  9778                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9779  0054F8  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9780  0054FC  0E00               	movlw	0
  9781  0054FE  0100               	movlb	0	; () banked
  9782  005500  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9783  005502  ECB9  F029         	call	_RADIO_WriteMode
  9784                           
  9785                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9786  005506  0101               	movlb	1	; () banked
  9787  005508  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9788                           
  9789                           ; BSR set to: 1
  9790                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9791  00550A  C19E  F16F         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9792  00550E  C19F  F170         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9793  005512  C19D  F171         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9794  005516  EF44  F000         	goto	_LORAWAN_RxDone	;wreg free
  9795  00551A                     __end_of_RADIO_RxDone:
  9796                           	opt stack 0
  9797                           tosu	equ	0xFFF
  9798                           tosh	equ	0xFFE
  9799                           tosl	equ	0xFFD
  9800                           pclath	equ	0xFFA
  9801                           tblptru	equ	0xFF8
  9802                           tblptrh	equ	0xFF7
  9803                           tblptrl	equ	0xFF6
  9804                           tablat	equ	0xFF5
  9805                           prodh	equ	0xFF4
  9806                           prodl	equ	0xFF3
  9807                           intcon	equ	0xFF2
  9808                           intcon2	equ	0xFF1
  9809                           intcon3	equ	0xFF0
  9810                           postinc0	equ	0xFEE
  9811                           wreg	equ	0xFE8
  9812                           postinc1	equ	0xFE6
  9813                           postdec1	equ	0xFE5
  9814                           plusw1	equ	0xFE3
  9815                           fsr1h	equ	0xFE2
  9816                           fsr1l	equ	0xFE1
  9817                           indf2	equ	0xFDF
  9818                           postinc2	equ	0xFDE
  9819                           postdec2	equ	0xFDD
  9820                           fsr2h	equ	0xFDA
  9821                           fsr2l	equ	0xFD9
  9822                           status	equ	0xFD8
  9823                           
  9824 ;; *************** function ___abdiv *****************
  9825 ;; Defined at:
  9826 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  dividend        1    wreg     char 
  9829 ;;  divisor         1    4[BANK0 ] char 
  9830 ;; Auto vars:     Size  Location     Type
  9831 ;;  dividend        1    8[BANK0 ] char 
  9832 ;;  quotient        1    7[BANK0 ] char 
  9833 ;;  sign            1    6[BANK0 ] unsigned char 
  9834 ;;  counter         1    5[BANK0 ] unsigned char 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  1    wreg      char 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : F/1
  9841 ;;		On exit  : F/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9844 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9845 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9847 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9848 ;;Total ram usage:        5 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; Hardware stack levels required when called:    7
  9851 ;; This function calls:
  9852 ;;		Nothing
  9853 ;; This function is called by:
  9854 ;;		_RADIO_RxDone
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text58
  9859  006A56                     __ptext58:
  9860                           	opt stack 0
  9861  006A56                     ___abdiv:
  9862                           	opt stack 20
  9863                           
  9864                           ;incstack = 0
  9865                           ;___abdiv@dividend stored from wreg
  9866  006A56  0100               	movlb	0	; () banked
  9867  006A58  6F68               	movwf	___abdiv@dividend& (0+255),b
  9868  006A5A  6B66               	clrf	___abdiv@sign& (0+255),b
  9869                           
  9870                           ; BSR set to: 0
  9871  006A5C  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9872  006A5E  D003               	goto	l10744
  9873                           
  9874                           ; BSR set to: 0
  9875  006A60  6D64               	negf	___abdiv@divisor& (0+255),b
  9876                           
  9877                           ; BSR set to: 0
  9878  006A62  0E01               	movlw	1
  9879  006A64  6F66               	movwf	___abdiv@sign& (0+255),b
  9880  006A66                     l10744:
  9881                           
  9882                           ; BSR set to: 0
  9883  006A66  AF68               	btfss	___abdiv@dividend& (0+255),7,b
  9884  006A68  D003               	goto	l10750
  9885                           
  9886                           ; BSR set to: 0
  9887  006A6A  6D68               	negf	___abdiv@dividend& (0+255),b
  9888                           
  9889                           ; BSR set to: 0
  9890  006A6C  0E01               	movlw	1
  9891  006A6E  1B66               	xorwf	___abdiv@sign& (0+255),f,b
  9892  006A70                     l10750:
  9893                           
  9894                           ; BSR set to: 0
  9895  006A70  6B67               	clrf	___abdiv@quotient& (0+255),b
  9896                           
  9897                           ; BSR set to: 0
  9898  006A72  5164               	movf	___abdiv@divisor& (0+255),w,b
  9899  006A74  E014               	bz	l10772
  9900                           
  9901                           ; BSR set to: 0
  9902  006A76  0E01               	movlw	1
  9903  006A78  6F65               	movwf	___abdiv@counter& (0+255),b
  9904  006A7A  D003               	goto	l10760
  9905  006A7C                     l10756:
  9906                           
  9907                           ; BSR set to: 0
  9908  006A7C  90D8               	bcf	status,0,c
  9909  006A7E  3764               	rlcf	___abdiv@divisor& (0+255),f,b
  9910                           
  9911                           ; BSR set to: 0
  9912  006A80  2B65               	incf	___abdiv@counter& (0+255),f,b
  9913  006A82                     l10760:
  9914                           
  9915                           ; BSR set to: 0
  9916  006A82  AF64               	btfss	___abdiv@divisor& (0+255),7,b
  9917  006A84  D7FB               	goto	l10756
  9918  006A86                     l10762:
  9919                           
  9920                           ; BSR set to: 0
  9921  006A86  90D8               	bcf	status,0,c
  9922  006A88  3767               	rlcf	___abdiv@quotient& (0+255),f,b
  9923  006A8A  5164               	movf	___abdiv@divisor& (0+255),w,b
  9924  006A8C  5D68               	subwf	___abdiv@dividend& (0+255),w,b
  9925  006A8E  E303               	bnc	l10768
  9926                           
  9927                           ; BSR set to: 0
  9928  006A90  5164               	movf	___abdiv@divisor& (0+255),w,b
  9929  006A92  5F68               	subwf	___abdiv@dividend& (0+255),f,b
  9930                           
  9931                           ; BSR set to: 0
  9932  006A94  8167               	bsf	___abdiv@quotient& (0+255),0,b
  9933  006A96                     l10768:
  9934                           
  9935                           ; BSR set to: 0
  9936  006A96  90D8               	bcf	status,0,c
  9937  006A98  3364               	rrcf	___abdiv@divisor& (0+255),f,b
  9938                           
  9939                           ; BSR set to: 0
  9940  006A9A  2F65               	decfsz	___abdiv@counter& (0+255),f,b
  9941  006A9C  D7F4               	goto	l10762
  9942  006A9E                     l10772:
  9943                           
  9944                           ; BSR set to: 0
  9945  006A9E  5166               	movf	___abdiv@sign& (0+255),w,b
  9946  006AA0  E001               	bz	l10776
  9947                           
  9948                           ; BSR set to: 0
  9949  006AA2  6D67               	negf	___abdiv@quotient& (0+255),b
  9950  006AA4                     l10776:
  9951                           
  9952                           ; BSR set to: 0
  9953  006AA4  5167               	movf	___abdiv@quotient& (0+255),w,b
  9954                           
  9955                           ; BSR set to: 0
  9956  006AA6  0012               	return		;funcret
  9957  006AA8                     __end_of___abdiv:
  9958                           	opt stack 0
  9959                           tosu	equ	0xFFF
  9960                           tosh	equ	0xFFE
  9961                           tosl	equ	0xFFD
  9962                           pclath	equ	0xFFA
  9963                           tblptru	equ	0xFF8
  9964                           tblptrh	equ	0xFF7
  9965                           tblptrl	equ	0xFF6
  9966                           tablat	equ	0xFF5
  9967                           prodh	equ	0xFF4
  9968                           prodl	equ	0xFF3
  9969                           intcon	equ	0xFF2
  9970                           intcon2	equ	0xFF1
  9971                           intcon3	equ	0xFF0
  9972                           postinc0	equ	0xFEE
  9973                           wreg	equ	0xFE8
  9974                           postinc1	equ	0xFE6
  9975                           postdec1	equ	0xFE5
  9976                           plusw1	equ	0xFE3
  9977                           fsr1h	equ	0xFE2
  9978                           fsr1l	equ	0xFE1
  9979                           indf2	equ	0xFDF
  9980                           postinc2	equ	0xFDE
  9981                           postdec2	equ	0xFDD
  9982                           fsr2h	equ	0xFDA
  9983                           fsr2l	equ	0xFD9
  9984                           status	equ	0xFD8
  9985                           
  9986 ;; *************** function _RADIO_FSKPayloadReady *****************
  9987 ;; Defined at:
  9988 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9989 ;; Parameters:    Size  Location     Type
  9990 ;;		None
  9991 ;; Auto vars:     Size  Location     Type
  9992 ;;  i               1  138[BANK0 ] unsigned char 
  9993 ;;  irqFlags        1  137[BANK0 ] unsigned char 
  9994 ;; Return value:  Size  Location     Type
  9995 ;;                  1    wreg      void 
  9996 ;; Registers used:
  9997 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9998 ;; Tracked objects:
  9999 ;;		On entry : F/0
 10000 ;;		On exit  : C/0
 10001 ;;		Unchanged: 0/0
 10002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10004 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10006 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10007 ;;Total ram usage:        2 bytes
 10008 ;; Hardware stack levels used:    1
 10009 ;; Hardware stack levels required when called:   16
 10010 ;; This function calls:
 10011 ;;		_HALSPICSAssert
 10012 ;;		_HALSPICSDeassert
 10013 ;;		_HALSPISend
 10014 ;;		_LORAWAN_RxDone
 10015 ;;		_LORAWAN_RxTimeout
 10016 ;;		_RADIO_RegisterRead
 10017 ;;		_RADIO_WriteMode
 10018 ;;		_SwTimerStop
 10019 ;; This function is called by:
 10020 ;;		_RADIO_DIO0
 10021 ;; This function uses a non-reentrant model
 10022 ;;
 10023                           
 10024                           	psect	text59
 10025  005CFA                     __ptext59:
 10026                           	opt stack 0
 10027  005CFA                     _RADIO_FSKPayloadReady:
 10028                           	opt stack 12
 10029                           
 10030                           ; BSR set to: 0
 10031                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 10032                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 10033                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 10034                           
 10035                           ; BSR set to: 0
 10036                           ;incstack = 0
 10037  005CFA  0E3F               	movlw	63
 10038  005CFC  EC41  F03A         	call	_RADIO_RegisterRead
 10039  005D00  6FE9               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 10040                           
 10041                           ; BSR set to: 0
 10042                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 10043  005D02  A5E9               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 10044  005D04  0012               	return	
 10045                           
 10046                           ; BSR set to: 0
 10047                           ;radio_driver_SX1276.c: 1017: {
 10048                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10049  005D06  0101               	movlb	1	; () banked
 10050  005D08  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10051  005D0A  EC6A  F03B         	call	_SwTimerStop
 10052                           
 10053                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 10054  005D0E  0101               	movlb	1	; () banked
 10055  005D10  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 10056  005D12  EC6A  F03B         	call	_SwTimerStop
 10057                           
 10058                           ; BSR set to: 0
 10059                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 10060  005D16  EC5F  F03D         	call	_HALSPICSAssert	;wreg free
 10061                           
 10062                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 10063  005D1A  0E00               	movlw	0
 10064  005D1C  EC19  F03D         	call	_HALSPISend
 10065                           
 10066                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 10067  005D20  0EFF               	movlw	255
 10068  005D22  EC19  F03D         	call	_HALSPISend
 10069  005D26  0101               	movlb	1	; () banked
 10070  005D28  6F9D               	movwf	(_RadioConfiguration+36)& (0+255),b
 10071                           
 10072                           ; BSR set to: 1
 10073                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 10074  005D2A  0100               	movlb	0	; () banked
 10075  005D2C  6BEA               	clrf	RADIO_FSKPayloadReady@i& (0+255),b
 10076  005D2E  D00D               	goto	l15074
 10077  005D30                     l15070:
 10078                           
 10079                           ; BSR set to: 0
 10080                           ;radio_driver_SX1276.c: 1029: {
 10081                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 10082  005D30  51EA               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10083  005D32  0101               	movlb	1	; () banked
 10084  005D34  259E               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 10085  005D36  6ED9               	movwf	fsr2l,c
 10086  005D38  0E00               	movlw	0
 10087  005D3A  219F               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 10088  005D3C  6EDA               	movwf	fsr2h,c
 10089  005D3E  0EFF               	movlw	255
 10090  005D40  EC19  F03D         	call	_HALSPISend
 10091  005D44  6EDF               	movwf	indf2,c
 10092  005D46  0100               	movlb	0	; () banked
 10093  005D48  2BEA               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 10094  005D4A                     l15074:
 10095                           
 10096                           ; BSR set to: 0
 10097  005D4A  0101               	movlb	1	; () banked
 10098  005D4C  519D               	movf	(_RadioConfiguration+36)& (0+255),w,b
 10099  005D4E  0100               	movlb	0	; () banked
 10100  005D50  5DEA               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10101  005D52  E3EE               	bnc	l15070
 10102                           
 10103                           ; BSR set to: 0
 10104                           ;radio_driver_SX1276.c: 1031: }
 10105                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 10106  005D54  EC5D  F03D         	call	_HALSPICSDeassert	;wreg free
 10107                           
 10108                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10109  005D58  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10110  005D5C  0E00               	movlw	0
 10111  005D5E  0100               	movlb	0	; () banked
 10112  005D60  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10113  005D62  ECB9  F029         	call	_RADIO_WriteMode
 10114                           
 10115                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 10116  005D66  0101               	movlb	1	; () banked
 10117  005D68  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10118                           
 10119                           ; BSR set to: 1
 10120                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 10121  005D6A  0E80               	movlw	128
 10122  005D6C  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
 10123                           
 10124                           ; BSR set to: 1
 10125                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 10126  005D6E  0595               	decf	(_RadioConfiguration+28)& (0+255),w,b
 10127  005D70  E103               	bnz	l15088
 10128                           
 10129                           ; BSR set to: 1
 10130                           ;radio_driver_SX1276.c: 1040: {
 10131                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 10132  005D72  0100               	movlb	0	; () banked
 10133  005D74  A3E9               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 10134  005D76  D003               	goto	l15090
 10135  005D78                     l15088:
 10136                           
 10137                           ;radio_driver_SX1276.c: 1042: {
 10138                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 10139  005D78  0101               	movlb	1	; () banked
 10140  005D7A  859C               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 10141                           
 10142                           ;radio_driver_SX1276.c: 1044: }
 10143  005D7C  D002               	goto	l15094
 10144  005D7E                     l15090:
 10145                           
 10146                           ; BSR set to: 0
 10147                           ;radio_driver_SX1276.c: 1045: else
 10148                           ;radio_driver_SX1276.c: 1046: {
 10149                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 10150  005D7E  0101               	movlb	1	; () banked
 10151  005D80  959C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 10152  005D82                     l15094:
 10153                           
 10154                           ; BSR set to: 1
 10155                           ;radio_driver_SX1276.c: 1053: }
 10156                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 10157  005D82  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 10158  005D84  EF89  F013         	goto	_LORAWAN_RxTimeout
 10159                           
 10160                           ; BSR set to: 1
 10161                           ;radio_driver_SX1276.c: 1056: {
 10162                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 10163  005D88  C19E  F16F         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 10164  005D8C  C19F  F170         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 10165  005D90  C19D  F171         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 10166  005D94  EF44  F000         	goto	_LORAWAN_RxDone	;wreg free
 10167  005D98                     __end_of_RADIO_FSKPayloadReady:
 10168                           	opt stack 0
 10169                           tosu	equ	0xFFF
 10170                           tosh	equ	0xFFE
 10171                           tosl	equ	0xFFD
 10172                           pclath	equ	0xFFA
 10173                           tblptru	equ	0xFF8
 10174                           tblptrh	equ	0xFF7
 10175                           tblptrl	equ	0xFF6
 10176                           tablat	equ	0xFF5
 10177                           prodh	equ	0xFF4
 10178                           prodl	equ	0xFF3
 10179                           intcon	equ	0xFF2
 10180                           intcon2	equ	0xFF1
 10181                           intcon3	equ	0xFF0
 10182                           postinc0	equ	0xFEE
 10183                           wreg	equ	0xFE8
 10184                           postinc1	equ	0xFE6
 10185                           postdec1	equ	0xFE5
 10186                           plusw1	equ	0xFE3
 10187                           fsr1h	equ	0xFE2
 10188                           fsr1l	equ	0xFE1
 10189                           indf2	equ	0xFDF
 10190                           postinc2	equ	0xFDE
 10191                           postdec2	equ	0xFDD
 10192                           fsr2h	equ	0xFDA
 10193                           fsr2l	equ	0xFD9
 10194                           status	equ	0xFD8
 10195                           
 10196 ;; *************** function _LORAWAN_RxTimeout *****************
 10197 ;; Defined at:
 10198 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10199 ;; Parameters:    Size  Location     Type
 10200 ;;		None
 10201 ;; Auto vars:     Size  Location     Type
 10202 ;;  minim           4   75[BANK0 ] unsigned long 
 10203 ;;  i               1   79[BANK0 ] unsigned char 
 10204 ;; Return value:  Size  Location     Type
 10205 ;;                  1    wreg      void 
 10206 ;; Registers used:
 10207 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10208 ;; Tracked objects:
 10209 ;;		On entry : F/1
 10210 ;;		On exit  : C/0
 10211 ;;		Unchanged: 0/0
 10212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10213 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10214 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10215 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10216 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10217 ;;Total ram usage:        9 bytes
 10218 ;; Hardware stack levels used:    1
 10219 ;; Hardware stack levels required when called:   15
 10220 ;; This function calls:
 10221 ;;		_LORAWAN_ReceiveWindow2Callback
 10222 ;;		_RADIO_Transmit
 10223 ;;		_ResetParametersForConfirmedTransmission
 10224 ;;		_ResetParametersForUnconfirmedTransmission
 10225 ;;		_RxDataDone
 10226 ;;		_SelectChannelForTransmission
 10227 ;;		_SetJoinFailState
 10228 ;;		_SwTimerSetTimeout
 10229 ;;		_SwTimerStart
 10230 ;;		___lldiv
 10231 ;; This function is called by:
 10232 ;;		_RADIO_FSKPayloadReady
 10233 ;;		_RADIO_RxTimeout
 10234 ;;		_RADIO_RxFSKTimeout
 10235 ;;		_RADIO_WatchdogTimeout
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           
 10239                           	psect	text60
 10240  002712                     __ptext60:
 10241                           	opt stack 0
 10242  002712                     _LORAWAN_RxTimeout:
 10243                           	opt stack 12
 10244                           
 10245                           ; BSR set to: 1
 10246                           ;lorawan_eu.c: 466: uint8_t i;
 10247                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 10248                           
 10249                           ;incstack = 0
 10250  002712  0100               	movlb	0	; () banked
 10251  002714  69AB               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 10252  002716  69AC               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 10253  002718  69AD               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 10254  00271A  69AE               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 10255                           
 10256                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 10257  00271C  0102               	movlb	2	; () banked
 10258  00271E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10259  002720  D138               	goto	l14862
 10260                           
 10261                           ; BSR set to: 2
 10262                           ;lorawan_eu.c: 470: {
 10263                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 10264  002722  5102               	movf	(_loRa+2)& (0+255),w,b
 10265  002724  0B0F               	andlw	15
 10266  002726  0A03               	xorlw	3
 10267  002728  E10E               	bnz	l1051
 10268                           
 10269                           ; BSR set to: 2
 10270                           ;lorawan_eu.c: 473: {
 10271                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 10272  00272A  5112               	movf	(_loRa+18)& (0+255),w,b
 10273  00272C  E105               	bnz	l14798
 10274                           
 10275                           ; BSR set to: 2
 10276                           ;lorawan_eu.c: 475: {
 10277                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 10278  00272E  5102               	movf	(_loRa+2)& (0+255),w,b
 10279  002730  0BF0               	andlw	-16
 10280  002732  0904               	iorlw	4
 10281  002734  6F02               	movwf	(_loRa+2)& (0+255),b
 10282                           
 10283                           ;lorawan_eu.c: 477: }
 10284  002736  0012               	return	
 10285  002738                     l14798:
 10286                           
 10287                           ; BSR set to: 2
 10288                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 10289  002738  0E02               	movlw	2
 10290  00273A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10291  00273C  A4D8               	btfss	status,2,c
 10292  00273E  0012               	return	
 10293                           
 10294                           ; BSR set to: 2
 10295                           ;lorawan_eu.c: 479: {
 10296                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 10297  002740  6AE6               	clrf	postinc1,c
 10298  002742  EFF4  F02A         	goto	_LORAWAN_ReceiveWindow2Callback	;wreg free
 10299  002746                     l1051:
 10300                           
 10301                           ; BSR set to: 2
 10302                           ;lorawan_eu.c: 483: else
 10303                           ;lorawan_eu.c: 484: {
 10304                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 10305  002746  B500               	btfsc	_loRa& (0+255),2,b
 10306                           
 10307                           ; BSR set to: 2
 10308                           ;lorawan_eu.c: 487: {
 10309                           ;lorawan_eu.c: 488: SetJoinFailState();
 10310  002748  EF78  F03A         	goto	_SetJoinFailState	;wreg free
 10311                           
 10312                           ; BSR set to: 2
 10313                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 10314                           
 10315                           ;lorawan_eu.c: 489: }
 10316  00274C  A902               	btfss	(_loRa+2)& (0+255),4,b
 10317  00274E  0012               	return	
 10318                           
 10319                           ; BSR set to: 2
 10320                           ;lorawan_eu.c: 492: {
 10321                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 10322  002750  A100               	btfss	_loRa& (0+255),0,b
 10323  002752  D04D               	goto	l14820
 10324                           
 10325                           ; BSR set to: 2
 10326                           ;lorawan_eu.c: 494: {
 10327                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 10328  002754  51D9               	movf	(_loRa+217)& (0+255),w,b
 10329  002756  5DD7               	subwf	(_loRa+215)& (0+255),w,b
 10330  002758  E334               	bnc	l14814
 10331                           
 10332                           ; BSR set to: 2
 10333                           ;lorawan_eu.c: 496: {
 10334                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10335  00275A  5102               	movf	(_loRa+2)& (0+255),w,b
 10336  00275C  0BF0               	andlw	-16
 10337  00275E  0906               	iorlw	6
 10338  002760  6F02               	movwf	(_loRa+2)& (0+255),b
 10339                           
 10340                           ; BSR set to: 2
 10341                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 10342  002762  51A0               	movf	(_loRa+160)& (0+255),w,b
 10343  002764  0100               	movlb	0	; () banked
 10344  002766  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10345  002768  0102               	movlb	2	; () banked
 10346  00276A  51A1               	movf	(_loRa+161)& (0+255),w,b
 10347  00276C  0100               	movlb	0	; () banked
 10348  00276E  6FA8               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 10349  002770  6BA9               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 10350  002772  6BAA               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 10351  002774  0E0C               	movlw	12
 10352  002776                     u16935:
 10353  002776  90D8               	bcf	status,0,c
 10354  002778  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10355  00277A  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10356  00277C  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10357  00277E  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10358  002780  2EE8               	decfsz	wreg,f,c
 10359  002782  D7F9               	goto	u16935
 10360  002784  C0A7  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 10361  002788  C0A8  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 10362  00278C  C0A9  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 10363  002790  C0AA  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 10364  002794  0E7D               	movlw	125
 10365  002796  6F68               	movwf	___lldiv@divisor& (0+255),b
 10366  002798  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10367  00279A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10368  00279C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10369  00279E  EC1B  F031         	call	___lldiv	;wreg free
 10370  0027A2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10371  0027A6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10372  0027AA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10373  0027AE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10374  0027B2  0102               	movlb	2	; () banked
 10375  0027B4  51E8               	movf	(_loRa+232)& (0+255),w,b
 10376  0027B6  EC5E  F037         	call	_SwTimerSetTimeout
 10377                           
 10378                           ; BSR set to: 0
 10379                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10380  0027BA  0102               	movlb	2	; () banked
 10381  0027BC  51E8               	movf	(_loRa+232)& (0+255),w,b
 10382  0027BE  EF59  F02F         	goto	_SwTimerStart
 10383  0027C2                     l14814:
 10384                           
 10385                           ; BSR set to: 2
 10386                           ;lorawan_eu.c: 501: else
 10387                           ;lorawan_eu.c: 502: {
 10388                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10389  0027C2  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10390                           
 10391                           ; BSR set to: 2
 10392                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10393  0027C6  0101               	movlb	1	; () banked
 10394  0027C8  5172               	movf	_rxPayload& (0+255),w,b
 10395  0027CA  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10396  0027CC  B4D8               	btfsc	status,2,c
 10397  0027CE  0012               	return	
 10398  0027D0                     l14818:
 10399                           
 10400                           ; BSR set to: 1
 10401                           ;lorawan_eu.c: 505: {
 10402                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10403  0027D0  0100               	movlb	0	; () banked
 10404  0027D2  6B64               	clrf	RxDataDone@pData& (0+255),b
 10405  0027D4  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10406  0027D6  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10407  0027D8  6B67               	clrf	RxDataDone@status& (0+255),b
 10408  0027DA  0005               	push	
 10409  0027DC  6AFA               	clrf	pclath,c
 10410  0027DE  0101               	movlb	1	; () banked
 10411  0027E0  5172               	movf	_rxPayload& (0+255),w,b
 10412  0027E2  6EFD               	movwf	tosl,c
 10413  0027E4  5173               	movf	(_rxPayload+1)& (0+255),w,b
 10414  0027E6  6EFE               	movwf	tosh,c
 10415  0027E8  6AFF               	clrf	tosu,c
 10416  0027EA  50FA               	movf	pclath,w,c
 10417  0027EC  0012               	return		;indir
 10418  0027EE                     l14820:
 10419                           
 10420                           ; BSR set to: 2
 10421                           ;lorawan_eu.c: 511: else
 10422                           ;lorawan_eu.c: 512: {
 10423                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10424  0027EE  51D8               	movf	(_loRa+216)& (0+255),w,b
 10425  0027F0  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10426  0027F2  E201 D0B7          	bnc	l14856
 10427                           
 10428                           ; BSR set to: 2
 10429                           ;lorawan_eu.c: 514: {
 10430                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10431  0027F6  5102               	movf	(_loRa+2)& (0+255),w,b
 10432  0027F8  0BF0               	andlw	-16
 10433  0027FA  0906               	iorlw	6
 10434  0027FC  6F02               	movwf	(_loRa+2)& (0+255),b
 10435                           
 10436                           ; BSR set to: 2
 10437                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10438  0027FE  0E01               	movlw	1
 10439  002800  ECC1  F033         	call	_SelectChannelForTransmission
 10440  002804  0900               	iorlw	0
 10441  002806  E119               	bnz	l1065
 10442                           
 10443                           ; BSR set to: 0
 10444                           ;lorawan_eu.c: 517: {
 10445                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10446  002808  0EF0               	movlw	low (_macBuffer+16)
 10447  00280A  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 10448  00280C  0E04               	movlw	high (_macBuffer+16)
 10449  00280E  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10450  002810  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10451  002814  EC00  F018         	call	_RADIO_Transmit	;wreg free
 10452  002818  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 10453  00281A  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10454  00281C  E107               	bnz	l14832
 10455                           
 10456                           ; BSR set to: 0
 10457                           ;lorawan_eu.c: 520: {
 10458                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10459  00281E  0102               	movlb	2	; () banked
 10460  002820  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10461                           
 10462                           ; BSR set to: 2
 10463                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10464  002822  5102               	movf	(_loRa+2)& (0+255),w,b
 10465  002824  0BF0               	andlw	-16
 10466  002826  0901               	iorlw	1
 10467  002828  6F02               	movwf	(_loRa+2)& (0+255),b
 10468                           
 10469                           ;lorawan_eu.c: 523: }
 10470  00282A  0012               	return	
 10471  00282C                     l14832:
 10472                           
 10473                           ; BSR set to: 0
 10474                           ;lorawan_eu.c: 524: else
 10475                           ;lorawan_eu.c: 526: {
 10476                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10477  00282C  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10478                           
 10479                           ; BSR set to: 2
 10480                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10481  002830  0101               	movlb	1	; () banked
 10482  002832  5172               	movf	_rxPayload& (0+255),w,b
 10483  002834  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10484  002836  E1CC               	bnz	l14818
 10485  002838  0012               	return	
 10486  00283A                     l1065:
 10487                           
 10488                           ; BSR set to: 0
 10489                           ;lorawan_eu.c: 534: else
 10490                           ;lorawan_eu.c: 535: {
 10491                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10492  00283A  6BAF               	clrf	LORAWAN_RxTimeout@i& (0+255),b
 10493  00283C  D05B               	goto	l14852
 10494  00283E                     l14838:
 10495                           
 10496                           ; BSR set to: 2
 10497                           ;lorawan_eu.c: 538: {
 10498                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10499  00283E  0100               	movlb	0	; () banked
 10500  002840  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10501  002842  0D0E               	mullw	14
 10502  002844  0E04               	movlw	low (_Channels+4)
 10503  002846  24F3               	addwf	prodl,w,c
 10504  002848  6ED9               	movwf	fsr2l,c
 10505  00284A  0E04               	movlw	high (_Channels+4)
 10506  00284C  20F4               	addwfc	prodh,w,c
 10507  00284E  6EDA               	movwf	fsr2h,c
 10508  002850  04DE               	decf	postinc2,w,c
 10509  002852  E14E               	bnz	l14850
 10510                           
 10511                           ; BSR set to: 0
 10512  002854  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10513  002856  0D0E               	mullw	14
 10514  002858  0E08               	movlw	low (_Channels+8)
 10515  00285A  24F3               	addwf	prodl,w,c
 10516  00285C  6ED9               	movwf	fsr2l,c
 10517  00285E  0E04               	movlw	high (_Channels+8)
 10518  002860  20F4               	addwfc	prodh,w,c
 10519  002862  6EDA               	movwf	fsr2h,c
 10520  002864  50DE               	movf	postinc2,w,c
 10521  002866  10DE               	iorwf	postinc2,w,c
 10522  002868  10DE               	iorwf	postinc2,w,c
 10523  00286A  10DE               	iorwf	postinc2,w,c
 10524  00286C  E041               	bz	l14850
 10525                           
 10526                           ; BSR set to: 0
 10527  00286E  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10528  002870  0D0E               	mullw	14
 10529  002872  0E08               	movlw	low (_Channels+8)
 10530  002874  24F3               	addwf	prodl,w,c
 10531  002876  6ED9               	movwf	fsr2l,c
 10532  002878  0E04               	movlw	high (_Channels+8)
 10533  00287A  20F4               	addwfc	prodh,w,c
 10534  00287C  6EDA               	movwf	fsr2h,c
 10535  00287E  50DE               	movf	postinc2,w,c
 10536  002880  5DAB               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10537  002882  50DE               	movf	postinc2,w,c
 10538  002884  59AC               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10539  002886  50DE               	movf	postinc2,w,c
 10540  002888  59AD               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10541  00288A  50DE               	movf	postinc2,w,c
 10542  00288C  59AE               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10543  00288E  E330               	bnc	l14850
 10544                           
 10545                           ; BSR set to: 0
 10546  002890  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10547  002892  0D0E               	mullw	14
 10548  002894  0E05               	movlw	low (_Channels+5)
 10549  002896  24F3               	addwf	prodl,w,c
 10550  002898  6ED9               	movwf	fsr2l,c
 10551  00289A  0E04               	movlw	high (_Channels+5)
 10552  00289C  20F4               	addwfc	prodh,w,c
 10553  00289E  6EDA               	movwf	fsr2h,c
 10554  0028A0  50DF               	movf	223,w,c
 10555  0028A2  0B0F               	andlw	15
 10556  0028A4  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10557  0028A6  51A7               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10558  0028A8  0102               	movlb	2	; () banked
 10559  0028AA  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10560  0028AC  E321               	bnc	l14850
 10561                           
 10562                           ; BSR set to: 2
 10563  0028AE  0100               	movlb	0	; () banked
 10564  0028B0  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10565  0028B2  0D0E               	mullw	14
 10566  0028B4  0E05               	movlw	low (_Channels+5)
 10567  0028B6  24F3               	addwf	prodl,w,c
 10568  0028B8  6ED9               	movwf	fsr2l,c
 10569  0028BA  0E04               	movlw	high (_Channels+5)
 10570  0028BC  20F4               	addwfc	prodh,w,c
 10571  0028BE  6EDA               	movwf	fsr2h,c
 10572  0028C0  38DF               	swapf	223,w,c
 10573  0028C2  0B0F               	andlw	15
 10574  0028C4  6FA7               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10575  0028C6  0102               	movlb	2	; () banked
 10576  0028C8  51DF               	movf	(_loRa+223)& (0+255),w,b
 10577  0028CA  0100               	movlb	0	; () banked
 10578  0028CC  5DA7               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10579  0028CE  E310               	bnc	l14850
 10580                           
 10581                           ; BSR set to: 0
 10582                           ;lorawan_eu.c: 540: {
 10583                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10584  0028D0  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10585  0028D2  0D0E               	mullw	14
 10586  0028D4  0E08               	movlw	low (_Channels+8)
 10587  0028D6  24F3               	addwf	prodl,w,c
 10588  0028D8  6ED9               	movwf	fsr2l,c
 10589  0028DA  0E04               	movlw	high (_Channels+8)
 10590  0028DC  20F4               	addwfc	prodh,w,c
 10591  0028DE  6EDA               	movwf	fsr2h,c
 10592  0028E0  CFDE F0AB          	movff	postinc2,LORAWAN_RxTimeout@minim
 10593  0028E4  CFDE F0AC          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10594  0028E8  CFDE F0AD          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10595  0028EC  CFDE F0AE          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10596  0028F0                     l14850:
 10597  0028F0  0100               	movlb	0	; () banked
 10598  0028F2  2BAF               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10599  0028F4                     l14852:
 10600                           
 10601                           ; BSR set to: 0
 10602  0028F4  51AF               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10603  0028F6  0102               	movlb	2	; () banked
 10604  0028F8  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10605  0028FA  E2A1               	bc	l14838
 10606                           
 10607                           ; BSR set to: 2
 10608                           ;lorawan_eu.c: 542: }
 10609                           ;lorawan_eu.c: 543: }
 10610                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10611  0028FC  C0AB  F0A7         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10612  002900  C0AC  F0A8         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10613  002904  C0AD  F0A9         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10614  002908  C0AE  F0AA         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10615  00290C  0E0C               	movlw	12
 10616  00290E                     u17065:
 10617  00290E  90D8               	bcf	status,0,c
 10618  002910  0100               	movlb	0	; () banked
 10619  002912  37A7               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10620  002914  37A8               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10621  002916  37A9               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10622  002918  37AA               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10623  00291A  2EE8               	decfsz	wreg,f,c
 10624  00291C  D7F8               	goto	u17065
 10625  00291E  0E00               	movlw	0
 10626  002920  25A7               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10627  002922  6F64               	movwf	___lldiv@dividend& (0+255),b
 10628  002924  0E20               	movlw	32
 10629  002926  21A8               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10630  002928  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10631  00292A  0E03               	movlw	3
 10632  00292C  21A9               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10633  00292E  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10634  002930  0E00               	movlw	0
 10635  002932  21AA               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10636  002934  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10637  002936  0E7D               	movlw	125
 10638  002938  6F68               	movwf	___lldiv@divisor& (0+255),b
 10639  00293A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 10640  00293C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 10641  00293E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 10642  002940  EC1B  F031         	call	___lldiv	;wreg free
 10643  002944  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10644  002948  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10645  00294C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10646  002950  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10647  002954  0102               	movlb	2	; () banked
 10648  002956  51EA               	movf	(_loRa+234)& (0+255),w,b
 10649  002958  EC5E  F037         	call	_SwTimerSetTimeout
 10650                           
 10651                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10652  00295C  0102               	movlb	2	; () banked
 10653  00295E  51EA               	movf	(_loRa+234)& (0+255),w,b
 10654  002960  EF59  F02F         	goto	_SwTimerStart
 10655  002964                     l14856:
 10656                           
 10657                           ; BSR set to: 2
 10658                           ;lorawan_eu.c: 548: else
 10659                           ;lorawan_eu.c: 549: {
 10660                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 10661  002964  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10662                           
 10663                           ; BSR set to: 2
 10664                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 10665  002968  0101               	movlb	1	; () banked
 10666  00296A  5172               	movf	_rxPayload& (0+255),w,b
 10667  00296C  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10668  00296E  B4D8               	btfsc	status,2,c
 10669  002970  0012               	return	
 10670                           
 10671                           ; BSR set to: 1
 10672                           ;lorawan_eu.c: 552: {
 10673                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 10674  002972  0100               	movlb	0	; () banked
 10675  002974  6B64               	clrf	RxDataDone@pData& (0+255),b
 10676  002976  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10677  002978  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10678  00297A  0E01               	movlw	1
 10679  00297C  6F67               	movwf	RxDataDone@status& (0+255),b
 10680  00297E  0005               	push	
 10681  002980  6EFA               	movwf	pclath,c
 10682  002982  0101               	movlb	1	; () banked
 10683  002984  5172               	movf	_rxPayload& (0+255),w,b
 10684  002986  6EFD               	movwf	tosl,c
 10685  002988  5173               	movf	(_rxPayload+1)& (0+255),w,b
 10686  00298A  6EFE               	movwf	tosh,c
 10687  00298C  6AFF               	clrf	tosu,c
 10688  00298E  50FA               	movf	pclath,w,c
 10689  002990  0012               	return		;indir
 10690  002992                     l14862:
 10691                           
 10692                           ; BSR set to: 2
 10693                           ;lorawan_eu.c: 560: else
 10694                           ;lorawan_eu.c: 561: {
 10695                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 10696  002992  0101               	movlb	1	; () banked
 10697  002994  5172               	movf	_rxPayload& (0+255),w,b
 10698  002996  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 10699  002998  B4D8               	btfsc	status,2,c
 10700  00299A  0012               	return	
 10701                           
 10702                           ; BSR set to: 1
 10703                           ;lorawan_eu.c: 564: {
 10704                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 10705  00299C  0100               	movlb	0	; () banked
 10706  00299E  6B64               	clrf	RxDataDone@pData& (0+255),b
 10707  0029A0  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 10708  0029A2  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 10709  0029A4  0E02               	movlw	2
 10710  0029A6  6F67               	movwf	RxDataDone@status& (0+255),b
 10711  0029A8  0005               	push	
 10712  0029AA  6EFA               	movwf	pclath,c
 10713  0029AC  0101               	movlb	1	; () banked
 10714  0029AE  5172               	movf	_rxPayload& (0+255),w,b
 10715  0029B0  6EFD               	movwf	tosl,c
 10716  0029B2  5173               	movf	(_rxPayload+1)& (0+255),w,b
 10717  0029B4  6EFE               	movwf	tosh,c
 10718  0029B6  6AFF               	clrf	tosu,c
 10719  0029B8  50FA               	movf	pclath,w,c
 10720  0029BA  0012               	return		;indir
 10721  0029BC                     __end_of_LORAWAN_RxTimeout:
 10722                           	opt stack 0
 10723                           tosu	equ	0xFFF
 10724                           tosh	equ	0xFFE
 10725                           tosl	equ	0xFFD
 10726                           pclath	equ	0xFFA
 10727                           tblptru	equ	0xFF8
 10728                           tblptrh	equ	0xFF7
 10729                           tblptrl	equ	0xFF6
 10730                           tablat	equ	0xFF5
 10731                           prodh	equ	0xFF4
 10732                           prodl	equ	0xFF3
 10733                           intcon	equ	0xFF2
 10734                           intcon2	equ	0xFF1
 10735                           intcon3	equ	0xFF0
 10736                           postinc0	equ	0xFEE
 10737                           wreg	equ	0xFE8
 10738                           postinc1	equ	0xFE6
 10739                           postdec1	equ	0xFE5
 10740                           plusw1	equ	0xFE3
 10741                           fsr1h	equ	0xFE2
 10742                           fsr1l	equ	0xFE1
 10743                           indf2	equ	0xFDF
 10744                           postinc2	equ	0xFDE
 10745                           postdec2	equ	0xFDD
 10746                           fsr2h	equ	0xFDA
 10747                           fsr2l	equ	0xFD9
 10748                           status	equ	0xFD8
 10749                           
 10750 ;; *************** function _LORAWAN_RxDone *****************
 10751 ;; Defined at:
 10752 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 10753 ;; Parameters:    Size  Location     Type
 10754 ;;  buffer          2  111[BANK1 ] PTR unsigned char 
 10755 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10756 ;;  bufferLength    1  113[BANK1 ] unsigned char 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  hdr             2   18[BANK3 ] PTR struct .
 10759 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10760 ;;  joinAccept      2   15[BANK3 ] PTR struct .
 10761 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 10762 ;;  computedMic     4   11[BANK3 ] unsigned long 
 10763 ;;  extractedMic    4    3[BANK3 ] unsigned long 
 10764 ;;  packet          2    9[BANK3 ] PTR unsigned char 
 10765 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 10766 ;;  frmPayloadLe    1   17[BANK3 ] unsigned char 
 10767 ;;  temp            1    8[BANK3 ] unsigned char 
 10768 ;;  bufferIndex     1    7[BANK3 ] unsigned char 
 10769 ;;  mhdr            1    2[BANK3 ] struct .
 10770 ;;  channelIndex    1    1[BANK3 ] unsigned char 
 10771 ;;  fPort           1    0[BANK3 ] unsigned char 
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      enum E8200
 10774 ;; Registers used:
 10775 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10776 ;; Tracked objects:
 10777 ;;		On entry : F/1
 10778 ;;		On exit  : C/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10781 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10782 ;;      Locals:         0       0       0       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10783 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10784 ;;      Totals:         0       5       3       0      20       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10785 ;;Total ram usage:       28 bytes
 10786 ;; Hardware stack levels used:    1
 10787 ;; Hardware stack levels required when called:   15
 10788 ;; This function calls:
 10789 ;;		_AESCmac
 10790 ;;		_AESEncodeLoRa
 10791 ;;		_AssembleEncryptionBlock
 10792 ;;		_CheckFlags
 10793 ;;		_CheckMcastFlags
 10794 ;;		_ComputeMic
 10795 ;;		_ComputeSessionKeys
 10796 ;;		_EncryptFRMPayload
 10797 ;;		_ExtractMic
 10798 ;;		_LORAWAN_EnterContinuousReceive
 10799 ;;		_LORAWAN_Send
 10800 ;;		_MacExecuteCommands
 10801 ;;		_RADIO_GetStatus
 10802 ;;		_RADIO_ReleaseData
 10803 ;;		_RxDataDone
 10804 ;;		_SearchAvailableChannel
 10805 ;;		_SetJoinFailState
 10806 ;;		_SetReceptionNotOkState
 10807 ;;		_StartReTxTimer
 10808 ;;		_SwTimerStop
 10809 ;;		_UpdateCfList
 10810 ;;		_UpdateDLSettings
 10811 ;;		_UpdateJoinSuccessState
 10812 ;;		_UpdateReceiveDelays
 10813 ;;		_UpdateRetransmissionAckTimeoutState
 10814 ;;		_memcpy
 10815 ;; This function is called by:
 10816 ;;		_RADIO_RxDone
 10817 ;;		_RADIO_FSKPayloadReady
 10818 ;; This function uses a non-reentrant model
 10819 ;;
 10820                           
 10821                           	psect	text61
 10822  000088                     __ptext61:
 10823                           	opt stack 0
 10824  000088                     _LORAWAN_RxDone:
 10825                           	opt stack 12
 10826                           
 10827                           ; BSR set to: 1
 10828                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 10829                           ;lorawan.c: 1124: Mhdr_t mhdr;
 10830                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 10831                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 10832                           ;lorawan.c: 1127: uint8_t *packet;
 10833                           ;lorawan.c: 1128: uint8_t temp;
 10834                           ;lorawan.c: 1130: RADIO_ReleaseData();
 10835                           
 10836                           ;incstack = 0
 10837  000088  EC4B  F03D         	call	_RADIO_ReleaseData	;wreg free
 10838                           
 10839                           ; BSR set to: 1
 10840                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 10841  00008C  0102               	movlb	2	; () banked
 10842  00008E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10843  000090  EF5D  F005         	goto	l14780
 10844                           
 10845                           ; BSR set to: 2
 10846                           ;lorawan.c: 1133: {
 10847                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 10848  000094  C16F  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 10849  000098  C170  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 10850  00009C  50DF               	movf	indf2,w,c
 10851  00009E  0103               	movlb	3	; () banked
 10852  0000A0  6FA2               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 10853                           
 10854                           ; BSR set to: 3
 10855                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 10856  0000A2  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 10857  0000A4  32E8               	rrcf	wreg,f,c
 10858  0000A6  0B07               	andlw	7
 10859  0000A8  06E8               	decf	wreg,f,c
 10860  0000AA  E001 D0C5          	bnz	l14452
 10861                           
 10862                           ; BSR set to: 3
 10863  0000AE  0102               	movlb	2	; () banked
 10864  0000B0  511D               	movf	(_loRa+29)& (0+255),w,b
 10865  0000B2  E001 D0C1          	bnz	l14452
 10866                           
 10867                           ; BSR set to: 2
 10868                           ;lorawan.c: 1136: {
 10869                           ;lorawan.c: 1137: temp = bufferLength - 1;
 10870  0000B6  0101               	movlb	1	; () banked
 10871  0000B8  0571               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10872  0000BA  0103               	movlb	3	; () banked
 10873  0000BC  6FA8               	movwf	LORAWAN_RxDone@temp& (0+255),b
 10874                           
 10875                           ;lorawan.c: 1138: while (temp > 0)
 10876  0000BE  D020               	goto	l14408
 10877  0000C0                     l14402:
 10878                           
 10879                           ; BSR set to: 3
 10880                           ;lorawan.c: 1139: {
 10881                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 10882  0000C0  0101               	movlb	1	; () banked
 10883  0000C2  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10884  0000C4  256F               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 10885  0000C6  0100               	movlb	0	; () banked
 10886  0000C8  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 10887  0000CA  0E00               	movlw	0
 10888  0000CC  0101               	movlb	1	; () banked
 10889  0000CE  2170               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 10890  0000D0  0100               	movlb	0	; () banked
 10891  0000D2  6FE5               	movwf	(??_LORAWAN_RxDone+1)& (0+255),b
 10892  0000D4  0103               	movlb	3	; () banked
 10893  0000D6  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10894  0000D8  0100               	movlb	0	; () banked
 10895  0000DA  5DE4               	subwf	??_LORAWAN_RxDone& (0+255),w,b
 10896  0000DC  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 10897  0000DE  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10898  0000E0  A0D8               	btfss	status,0,c
 10899  0000E2  05E5               	decf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 10900  0000E4  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 10901  0000E6  0E42               	movlw	low (_loRa+66)
 10902  0000E8  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 10903  0000EA  0E02               	movlw	high (_loRa+66)
 10904  0000EC  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 10905  0000EE  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 10906                           
 10907                           ; BSR set to: 0
 10908                           ;lorawan.c: 1142: if (temp > 16)
 10909  0000F2  0E10               	movlw	16
 10910  0000F4  0103               	movlb	3	; () banked
 10911  0000F6  65A8               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 10912  0000F8  D002               	goto	l2076
 10913                           
 10914                           ; BSR set to: 3
 10915                           ;lorawan.c: 1143: {
 10916                           ;lorawan.c: 1144: temp -= 16;
 10917  0000FA  5FA8               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 10918                           
 10919                           ;lorawan.c: 1145: }
 10920  0000FC  D001               	goto	l14408
 10921  0000FE                     l2076:
 10922                           
 10923                           ; BSR set to: 3
 10924                           ;lorawan.c: 1146: else
 10925                           ;lorawan.c: 1147: {
 10926                           ;lorawan.c: 1148: temp = 0;
 10927  0000FE  6BA8               	clrf	LORAWAN_RxDone@temp& (0+255),b
 10928  000100                     l14408:
 10929                           
 10930                           ; BSR set to: 3
 10931  000100  51A8               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 10932  000102  E1DE               	bnz	l14402
 10933                           
 10934                           ; BSR set to: 3
 10935                           ;lorawan.c: 1149: }
 10936                           ;lorawan.c: 1150: }
 10937                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 10938  000104  0E42               	movlw	low (_loRa+66)
 10939  000106  0101               	movlb	1	; () banked
 10940  000108  6F66               	movwf	ComputeMic@key& (0+255),b
 10941  00010A  0E02               	movlw	high (_loRa+66)
 10942  00010C  6F67               	movwf	(ComputeMic@key+1)& (0+255),b
 10943  00010E  C16F  F168         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 10944  000112  C170  F169         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 10945  000116  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 10946  000118  0FFC               	addlw	252
 10947  00011A  6F6A               	movwf	ComputeMic@bufferLength& (0+255),b
 10948  00011C  EC01  F035         	call	_ComputeMic	;wreg free
 10949  000120  C166  F3AB         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 10950  000124  C167  F3AC         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 10951  000128  C168  F3AD         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 10952  00012C  C169  F3AE         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 10956  000130  C16F  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 10957  000134  C170  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 10958  000138  C171  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 10959  00013C  EC3D  F037         	call	_ExtractMic	;wreg free
 10960  000140  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 10961  000144  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 10962  000148  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 10963  00014C  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 10964                           
 10965                           ; BSR set to: 0
 10966                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 10967  000150  0103               	movlb	3	; () banked
 10968  000152  51AB               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 10969  000154  19A3               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 10970  000156  E109               	bnz	u16190
 10971  000158  51AC               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 10972  00015A  19A4               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 10973  00015C  E106               	bnz	u16190
 10974  00015E  51AD               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 10975  000160  19A5               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 10976  000162  E103               	bnz	u16190
 10977  000164  51AE               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 10978  000166  19A6               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 10979  000168  E011               	bz	l14426
 10980  00016A                     u16190:
 10981                           
 10982                           ; BSR set to: 3
 10983                           ;lorawan.c: 1156: {
 10984                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 10985  00016A  0102               	movlb	2	; () banked
 10986  00016C  5102               	movf	(_loRa+2)& (0+255),w,b
 10987  00016E  0B0F               	andlw	15
 10988  000170  0A05               	xorlw	5
 10989  000172  E102 EF78  F03A    	bz	_SetJoinFailState
 10990                           
 10991                           ; BSR set to: 2
 10992  000178  5102               	movf	(_loRa+2)& (0+255),w,b
 10993  00017A  0B0F               	andlw	15
 10994  00017C  0A03               	xorlw	3
 10995  00017E  A4D8               	btfss	status,2,c
 10996  000180  0012               	return	
 10997                           
 10998                           ; BSR set to: 2
 10999  000182  51F1               	movf	(_loRa+241)& (0+255),w,b
 11000  000184  B4D8               	btfsc	status,2,c
 11001  000186  0012               	return	
 11002                           
 11003                           ; BSR set to: 2
 11004                           ;lorawan.c: 1158: {
 11005                           ;lorawan.c: 1159: SetJoinFailState();
 11006  000188  EF78  F03A         	goto	_SetJoinFailState	;wreg free
 11007  00018C                     l14426:
 11008                           
 11009                           ; BSR set to: 3
 11010                           ;lorawan.c: 1163: }
 11011                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 11012  00018C  0102               	movlb	2	; () banked
 11013  00018E  5102               	movf	(_loRa+2)& (0+255),w,b
 11014  000190  0B0F               	andlw	15
 11015  000192  0A03               	xorlw	3
 11016  000194  E103               	bnz	l14430
 11017                           
 11018                           ; BSR set to: 2
 11019                           ;lorawan.c: 1167: {
 11020                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 11021  000196  51E3               	movf	(_loRa+227)& (0+255),w,b
 11022  000198  EC6A  F03B         	call	_SwTimerStop
 11023  00019C                     l14430:
 11024                           
 11025                           ;lorawan.c: 1169: }
 11026                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 11027                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 11028  00019C  C16F  F3AF         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 11029  0001A0  C170  F3B0         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 11030                           
 11031                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 11032  0001A4  0103               	movlb	3	; () banked
 11033  0001A6  EE20 F007          	lfsr	2,7
 11034  0001AA  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11035  0001AC  26D9               	addwf	fsr2l,f,c
 11036  0001AE  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11037  0001B0  22DA               	addwfc	fsr2h,f,c
 11038  0001B2  CFDE F21E          	movff	postinc2,_loRa+30
 11039  0001B6  CFDE F21F          	movff	postinc2,_loRa+31
 11040  0001BA  CFDE F220          	movff	postinc2,_loRa+32
 11041  0001BE  CFDE F221          	movff	postinc2,_loRa+33
 11042                           
 11043                           ; BSR set to: 3
 11044                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 11045  0001C2  EE20 F00C          	lfsr	2,12
 11046  0001C6  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11047  0001C8  26D9               	addwf	fsr2l,f,c
 11048  0001CA  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11049  0001CC  22DA               	addwfc	fsr2h,f,c
 11050  0001CE  50DF               	movf	indf2,w,c
 11051  0001D0  0B0F               	andlw	15
 11052  0001D2  EC8A  F036         	call	_UpdateReceiveDelays
 11053                           
 11054                           ; BSR set to: 2
 11055                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 11056  0001D6  0103               	movlb	3	; () banked
 11057  0001D8  EE20 F00B          	lfsr	2,11
 11058  0001DC  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11059  0001DE  26D9               	addwf	fsr2l,f,c
 11060  0001E0  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11061  0001E2  22DA               	addwfc	fsr2h,f,c
 11062  0001E4  38DF               	swapf	223,w,c
 11063  0001E6  0B07               	andlw	7
 11064  0001E8  0100               	movlb	0	; () banked
 11065  0001EA  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 11066  0001EC  0103               	movlb	3	; () banked
 11067  0001EE  EE20 F00B          	lfsr	2,11
 11068  0001F2  51AF               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11069  0001F4  26D9               	addwf	fsr2l,f,c
 11070  0001F6  51B0               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11071  0001F8  22DA               	addwfc	fsr2h,f,c
 11072  0001FA  50DF               	movf	223,w,c
 11073  0001FC  0B0F               	andlw	15
 11074  0001FE  ECDA  F03B         	call	_UpdateDLSettings
 11075                           
 11076                           ; BSR set to: 0
 11077                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 11078  000202  C3AF  F070         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 11079  000206  C3B0  F071         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 11080  00020A  0101               	movlb	1	; () banked
 11081  00020C  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11082  00020E  ECF7  F018         	call	_UpdateCfList
 11083                           
 11084                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 11085  000212  C3AF  F0A4         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 11086  000216  C3B0  F0A5         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 11087  00021A  EC21  F030         	call	_ComputeSessionKeys	;wreg free
 11088                           
 11089                           ; BSR set to: 0
 11090                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 11091  00021E  6AE6               	clrf	postinc1,c
 11092  000220  ECE6  F023         	call	_UpdateJoinSuccessState	;wreg free
 11093                           
 11094                           ; BSR set to: 1
 11095                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 11096  000224  0102               	movlb	2	; () banked
 11097  000226  6B06               	clrf	(_loRa+6)& (0+255),b
 11098  000228  6B07               	clrf	(_loRa+7)& (0+255),b
 11099  00022A  6B08               	clrf	(_loRa+8)& (0+255),b
 11100  00022C  6B09               	clrf	(_loRa+9)& (0+255),b
 11101                           
 11102                           ; BSR set to: 2
 11103                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 11104  00022E  6B0A               	clrf	(_loRa+10)& (0+255),b
 11105  000230  6B0B               	clrf	(_loRa+11)& (0+255),b
 11106  000232  6B0C               	clrf	(_loRa+12)& (0+255),b
 11107  000234  6B0D               	clrf	(_loRa+13)& (0+255),b
 11108  000236  0012               	return	
 11109  000238                     l14452:
 11110                           
 11111                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 11112  000238  0103               	movlb	3	; () banked
 11113  00023A  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11114  00023C  32E8               	rrcf	wreg,f,c
 11115  00023E  0B07               	andlw	7
 11116  000240  0A03               	xorlw	3
 11117  000242  E007               	bz	l2088
 11118                           
 11119                           ; BSR set to: 3
 11120  000244  39A2               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11121  000246  32E8               	rrcf	wreg,f,c
 11122  000248  0B07               	andlw	7
 11123  00024A  0A05               	xorlw	5
 11124  00024C  E002 EF2E  F032    	bnz	_SetReceptionNotOkState
 11125  000252                     l2088:
 11126                           
 11127                           ; BSR set to: 3
 11128                           ;lorawan.c: 1192: {
 11129                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 11130  000252  0102               	movlb	2	; () banked
 11131  000254  6BA7               	clrf	(_loRa+167)& (0+255),b
 11132                           
 11133                           ; BSR set to: 2
 11134                           ;lorawan.c: 1195: Hdr_t *hdr;
 11135                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 11136  000256  C16F  F3B2         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 11137  00025A  C170  F3B3         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 11138                           
 11139                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 11140  00025E  0E02               	movlw	2
 11141  000260  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11142  000262  E001 D18B          	bnz	l14570
 11143                           
 11144                           ; BSR set to: 2
 11145  000266  0103               	movlb	3	; () banked
 11146  000268  EE20 F001          	lfsr	2,1
 11147  00026C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11148  00026E  26D9               	addwf	fsr2l,f,c
 11149  000270  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11150  000272  22DA               	addwfc	fsr2h,f,c
 11151  000274  0102               	movlb	2	; () banked
 11152  000276  5162               	movf	(_loRa+98)& (0+255),w,b
 11153  000278  18DE               	xorwf	postinc2,w,c
 11154  00027A  E109               	bnz	u16271
 11155  00027C  5163               	movf	(_loRa+99)& (0+255),w,b
 11156  00027E  18DE               	xorwf	postinc2,w,c
 11157  000280  E106               	bnz	u16271
 11158  000282  5164               	movf	(_loRa+100)& (0+255),w,b
 11159  000284  18DE               	xorwf	postinc2,w,c
 11160  000286  E103               	bnz	u16271
 11161  000288  5165               	movf	(_loRa+101)& (0+255),w,b
 11162  00028A  18DE               	xorwf	postinc2,w,c
 11163  00028C  A4D8               	btfss	status,2,c
 11164  00028E                     u16271:
 11165  00028E  D176               	goto	l14570
 11166                           
 11167                           ; BSR set to: 2
 11168  000290  A504               	btfss	(_loRa+4)& (0+255),2,b
 11169  000292  D174               	goto	l14570
 11170                           
 11171                           ; BSR set to: 2
 11172                           ;lorawan.c: 1200: {
 11173                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 11174  000294  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 11175  000298  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 11176  00029C  EC56  F031         	call	_CheckMcastFlags	;wreg free
 11177  0002A0  0900               	iorlw	0
 11178  0002A2  E107               	bnz	l14470
 11179  0002A4                     l14464:
 11180                           
 11181                           ;lorawan.c: 1203: {
 11182                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11183  0002A4  0102               	movlb	2	; () banked
 11184  0002A6  5102               	movf	(_loRa+2)& (0+255),w,b
 11185  0002A8  0BF0               	andlw	-16
 11186  0002AA  0909               	iorlw	9
 11187  0002AC  6F02               	movwf	(_loRa+2)& (0+255),b
 11188                           
 11189                           ; BSR set to: 2
 11190                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 11191  0002AE  EF62  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 11192  0002B2                     l14470:
 11193                           
 11194                           ;lorawan.c: 1207: }
 11195                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 11196  0002B2  0103               	movlb	3	; () banked
 11197  0002B4  EE20 F006          	lfsr	2,6
 11198  0002B8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11199  0002BA  26D9               	addwf	fsr2l,f,c
 11200  0002BC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11201  0002BE  22DA               	addwfc	fsr2h,f,c
 11202  0002C0  CFDE F0E4          	movff	postinc2,??_LORAWAN_RxDone
 11203  0002C4  CFDD F0E5          	movff	postdec2,??_LORAWAN_RxDone+1
 11204  0002C8  C0E4  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11205  0002CC  C0E5  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11206  0002D0  0100               	movlb	0	; () banked
 11207  0002D2  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11208  0002D4  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11209  0002D6  0101               	movlb	1	; () banked
 11210  0002D8  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11211  0002DA  0FFC               	addlw	252
 11212  0002DC  0100               	movlb	0	; () banked
 11213  0002DE  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11214  0002E0  0E49               	movlw	73
 11215  0002E2  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11216  0002E4  0E01               	movlw	1
 11217  0002E6  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11218  0002E8  EC82  F02D         	call	_AssembleEncryptionBlock
 11219                           
 11220                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11221  0002EC  0EEF               	movlw	low _radioBuffer
 11222  0002EE  6F64               	movwf	memcpy@d1& (0+255),b
 11223  0002F0  0E05               	movlw	high _radioBuffer
 11224  0002F2  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11225  0002F4  0EAF               	movlw	low _aesBuffer
 11226  0002F6  6F66               	movwf	memcpy@s1& (0+255),b
 11227  0002F8  0E01               	movlw	high _aesBuffer
 11228  0002FA  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11229  0002FC  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11230  0002FE  0E10               	movlw	16
 11231  000300  6F68               	movwf	memcpy@n& (0+255),b
 11232  000302  ECD5  F034         	call	_memcpy	;wreg free
 11233                           
 11234                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11235  000306  0EFF               	movlw	low (_radioBuffer+16)
 11236  000308  6F64               	movwf	memcpy@d1& (0+255),b
 11237  00030A  0E05               	movlw	high (_radioBuffer+16)
 11238  00030C  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11239  00030E  C16F  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11240  000312  C170  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11241  000316  0EFC               	movlw	252
 11242  000318  0101               	movlb	1	; () banked
 11243  00031A  2571               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11244  00031C  0100               	movlb	0	; () banked
 11245  00031E  6F68               	movwf	memcpy@n& (0+255),b
 11246  000320  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11247  000322  0EFF               	movlw	255
 11248  000324  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11249  000326  ECD5  F034         	call	_memcpy	;wreg free
 11250                           
 11251                           ; BSR set to: 0
 11252                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11253  00032A  0E66               	movlw	low (_loRa+102)
 11254  00032C  6FCC               	movwf	AESCmac@key& (0+255),b
 11255  00032E  0E02               	movlw	high (_loRa+102)
 11256  000330  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 11257  000332  0EAF               	movlw	low _aesBuffer
 11258  000334  6FCE               	movwf	AESCmac@output& (0+255),b
 11259  000336  0E01               	movlw	high _aesBuffer
 11260  000338  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 11261  00033A  0EEF               	movlw	low _radioBuffer
 11262  00033C  6FD0               	movwf	AESCmac@input& (0+255),b
 11263  00033E  0E05               	movlw	high _radioBuffer
 11264  000340  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 11265  000342  0101               	movlb	1	; () banked
 11266  000344  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11267  000346  0F0C               	addlw	12
 11268  000348  0100               	movlb	0	; () banked
 11269  00034A  6FD2               	movwf	AESCmac@size& (0+255),b
 11270  00034C  EC10  F00C         	call	_AESCmac	;wreg free
 11271                           
 11272                           ; BSR set to: 0
 11273                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11274  000350  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11275  000352  6F64               	movwf	memcpy@d1& (0+255),b
 11276  000354  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11277  000356  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11278  000358  0EAF               	movlw	low _aesBuffer
 11279  00035A  6F66               	movwf	memcpy@s1& (0+255),b
 11280  00035C  0E01               	movlw	high _aesBuffer
 11281  00035E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11282  000360  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11283  000362  0E04               	movlw	4
 11284  000364  6F68               	movwf	memcpy@n& (0+255),b
 11285  000366  ECD5  F034         	call	_memcpy	;wreg free
 11286                           
 11287                           ; BSR set to: 0
 11288                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11289  00036A  C16F  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11290  00036E  C170  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11291  000372  C171  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11292  000376  EC3D  F037         	call	_ExtractMic	;wreg free
 11293  00037A  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11294  00037E  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11295  000382  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11296  000386  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11297                           
 11298                           ; BSR set to: 0
 11299                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 11300  00038A  0103               	movlb	3	; () banked
 11301  00038C  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11302  00038E  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11303  000390  E189               	bnz	l14464
 11304  000392  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11305  000394  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11306  000396  E186               	bnz	l14464
 11307  000398  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11308  00039A  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11309  00039C  E183               	bnz	l14464
 11310  00039E  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11311  0003A0  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11312  0003A2  E180               	bnz	l14464
 11313                           
 11314                           ; BSR set to: 3
 11315                           ;lorawan.c: 1222: }
 11316                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 11317  0003A4  EE20 F006          	lfsr	2,6
 11318  0003A8  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11319  0003AA  26D9               	addwf	fsr2l,f,c
 11320  0003AC  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11321  0003AE  22DA               	addwfc	fsr2h,f,c
 11322  0003B0  0102               	movlb	2	; () banked
 11323  0003B2  510E               	movf	(_loRa+14)& (0+255),w,b
 11324  0003B4  5CDE               	subwf	postinc2,w,c
 11325  0003B6  510F               	movf	(_loRa+15)& (0+255),w,b
 11326  0003B8  58DE               	subwfb	postinc2,w,c
 11327  0003BA  E335               	bnc	l14504
 11328                           
 11329                           ; BSR set to: 2
 11330                           ;lorawan.c: 1225: {
 11331                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 11332  0003BC  0103               	movlb	3	; () banked
 11333  0003BE  EE20 F006          	lfsr	2,6
 11334  0003C2  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11335  0003C4  26D9               	addwf	fsr2l,f,c
 11336  0003C6  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11337  0003C8  22DA               	addwfc	fsr2h,f,c
 11338  0003CA  CFDE F0E4          	movff	postinc2,??_LORAWAN_RxDone
 11339  0003CE  CFDD F0E5          	movff	postdec2,??_LORAWAN_RxDone+1
 11340  0003D2  0102               	movlb	2	; () banked
 11341  0003D4  510E               	movf	(_loRa+14)& (0+255),w,b
 11342  0003D6  0100               	movlb	0	; () banked
 11343  0003D8  5FE4               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11344  0003DA  0102               	movlb	2	; () banked
 11345  0003DC  510F               	movf	(_loRa+15)& (0+255),w,b
 11346  0003DE  0100               	movlb	0	; () banked
 11347  0003E0  5BE5               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11348  0003E2  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11349  0003E4  0102               	movlb	2	; () banked
 11350  0003E6  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 11351  0003E8  0100               	movlb	0	; () banked
 11352  0003EA  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11353  0003EC  0102               	movlb	2	; () banked
 11354  0003EE  599F               	subwfb	(_loRa+159)& (0+255),w,b
 11355  0003F0  E20E               	bc	l14502
 11356  0003F2                     l14490:
 11357                           
 11358                           ; BSR set to: 2
 11359                           ;lorawan.c: 1227: {
 11360                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 11361  0003F2  0101               	movlb	1	; () banked
 11362  0003F4  5172               	movf	_rxPayload& (0+255),w,b
 11363  0003F6  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11364  0003F8  E101 D754          	bz	l14464
 11365                           
 11366                           ; BSR set to: 1
 11367                           ;lorawan.c: 1229: {
 11368                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11369  0003FC  0100               	movlb	0	; () banked
 11370  0003FE  6B64               	clrf	RxDataDone@pData& (0+255),b
 11371  000400  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11372  000402  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11373  000404  0E05               	movlw	5
 11374  000406  6F67               	movwf	RxDataDone@status& (0+255),b
 11375  000408  D801               	call	u16348
 11376  00040A  D74C               	goto	l14464
 11377  00040C                     u16348:
 11378  00040C  D0AD               	goto	u16448
 11379  00040E                     l14502:
 11380                           
 11381                           ; BSR set to: 2
 11382                           ;lorawan.c: 1237: else
 11383                           ;lorawan.c: 1238: {
 11384                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11385  00040E  0103               	movlb	3	; () banked
 11386  000410  EE20 F006          	lfsr	2,6
 11387  000414  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11388  000416  26D9               	addwf	fsr2l,f,c
 11389  000418  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11390  00041A  22DA               	addwfc	fsr2h,f,c
 11391  00041C  CFDE F20E          	movff	postinc2,_loRa+14
 11392  000420  CFDD F20F          	movff	postdec2,_loRa+15
 11393  000424  D013               	goto	l14522
 11394  000426                     l14504:
 11395                           
 11396                           ; BSR set to: 2
 11397                           ;lorawan.c: 1242: else
 11398                           ;lorawan.c: 1243: {
 11399                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11400  000426  0103               	movlb	3	; () banked
 11401  000428  EE20 F006          	lfsr	2,6
 11402  00042C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11403  00042E  26D9               	addwf	fsr2l,f,c
 11404  000430  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11405  000432  22DA               	addwfc	fsr2h,f,c
 11406  000434  50DE               	movf	postinc2,w,c
 11407  000436  10DE               	iorwf	postinc2,w,c
 11408  000438  E1DC               	bnz	l14490
 11409                           
 11410                           ; BSR set to: 3
 11411  00043A  0102               	movlb	2	; () banked
 11412  00043C  290E               	incf	(_loRa+14)& (0+255),w,b
 11413  00043E  E1D9               	bnz	l14490
 11414  000440  290F               	incf	(_loRa+15)& (0+255),w,b
 11415  000442  E1D7               	bnz	l14490
 11416                           
 11417                           ; BSR set to: 2
 11418                           ;lorawan.c: 1245: {
 11419                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11420  000444  6B0E               	clrf	(_loRa+14)& (0+255),b
 11421  000446  6B0F               	clrf	(_loRa+15)& (0+255),b
 11422                           
 11423                           ; BSR set to: 2
 11424                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11425  000448  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11426  00044A  2B11               	incf	(_loRa+17)& (0+255),f,b
 11427  00044C                     l14522:
 11428                           
 11429                           ;lorawan.c: 1259: }
 11430                           ;lorawan.c: 1260: }
 11431                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 11432  00044C  0102               	movlb	2	; () banked
 11433  00044E  290E               	incf	(_loRa+14)& (0+255),w,b
 11434  000450  E107               	bnz	l14534
 11435  000452  290F               	incf	(_loRa+15)& (0+255),w,b
 11436  000454  E105               	bnz	l14534
 11437  000456  2910               	incf	(_loRa+16)& (0+255),w,b
 11438  000458  E103               	bnz	l14534
 11439  00045A  2911               	incf	(_loRa+17)& (0+255),w,b
 11440  00045C  E101               	bnz	l14534
 11441  00045E  D7C9               	goto	l14490
 11442  000460                     l14534:
 11443                           
 11444                           ; BSR set to: 2
 11445                           ;lorawan.c: 1272: }
 11446                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 11447  000460  5102               	movf	(_loRa+2)& (0+255),w,b
 11448  000462  0B0F               	andlw	15
 11449  000464  0A08               	xorlw	8
 11450  000466  E108               	bnz	l14538
 11451                           
 11452                           ; BSR set to: 2
 11453                           ;lorawan.c: 1275: {
 11454                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 11455  000468  51E4               	movf	(_loRa+228)& (0+255),w,b
 11456  00046A  EC6A  F03B         	call	_SwTimerStop
 11457                           
 11458                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 11459  00046E  0102               	movlb	2	; () banked
 11460  000470  51E5               	movf	(_loRa+229)& (0+255),w,b
 11461  000472  EC6A  F03B         	call	_SwTimerStop
 11462                           
 11463                           ;lorawan.c: 1278: }
 11464  000476  D007               	goto	l14542
 11465  000478                     l14538:
 11466                           
 11467                           ; BSR set to: 2
 11468                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 11469  000478  5102               	movf	(_loRa+2)& (0+255),w,b
 11470  00047A  0B0F               	andlw	15
 11471  00047C  0A03               	xorlw	3
 11472  00047E  E103               	bnz	l14542
 11473                           
 11474                           ; BSR set to: 2
 11475                           ;lorawan.c: 1280: {
 11476                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 11477  000480  51E5               	movf	(_loRa+229)& (0+255),w,b
 11478  000482  EC6A  F03B         	call	_SwTimerStop
 11479  000486                     l14542:
 11480                           
 11481                           ;lorawan.c: 1282: }
 11482                           ;lorawan.c: 1284: buffer = buffer + 8;
 11483  000486  0E08               	movlw	8
 11484  000488  0101               	movlb	1	; () banked
 11485  00048A  276F               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 11486  00048C  0E00               	movlw	0
 11487  00048E  2370               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11488                           
 11489                           ; BSR set to: 1
 11490                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 11491  000490  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11492  000492  0100               	movlb	0	; () banked
 11493  000494  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 11494  000496  6BE5               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11495  000498  0103               	movlb	3	; () banked
 11496  00049A  EE20 F005          	lfsr	2,5
 11497  00049E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11498  0004A0  26D9               	addwf	fsr2l,f,c
 11499  0004A2  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11500  0004A4  22DA               	addwfc	fsr2h,f,c
 11501  0004A6  50DF               	movf	223,w,c
 11502  0004A8  0B0F               	andlw	15
 11503  0004AA  0100               	movlb	0	; () banked
 11504  0004AC  6FE6               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11505  0004AE  6BE7               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11506  0004B0  0E0C               	movlw	12
 11507  0004B2  27E6               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11508  0004B4  0E00               	movlw	0
 11509  0004B6  23E7               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11510  0004B8  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11511  0004BA  19E6               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11512  0004BC  E103               	bnz	u16420
 11513  0004BE  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11514  0004C0  19E7               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11515  0004C2  E03A               	bz	l2105
 11516  0004C4                     u16420:
 11517                           
 11518                           ; BSR set to: 0
 11519                           ;lorawan.c: 1287: {
 11520                           ;lorawan.c: 1288: fPort = *(buffer++);
 11521  0004C4  C16F  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11522  0004C8  C170  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11523  0004CC  50DF               	movf	indf2,w,c
 11524  0004CE  0103               	movlb	3	; () banked
 11525  0004D0  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 11526                           
 11527                           ; BSR set to: 3
 11528  0004D2  0101               	movlb	1	; () banked
 11529  0004D4  4B6F               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 11530  0004D6  2B70               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 11531                           
 11532                           ; BSR set to: 1
 11533                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 11534  0004D8  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11535  0004DA  0FF4               	addlw	244
 11536  0004DC  0103               	movlb	3	; () banked
 11537  0004DE  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11538                           
 11539                           ; BSR set to: 3
 11540                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 11541  0004E0  0E19               	movlw	25
 11542  0004E2  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 11543                           
 11544                           ; BSR set to: 3
 11545                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 11546  0004E4  C16F  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 11547  0004E8  C170  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 11548  0004EC  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 11549  0004EE  0100               	movlb	0	; () banked
 11550  0004F0  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 11551  0004F2  0E01               	movlw	1
 11552  0004F4  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 11553  0004F6  C20E  F0A8         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 11554  0004FA  C20F  F0A9         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 11555  0004FE  C210  F0AA         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 11556  000502  C211  F0AB         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 11557  000506  0E76               	movlw	low (_loRa+118)
 11558  000508  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 11559  00050A  0E02               	movlw	high (_loRa+118)
 11560  00050C  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 11561  00050E  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 11562  000512  0EEF               	movlw	low _radioBuffer
 11563  000514  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 11564  000516  0E05               	movlw	high _radioBuffer
 11565  000518  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 11566  00051A  0E01               	movlw	1
 11567  00051C  6FB1               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 11568  00051E  ECC8  F020         	call	_EncryptFRMPayload	;wreg free
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;lorawan.c: 1294: packet = buffer - 1;
 11572  000522  0EFF               	movlw	255
 11573  000524  0101               	movlb	1	; () banked
 11574  000526  256F               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11575  000528  0103               	movlb	3	; () banked
 11576  00052A  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 11577  00052C  0EFF               	movlw	255
 11578  00052E  0101               	movlb	1	; () banked
 11579  000530  2170               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11580  000532  0103               	movlb	3	; () banked
 11581  000534  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11582                           
 11583                           ;lorawan.c: 1295: }
 11584  000536  D004               	goto	l2106
 11585  000538                     l2105:
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;lorawan.c: 1296: else
 11589                           ;lorawan.c: 1297: {
 11590                           ;lorawan.c: 1298: frmPayloadLength = 0;
 11591  000538  0103               	movlb	3	; () banked
 11592  00053A  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 11593                           
 11594                           ;lorawan.c: 1299: packet = (0);
 11595  00053C  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 11596  00053E  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 11597  000540                     l2106:
 11598                           
 11599                           ; BSR set to: 3
 11600                           ;lorawan.c: 1300: }
 11601                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 11602  000540  0102               	movlb	2	; () banked
 11603  000542  8303               	bsf	(_loRa+3)& (0+255),1,b
 11604                           
 11605                           ; BSR set to: 2
 11606                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 11607  000544  0EF0               	movlw	-16
 11608  000546  1702               	andwf	(_loRa+2)& (0+255),f,b
 11609                           
 11610                           ; BSR set to: 2
 11611                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 11612  000548  0101               	movlb	1	; () banked
 11613  00054A  5172               	movf	_rxPayload& (0+255),w,b
 11614  00054C  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11615  00054E  E101 D6A9          	bz	l14464
 11616                           
 11617                           ; BSR set to: 1
 11618                           ;lorawan.c: 1306: {
 11619                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 11620  000552  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 11621  000556  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 11622  00055A  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 11623  00055E  0E01               	movlw	1
 11624  000560  0100               	movlb	0	; () banked
 11625  000562  6F67               	movwf	RxDataDone@status& (0+255),b
 11626  000564  D801               	call	u16448
 11627  000566  D69E               	goto	l14464
 11628  000568                     u16448:
 11629  000568  0005               	push	
 11630  00056A  6EFA               	movwf	pclath,c
 11631  00056C  0101               	movlb	1	; () banked
 11632  00056E  5172               	movf	_rxPayload& (0+255),w,b
 11633  000570  6EFD               	movwf	tosl,c
 11634  000572  5173               	movf	(_rxPayload+1)& (0+255),w,b
 11635  000574  6EFE               	movwf	tosh,c
 11636  000576  6AFF               	clrf	tosu,c
 11637  000578  50FA               	movf	pclath,w,c
 11638  00057A  0012               	return		;indir
 11639  00057C                     l14570:
 11640                           
 11641                           ; BSR set to: 2
 11642                           ;lorawan.c: 1313: }
 11643                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 11644  00057C  0103               	movlb	3	; () banked
 11645  00057E  EE20 F001          	lfsr	2,1
 11646  000582  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11647  000584  26D9               	addwf	fsr2l,f,c
 11648  000586  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11649  000588  22DA               	addwfc	fsr2h,f,c
 11650  00058A  0102               	movlb	2	; () banked
 11651  00058C  511E               	movf	(_loRa+30)& (0+255),w,b
 11652  00058E  18DE               	xorwf	postinc2,w,c
 11653  000590  E109               	bnz	u16450
 11654  000592  511F               	movf	(_loRa+31)& (0+255),w,b
 11655  000594  18DE               	xorwf	postinc2,w,c
 11656  000596  E106               	bnz	u16450
 11657  000598  5120               	movf	(_loRa+32)& (0+255),w,b
 11658  00059A  18DE               	xorwf	postinc2,w,c
 11659  00059C  E103               	bnz	u16450
 11660  00059E  5121               	movf	(_loRa+33)& (0+255),w,b
 11661  0005A0  18DE               	xorwf	postinc2,w,c
 11662  0005A2  E008               	bz	l14582
 11663  0005A4                     u16450:
 11664                           
 11665                           ; BSR set to: 2
 11666                           ;lorawan.c: 1317: {
 11667                           ;lorawan.c: 1318: SetReceptionNotOkState();
 11668  0005A4  EC2E  F032         	call	_SetReceptionNotOkState	;wreg free
 11669  0005A8                     l14574:
 11670                           
 11671                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 11672  0005A8  0E02               	movlw	2
 11673  0005AA  0102               	movlb	2	; () banked
 11674  0005AC                     L5:
 11675  0005AC  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11676  0005AE  E101 D679          	bz	l14464
 11677  0005B2  0012               	return	
 11678  0005B4                     l14582:
 11679                           
 11680                           ; BSR set to: 2
 11681                           ;lorawan.c: 1325: }
 11682                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 11683  0005B4  0103               	movlb	3	; () banked
 11684  0005B6  EE20 F006          	lfsr	2,6
 11685  0005BA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11686  0005BC  26D9               	addwf	fsr2l,f,c
 11687  0005BE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11688  0005C0  22DA               	addwfc	fsr2h,f,c
 11689  0005C2  CFDE F0E4          	movff	postinc2,??_LORAWAN_RxDone
 11690  0005C6  CFDD F0E5          	movff	postdec2,??_LORAWAN_RxDone+1
 11691  0005CA  C0E4  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11692  0005CE  C0E5  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11693  0005D2  0100               	movlb	0	; () banked
 11694  0005D4  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11695  0005D6  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11696  0005D8  0101               	movlb	1	; () banked
 11697  0005DA  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11698  0005DC  0FFC               	addlw	252
 11699  0005DE  0100               	movlb	0	; () banked
 11700  0005E0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11701  0005E2  0E49               	movlw	73
 11702  0005E4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11703  0005E6  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11704  0005E8  0E01               	movlw	1
 11705  0005EA  EC82  F02D         	call	_AssembleEncryptionBlock
 11706                           
 11707                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11708  0005EE  0EEF               	movlw	low _radioBuffer
 11709  0005F0  6F64               	movwf	memcpy@d1& (0+255),b
 11710  0005F2  0E05               	movlw	high _radioBuffer
 11711  0005F4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11712  0005F6  0EAF               	movlw	low _aesBuffer
 11713  0005F8  6F66               	movwf	memcpy@s1& (0+255),b
 11714  0005FA  0E01               	movlw	high _aesBuffer
 11715  0005FC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11716  0005FE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11717  000600  0E10               	movlw	16
 11718  000602  6F68               	movwf	memcpy@n& (0+255),b
 11719  000604  ECD5  F034         	call	_memcpy	;wreg free
 11720                           
 11721                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11722  000608  0EFF               	movlw	low (_radioBuffer+16)
 11723  00060A  6F64               	movwf	memcpy@d1& (0+255),b
 11724  00060C  0E05               	movlw	high (_radioBuffer+16)
 11725  00060E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11726  000610  C16F  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11727  000614  C170  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11728  000618  0EFC               	movlw	252
 11729  00061A  0101               	movlb	1	; () banked
 11730  00061C  2571               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11731  00061E  0100               	movlb	0	; () banked
 11732  000620  6F68               	movwf	memcpy@n& (0+255),b
 11733  000622  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11734  000624  0EFF               	movlw	255
 11735  000626  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11736  000628  ECD5  F034         	call	_memcpy	;wreg free
 11737                           
 11738                           ; BSR set to: 0
 11739                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11740  00062C  0E22               	movlw	low (_loRa+34)
 11741  00062E  6FCC               	movwf	AESCmac@key& (0+255),b
 11742  000630  0E02               	movlw	high (_loRa+34)
 11743  000632  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 11744  000634  0EAF               	movlw	low _aesBuffer
 11745  000636  6FCE               	movwf	AESCmac@output& (0+255),b
 11746  000638  0E01               	movlw	high _aesBuffer
 11747  00063A  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 11748  00063C  0EEF               	movlw	low _radioBuffer
 11749  00063E  6FD0               	movwf	AESCmac@input& (0+255),b
 11750  000640  0E05               	movlw	high _radioBuffer
 11751  000642  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 11752  000644  0101               	movlb	1	; () banked
 11753  000646  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11754  000648  0F0C               	addlw	12
 11755  00064A  0100               	movlb	0	; () banked
 11756  00064C  6FD2               	movwf	AESCmac@size& (0+255),b
 11757  00064E  EC10  F00C         	call	_AESCmac	;wreg free
 11758                           
 11759                           ; BSR set to: 0
 11760                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11761  000652  0EAB               	movlw	low LORAWAN_RxDone@computedMic
 11762  000654  6F64               	movwf	memcpy@d1& (0+255),b
 11763  000656  0E03               	movlw	high LORAWAN_RxDone@computedMic
 11764  000658  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11765  00065A  0EAF               	movlw	low _aesBuffer
 11766  00065C  6F66               	movwf	memcpy@s1& (0+255),b
 11767  00065E  0E01               	movlw	high _aesBuffer
 11768  000660  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11769  000662  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11770  000664  0E04               	movlw	4
 11771  000666  6F68               	movwf	memcpy@n& (0+255),b
 11772  000668  ECD5  F034         	call	_memcpy	;wreg free
 11773                           
 11774                           ; BSR set to: 0
 11775                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11776  00066C  C16F  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11777  000670  C170  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11778  000674  C171  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11779  000678  EC3D  F037         	call	_ExtractMic	;wreg free
 11780  00067C  C06E  F3A3         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11781  000680  C06F  F3A4         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11782  000684  C070  F3A5         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11783  000688  C071  F3A6         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11784                           
 11785                           ; BSR set to: 0
 11786                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 11787  00068C  0103               	movlb	3	; () banked
 11788  00068E  51A3               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11789  000690  19AB               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11790  000692  E109               	bnz	u16470
 11791  000694  51A4               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11792  000696  19AC               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11793  000698  E106               	bnz	u16470
 11794  00069A  51A5               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11795  00069C  19AD               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11796  00069E  E103               	bnz	u16470
 11797  0006A0  51A6               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11798  0006A2  19AE               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11799  0006A4  E003               	bz	l14602
 11800  0006A6                     u16470:
 11801                           
 11802                           ; BSR set to: 3
 11803                           ;lorawan.c: 1337: {
 11804                           ;lorawan.c: 1338: SetReceptionNotOkState();
 11805  0006A6  EC2E  F032         	call	_SetReceptionNotOkState	;wreg free
 11806  0006AA  D77E               	goto	l14574
 11807  0006AC                     l14602:
 11808                           
 11809                           ; BSR set to: 3
 11810                           ;lorawan.c: 1345: }
 11811                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 11812  0006AC  EE20 F006          	lfsr	2,6
 11813  0006B0  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11814  0006B2  26D9               	addwf	fsr2l,f,c
 11815  0006B4  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11816  0006B6  22DA               	addwfc	fsr2h,f,c
 11817  0006B8  0102               	movlb	2	; () banked
 11818  0006BA  510A               	movf	(_loRa+10)& (0+255),w,b
 11819  0006BC  5CDE               	subwf	postinc2,w,c
 11820  0006BE  510B               	movf	(_loRa+11)& (0+255),w,b
 11821  0006C0  58DE               	subwfb	postinc2,w,c
 11822  0006C2  E345               	bnc	l14632
 11823                           
 11824                           ; BSR set to: 2
 11825                           ;lorawan.c: 1349: {
 11826                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 11827  0006C4  0103               	movlb	3	; () banked
 11828  0006C6  EE20 F006          	lfsr	2,6
 11829  0006CA  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11830  0006CC  26D9               	addwf	fsr2l,f,c
 11831  0006CE  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11832  0006D0  22DA               	addwfc	fsr2h,f,c
 11833  0006D2  CFDE F0E4          	movff	postinc2,??_LORAWAN_RxDone
 11834  0006D6  CFDD F0E5          	movff	postdec2,??_LORAWAN_RxDone+1
 11835  0006DA  0102               	movlb	2	; () banked
 11836  0006DC  510A               	movf	(_loRa+10)& (0+255),w,b
 11837  0006DE  0100               	movlb	0	; () banked
 11838  0006E0  5FE4               	subwf	??_LORAWAN_RxDone& (0+255),f,b
 11839  0006E2  0102               	movlb	2	; () banked
 11840  0006E4  510B               	movf	(_loRa+11)& (0+255),w,b
 11841  0006E6  0100               	movlb	0	; () banked
 11842  0006E8  5BE5               	subwfb	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11843  0006EA  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11844  0006EC  0102               	movlb	2	; () banked
 11845  0006EE  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 11846  0006F0  0100               	movlb	0	; () banked
 11847  0006F2  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11848  0006F4  0102               	movlb	2	; () banked
 11849  0006F6  599D               	subwfb	(_loRa+157)& (0+255),w,b
 11850  0006F8  E21E               	bc	l14630
 11851                           
 11852                           ; BSR set to: 2
 11853                           ;lorawan.c: 1351: {
 11854                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 11855  0006FA  9100               	bcf	_loRa& (0+255),0,b
 11856                           
 11857                           ; BSR set to: 2
 11858                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 11859  0006FC  0EF0               	movlw	-16
 11860  0006FE  1702               	andwf	(_loRa+2)& (0+255),f,b
 11861                           
 11862                           ; BSR set to: 2
 11863                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 11864  000700  0101               	movlb	1	; () banked
 11865  000702  5172               	movf	_rxPayload& (0+255),w,b
 11866  000704  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 11867  000706  E014               	bz	l14616
 11868                           
 11869                           ; BSR set to: 1
 11870                           ;lorawan.c: 1355: {
 11871                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 11872  000708  0102               	movlb	2	; () banked
 11873  00070A  9B00               	bcf	_loRa& (0+255),5,b
 11874                           
 11875                           ; BSR set to: 2
 11876                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 11877  00070C  0E00               	movlw	0
 11878  00070E  0100               	movlb	0	; () banked
 11879  000710  6B64               	clrf	RxDataDone@pData& (0+255),b
 11880  000712  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 11881  000714  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 11882  000716  6B67               	clrf	RxDataDone@status& (0+255),b
 11883  000718  D801               	call	u16528
 11884  00071A  D00A               	goto	l14616
 11885  00071C                     u16528:
 11886  00071C  0005               	push	
 11887  00071E  6EFA               	movwf	pclath,c
 11888  000720  0101               	movlb	1	; () banked
 11889  000722  5172               	movf	_rxPayload& (0+255),w,b
 11890  000724  6EFD               	movwf	tosl,c
 11891  000726  5173               	movf	(_rxPayload+1)& (0+255),w,b
 11892  000728  6EFE               	movwf	tosh,c
 11893  00072A  6AFF               	clrf	tosu,c
 11894  00072C  50FA               	movf	pclath,w,c
 11895  00072E  0012               	return		;indir
 11896  000730                     l14616:
 11897                           
 11898                           ; BSR set to: 1
 11899                           ;lorawan.c: 1358: }
 11900                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 11901  000730  0102               	movlb	2	; () banked
 11902  000732  9303               	bcf	(_loRa+3)& (0+255),1,b
 11903  000734  D036               	goto	l14652
 11904  000736                     l14630:
 11905                           
 11906                           ; BSR set to: 2
 11907                           ;lorawan.c: 1370: else
 11908                           ;lorawan.c: 1371: {
 11909                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11910  000736  0103               	movlb	3	; () banked
 11911  000738  EE20 F006          	lfsr	2,6
 11912  00073C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11913  00073E  26D9               	addwf	fsr2l,f,c
 11914  000740  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11915  000742  22DA               	addwfc	fsr2h,f,c
 11916  000744  CFDE F20A          	movff	postinc2,_loRa+10
 11917  000748  CFDD F20B          	movff	postdec2,_loRa+11
 11918  00074C  D021               	goto	l14650
 11919  00074E                     l14632:
 11920                           
 11921                           ; BSR set to: 2
 11922                           ;lorawan.c: 1375: else
 11923                           ;lorawan.c: 1376: {
 11924                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 11925  00074E  0103               	movlb	3	; () banked
 11926  000750  EE20 F006          	lfsr	2,6
 11927  000754  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11928  000756  26D9               	addwf	fsr2l,f,c
 11929  000758  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11930  00075A  22DA               	addwfc	fsr2h,f,c
 11931  00075C  50DE               	movf	postinc2,w,c
 11932  00075E  10DE               	iorwf	postinc2,w,c
 11933  000760  E114               	bnz	l14640
 11934                           
 11935                           ; BSR set to: 3
 11936  000762  0102               	movlb	2	; () banked
 11937  000764  290A               	incf	(_loRa+10)& (0+255),w,b
 11938  000766  E111               	bnz	l14640
 11939  000768  290B               	incf	(_loRa+11)& (0+255),w,b
 11940  00076A  E10F               	bnz	l14640
 11941                           
 11942                           ; BSR set to: 2
 11943                           ;lorawan.c: 1378: {
 11944                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 11945  00076C  0103               	movlb	3	; () banked
 11946  00076E  EE20 F006          	lfsr	2,6
 11947  000772  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11948  000774  26D9               	addwf	fsr2l,f,c
 11949  000776  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11950  000778  22DA               	addwfc	fsr2h,f,c
 11951  00077A  CFDE F20A          	movff	postinc2,_loRa+10
 11952  00077E  CFDD F20B          	movff	postdec2,_loRa+11
 11953                           
 11954                           ; BSR set to: 3
 11955                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 11956  000782  0102               	movlb	2	; () banked
 11957  000784  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 11958  000786  2B0D               	incf	(_loRa+13)& (0+255),f,b
 11959                           
 11960                           ;lorawan.c: 1382: }
 11961  000788  D003               	goto	l14650
 11962  00078A                     l14640:
 11963                           
 11964                           ;lorawan.c: 1383: else
 11965                           ;lorawan.c: 1384: {
 11966                           ;lorawan.c: 1385: SetReceptionNotOkState();
 11967  00078A  EC2E  F032         	call	_SetReceptionNotOkState	;wreg free
 11968  00078E  D70C               	goto	l14574
 11969  000790                     l14650:
 11970                           
 11971                           ;lorawan.c: 1393: }
 11972                           ;lorawan.c: 1394: }
 11973                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 11974  000790  0102               	movlb	2	; () banked
 11975  000792  290A               	incf	(_loRa+10)& (0+255),w,b
 11976  000794  E109               	bnz	l14662
 11977  000796  290B               	incf	(_loRa+11)& (0+255),w,b
 11978  000798  E107               	bnz	l14662
 11979  00079A  290C               	incf	(_loRa+12)& (0+255),w,b
 11980  00079C  E105               	bnz	l14662
 11981  00079E  290D               	incf	(_loRa+13)& (0+255),w,b
 11982  0007A0  E103               	bnz	l14662
 11983  0007A2                     l14652:
 11984                           
 11985                           ; BSR set to: 2
 11986                           ;lorawan.c: 1397: {
 11987                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 11988  0007A2  8304               	bsf	(_loRa+4)& (0+255),1,b
 11989                           
 11990                           ; BSR set to: 2
 11991                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 11992  0007A4  0E02               	movlw	2
 11993  0007A6  D702               	goto	L5
 11994  0007A8                     l14662:
 11995                           
 11996                           ; BSR set to: 2
 11997                           ;lorawan.c: 1407: }
 11998                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 11999  0007A8  5102               	movf	(_loRa+2)& (0+255),w,b
 12000  0007AA  0B0F               	andlw	15
 12001  0007AC  0A03               	xorlw	3
 12002  0007AE  E103               	bnz	l14666
 12003                           
 12004                           ; BSR set to: 2
 12005                           ;lorawan.c: 1411: {
 12006                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 12007  0007B0  51E5               	movf	(_loRa+229)& (0+255),w,b
 12008  0007B2  EC6A  F03B         	call	_SwTimerStop
 12009  0007B6                     l14666:
 12010                           
 12011                           ;lorawan.c: 1413: }
 12012                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12013  0007B6  0E01               	movlw	1
 12014  0007B8  0102               	movlb	2	; () banked
 12015  0007BA  6FD8               	movwf	(_loRa+216)& (0+255),b
 12016                           
 12017                           ; BSR set to: 2
 12018                           ;lorawan.c: 1417: CheckFlags (hdr);
 12019  0007BC  C3B2  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 12020  0007C0  C3B3  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 12021  0007C4  ECF1  F033         	call	_CheckFlags	;wreg free
 12022                           
 12023                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 12024  0007C8  0103               	movlb	3	; () banked
 12025  0007CA  EE20 F005          	lfsr	2,5
 12026  0007CE  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12027  0007D0  26D9               	addwf	fsr2l,f,c
 12028  0007D2  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12029  0007D4  22DA               	addwfc	fsr2h,f,c
 12030  0007D6  50DF               	movf	223,w,c
 12031  0007D8  0B0F               	andlw	15
 12032  0007DA  E01B               	bz	l14674
 12033                           
 12034                           ; BSR set to: 3
 12035                           ;lorawan.c: 1420: {
 12036                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 12037  0007DC  0E08               	movlw	8
 12038  0007DE  25B2               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 12039  0007E0  0100               	movlb	0	; () banked
 12040  0007E2  6F7A               	movwf	MacExecuteCommands@buffer& (0+255),b
 12041  0007E4  0E00               	movlw	0
 12042  0007E6  0103               	movlb	3	; () banked
 12043  0007E8  21B3               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12044  0007EA  0100               	movlb	0	; () banked
 12045  0007EC  6F7B               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 12046  0007EE  0103               	movlb	3	; () banked
 12047  0007F0  EE20 F005          	lfsr	2,5
 12048  0007F4  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12049  0007F6  26D9               	addwf	fsr2l,f,c
 12050  0007F8  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12051  0007FA  22DA               	addwfc	fsr2h,f,c
 12052  0007FC  50DF               	movf	223,w,c
 12053  0007FE  0B0F               	andlw	15
 12054  000800  0100               	movlb	0	; () banked
 12055  000802  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12056  000804  EC08  F017         	call	_MacExecuteCommands	;wreg free
 12057  000808  C07A  F16F         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12058  00080C  C07B  F170         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12059                           
 12060                           ;lorawan.c: 1422: }
 12061  000810  D005               	goto	l14676
 12062  000812                     l14674:
 12063                           
 12064                           ; BSR set to: 3
 12065                           ;lorawan.c: 1423: else
 12066                           ;lorawan.c: 1424: {
 12067                           ;lorawan.c: 1425: buffer = buffer + 8;
 12068  000812  0E08               	movlw	8
 12069  000814  0101               	movlb	1	; () banked
 12070  000816  276F               	addwf	LORAWAN_RxDone@buffer& (0+255),f,b
 12071  000818  0E00               	movlw	0
 12072  00081A  2370               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12073  00081C                     l14676:
 12074                           
 12075                           ;lorawan.c: 1426: }
 12076                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12077  00081C  0101               	movlb	1	; () banked
 12078  00081E  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12079  000820  0100               	movlb	0	; () banked
 12080  000822  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 12081  000824  6BE5               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12082  000826  0103               	movlb	3	; () banked
 12083  000828  EE20 F005          	lfsr	2,5
 12084  00082C  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12085  00082E  26D9               	addwf	fsr2l,f,c
 12086  000830  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12087  000832  22DA               	addwfc	fsr2h,f,c
 12088  000834  50DF               	movf	223,w,c
 12089  000836  0B0F               	andlw	15
 12090  000838  0100               	movlb	0	; () banked
 12091  00083A  6FE6               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12092  00083C  6BE7               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12093  00083E  0E0C               	movlw	12
 12094  000840  27E6               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12095  000842  0E00               	movlw	0
 12096  000844  23E7               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12097  000846  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12098  000848  19E6               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12099  00084A  E104               	bnz	u16610
 12100  00084C  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12101  00084E  19E7               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12102  000850  E101 D09B          	bz	l2126
 12103  000854                     u16610:
 12104                           
 12105                           ; BSR set to: 0
 12106                           ;lorawan.c: 1428: {
 12107                           ;lorawan.c: 1429: fPort = *(buffer++);
 12108  000854  C16F  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12109  000858  C170  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12110  00085C  50DF               	movf	indf2,w,c
 12111  00085E  0103               	movlb	3	; () banked
 12112  000860  6FA0               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12113                           
 12114                           ; BSR set to: 3
 12115  000862  0101               	movlb	1	; () banked
 12116  000864  4B6F               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12117  000866  2B70               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12118                           
 12119                           ; BSR set to: 1
 12120                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 12121  000868  0103               	movlb	3	; () banked
 12122  00086A  EE20 F005          	lfsr	2,5
 12123  00086E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12124  000870  26D9               	addwf	fsr2l,f,c
 12125  000872  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12126  000874  22DA               	addwfc	fsr2h,f,c
 12127  000876  50DF               	movf	223,w,c
 12128  000878  0B0F               	andlw	15
 12129  00087A  0100               	movlb	0	; () banked
 12130  00087C  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 12131  00087E  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12132  000880  0101               	movlb	1	; () banked
 12133  000882  5D71               	subwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12134  000884  0FF4               	addlw	244
 12135  000886  0103               	movlb	3	; () banked
 12136  000888  6FB1               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12137                           
 12138                           ; BSR set to: 3
 12139                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 12140  00088A  EE20 F005          	lfsr	2,5
 12141  00088E  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12142  000890  26D9               	addwf	fsr2l,f,c
 12143  000892  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12144  000894  22DA               	addwfc	fsr2h,f,c
 12145  000896  50DF               	movf	223,w,c
 12146  000898  0B0F               	andlw	15
 12147  00089A  0F19               	addlw	25
 12148  00089C  6FA7               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12149                           
 12150                           ; BSR set to: 3
 12151                           ;lorawan.c: 1434: if (fPort != 0)
 12152  00089E  51A0               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 12153  0008A0  E029               	bz	l14692
 12154                           
 12155                           ; BSR set to: 3
 12156                           ;lorawan.c: 1435: {
 12157                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 12158  0008A2  C16F  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12159  0008A6  C170  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12160  0008AA  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12161  0008AC  0100               	movlb	0	; () banked
 12162  0008AE  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12163  0008B0  0E01               	movlw	1
 12164  0008B2  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 12165  0008B4  C20A  F0A8         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 12166  0008B8  C20B  F0A9         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 12167  0008BC  C20C  F0AA         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 12168  0008C0  C20D  F0AB         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 12169  0008C4  0E32               	movlw	low (_loRa+50)
 12170  0008C6  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 12171  0008C8  0E02               	movlw	high (_loRa+50)
 12172  0008CA  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12173  0008CC  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12174  0008D0  0EEF               	movlw	low _radioBuffer
 12175  0008D2  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12176  0008D4  0E05               	movlw	high _radioBuffer
 12177  0008D6  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12178  0008D8  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 12179  0008DA  ECC8  F020         	call	_EncryptFRMPayload	;wreg free
 12180                           
 12181                           ; BSR set to: 0
 12182                           ;lorawan.c: 1437: packet = buffer - 1;
 12183  0008DE  0EFF               	movlw	255
 12184  0008E0  0101               	movlb	1	; () banked
 12185  0008E2  256F               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12186  0008E4  0103               	movlb	3	; () banked
 12187  0008E6  6FA9               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12188  0008E8  0EFF               	movlw	255
 12189  0008EA  0101               	movlb	1	; () banked
 12190  0008EC  2170               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12191  0008EE  0103               	movlb	3	; () banked
 12192  0008F0  6FAA               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12193                           
 12194                           ;lorawan.c: 1438: }
 12195  0008F2  D04F               	goto	l14702
 12196  0008F4                     l14692:
 12197                           
 12198                           ; BSR set to: 3
 12199                           ;lorawan.c: 1439: else
 12200                           ;lorawan.c: 1440: {
 12201                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 12202  0008F4  0101               	movlb	1	; () banked
 12203  0008F6  5171               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12204  0008F8  0100               	movlb	0	; () banked
 12205  0008FA  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 12206  0008FC  6BE5               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12207  0008FE  0103               	movlb	3	; () banked
 12208  000900  EE20 F005          	lfsr	2,5
 12209  000904  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12210  000906  26D9               	addwf	fsr2l,f,c
 12211  000908  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12212  00090A  22DA               	addwfc	fsr2h,f,c
 12213  00090C  50DF               	movf	223,w,c
 12214  00090E  0B0F               	andlw	15
 12215  000910  0100               	movlb	0	; () banked
 12216  000912  6FE6               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12217  000914  6BE7               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12218  000916  0E0D               	movlw	13
 12219  000918  27E6               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12220  00091A  0E00               	movlw	0
 12221  00091C  23E7               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12222  00091E  51E4               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12223  000920  5DE6               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12224  000922  51E7               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12225  000924  0A80               	xorlw	128
 12226  000926  6FE8               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 12227  000928  51E5               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12228  00092A  0A80               	xorlw	128
 12229  00092C  59E8               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 12230  00092E  E22D               	bc	l2126
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;lorawan.c: 1443: {
 12234                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 12235  000930  C16F  F0A4         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12236  000934  C170  F0A5         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12237  000938  0103               	movlb	3	; () banked
 12238  00093A  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12239  00093C  0100               	movlb	0	; () banked
 12240  00093E  6FA6               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12241  000940  0E01               	movlw	1
 12242  000942  6FA7               	movwf	EncryptFRMPayload@dir& (0+255),b
 12243  000944  C20A  F0A8         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 12244  000948  C20B  F0A9         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 12245  00094C  C20C  F0AA         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 12246  000950  C20D  F0AB         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 12247  000954  0E22               	movlw	low (_loRa+34)
 12248  000956  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 12249  000958  0E02               	movlw	high (_loRa+34)
 12250  00095A  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12251  00095C  C3A7  F0AE         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12252  000960  0EEF               	movlw	low _radioBuffer
 12253  000962  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12254  000964  0E05               	movlw	high _radioBuffer
 12255  000966  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12256  000968  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 12257  00096A  ECC8  F020         	call	_EncryptFRMPayload	;wreg free
 12258                           
 12259                           ; BSR set to: 0
 12260                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 12261  00096E  C16F  F07A         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 12262  000972  C170  F07B         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 12263  000976  0103               	movlb	3	; () banked
 12264  000978  05B1               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12265  00097A  0100               	movlb	0	; () banked
 12266  00097C  6F7C               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12267  00097E  EC08  F017         	call	_MacExecuteCommands	;wreg free
 12268  000982  C07A  F16F         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12269  000986  C07B  F170         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12270  00098A                     l2126:
 12271                           
 12272                           ; BSR set to: 0
 12273                           ;lorawan.c: 1453: else
 12274                           ;lorawan.c: 1454: {
 12275                           ;lorawan.c: 1455: frmPayloadLength = 0;
 12276  00098A  0103               	movlb	3	; () banked
 12277  00098C  6BB1               	clrf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12278                           
 12279                           ;lorawan.c: 1456: packet = (0);
 12280  00098E  6BA9               	clrf	LORAWAN_RxDone@packet& (0+255),b
 12281  000990  6BAA               	clrf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12282  000992                     l14702:
 12283                           
 12284                           ; BSR set to: 3
 12285                           ;lorawan.c: 1457: }
 12286                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12287  000992  0E01               	movlw	1
 12288  000994  0102               	movlb	2	; () banked
 12289  000996  6FD8               	movwf	(_loRa+216)& (0+255),b
 12290                           
 12291                           ; BSR set to: 2
 12292                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 12293  000998  6BD0               	clrf	(_loRa+208)& (0+255),b
 12294  00099A  6BD1               	clrf	(_loRa+209)& (0+255),b
 12295                           
 12296                           ; BSR set to: 2
 12297                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 12298  00099C  6BEE               	clrf	(_loRa+238)& (0+255),b
 12299                           
 12300                           ; BSR set to: 2
 12301                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 12302  00099E  9900               	bcf	_loRa& (0+255),4,b
 12303                           
 12304                           ; BSR set to: 2
 12305                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 12306  0009A0  8303               	bsf	(_loRa+3)& (0+255),1,b
 12307                           
 12308                           ; BSR set to: 2
 12309                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 12310  0009A2  A100               	btfss	_loRa& (0+255),0,b
 12311  0009A4  D04F               	goto	l14746
 12312                           
 12313                           ; BSR set to: 2
 12314                           ;lorawan.c: 1468: {
 12315                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 12316  0009A6  0103               	movlb	3	; () banked
 12317  0009A8  EE20 F005          	lfsr	2,5
 12318  0009AC  51B2               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12319  0009AE  26D9               	addwf	fsr2l,f,c
 12320  0009B0  51B3               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12321  0009B2  22DA               	addwfc	fsr2h,f,c
 12322  0009B4  AADF               	btfss	indf2,5,c
 12323  0009B6  D043               	goto	l14744
 12324                           
 12325                           ; BSR set to: 3
 12326                           ;lorawan.c: 1470: {
 12327                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12328  0009B8  0102               	movlb	2	; () banked
 12329  0009BA  9100               	bcf	_loRa& (0+255),0,b
 12330                           
 12331                           ; BSR set to: 2
 12332                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 12333  0009BC  0EF0               	movlw	-16
 12334  0009BE  1702               	andwf	(_loRa+2)& (0+255),f,b
 12335                           
 12336                           ; BSR set to: 2
 12337                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 12338  0009C0  0101               	movlb	1	; () banked
 12339  0009C2  5172               	movf	_rxPayload& (0+255),w,b
 12340  0009C4  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 12341  0009C6  E017               	bz	l14726
 12342                           
 12343                           ; BSR set to: 1
 12344                           ;lorawan.c: 1474: {
 12345                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 12346  0009C8  0102               	movlb	2	; () banked
 12347  0009CA  9B00               	bcf	_loRa& (0+255),5,b
 12348                           
 12349                           ; BSR set to: 2
 12350                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12351  0009CC  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12352  0009D0  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12353  0009D4  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12354  0009D8  0E01               	movlw	1
 12355  0009DA  0100               	movlb	0	; () banked
 12356  0009DC  6F67               	movwf	RxDataDone@status& (0+255),b
 12357  0009DE  D801               	call	u16678
 12358  0009E0  D00A               	goto	l14726
 12359  0009E2                     u16678:
 12360  0009E2  0005               	push	
 12361  0009E4  6EFA               	movwf	pclath,c
 12362  0009E6  0101               	movlb	1	; () banked
 12363  0009E8  5172               	movf	_rxPayload& (0+255),w,b
 12364  0009EA  6EFD               	movwf	tosl,c
 12365  0009EC  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12366  0009EE  6EFE               	movwf	tosh,c
 12367  0009F0  6AFF               	clrf	tosu,c
 12368  0009F2  50FA               	movf	pclath,w,c
 12369  0009F4  0012               	return		;indir
 12370  0009F6                     l14726:
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;lorawan.c: 1477: }
 12374                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 12375  0009F6  0102               	movlb	2	; () banked
 12376  0009F8  9303               	bcf	(_loRa+3)& (0+255),1,b
 12377                           
 12378                           ; BSR set to: 2
 12379                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12380  0009FA  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12381                           
 12382                           ; BSR set to: 2
 12383  0009FC  BB00               	btfsc	_loRa& (0+255),5,b
 12384  0009FE  D5D4               	goto	l14574
 12385                           
 12386                           ; BSR set to: 2
 12387  000A00  B300               	btfsc	_loRa& (0+255),1,b
 12388  000A02  D002               	goto	l14736
 12389                           
 12390                           ; BSR set to: 2
 12391  000A04  A700               	btfss	_loRa& (0+255),3,b
 12392  000A06  D5D0               	goto	l14574
 12393  000A08                     l14736:
 12394                           
 12395                           ; BSR set to: 2
 12396                           ;lorawan.c: 1480: {
 12397                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12398  000A08  0E01               	movlw	1
 12399  000A0A  0100               	movlb	0	; () banked
 12400  000A0C  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12401  000A0E  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12402  000A10  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12403  000A12  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12404  000A14  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12405  000A16  0102               	movlb	2	; () banked
 12406  000A18  51ED               	movf	(_loRa+237)& (0+255),w,b
 12407  000A1A  ECDB  F028         	call	_SearchAvailableChannel
 12408  000A1E  0900               	iorlw	0
 12409  000A20  E10B               	bnz	l14742
 12410                           
 12411                           ; BSR set to: 0
 12412                           ;lorawan.c: 1482: {
 12413                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 12414  000A22  0E00               	movlw	0
 12415  000A24  0101               	movlb	1	; () banked
 12416  000A26  6F6B               	movwf	LORAWAN_Send@port& (0+255),b
 12417  000A28  6F6C               	movwf	LORAWAN_Send@buffer& (0+255),b
 12418  000A2A  6F6D               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12419  000A2C  6F6E               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12420  000A2E  EC5A  F02B         	call	_LORAWAN_Send
 12421  000A32                     l14740:
 12422                           
 12423                           ;lorawan.c: 1484: loRa.lorawanMacStatus.fPending = 0;
 12424  000A32  0102               	movlb	2	; () banked
 12425  000A34  9700               	bcf	_loRa& (0+255),3,b
 12426                           
 12427                           ;lorawan.c: 1485: }
 12428  000A36  D5B8               	goto	l14574
 12429  000A38                     l14742:
 12430                           
 12431                           ; BSR set to: 0
 12432                           ;lorawan.c: 1486: else
 12433                           ;lorawan.c: 1487: {
 12434                           ;lorawan.c: 1489: StartReTxTimer();
 12435  000A38  ECB5  F022         	call	_StartReTxTimer	;wreg free
 12436  000A3C  D5B5               	goto	l14574
 12437  000A3E                     l14744:
 12438                           
 12439                           ; BSR set to: 3
 12440                           ;lorawan.c: 1494: else
 12441                           ;lorawan.c: 1495: {
 12442                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 12443  000A3E  ECC4  F031         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 12444  000A42  D5B2               	goto	l14574
 12445  000A44                     l14746:
 12446                           
 12447                           ; BSR set to: 2
 12448                           ;lorawan.c: 1499: else
 12449                           ;lorawan.c: 1500: {
 12450                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 12451  000A44  0EF0               	movlw	-16
 12452  000A46  1702               	andwf	(_loRa+2)& (0+255),f,b
 12453                           
 12454                           ; BSR set to: 2
 12455                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 12456  000A48  0101               	movlb	1	; () banked
 12457  000A4A  5172               	movf	_rxPayload& (0+255),w,b
 12458  000A4C  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 12459  000A4E  E017               	bz	l14754
 12460                           
 12461                           ; BSR set to: 1
 12462                           ;lorawan.c: 1504: {
 12463                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 12464  000A50  0102               	movlb	2	; () banked
 12465  000A52  9B00               	bcf	_loRa& (0+255),5,b
 12466                           
 12467                           ; BSR set to: 2
 12468                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12469  000A54  C3A9  F064         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12470  000A58  C3AA  F065         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12471  000A5C  C3B1  F066         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12472  000A60  0E01               	movlw	1
 12473  000A62  0100               	movlb	0	; () banked
 12474  000A64  6F67               	movwf	RxDataDone@status& (0+255),b
 12475  000A66  D801               	call	u16748
 12476  000A68  D00A               	goto	l14754
 12477  000A6A                     u16748:
 12478  000A6A  0005               	push	
 12479  000A6C  6EFA               	movwf	pclath,c
 12480  000A6E  0101               	movlb	1	; () banked
 12481  000A70  5172               	movf	_rxPayload& (0+255),w,b
 12482  000A72  6EFD               	movwf	tosl,c
 12483  000A74  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12484  000A76  6EFE               	movwf	tosh,c
 12485  000A78  6AFF               	clrf	tosu,c
 12486  000A7A  50FA               	movf	pclath,w,c
 12487  000A7C  0012               	return		;indir
 12488  000A7E                     l14754:
 12489                           
 12490                           ; BSR set to: 1
 12491                           ;lorawan.c: 1507: }
 12492                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 12493  000A7E  0102               	movlb	2	; () banked
 12494  000A80  BB02               	btfsc	(_loRa+2)& (0+255),5,b
 12495                           
 12496                           ; BSR set to: 2
 12497  000A82  BB00               	btfsc	_loRa& (0+255),5,b
 12498  000A84  D591               	goto	l14574
 12499                           
 12500                           ; BSR set to: 2
 12501  000A86  B300               	btfsc	_loRa& (0+255),1,b
 12502  000A88  D002               	goto	l14762
 12503                           
 12504                           ; BSR set to: 2
 12505  000A8A  A700               	btfss	_loRa& (0+255),3,b
 12506  000A8C  D58D               	goto	l14574
 12507  000A8E                     l14762:
 12508                           
 12509                           ; BSR set to: 2
 12510                           ;lorawan.c: 1510: {
 12511                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 12512  000A8E  0E01               	movlw	1
 12513  000A90  0100               	movlb	0	; () banked
 12514  000A92  6F79               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 12515  000A94  0EA1               	movlw	low LORAWAN_RxDone@channelIndex
 12516  000A96  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 12517  000A98  0E03               	movlw	high LORAWAN_RxDone@channelIndex
 12518  000A9A  6F7B               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 12519  000A9C  0102               	movlb	2	; () banked
 12520  000A9E  51ED               	movf	(_loRa+237)& (0+255),w,b
 12521  000AA0  ECDB  F028         	call	_SearchAvailableChannel
 12522  000AA4  0900               	iorlw	0
 12523  000AA6  E1C8               	bnz	l14742
 12524                           
 12525                           ; BSR set to: 0
 12526                           ;lorawan.c: 1512: {
 12527                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 12528  000AA8  0E00               	movlw	0
 12529  000AAA  0101               	movlb	1	; () banked
 12530  000AAC  6F6B               	movwf	LORAWAN_Send@port& (0+255),b
 12531  000AAE  6F6C               	movwf	LORAWAN_Send@buffer& (0+255),b
 12532  000AB0  6F6D               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 12533  000AB2  6F6E               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 12534  000AB4  EC5A  F02B         	call	_LORAWAN_Send
 12535  000AB8  D7BC               	goto	l14740
 12536  000ABA                     l14780:
 12537                           
 12538                           ; BSR set to: 2
 12539                           ;lorawan.c: 1537: else
 12540                           ;lorawan.c: 1538: {
 12541                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 12542  000ABA  0101               	movlb	1	; () banked
 12543  000ABC  5172               	movf	_rxPayload& (0+255),w,b
 12544  000ABE  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 12545  000AC0  B4D8               	btfsc	status,2,c
 12546  000AC2  0012               	return	
 12547                           
 12548                           ; BSR set to: 1
 12549                           ;lorawan.c: 1541: {
 12550                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 12551  000AC4  EC48  F03D         	call	_RADIO_GetStatus	;wreg free
 12552  000AC8  0100               	movlb	0	; () banked
 12553  000ACA  6FE4               	movwf	??_LORAWAN_RxDone& (0+255),b
 12554  000ACC  B7E4               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 12555  000ACE  D012               	goto	l14786
 12556                           
 12557                           ; BSR set to: 0
 12558                           ;lorawan.c: 1543: {
 12559                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 12560  000AD0  C16F  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12561  000AD4  C170  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12562  000AD8  C171  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12563  000ADC  0E03               	movlw	3
 12564  000ADE  6F67               	movwf	RxDataDone@status& (0+255),b
 12565  000AE0  0005               	push	
 12566  000AE2  6EFA               	movwf	pclath,c
 12567  000AE4  0101               	movlb	1	; () banked
 12568  000AE6  5172               	movf	_rxPayload& (0+255),w,b
 12569  000AE8  6EFD               	movwf	tosl,c
 12570  000AEA  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12571  000AEC  6EFE               	movwf	tosh,c
 12572  000AEE  6AFF               	clrf	tosu,c
 12573  000AF0  50FA               	movf	pclath,w,c
 12574  000AF2  0012               	return		;indir
 12575  000AF4                     l14786:
 12576                           
 12577                           ; BSR set to: 0
 12578                           ;lorawan.c: 1546: else
 12579                           ;lorawan.c: 1547: {
 12580                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 12581  000AF4  C16F  F064         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 12582  000AF8  C170  F065         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 12583  000AFC  C171  F066         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 12584  000B00  0E02               	movlw	2
 12585  000B02  6F67               	movwf	RxDataDone@status& (0+255),b
 12586  000B04  0005               	push	
 12587  000B06  6EFA               	movwf	pclath,c
 12588  000B08  0101               	movlb	1	; () banked
 12589  000B0A  5172               	movf	_rxPayload& (0+255),w,b
 12590  000B0C  6EFD               	movwf	tosl,c
 12591  000B0E  5173               	movf	(_rxPayload+1)& (0+255),w,b
 12592  000B10  6EFE               	movwf	tosh,c
 12593  000B12  6AFF               	clrf	tosu,c
 12594  000B14  50FA               	movf	pclath,w,c
 12595  000B16  0012               	return		;indir
 12596  000B18                     __end_of_LORAWAN_RxDone:
 12597                           	opt stack 0
 12598                           tosu	equ	0xFFF
 12599                           tosh	equ	0xFFE
 12600                           tosl	equ	0xFFD
 12601                           pclath	equ	0xFFA
 12602                           tblptru	equ	0xFF8
 12603                           tblptrh	equ	0xFF7
 12604                           tblptrl	equ	0xFF6
 12605                           tablat	equ	0xFF5
 12606                           prodh	equ	0xFF4
 12607                           prodl	equ	0xFF3
 12608                           intcon	equ	0xFF2
 12609                           intcon2	equ	0xFF1
 12610                           intcon3	equ	0xFF0
 12611                           postinc0	equ	0xFEE
 12612                           wreg	equ	0xFE8
 12613                           postinc1	equ	0xFE6
 12614                           postdec1	equ	0xFE5
 12615                           plusw1	equ	0xFE3
 12616                           fsr1h	equ	0xFE2
 12617                           fsr1l	equ	0xFE1
 12618                           indf2	equ	0xFDF
 12619                           postinc2	equ	0xFDE
 12620                           postdec2	equ	0xFDD
 12621                           fsr2h	equ	0xFDA
 12622                           fsr2l	equ	0xFD9
 12623                           status	equ	0xFD8
 12624                           
 12625 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 12626 ;; Defined at:
 12627 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 12628 ;; Parameters:    Size  Location     Type
 12629 ;;		None
 12630 ;; Auto vars:     Size  Location     Type
 12631 ;;		None
 12632 ;; Return value:  Size  Location     Type
 12633 ;;                  1    wreg      void 
 12634 ;; Registers used:
 12635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12636 ;; Tracked objects:
 12637 ;;		On entry : C/0
 12638 ;;		On exit  : F/0
 12639 ;;		Unchanged: 0/0
 12640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12643 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12644 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12645 ;;Total ram usage:        4 bytes
 12646 ;; Hardware stack levels used:    1
 12647 ;; Hardware stack levels required when called:   11
 12648 ;; This function calls:
 12649 ;;		_SwTimerSetTimeout
 12650 ;;		_SwTimerStart
 12651 ;;		___lldiv
 12652 ;; This function is called by:
 12653 ;;		_AckRetransmissionCallback
 12654 ;;		_LORAWAN_RxDone
 12655 ;; This function uses a non-reentrant model
 12656 ;;
 12657                           
 12658                           	psect	text62
 12659  006388                     __ptext62:
 12660                           	opt stack 0
 12661  006388                     _UpdateRetransmissionAckTimeoutState:
 12662                           	opt stack 16
 12663                           
 12664                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 12665                           
 12666                           ;incstack = 0
 12667  006388  0102               	movlb	2	; () banked
 12668  00638A  5102               	movf	(_loRa+2)& (0+255),w,b
 12669  00638C  0BF0               	andlw	-16
 12670  00638E  0906               	iorlw	6
 12671  006390  6F02               	movwf	(_loRa+2)& (0+255),b
 12672                           
 12673                           ; BSR set to: 2
 12674                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 12675  006392  51A0               	movf	(_loRa+160)& (0+255),w,b
 12676  006394  0100               	movlb	0	; () banked
 12677  006396  6F96               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 12678  006398  0102               	movlb	2	; () banked
 12679  00639A  51A1               	movf	(_loRa+161)& (0+255),w,b
 12680  00639C  0100               	movlb	0	; () banked
 12681  00639E  6F97               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 12682  0063A0  6B98               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 12683  0063A2  6B99               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 12684  0063A4  0E0C               	movlw	12
 12685  0063A6                     u15865:
 12686  0063A6  90D8               	bcf	status,0,c
 12687  0063A8  3796               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 12688  0063AA  3797               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 12689  0063AC  3798               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 12690  0063AE  3799               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 12691  0063B0  2EE8               	decfsz	wreg,f,c
 12692  0063B2  D7F9               	goto	u15865
 12693  0063B4  C096  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 12694  0063B8  C097  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 12695  0063BC  C098  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 12696  0063C0  C099  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 12697  0063C4  0E7D               	movlw	125
 12698  0063C6  6F68               	movwf	___lldiv@divisor& (0+255),b
 12699  0063C8  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 12700  0063CA  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 12701  0063CC  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 12702  0063CE  EC1B  F031         	call	___lldiv	;wreg free
 12703  0063D2  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 12704  0063D6  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 12705  0063DA  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 12706  0063DE  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 12707  0063E2  0102               	movlb	2	; () banked
 12708  0063E4  51E8               	movf	(_loRa+232)& (0+255),w,b
 12709  0063E6  EC5E  F037         	call	_SwTimerSetTimeout
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 12713  0063EA  0102               	movlb	2	; () banked
 12714  0063EC  51E8               	movf	(_loRa+232)& (0+255),w,b
 12715  0063EE  EF59  F02F         	goto	_SwTimerStart
 12716  0063F2                     __end_of_UpdateRetransmissionAckTimeoutState:
 12717                           	opt stack 0
 12718                           tosu	equ	0xFFF
 12719                           tosh	equ	0xFFE
 12720                           tosl	equ	0xFFD
 12721                           pclath	equ	0xFFA
 12722                           tblptru	equ	0xFF8
 12723                           tblptrh	equ	0xFF7
 12724                           tblptrl	equ	0xFF6
 12725                           tablat	equ	0xFF5
 12726                           prodh	equ	0xFF4
 12727                           prodl	equ	0xFF3
 12728                           intcon	equ	0xFF2
 12729                           intcon2	equ	0xFF1
 12730                           intcon3	equ	0xFF0
 12731                           postinc0	equ	0xFEE
 12732                           wreg	equ	0xFE8
 12733                           postinc1	equ	0xFE6
 12734                           postdec1	equ	0xFE5
 12735                           plusw1	equ	0xFE3
 12736                           fsr1h	equ	0xFE2
 12737                           fsr1l	equ	0xFE1
 12738                           indf2	equ	0xFDF
 12739                           postinc2	equ	0xFDE
 12740                           postdec2	equ	0xFDD
 12741                           fsr2h	equ	0xFDA
 12742                           fsr2l	equ	0xFD9
 12743                           status	equ	0xFD8
 12744                           
 12745 ;; *************** function _UpdateDLSettings *****************
 12746 ;; Defined at:
 12747 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12748 ;; Parameters:    Size  Location     Type
 12749 ;;  dlRx2Dr         1    wreg     unsigned char 
 12750 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 12751 ;; Auto vars:     Size  Location     Type
 12752 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 12753 ;; Return value:  Size  Location     Type
 12754 ;;                  1    wreg      void 
 12755 ;; Registers used:
 12756 ;;		wreg, status,2, status,0
 12757 ;; Tracked objects:
 12758 ;;		On entry : F/3
 12759 ;;		On exit  : F/0
 12760 ;;		Unchanged: 0/0
 12761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12762 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12763 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12765 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12766 ;;Total ram usage:        2 bytes
 12767 ;; Hardware stack levels used:    1
 12768 ;; Hardware stack levels required when called:    7
 12769 ;; This function calls:
 12770 ;;		Nothing
 12771 ;; This function is called by:
 12772 ;;		_LORAWAN_RxDone
 12773 ;; This function uses a non-reentrant model
 12774 ;;
 12775                           
 12776                           	psect	text63
 12777  0077B4                     __ptext63:
 12778                           	opt stack 0
 12779  0077B4                     _UpdateDLSettings:
 12780                           	opt stack 19
 12781                           
 12782                           ; BSR set to: 0
 12783                           ;incstack = 0
 12784                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 12785  0077B4  0100               	movlb	0	; () banked
 12786  0077B6  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 12787                           
 12788                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 12789  0077B8  0E08               	movlw	8
 12790  0077BA  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 12791  0077BC  D002               	goto	l14126
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;lorawan_eu.c: 891: {
 12795                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 12796  0077BE  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 12797  0077C2                     l14126:
 12798                           
 12799                           ; BSR set to: 0
 12800                           ;lorawan_eu.c: 893: }
 12801                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 12802  0077C2  0E06               	movlw	6
 12803  0077C4  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 12804  0077C6  0C06               	retlw	6
 12805                           
 12806                           ; BSR set to: 0
 12807                           ;lorawan_eu.c: 896: {
 12808                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 12809  0077C8  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 12810                           
 12811                           ; BSR set to: 0
 12812  0077CC  0C06               	retlw	6	;funcret
 12813  0077CE                     __end_of_UpdateDLSettings:
 12814                           	opt stack 0
 12815                           tosu	equ	0xFFF
 12816                           tosh	equ	0xFFE
 12817                           tosl	equ	0xFFD
 12818                           pclath	equ	0xFFA
 12819                           tblptru	equ	0xFF8
 12820                           tblptrh	equ	0xFF7
 12821                           tblptrl	equ	0xFF6
 12822                           tablat	equ	0xFF5
 12823                           prodh	equ	0xFF4
 12824                           prodl	equ	0xFF3
 12825                           intcon	equ	0xFF2
 12826                           intcon2	equ	0xFF1
 12827                           intcon3	equ	0xFF0
 12828                           postinc0	equ	0xFEE
 12829                           wreg	equ	0xFE8
 12830                           postinc1	equ	0xFE6
 12831                           postdec1	equ	0xFE5
 12832                           plusw1	equ	0xFE3
 12833                           fsr1h	equ	0xFE2
 12834                           fsr1l	equ	0xFE1
 12835                           indf2	equ	0xFDF
 12836                           postinc2	equ	0xFDE
 12837                           postdec2	equ	0xFDD
 12838                           fsr2h	equ	0xFDA
 12839                           fsr2l	equ	0xFD9
 12840                           status	equ	0xFD8
 12841                           
 12842 ;; *************** function _UpdateCfList *****************
 12843 ;; Defined at:
 12844 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 12845 ;; Parameters:    Size  Location     Type
 12846 ;;  bufferLength    1    wreg     unsigned char 
 12847 ;;  joinAccept      2   16[BANK0 ] PTR struct .
 12848 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 12849 ;; Auto vars:     Size  Location     Type
 12850 ;;  bufferLength    1   20[BANK0 ] unsigned char 
 12851 ;;  frequency       4   21[BANK0 ] unsigned long 
 12852 ;;  i               1   26[BANK0 ] unsigned char 
 12853 ;;  channelIndex    1   25[BANK0 ] unsigned char 
 12854 ;; Return value:  Size  Location     Type
 12855 ;;                  1    wreg      void 
 12856 ;; Registers used:
 12857 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12858 ;; Tracked objects:
 12859 ;;		On entry : F/1
 12860 ;;		On exit  : D/0
 12861 ;;		Unchanged: 0/0
 12862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12863 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12864 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12865 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12866 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12867 ;;Total ram usage:       11 bytes
 12868 ;; Hardware stack levels used:    1
 12869 ;; Hardware stack levels required when called:    9
 12870 ;; This function calls:
 12871 ;;		_LORAWAN_SetChannelIdStatus
 12872 ;;		_ValidateFrequency
 12873 ;;		___lmul
 12874 ;;		_memcpy
 12875 ;; This function is called by:
 12876 ;;		_LORAWAN_RxDone
 12877 ;; This function uses a non-reentrant model
 12878 ;;
 12879                           
 12880                           	psect	text64
 12881  0031EE                     __ptext64:
 12882                           	opt stack 0
 12883  0031EE                     _UpdateCfList:
 12884                           	opt stack 17
 12885                           
 12886                           ; BSR set to: 0
 12887                           ;incstack = 0
 12888                           ;UpdateCfList@bufferLength stored from wreg
 12889  0031EE  0100               	movlb	0	; () banked
 12890  0031F0  6F74               	movwf	UpdateCfList@bufferLength& (0+255),b
 12891                           
 12892                           ;lorawan_eu.c: 826: uint8_t i;
 12893                           ;lorawan_eu.c: 827: uint32_t frequency;
 12894                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 12895                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 12896  0031F2  0E21               	movlw	33
 12897  0031F4  1974               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 12898  0031F6  A4D8               	btfss	status,2,c
 12899  0031F8  0012               	return	
 12900                           
 12901                           ; BSR set to: 0
 12902                           ;lorawan_eu.c: 831: {
 12903                           ;lorawan_eu.c: 833: channelIndex = 3;
 12904  0031FA  0E03               	movlw	3
 12905  0031FC  6F79               	movwf	UpdateCfList@channelIndex& (0+255),b
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 12909  0031FE  6B7A               	clrf	UpdateCfList@i& (0+255),b
 12910  003200                     l1153:
 12911                           
 12912                           ; BSR set to: 0
 12913                           ;lorawan_eu.c: 836: {
 12914                           ;lorawan_eu.c: 837: frequency = 0;
 12915  003200  6B75               	clrf	UpdateCfList@frequency& (0+255),b
 12916  003202  6B76               	clrf	(UpdateCfList@frequency+1)& (0+255),b
 12917  003204  6B77               	clrf	(UpdateCfList@frequency+2)& (0+255),b
 12918  003206  6B78               	clrf	(UpdateCfList@frequency+3)& (0+255),b
 12919                           
 12920                           ; BSR set to: 0
 12921                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 12922  003208  0E75               	movlw	low UpdateCfList@frequency
 12923  00320A  6F64               	movwf	memcpy@d1& (0+255),b
 12924  00320C  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 12925  00320E  517A               	movf	UpdateCfList@i& (0+255),w,b
 12926  003210  0D03               	mullw	3
 12927  003212  C070  F072         	movff	UpdateCfList@joinAccept,??_UpdateCfList
 12928  003216  C071  F073         	movff	UpdateCfList@joinAccept+1,??_UpdateCfList+1
 12929  00321A  50F3               	movf	prodl,w,c
 12930  00321C  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12931  00321E  50F4               	movf	prodh,w,c
 12932  003220  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12933  003222  0E0D               	movlw	13
 12934  003224  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12935  003226  0E00               	movlw	0
 12936  003228  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12937  00322A  5172               	movf	??_UpdateCfList& (0+255),w,b
 12938  00322C  6F66               	movwf	memcpy@s1& (0+255),b
 12939  00322E  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 12940  003230  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12941  003232  0E03               	movlw	3
 12942  003234  6F68               	movwf	memcpy@n& (0+255),b
 12943  003236  ECD5  F034         	call	_memcpy	;wreg free
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;lorawan_eu.c: 839: frequency *= 100;
 12947  00323A  C075  F064         	movff	UpdateCfList@frequency,___lmul@multiplier
 12948  00323E  C076  F065         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 12949  003242  C077  F066         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 12950  003246  C078  F067         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 12951  00324A  0E64               	movlw	100
 12952  00324C  6F68               	movwf	___lmul@multiplicand& (0+255),b
 12953  00324E  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 12954  003250  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 12955  003252  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 12956  003254  EC9D  F02F         	call	___lmul	;wreg free
 12957  003258  C064  F075         	movff	?___lmul,UpdateCfList@frequency
 12958  00325C  C065  F076         	movff	?___lmul+1,UpdateCfList@frequency+1
 12959  003260  C066  F077         	movff	?___lmul+2,UpdateCfList@frequency+2
 12960  003264  C067  F078         	movff	?___lmul+3,UpdateCfList@frequency+3
 12961                           
 12962                           ; BSR set to: 0
 12963                           ;lorawan_eu.c: 840: if (frequency != 0)
 12964  003268  5175               	movf	UpdateCfList@frequency& (0+255),w,b
 12965  00326A  1176               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 12966  00326C  1177               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 12967  00326E  1178               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 12968  003270  E101 D094          	bz	l14116
 12969                           
 12970                           ; BSR set to: 0
 12971                           ;lorawan_eu.c: 841: {
 12972                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 12973  003274  C075  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 12974  003278  C076  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 12975  00327C  C077  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 12976  003280  C078  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 12977  003284  EC4F  F034         	call	_ValidateFrequency	;wreg free
 12978  003288  0900               	iorlw	0
 12979  00328A  E001 D08C          	bnz	l14118
 12980                           
 12981                           ; BSR set to: 0
 12982                           ;lorawan_eu.c: 843: {
 12983                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 12984  00328E  517A               	movf	UpdateCfList@i& (0+255),w,b
 12985  003290  0D0E               	mullw	14
 12986  003292  0E00               	movlw	low _Channels
 12987  003294  6F72               	movwf	??_UpdateCfList& (0+255),b
 12988  003296  0E04               	movlw	high _Channels
 12989  003298  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 12990  00329A  50F3               	movf	prodl,w,c
 12991  00329C  2772               	addwf	??_UpdateCfList& (0+255),f,b
 12992  00329E  50F4               	movf	prodh,w,c
 12993  0032A0  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 12994  0032A2  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 12995  0032A4  0D0E               	mullw	14
 12996  0032A6  50F3               	movf	prodl,w,c
 12997  0032A8  2572               	addwf	??_UpdateCfList& (0+255),w,b
 12998  0032AA  6ED9               	movwf	fsr2l,c
 12999  0032AC  50F4               	movf	prodh,w,c
 13000  0032AE  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 13001  0032B0  6EDA               	movwf	fsr2h,c
 13002  0032B2  C075  FFDE         	movff	UpdateCfList@frequency,postinc2
 13003  0032B6  C076  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 13004  0032BA  C077  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 13005  0032BE  C078  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 13006                           
 13007                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 13008  0032C2  517A               	movf	UpdateCfList@i& (0+255),w,b
 13009  0032C4  0D0E               	mullw	14
 13010  0032C6  0E00               	movlw	low _Channels
 13011  0032C8  6F72               	movwf	??_UpdateCfList& (0+255),b
 13012  0032CA  0E04               	movlw	high _Channels
 13013  0032CC  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 13014  0032CE  0E05               	movlw	5
 13015  0032D0  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13016  0032D2  0E00               	movlw	0
 13017  0032D4  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13018  0032D6  50F3               	movf	prodl,w,c
 13019  0032D8  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13020  0032DA  50F4               	movf	prodh,w,c
 13021  0032DC  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13022  0032DE  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 13023  0032E0  0D0E               	mullw	14
 13024  0032E2  50F3               	movf	prodl,w,c
 13025  0032E4  2572               	addwf	??_UpdateCfList& (0+255),w,b
 13026  0032E6  6ED9               	movwf	fsr2l,c
 13027  0032E8  50F4               	movf	prodh,w,c
 13028  0032EA  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 13029  0032EC  6EDA               	movwf	fsr2h,c
 13030  0032EE  50DF               	movf	223,w,c
 13031  0032F0  0B0F               	andlw	-241
 13032  0032F2  0950               	iorlw	80
 13033  0032F4  6EDF               	movwf	223,c
 13034                           
 13035                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 13036  0032F6  0100               	movlb	0	; () banked
 13037  0032F8  517A               	movf	UpdateCfList@i& (0+255),w,b
 13038  0032FA  0D0E               	mullw	14
 13039  0032FC  0E00               	movlw	low _Channels
 13040  0032FE  6F72               	movwf	??_UpdateCfList& (0+255),b
 13041  003300  0E04               	movlw	high _Channels
 13042  003302  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 13043  003304  0E05               	movlw	5
 13044  003306  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13045  003308  0E00               	movlw	0
 13046  00330A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13047  00330C  50F3               	movf	prodl,w,c
 13048  00330E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13049  003310  50F4               	movf	prodh,w,c
 13050  003312  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13051  003314  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 13052  003316  0D0E               	mullw	14
 13053  003318  50F3               	movf	prodl,w,c
 13054  00331A  2572               	addwf	??_UpdateCfList& (0+255),w,b
 13055  00331C  6ED9               	movwf	fsr2l,c
 13056  00331E  50F4               	movf	prodh,w,c
 13057  003320  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 13058  003322  6EDA               	movwf	fsr2h,c
 13059  003324  0EF0               	movlw	-16
 13060  003326  16DF               	andwf	223,f,c
 13061                           
 13062                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 13063  003328  517A               	movf	UpdateCfList@i& (0+255),w,b
 13064  00332A  0D0E               	mullw	14
 13065  00332C  0E00               	movlw	low _Channels
 13066  00332E  6F72               	movwf	??_UpdateCfList& (0+255),b
 13067  003330  0E04               	movlw	high _Channels
 13068  003332  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 13069  003334  0E06               	movlw	6
 13070  003336  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13071  003338  0E00               	movlw	0
 13072  00333A  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13073  00333C  50F3               	movf	prodl,w,c
 13074  00333E  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13075  003340  50F4               	movf	prodh,w,c
 13076  003342  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13077  003344  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 13078  003346  0D0E               	mullw	14
 13079  003348  50F3               	movf	prodl,w,c
 13080  00334A  2572               	addwf	??_UpdateCfList& (0+255),w,b
 13081  00334C  6ED9               	movwf	fsr2l,c
 13082  00334E  50F4               	movf	prodh,w,c
 13083  003350  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 13084  003352  6EDA               	movwf	fsr2h,c
 13085  003354  0EE7               	movlw	231
 13086  003356  6EDE               	movwf	postinc2,c
 13087  003358  0E03               	movlw	3
 13088  00335A  6EDD               	movwf	postdec2,c
 13089                           
 13090                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 13091  00335C  517A               	movf	UpdateCfList@i& (0+255),w,b
 13092  00335E  0D0E               	mullw	14
 13093  003360  0E00               	movlw	low _Channels
 13094  003362  6F72               	movwf	??_UpdateCfList& (0+255),b
 13095  003364  0E04               	movlw	high _Channels
 13096  003366  6F73               	movwf	(??_UpdateCfList+1)& (0+255),b
 13097  003368  0E0D               	movlw	13
 13098  00336A  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13099  00336C  0E00               	movlw	0
 13100  00336E  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13101  003370  50F3               	movf	prodl,w,c
 13102  003372  2772               	addwf	??_UpdateCfList& (0+255),f,b
 13103  003374  50F4               	movf	prodh,w,c
 13104  003376  2373               	addwfc	(??_UpdateCfList+1)& (0+255),f,b
 13105  003378  5179               	movf	UpdateCfList@channelIndex& (0+255),w,b
 13106  00337A  0D0E               	mullw	14
 13107  00337C  50F3               	movf	prodl,w,c
 13108  00337E  2572               	addwf	??_UpdateCfList& (0+255),w,b
 13109  003380  6ED9               	movwf	fsr2l,c
 13110  003382  50F4               	movf	prodh,w,c
 13111  003384  2173               	addwfc	(??_UpdateCfList+1)& (0+255),w,b
 13112  003386  6EDA               	movwf	fsr2h,c
 13113  003388  68DF               	setf	indf2,c
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 13117  00338A  0E01               	movlw	1
 13118  00338C  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 13119  00338E  517A               	movf	UpdateCfList@i& (0+255),w,b
 13120  003390  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13121  003392  EC53  F038         	call	_LORAWAN_SetChannelIdStatus
 13122                           
 13123                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 13124  003396  0102               	movlb	2	; () banked
 13125  003398  8703               	bsf	(_loRa+3)& (0+255),3,b
 13126  00339A  D005               	goto	l14118
 13127  00339C                     l14116:
 13128                           
 13129                           ; BSR set to: 0
 13130                           ;lorawan_eu.c: 853: else
 13131                           ;lorawan_eu.c: 854: {
 13132                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 13133  00339C  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 13134  00339E  517A               	movf	UpdateCfList@i& (0+255),w,b
 13135  0033A0  2579               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 13136  0033A2  EC53  F038         	call	_LORAWAN_SetChannelIdStatus
 13137  0033A6                     l14118:
 13138  0033A6  0100               	movlb	0	; () banked
 13139  0033A8  2B7A               	incf	UpdateCfList@i& (0+255),f,b
 13140                           
 13141                           ; BSR set to: 0
 13142  0033AA  0E04               	movlw	4
 13143  0033AC  657A               	cpfsgt	UpdateCfList@i& (0+255),b
 13144  0033AE  D728               	goto	l1153
 13145                           
 13146                           ; BSR set to: 0
 13147                           ;lorawan_eu.c: 856: }
 13148                           ;lorawan_eu.c: 857: }
 13149                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 13150  0033B0  0102               	movlb	2	; () banked
 13151  0033B2  8703               	bsf	(_loRa+3)& (0+255),3,b
 13152  0033B4  0C04               	retlw	4	;funcret
 13153  0033B6                     __end_of_UpdateCfList:
 13154                           	opt stack 0
 13155                           tosu	equ	0xFFF
 13156                           tosh	equ	0xFFE
 13157                           tosl	equ	0xFFD
 13158                           pclath	equ	0xFFA
 13159                           tblptru	equ	0xFF8
 13160                           tblptrh	equ	0xFF7
 13161                           tblptrl	equ	0xFF6
 13162                           tablat	equ	0xFF5
 13163                           prodh	equ	0xFF4
 13164                           prodl	equ	0xFF3
 13165                           intcon	equ	0xFF2
 13166                           intcon2	equ	0xFF1
 13167                           intcon3	equ	0xFF0
 13168                           postinc0	equ	0xFEE
 13169                           wreg	equ	0xFE8
 13170                           postinc1	equ	0xFE6
 13171                           postdec1	equ	0xFE5
 13172                           plusw1	equ	0xFE3
 13173                           fsr1h	equ	0xFE2
 13174                           fsr1l	equ	0xFE1
 13175                           indf2	equ	0xFDF
 13176                           postinc2	equ	0xFDE
 13177                           postdec2	equ	0xFDD
 13178                           fsr2h	equ	0xFDA
 13179                           fsr2l	equ	0xFD9
 13180                           status	equ	0xFD8
 13181                           
 13182 ;; *************** function _StartReTxTimer *****************
 13183 ;; Defined at:
 13184 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13185 ;; Parameters:    Size  Location     Type
 13186 ;;		None
 13187 ;; Auto vars:     Size  Location     Type
 13188 ;;  minim           4   58[BANK0 ] unsigned long 
 13189 ;;  i               1   62[BANK0 ] unsigned char 
 13190 ;; Return value:  Size  Location     Type
 13191 ;;                  1    wreg      void 
 13192 ;; Registers used:
 13193 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13194 ;; Tracked objects:
 13195 ;;		On entry : E/0
 13196 ;;		On exit  : F/0
 13197 ;;		Unchanged: 0/0
 13198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13200 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13201 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13202 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13203 ;;Total ram usage:        9 bytes
 13204 ;; Hardware stack levels used:    1
 13205 ;; Hardware stack levels required when called:   11
 13206 ;; This function calls:
 13207 ;;		_SwTimerSetTimeout
 13208 ;;		_SwTimerStart
 13209 ;;		___lldiv
 13210 ;; This function is called by:
 13211 ;;		_LORAWAN_RxDone
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215                           	psect	text65
 13216  00456A                     __ptext65:
 13217                           	opt stack 0
 13218  00456A                     _StartReTxTimer:
 13219                           	opt stack 15
 13220                           
 13221                           ;lorawan_eu.c: 904: uint8_t i;
 13222                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 13223                           
 13224                           ;incstack = 0
 13225  00456A  0100               	movlb	0	; () banked
 13226  00456C  699A               	setf	StartReTxTimer@minim& (0+255),b
 13227  00456E  699B               	setf	(StartReTxTimer@minim+1)& (0+255),b
 13228  004570  699C               	setf	(StartReTxTimer@minim+2)& (0+255),b
 13229  004572  699D               	setf	(StartReTxTimer@minim+3)& (0+255),b
 13230                           
 13231                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 13232  004574  6B9E               	clrf	StartReTxTimer@i& (0+255),b
 13233  004576  D05B               	goto	l14146
 13234  004578                     l14132:
 13235                           
 13236                           ; BSR set to: 2
 13237                           ;lorawan_eu.c: 908: {
 13238                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 13239  004578  0100               	movlb	0	; () banked
 13240  00457A  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13241  00457C  0D0E               	mullw	14
 13242  00457E  0E04               	movlw	low (_Channels+4)
 13243  004580  24F3               	addwf	prodl,w,c
 13244  004582  6ED9               	movwf	fsr2l,c
 13245  004584  0E04               	movlw	high (_Channels+4)
 13246  004586  20F4               	addwfc	prodh,w,c
 13247  004588  6EDA               	movwf	fsr2h,c
 13248  00458A  04DE               	decf	postinc2,w,c
 13249  00458C  E14E               	bnz	l14144
 13250                           
 13251                           ; BSR set to: 0
 13252  00458E  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13253  004590  0D0E               	mullw	14
 13254  004592  0E08               	movlw	low (_Channels+8)
 13255  004594  24F3               	addwf	prodl,w,c
 13256  004596  6ED9               	movwf	fsr2l,c
 13257  004598  0E04               	movlw	high (_Channels+8)
 13258  00459A  20F4               	addwfc	prodh,w,c
 13259  00459C  6EDA               	movwf	fsr2h,c
 13260  00459E  50DE               	movf	postinc2,w,c
 13261  0045A0  10DE               	iorwf	postinc2,w,c
 13262  0045A2  10DE               	iorwf	postinc2,w,c
 13263  0045A4  10DE               	iorwf	postinc2,w,c
 13264  0045A6  E041               	bz	l14144
 13265                           
 13266                           ; BSR set to: 0
 13267  0045A8  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13268  0045AA  0D0E               	mullw	14
 13269  0045AC  0E08               	movlw	low (_Channels+8)
 13270  0045AE  24F3               	addwf	prodl,w,c
 13271  0045B0  6ED9               	movwf	fsr2l,c
 13272  0045B2  0E04               	movlw	high (_Channels+8)
 13273  0045B4  20F4               	addwfc	prodh,w,c
 13274  0045B6  6EDA               	movwf	fsr2h,c
 13275  0045B8  50DE               	movf	postinc2,w,c
 13276  0045BA  5D9A               	subwf	StartReTxTimer@minim& (0+255),w,b
 13277  0045BC  50DE               	movf	postinc2,w,c
 13278  0045BE  599B               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 13279  0045C0  50DE               	movf	postinc2,w,c
 13280  0045C2  599C               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 13281  0045C4  50DE               	movf	postinc2,w,c
 13282  0045C6  599D               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 13283  0045C8  E330               	bnc	l14144
 13284                           
 13285                           ; BSR set to: 0
 13286  0045CA  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13287  0045CC  0D0E               	mullw	14
 13288  0045CE  0E05               	movlw	low (_Channels+5)
 13289  0045D0  24F3               	addwf	prodl,w,c
 13290  0045D2  6ED9               	movwf	fsr2l,c
 13291  0045D4  0E04               	movlw	high (_Channels+5)
 13292  0045D6  20F4               	addwfc	prodh,w,c
 13293  0045D8  6EDA               	movwf	fsr2h,c
 13294  0045DA  50DF               	movf	223,w,c
 13295  0045DC  0B0F               	andlw	15
 13296  0045DE  6F96               	movwf	??_StartReTxTimer& (0+255),b
 13297  0045E0  5196               	movf	??_StartReTxTimer& (0+255),w,b
 13298  0045E2  0102               	movlb	2	; () banked
 13299  0045E4  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 13300  0045E6  E321               	bnc	l14144
 13301                           
 13302                           ; BSR set to: 2
 13303  0045E8  0100               	movlb	0	; () banked
 13304  0045EA  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13305  0045EC  0D0E               	mullw	14
 13306  0045EE  0E05               	movlw	low (_Channels+5)
 13307  0045F0  24F3               	addwf	prodl,w,c
 13308  0045F2  6ED9               	movwf	fsr2l,c
 13309  0045F4  0E04               	movlw	high (_Channels+5)
 13310  0045F6  20F4               	addwfc	prodh,w,c
 13311  0045F8  6EDA               	movwf	fsr2h,c
 13312  0045FA  38DF               	swapf	223,w,c
 13313  0045FC  0B0F               	andlw	15
 13314  0045FE  6F96               	movwf	??_StartReTxTimer& (0+255),b
 13315  004600  0102               	movlb	2	; () banked
 13316  004602  51DF               	movf	(_loRa+223)& (0+255),w,b
 13317  004604  0100               	movlb	0	; () banked
 13318  004606  5D96               	subwf	??_StartReTxTimer& (0+255),w,b
 13319  004608  E310               	bnc	l14144
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;lorawan_eu.c: 910: {
 13323                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 13324  00460A  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13325  00460C  0D0E               	mullw	14
 13326  00460E  0E08               	movlw	low (_Channels+8)
 13327  004610  24F3               	addwf	prodl,w,c
 13328  004612  6ED9               	movwf	fsr2l,c
 13329  004614  0E04               	movlw	high (_Channels+8)
 13330  004616  20F4               	addwfc	prodh,w,c
 13331  004618  6EDA               	movwf	fsr2h,c
 13332  00461A  CFDE F09A          	movff	postinc2,StartReTxTimer@minim
 13333  00461E  CFDE F09B          	movff	postinc2,StartReTxTimer@minim+1
 13334  004622  CFDE F09C          	movff	postinc2,StartReTxTimer@minim+2
 13335  004626  CFDE F09D          	movff	postinc2,StartReTxTimer@minim+3
 13336  00462A                     l14144:
 13337  00462A  0100               	movlb	0	; () banked
 13338  00462C  2B9E               	incf	StartReTxTimer@i& (0+255),f,b
 13339  00462E                     l14146:
 13340                           
 13341                           ; BSR set to: 0
 13342  00462E  519E               	movf	StartReTxTimer@i& (0+255),w,b
 13343  004630  0102               	movlb	2	; () banked
 13344  004632  5DED               	subwf	(_loRa+237)& (0+255),w,b
 13345  004634  E2A1               	bc	l14132
 13346                           
 13347                           ; BSR set to: 2
 13348                           ;lorawan_eu.c: 912: }
 13349                           ;lorawan_eu.c: 913: }
 13350                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13351  004636  5102               	movf	(_loRa+2)& (0+255),w,b
 13352  004638  0BF0               	andlw	-16
 13353  00463A  0906               	iorlw	6
 13354  00463C  6F02               	movwf	(_loRa+2)& (0+255),b
 13355                           
 13356                           ; BSR set to: 2
 13357                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 13358  00463E  C09A  F096         	movff	StartReTxTimer@minim,??_StartReTxTimer
 13359  004642  C09B  F097         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 13360  004646  C09C  F098         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 13361  00464A  C09D  F099         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 13362  00464E  0E0C               	movlw	12
 13363  004650                     u15725:
 13364  004650  90D8               	bcf	status,0,c
 13365  004652  0100               	movlb	0	; () banked
 13366  004654  3796               	rlcf	??_StartReTxTimer& (0+255),f,b
 13367  004656  3797               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 13368  004658  3798               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 13369  00465A  3799               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 13370  00465C  2EE8               	decfsz	wreg,f,c
 13371  00465E  D7F8               	goto	u15725
 13372  004660  C096  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 13373  004664  C097  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 13374  004668  C098  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 13375  00466C  C099  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 13376  004670  0E7D               	movlw	125
 13377  004672  6F68               	movwf	___lldiv@divisor& (0+255),b
 13378  004674  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 13379  004676  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 13380  004678  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 13381  00467A  EC1B  F031         	call	___lldiv	;wreg free
 13382  00467E  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13383  004682  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13384  004686  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13385  00468A  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13386  00468E  0102               	movlb	2	; () banked
 13387  004690  51E6               	movf	(_loRa+230)& (0+255),w,b
 13388  004692  EC5E  F037         	call	_SwTimerSetTimeout
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 13392  004696  0102               	movlb	2	; () banked
 13393  004698  51E6               	movf	(_loRa+230)& (0+255),w,b
 13394  00469A  EF59  F02F         	goto	_SwTimerStart
 13395  00469E                     __end_of_StartReTxTimer:
 13396                           	opt stack 0
 13397                           tosu	equ	0xFFF
 13398                           tosh	equ	0xFFE
 13399                           tosl	equ	0xFFD
 13400                           pclath	equ	0xFFA
 13401                           tblptru	equ	0xFF8
 13402                           tblptrh	equ	0xFF7
 13403                           tblptrl	equ	0xFF6
 13404                           tablat	equ	0xFF5
 13405                           prodh	equ	0xFF4
 13406                           prodl	equ	0xFF3
 13407                           intcon	equ	0xFF2
 13408                           intcon2	equ	0xFF1
 13409                           intcon3	equ	0xFF0
 13410                           postinc0	equ	0xFEE
 13411                           wreg	equ	0xFE8
 13412                           postinc1	equ	0xFE6
 13413                           postdec1	equ	0xFE5
 13414                           plusw1	equ	0xFE3
 13415                           fsr1h	equ	0xFE2
 13416                           fsr1l	equ	0xFE1
 13417                           indf2	equ	0xFDF
 13418                           postinc2	equ	0xFDE
 13419                           postdec2	equ	0xFDD
 13420                           fsr2h	equ	0xFDA
 13421                           fsr2l	equ	0xFD9
 13422                           status	equ	0xFD8
 13423                           
 13424 ;; *************** function _SetReceptionNotOkState *****************
 13425 ;; Defined at:
 13426 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13427 ;; Parameters:    Size  Location     Type
 13428 ;;		None
 13429 ;; Auto vars:     Size  Location     Type
 13430 ;;		None
 13431 ;; Return value:  Size  Location     Type
 13432 ;;                  1    wreg      void 
 13433 ;; Registers used:
 13434 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13435 ;; Tracked objects:
 13436 ;;		On entry : E/2
 13437 ;;		On exit  : C/0
 13438 ;;		Unchanged: 0/0
 13439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13444 ;;Total ram usage:        0 bytes
 13445 ;; Hardware stack levels used:    1
 13446 ;; Hardware stack levels required when called:   14
 13447 ;; This function calls:
 13448 ;;		_LORAWAN_EnterContinuousReceive
 13449 ;;		_RxDataDone
 13450 ;; This function is called by:
 13451 ;;		_LORAWAN_RxDone
 13452 ;; This function uses a non-reentrant model
 13453 ;;
 13454                           
 13455                           	psect	text66
 13456  00645C                     __ptext66:
 13457                           	opt stack 0
 13458  00645C                     _SetReceptionNotOkState:
 13459                           	opt stack 12
 13460                           
 13461                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 13462                           
 13463                           ; BSR set to: 0
 13464                           ;incstack = 0
 13465  00645C  0102               	movlb	2	; () banked
 13466  00645E  5102               	movf	(_loRa+2)& (0+255),w,b
 13467  006460  0B0F               	andlw	15
 13468  006462  0A05               	xorlw	5
 13469  006464  E006               	bz	l2262
 13470                           
 13471                           ; BSR set to: 2
 13472  006466  5102               	movf	(_loRa+2)& (0+255),w,b
 13473  006468  0B0F               	andlw	15
 13474  00646A  0A03               	xorlw	3
 13475  00646C  E121               	bnz	l14310
 13476                           
 13477                           ; BSR set to: 2
 13478  00646E  51F1               	movf	(_loRa+241)& (0+255),w,b
 13479  006470  E01F               	bz	l14310
 13480  006472                     l2262:
 13481                           
 13482                           ; BSR set to: 2
 13483                           ;lorawan.c: 2000: {
 13484                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13485  006472  9100               	bcf	_loRa& (0+255),0,b
 13486                           
 13487                           ; BSR set to: 2
 13488                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 13489  006474  0EF0               	movlw	-16
 13490  006476  1702               	andwf	(_loRa+2)& (0+255),f,b
 13491                           
 13492                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 13493  006478  5112               	movf	(_loRa+18)& (0+255),w,b
 13494  00647A  E118               	bnz	l14308
 13495                           
 13496                           ; BSR set to: 2
 13497  00647C  0101               	movlb	1	; () banked
 13498  00647E  5172               	movf	_rxPayload& (0+255),w,b
 13499  006480  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 13500  006482  E014               	bz	l14308
 13501                           
 13502                           ; BSR set to: 1
 13503                           ;lorawan.c: 2005: {
 13504                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 13505  006484  0102               	movlb	2	; () banked
 13506  006486  9B00               	bcf	_loRa& (0+255),5,b
 13507                           
 13508                           ; BSR set to: 2
 13509                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 13510  006488  0E00               	movlw	0
 13511  00648A  0100               	movlb	0	; () banked
 13512  00648C  6B64               	clrf	RxDataDone@pData& (0+255),b
 13513  00648E  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 13514  006490  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 13515  006492  6B67               	clrf	RxDataDone@status& (0+255),b
 13516  006494  D801               	call	u16048
 13517  006496  D00A               	goto	l14308
 13518  006498                     u16048:
 13519  006498  0005               	push	
 13520  00649A  6EFA               	movwf	pclath,c
 13521  00649C  0101               	movlb	1	; () banked
 13522  00649E  5172               	movf	_rxPayload& (0+255),w,b
 13523  0064A0  6EFD               	movwf	tosl,c
 13524  0064A2  5173               	movf	(_rxPayload+1)& (0+255),w,b
 13525  0064A4  6EFE               	movwf	tosh,c
 13526  0064A6  6AFF               	clrf	tosu,c
 13527  0064A8  50FA               	movf	pclath,w,c
 13528  0064AA  0012               	return		;indir
 13529  0064AC                     l14308:
 13530                           
 13531                           ;lorawan.c: 2008: }
 13532                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 13533  0064AC  0102               	movlb	2	; () banked
 13534  0064AE  9303               	bcf	(_loRa+3)& (0+255),1,b
 13535  0064B0                     l14310:
 13536                           
 13537                           ; BSR set to: 2
 13538                           ;lorawan.c: 2010: }
 13539                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 13540  0064B0  0E02               	movlw	2
 13541  0064B2  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13542  0064B4  A4D8               	btfss	status,2,c
 13543  0064B6  0012               	return	
 13544                           
 13545                           ; BSR set to: 2
 13546                           ;lorawan.c: 2013: {
 13547                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13548  0064B8  5102               	movf	(_loRa+2)& (0+255),w,b
 13549  0064BA  0BF0               	andlw	-16
 13550  0064BC  0909               	iorlw	9
 13551  0064BE  6F02               	movwf	(_loRa+2)& (0+255),b
 13552                           
 13553                           ; BSR set to: 2
 13554                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 13555  0064C0  EF62  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 13556  0064C4                     __end_of_SetReceptionNotOkState:
 13557                           	opt stack 0
 13558                           tosu	equ	0xFFF
 13559                           tosh	equ	0xFFE
 13560                           tosl	equ	0xFFD
 13561                           pclath	equ	0xFFA
 13562                           tblptru	equ	0xFF8
 13563                           tblptrh	equ	0xFF7
 13564                           tblptrl	equ	0xFF6
 13565                           tablat	equ	0xFF5
 13566                           prodh	equ	0xFF4
 13567                           prodl	equ	0xFF3
 13568                           intcon	equ	0xFF2
 13569                           intcon2	equ	0xFF1
 13570                           intcon3	equ	0xFF0
 13571                           postinc0	equ	0xFEE
 13572                           wreg	equ	0xFE8
 13573                           postinc1	equ	0xFE6
 13574                           postdec1	equ	0xFE5
 13575                           plusw1	equ	0xFE3
 13576                           fsr1h	equ	0xFE2
 13577                           fsr1l	equ	0xFE1
 13578                           indf2	equ	0xFDF
 13579                           postinc2	equ	0xFDE
 13580                           postdec2	equ	0xFDD
 13581                           fsr2h	equ	0xFDA
 13582                           fsr2l	equ	0xFD9
 13583                           status	equ	0xFD8
 13584                           
 13585 ;; *************** function _SetJoinFailState *****************
 13586 ;; Defined at:
 13587 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13588 ;; Parameters:    Size  Location     Type
 13589 ;;		None
 13590 ;; Auto vars:     Size  Location     Type
 13591 ;;		None
 13592 ;; Return value:  Size  Location     Type
 13593 ;;                  1    wreg      void 
 13594 ;; Registers used:
 13595 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13596 ;; Tracked objects:
 13597 ;;		On entry : F/2
 13598 ;;		On exit  : F/1
 13599 ;;		Unchanged: 0/0
 13600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13601 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13604 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13605 ;;Total ram usage:        0 bytes
 13606 ;; Hardware stack levels used:    1
 13607 ;; Hardware stack levels required when called:   11
 13608 ;; This function calls:
 13609 ;;		_RxJoinResponse
 13610 ;; This function is called by:
 13611 ;;		_LORAWAN_RxTimeout
 13612 ;;		_LORAWAN_RxDone
 13613 ;; This function uses a non-reentrant model
 13614 ;;
 13615                           
 13616                           	psect	text67
 13617  0074F0                     __ptext67:
 13618                           	opt stack 0
 13619  0074F0                     _SetJoinFailState:
 13620                           	opt stack 15
 13621                           
 13622                           ; BSR set to: 2
 13623                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 13624                           
 13625                           ;incstack = 0
 13626  0074F0  9902               	bcf	(_loRa+2)& (0+255),4,b
 13627                           
 13628                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 13629  0074F2  9500               	bcf	_loRa& (0+255),2,b
 13630                           
 13631                           ; BSR set to: 2
 13632                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 13633  0074F4  0EF0               	movlw	-16
 13634  0074F6  1702               	andwf	(_loRa+2)& (0+255),f,b
 13635                           
 13636                           ; BSR set to: 2
 13637                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 13638  0074F8  0101               	movlb	1	; () banked
 13639  0074FA  5174               	movf	(_rxPayload+2)& (0+255),w,b
 13640  0074FC  1175               	iorwf	(_rxPayload+3)& (0+255),w,b
 13641  0074FE  B4D8               	btfsc	status,2,c
 13642  007500  0012               	return	
 13643                           
 13644                           ; BSR set to: 1
 13645                           ;lorawan.c: 1110: {
 13646                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 13647  007502  0005               	push	
 13648  007504  6EFA               	movwf	pclath,c
 13649  007506  5174               	movf	(_rxPayload+2)& (0+255),w,b
 13650  007508  6EFD               	movwf	tosl,c
 13651  00750A  5175               	movf	(_rxPayload+3)& (0+255),w,b
 13652  00750C  6EFE               	movwf	tosh,c
 13653  00750E  6AFF               	clrf	tosu,c
 13654  007510  50FA               	movf	pclath,w,c
 13655  007512  0C00               	retlw	0	;indir
 13656  007514                     __end_of_SetJoinFailState:
 13657                           	opt stack 0
 13658                           tosu	equ	0xFFF
 13659                           tosh	equ	0xFFE
 13660                           tosl	equ	0xFFD
 13661                           pclath	equ	0xFFA
 13662                           tblptru	equ	0xFF8
 13663                           tblptrh	equ	0xFF7
 13664                           tblptrl	equ	0xFF6
 13665                           tablat	equ	0xFF5
 13666                           prodh	equ	0xFF4
 13667                           prodl	equ	0xFF3
 13668                           intcon	equ	0xFF2
 13669                           intcon2	equ	0xFF1
 13670                           intcon3	equ	0xFF0
 13671                           postinc0	equ	0xFEE
 13672                           wreg	equ	0xFE8
 13673                           postinc1	equ	0xFE6
 13674                           postdec1	equ	0xFE5
 13675                           plusw1	equ	0xFE3
 13676                           fsr1h	equ	0xFE2
 13677                           fsr1l	equ	0xFE1
 13678                           indf2	equ	0xFDF
 13679                           postinc2	equ	0xFDE
 13680                           postdec2	equ	0xFDD
 13681                           fsr2h	equ	0xFDA
 13682                           fsr2l	equ	0xFD9
 13683                           status	equ	0xFD8
 13684                           
 13685 ;; *************** function _RxJoinResponse *****************
 13686 ;; Defined at:
 13687 ;;		line 95 in file "main.c"
 13688 ;; Parameters:    Size  Location     Type
 13689 ;;  status          1    wreg     unsigned char 
 13690 ;; Auto vars:     Size  Location     Type
 13691 ;;  status          1    0[COMRAM] unsigned char 
 13692 ;; Return value:  Size  Location     Type
 13693 ;;                  1    wreg      void 
 13694 ;; Registers used:
 13695 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13696 ;; Tracked objects:
 13697 ;;		On entry : F/1
 13698 ;;		On exit  : F/1
 13699 ;;		Unchanged: 0/0
 13700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13705 ;;Total ram usage:        0 bytes
 13706 ;; Hardware stack levels used:    1
 13707 ;; Hardware stack levels required when called:   10
 13708 ;; This function calls:
 13709 ;;		_printf
 13710 ;; This function is called by:
 13711 ;;		_main
 13712 ;;		_SetJoinFailState
 13713 ;;		_UpdateJoinSuccessState
 13714 ;; This function uses a non-reentrant model
 13715 ;;
 13716                           
 13717                           	psect	text68
 13718  007848                     __ptext68:
 13719                           	opt stack 0
 13720  007848                     _RxJoinResponse:
 13721                           	opt stack 17
 13722                           
 13723                           ; BSR set to: 1
 13724                           ;main.c: 97: printf("Callback function! LoRaWAN Initialized successfully\n\r");
 13725                           
 13726                           ; BSR set to: 1
 13727                           ;incstack = 0
 13728  007848  0EC1               	movlw	low STR_11
 13729  00784A  0100               	movlb	0	; () banked
 13730  00784C  6F77               	movwf	printf@f& (0+255),b
 13731  00784E  0EFE               	movlw	high STR_11
 13732  007850  6F78               	movwf	(printf@f+1)& (0+255),b
 13733  007852  EC7C  F024         	call	_printf
 13734                           
 13735                           ; BSR set to: 0
 13736                           ;main.c: 98: JoinedServer = 1;
 13737  007856  0E01               	movlw	1
 13738  007858  0101               	movlb	1	; () banked
 13739  00785A  6F76               	movwf	_JoinedServer& (0+255),b
 13740                           
 13741                           ; BSR set to: 1
 13742  00785C  9889               	bcf	3977,4,c	;volatile
 13743                           
 13744                           ; BSR set to: 1
 13745  00785E  0C01               	retlw	1	;funcret
 13746  007860                     __end_of_RxJoinResponse:
 13747                           	opt stack 0
 13748                           tosu	equ	0xFFF
 13749                           tosh	equ	0xFFE
 13750                           tosl	equ	0xFFD
 13751                           pclath	equ	0xFFA
 13752                           tblptru	equ	0xFF8
 13753                           tblptrh	equ	0xFF7
 13754                           tblptrl	equ	0xFF6
 13755                           tablat	equ	0xFF5
 13756                           prodh	equ	0xFF4
 13757                           prodl	equ	0xFF3
 13758                           intcon	equ	0xFF2
 13759                           intcon2	equ	0xFF1
 13760                           intcon3	equ	0xFF0
 13761                           postinc0	equ	0xFEE
 13762                           wreg	equ	0xFE8
 13763                           postinc1	equ	0xFE6
 13764                           postdec1	equ	0xFE5
 13765                           plusw1	equ	0xFE3
 13766                           fsr1h	equ	0xFE2
 13767                           fsr1l	equ	0xFE1
 13768                           indf2	equ	0xFDF
 13769                           postinc2	equ	0xFDE
 13770                           postdec2	equ	0xFDD
 13771                           fsr2h	equ	0xFDA
 13772                           fsr2l	equ	0xFD9
 13773                           status	equ	0xFD8
 13774                           
 13775 ;; *************** function _printf *****************
 13776 ;; Defined at:
 13777 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
 13778 ;; Parameters:    Size  Location     Type
 13779 ;;  f               2   23[BANK0 ] PTR const unsigned char 
 13780 ;;		 -> STR_12(41), STR_11(54), STR_10(28), STR_9(13), 
 13781 ;;		 -> STR_8(18), STR_7(29), STR_6(21), STR_5(32), 
 13782 ;;		 -> STR_4(28), STR_3(29), STR_2(30), STR_1(23), 
 13783 ;; Auto vars:     Size  Location     Type
 13784 ;;  tmpval          4    0        struct .
 13785 ;;  cp              3    0        PTR const unsigned char 
 13786 ;;  val             2   33[BANK0 ] unsigned int 
 13787 ;;  len             2    0        unsigned int 
 13788 ;;  c               1   35[BANK0 ] char 
 13789 ;;  prec            1   32[BANK0 ] char 
 13790 ;;  flag            1   31[BANK0 ] unsigned char 
 13791 ;;  ap              1   30[BANK0 ] PTR void [1]
 13792 ;;		 -> ?_printf(2), 
 13793 ;; Return value:  Size  Location     Type
 13794 ;;                  2   23[BANK0 ] int 
 13795 ;; Registers used:
 13796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13797 ;; Tracked objects:
 13798 ;;		On entry : F/0
 13799 ;;		On exit  : F/0
 13800 ;;		Unchanged: 0/0
 13801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13802 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13803 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13804 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13805 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13806 ;;Total ram usage:       13 bytes
 13807 ;; Hardware stack levels used:    1
 13808 ;; Hardware stack levels required when called:    9
 13809 ;; This function calls:
 13810 ;;		___lwdiv
 13811 ;;		___lwmod
 13812 ;;		_putch
 13813 ;; This function is called by:
 13814 ;;		_main
 13815 ;;		_RxJoinResponse
 13816 ;;		_readAndSend
 13817 ;; This function uses a non-reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text69
 13821  0048F8                     __ptext69:
 13822                           	opt stack 0
 13823  0048F8                     _printf:
 13824                           	opt stack 20
 13825                           
 13826                           ; BSR set to: 0
 13827                           ;doprnt.c: 466: va_list ap;
 13828                           ;doprnt.c: 499: signed char c;
 13829                           ;doprnt.c: 506: signed char prec;
 13830                           ;doprnt.c: 508: unsigned char flag;
 13831                           ;doprnt.c: 523: union {
 13832                           ;doprnt.c: 524: unsigned long vd;
 13833                           ;doprnt.c: 525: double integ;
 13834                           ;doprnt.c: 526: } tmpval;
 13835                           ;doprnt.c: 528: unsigned int val;
 13836                           ;doprnt.c: 529: unsigned len;
 13837                           ;doprnt.c: 530: const char * cp;
 13838                           ;doprnt.c: 533: *ap = __va_start();
 13839                           
 13840                           ; BSR set to: 1
 13841                           ;incstack = 0
 13842  0048F8  0E79               	movlw	low (?_printf+2)
 13843  0048FA  6F7E               	movwf	printf@ap& (0+255),b
 13844                           
 13845                           ;doprnt.c: 536: while(c = *f++) {
 13846  0048FC  D077               	goto	l13580
 13847  0048FE                     l13536:
 13848                           
 13849                           ; BSR set to: 0
 13850                           ;doprnt.c: 538: if(c != '%')
 13851  0048FE  0E25               	movlw	37
 13852  004900  1983               	xorwf	printf@c& (0+255),w,b
 13853  004902  E004               	bz	l2753
 13854                           
 13855                           ; BSR set to: 0
 13856                           ;doprnt.c: 540: {
 13857                           ;doprnt.c: 541: (putch(c) );
 13858  004904  5183               	movf	printf@c& (0+255),w,b
 13859  004906  ECFB  F03C         	call	_putch
 13860                           
 13861                           ;doprnt.c: 542: continue;
 13862  00490A  D070               	goto	l13580
 13863  00490C                     l2753:
 13864                           
 13865                           ; BSR set to: 0
 13866                           ;doprnt.c: 543: }
 13867                           ;doprnt.c: 548: flag = 0;
 13868  00490C  6B7F               	clrf	printf@flag& (0+255),b
 13869                           
 13870                           ; BSR set to: 0
 13871                           
 13872                           ;doprnt.c: 635: switch(c = *f++) {
 13873  00490E  C077  FFF6         	movff	printf@f,tblptrl
 13874  004912  C078  FFF7         	movff	printf@f+1,tblptrh
 13875  004916  4B77               	infsnz	printf@f& (0+255),f,b
 13876  004918  2B78               	incf	(printf@f+1)& (0+255),f,b
 13877  00491A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 13878  00491A  6AF8               	clrf	tblptru,c
 13879  00491C                     	endif
 13880  00491C                     	if	0	;tblptru may be non-zero
 13881  00491C                     	endif
 13882  00491C  0008               	tblrd		*
 13883  00491E  CFF5 F083          	movff	tablat,printf@c
 13884  004922  5183               	movf	printf@c& (0+255),w,b
 13885                           
 13886                           ; Switch size 1, requested type "speed"
 13887                           ; Number of cases is 3, Range of values is 0 to 105
 13888                           ; switch strategies available:
 13889                           ; Name         Instructions Cycles
 13890                           ; simple_byte           10     6 (average)
 13891                           ;	Chosen strategy is simple_byte
 13892  004924  B4D8               	btfsc	status,2,c
 13893  004926  0012               	return	
 13894  004928  0A64               	xorlw	100	; case 100
 13895  00492A  E002               	bz	l13544
 13896  00492C  0A0D               	xorlw	13	; case 105
 13897  00492E  E15E               	bnz	l13580
 13898  004930                     l13544:
 13899                           
 13900                           ; BSR set to: 0
 13901                           ;doprnt.c: 1253: {
 13902                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 13903  004930  517E               	movf	printf@ap& (0+255),w,b
 13904  004932  6ED9               	movwf	fsr2l,c
 13905  004934  6ADA               	clrf	fsr2h,c
 13906  004936  CFDE F081          	movff	postinc2,printf@val
 13907  00493A  CFDD F082          	movff	postdec2,printf@val+1
 13908                           
 13909                           ; BSR set to: 0
 13910  00493E  0E02               	movlw	2
 13911  004940  277E               	addwf	printf@ap& (0+255),f,b
 13912                           
 13913                           ; BSR set to: 0
 13914                           ;doprnt.c: 1261: if((int)val < 0) {
 13915  004942  AF82               	btfss	(printf@val+1)& (0+255),7,b
 13916  004944  D006               	goto	l13554
 13917                           
 13918                           ; BSR set to: 0
 13919                           ;doprnt.c: 1262: flag |= 0x03;
 13920  004946  0E03               	movlw	3
 13921  004948  137F               	iorwf	printf@flag& (0+255),f,b
 13922                           
 13923                           ; BSR set to: 0
 13924                           ;doprnt.c: 1263: val = -val;
 13925  00494A  6D81               	negf	printf@val& (0+255),b
 13926  00494C  1F82               	comf	(printf@val+1)& (0+255),f,b
 13927  00494E  B0D8               	btfsc	status,0,c
 13928  004950  2B82               	incf	(printf@val+1)& (0+255),f,b
 13929  004952                     l13554:
 13930                           
 13931                           ; BSR set to: 0
 13932                           ;doprnt.c: 1264: }
 13933                           ;doprnt.c: 1266: }
 13934                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 13935  004952  0E01               	movlw	1
 13936  004954  6F83               	movwf	printf@c& (0+255),b
 13937  004956                     l13560:
 13938                           
 13939                           ; BSR set to: 0
 13940                           ;doprnt.c: 1306: if(val < dpowers[c])
 13941  004956  5183               	movf	printf@c& (0+255),w,b
 13942  004958  0D02               	mullw	2
 13943  00495A  0E25               	movlw	low _dpowers
 13944  00495C  24F3               	addwf	prodl,w,c
 13945  00495E  6EF6               	movwf	tblptrl,c
 13946  004960  0EFE               	movlw	high _dpowers
 13947  004962  20F4               	addwfc	prodh,w,c
 13948  004964  6EF7               	movwf	tblptrh,c
 13949  004966                     	if	1	;There are 3 active tblptr bytes
 13950  004966  6AF8               	clrf	tblptru,c
 13951  004968  0E00               	movlw	low (__mediumconst shr (0+16))
 13952  00496A  22F8               	addwfc	tblptru,f,c
 13953  00496C                     	endif
 13954  00496C  0009               	tblrd		*+
 13955  00496E  50F5               	movf	tablat,w,c
 13956  004970  5D81               	subwf	printf@val& (0+255),w,b
 13957  004972  0009               	tblrd		*+
 13958  004974  50F5               	movf	tablat,w,c
 13959  004976  5982               	subwfb	(printf@val+1)& (0+255),w,b
 13960  004978  E304               	bnc	l13568
 13961                           
 13962                           ; BSR set to: 0
 13963  00497A  2B83               	incf	printf@c& (0+255),f,b
 13964                           
 13965                           ; BSR set to: 0
 13966  00497C  0E05               	movlw	5
 13967  00497E  1983               	xorwf	printf@c& (0+255),w,b
 13968  004980  E1EA               	bnz	l13560
 13969  004982                     l13568:
 13970                           
 13971                           ; BSR set to: 0
 13972                           ;doprnt.c: 1422: {
 13973                           ;doprnt.c: 1438: if(flag & 0x03)
 13974  004982  C07F  F07D         	movff	printf@flag,??_printf
 13975  004986  0E03               	movlw	3
 13976  004988  177D               	andwf	??_printf& (0+255),f,b
 13977  00498A  E003               	bz	l13572
 13978                           
 13979                           ; BSR set to: 0
 13980                           ;doprnt.c: 1439: (putch('-') );
 13981  00498C  0E2D               	movlw	45
 13982  00498E  ECFB  F03C         	call	_putch
 13983  004992                     l13572:
 13984                           
 13985                           ;doprnt.c: 1469: }
 13986                           ;doprnt.c: 1472: prec = c;
 13987  004992  C083  F080         	movff	printf@c,printf@prec
 13988                           
 13989                           ;doprnt.c: 1474: while(prec--) {
 13990  004996  D026               	goto	l13578
 13991  004998                     l13574:
 13992                           
 13993                           ; BSR set to: 0
 13994                           ;doprnt.c: 1478: {
 13995                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 13996  004998  5180               	movf	printf@prec& (0+255),w,b
 13997  00499A  0D02               	mullw	2
 13998  00499C  0E25               	movlw	low _dpowers
 13999  00499E  24F3               	addwf	prodl,w,c
 14000  0049A0  6EF6               	movwf	tblptrl,c
 14001  0049A2  0EFE               	movlw	high _dpowers
 14002  0049A4  20F4               	addwfc	prodh,w,c
 14003  0049A6  6EF7               	movwf	tblptrh,c
 14004  0049A8                     	if	1	;There are 3 active tblptr bytes
 14005  0049A8  6AF8               	clrf	tblptru,c
 14006  0049AA  0E00               	movlw	low (__mediumconst shr (0+16))
 14007  0049AC  22F8               	addwfc	tblptru,f,c
 14008  0049AE                     	endif
 14009  0049AE  0009               	tblrd		*+
 14010  0049B0  CFF5 F066          	movff	tablat,___lwdiv@divisor
 14011  0049B4  000A               	tblrd		*-
 14012  0049B6  CFF5 F067          	movff	tablat,___lwdiv@divisor+1
 14013  0049BA  C081  F064         	movff	printf@val,___lwdiv@dividend
 14014  0049BE  C082  F065         	movff	printf@val+1,___lwdiv@dividend+1
 14015  0049C2  EC65  F036         	call	___lwdiv	;wreg free
 14016  0049C6  C064  F072         	movff	?___lwdiv,___lwmod@dividend
 14017  0049CA  C065  F073         	movff	?___lwdiv+1,___lwmod@dividend+1
 14018  0049CE  6B75               	clrf	(___lwmod@divisor+1)& (0+255),b
 14019  0049D0  0E0A               	movlw	10
 14020  0049D2  6F74               	movwf	___lwmod@divisor& (0+255),b
 14021  0049D4  EC9E  F037         	call	___lwmod	;wreg free
 14022  0049D8  5172               	movf	?___lwmod& (0+255),w,b
 14023  0049DA  0F30               	addlw	48
 14024  0049DC  6F83               	movwf	printf@c& (0+255),b
 14025                           
 14026                           ; BSR set to: 0
 14027                           ;doprnt.c: 1523: }
 14028                           ;doprnt.c: 1524: (putch(c) );
 14029  0049DE  5183               	movf	printf@c& (0+255),w,b
 14030  0049E0  ECFB  F03C         	call	_putch
 14031  0049E4                     l13578:
 14032  0049E4  0100               	movlb	0	; () banked
 14033  0049E6  0780               	decf	printf@prec& (0+255),f,b
 14034  0049E8  2980               	incf	printf@prec& (0+255),w,b
 14035  0049EA  E1D6               	bnz	l13574
 14036  0049EC                     l13580:
 14037  0049EC  C077  FFF6         	movff	printf@f,tblptrl
 14038  0049F0  C078  FFF7         	movff	printf@f+1,tblptrh
 14039  0049F4  0100               	movlb	0	; () banked
 14040  0049F6  4B77               	infsnz	printf@f& (0+255),f,b
 14041  0049F8  2B78               	incf	(printf@f+1)& (0+255),f,b
 14042  0049FA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14043  0049FA  6AF8               	clrf	tblptru,c
 14044  0049FC                     	endif
 14045  0049FC                     	if	0	;tblptru may be non-zero
 14046  0049FC                     	endif
 14047  0049FC  0008               	tblrd		*
 14048  0049FE  CFF5 F083          	movff	tablat,printf@c
 14049  004A02  5183               	movf	printf@c& (0+255),w,b
 14050  004A04  E001 D77B          	bnz	l13536
 14051                           
 14052                           ; BSR set to: 0
 14053  004A08  0012               	return		;funcret
 14054  004A0A                     __end_of_printf:
 14055                           	opt stack 0
 14056                           tosu	equ	0xFFF
 14057                           tosh	equ	0xFFE
 14058                           tosl	equ	0xFFD
 14059                           pclath	equ	0xFFA
 14060                           tblptru	equ	0xFF8
 14061                           tblptrh	equ	0xFF7
 14062                           tblptrl	equ	0xFF6
 14063                           tablat	equ	0xFF5
 14064                           prodh	equ	0xFF4
 14065                           prodl	equ	0xFF3
 14066                           intcon	equ	0xFF2
 14067                           intcon2	equ	0xFF1
 14068                           intcon3	equ	0xFF0
 14069                           postinc0	equ	0xFEE
 14070                           wreg	equ	0xFE8
 14071                           postinc1	equ	0xFE6
 14072                           postdec1	equ	0xFE5
 14073                           plusw1	equ	0xFE3
 14074                           fsr1h	equ	0xFE2
 14075                           fsr1l	equ	0xFE1
 14076                           indf2	equ	0xFDF
 14077                           postinc2	equ	0xFDE
 14078                           postdec2	equ	0xFDD
 14079                           fsr2h	equ	0xFDA
 14080                           fsr2l	equ	0xFD9
 14081                           status	equ	0xFD8
 14082                           
 14083 ;; *************** function _putch *****************
 14084 ;; Defined at:
 14085 ;;		line 111 in file "mcc_generated_files/eusart1.c"
 14086 ;; Parameters:    Size  Location     Type
 14087 ;;  txData          1    wreg     unsigned char 
 14088 ;; Auto vars:     Size  Location     Type
 14089 ;;  txData          1    5[BANK0 ] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  1    wreg      void 
 14092 ;; Registers used:
 14093 ;;		wreg, status,2, cstack
 14094 ;; Tracked objects:
 14095 ;;		On entry : F/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14099 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14100 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14102 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14103 ;;Total ram usage:        1 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    8
 14106 ;; This function calls:
 14107 ;;		_EUSART1_Write
 14108 ;; This function is called by:
 14109 ;;		_printf
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text70
 14114  0079F6                     __ptext70:
 14115                           	opt stack 0
 14116  0079F6                     _putch:
 14117                           	opt stack 20
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;incstack = 0
 14121                           ;putch@txData stored from wreg
 14122  0079F6  6F65               	movwf	putch@txData& (0+255),b
 14123                           
 14124                           ;eusart1.c: 113: EUSART1_Write(txData);
 14125  0079F8  0100               	movlb	0	; () banked
 14126  0079FA  5165               	movf	putch@txData& (0+255),w,b
 14127  0079FC  EFDC  F03C         	goto	_EUSART1_Write
 14128  007A00                     __end_of_putch:
 14129                           	opt stack 0
 14130                           tosu	equ	0xFFF
 14131                           tosh	equ	0xFFE
 14132                           tosl	equ	0xFFD
 14133                           pclath	equ	0xFFA
 14134                           tblptru	equ	0xFF8
 14135                           tblptrh	equ	0xFF7
 14136                           tblptrl	equ	0xFF6
 14137                           tablat	equ	0xFF5
 14138                           prodh	equ	0xFF4
 14139                           prodl	equ	0xFF3
 14140                           intcon	equ	0xFF2
 14141                           intcon2	equ	0xFF1
 14142                           intcon3	equ	0xFF0
 14143                           postinc0	equ	0xFEE
 14144                           wreg	equ	0xFE8
 14145                           postinc1	equ	0xFE6
 14146                           postdec1	equ	0xFE5
 14147                           plusw1	equ	0xFE3
 14148                           fsr1h	equ	0xFE2
 14149                           fsr1l	equ	0xFE1
 14150                           indf2	equ	0xFDF
 14151                           postinc2	equ	0xFDE
 14152                           postdec2	equ	0xFDD
 14153                           fsr2h	equ	0xFDA
 14154                           fsr2l	equ	0xFD9
 14155                           status	equ	0xFD8
 14156                           
 14157 ;; *************** function _EUSART1_Write *****************
 14158 ;; Defined at:
 14159 ;;		line 97 in file "mcc_generated_files/eusart1.c"
 14160 ;; Parameters:    Size  Location     Type
 14161 ;;  txData          1    wreg     unsigned char 
 14162 ;; Auto vars:     Size  Location     Type
 14163 ;;  txData          1    4[BANK0 ] unsigned char 
 14164 ;; Return value:  Size  Location     Type
 14165 ;;                  1    wreg      void 
 14166 ;; Registers used:
 14167 ;;		wreg
 14168 ;; Tracked objects:
 14169 ;;		On entry : F/0
 14170 ;;		On exit  : 0/0
 14171 ;;		Unchanged: 0/0
 14172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14174 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14176 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14177 ;;Total ram usage:        1 bytes
 14178 ;; Hardware stack levels used:    1
 14179 ;; Hardware stack levels required when called:    7
 14180 ;; This function calls:
 14181 ;;		Nothing
 14182 ;; This function is called by:
 14183 ;;		_putch
 14184 ;; This function uses a non-reentrant model
 14185 ;;
 14186                           
 14187                           	psect	text71
 14188  0079B8                     __ptext71:
 14189                           	opt stack 0
 14190  0079B8                     _EUSART1_Write:
 14191                           	opt stack 20
 14192                           
 14193                           ;incstack = 0
 14194                           ;EUSART1_Write@txData stored from wreg
 14195  0079B8  6F64               	movwf	EUSART1_Write@txData& (0+255),b
 14196  0079BA                     l2529:
 14197  0079BA  A89E               	btfss	3998,4,c	;volatile
 14198  0079BC  D7FE               	goto	l2529
 14199                           
 14200                           ;eusart1.c: 101: }
 14201                           ;eusart1.c: 103: TXREG1 = txData;
 14202  0079BE  C064  FFAD         	movff	EUSART1_Write@txData,4013	;volatile
 14203  0079C2  0012               	return		;funcret
 14204  0079C4                     __end_of_EUSART1_Write:
 14205                           	opt stack 0
 14206                           tosu	equ	0xFFF
 14207                           tosh	equ	0xFFE
 14208                           tosl	equ	0xFFD
 14209                           pclath	equ	0xFFA
 14210                           tblptru	equ	0xFF8
 14211                           tblptrh	equ	0xFF7
 14212                           tblptrl	equ	0xFF6
 14213                           tablat	equ	0xFF5
 14214                           prodh	equ	0xFF4
 14215                           prodl	equ	0xFF3
 14216                           intcon	equ	0xFF2
 14217                           intcon2	equ	0xFF1
 14218                           intcon3	equ	0xFF0
 14219                           postinc0	equ	0xFEE
 14220                           wreg	equ	0xFE8
 14221                           postinc1	equ	0xFE6
 14222                           postdec1	equ	0xFE5
 14223                           plusw1	equ	0xFE3
 14224                           fsr1h	equ	0xFE2
 14225                           fsr1l	equ	0xFE1
 14226                           indf2	equ	0xFDF
 14227                           postinc2	equ	0xFDE
 14228                           postdec2	equ	0xFDD
 14229                           fsr2h	equ	0xFDA
 14230                           fsr2l	equ	0xFD9
 14231                           status	equ	0xFD8
 14232                           
 14233 ;; *************** function ___lwdiv *****************
 14234 ;; Defined at:
 14235 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwdiv.c"
 14236 ;; Parameters:    Size  Location     Type
 14237 ;;  dividend        2    4[BANK0 ] unsigned int 
 14238 ;;  divisor         2    6[BANK0 ] unsigned int 
 14239 ;; Auto vars:     Size  Location     Type
 14240 ;;  quotient        2    9[BANK0 ] unsigned int 
 14241 ;;  counter         1    8[BANK0 ] unsigned char 
 14242 ;; Return value:  Size  Location     Type
 14243 ;;                  2    4[BANK0 ] unsigned int 
 14244 ;; Registers used:
 14245 ;;		wreg, status,2, status,0
 14246 ;; Tracked objects:
 14247 ;;		On entry : F/0
 14248 ;;		On exit  : F/0
 14249 ;;		Unchanged: 0/0
 14250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14251 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14252 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14254 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14255 ;;Total ram usage:        7 bytes
 14256 ;; Hardware stack levels used:    1
 14257 ;; Hardware stack levels required when called:    7
 14258 ;; This function calls:
 14259 ;;		Nothing
 14260 ;; This function is called by:
 14261 ;;		_printf
 14262 ;; This function uses a non-reentrant model
 14263 ;;
 14264                           
 14265                           	psect	text72
 14266  006CCA                     __ptext72:
 14267                           	opt stack 0
 14268  006CCA                     ___lwdiv:
 14269                           	opt stack 21
 14270                           
 14271                           ; BSR set to: 0
 14272                           
 14273                           ;incstack = 0
 14274  006CCA  6B69               	clrf	___lwdiv@quotient& (0+255),b
 14275  006CCC  6B6A               	clrf	(___lwdiv@quotient+1)& (0+255),b
 14276                           
 14277                           ; BSR set to: 0
 14278  006CCE  5166               	movf	___lwdiv@divisor& (0+255),w,b
 14279  006CD0  1167               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 14280  006CD2  E01B               	bz	l3167
 14281                           
 14282                           ; BSR set to: 0
 14283  006CD4  0E01               	movlw	1
 14284  006CD6  6F68               	movwf	___lwdiv@counter& (0+255),b
 14285  006CD8  D004               	goto	l12934
 14286  006CDA                     l12932:
 14287                           
 14288                           ; BSR set to: 0
 14289  006CDA  90D8               	bcf	status,0,c
 14290  006CDC  3766               	rlcf	___lwdiv@divisor& (0+255),f,b
 14291  006CDE  3767               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 14292  006CE0  2B68               	incf	___lwdiv@counter& (0+255),f,b
 14293  006CE2                     l12934:
 14294                           
 14295                           ; BSR set to: 0
 14296  006CE2  AF67               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 14297  006CE4  D7FA               	goto	l12932
 14298  006CE6                     l12936:
 14299                           
 14300                           ; BSR set to: 0
 14301  006CE6  90D8               	bcf	status,0,c
 14302  006CE8  3769               	rlcf	___lwdiv@quotient& (0+255),f,b
 14303  006CEA  376A               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 14304                           
 14305                           ; BSR set to: 0
 14306  006CEC  5166               	movf	___lwdiv@divisor& (0+255),w,b
 14307  006CEE  5D64               	subwf	___lwdiv@dividend& (0+255),w,b
 14308  006CF0  5167               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14309  006CF2  5965               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 14310  006CF4  E305               	bnc	l12944
 14311                           
 14312                           ; BSR set to: 0
 14313  006CF6  5166               	movf	___lwdiv@divisor& (0+255),w,b
 14314  006CF8  5F64               	subwf	___lwdiv@dividend& (0+255),f,b
 14315  006CFA  5167               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 14316  006CFC  5B65               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 14317                           
 14318                           ; BSR set to: 0
 14319  006CFE  8169               	bsf	___lwdiv@quotient& (0+255),0,b
 14320  006D00                     l12944:
 14321                           
 14322                           ; BSR set to: 0
 14323  006D00  90D8               	bcf	status,0,c
 14324  006D02  3367               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 14325  006D04  3366               	rrcf	___lwdiv@divisor& (0+255),f,b
 14326                           
 14327                           ; BSR set to: 0
 14328  006D06  2F68               	decfsz	___lwdiv@counter& (0+255),f,b
 14329  006D08  D7EE               	goto	l12936
 14330  006D0A                     l3167:
 14331                           
 14332                           ; BSR set to: 0
 14333  006D0A  C069  F064         	movff	___lwdiv@quotient,?___lwdiv
 14334  006D0E  C06A  F065         	movff	___lwdiv@quotient+1,?___lwdiv+1
 14335                           
 14336                           ; BSR set to: 0
 14337  006D12  0012               	return		;funcret
 14338  006D14                     __end_of___lwdiv:
 14339                           	opt stack 0
 14340                           tosu	equ	0xFFF
 14341                           tosh	equ	0xFFE
 14342                           tosl	equ	0xFFD
 14343                           pclath	equ	0xFFA
 14344                           tblptru	equ	0xFF8
 14345                           tblptrh	equ	0xFF7
 14346                           tblptrl	equ	0xFF6
 14347                           tablat	equ	0xFF5
 14348                           prodh	equ	0xFF4
 14349                           prodl	equ	0xFF3
 14350                           intcon	equ	0xFF2
 14351                           intcon2	equ	0xFF1
 14352                           intcon3	equ	0xFF0
 14353                           postinc0	equ	0xFEE
 14354                           wreg	equ	0xFE8
 14355                           postinc1	equ	0xFE6
 14356                           postdec1	equ	0xFE5
 14357                           plusw1	equ	0xFE3
 14358                           fsr1h	equ	0xFE2
 14359                           fsr1l	equ	0xFE1
 14360                           indf2	equ	0xFDF
 14361                           postinc2	equ	0xFDE
 14362                           postdec2	equ	0xFDD
 14363                           fsr2h	equ	0xFDA
 14364                           fsr2l	equ	0xFD9
 14365                           status	equ	0xFD8
 14366                           
 14367 ;; *************** function _MacExecuteCommands *****************
 14368 ;; Defined at:
 14369 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14370 ;; Parameters:    Size  Location     Type
 14371 ;;  buffer          2   26[BANK0 ] PTR unsigned char 
 14372 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14373 ;;  fOptsLen        1   28[BANK0 ] unsigned char 
 14374 ;; Auto vars:     Size  Location     Type
 14375 ;;  ptr             2   32[BANK0 ] PTR unsigned char 
 14376 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14377 ;;  done            1   31[BANK0 ] unsigned char 
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  2   26[BANK0 ] PTR unsigned char 
 14380 ;; Registers used:
 14381 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14382 ;; Tracked objects:
 14383 ;;		On entry : F/0
 14384 ;;		On exit  : F/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14387 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14388 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14389 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14390 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14391 ;;Total ram usage:        8 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:   11
 14394 ;; This function calls:
 14395 ;;		_ExecuteDevStatus
 14396 ;;		_ExecuteDutyCycle
 14397 ;;		_ExecuteLinkAdr
 14398 ;;		_ExecuteLinkCheck
 14399 ;;		_ExecuteNewChannel
 14400 ;;		_ExecuteRxParamSetupReq
 14401 ;;		_ExecuteRxTimingSetup
 14402 ;; This function is called by:
 14403 ;;		_LORAWAN_RxDone
 14404 ;; This function uses a non-reentrant model
 14405 ;;
 14406                           
 14407                           	psect	text73
 14408  002E10                     __ptext73:
 14409                           	opt stack 0
 14410  002E10                     _MacExecuteCommands:
 14411                           	opt stack 15
 14412                           
 14413                           ; BSR set to: 0
 14414                           ;lorawan.c: 1577: bool done = 0;
 14415                           
 14416                           ; BSR set to: 0
 14417                           ;incstack = 0
 14418  002E10  6B7F               	clrf	MacExecuteCommands@done& (0+255),b
 14419                           
 14420                           ; BSR set to: 0
 14421                           ;lorawan.c: 1578: uint8_t *ptr;
 14422                           ;lorawan.c: 1579: ptr = buffer;
 14423  002E12  C07A  F080         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 14424  002E16  C07B  F081         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 14425                           
 14426                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 14427  002E1A  D0DE               	goto	l14372
 14428  002E1C                     l14336:
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;lorawan.c: 1581: {
 14432                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 14433  002E1C  0102               	movlb	2	; () banked
 14434  002E1E  51A7               	movf	(_loRa+167)& (0+255),w,b
 14435  002E20  0D02               	mullw	2
 14436  002E22  0EA9               	movlw	low (_loRa+169)
 14437  002E24  24F3               	addwf	prodl,w,c
 14438  002E26  6ED9               	movwf	fsr2l,c
 14439  002E28  0E02               	movlw	high (_loRa+169)
 14440  002E2A  20F4               	addwfc	prodh,w,c
 14441  002E2C  6EDA               	movwf	fsr2h,c
 14442  002E2E  90DF               	bcf	indf2,0,c
 14443                           
 14444                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 14445  002E30  51A7               	movf	(_loRa+167)& (0+255),w,b
 14446  002E32  0D02               	mullw	2
 14447  002E34  0EA9               	movlw	low (_loRa+169)
 14448  002E36  24F3               	addwf	prodl,w,c
 14449  002E38  6ED9               	movwf	fsr2l,c
 14450  002E3A  0E02               	movlw	high (_loRa+169)
 14451  002E3C  20F4               	addwfc	prodh,w,c
 14452  002E3E  6EDA               	movwf	fsr2h,c
 14453  002E40  92DF               	bcf	indf2,1,c
 14454                           
 14455                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 14456  002E42  51A7               	movf	(_loRa+167)& (0+255),w,b
 14457  002E44  0D02               	mullw	2
 14458  002E46  0EA9               	movlw	low (_loRa+169)
 14459  002E48  24F3               	addwf	prodl,w,c
 14460  002E4A  6ED9               	movwf	fsr2l,c
 14461  002E4C  0E02               	movlw	high (_loRa+169)
 14462  002E4E  20F4               	addwfc	prodh,w,c
 14463  002E50  6EDA               	movwf	fsr2h,c
 14464  002E52  94DF               	bcf	indf2,2,c
 14465                           
 14466                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 14467  002E54  51A7               	movf	(_loRa+167)& (0+255),w,b
 14468  002E56  0D02               	mullw	2
 14469  002E58  0EA9               	movlw	low (_loRa+169)
 14470  002E5A  24F3               	addwf	prodl,w,c
 14471  002E5C  6ED9               	movwf	fsr2l,c
 14472  002E5E  0E02               	movlw	high (_loRa+169)
 14473  002E60  20F4               	addwfc	prodh,w,c
 14474  002E62  6EDA               	movwf	fsr2h,c
 14475  002E64  96DF               	bcf	indf2,3,c
 14476                           
 14477                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 14478  002E66  51A7               	movf	(_loRa+167)& (0+255),w,b
 14479  002E68  0D02               	mullw	2
 14480  002E6A  0EA9               	movlw	low (_loRa+169)
 14481  002E6C  24F3               	addwf	prodl,w,c
 14482  002E6E  6ED9               	movwf	fsr2l,c
 14483  002E70  0E02               	movlw	high (_loRa+169)
 14484  002E72  20F4               	addwfc	prodh,w,c
 14485  002E74  6EDA               	movwf	fsr2h,c
 14486  002E76  98DF               	bcf	indf2,4,c
 14487                           
 14488                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 14489  002E78  51A7               	movf	(_loRa+167)& (0+255),w,b
 14490  002E7A  0D02               	mullw	2
 14491  002E7C  0EA9               	movlw	low (_loRa+169)
 14492  002E7E  24F3               	addwf	prodl,w,c
 14493  002E80  6ED9               	movwf	fsr2l,c
 14494  002E82  0E02               	movlw	high (_loRa+169)
 14495  002E84  20F4               	addwfc	prodh,w,c
 14496  002E86  6EDA               	movwf	fsr2h,c
 14497  002E88  9ADF               	bcf	indf2,5,c
 14498                           
 14499                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 14500  002E8A  51A7               	movf	(_loRa+167)& (0+255),w,b
 14501  002E8C  0D02               	mullw	2
 14502  002E8E  0EA9               	movlw	low (_loRa+169)
 14503  002E90  24F3               	addwf	prodl,w,c
 14504  002E92  6ED9               	movwf	fsr2l,c
 14505  002E94  0E02               	movlw	high (_loRa+169)
 14506  002E96  20F4               	addwfc	prodh,w,c
 14507  002E98  6EDA               	movwf	fsr2h,c
 14508  002E9A  9CDF               	bcf	indf2,6,c
 14509                           
 14510                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 14511  002E9C  51A7               	movf	(_loRa+167)& (0+255),w,b
 14512  002E9E  0D02               	mullw	2
 14513  002EA0  0EA9               	movlw	low (_loRa+169)
 14514  002EA2  24F3               	addwf	prodl,w,c
 14515  002EA4  6ED9               	movwf	fsr2l,c
 14516  002EA6  0E02               	movlw	high (_loRa+169)
 14517  002EA8  20F4               	addwfc	prodh,w,c
 14518  002EAA  6EDA               	movwf	fsr2h,c
 14519  002EAC  9EDF               	bcf	indf2,7,c
 14520                           
 14521                           ; BSR set to: 2
 14522                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 14523  002EAE  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 14524  002EB2  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 14525  002EB6  51A7               	movf	(_loRa+167)& (0+255),w,b
 14526  002EB8  0D02               	mullw	2
 14527  002EBA  0EA8               	movlw	low (_loRa+168)
 14528  002EBC  24F3               	addwf	prodl,w,c
 14529  002EBE  6EE9               	movwf	fsr0l,c
 14530  002EC0  0E02               	movlw	high (_loRa+168)
 14531  002EC2  20F4               	addwfc	prodh,w,c
 14532  002EC4  6EEA               	movwf	fsr0h,c
 14533  002EC6  CFDF FFEF          	movff	indf2,indf0
 14534                           
 14535                           ;lorawan.c: 1595: switch (*ptr ++)
 14536  002ECA  D060               	goto	l14364
 14537  002ECC                     l14340:
 14538                           
 14539                           ; BSR set to: 0
 14540                           ;lorawan.c: 1598: {
 14541                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 14542  002ECC  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 14543  002ED0  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 14544  002ED4  EC26  F039         	call	_ExecuteLinkCheck	;wreg free
 14545  002ED8  C064  F080         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 14546  002EDC  C065  F081         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 14547  002EE0                     l14342:
 14548                           
 14549                           ; BSR set to: 0
 14550                           ;lorawan.c: 1601: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 14551  002EE0  0102               	movlb	2	; () banked
 14552  002EE2  51A7               	movf	(_loRa+167)& (0+255),w,b
 14553  002EE4  0D02               	mullw	2
 14554  002EE6  0EA8               	movlw	low (_loRa+168)
 14555  002EE8  24F3               	addwf	prodl,w,c
 14556  002EEA  6ED9               	movwf	fsr2l,c
 14557  002EEC  0E02               	movlw	high (_loRa+168)
 14558  002EEE  20F4               	addwfc	prodh,w,c
 14559  002EF0  6EDA               	movwf	fsr2h,c
 14560  002EF2  68DF               	setf	indf2,c
 14561                           
 14562                           ;lorawan.c: 1602: } break;
 14563  002EF4  D062               	goto	l14366
 14564  002EF6                     l14344:
 14565                           
 14566                           ; BSR set to: 0
 14567                           ;lorawan.c: 1605: {
 14568                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 14569  002EF6  C080  F071         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 14570  002EFA  C081  F072         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 14571  002EFE  ECBC  F01A         	call	_ExecuteLinkAdr	;wreg free
 14572  002F02  C071  F080         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 14573  002F06  C072  F081         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 14574                           
 14575                           ;lorawan.c: 1607: } break;
 14576  002F0A  D057               	goto	l14366
 14577  002F0C                     l14346:
 14578                           
 14579                           ; BSR set to: 0
 14580                           ;lorawan.c: 1610: {
 14581                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 14582  002F0C  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 14583  002F10  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 14584  002F14  ECA4  F035         	call	_ExecuteDutyCycle	;wreg free
 14585  002F18  C064  F080         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 14586  002F1C  C065  F081         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 14587                           
 14588                           ;lorawan.c: 1612: } break;
 14589  002F20  D04C               	goto	l14366
 14590  002F22                     l14348:
 14591                           
 14592                           ; BSR set to: 0
 14593                           ;lorawan.c: 1615: {
 14594                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 14595  002F22  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 14596  002F26  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 14597  002F2A  EC72  F021         	call	_ExecuteRxParamSetupReq	;wreg free
 14598  002F2E  C070  F080         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 14599  002F32  C071  F081         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 14600                           
 14601                           ;lorawan.c: 1617: } break;
 14602  002F36  D041               	goto	l14366
 14603  002F38                     l14350:
 14604                           
 14605                           ; BSR set to: 0
 14606                           ;lorawan.c: 1620: {
 14607                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 14608  002F38  C080  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 14609  002F3C  C081  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 14610  002F40  EC00  F03D         	call	_ExecuteDevStatus	;wreg free
 14611  002F44  C064  F080         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 14612  002F48  C065  F081         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 14613                           
 14614                           ;lorawan.c: 1622: } break;
 14615  002F4C  D036               	goto	l14366
 14616  002F4E                     l14352:
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;lorawan.c: 1625: {
 14620                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 14621  002F4E  C080  F070         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 14622  002F52  C081  F071         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 14623  002F56  ECDB  F019         	call	_ExecuteNewChannel	;wreg free
 14624  002F5A  C070  F080         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 14625  002F5E  C071  F081         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 14626                           
 14627                           ;lorawan.c: 1628: } break;
 14628  002F62  D02B               	goto	l14366
 14629  002F64                     l14354:
 14630                           
 14631                           ; BSR set to: 0
 14632                           ;lorawan.c: 1631: {
 14633                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 14634  002F64  C080  F069         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 14635  002F68  C081  F06A         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 14636  002F6C  EC8A  F03A         	call	_ExecuteRxTimingSetup	;wreg free
 14637  002F70  C069  F080         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 14638  002F74  C06A  F081         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 14639                           
 14640                           ;lorawan.c: 1633: } break;
 14641  002F78  D020               	goto	l14366
 14642  002F7A                     l14356:
 14643                           
 14644                           ; BSR set to: 0
 14645                           ;lorawan.c: 1636: {
 14646                           ;lorawan.c: 1637: done = 1;
 14647  002F7A  0E01               	movlw	1
 14648  002F7C  6F7F               	movwf	MacExecuteCommands@done& (0+255),b
 14649                           
 14650                           ; BSR set to: 0
 14651                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 14652  002F7E  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14653  002F80  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 14654  002F82  6F80               	movwf	MacExecuteCommands@ptr& (0+255),b
 14655  002F84  0E00               	movlw	0
 14656  002F86  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 14657  002F88  6F81               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 14658  002F8A  D7AA               	goto	l14342
 14659  002F8C                     l14364:
 14660                           
 14661                           ; BSR set to: 2
 14662  002F8C  C080  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 14663  002F90  C081  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 14664  002F94  0100               	movlb	0	; () banked
 14665  002F96  4B80               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 14666  002F98  2B81               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 14667  002F9A  50DF               	movf	indf2,w,c
 14668                           
 14669                           ; Switch size 1, requested type "speed"
 14670                           ; Number of cases is 7, Range of values is 2 to 8
 14671                           ; switch strategies available:
 14672                           ; Name         Instructions Cycles
 14673                           ; simple_byte           22    12 (average)
 14674                           ;	Chosen strategy is simple_byte
 14675  002F9C  0A02               	xorlw	2	; case 2
 14676  002F9E  E096               	bz	l14340
 14677  002FA0  0A01               	xorlw	1	; case 3
 14678  002FA2  E0A9               	bz	l14344
 14679  002FA4  0A07               	xorlw	7	; case 4
 14680  002FA6  E0B2               	bz	l14346
 14681  002FA8  0A01               	xorlw	1	; case 5
 14682  002FAA  E0BB               	bz	l14348
 14683  002FAC  0A03               	xorlw	3	; case 6
 14684  002FAE  E0C4               	bz	l14350
 14685  002FB0  0A01               	xorlw	1	; case 7
 14686  002FB2  E0CD               	bz	l14352
 14687  002FB4  0A0F               	xorlw	15	; case 8
 14688  002FB6  E0D6               	bz	l14354
 14689  002FB8  D7E0               	goto	l14356
 14690  002FBA                     l14366:
 14691                           
 14692                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 14693                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 14694  002FBA  0102               	movlb	2	; () banked
 14695  002FBC  51A7               	movf	(_loRa+167)& (0+255),w,b
 14696  002FBE  0D02               	mullw	2
 14697  002FC0  0EA8               	movlw	low (_loRa+168)
 14698  002FC2  24F3               	addwf	prodl,w,c
 14699  002FC4  6ED9               	movwf	fsr2l,c
 14700  002FC6  0E02               	movlw	high (_loRa+168)
 14701  002FC8  20F4               	addwfc	prodh,w,c
 14702  002FCA  6EDA               	movwf	fsr2h,c
 14703  002FCC  28DE               	incf	postinc2,w,c
 14704  002FCE  E004               	bz	l14372
 14705                           
 14706                           ; BSR set to: 2
 14707  002FD0  0E10               	movlw	16
 14708  002FD2  61A7               	cpfslt	(_loRa+167)& (0+255),b
 14709  002FD4  D001               	goto	l14372
 14710                           
 14711                           ; BSR set to: 2
 14712                           ;lorawan.c: 1645: {
 14713                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 14714  002FD6  2BA7               	incf	(_loRa+167)& (0+255),f,b
 14715  002FD8                     l14372:
 14716  002FD8  0100               	movlb	0	; () banked
 14717  002FDA  517C               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 14718  002FDC  257A               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 14719  002FDE  6F7D               	movwf	??_MacExecuteCommands& (0+255),b
 14720  002FE0  0E00               	movlw	0
 14721  002FE2  217B               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 14722  002FE4  6F7E               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 14723  002FE6  517D               	movf	??_MacExecuteCommands& (0+255),w,b
 14724  002FE8  5D80               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 14725  002FEA  517E               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 14726  002FEC  5981               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 14727  002FEE  E203               	bc	l14376
 14728                           
 14729                           ; BSR set to: 0
 14730  002FF0  517F               	movf	MacExecuteCommands@done& (0+255),w,b
 14731  002FF2  E101 D713          	bz	l14336
 14732  002FF6                     l14376:
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;lorawan.c: 1647: }
 14736                           ;lorawan.c: 1648: }
 14737                           ;lorawan.c: 1649: return ptr;
 14738  002FF6  C080  F07A         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 14739  002FFA  C081  F07B         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 14740                           
 14741                           ; BSR set to: 0
 14742  002FFE  0012               	return		;funcret
 14743  003000                     __end_of_MacExecuteCommands:
 14744                           	opt stack 0
 14745                           tosu	equ	0xFFF
 14746                           tosh	equ	0xFFE
 14747                           tosl	equ	0xFFD
 14748                           pclath	equ	0xFFA
 14749                           tblptru	equ	0xFF8
 14750                           tblptrh	equ	0xFF7
 14751                           tblptrl	equ	0xFF6
 14752                           tablat	equ	0xFF5
 14753                           prodh	equ	0xFF4
 14754                           prodl	equ	0xFF3
 14755                           intcon	equ	0xFF2
 14756                           intcon2	equ	0xFF1
 14757                           intcon3	equ	0xFF0
 14758                           indf0	equ	0xFEF
 14759                           postinc0	equ	0xFEE
 14760                           fsr0h	equ	0xFEA
 14761                           fsr0l	equ	0xFE9
 14762                           wreg	equ	0xFE8
 14763                           postinc1	equ	0xFE6
 14764                           postdec1	equ	0xFE5
 14765                           plusw1	equ	0xFE3
 14766                           fsr1h	equ	0xFE2
 14767                           fsr1l	equ	0xFE1
 14768                           indf2	equ	0xFDF
 14769                           postinc2	equ	0xFDE
 14770                           postdec2	equ	0xFDD
 14771                           fsr2h	equ	0xFDA
 14772                           fsr2l	equ	0xFD9
 14773                           status	equ	0xFD8
 14774                           
 14775 ;; *************** function _ExecuteRxTimingSetup *****************
 14776 ;; Defined at:
 14777 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14778 ;; Parameters:    Size  Location     Type
 14779 ;;  ptr             2    9[BANK0 ] PTR unsigned char 
 14780 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14781 ;; Auto vars:     Size  Location     Type
 14782 ;;  delay           1   11[BANK0 ] unsigned char 
 14783 ;; Return value:  Size  Location     Type
 14784 ;;                  2    9[BANK0 ] PTR unsigned char 
 14785 ;; Registers used:
 14786 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14787 ;; Tracked objects:
 14788 ;;		On entry : F/0
 14789 ;;		On exit  : F/2
 14790 ;;		Unchanged: 0/0
 14791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14792 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14793 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14795 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14796 ;;Total ram usage:        3 bytes
 14797 ;; Hardware stack levels used:    1
 14798 ;; Hardware stack levels required when called:    8
 14799 ;; This function calls:
 14800 ;;		_UpdateReceiveDelays
 14801 ;; This function is called by:
 14802 ;;		_MacExecuteCommands
 14803 ;; This function uses a non-reentrant model
 14804 ;;
 14805                           
 14806                           	psect	text74
 14807  007514                     __ptext74:
 14808                           	opt stack 0
 14809  007514                     _ExecuteRxTimingSetup:
 14810                           	opt stack 17
 14811                           
 14812                           ; BSR set to: 0
 14813                           ;lorawan.c: 1661: uint8_t delay;
 14814                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 14815                           
 14816                           ; BSR set to: 0
 14817                           ;incstack = 0
 14818  007514  C069  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 14819  007518  C06A  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 14820  00751C  50DF               	movf	indf2,w,c
 14821  00751E  0B0F               	andlw	15
 14822  007520  6F6B               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 14823                           
 14824                           ; BSR set to: 0
 14825                           ;lorawan.c: 1664: ptr++;
 14826  007522  4B69               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 14827  007524  2B6A               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 14828                           
 14829                           ; BSR set to: 0
 14830                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 14831  007526  516B               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 14832  007528  EC8A  F036         	call	_UpdateReceiveDelays
 14833                           
 14834                           ; BSR set to: 2
 14835                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 14836  00752C  8104               	bsf	(_loRa+4)& (0+255),0,b
 14837                           
 14838                           ; BSR set to: 2
 14839                           ;lorawan.c: 1669: return ptr;
 14840  00752E  C069  F069         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 14841  007532  C06A  F06A         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 14842                           
 14843                           ; BSR set to: 2
 14844  007536  0012               	return		;funcret
 14845  007538                     __end_of_ExecuteRxTimingSetup:
 14846                           	opt stack 0
 14847                           tosu	equ	0xFFF
 14848                           tosh	equ	0xFFE
 14849                           tosl	equ	0xFFD
 14850                           pclath	equ	0xFFA
 14851                           tblptru	equ	0xFF8
 14852                           tblptrh	equ	0xFF7
 14853                           tblptrl	equ	0xFF6
 14854                           tablat	equ	0xFF5
 14855                           prodh	equ	0xFF4
 14856                           prodl	equ	0xFF3
 14857                           intcon	equ	0xFF2
 14858                           intcon2	equ	0xFF1
 14859                           intcon3	equ	0xFF0
 14860                           indf0	equ	0xFEF
 14861                           postinc0	equ	0xFEE
 14862                           fsr0h	equ	0xFEA
 14863                           fsr0l	equ	0xFE9
 14864                           wreg	equ	0xFE8
 14865                           postinc1	equ	0xFE6
 14866                           postdec1	equ	0xFE5
 14867                           plusw1	equ	0xFE3
 14868                           fsr1h	equ	0xFE2
 14869                           fsr1l	equ	0xFE1
 14870                           indf2	equ	0xFDF
 14871                           postinc2	equ	0xFDE
 14872                           postdec2	equ	0xFDD
 14873                           fsr2h	equ	0xFDA
 14874                           fsr2l	equ	0xFD9
 14875                           status	equ	0xFD8
 14876                           
 14877 ;; *************** function _UpdateReceiveDelays *****************
 14878 ;; Defined at:
 14879 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;  delay           1    wreg     unsigned char 
 14882 ;; Auto vars:     Size  Location     Type
 14883 ;;  delay           1    8[BANK0 ] unsigned char 
 14884 ;; Return value:  Size  Location     Type
 14885 ;;                  1    wreg      void 
 14886 ;; Registers used:
 14887 ;;		wreg, status,2, status,0, prodl, prodh
 14888 ;; Tracked objects:
 14889 ;;		On entry : C/3
 14890 ;;		On exit  : F/2
 14891 ;;		Unchanged: 0/0
 14892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14894 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14895 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14896 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14897 ;;Total ram usage:        5 bytes
 14898 ;; Hardware stack levels used:    1
 14899 ;; Hardware stack levels required when called:    7
 14900 ;; This function calls:
 14901 ;;		Nothing
 14902 ;; This function is called by:
 14903 ;;		_LORAWAN_RxDone
 14904 ;;		_ExecuteRxTimingSetup
 14905 ;; This function uses a non-reentrant model
 14906 ;;
 14907                           
 14908                           	psect	text75
 14909  006D14                     __ptext75:
 14910                           	opt stack 0
 14911  006D14                     _UpdateReceiveDelays:
 14912                           	opt stack 19
 14913                           
 14914                           ; BSR set to: 2
 14915                           ;incstack = 0
 14916                           ;UpdateReceiveDelays@delay stored from wreg
 14917  006D14  0100               	movlb	0	; () banked
 14918  006D16  6F68               	movwf	UpdateReceiveDelays@delay& (0+255),b
 14919                           
 14920                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 14921  006D18  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14922  006D1A  6F64               	movwf	??_UpdateReceiveDelays& (0+255),b
 14923  006D1C  6B65               	clrf	(??_UpdateReceiveDelays+1)& (0+255),b
 14924  006D1E  0EE8               	movlw	232
 14925  006D20  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 14926  006D22  CFF3 F066          	movff	prodl,??_UpdateReceiveDelays+2
 14927  006D26  CFF4 F067          	movff	prodh,??_UpdateReceiveDelays+3
 14928  006D2A  0365               	mulwf	(??_UpdateReceiveDelays+1)& (0+255),b
 14929  006D2C  50F3               	movf	prodl,w,c
 14930  006D2E  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 14931  006D30  0E03               	movlw	3
 14932  006D32  0364               	mulwf	??_UpdateReceiveDelays& (0+255),b
 14933  006D34  50F3               	movf	prodl,w,c
 14934  006D36  2767               	addwf	(??_UpdateReceiveDelays+3)& (0+255),f,b
 14935  006D38  C066  F294         	movff	??_UpdateReceiveDelays+2,_loRa+148
 14936  006D3C  C067  F295         	movff	??_UpdateReceiveDelays+3,_loRa+149
 14937                           
 14938                           ; BSR set to: 0
 14939                           ;lorawan.c: 2029: if (delay == 0)
 14940  006D40  5168               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 14941  006D42  E105               	bnz	l13370
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;lorawan.c: 2030: {
 14945                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 14946  006D44  0E03               	movlw	3
 14947  006D46  0102               	movlb	2	; () banked
 14948  006D48  6F95               	movwf	(_loRa+149)& (0+255),b
 14949  006D4A  0EE8               	movlw	232
 14950  006D4C  6F94               	movwf	(_loRa+148)& (0+255),b
 14951  006D4E                     l13370:
 14952                           
 14953                           ;lorawan.c: 2032: }
 14954                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 14955  006D4E  0EE8               	movlw	232
 14956  006D50  0102               	movlb	2	; () banked
 14957  006D52  2594               	addwf	(_loRa+148)& (0+255),w,b
 14958  006D54  6F96               	movwf	(_loRa+150)& (0+255),b
 14959  006D56  0E03               	movlw	3
 14960  006D58  2195               	addwfc	(_loRa+149)& (0+255),w,b
 14961  006D5A  6F97               	movwf	(_loRa+151)& (0+255),b
 14962                           
 14963                           ; BSR set to: 2
 14964  006D5C  0012               	return		;funcret
 14965  006D5E                     __end_of_UpdateReceiveDelays:
 14966                           	opt stack 0
 14967                           tosu	equ	0xFFF
 14968                           tosh	equ	0xFFE
 14969                           tosl	equ	0xFFD
 14970                           pclath	equ	0xFFA
 14971                           tblptru	equ	0xFF8
 14972                           tblptrh	equ	0xFF7
 14973                           tblptrl	equ	0xFF6
 14974                           tablat	equ	0xFF5
 14975                           prodh	equ	0xFF4
 14976                           prodl	equ	0xFF3
 14977                           intcon	equ	0xFF2
 14978                           intcon2	equ	0xFF1
 14979                           intcon3	equ	0xFF0
 14980                           indf0	equ	0xFEF
 14981                           postinc0	equ	0xFEE
 14982                           fsr0h	equ	0xFEA
 14983                           fsr0l	equ	0xFE9
 14984                           wreg	equ	0xFE8
 14985                           postinc1	equ	0xFE6
 14986                           postdec1	equ	0xFE5
 14987                           plusw1	equ	0xFE3
 14988                           fsr1h	equ	0xFE2
 14989                           fsr1l	equ	0xFE1
 14990                           indf2	equ	0xFDF
 14991                           postinc2	equ	0xFDE
 14992                           postdec2	equ	0xFDD
 14993                           fsr2h	equ	0xFDA
 14994                           fsr2l	equ	0xFD9
 14995                           status	equ	0xFD8
 14996                           
 14997 ;; *************** function _ExecuteRxParamSetupReq *****************
 14998 ;; Defined at:
 14999 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15000 ;; Parameters:    Size  Location     Type
 15001 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 15002 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15003 ;; Auto vars:     Size  Location     Type
 15004 ;;  frequency       4   18[BANK0 ] unsigned long 
 15005 ;;  dlSettings      1   22[BANK0 ] struct .
 15006 ;; Return value:  Size  Location     Type
 15007 ;;                  2   16[BANK0 ] PTR unsigned char 
 15008 ;; Registers used:
 15009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15010 ;; Tracked objects:
 15011 ;;		On entry : F/0
 15012 ;;		On exit  : F/2
 15013 ;;		Unchanged: 0/0
 15014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15015 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15016 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15018 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15019 ;;Total ram usage:        7 bytes
 15020 ;; Hardware stack levels used:    1
 15021 ;; Hardware stack levels required when called:    8
 15022 ;; This function calls:
 15023 ;;		_UpdateReceiveWindow2Parameters
 15024 ;;		_ValidateDataRate
 15025 ;;		_ValidateFrequency
 15026 ;;		_ValidateRxOffset
 15027 ;;		___lmul
 15028 ;; This function is called by:
 15029 ;;		_MacExecuteCommands
 15030 ;; This function uses a non-reentrant model
 15031 ;;
 15032                           
 15033                           	psect	text76
 15034  0042E4                     __ptext76:
 15035                           	opt stack 0
 15036  0042E4                     _ExecuteRxParamSetupReq:
 15037                           	opt stack 17
 15038                           
 15039                           ; BSR set to: 0
 15040                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 15041                           
 15042                           ; BSR set to: 0
 15043                           
 15044                           ; BSR set to: 2
 15045                           ;incstack = 0
 15046  0042E4  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15047  0042E8  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15048  0042EC  50DF               	movf	indf2,w,c
 15049  0042EE  6F76               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15050                           
 15051                           ; BSR set to: 0
 15052  0042F0  4B70               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15053  0042F2  2B71               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15054                           
 15055                           ; BSR set to: 0
 15056                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15057  0042F4  C070  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15058  0042F8  C071  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15059  0042FC  0EFF               	movlw	255
 15060  0042FE  14DE               	andwf	postinc2,w,c
 15061  004300  6F72               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15062  004302  0EFF               	movlw	255
 15063  004304  14DE               	andwf	postinc2,w,c
 15064  004306  6F73               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15065  004308  0EFF               	movlw	255
 15066  00430A  14DE               	andwf	postinc2,w,c
 15067  00430C  6F74               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15068  00430E  0E00               	movlw	0
 15069  004310  14DE               	andwf	postinc2,w,c
 15070  004312  6F75               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15071                           
 15072                           ; BSR set to: 0
 15073                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 15074  004314  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15075  004318  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15076  00431C  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15077  004320  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15078  004324  0E64               	movlw	100
 15079  004326  6F68               	movwf	___lmul@multiplicand& (0+255),b
 15080  004328  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15081  00432A  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15082  00432C  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15083  00432E  EC9D  F02F         	call	___lmul	;wreg free
 15084  004332  C064  F072         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15085  004336  C065  F073         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15086  00433A  C066  F074         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15087  00433E  C067  F075         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15088                           
 15089                           ; BSR set to: 0
 15090                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 15091  004342  0E03               	movlw	3
 15092  004344  2770               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15093  004346  0E00               	movlw	0
 15094  004348  2371               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15095                           
 15096                           ; BSR set to: 0
 15097                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 15098  00434A  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 15099  00434E  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 15100  004352  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 15101  004356  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 15102  00435A  EC4F  F034         	call	_ValidateFrequency	;wreg free
 15103  00435E  0900               	iorlw	0
 15104  004360  E10A               	bnz	l13852
 15105                           
 15106                           ; BSR set to: 0
 15107                           ;lorawan_eu.c: 754: {
 15108                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 15109  004362  0102               	movlb	2	; () banked
 15110  004364  51A7               	movf	(_loRa+167)& (0+255),w,b
 15111  004366  0D02               	mullw	2
 15112  004368  0EA9               	movlw	low (_loRa+169)
 15113  00436A  24F3               	addwf	prodl,w,c
 15114  00436C  6ED9               	movwf	fsr2l,c
 15115  00436E  0E02               	movlw	high (_loRa+169)
 15116  004370  20F4               	addwfc	prodh,w,c
 15117  004372  6EDA               	movwf	fsr2h,c
 15118  004374  86DF               	bsf	indf2,3,c
 15119  004376                     l13852:
 15120                           
 15121                           ;lorawan_eu.c: 756: }
 15122                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 15123  004376  0100               	movlb	0	; () banked
 15124  004378  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15125  00437A  0B0F               	andlw	15
 15126  00437C  EC67  F03C         	call	_ValidateDataRate
 15127  004380  0900               	iorlw	0
 15128  004382  E10A               	bnz	l13856
 15129                           
 15130                           ; BSR set to: 0
 15131                           ;lorawan_eu.c: 759: {
 15132                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 15133  004384  0102               	movlb	2	; () banked
 15134  004386  51A7               	movf	(_loRa+167)& (0+255),w,b
 15135  004388  0D02               	mullw	2
 15136  00438A  0EA9               	movlw	low (_loRa+169)
 15137  00438C  24F3               	addwf	prodl,w,c
 15138  00438E  6ED9               	movwf	fsr2l,c
 15139  004390  0E02               	movlw	high (_loRa+169)
 15140  004392  20F4               	addwfc	prodh,w,c
 15141  004394  6EDA               	movwf	fsr2h,c
 15142  004396  88DF               	bsf	indf2,4,c
 15143  004398                     l13856:
 15144                           
 15145                           ;lorawan_eu.c: 761: }
 15146                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 15147  004398  0100               	movlb	0	; () banked
 15148  00439A  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15149  00439C  0B07               	andlw	7
 15150  00439E  EC5D  F03C         	call	_ValidateRxOffset
 15151  0043A2  0900               	iorlw	0
 15152  0043A4  E10A               	bnz	l1129
 15153                           
 15154                           ; BSR set to: 0
 15155                           ;lorawan_eu.c: 764: {
 15156                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 15157  0043A6  0102               	movlb	2	; () banked
 15158  0043A8  51A7               	movf	(_loRa+167)& (0+255),w,b
 15159  0043AA  0D02               	mullw	2
 15160  0043AC  0EA9               	movlw	low (_loRa+169)
 15161  0043AE  24F3               	addwf	prodl,w,c
 15162  0043B0  6ED9               	movwf	fsr2l,c
 15163  0043B2  0E02               	movlw	high (_loRa+169)
 15164  0043B4  20F4               	addwfc	prodh,w,c
 15165  0043B6  6EDA               	movwf	fsr2h,c
 15166  0043B8  8ADF               	bsf	indf2,5,c
 15167  0043BA                     l1129:
 15168                           
 15169                           ;lorawan_eu.c: 766: }
 15170                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 15171  0043BA  0102               	movlb	2	; () banked
 15172  0043BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 15173  0043BE  0D02               	mullw	2
 15174  0043C0  0EA9               	movlw	low (_loRa+169)
 15175  0043C2  24F3               	addwf	prodl,w,c
 15176  0043C4  6ED9               	movwf	fsr2l,c
 15177  0043C6  0E02               	movlw	high (_loRa+169)
 15178  0043C8  20F4               	addwfc	prodh,w,c
 15179  0043CA  6EDA               	movwf	fsr2h,c
 15180  0043CC  A8DF               	btfss	indf2,4,c
 15181  0043CE  D029               	goto	l13870
 15182                           
 15183                           ; BSR set to: 2
 15184  0043D0  51A7               	movf	(_loRa+167)& (0+255),w,b
 15185  0043D2  0D02               	mullw	2
 15186  0043D4  0EA9               	movlw	low (_loRa+169)
 15187  0043D6  24F3               	addwf	prodl,w,c
 15188  0043D8  6ED9               	movwf	fsr2l,c
 15189  0043DA  0E02               	movlw	high (_loRa+169)
 15190  0043DC  20F4               	addwfc	prodh,w,c
 15191  0043DE  6EDA               	movwf	fsr2h,c
 15192  0043E0  A6DF               	btfss	indf2,3,c
 15193  0043E2  D01F               	goto	l13870
 15194                           
 15195                           ; BSR set to: 2
 15196  0043E4  51A7               	movf	(_loRa+167)& (0+255),w,b
 15197  0043E6  0D02               	mullw	2
 15198  0043E8  0EA9               	movlw	low (_loRa+169)
 15199  0043EA  24F3               	addwf	prodl,w,c
 15200  0043EC  6ED9               	movwf	fsr2l,c
 15201  0043EE  0E02               	movlw	high (_loRa+169)
 15202  0043F0  20F4               	addwfc	prodh,w,c
 15203  0043F2  6EDA               	movwf	fsr2h,c
 15204  0043F4  AADF               	btfss	indf2,5,c
 15205  0043F6  D015               	goto	l13870
 15206                           
 15207                           ; BSR set to: 2
 15208                           ;lorawan_eu.c: 769: {
 15209                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 15210  0043F8  0100               	movlb	0	; () banked
 15211  0043FA  3976               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15212  0043FC  0B07               	andlw	7
 15213  0043FE  0102               	movlb	2	; () banked
 15214  004400  6FEF               	movwf	(_loRa+239)& (0+255),b
 15215                           
 15216                           ; BSR set to: 2
 15217                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 15218  004402  C072  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 15219  004406  C073  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 15220  00440A  C074  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 15221  00440E  C075  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 15222  004412  0100               	movlb	0	; () banked
 15223  004414  5176               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 15224  004416  0B0F               	andlw	15
 15225  004418  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 15226  00441A  EC47  F03C         	call	_UpdateReceiveWindow2Parameters	;wreg free
 15227                           
 15228                           ; BSR set to: 0
 15229                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 15230  00441E  0102               	movlb	2	; () banked
 15231  004420  8F03               	bsf	(_loRa+3)& (0+255),7,b
 15232  004422                     l13870:
 15233                           
 15234                           ; BSR set to: 2
 15235                           ;lorawan_eu.c: 773: }
 15236                           ;lorawan_eu.c: 775: return ptr;
 15237  004422  C070  F070         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 15238  004426  C071  F071         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 15239                           
 15240                           ; BSR set to: 2
 15241  00442A  0012               	return		;funcret
 15242  00442C                     __end_of_ExecuteRxParamSetupReq:
 15243                           	opt stack 0
 15244                           tosu	equ	0xFFF
 15245                           tosh	equ	0xFFE
 15246                           tosl	equ	0xFFD
 15247                           pclath	equ	0xFFA
 15248                           tblptru	equ	0xFF8
 15249                           tblptrh	equ	0xFF7
 15250                           tblptrl	equ	0xFF6
 15251                           tablat	equ	0xFF5
 15252                           prodh	equ	0xFF4
 15253                           prodl	equ	0xFF3
 15254                           intcon	equ	0xFF2
 15255                           intcon2	equ	0xFF1
 15256                           intcon3	equ	0xFF0
 15257                           indf0	equ	0xFEF
 15258                           postinc0	equ	0xFEE
 15259                           fsr0h	equ	0xFEA
 15260                           fsr0l	equ	0xFE9
 15261                           wreg	equ	0xFE8
 15262                           postinc1	equ	0xFE6
 15263                           postdec1	equ	0xFE5
 15264                           plusw1	equ	0xFE3
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           indf2	equ	0xFDF
 15268                           postinc2	equ	0xFDE
 15269                           postdec2	equ	0xFDD
 15270                           fsr2h	equ	0xFDA
 15271                           fsr2l	equ	0xFD9
 15272                           status	equ	0xFD8
 15273                           
 15274 ;; *************** function _ValidateRxOffset *****************
 15275 ;; Defined at:
 15276 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;  rxOffset        1    wreg     unsigned char 
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 15281 ;;  result          1    5[BANK0 ] enum E8016
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      enum E8016
 15284 ;; Registers used:
 15285 ;;		wreg, status,2, status,0
 15286 ;; Tracked objects:
 15287 ;;		On entry : F/0
 15288 ;;		On exit  : F/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15292 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15294 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15295 ;;Total ram usage:        2 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:    7
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		_ExecuteRxParamSetupReq
 15302 ;; This function uses a non-reentrant model
 15303 ;;
 15304                           
 15305                           	psect	text77
 15306  0078BA                     __ptext77:
 15307                           	opt stack 0
 15308  0078BA                     _ValidateRxOffset:
 15309                           	opt stack 17
 15310                           
 15311                           ; BSR set to: 2
 15312                           ;incstack = 0
 15313                           ;ValidateRxOffset@rxOffset stored from wreg
 15314  0078BA  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 15315                           
 15316                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 15317  0078BC  0100               	movlb	0	; () banked
 15318  0078BE  6B65               	clrf	ValidateRxOffset@result& (0+255),b
 15319                           
 15320                           ; BSR set to: 0
 15321                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 15322  0078C0  0E05               	movlw	5
 15323  0078C2  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 15324  0078C4  D002               	goto	l1225
 15325                           
 15326                           ; BSR set to: 0
 15327                           ;lorawan_eu.c: 1081: {
 15328                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 15329  0078C6  0E03               	movlw	3
 15330  0078C8  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 15331  0078CA                     l1225:
 15332                           
 15333                           ; BSR set to: 0
 15334                           ;lorawan_eu.c: 1083: }
 15335                           ;lorawan_eu.c: 1085: return result;
 15336  0078CA  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 15337                           
 15338                           ; BSR set to: 0
 15339  0078CC  0012               	return		;funcret
 15340  0078CE                     __end_of_ValidateRxOffset:
 15341                           	opt stack 0
 15342                           tosu	equ	0xFFF
 15343                           tosh	equ	0xFFE
 15344                           tosl	equ	0xFFD
 15345                           pclath	equ	0xFFA
 15346                           tblptru	equ	0xFF8
 15347                           tblptrh	equ	0xFF7
 15348                           tblptrl	equ	0xFF6
 15349                           tablat	equ	0xFF5
 15350                           prodh	equ	0xFF4
 15351                           prodl	equ	0xFF3
 15352                           intcon	equ	0xFF2
 15353                           intcon2	equ	0xFF1
 15354                           intcon3	equ	0xFF0
 15355                           indf0	equ	0xFEF
 15356                           postinc0	equ	0xFEE
 15357                           fsr0h	equ	0xFEA
 15358                           fsr0l	equ	0xFE9
 15359                           wreg	equ	0xFE8
 15360                           postinc1	equ	0xFE6
 15361                           postdec1	equ	0xFE5
 15362                           plusw1	equ	0xFE3
 15363                           fsr1h	equ	0xFE2
 15364                           fsr1l	equ	0xFE1
 15365                           indf2	equ	0xFDF
 15366                           postinc2	equ	0xFDE
 15367                           postdec2	equ	0xFDD
 15368                           fsr2h	equ	0xFDA
 15369                           fsr2l	equ	0xFD9
 15370                           status	equ	0xFD8
 15371                           
 15372 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 15373 ;; Defined at:
 15374 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;  frequency       4    4[BANK0 ] unsigned long 
 15377 ;;  dataRate        1    8[BANK0 ] unsigned char 
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;		None
 15380 ;; Return value:  Size  Location     Type
 15381 ;;                  1    wreg      void 
 15382 ;; Registers used:
 15383 ;;		None
 15384 ;; Tracked objects:
 15385 ;;		On entry : F/0
 15386 ;;		On exit  : F/0
 15387 ;;		Unchanged: F/0
 15388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15389 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15392 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15393 ;;Total ram usage:        5 bytes
 15394 ;; Hardware stack levels used:    1
 15395 ;; Hardware stack levels required when called:    7
 15396 ;; This function calls:
 15397 ;;		Nothing
 15398 ;; This function is called by:
 15399 ;;		_ExecuteRxParamSetupReq
 15400 ;; This function uses a non-reentrant model
 15401 ;;
 15402                           
 15403                           	psect	text78
 15404  00788E                     __ptext78:
 15405                           	opt stack 0
 15406  00788E                     _UpdateReceiveWindow2Parameters:
 15407                           	opt stack 17
 15408                           
 15409                           ; BSR set to: 0
 15410                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;incstack = 0
 15414  00788E  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 15415                           
 15416                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 15417  007892  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 15418  007896  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 15419  00789A  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 15420  00789E  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 15421                           
 15422                           ; BSR set to: 0
 15423  0078A2  0012               	return		;funcret
 15424  0078A4                     __end_of_UpdateReceiveWindow2Parameters:
 15425                           	opt stack 0
 15426                           tosu	equ	0xFFF
 15427                           tosh	equ	0xFFE
 15428                           tosl	equ	0xFFD
 15429                           pclath	equ	0xFFA
 15430                           tblptru	equ	0xFF8
 15431                           tblptrh	equ	0xFF7
 15432                           tblptrl	equ	0xFF6
 15433                           tablat	equ	0xFF5
 15434                           prodh	equ	0xFF4
 15435                           prodl	equ	0xFF3
 15436                           intcon	equ	0xFF2
 15437                           intcon2	equ	0xFF1
 15438                           intcon3	equ	0xFF0
 15439                           indf0	equ	0xFEF
 15440                           postinc0	equ	0xFEE
 15441                           fsr0h	equ	0xFEA
 15442                           fsr0l	equ	0xFE9
 15443                           wreg	equ	0xFE8
 15444                           postinc1	equ	0xFE6
 15445                           postdec1	equ	0xFE5
 15446                           plusw1	equ	0xFE3
 15447                           fsr1h	equ	0xFE2
 15448                           fsr1l	equ	0xFE1
 15449                           indf2	equ	0xFDF
 15450                           postinc2	equ	0xFDE
 15451                           postdec2	equ	0xFDD
 15452                           fsr2h	equ	0xFDA
 15453                           fsr2l	equ	0xFD9
 15454                           status	equ	0xFD8
 15455                           
 15456 ;; *************** function _ExecuteNewChannel *****************
 15457 ;; Defined at:
 15458 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  ptr             2   16[BANK0 ] PTR unsigned char 
 15461 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;  frequency       4   19[BANK0 ] unsigned long 
 15464 ;;  channelIndex    1   23[BANK0 ] unsigned char 
 15465 ;;  drRange         1   18[BANK0 ] struct .
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  2   16[BANK0 ] PTR unsigned char 
 15468 ;; Registers used:
 15469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15470 ;; Tracked objects:
 15471 ;;		On entry : F/0
 15472 ;;		On exit  : F/2
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15475 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15476 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15478 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15479 ;;Total ram usage:        8 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    9
 15482 ;; This function calls:
 15483 ;;		_LORAWAN_SetChannelIdStatus
 15484 ;;		_UpdateChannelIdStatus
 15485 ;;		_UpdateDataRange
 15486 ;;		_UpdateDutyCycle
 15487 ;;		_UpdateFrequency
 15488 ;;		_ValidateChannelId
 15489 ;;		_ValidateDataRange
 15490 ;;		_ValidateFrequency
 15491 ;;		___lmul
 15492 ;; This function is called by:
 15493 ;;		_MacExecuteCommands
 15494 ;; This function uses a non-reentrant model
 15495 ;;
 15496                           
 15497                           	psect	text79
 15498  0033B6                     __ptext79:
 15499                           	opt stack 0
 15500  0033B6                     _ExecuteNewChannel:
 15501                           	opt stack 16
 15502                           
 15503                           ; BSR set to: 0
 15504                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 15505                           
 15506                           ; BSR set to: 0
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;incstack = 0
 15510  0033B6  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15511  0033BA  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15512  0033BE  50DF               	movf	indf2,w,c
 15513  0033C0  6F77               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 15514                           
 15515                           ; BSR set to: 0
 15516  0033C2  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15517  0033C4  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15518                           
 15519                           ; BSR set to: 0
 15520                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15521  0033C6  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15522  0033CA  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15523  0033CE  0EFF               	movlw	255
 15524  0033D0  14DE               	andwf	postinc2,w,c
 15525  0033D2  6F73               	movwf	ExecuteNewChannel@frequency& (0+255),b
 15526  0033D4  0EFF               	movlw	255
 15527  0033D6  14DE               	andwf	postinc2,w,c
 15528  0033D8  6F74               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 15529  0033DA  0EFF               	movlw	255
 15530  0033DC  14DE               	andwf	postinc2,w,c
 15531  0033DE  6F75               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 15532  0033E0  0E00               	movlw	0
 15533  0033E2  14DE               	andwf	postinc2,w,c
 15534  0033E4  6F76               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 15535                           
 15536                           ; BSR set to: 0
 15537                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 15538  0033E6  C073  F064         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 15539  0033EA  C074  F065         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 15540  0033EE  C075  F066         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 15541  0033F2  C076  F067         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 15542  0033F6  0E64               	movlw	100
 15543  0033F8  6F68               	movwf	___lmul@multiplicand& (0+255),b
 15544  0033FA  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 15545  0033FC  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 15546  0033FE  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 15547  003400  EC9D  F02F         	call	___lmul	;wreg free
 15548  003404  C064  F073         	movff	?___lmul,ExecuteNewChannel@frequency
 15549  003408  C065  F074         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 15550  00340C  C066  F075         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 15551  003410  C067  F076         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 15552                           
 15553                           ; BSR set to: 0
 15554                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 15555  003414  0E03               	movlw	3
 15556  003416  2770               	addwf	ExecuteNewChannel@ptr& (0+255),f,b
 15557  003418  0E00               	movlw	0
 15558  00341A  2371               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15559                           
 15560                           ; BSR set to: 0
 15561                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 15562  00341C  C070  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 15563  003420  C071  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 15564  003424  50DF               	movf	indf2,w,c
 15565  003426  6F72               	movwf	ExecuteNewChannel@drRange& (0+255),b
 15566                           
 15567                           ; BSR set to: 0
 15568  003428  4B70               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 15569  00342A  2B71               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 15570                           
 15571                           ; BSR set to: 0
 15572                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 15573  00342C  6B64               	clrf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 15574  00342E  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15575  003430  EC1F  F03B         	call	_ValidateChannelId
 15576  003434  0900               	iorlw	0
 15577  003436  E12B               	bnz	l1112
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;lorawan_eu.c: 692: {
 15581                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 15582  003438  C073  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 15583  00343C  C074  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 15584  003440  C075  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 15585  003444  C076  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 15586  003448  EC4F  F034         	call	_ValidateFrequency	;wreg free
 15587  00344C  0900               	iorlw	0
 15588  00344E  E005               	bz	l13808
 15589                           
 15590                           ; BSR set to: 0
 15591  003450  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15592  003452  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15593  003454  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15594  003456  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15595  003458  E10A               	bnz	l13810
 15596  00345A                     l13808:
 15597                           
 15598                           ; BSR set to: 0
 15599                           ;lorawan_eu.c: 694: {
 15600                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 15601  00345A  0102               	movlb	2	; () banked
 15602  00345C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15603  00345E  0D02               	mullw	2
 15604  003460  0EA9               	movlw	low (_loRa+169)
 15605  003462  24F3               	addwf	prodl,w,c
 15606  003464  6ED9               	movwf	fsr2l,c
 15607  003466  0E02               	movlw	high (_loRa+169)
 15608  003468  20F4               	addwfc	prodh,w,c
 15609  00346A  6EDA               	movwf	fsr2h,c
 15610  00346C  8EDF               	bsf	indf2,7,c
 15611  00346E                     l13810:
 15612                           
 15613                           ;lorawan_eu.c: 696: }
 15614                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 15615  00346E  0100               	movlb	0	; () banked
 15616  003470  5172               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 15617  003472  ECC0  F038         	call	_ValidateDataRange
 15618  003476  0900               	iorlw	0
 15619  003478  E10A               	bnz	l1112
 15620                           
 15621                           ; BSR set to: 0
 15622                           ;lorawan_eu.c: 699: {
 15623                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 15624  00347A  0102               	movlb	2	; () banked
 15625  00347C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15626  00347E  0D02               	mullw	2
 15627  003480  0EA9               	movlw	low (_loRa+169)
 15628  003482  24F3               	addwf	prodl,w,c
 15629  003484  6ED9               	movwf	fsr2l,c
 15630  003486  0E02               	movlw	high (_loRa+169)
 15631  003488  20F4               	addwfc	prodh,w,c
 15632  00348A  6EDA               	movwf	fsr2h,c
 15633  00348C  8CDF               	bsf	indf2,6,c
 15634  00348E                     l1112:
 15635                           
 15636                           ;lorawan_eu.c: 701: }
 15637                           ;lorawan_eu.c: 702: }
 15638                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 15639  00348E  0102               	movlb	2	; () banked
 15640  003490  51A7               	movf	(_loRa+167)& (0+255),w,b
 15641  003492  0D02               	mullw	2
 15642  003494  0EA9               	movlw	low (_loRa+169)
 15643  003496  24F3               	addwf	prodl,w,c
 15644  003498  6ED9               	movwf	fsr2l,c
 15645  00349A  0E02               	movlw	high (_loRa+169)
 15646  00349C  20F4               	addwfc	prodh,w,c
 15647  00349E  6EDA               	movwf	fsr2h,c
 15648  0034A0  AEDF               	btfss	indf2,7,c
 15649  0034A2  D065               	goto	l13832
 15650                           
 15651                           ; BSR set to: 2
 15652  0034A4  51A7               	movf	(_loRa+167)& (0+255),w,b
 15653  0034A6  0D02               	mullw	2
 15654  0034A8  0EA9               	movlw	low (_loRa+169)
 15655  0034AA  24F3               	addwf	prodl,w,c
 15656  0034AC  6ED9               	movwf	fsr2l,c
 15657  0034AE  0E02               	movlw	high (_loRa+169)
 15658  0034B0  20F4               	addwfc	prodh,w,c
 15659  0034B2  6EDA               	movwf	fsr2h,c
 15660  0034B4  ACDF               	btfss	indf2,6,c
 15661  0034B6  D05B               	goto	l13832
 15662                           
 15663                           ; BSR set to: 2
 15664                           ;lorawan_eu.c: 705: {
 15665                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 15666  0034B8  0E10               	movlw	16
 15667  0034BA  61DA               	cpfslt	(_loRa+218)& (0+255),b
 15668  0034BC  D029               	goto	l13824
 15669                           
 15670                           ; BSR set to: 2
 15671                           ;lorawan_eu.c: 707: {
 15672                           ;lorawan_eu.c: 708: if (frequency != 0)
 15673  0034BE  0100               	movlb	0	; () banked
 15674  0034C0  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15675  0034C2  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15676  0034C4  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15677  0034C6  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15678  0034C8  E01E               	bz	l13822
 15679                           
 15680                           ; BSR set to: 0
 15681                           ;lorawan_eu.c: 709: {
 15682                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 15683  0034CA  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15684  0034CE  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15685  0034D2  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15686  0034D6  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15687  0034DA  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15688  0034DC  EC36  F038         	call	_UpdateFrequency
 15689                           
 15690                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 15691  0034E0  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15692  0034E4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15693  0034E6  EC85  F026         	call	_UpdateDataRange
 15694                           
 15695                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 15696  0034EA  0E01               	movlw	1
 15697  0034EC  0100               	movlb	0	; () banked
 15698  0034EE  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15699  0034F0  0E2E               	movlw	46
 15700  0034F2  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15701  0034F4  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15702  0034F6  EC0D  F039         	call	_UpdateDutyCycle
 15703                           
 15704                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 15705  0034FA  0E01               	movlw	1
 15706  0034FC  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15707  0034FE  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15708  003500  EC05  F025         	call	_UpdateChannelIdStatus
 15709                           
 15710                           ;lorawan_eu.c: 714: }
 15711  003504  D032               	goto	l13830
 15712  003506                     l13822:
 15713                           
 15714                           ; BSR set to: 0
 15715                           ;lorawan_eu.c: 715: else
 15716                           ;lorawan_eu.c: 716: {
 15717                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 15718  003506  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15719  003508  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15720  00350A  EC53  F038         	call	_LORAWAN_SetChannelIdStatus
 15721  00350E  D02D               	goto	l13830
 15722  003510                     l13824:
 15723                           
 15724                           ; BSR set to: 2
 15725                           ;lorawan_eu.c: 720: else
 15726                           ;lorawan_eu.c: 721: {
 15727                           ;lorawan_eu.c: 722: if (frequency != 0)
 15728  003510  0100               	movlb	0	; () banked
 15729  003512  5173               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 15730  003514  1174               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 15731  003516  1175               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 15732  003518  1176               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 15733  00351A  E022               	bz	l13828
 15734                           
 15735                           ; BSR set to: 0
 15736                           ;lorawan_eu.c: 723: {
 15737                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 15738  00351C  C073  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 15739  003520  C074  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 15740  003524  C075  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 15741  003528  C076  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 15742  00352C  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15743  00352E  0F10               	addlw	16
 15744  003530  EC36  F038         	call	_UpdateFrequency
 15745                           
 15746                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 15747  003534  C072  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 15748  003538  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15749  00353A  0F10               	addlw	16
 15750  00353C  EC85  F026         	call	_UpdateDataRange
 15751                           
 15752                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 15753  003540  0E01               	movlw	1
 15754  003542  0100               	movlb	0	; () banked
 15755  003544  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 15756  003546  0E2E               	movlw	46
 15757  003548  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 15758  00354A  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15759  00354C  0F10               	addlw	16
 15760  00354E  EC0D  F039         	call	_UpdateDutyCycle
 15761                           
 15762                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 15763  003552  0E01               	movlw	1
 15764  003554  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 15765  003556  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15766  003558  0F10               	addlw	16
 15767  00355A  EC05  F025         	call	_UpdateChannelIdStatus
 15768                           
 15769                           ;lorawan_eu.c: 728: }
 15770  00355E  D005               	goto	l13830
 15771  003560                     l13828:
 15772                           
 15773                           ; BSR set to: 0
 15774                           ;lorawan_eu.c: 729: else
 15775                           ;lorawan_eu.c: 730: {
 15776                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 15777  003560  6B68               	clrf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 15778  003562  5177               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 15779  003564  0F10               	addlw	16
 15780  003566  EC53  F038         	call	_LORAWAN_SetChannelIdStatus
 15781  00356A                     l13830:
 15782                           
 15783                           ;lorawan_eu.c: 732: }
 15784                           ;lorawan_eu.c: 733: }
 15785                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 15786  00356A  0102               	movlb	2	; () banked
 15787  00356C  8703               	bsf	(_loRa+3)& (0+255),3,b
 15788  00356E                     l13832:
 15789                           
 15790                           ; BSR set to: 2
 15791                           ;lorawan_eu.c: 736: }
 15792                           ;lorawan_eu.c: 737: return ptr;
 15793  00356E  C070  F070         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 15794  003572  C071  F071         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 15795                           
 15796                           ; BSR set to: 2
 15797  003576  0012               	return		;funcret
 15798  003578                     __end_of_ExecuteNewChannel:
 15799                           	opt stack 0
 15800                           tosu	equ	0xFFF
 15801                           tosh	equ	0xFFE
 15802                           tosl	equ	0xFFD
 15803                           pclath	equ	0xFFA
 15804                           tblptru	equ	0xFF8
 15805                           tblptrh	equ	0xFF7
 15806                           tblptrl	equ	0xFF6
 15807                           tablat	equ	0xFF5
 15808                           prodh	equ	0xFF4
 15809                           prodl	equ	0xFF3
 15810                           intcon	equ	0xFF2
 15811                           intcon2	equ	0xFF1
 15812                           intcon3	equ	0xFF0
 15813                           indf0	equ	0xFEF
 15814                           postinc0	equ	0xFEE
 15815                           fsr0h	equ	0xFEA
 15816                           fsr0l	equ	0xFE9
 15817                           wreg	equ	0xFE8
 15818                           postinc1	equ	0xFE6
 15819                           postdec1	equ	0xFE5
 15820                           plusw1	equ	0xFE3
 15821                           fsr1h	equ	0xFE2
 15822                           fsr1l	equ	0xFE1
 15823                           indf2	equ	0xFDF
 15824                           postinc2	equ	0xFDE
 15825                           postdec2	equ	0xFDD
 15826                           fsr2h	equ	0xFDA
 15827                           fsr2l	equ	0xFD9
 15828                           status	equ	0xFD8
 15829                           
 15830 ;; *************** function _ValidateFrequency *****************
 15831 ;; Defined at:
 15832 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;  result          1    8[BANK0 ] enum E8016
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      enum E8016
 15839 ;; Registers used:
 15840 ;;		wreg, status,2, status,0
 15841 ;; Tracked objects:
 15842 ;;		On entry : F/0
 15843 ;;		On exit  : F/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15846 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15847 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15849 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15850 ;;Total ram usage:        5 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    7
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_ExecuteNewChannel
 15857 ;;		_ExecuteRxParamSetupReq
 15858 ;;		_UpdateCfList
 15859 ;; This function uses a non-reentrant model
 15860 ;;
 15861                           
 15862                           	psect	text80
 15863  00689E                     __ptext80:
 15864                           	opt stack 0
 15865  00689E                     _ValidateFrequency:
 15866                           	opt stack 18
 15867                           
 15868                           ; BSR set to: 0
 15869                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 15870                           
 15871                           ; BSR set to: 2
 15872                           ;incstack = 0
 15873  00689E  6B68               	clrf	ValidateFrequency@result& (0+255),b
 15874                           
 15875                           ; BSR set to: 0
 15876                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 15877  0068A0  0102               	movlb	2	; () banked
 15878  0068A2  51A4               	movf	(_loRa+164)& (0+255),w,b
 15879  0068A4  E116               	bnz	l13030
 15880                           
 15881                           ; BSR set to: 2
 15882                           ;lorawan_eu.c: 1093: {
 15883                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 15884  0068A6  0E81               	movlw	129
 15885  0068A8  0100               	movlb	0	; () banked
 15886  0068AA  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15887  0068AC  0E25               	movlw	37
 15888  0068AE  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15889  0068B0  0EDB               	movlw	219
 15890  0068B2  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15891  0068B4  0E33               	movlw	51
 15892  0068B6  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15893  0068B8  E209               	bc	l13028
 15894                           
 15895                           ; BSR set to: 0
 15896  0068BA  0EC0               	movlw	192
 15897  0068BC  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15898  0068BE  0E55               	movlw	85
 15899  0068C0  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15900  0068C2  0E70               	movlw	112
 15901  0068C4  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15902  0068C6  0E33               	movlw	51
 15903  0068C8  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15904  0068CA  E215               	bc	l1233
 15905  0068CC                     l13028:
 15906                           
 15907                           ; BSR set to: 0
 15908                           ;lorawan_eu.c: 1095: {
 15909                           ;lorawan_eu.c: 1096: result = INVALID_PARAMETER ;
 15910  0068CC  0E03               	movlw	3
 15911  0068CE  6F68               	movwf	ValidateFrequency@result& (0+255),b
 15912  0068D0  D012               	goto	l1233
 15913  0068D2                     l13030:
 15914                           
 15915                           ; BSR set to: 2
 15916                           ;lorawan_eu.c: 1099: else
 15917                           ;lorawan_eu.c: 1100: {
 15918                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 15919  0068D2  0E71               	movlw	113
 15920  0068D4  0100               	movlb	0	; () banked
 15921  0068D6  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15922  0068D8  0E5E               	movlw	94
 15923  0068DA  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15924  0068DC  0EEA               	movlw	234
 15925  0068DE  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15926  0068E0  0E19               	movlw	25
 15927  0068E2  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 15928  0068E4  E2F3               	bc	l13028
 15929                           
 15930                           ; BSR set to: 0
 15931  0068E6  0E90               	movlw	144
 15932  0068E8  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 15933  0068EA  0ED1               	movlw	209
 15934  0068EC  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 15935  0068EE  0ECF               	movlw	207
 15936  0068F0  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 15937  0068F2  0E19               	movlw	25
 15938  0068F4  D7E9               	goto	L7
 15939  0068F6                     l1233:
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;lorawan_eu.c: 1104: }
 15943                           ;lorawan_eu.c: 1105: }
 15944                           ;lorawan_eu.c: 1107: return result;
 15945  0068F6  5168               	movf	ValidateFrequency@result& (0+255),w,b
 15946                           
 15947                           ; BSR set to: 0
 15948  0068F8  0012               	return		;funcret
 15949  0068FA                     __end_of_ValidateFrequency:
 15950                           	opt stack 0
 15951                           tosu	equ	0xFFF
 15952                           tosh	equ	0xFFE
 15953                           tosl	equ	0xFFD
 15954                           pclath	equ	0xFFA
 15955                           tblptru	equ	0xFF8
 15956                           tblptrh	equ	0xFF7
 15957                           tblptrl	equ	0xFF6
 15958                           tablat	equ	0xFF5
 15959                           prodh	equ	0xFF4
 15960                           prodl	equ	0xFF3
 15961                           intcon	equ	0xFF2
 15962                           intcon2	equ	0xFF1
 15963                           intcon3	equ	0xFF0
 15964                           indf0	equ	0xFEF
 15965                           postinc0	equ	0xFEE
 15966                           fsr0h	equ	0xFEA
 15967                           fsr0l	equ	0xFE9
 15968                           wreg	equ	0xFE8
 15969                           postinc1	equ	0xFE6
 15970                           postdec1	equ	0xFE5
 15971                           plusw1	equ	0xFE3
 15972                           fsr1h	equ	0xFE2
 15973                           fsr1l	equ	0xFE1
 15974                           indf2	equ	0xFDF
 15975                           postinc2	equ	0xFDE
 15976                           postdec2	equ	0xFDD
 15977                           fsr2h	equ	0xFDA
 15978                           fsr2l	equ	0xFD9
 15979                           status	equ	0xFD8
 15980                           
 15981 ;; *************** function _ValidateDataRange *****************
 15982 ;; Defined at:
 15983 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15984 ;; Parameters:    Size  Location     Type
 15985 ;;  dataRangeNew    1    wreg     unsigned char 
 15986 ;; Auto vars:     Size  Location     Type
 15987 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 15988 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 15989 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 15990 ;;  result          1    6[BANK0 ] enum E8016
 15991 ;; Return value:  Size  Location     Type
 15992 ;;                  1    wreg      enum E8016
 15993 ;; Registers used:
 15994 ;;		wreg, status,2, status,0, cstack
 15995 ;; Tracked objects:
 15996 ;;		On entry : F/0
 15997 ;;		On exit  : F/0
 15998 ;;		Unchanged: 0/0
 15999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16003 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16004 ;;Total ram usage:        4 bytes
 16005 ;; Hardware stack levels used:    1
 16006 ;; Hardware stack levels required when called:    8
 16007 ;; This function calls:
 16008 ;;		_ValidateDataRate
 16009 ;; This function is called by:
 16010 ;;		_ExecuteNewChannel
 16011 ;; This function uses a non-reentrant model
 16012 ;;
 16013                           
 16014                           	psect	text81
 16015  007180                     __ptext81:
 16016                           	opt stack 0
 16017  007180                     _ValidateDataRange:
 16018                           	opt stack 16
 16019                           
 16020                           ; BSR set to: 0
 16021                           ;incstack = 0
 16022                           ;ValidateDataRange@dataRangeNew stored from wreg
 16023  007180  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 16024                           
 16025                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 16026  007182  0100               	movlb	0	; () banked
 16027  007184  6B66               	clrf	ValidateDataRange@result& (0+255),b
 16028                           
 16029                           ; BSR set to: 0
 16030                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 16031                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 16032  007186  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16033  007188  0B0F               	andlw	15
 16034  00718A  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 16035                           
 16036                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 16037  00718C  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 16038  00718E  0B0F               	andlw	15
 16039  007190  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 16040                           
 16041                           ; BSR set to: 0
 16042                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 16043  007192  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 16044  007194  EC67  F03C         	call	_ValidateDataRate
 16045  007198  0900               	iorlw	0
 16046  00719A  E108               	bnz	l13050
 16047                           
 16048                           ; BSR set to: 0
 16049  00719C  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16050  00719E  EC67  F03C         	call	_ValidateDataRate
 16051  0071A2  0900               	iorlw	0
 16052  0071A4  E103               	bnz	l13050
 16053                           
 16054                           ; BSR set to: 0
 16055  0071A6  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 16056  0071A8  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 16057  0071AA  E202               	bc	l1240
 16058  0071AC                     l13050:
 16059                           
 16060                           ; BSR set to: 0
 16061                           ;lorawan_eu.c: 1119: {
 16062                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 16063  0071AC  0E03               	movlw	3
 16064  0071AE  6F66               	movwf	ValidateDataRange@result& (0+255),b
 16065  0071B0                     l1240:
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;lorawan_eu.c: 1121: }
 16069                           ;lorawan_eu.c: 1122: return result;
 16070  0071B0  5166               	movf	ValidateDataRange@result& (0+255),w,b
 16071                           
 16072                           ; BSR set to: 0
 16073  0071B2  0012               	return		;funcret
 16074  0071B4                     __end_of_ValidateDataRange:
 16075                           	opt stack 0
 16076                           tosu	equ	0xFFF
 16077                           tosh	equ	0xFFE
 16078                           tosl	equ	0xFFD
 16079                           pclath	equ	0xFFA
 16080                           tblptru	equ	0xFF8
 16081                           tblptrh	equ	0xFF7
 16082                           tblptrl	equ	0xFF6
 16083                           tablat	equ	0xFF5
 16084                           prodh	equ	0xFF4
 16085                           prodl	equ	0xFF3
 16086                           intcon	equ	0xFF2
 16087                           intcon2	equ	0xFF1
 16088                           intcon3	equ	0xFF0
 16089                           indf0	equ	0xFEF
 16090                           postinc0	equ	0xFEE
 16091                           fsr0h	equ	0xFEA
 16092                           fsr0l	equ	0xFE9
 16093                           wreg	equ	0xFE8
 16094                           postinc1	equ	0xFE6
 16095                           postdec1	equ	0xFE5
 16096                           plusw1	equ	0xFE3
 16097                           fsr1h	equ	0xFE2
 16098                           fsr1l	equ	0xFE1
 16099                           indf2	equ	0xFDF
 16100                           postinc2	equ	0xFDE
 16101                           postdec2	equ	0xFDD
 16102                           fsr2h	equ	0xFDA
 16103                           fsr2l	equ	0xFD9
 16104                           status	equ	0xFD8
 16105                           
 16106 ;; *************** function _UpdateFrequency *****************
 16107 ;; Defined at:
 16108 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16109 ;; Parameters:    Size  Location     Type
 16110 ;;  channelId       1    wreg     unsigned char 
 16111 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 16112 ;; Auto vars:     Size  Location     Type
 16113 ;;  channelId       1    8[BANK0 ] unsigned char 
 16114 ;; Return value:  Size  Location     Type
 16115 ;;                  1    wreg      void 
 16116 ;; Registers used:
 16117 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16118 ;; Tracked objects:
 16119 ;;		On entry : F/0
 16120 ;;		On exit  : F/0
 16121 ;;		Unchanged: 0/0
 16122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16123 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16124 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16126 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16127 ;;Total ram usage:        5 bytes
 16128 ;; Hardware stack levels used:    1
 16129 ;; Hardware stack levels required when called:    7
 16130 ;; This function calls:
 16131 ;;		Nothing
 16132 ;; This function is called by:
 16133 ;;		_ExecuteNewChannel
 16134 ;; This function uses a non-reentrant model
 16135 ;;
 16136                           
 16137                           	psect	text82
 16138  00706C                     __ptext82:
 16139                           	opt stack 0
 16140  00706C                     _UpdateFrequency:
 16141                           	opt stack 17
 16142                           
 16143                           ; BSR set to: 0
 16144                           ;incstack = 0
 16145                           ;UpdateFrequency@channelId stored from wreg
 16146  00706C  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 16147                           
 16148                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 16149  00706E  0100               	movlb	0	; () banked
 16150  007070  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 16151  007072  0D0E               	mullw	14
 16152  007074  0E00               	movlw	low _Channels
 16153  007076  24F3               	addwf	prodl,w,c
 16154  007078  6ED9               	movwf	fsr2l,c
 16155  00707A  0E04               	movlw	high _Channels
 16156  00707C  20F4               	addwfc	prodh,w,c
 16157  00707E  6EDA               	movwf	fsr2h,c
 16158  007080  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 16159  007084  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 16160  007088  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 16161  00708C  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 16162                           
 16163                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 16164  007090  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 16165  007092  0D0E               	mullw	14
 16166  007094  0E0D               	movlw	low (_Channels+13)
 16167  007096  24F3               	addwf	prodl,w,c
 16168  007098  6ED9               	movwf	fsr2l,c
 16169  00709A  0E04               	movlw	high (_Channels+13)
 16170  00709C  20F4               	addwfc	prodh,w,c
 16171  00709E  6EDA               	movwf	fsr2h,c
 16172  0070A0  0E00               	movlw	0
 16173  0070A2  80DB               	bsf	plusw2,0,c
 16174                           
 16175                           ; BSR set to: 0
 16176  0070A4  0C00               	retlw	0	;funcret
 16177  0070A6                     __end_of_UpdateFrequency:
 16178                           	opt stack 0
 16179                           tosu	equ	0xFFF
 16180                           tosh	equ	0xFFE
 16181                           tosl	equ	0xFFD
 16182                           pclath	equ	0xFFA
 16183                           tblptru	equ	0xFF8
 16184                           tblptrh	equ	0xFF7
 16185                           tblptrl	equ	0xFF6
 16186                           tablat	equ	0xFF5
 16187                           prodh	equ	0xFF4
 16188                           prodl	equ	0xFF3
 16189                           intcon	equ	0xFF2
 16190                           intcon2	equ	0xFF1
 16191                           intcon3	equ	0xFF0
 16192                           indf0	equ	0xFEF
 16193                           postinc0	equ	0xFEE
 16194                           fsr0h	equ	0xFEA
 16195                           fsr0l	equ	0xFE9
 16196                           wreg	equ	0xFE8
 16197                           postinc1	equ	0xFE6
 16198                           postdec1	equ	0xFE5
 16199                           plusw1	equ	0xFE3
 16200                           fsr1h	equ	0xFE2
 16201                           fsr1l	equ	0xFE1
 16202                           indf2	equ	0xFDF
 16203                           postinc2	equ	0xFDE
 16204                           postdec2	equ	0xFDD
 16205                           plusw2	equ	0xFDB
 16206                           fsr2h	equ	0xFDA
 16207                           fsr2l	equ	0xFD9
 16208                           status	equ	0xFD8
 16209                           
 16210 ;; *************** function _UpdateDutyCycle *****************
 16211 ;; Defined at:
 16212 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16213 ;; Parameters:    Size  Location     Type
 16214 ;;  channelId       1    wreg     unsigned char 
 16215 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 16216 ;; Auto vars:     Size  Location     Type
 16217 ;;  channelId       1    6[BANK0 ] unsigned char 
 16218 ;; Return value:  Size  Location     Type
 16219 ;;                  1    wreg      void 
 16220 ;; Registers used:
 16221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16222 ;; Tracked objects:
 16223 ;;		On entry : F/0
 16224 ;;		On exit  : F/0
 16225 ;;		Unchanged: 0/0
 16226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16228 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16230 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16231 ;;Total ram usage:        3 bytes
 16232 ;; Hardware stack levels used:    1
 16233 ;; Hardware stack levels required when called:    7
 16234 ;; This function calls:
 16235 ;;		Nothing
 16236 ;; This function is called by:
 16237 ;;		_ExecuteNewChannel
 16238 ;; This function uses a non-reentrant model
 16239 ;;
 16240                           
 16241                           	psect	text83
 16242  00721A                     __ptext83:
 16243                           	opt stack 0
 16244  00721A                     _UpdateDutyCycle:
 16245                           	opt stack 17
 16246                           
 16247                           ; BSR set to: 0
 16248                           ;incstack = 0
 16249                           ;UpdateDutyCycle@channelId stored from wreg
 16250  00721A  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 16251                           
 16252                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 16253  00721C  0100               	movlb	0	; () banked
 16254  00721E  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16255  007220  0D0E               	mullw	14
 16256  007222  0E06               	movlw	low (_Channels+6)
 16257  007224  24F3               	addwf	prodl,w,c
 16258  007226  6ED9               	movwf	fsr2l,c
 16259  007228  0E04               	movlw	high (_Channels+6)
 16260  00722A  20F4               	addwfc	prodh,w,c
 16261  00722C  6EDA               	movwf	fsr2h,c
 16262  00722E  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 16263  007232  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 16264                           
 16265                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 16266  007236  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 16267  007238  0D0E               	mullw	14
 16268  00723A  0E0D               	movlw	low (_Channels+13)
 16269  00723C  24F3               	addwf	prodl,w,c
 16270  00723E  6ED9               	movwf	fsr2l,c
 16271  007240  0E04               	movlw	high (_Channels+13)
 16272  007242  20F4               	addwfc	prodh,w,c
 16273  007244  6EDA               	movwf	fsr2h,c
 16274  007246  0E00               	movlw	0
 16275  007248  84DB               	bsf	plusw2,2,c
 16276                           
 16277                           ; BSR set to: 0
 16278  00724A  0C00               	retlw	0	;funcret
 16279  00724C                     __end_of_UpdateDutyCycle:
 16280                           	opt stack 0
 16281                           tosu	equ	0xFFF
 16282                           tosh	equ	0xFFE
 16283                           tosl	equ	0xFFD
 16284                           pclath	equ	0xFFA
 16285                           tblptru	equ	0xFF8
 16286                           tblptrh	equ	0xFF7
 16287                           tblptrl	equ	0xFF6
 16288                           tablat	equ	0xFF5
 16289                           prodh	equ	0xFF4
 16290                           prodl	equ	0xFF3
 16291                           intcon	equ	0xFF2
 16292                           intcon2	equ	0xFF1
 16293                           intcon3	equ	0xFF0
 16294                           indf0	equ	0xFEF
 16295                           postinc0	equ	0xFEE
 16296                           fsr0h	equ	0xFEA
 16297                           fsr0l	equ	0xFE9
 16298                           wreg	equ	0xFE8
 16299                           postinc1	equ	0xFE6
 16300                           postdec1	equ	0xFE5
 16301                           plusw1	equ	0xFE3
 16302                           fsr1h	equ	0xFE2
 16303                           fsr1l	equ	0xFE1
 16304                           indf2	equ	0xFDF
 16305                           postinc2	equ	0xFDE
 16306                           postdec2	equ	0xFDD
 16307                           plusw2	equ	0xFDB
 16308                           fsr2h	equ	0xFDA
 16309                           fsr2l	equ	0xFD9
 16310                           status	equ	0xFD8
 16311                           
 16312 ;; *************** function _UpdateDataRange *****************
 16313 ;; Defined at:
 16314 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;  channelId       1    wreg     unsigned char 
 16317 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 16318 ;; Auto vars:     Size  Location     Type
 16319 ;;  channelId       1    6[BANK0 ] unsigned char 
 16320 ;;  i               1    7[BANK0 ] unsigned char 
 16321 ;; Return value:  Size  Location     Type
 16322 ;;                  1    wreg      void 
 16323 ;; Registers used:
 16324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16325 ;; Tracked objects:
 16326 ;;		On entry : F/0
 16327 ;;		On exit  : F/2
 16328 ;;		Unchanged: 0/0
 16329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16330 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16332 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16333 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16334 ;;Total ram usage:        4 bytes
 16335 ;; Hardware stack levels used:    1
 16336 ;; Hardware stack levels required when called:    7
 16337 ;; This function calls:
 16338 ;;		Nothing
 16339 ;; This function is called by:
 16340 ;;		_ExecuteNewChannel
 16341 ;; This function uses a non-reentrant model
 16342 ;;
 16343                           
 16344                           	psect	text84
 16345  004D0A                     __ptext84:
 16346                           	opt stack 0
 16347  004D0A                     _UpdateDataRange:
 16348                           	opt stack 17
 16349                           
 16350                           ; BSR set to: 0
 16351                           ;incstack = 0
 16352                           ;UpdateDataRange@channelId stored from wreg
 16353  004D0A  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 16354                           
 16355                           ;lorawan_eu.c: 1011: uint8_t i;
 16356                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 16357  004D0C  0E07               	movlw	7
 16358  004D0E  0102               	movlb	2	; () banked
 16359  004D10  6FEB               	movwf	(_loRa+235)& (0+255),b
 16360                           
 16361                           ; BSR set to: 2
 16362                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 16363  004D12  6BEC               	clrf	(_loRa+236)& (0+255),b
 16364                           
 16365                           ; BSR set to: 2
 16366                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 16367  004D14  0100               	movlb	0	; () banked
 16368  004D16  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 16369  004D18  0D0E               	mullw	14
 16370  004D1A  0E05               	movlw	low (_Channels+5)
 16371  004D1C  24F3               	addwf	prodl,w,c
 16372  004D1E  6ED9               	movwf	fsr2l,c
 16373  004D20  0E04               	movlw	high (_Channels+5)
 16374  004D22  20F4               	addwfc	prodh,w,c
 16375  004D24  6EDA               	movwf	fsr2h,c
 16376  004D26  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 16380  004D2A  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 16381  004D2C  0D0E               	mullw	14
 16382  004D2E  0E0D               	movlw	low (_Channels+13)
 16383  004D30  24F3               	addwf	prodl,w,c
 16384  004D32  6ED9               	movwf	fsr2l,c
 16385  004D34  0E04               	movlw	high (_Channels+13)
 16386  004D36  20F4               	addwfc	prodh,w,c
 16387  004D38  6EDA               	movwf	fsr2h,c
 16388  004D3A  0E00               	movlw	0
 16389  004D3C  82DB               	bsf	plusw2,1,c
 16390                           
 16391                           ; BSR set to: 0
 16392                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 16393  004D3E  6B67               	clrf	UpdateDataRange@i& (0+255),b
 16394  004D40  D04E               	goto	l13076
 16395  004D42                     l13064:
 16396                           
 16397                           ; BSR set to: 0
 16398                           ;lorawan_eu.c: 1020: {
 16399                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 16400  004D42  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16401  004D44  0D0E               	mullw	14
 16402  004D46  0E05               	movlw	low (_Channels+5)
 16403  004D48  24F3               	addwf	prodl,w,c
 16404  004D4A  6ED9               	movwf	fsr2l,c
 16405  004D4C  0E04               	movlw	high (_Channels+5)
 16406  004D4E  20F4               	addwfc	prodh,w,c
 16407  004D50  6EDA               	movwf	fsr2h,c
 16408  004D52  50DF               	movf	223,w,c
 16409  004D54  0B0F               	andlw	15
 16410  004D56  0100               	movlb	0	; () banked
 16411  004D58  6F65               	movwf	??_UpdateDataRange& (0+255),b
 16412  004D5A  0102               	movlb	2	; () banked
 16413  004D5C  51EB               	movf	(_loRa+235)& (0+255),w,b
 16414  004D5E  0100               	movlb	0	; () banked
 16415  004D60  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 16416  004D62  E216               	bc	l1206
 16417                           
 16418                           ; BSR set to: 0
 16419  004D64  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16420  004D66  0D0E               	mullw	14
 16421  004D68  0E04               	movlw	low (_Channels+4)
 16422  004D6A  24F3               	addwf	prodl,w,c
 16423  004D6C  6ED9               	movwf	fsr2l,c
 16424  004D6E  0E04               	movlw	high (_Channels+4)
 16425  004D70  20F4               	addwfc	prodh,w,c
 16426  004D72  6EDA               	movwf	fsr2h,c
 16427  004D74  04DE               	decf	postinc2,w,c
 16428  004D76  E10C               	bnz	l1206
 16429                           
 16430                           ; BSR set to: 0
 16431                           ;lorawan_eu.c: 1022: {
 16432                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 16433  004D78  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16434  004D7A  0D0E               	mullw	14
 16435  004D7C  0E05               	movlw	low (_Channels+5)
 16436  004D7E  24F3               	addwf	prodl,w,c
 16437  004D80  6ED9               	movwf	fsr2l,c
 16438  004D82  0E04               	movlw	high (_Channels+5)
 16439  004D84  20F4               	addwfc	prodh,w,c
 16440  004D86  6EDA               	movwf	fsr2h,c
 16441  004D88  50DF               	movf	223,w,c
 16442  004D8A  0B0F               	andlw	15
 16443  004D8C  0102               	movlb	2	; () banked
 16444  004D8E  6FEB               	movwf	(_loRa+235)& (0+255),b
 16445  004D90                     l1206:
 16446                           
 16447                           ;lorawan_eu.c: 1024: }
 16448                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 16449  004D90  0100               	movlb	0	; () banked
 16450  004D92  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16451  004D94  0D0E               	mullw	14
 16452  004D96  0E05               	movlw	low (_Channels+5)
 16453  004D98  24F3               	addwf	prodl,w,c
 16454  004D9A  6ED9               	movwf	fsr2l,c
 16455  004D9C  0E04               	movlw	high (_Channels+5)
 16456  004D9E  20F4               	addwfc	prodh,w,c
 16457  004DA0  6EDA               	movwf	fsr2h,c
 16458  004DA2  38DF               	swapf	223,w,c
 16459  004DA4  0B0F               	andlw	15
 16460  004DA6  0102               	movlb	2	; () banked
 16461  004DA8  61EC               	cpfslt	(_loRa+236)& (0+255),b
 16462  004DAA  D017               	goto	l13074
 16463                           
 16464                           ; BSR set to: 2
 16465  004DAC  0100               	movlb	0	; () banked
 16466  004DAE  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16467  004DB0  0D0E               	mullw	14
 16468  004DB2  0E04               	movlw	low (_Channels+4)
 16469  004DB4  24F3               	addwf	prodl,w,c
 16470  004DB6  6ED9               	movwf	fsr2l,c
 16471  004DB8  0E04               	movlw	high (_Channels+4)
 16472  004DBA  20F4               	addwfc	prodh,w,c
 16473  004DBC  6EDA               	movwf	fsr2h,c
 16474  004DBE  04DE               	decf	postinc2,w,c
 16475  004DC0  E10C               	bnz	l13074
 16476                           
 16477                           ; BSR set to: 0
 16478                           ;lorawan_eu.c: 1026: {
 16479                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 16480  004DC2  5167               	movf	UpdateDataRange@i& (0+255),w,b
 16481  004DC4  0D0E               	mullw	14
 16482  004DC6  0E05               	movlw	low (_Channels+5)
 16483  004DC8  24F3               	addwf	prodl,w,c
 16484  004DCA  6ED9               	movwf	fsr2l,c
 16485  004DCC  0E04               	movlw	high (_Channels+5)
 16486  004DCE  20F4               	addwfc	prodh,w,c
 16487  004DD0  6EDA               	movwf	fsr2h,c
 16488  004DD2  38DF               	swapf	223,w,c
 16489  004DD4  0B0F               	andlw	15
 16490  004DD6  0102               	movlb	2	; () banked
 16491  004DD8  6FEC               	movwf	(_loRa+236)& (0+255),b
 16492  004DDA                     l13074:
 16493  004DDA  0100               	movlb	0	; () banked
 16494  004DDC  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 16495  004DDE                     l13076:
 16496                           
 16497                           ; BSR set to: 0
 16498  004DDE  0102               	movlb	2	; () banked
 16499  004DE0  51ED               	movf	(_loRa+237)& (0+255),w,b
 16500  004DE2  0100               	movlb	0	; () banked
 16501  004DE4  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 16502  004DE6  E3AD               	bnc	l13064
 16503                           
 16504                           ; BSR set to: 0
 16505                           ;lorawan_eu.c: 1028: }
 16506                           ;lorawan_eu.c: 1029: }
 16507                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 16508  004DE8  0102               	movlb	2	; () banked
 16509  004DEA  51DF               	movf	(_loRa+223)& (0+255),w,b
 16510  004DEC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 16511  004DEE  E202               	bc	l13082
 16512                           
 16513                           ; BSR set to: 2
 16514                           ;lorawan_eu.c: 1032: {
 16515                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 16516  004DF0  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 16517  004DF4                     l13082:
 16518                           
 16519                           ; BSR set to: 2
 16520                           ;lorawan_eu.c: 1034: }
 16521                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 16522  004DF4  51EB               	movf	(_loRa+235)& (0+255),w,b
 16523  004DF6  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 16524  004DF8  A0D8               	btfss	status,0,c
 16525                           
 16526                           ; BSR set to: 2
 16527                           ;lorawan_eu.c: 1037: {
 16528                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 16529  004DFA  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 16530                           
 16531                           ; BSR set to: 2
 16532  004DFE  0012               	return		;funcret
 16533  004E00                     __end_of_UpdateDataRange:
 16534                           	opt stack 0
 16535                           tosu	equ	0xFFF
 16536                           tosh	equ	0xFFE
 16537                           tosl	equ	0xFFD
 16538                           pclath	equ	0xFFA
 16539                           tblptru	equ	0xFF8
 16540                           tblptrh	equ	0xFF7
 16541                           tblptrl	equ	0xFF6
 16542                           tablat	equ	0xFF5
 16543                           prodh	equ	0xFF4
 16544                           prodl	equ	0xFF3
 16545                           intcon	equ	0xFF2
 16546                           intcon2	equ	0xFF1
 16547                           intcon3	equ	0xFF0
 16548                           indf0	equ	0xFEF
 16549                           postinc0	equ	0xFEE
 16550                           fsr0h	equ	0xFEA
 16551                           fsr0l	equ	0xFE9
 16552                           wreg	equ	0xFE8
 16553                           postinc1	equ	0xFE6
 16554                           postdec1	equ	0xFE5
 16555                           plusw1	equ	0xFE3
 16556                           fsr1h	equ	0xFE2
 16557                           fsr1l	equ	0xFE1
 16558                           indf2	equ	0xFDF
 16559                           postinc2	equ	0xFDE
 16560                           postdec2	equ	0xFDD
 16561                           plusw2	equ	0xFDB
 16562                           fsr2h	equ	0xFDA
 16563                           fsr2l	equ	0xFD9
 16564                           status	equ	0xFD8
 16565                           
 16566 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 16567 ;; Defined at:
 16568 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16569 ;; Parameters:    Size  Location     Type
 16570 ;;  channelId       1    wreg     unsigned char 
 16571 ;;  statusNew       1    8[BANK0 ] unsigned char 
 16572 ;; Auto vars:     Size  Location     Type
 16573 ;;  channelId       1   10[BANK0 ] unsigned char 
 16574 ;;  result          1    0        enum E8016
 16575 ;; Return value:  Size  Location     Type
 16576 ;;                  1    wreg      enum E8016
 16577 ;; Registers used:
 16578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16579 ;; Tracked objects:
 16580 ;;		On entry : F/0
 16581 ;;		On exit  : D/0
 16582 ;;		Unchanged: 0/0
 16583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16584 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16585 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16587 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16588 ;;Total ram usage:        3 bytes
 16589 ;; Hardware stack levels used:    1
 16590 ;; Hardware stack levels required when called:    8
 16591 ;; This function calls:
 16592 ;;		_UpdateChannelIdStatus
 16593 ;;		_ValidateChannelId
 16594 ;; This function is called by:
 16595 ;;		_ExecuteNewChannel
 16596 ;;		_UpdateCfList
 16597 ;; This function uses a non-reentrant model
 16598 ;;
 16599                           
 16600                           	psect	text85
 16601  0070A6                     __ptext85:
 16602                           	opt stack 0
 16603  0070A6                     _LORAWAN_SetChannelIdStatus:
 16604                           	opt stack 17
 16605                           
 16606                           ; BSR set to: 2
 16607                           ;incstack = 0
 16608                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 16609  0070A6  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 16610                           
 16611                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 16612  0070A8  0E01               	movlw	1
 16613  0070AA  0100               	movlb	0	; () banked
 16614  0070AC  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16615  0070AE  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16616  0070B0  EC1F  F03B         	call	_ValidateChannelId
 16617  0070B4  0900               	iorlw	0
 16618  0070B6  E001               	bz	l13092
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;lorawan_eu.c: 290: }
 16622  0070B8  0012               	return	
 16623  0070BA                     l13092:
 16624                           
 16625                           ; BSR set to: 0
 16626                           ;lorawan_eu.c: 292: else
 16627                           ;lorawan_eu.c: 293: {
 16628                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 16629  0070BA  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16630  0070BC  0D0E               	mullw	14
 16631  0070BE  0E0D               	movlw	low (_Channels+13)
 16632  0070C0  24F3               	addwf	prodl,w,c
 16633  0070C2  6ED9               	movwf	fsr2l,c
 16634  0070C4  0E04               	movlw	high (_Channels+13)
 16635  0070C6  20F4               	addwfc	prodh,w,c
 16636  0070C8  6EDA               	movwf	fsr2h,c
 16637  0070CA  50DF               	movf	indf2,w,c
 16638  0070CC  0B07               	andlw	7
 16639  0070CE  0A07               	xorlw	7
 16640  0070D0  A4D8               	btfss	status,2,c
 16641  0070D2  0012               	return	
 16642                           
 16643                           ; BSR set to: 0
 16644                           ;lorawan_eu.c: 295: {
 16645                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 16646  0070D4  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 16647  0070D8  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 16648  0070DA  EF05  F025         	goto	_UpdateChannelIdStatus
 16649  0070DE                     __end_of_LORAWAN_SetChannelIdStatus:
 16650                           	opt stack 0
 16651                           tosu	equ	0xFFF
 16652                           tosh	equ	0xFFE
 16653                           tosl	equ	0xFFD
 16654                           pclath	equ	0xFFA
 16655                           tblptru	equ	0xFF8
 16656                           tblptrh	equ	0xFF7
 16657                           tblptrl	equ	0xFF6
 16658                           tablat	equ	0xFF5
 16659                           prodh	equ	0xFF4
 16660                           prodl	equ	0xFF3
 16661                           intcon	equ	0xFF2
 16662                           intcon2	equ	0xFF1
 16663                           intcon3	equ	0xFF0
 16664                           indf0	equ	0xFEF
 16665                           postinc0	equ	0xFEE
 16666                           fsr0h	equ	0xFEA
 16667                           fsr0l	equ	0xFE9
 16668                           wreg	equ	0xFE8
 16669                           postinc1	equ	0xFE6
 16670                           postdec1	equ	0xFE5
 16671                           plusw1	equ	0xFE3
 16672                           fsr1h	equ	0xFE2
 16673                           fsr1l	equ	0xFE1
 16674                           indf2	equ	0xFDF
 16675                           postinc2	equ	0xFDE
 16676                           postdec2	equ	0xFDD
 16677                           plusw2	equ	0xFDB
 16678                           fsr2h	equ	0xFDA
 16679                           fsr2l	equ	0xFD9
 16680                           status	equ	0xFD8
 16681                           
 16682 ;; *************** function _ValidateChannelId *****************
 16683 ;; Defined at:
 16684 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16685 ;; Parameters:    Size  Location     Type
 16686 ;;  channelId       1    wreg     unsigned char 
 16687 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 16688 ;; Auto vars:     Size  Location     Type
 16689 ;;  channelId       1    6[BANK0 ] unsigned char 
 16690 ;;  result          1    5[BANK0 ] enum E8016
 16691 ;; Return value:  Size  Location     Type
 16692 ;;                  1    wreg      enum E8016
 16693 ;; Registers used:
 16694 ;;		wreg, status,2, status,0
 16695 ;; Tracked objects:
 16696 ;;		On entry : F/0
 16697 ;;		On exit  : F/0
 16698 ;;		Unchanged: 0/0
 16699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16700 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16701 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16703 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16704 ;;Total ram usage:        3 bytes
 16705 ;; Hardware stack levels used:    1
 16706 ;; Hardware stack levels required when called:    7
 16707 ;; This function calls:
 16708 ;;		Nothing
 16709 ;; This function is called by:
 16710 ;;		_LORAWAN_SetChannelIdStatus
 16711 ;;		_ExecuteNewChannel
 16712 ;; This function uses a non-reentrant model
 16713 ;;
 16714                           
 16715                           	psect	text86
 16716  00763E                     __ptext86:
 16717                           	opt stack 0
 16718  00763E                     _ValidateChannelId:
 16719                           	opt stack 17
 16720                           
 16721                           ;incstack = 0
 16722                           ;ValidateChannelId@channelId stored from wreg
 16723  00763E  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 16724                           
 16725                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 16726  007640  0100               	movlb	0	; () banked
 16727  007642  6B65               	clrf	ValidateChannelId@result& (0+255),b
 16728                           
 16729                           ; BSR set to: 0
 16730                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 16731  007644  0E10               	movlw	16
 16732  007646  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16733  007648  D005               	goto	l12806
 16734                           
 16735                           ; BSR set to: 0
 16736  00764A  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 16737  00764C  E105               	bnz	l1246
 16738                           
 16739                           ; BSR set to: 0
 16740  00764E  0E03               	movlw	3
 16741  007650  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 16742  007652  D002               	goto	l1246
 16743  007654                     l12806:
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;lorawan_eu.c: 1130: {
 16747                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 16748  007654  0E03               	movlw	3
 16749  007656  6F65               	movwf	ValidateChannelId@result& (0+255),b
 16750  007658                     l1246:
 16751                           
 16752                           ; BSR set to: 0
 16753                           ;lorawan_eu.c: 1132: }
 16754                           ;lorawan_eu.c: 1134: return result;
 16755  007658  5165               	movf	ValidateChannelId@result& (0+255),w,b
 16756                           
 16757                           ; BSR set to: 0
 16758  00765A  0012               	return		;funcret
 16759  00765C                     __end_of_ValidateChannelId:
 16760                           	opt stack 0
 16761                           tosu	equ	0xFFF
 16762                           tosh	equ	0xFFE
 16763                           tosl	equ	0xFFD
 16764                           pclath	equ	0xFFA
 16765                           tblptru	equ	0xFF8
 16766                           tblptrh	equ	0xFF7
 16767                           tblptrl	equ	0xFF6
 16768                           tablat	equ	0xFF5
 16769                           prodh	equ	0xFF4
 16770                           prodl	equ	0xFF3
 16771                           intcon	equ	0xFF2
 16772                           intcon2	equ	0xFF1
 16773                           intcon3	equ	0xFF0
 16774                           indf0	equ	0xFEF
 16775                           postinc0	equ	0xFEE
 16776                           fsr0h	equ	0xFEA
 16777                           fsr0l	equ	0xFE9
 16778                           wreg	equ	0xFE8
 16779                           postinc1	equ	0xFE6
 16780                           postdec1	equ	0xFE5
 16781                           plusw1	equ	0xFE3
 16782                           fsr1h	equ	0xFE2
 16783                           fsr1l	equ	0xFE1
 16784                           indf2	equ	0xFDF
 16785                           postinc2	equ	0xFDE
 16786                           postdec2	equ	0xFDD
 16787                           plusw2	equ	0xFDB
 16788                           fsr2h	equ	0xFDA
 16789                           fsr2l	equ	0xFD9
 16790                           status	equ	0xFD8
 16791                           
 16792 ;; *************** function _ExecuteLinkCheck *****************
 16793 ;; Defined at:
 16794 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16795 ;; Parameters:    Size  Location     Type
 16796 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 16797 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16798 ;; Auto vars:     Size  Location     Type
 16799 ;;		None
 16800 ;; Return value:  Size  Location     Type
 16801 ;;                  2    4[BANK0 ] PTR unsigned char 
 16802 ;; Registers used:
 16803 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16804 ;; Tracked objects:
 16805 ;;		On entry : F/0
 16806 ;;		On exit  : F/0
 16807 ;;		Unchanged: 0/0
 16808 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16809 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16810 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16811 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16812 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16813 ;;Total ram usage:        2 bytes
 16814 ;; Hardware stack levels used:    1
 16815 ;; Hardware stack levels required when called:    7
 16816 ;; This function calls:
 16817 ;;		Nothing
 16818 ;; This function is called by:
 16819 ;;		_MacExecuteCommands
 16820 ;; This function uses a non-reentrant model
 16821 ;;
 16822                           
 16823                           	psect	text87
 16824  00724C                     __ptext87:
 16825                           	opt stack 0
 16826  00724C                     _ExecuteLinkCheck:
 16827                           	opt stack 18
 16828                           
 16829                           ; BSR set to: 0
 16830                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;incstack = 0
 16834  00724C  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16835  007250  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16836  007254  50DF               	movf	indf2,w,c
 16837  007256  0102               	movlb	2	; () banked
 16838  007258  6FDD               	movwf	(_loRa+221)& (0+255),b
 16839                           
 16840                           ; BSR set to: 2
 16841  00725A  0100               	movlb	0	; () banked
 16842  00725C  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16843  00725E  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16844                           
 16845                           ; BSR set to: 0
 16846                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 16847  007260  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 16848  007264  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 16849  007268  50DF               	movf	indf2,w,c
 16850  00726A  0102               	movlb	2	; () banked
 16851  00726C  6FDE               	movwf	(_loRa+222)& (0+255),b
 16852  00726E  0100               	movlb	0	; () banked
 16853  007270  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 16854  007272  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 16855                           
 16856                           ; BSR set to: 0
 16857                           ;lorawan.c: 1656: return ptr;
 16858  007274  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 16859  007278  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 16860                           
 16861                           ; BSR set to: 0
 16862  00727C  0012               	return		;funcret
 16863  00727E                     __end_of_ExecuteLinkCheck:
 16864                           	opt stack 0
 16865                           tosu	equ	0xFFF
 16866                           tosh	equ	0xFFE
 16867                           tosl	equ	0xFFD
 16868                           pclath	equ	0xFFA
 16869                           tblptru	equ	0xFF8
 16870                           tblptrh	equ	0xFF7
 16871                           tblptrl	equ	0xFF6
 16872                           tablat	equ	0xFF5
 16873                           prodh	equ	0xFF4
 16874                           prodl	equ	0xFF3
 16875                           intcon	equ	0xFF2
 16876                           intcon2	equ	0xFF1
 16877                           intcon3	equ	0xFF0
 16878                           indf0	equ	0xFEF
 16879                           postinc0	equ	0xFEE
 16880                           fsr0h	equ	0xFEA
 16881                           fsr0l	equ	0xFE9
 16882                           wreg	equ	0xFE8
 16883                           postinc1	equ	0xFE6
 16884                           postdec1	equ	0xFE5
 16885                           plusw1	equ	0xFE3
 16886                           fsr1h	equ	0xFE2
 16887                           fsr1l	equ	0xFE1
 16888                           indf2	equ	0xFDF
 16889                           postinc2	equ	0xFDE
 16890                           postdec2	equ	0xFDD
 16891                           plusw2	equ	0xFDB
 16892                           fsr2h	equ	0xFDA
 16893                           fsr2l	equ	0xFD9
 16894                           status	equ	0xFD8
 16895                           
 16896 ;; *************** function _ExecuteLinkAdr *****************
 16897 ;; Defined at:
 16898 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16899 ;; Parameters:    Size  Location     Type
 16900 ;;  ptr             2   17[BANK0 ] PTR unsigned char 
 16901 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16902 ;; Auto vars:     Size  Location     Type
 16903 ;;  redundancy      2   23[BANK0 ] PTR struct .
 16904 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16905 ;;  channelMask     2   20[BANK0 ] unsigned int 
 16906 ;;  dataRate        1   25[BANK0 ] unsigned char 
 16907 ;;  txPower         1   22[BANK0 ] unsigned char 
 16908 ;; Return value:  Size  Location     Type
 16909 ;;                  2   17[BANK0 ] PTR unsigned char 
 16910 ;; Registers used:
 16911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16912 ;; Tracked objects:
 16913 ;;		On entry : F/0
 16914 ;;		On exit  : F/2
 16915 ;;		Unchanged: 0/0
 16916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16918 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16919 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16920 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16921 ;;Total ram usage:        9 bytes
 16922 ;; Hardware stack levels used:    1
 16923 ;; Hardware stack levels required when called:   10
 16924 ;; This function calls:
 16925 ;;		_EnableChannels
 16926 ;;		_UpdateCurrentDataRate
 16927 ;;		_UpdateTxPower
 16928 ;;		_ValidateChannelMask
 16929 ;;		_ValidateChannelMaskCntl
 16930 ;;		_ValidateDataRate
 16931 ;;		_ValidateTxPower
 16932 ;; This function is called by:
 16933 ;;		_MacExecuteCommands
 16934 ;; This function uses a non-reentrant model
 16935 ;;
 16936                           
 16937                           	psect	text88
 16938  003578                     __ptext88:
 16939                           	opt stack 0
 16940  003578                     _ExecuteLinkAdr:
 16941                           	opt stack 15
 16942                           
 16943                           ; BSR set to: 0
 16944                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 16945                           ;lorawan_eu.c: 616: uint16_t channelMask;
 16946                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 16947                           
 16948                           ; BSR set to: 0
 16949                           ;incstack = 0
 16950  003578  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16951  00357C  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16952  003580  50DF               	movf	indf2,w,c
 16953  003582  0B0F               	andlw	15
 16954  003584  6F76               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 16955                           
 16956                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 16957  003586  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16958  00358A  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16959  00358E  50DF               	movf	indf2,w,c
 16960  003590  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 16961  003592  3973               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 16962  003594  0B0F               	andlw	15
 16963  003596  6F79               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;lorawan_eu.c: 620: ptr++;
 16967  003598  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16968  00359A  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16969                           
 16970                           ; BSR set to: 0
 16971                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 16972  00359C  C071  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 16973  0035A0  C072  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 16974  0035A4  CFDE F074          	movff	postinc2,ExecuteLinkAdr@channelMask
 16975  0035A8  CFDD F075          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 16979  0035AC  0E02               	movlw	2
 16980  0035AE  2771               	addwf	ExecuteLinkAdr@ptr& (0+255),f,b
 16981  0035B0  0E00               	movlw	0
 16982  0035B2  2372               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16983                           
 16984                           ; BSR set to: 0
 16985                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 16986                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 16987  0035B4  C071  F077         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 16988  0035B8  C072  F078         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 16989                           
 16990                           ; BSR set to: 0
 16991  0035BC  4B71               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 16992  0035BE  2B72               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 16993                           
 16994                           ; BSR set to: 0
 16995                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 16996  0035C0  0102               	movlb	2	; () banked
 16997  0035C2  AD02               	btfss	(_loRa+2)& (0+255),6,b
 16998  0035C4  D092               	goto	l13776
 16999                           
 17000                           ; BSR set to: 2
 17001                           ;lorawan_eu.c: 627: {
 17002                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 17003  0035C6  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17004  0035CA  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17005  0035CE  0100               	movlb	0	; () banked
 17006  0035D0  38DF               	swapf	223,w,c
 17007  0035D2  0B07               	andlw	7
 17008  0035D4  EC30  F03C         	call	_ValidateChannelMaskCntl
 17009  0035D8  0900               	iorlw	0
 17010  0035DA  E112               	bnz	l13744
 17011                           
 17012                           ; BSR set to: 0
 17013  0035DC  C074  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 17014  0035E0  C075  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 17015  0035E4  EC6F  F038         	call	_ValidateChannelMask	;wreg free
 17016  0035E8  0900               	iorlw	0
 17017  0035EA  E10A               	bnz	l13744
 17018                           
 17019                           ; BSR set to: 0
 17020                           ;lorawan_eu.c: 629: {
 17021                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 17022  0035EC  0102               	movlb	2	; () banked
 17023  0035EE  51A7               	movf	(_loRa+167)& (0+255),w,b
 17024  0035F0  0D02               	mullw	2
 17025  0035F2  0EA9               	movlw	low (_loRa+169)
 17026  0035F4  24F3               	addwf	prodl,w,c
 17027  0035F6  6ED9               	movwf	fsr2l,c
 17028  0035F8  0E02               	movlw	high (_loRa+169)
 17029  0035FA  20F4               	addwfc	prodh,w,c
 17030  0035FC  6EDA               	movwf	fsr2h,c
 17031  0035FE  80DF               	bsf	indf2,0,c
 17032  003600                     l13744:
 17033                           
 17034                           ;lorawan_eu.c: 631: }
 17035                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 17036  003600  0100               	movlb	0	; () banked
 17037  003602  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17038  003604  EC67  F03C         	call	_ValidateDataRate
 17039  003608  0900               	iorlw	0
 17040  00360A  E112               	bnz	l13752
 17041                           
 17042                           ; BSR set to: 0
 17043  00360C  0102               	movlb	2	; () banked
 17044  00360E  51EB               	movf	(_loRa+235)& (0+255),w,b
 17045  003610  0100               	movlb	0	; () banked
 17046  003612  5D79               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17047  003614  E30D               	bnc	l13752
 17048                           
 17049                           ; BSR set to: 0
 17050  003616  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17051  003618  0102               	movlb	2	; () banked
 17052  00361A  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17053  00361C  E309               	bnc	l13752
 17054                           
 17055                           ; BSR set to: 2
 17056                           ;lorawan_eu.c: 634: {
 17057                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 17058  00361E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17059  003620  0D02               	mullw	2
 17060  003622  0EA9               	movlw	low (_loRa+169)
 17061  003624  24F3               	addwf	prodl,w,c
 17062  003626  6ED9               	movwf	fsr2l,c
 17063  003628  0E02               	movlw	high (_loRa+169)
 17064  00362A  20F4               	addwfc	prodh,w,c
 17065  00362C  6EDA               	movwf	fsr2h,c
 17066  00362E  82DF               	bsf	indf2,1,c
 17067  003630                     l13752:
 17068                           
 17069                           ;lorawan_eu.c: 636: }
 17070                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 17071  003630  0100               	movlb	0	; () banked
 17072  003632  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17073  003634  ECBF  F03A         	call	_ValidateTxPower
 17074  003638  0900               	iorlw	0
 17075  00363A  E10A               	bnz	l1101
 17076                           
 17077                           ; BSR set to: 0
 17078                           ;lorawan_eu.c: 639: {
 17079                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 17080  00363C  0102               	movlb	2	; () banked
 17081  00363E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17082  003640  0D02               	mullw	2
 17083  003642  0EA9               	movlw	low (_loRa+169)
 17084  003644  24F3               	addwf	prodl,w,c
 17085  003646  6ED9               	movwf	fsr2l,c
 17086  003648  0E02               	movlw	high (_loRa+169)
 17087  00364A  20F4               	addwfc	prodh,w,c
 17088  00364C  6EDA               	movwf	fsr2h,c
 17089  00364E  84DF               	bsf	indf2,2,c
 17090  003650                     l1101:
 17091                           
 17092                           ;lorawan_eu.c: 641: }
 17093                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 17094  003650  0102               	movlb	2	; () banked
 17095  003652  51A7               	movf	(_loRa+167)& (0+255),w,b
 17096  003654  0D02               	mullw	2
 17097  003656  0EA9               	movlw	low (_loRa+169)
 17098  003658  24F3               	addwf	prodl,w,c
 17099  00365A  6ED9               	movwf	fsr2l,c
 17100  00365C  0E02               	movlw	high (_loRa+169)
 17101  00365E  20F4               	addwfc	prodh,w,c
 17102  003660  6EDA               	movwf	fsr2h,c
 17103  003662  A4DF               	btfss	indf2,2,c
 17104  003664  D05D               	goto	l13778
 17105                           
 17106                           ; BSR set to: 2
 17107  003666  51A7               	movf	(_loRa+167)& (0+255),w,b
 17108  003668  0D02               	mullw	2
 17109  00366A  0EA9               	movlw	low (_loRa+169)
 17110  00366C  24F3               	addwf	prodl,w,c
 17111  00366E  6ED9               	movwf	fsr2l,c
 17112  003670  0E02               	movlw	high (_loRa+169)
 17113  003672  20F4               	addwfc	prodh,w,c
 17114  003674  6EDA               	movwf	fsr2h,c
 17115  003676  A2DF               	btfss	indf2,1,c
 17116  003678  D053               	goto	l13778
 17117                           
 17118                           ; BSR set to: 2
 17119  00367A  51A7               	movf	(_loRa+167)& (0+255),w,b
 17120  00367C  0D02               	mullw	2
 17121  00367E  0EA9               	movlw	low (_loRa+169)
 17122  003680  24F3               	addwf	prodl,w,c
 17123  003682  6ED9               	movwf	fsr2l,c
 17124  003684  0E02               	movlw	high (_loRa+169)
 17125  003686  20F4               	addwfc	prodh,w,c
 17126  003688  6EDA               	movwf	fsr2h,c
 17127  00368A  A0DF               	btfss	indf2,0,c
 17128  00368C  D049               	goto	l13778
 17129                           
 17130                           ; BSR set to: 2
 17131                           ;lorawan_eu.c: 644: {
 17132                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 17133  00368E  C074  F06E         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 17134  003692  C075  F06F         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 17135  003696  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17136  00369A  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17137  00369E  0100               	movlb	0	; () banked
 17138  0036A0  38DF               	swapf	223,w,c
 17139  0036A2  0B07               	andlw	7
 17140  0036A4  6F70               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 17141  0036A6  EC52  F03C         	call	_EnableChannels	;wreg free
 17142                           
 17143                           ; BSR set to: 0
 17144                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 17145  0036AA  5176               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 17146  0036AC  EC26  F03D         	call	_UpdateTxPower
 17147                           
 17148                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 17149  0036B0  0102               	movlb	2	; () banked
 17150  0036B2  8903               	bsf	(_loRa+3)& (0+255),4,b
 17151                           
 17152                           ; BSR set to: 2
 17153                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 17154  0036B4  0100               	movlb	0	; () banked
 17155  0036B6  5179               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 17156  0036B8  EC2A  F03D         	call	_UpdateCurrentDataRate
 17157                           
 17158                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 17159  0036BC  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17160  0036C0  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17161  0036C4  0100               	movlb	0	; () banked
 17162  0036C6  50DF               	movf	223,w,c
 17163  0036C8  0B0F               	andlw	15
 17164  0036CA  E103               	bnz	l13772
 17165                           
 17166                           ; BSR set to: 0
 17167                           ;lorawan_eu.c: 652: {
 17168                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 17169  0036CC  0102               	movlb	2	; () banked
 17170  0036CE  6BD6               	clrf	(_loRa+214)& (0+255),b
 17171                           
 17172                           ;lorawan_eu.c: 654: }
 17173  0036D0  D00A               	goto	l13774
 17174  0036D2                     l13772:
 17175                           
 17176                           ; BSR set to: 0
 17177                           ;lorawan_eu.c: 655: else
 17178                           ;lorawan_eu.c: 656: {
 17179                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 17180  0036D2  C077  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 17181  0036D6  C078  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 17182  0036DA  50DF               	movf	223,w,c
 17183  0036DC  0B0F               	andlw	15
 17184  0036DE  6F73               	movwf	??_ExecuteLinkAdr& (0+255),b
 17185  0036E0  0573               	decf	??_ExecuteLinkAdr& (0+255),w,b
 17186  0036E2  0102               	movlb	2	; () banked
 17187  0036E4  6FD6               	movwf	(_loRa+214)& (0+255),b
 17188  0036E6                     l13774:
 17189                           
 17190                           ; BSR set to: 2
 17191                           ;lorawan_eu.c: 658: }
 17192                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 17193  0036E6  8B03               	bsf	(_loRa+3)& (0+255),5,b
 17194  0036E8  D01B               	goto	l13778
 17195  0036EA                     l13776:
 17196                           
 17197                           ; BSR set to: 2
 17198                           ;lorawan_eu.c: 662: else
 17199                           ;lorawan_eu.c: 663: {
 17200                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 17201  0036EA  51A7               	movf	(_loRa+167)& (0+255),w,b
 17202  0036EC  0D02               	mullw	2
 17203  0036EE  0EA9               	movlw	low (_loRa+169)
 17204  0036F0  24F3               	addwf	prodl,w,c
 17205  0036F2  6ED9               	movwf	fsr2l,c
 17206  0036F4  0E02               	movlw	high (_loRa+169)
 17207  0036F6  20F4               	addwfc	prodh,w,c
 17208  0036F8  6EDA               	movwf	fsr2h,c
 17209  0036FA  90DF               	bcf	indf2,0,c
 17210                           
 17211                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 17212  0036FC  51A7               	movf	(_loRa+167)& (0+255),w,b
 17213  0036FE  0D02               	mullw	2
 17214  003700  0EA9               	movlw	low (_loRa+169)
 17215  003702  24F3               	addwf	prodl,w,c
 17216  003704  6ED9               	movwf	fsr2l,c
 17217  003706  0E02               	movlw	high (_loRa+169)
 17218  003708  20F4               	addwfc	prodh,w,c
 17219  00370A  6EDA               	movwf	fsr2h,c
 17220  00370C  92DF               	bcf	indf2,1,c
 17221                           
 17222                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 17223  00370E  51A7               	movf	(_loRa+167)& (0+255),w,b
 17224  003710  0D02               	mullw	2
 17225  003712  0EA9               	movlw	low (_loRa+169)
 17226  003714  24F3               	addwf	prodl,w,c
 17227  003716  6ED9               	movwf	fsr2l,c
 17228  003718  0E02               	movlw	high (_loRa+169)
 17229  00371A  20F4               	addwfc	prodh,w,c
 17230  00371C  6EDA               	movwf	fsr2h,c
 17231  00371E  94DF               	bcf	indf2,2,c
 17232  003720                     l13778:
 17233                           
 17234                           ; BSR set to: 2
 17235                           ;lorawan_eu.c: 667: }
 17236                           ;lorawan_eu.c: 669: return ptr;
 17237  003720  C071  F071         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 17238  003724  C072  F072         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 17239                           
 17240                           ; BSR set to: 2
 17241  003728  0012               	return		;funcret
 17242  00372A                     __end_of_ExecuteLinkAdr:
 17243                           	opt stack 0
 17244                           tosu	equ	0xFFF
 17245                           tosh	equ	0xFFE
 17246                           tosl	equ	0xFFD
 17247                           pclath	equ	0xFFA
 17248                           tblptru	equ	0xFF8
 17249                           tblptrh	equ	0xFF7
 17250                           tblptrl	equ	0xFF6
 17251                           tablat	equ	0xFF5
 17252                           prodh	equ	0xFF4
 17253                           prodl	equ	0xFF3
 17254                           intcon	equ	0xFF2
 17255                           intcon2	equ	0xFF1
 17256                           intcon3	equ	0xFF0
 17257                           indf0	equ	0xFEF
 17258                           postinc0	equ	0xFEE
 17259                           fsr0h	equ	0xFEA
 17260                           fsr0l	equ	0xFE9
 17261                           wreg	equ	0xFE8
 17262                           postinc1	equ	0xFE6
 17263                           postdec1	equ	0xFE5
 17264                           plusw1	equ	0xFE3
 17265                           fsr1h	equ	0xFE2
 17266                           fsr1l	equ	0xFE1
 17267                           indf2	equ	0xFDF
 17268                           postinc2	equ	0xFDE
 17269                           postdec2	equ	0xFDD
 17270                           plusw2	equ	0xFDB
 17271                           fsr2h	equ	0xFDA
 17272                           fsr2l	equ	0xFD9
 17273                           status	equ	0xFD8
 17274                           
 17275 ;; *************** function _ValidateTxPower *****************
 17276 ;; Defined at:
 17277 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17278 ;; Parameters:    Size  Location     Type
 17279 ;;  txPowerNew      1    wreg     unsigned char 
 17280 ;; Auto vars:     Size  Location     Type
 17281 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 17282 ;;  result          1    4[BANK0 ] enum E8016
 17283 ;; Return value:  Size  Location     Type
 17284 ;;                  1    wreg      enum E8016
 17285 ;; Registers used:
 17286 ;;		wreg, status,2, status,0
 17287 ;; Tracked objects:
 17288 ;;		On entry : F/0
 17289 ;;		On exit  : F/0
 17290 ;;		Unchanged: 0/0
 17291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17292 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17293 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17296 ;;Total ram usage:        2 bytes
 17297 ;; Hardware stack levels used:    1
 17298 ;; Hardware stack levels required when called:    7
 17299 ;; This function calls:
 17300 ;;		Nothing
 17301 ;; This function is called by:
 17302 ;;		_ExecuteLinkAdr
 17303 ;; This function uses a non-reentrant model
 17304 ;;
 17305                           
 17306                           	psect	text89
 17307  00757E                     __ptext89:
 17308                           	opt stack 0
 17309  00757E                     _ValidateTxPower:
 17310                           	opt stack 17
 17311                           
 17312                           ; BSR set to: 2
 17313                           ;incstack = 0
 17314                           ;ValidateTxPower@txPowerNew stored from wreg
 17315  00757E  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 17316                           
 17317                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 17318  007580  0100               	movlb	0	; () banked
 17319  007582  6B64               	clrf	ValidateTxPower@result& (0+255),b
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 17323  007584  0102               	movlb	2	; () banked
 17324  007586  51A4               	movf	(_loRa+164)& (0+255),w,b
 17325  007588  E103               	bnz	l13118
 17326                           
 17327                           ; BSR set to: 2
 17328  00758A  0100               	movlb	0	; () banked
 17329  00758C  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 17330  00758E  E004               	bz	l13120
 17331  007590                     l13118:
 17332  007590  0E05               	movlw	5
 17333  007592  0100               	movlb	0	; () banked
 17334  007594  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 17335  007596  D002               	goto	l1085
 17336  007598                     l13120:
 17337                           
 17338                           ; BSR set to: 0
 17339                           ;lorawan_eu.c: 587: {
 17340                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 17341  007598  0E03               	movlw	3
 17342  00759A  6F64               	movwf	ValidateTxPower@result& (0+255),b
 17343  00759C                     l1085:
 17344                           
 17345                           ; BSR set to: 0
 17346                           ;lorawan_eu.c: 589: }
 17347                           ;lorawan_eu.c: 591: return result;
 17348  00759C  5164               	movf	ValidateTxPower@result& (0+255),w,b
 17349                           
 17350                           ; BSR set to: 0
 17351  00759E  0012               	return		;funcret
 17352  0075A0                     __end_of_ValidateTxPower:
 17353                           	opt stack 0
 17354                           tosu	equ	0xFFF
 17355                           tosh	equ	0xFFE
 17356                           tosl	equ	0xFFD
 17357                           pclath	equ	0xFFA
 17358                           tblptru	equ	0xFF8
 17359                           tblptrh	equ	0xFF7
 17360                           tblptrl	equ	0xFF6
 17361                           tablat	equ	0xFF5
 17362                           prodh	equ	0xFF4
 17363                           prodl	equ	0xFF3
 17364                           intcon	equ	0xFF2
 17365                           intcon2	equ	0xFF1
 17366                           intcon3	equ	0xFF0
 17367                           indf0	equ	0xFEF
 17368                           postinc0	equ	0xFEE
 17369                           fsr0h	equ	0xFEA
 17370                           fsr0l	equ	0xFE9
 17371                           wreg	equ	0xFE8
 17372                           postinc1	equ	0xFE6
 17373                           postdec1	equ	0xFE5
 17374                           plusw1	equ	0xFE3
 17375                           fsr1h	equ	0xFE2
 17376                           fsr1l	equ	0xFE1
 17377                           indf2	equ	0xFDF
 17378                           postinc2	equ	0xFDE
 17379                           postdec2	equ	0xFDD
 17380                           plusw2	equ	0xFDB
 17381                           fsr2h	equ	0xFDA
 17382                           fsr2l	equ	0xFD9
 17383                           status	equ	0xFD8
 17384                           
 17385 ;; *************** function _ValidateDataRate *****************
 17386 ;; Defined at:
 17387 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17388 ;; Parameters:    Size  Location     Type
 17389 ;;  dataRate        1    wreg     unsigned char 
 17390 ;; Auto vars:     Size  Location     Type
 17391 ;;  dataRate        1    4[BANK0 ] unsigned char 
 17392 ;;  result          1    5[BANK0 ] enum E8016
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  1    wreg      enum E8016
 17395 ;; Registers used:
 17396 ;;		wreg, status,2, status,0
 17397 ;; Tracked objects:
 17398 ;;		On entry : F/0
 17399 ;;		On exit  : F/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17403 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17405 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17406 ;;Total ram usage:        2 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:    7
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_ExecuteLinkAdr
 17413 ;;		_ExecuteRxParamSetupReq
 17414 ;;		_ValidateDataRange
 17415 ;; This function uses a non-reentrant model
 17416 ;;
 17417                           
 17418                           	psect	text90
 17419  0078CE                     __ptext90:
 17420                           	opt stack 0
 17421  0078CE                     _ValidateDataRate:
 17422                           	opt stack 17
 17423                           
 17424                           ; BSR set to: 0
 17425                           ;incstack = 0
 17426                           ;ValidateDataRate@dataRate stored from wreg
 17427  0078CE  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 17428                           
 17429                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 17430  0078D0  0100               	movlb	0	; () banked
 17431  0078D2  6B65               	clrf	ValidateDataRate@result& (0+255),b
 17432                           
 17433                           ; BSR set to: 0
 17434                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 17435  0078D4  0E07               	movlw	7
 17436  0078D6  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 17437  0078D8  D002               	goto	l1081
 17438                           
 17439                           ; BSR set to: 0
 17440                           ;lorawan_eu.c: 575: {
 17441                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 17442  0078DA  0E03               	movlw	3
 17443  0078DC  6F65               	movwf	ValidateDataRate@result& (0+255),b
 17444  0078DE                     l1081:
 17445                           
 17446                           ; BSR set to: 0
 17447                           ;lorawan_eu.c: 577: }
 17448                           ;lorawan_eu.c: 579: return result;
 17449  0078DE  5165               	movf	ValidateDataRate@result& (0+255),w,b
 17450                           
 17451                           ; BSR set to: 0
 17452  0078E0  0012               	return		;funcret
 17453  0078E2                     __end_of_ValidateDataRate:
 17454                           	opt stack 0
 17455                           tosu	equ	0xFFF
 17456                           tosh	equ	0xFFE
 17457                           tosl	equ	0xFFD
 17458                           pclath	equ	0xFFA
 17459                           tblptru	equ	0xFF8
 17460                           tblptrh	equ	0xFF7
 17461                           tblptrl	equ	0xFF6
 17462                           tablat	equ	0xFF5
 17463                           prodh	equ	0xFF4
 17464                           prodl	equ	0xFF3
 17465                           intcon	equ	0xFF2
 17466                           intcon2	equ	0xFF1
 17467                           intcon3	equ	0xFF0
 17468                           indf0	equ	0xFEF
 17469                           postinc0	equ	0xFEE
 17470                           fsr0h	equ	0xFEA
 17471                           fsr0l	equ	0xFE9
 17472                           wreg	equ	0xFE8
 17473                           postinc1	equ	0xFE6
 17474                           postdec1	equ	0xFE5
 17475                           plusw1	equ	0xFE3
 17476                           fsr1h	equ	0xFE2
 17477                           fsr1l	equ	0xFE1
 17478                           indf2	equ	0xFDF
 17479                           postinc2	equ	0xFDE
 17480                           postdec2	equ	0xFDD
 17481                           plusw2	equ	0xFDB
 17482                           fsr2h	equ	0xFDA
 17483                           fsr2l	equ	0xFD9
 17484                           status	equ	0xFD8
 17485                           
 17486 ;; *************** function _ValidateChannelMaskCntl *****************
 17487 ;; Defined at:
 17488 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17489 ;; Parameters:    Size  Location     Type
 17490 ;;  channelMaskC    1    wreg     unsigned char 
 17491 ;; Auto vars:     Size  Location     Type
 17492 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 17493 ;;  result          1    4[BANK0 ] enum E8016
 17494 ;; Return value:  Size  Location     Type
 17495 ;;                  1    wreg      enum E8016
 17496 ;; Registers used:
 17497 ;;		wreg, status,2, status,0
 17498 ;; Tracked objects:
 17499 ;;		On entry : F/0
 17500 ;;		On exit  : F/0
 17501 ;;		Unchanged: 0/0
 17502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17504 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17507 ;;Total ram usage:        2 bytes
 17508 ;; Hardware stack levels used:    1
 17509 ;; Hardware stack levels required when called:    7
 17510 ;; This function calls:
 17511 ;;		Nothing
 17512 ;; This function is called by:
 17513 ;;		_ExecuteLinkAdr
 17514 ;; This function uses a non-reentrant model
 17515 ;;
 17516                           
 17517                           	psect	text91
 17518  007860                     __ptext91:
 17519                           	opt stack 0
 17520  007860                     _ValidateChannelMaskCntl:
 17521                           	opt stack 17
 17522                           
 17523                           ; BSR set to: 0
 17524                           ;incstack = 0
 17525                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 17526  007860  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 17527                           
 17528                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 17529  007862  0100               	movlb	0	; () banked
 17530  007864  6B64               	clrf	ValidateChannelMaskCntl@result& (0+255),b
 17531                           
 17532                           ; BSR set to: 0
 17533                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 17534  007866  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17535  007868  E005               	bz	l1252
 17536                           
 17537                           ; BSR set to: 0
 17538  00786A  0E06               	movlw	6
 17539  00786C  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 17540  00786E  E002               	bz	l1252
 17541                           
 17542                           ; BSR set to: 0
 17543                           ;lorawan_eu.c: 1142: {
 17544                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 17545  007870  0E03               	movlw	3
 17546  007872  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 17547  007874                     l1252:
 17548                           
 17549                           ; BSR set to: 0
 17550                           ;lorawan_eu.c: 1144: }
 17551                           ;lorawan_eu.c: 1146: return result;
 17552  007874  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 17553                           
 17554                           ; BSR set to: 0
 17555  007876  0012               	return		;funcret
 17556  007878                     __end_of_ValidateChannelMaskCntl:
 17557                           	opt stack 0
 17558                           tosu	equ	0xFFF
 17559                           tosh	equ	0xFFE
 17560                           tosl	equ	0xFFD
 17561                           pclath	equ	0xFFA
 17562                           tblptru	equ	0xFF8
 17563                           tblptrh	equ	0xFF7
 17564                           tblptrl	equ	0xFF6
 17565                           tablat	equ	0xFF5
 17566                           prodh	equ	0xFF4
 17567                           prodl	equ	0xFF3
 17568                           intcon	equ	0xFF2
 17569                           intcon2	equ	0xFF1
 17570                           intcon3	equ	0xFF0
 17571                           indf0	equ	0xFEF
 17572                           postinc0	equ	0xFEE
 17573                           fsr0h	equ	0xFEA
 17574                           fsr0l	equ	0xFE9
 17575                           wreg	equ	0xFE8
 17576                           postinc1	equ	0xFE6
 17577                           postdec1	equ	0xFE5
 17578                           plusw1	equ	0xFE3
 17579                           fsr1h	equ	0xFE2
 17580                           fsr1l	equ	0xFE1
 17581                           indf2	equ	0xFDF
 17582                           postinc2	equ	0xFDE
 17583                           postdec2	equ	0xFDD
 17584                           plusw2	equ	0xFDB
 17585                           fsr2h	equ	0xFDA
 17586                           fsr2l	equ	0xFD9
 17587                           status	equ	0xFD8
 17588                           
 17589 ;; *************** function _ValidateChannelMask *****************
 17590 ;; Defined at:
 17591 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17592 ;; Parameters:    Size  Location     Type
 17593 ;;  channelMask     2    4[BANK0 ] unsigned int 
 17594 ;; Auto vars:     Size  Location     Type
 17595 ;;  i               1    6[BANK0 ] unsigned char 
 17596 ;; Return value:  Size  Location     Type
 17597 ;;                  1    wreg      enum E8016
 17598 ;; Registers used:
 17599 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17600 ;; Tracked objects:
 17601 ;;		On entry : F/0
 17602 ;;		On exit  : F/0
 17603 ;;		Unchanged: 0/0
 17604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17605 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17606 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17608 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17609 ;;Total ram usage:        3 bytes
 17610 ;; Hardware stack levels used:    1
 17611 ;; Hardware stack levels required when called:    7
 17612 ;; This function calls:
 17613 ;;		Nothing
 17614 ;; This function is called by:
 17615 ;;		_ExecuteLinkAdr
 17616 ;; This function uses a non-reentrant model
 17617 ;;
 17618                           
 17619                           	psect	text92
 17620  0070DE                     __ptext92:
 17621                           	opt stack 0
 17622  0070DE                     _ValidateChannelMask:
 17623                           	opt stack 17
 17624                           
 17625                           ; BSR set to: 0
 17626                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 17627                           
 17628                           ; BSR set to: 0
 17629                           
 17630                           ; BSR set to: 0
 17631                           ;incstack = 0
 17632  0070DE  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 17633  0070E0  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 17634  0070E2  B4D8               	btfsc	status,2,c
 17635  0070E4  0C03               	retlw	3
 17636                           
 17637                           ; BSR set to: 0
 17638                           ;lorawan_eu.c: 1171: {
 17639                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 17640  0070E6  6B66               	clrf	ValidateChannelMask@i& (0+255),b
 17641  0070E8                     l1266:
 17642                           
 17643                           ; BSR set to: 0
 17644                           ;lorawan_eu.c: 1173: {
 17645                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 17646  0070E8  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 17647  0070EA  D00D               	goto	l13152
 17648                           
 17649                           ; BSR set to: 0
 17650  0070EC  5166               	movf	ValidateChannelMask@i& (0+255),w,b
 17651  0070EE  0D0E               	mullw	14
 17652  0070F0  0E0D               	movlw	low (_Channels+13)
 17653  0070F2  24F3               	addwf	prodl,w,c
 17654  0070F4  6ED9               	movwf	fsr2l,c
 17655  0070F6  0E04               	movlw	high (_Channels+13)
 17656  0070F8  20F4               	addwfc	prodh,w,c
 17657  0070FA  6EDA               	movwf	fsr2h,c
 17658  0070FC  50DF               	movf	indf2,w,c
 17659  0070FE  0B07               	andlw	7
 17660  007100  0A07               	xorlw	7
 17661  007102  E001               	bz	l13152
 17662                           
 17663                           ; BSR set to: 0
 17664                           ;lorawan_eu.c: 1175: {
 17665                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 17666  007104  0C03               	retlw	3
 17667  007106                     l13152:
 17668                           
 17669                           ; BSR set to: 0
 17670                           ;lorawan_eu.c: 1178: else
 17671                           ;lorawan_eu.c: 1179: {
 17672                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 17673  007106  90D8               	bcf	status,0,c
 17674  007108  3365               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),f,b
 17675  00710A  3364               	rrcf	ValidateChannelMask@channelMask& (0+255),f,b
 17676                           
 17677                           ; BSR set to: 0
 17678  00710C  2B66               	incf	ValidateChannelMask@i& (0+255),f,b
 17679                           
 17680                           ; BSR set to: 0
 17681  00710E  0E0F               	movlw	15
 17682  007110  6566               	cpfsgt	ValidateChannelMask@i& (0+255),b
 17683  007112  D7EA               	goto	l1266
 17684  007114  0C00               	retlw	0
 17685  007116                     __end_of_ValidateChannelMask:
 17686                           	opt stack 0
 17687                           tosu	equ	0xFFF
 17688                           tosh	equ	0xFFE
 17689                           tosl	equ	0xFFD
 17690                           pclath	equ	0xFFA
 17691                           tblptru	equ	0xFF8
 17692                           tblptrh	equ	0xFF7
 17693                           tblptrl	equ	0xFF6
 17694                           tablat	equ	0xFF5
 17695                           prodh	equ	0xFF4
 17696                           prodl	equ	0xFF3
 17697                           intcon	equ	0xFF2
 17698                           intcon2	equ	0xFF1
 17699                           intcon3	equ	0xFF0
 17700                           indf0	equ	0xFEF
 17701                           postinc0	equ	0xFEE
 17702                           fsr0h	equ	0xFEA
 17703                           fsr0l	equ	0xFE9
 17704                           wreg	equ	0xFE8
 17705                           postinc1	equ	0xFE6
 17706                           postdec1	equ	0xFE5
 17707                           plusw1	equ	0xFE3
 17708                           fsr1h	equ	0xFE2
 17709                           fsr1l	equ	0xFE1
 17710                           indf2	equ	0xFDF
 17711                           postinc2	equ	0xFDE
 17712                           postdec2	equ	0xFDD
 17713                           plusw2	equ	0xFDB
 17714                           fsr2h	equ	0xFDA
 17715                           fsr2l	equ	0xFD9
 17716                           status	equ	0xFD8
 17717                           
 17718 ;; *************** function _UpdateTxPower *****************
 17719 ;; Defined at:
 17720 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17721 ;; Parameters:    Size  Location     Type
 17722 ;;  txPowerNew      1    wreg     unsigned char 
 17723 ;; Auto vars:     Size  Location     Type
 17724 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 17725 ;; Return value:  Size  Location     Type
 17726 ;;                  1    wreg      void 
 17727 ;; Registers used:
 17728 ;;		wreg
 17729 ;; Tracked objects:
 17730 ;;		On entry : F/0
 17731 ;;		On exit  : 0/0
 17732 ;;		Unchanged: 0/0
 17733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17735 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17737 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17738 ;;Total ram usage:        1 bytes
 17739 ;; Hardware stack levels used:    1
 17740 ;; Hardware stack levels required when called:    7
 17741 ;; This function calls:
 17742 ;;		Nothing
 17743 ;; This function is called by:
 17744 ;;		_ExecuteLinkAdr
 17745 ;; This function uses a non-reentrant model
 17746 ;;
 17747                           
 17748                           	psect	text93
 17749  007A4C                     __ptext93:
 17750                           	opt stack 0
 17751  007A4C                     _UpdateTxPower:
 17752                           	opt stack 17
 17753                           
 17754                           ; BSR set to: 0
 17755                           ;incstack = 0
 17756                           ;UpdateTxPower@txPowerNew stored from wreg
 17757  007A4C  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 17758                           
 17759                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 17760  007A4E  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 17761  007A52  0012               	return		;funcret
 17762  007A54                     __end_of_UpdateTxPower:
 17763                           	opt stack 0
 17764                           tosu	equ	0xFFF
 17765                           tosh	equ	0xFFE
 17766                           tosl	equ	0xFFD
 17767                           pclath	equ	0xFFA
 17768                           tblptru	equ	0xFF8
 17769                           tblptrh	equ	0xFF7
 17770                           tblptrl	equ	0xFF6
 17771                           tablat	equ	0xFF5
 17772                           prodh	equ	0xFF4
 17773                           prodl	equ	0xFF3
 17774                           intcon	equ	0xFF2
 17775                           intcon2	equ	0xFF1
 17776                           intcon3	equ	0xFF0
 17777                           indf0	equ	0xFEF
 17778                           postinc0	equ	0xFEE
 17779                           fsr0h	equ	0xFEA
 17780                           fsr0l	equ	0xFE9
 17781                           wreg	equ	0xFE8
 17782                           postinc1	equ	0xFE6
 17783                           postdec1	equ	0xFE5
 17784                           plusw1	equ	0xFE3
 17785                           fsr1h	equ	0xFE2
 17786                           fsr1l	equ	0xFE1
 17787                           indf2	equ	0xFDF
 17788                           postinc2	equ	0xFDE
 17789                           postdec2	equ	0xFDD
 17790                           plusw2	equ	0xFDB
 17791                           fsr2h	equ	0xFDA
 17792                           fsr2l	equ	0xFD9
 17793                           status	equ	0xFD8
 17794                           
 17795 ;; *************** function _UpdateCurrentDataRate *****************
 17796 ;; Defined at:
 17797 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 17798 ;; Parameters:    Size  Location     Type
 17799 ;;  valueNew        1    wreg     unsigned char 
 17800 ;; Auto vars:     Size  Location     Type
 17801 ;;  valueNew        1    4[BANK0 ] unsigned char 
 17802 ;; Return value:  Size  Location     Type
 17803 ;;                  1    wreg      void 
 17804 ;; Registers used:
 17805 ;;		wreg
 17806 ;; Tracked objects:
 17807 ;;		On entry : F/0
 17808 ;;		On exit  : 0/0
 17809 ;;		Unchanged: 0/0
 17810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17812 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17814 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17815 ;;Total ram usage:        1 bytes
 17816 ;; Hardware stack levels used:    1
 17817 ;; Hardware stack levels required when called:    7
 17818 ;; This function calls:
 17819 ;;		Nothing
 17820 ;; This function is called by:
 17821 ;;		_ExecuteLinkAdr
 17822 ;; This function uses a non-reentrant model
 17823 ;;
 17824                           
 17825                           	psect	text94
 17826  007A54                     __ptext94:
 17827                           	opt stack 0
 17828  007A54                     _UpdateCurrentDataRate:
 17829                           	opt stack 17
 17830                           
 17831                           ;incstack = 0
 17832                           ;UpdateCurrentDataRate@valueNew stored from wreg
 17833  007A54  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 17834                           
 17835                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 17836  007A56  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 17837  007A5A  0012               	return		;funcret
 17838  007A5C                     __end_of_UpdateCurrentDataRate:
 17839                           	opt stack 0
 17840                           tosu	equ	0xFFF
 17841                           tosh	equ	0xFFE
 17842                           tosl	equ	0xFFD
 17843                           pclath	equ	0xFFA
 17844                           tblptru	equ	0xFF8
 17845                           tblptrh	equ	0xFF7
 17846                           tblptrl	equ	0xFF6
 17847                           tablat	equ	0xFF5
 17848                           prodh	equ	0xFF4
 17849                           prodl	equ	0xFF3
 17850                           intcon	equ	0xFF2
 17851                           intcon2	equ	0xFF1
 17852                           intcon3	equ	0xFF0
 17853                           indf0	equ	0xFEF
 17854                           postinc0	equ	0xFEE
 17855                           fsr0h	equ	0xFEA
 17856                           fsr0l	equ	0xFE9
 17857                           wreg	equ	0xFE8
 17858                           postinc1	equ	0xFE6
 17859                           postdec1	equ	0xFE5
 17860                           plusw1	equ	0xFE3
 17861                           fsr1h	equ	0xFE2
 17862                           fsr1l	equ	0xFE1
 17863                           indf2	equ	0xFDF
 17864                           postinc2	equ	0xFDE
 17865                           postdec2	equ	0xFDD
 17866                           plusw2	equ	0xFDB
 17867                           fsr2h	equ	0xFDA
 17868                           fsr2l	equ	0xFD9
 17869                           status	equ	0xFD8
 17870                           
 17871 ;; *************** function _EnableChannels *****************
 17872 ;; Defined at:
 17873 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;  channelMask     2   14[BANK0 ] unsigned int 
 17876 ;;  channelMaskC    1   16[BANK0 ] unsigned char 
 17877 ;; Auto vars:     Size  Location     Type
 17878 ;;		None
 17879 ;; Return value:  Size  Location     Type
 17880 ;;                  1    wreg      void 
 17881 ;; Registers used:
 17882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17883 ;; Tracked objects:
 17884 ;;		On entry : F/0
 17885 ;;		On exit  : F/0
 17886 ;;		Unchanged: 0/0
 17887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17888 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17891 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17892 ;;Total ram usage:        3 bytes
 17893 ;; Hardware stack levels used:    1
 17894 ;; Hardware stack levels required when called:    9
 17895 ;; This function calls:
 17896 ;;		_EnableChannels1
 17897 ;; This function is called by:
 17898 ;;		_ExecuteLinkAdr
 17899 ;; This function uses a non-reentrant model
 17900 ;;
 17901                           
 17902                           	psect	text95
 17903  0078A4                     __ptext95:
 17904                           	opt stack 0
 17905  0078A4                     _EnableChannels:
 17906                           	opt stack 15
 17907                           
 17908                           ; BSR set to: 0
 17909                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 17910                           
 17911                           ;incstack = 0
 17912  0078A4  C06E  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 17913  0078A8  C06F  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 17914  0078AC  C070  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 17915  0078B0  6B6B               	clrf	EnableChannels1@channelIndexMin& (0+255),b
 17916  0078B2  0E10               	movlw	16
 17917  0078B4  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 17918  0078B6  EFA9  F034         	goto	_EnableChannels1	;wreg free
 17919  0078BA                     __end_of_EnableChannels:
 17920                           	opt stack 0
 17921                           tosu	equ	0xFFF
 17922                           tosh	equ	0xFFE
 17923                           tosl	equ	0xFFD
 17924                           pclath	equ	0xFFA
 17925                           tblptru	equ	0xFF8
 17926                           tblptrh	equ	0xFF7
 17927                           tblptrl	equ	0xFF6
 17928                           tablat	equ	0xFF5
 17929                           prodh	equ	0xFF4
 17930                           prodl	equ	0xFF3
 17931                           intcon	equ	0xFF2
 17932                           intcon2	equ	0xFF1
 17933                           intcon3	equ	0xFF0
 17934                           indf0	equ	0xFEF
 17935                           postinc0	equ	0xFEE
 17936                           fsr0h	equ	0xFEA
 17937                           fsr0l	equ	0xFE9
 17938                           wreg	equ	0xFE8
 17939                           postinc1	equ	0xFE6
 17940                           postdec1	equ	0xFE5
 17941                           plusw1	equ	0xFE3
 17942                           fsr1h	equ	0xFE2
 17943                           fsr1l	equ	0xFE1
 17944                           indf2	equ	0xFDF
 17945                           postinc2	equ	0xFDE
 17946                           postdec2	equ	0xFDD
 17947                           plusw2	equ	0xFDB
 17948                           fsr2h	equ	0xFDA
 17949                           fsr2l	equ	0xFD9
 17950                           status	equ	0xFD8
 17951                           
 17952 ;; *************** function _EnableChannels1 *****************
 17953 ;; Defined at:
 17954 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17955 ;; Parameters:    Size  Location     Type
 17956 ;;  channelMask     2    8[BANK0 ] unsigned int 
 17957 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 17958 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 17959 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 17960 ;; Auto vars:     Size  Location     Type
 17961 ;;  i               1   13[BANK0 ] unsigned char 
 17962 ;; Return value:  Size  Location     Type
 17963 ;;                  1    wreg      void 
 17964 ;; Registers used:
 17965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17966 ;; Tracked objects:
 17967 ;;		On entry : F/0
 17968 ;;		On exit  : F/0
 17969 ;;		Unchanged: 0/0
 17970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17971 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17972 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17974 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17975 ;;Total ram usage:        6 bytes
 17976 ;; Hardware stack levels used:    1
 17977 ;; Hardware stack levels required when called:    8
 17978 ;; This function calls:
 17979 ;;		_UpdateChannelIdStatus
 17980 ;; This function is called by:
 17981 ;;		_EnableChannels
 17982 ;; This function uses a non-reentrant model
 17983 ;;
 17984                           
 17985                           	psect	text96
 17986  006952                     __ptext96:
 17987                           	opt stack 0
 17988  006952                     _EnableChannels1:
 17989                           	opt stack 15
 17990                           
 17991                           ; BSR set to: 0
 17992                           ;lorawan_eu.c: 1195: uint8_t i;
 17993                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 17994                           
 17995                           ; BSR set to: 0
 17996                           ;incstack = 0
 17997  006952  0E06               	movlw	6
 17998  006954  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 17999  006956  E10E               	bnz	l12838
 18000                           
 18001                           ; BSR set to: 0
 18002                           ;lorawan_eu.c: 1198: {
 18003                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 18004  006958  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18005  00695C  D007               	goto	l12836
 18006  00695E                     l12832:
 18007                           
 18008                           ; BSR set to: 0
 18009                           ;lorawan_eu.c: 1200: {
 18010                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 18011  00695E  0E01               	movlw	1
 18012  006960  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18013  006962  516D               	movf	EnableChannels1@i& (0+255),w,b
 18014  006964  EC05  F025         	call	_UpdateChannelIdStatus
 18015                           
 18016                           ; BSR set to: 2
 18017  006968  0100               	movlb	0	; () banked
 18018  00696A  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 18019  00696C                     l12836:
 18020                           
 18021                           ; BSR set to: 0
 18022  00696C  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18023  00696E  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 18024  006970  E3F6               	bnc	l12832
 18025  006972  0012               	return	
 18026  006974                     l12838:
 18027                           
 18028                           ; BSR set to: 0
 18029                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 18030  006974  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 18031  006976  A4D8               	btfss	status,2,c
 18032  006978  0012               	return	
 18033                           
 18034                           ; BSR set to: 0
 18035                           ;lorawan_eu.c: 1205: {
 18036                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 18037  00697A  C06B  F06D         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 18038  00697E  D011               	goto	l12850
 18039  006980                     l1281:
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;lorawan_eu.c: 1207: {
 18043                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 18044  006980  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 18045  006982  D006               	goto	l12844
 18046                           
 18047                           ; BSR set to: 0
 18048                           ;lorawan_eu.c: 1209: {
 18049                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 18050  006984  0E01               	movlw	1
 18051  006986  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 18052  006988  516D               	movf	EnableChannels1@i& (0+255),w,b
 18053  00698A  EC05  F025         	call	_UpdateChannelIdStatus
 18054                           
 18055                           ;lorawan_eu.c: 1211: }
 18056  00698E  D004               	goto	l12846
 18057  006990                     l12844:
 18058                           
 18059                           ; BSR set to: 0
 18060                           ;lorawan_eu.c: 1212: else
 18061                           ;lorawan_eu.c: 1213: {
 18062                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 18063  006990  6B64               	clrf	UpdateChannelIdStatus@statusNew& (0+255),b
 18064  006992  516D               	movf	EnableChannels1@i& (0+255),w,b
 18065  006994  EC05  F025         	call	_UpdateChannelIdStatus
 18066  006998                     l12846:
 18067                           
 18068                           ; BSR set to: 2
 18069                           ;lorawan_eu.c: 1215: }
 18070                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 18071  006998  0100               	movlb	0	; () banked
 18072  00699A  90D8               	bcf	status,0,c
 18073  00699C  3369               	rrcf	(EnableChannels1@channelMask+1)& (0+255),f,b
 18074  00699E  3368               	rrcf	EnableChannels1@channelMask& (0+255),f,b
 18075                           
 18076                           ; BSR set to: 0
 18077  0069A0  2B6D               	incf	EnableChannels1@i& (0+255),f,b
 18078  0069A2                     l12850:
 18079                           
 18080                           ; BSR set to: 0
 18081  0069A2  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 18082  0069A4  5D6D               	subwf	EnableChannels1@i& (0+255),w,b
 18083  0069A6  E3EC               	bnc	l1281
 18084                           
 18085                           ; BSR set to: 0
 18086  0069A8  0012               	return		;funcret
 18087  0069AA                     __end_of_EnableChannels1:
 18088                           	opt stack 0
 18089                           tosu	equ	0xFFF
 18090                           tosh	equ	0xFFE
 18091                           tosl	equ	0xFFD
 18092                           pclath	equ	0xFFA
 18093                           tblptru	equ	0xFF8
 18094                           tblptrh	equ	0xFF7
 18095                           tblptrl	equ	0xFF6
 18096                           tablat	equ	0xFF5
 18097                           prodh	equ	0xFF4
 18098                           prodl	equ	0xFF3
 18099                           intcon	equ	0xFF2
 18100                           intcon2	equ	0xFF1
 18101                           intcon3	equ	0xFF0
 18102                           indf0	equ	0xFEF
 18103                           postinc0	equ	0xFEE
 18104                           fsr0h	equ	0xFEA
 18105                           fsr0l	equ	0xFE9
 18106                           wreg	equ	0xFE8
 18107                           postinc1	equ	0xFE6
 18108                           postdec1	equ	0xFE5
 18109                           plusw1	equ	0xFE3
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           indf2	equ	0xFDF
 18113                           postinc2	equ	0xFDE
 18114                           postdec2	equ	0xFDD
 18115                           plusw2	equ	0xFDB
 18116                           fsr2h	equ	0xFDA
 18117                           fsr2l	equ	0xFD9
 18118                           status	equ	0xFD8
 18119                           
 18120 ;; *************** function _UpdateChannelIdStatus *****************
 18121 ;; Defined at:
 18122 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18123 ;; Parameters:    Size  Location     Type
 18124 ;;  channelId       1    wreg     unsigned char 
 18125 ;;  statusNew       1    4[BANK0 ] unsigned char 
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;  channelId       1    6[BANK0 ] unsigned char 
 18128 ;;  i               1    7[BANK0 ] unsigned char 
 18129 ;; Return value:  Size  Location     Type
 18130 ;;                  1    wreg      void 
 18131 ;; Registers used:
 18132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 18133 ;; Tracked objects:
 18134 ;;		On entry : F/0
 18135 ;;		On exit  : F/2
 18136 ;;		Unchanged: 0/0
 18137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18138 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18139 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18140 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18141 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18142 ;;Total ram usage:        4 bytes
 18143 ;; Hardware stack levels used:    1
 18144 ;; Hardware stack levels required when called:    7
 18145 ;; This function calls:
 18146 ;;		Nothing
 18147 ;; This function is called by:
 18148 ;;		_LORAWAN_SetChannelIdStatus
 18149 ;;		_ExecuteNewChannel
 18150 ;;		_EnableChannels1
 18151 ;; This function uses a non-reentrant model
 18152 ;;
 18153                           
 18154                           	psect	text97
 18155  004A0A                     __ptext97:
 18156                           	opt stack 0
 18157  004A0A                     _UpdateChannelIdStatus:
 18158                           	opt stack 17
 18159                           
 18160                           ; BSR set to: 0
 18161                           ;incstack = 0
 18162                           ;UpdateChannelIdStatus@channelId stored from wreg
 18163  004A0A  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 18164                           
 18165                           ;lorawan_eu.c: 1044: uint8_t i;
 18166                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 18167  004A0C  0100               	movlb	0	; () banked
 18168  004A0E  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18169  004A10  0D0E               	mullw	14
 18170  004A12  0E04               	movlw	low (_Channels+4)
 18171  004A14  24F3               	addwf	prodl,w,c
 18172  004A16  6ED9               	movwf	fsr2l,c
 18173  004A18  0E04               	movlw	high (_Channels+4)
 18174  004A1A  20F4               	addwfc	prodh,w,c
 18175  004A1C  6EDA               	movwf	fsr2h,c
 18176  004A1E  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 18177                           
 18178                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 18179  004A22  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18180  004A24  0D0E               	mullw	14
 18181  004A26  0E04               	movlw	low (_Channels+4)
 18182  004A28  24F3               	addwf	prodl,w,c
 18183  004A2A  6ED9               	movwf	fsr2l,c
 18184  004A2C  0E04               	movlw	high (_Channels+4)
 18185  004A2E  20F4               	addwfc	prodh,w,c
 18186  004A30  6EDA               	movwf	fsr2h,c
 18187  004A32  50DF               	movf	indf2,w,c
 18188  004A34  E10C               	bnz	l12544
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;lorawan_eu.c: 1048: {
 18192                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 18193  004A36  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 18194  004A38  0D0E               	mullw	14
 18195  004A3A  0E08               	movlw	low (_Channels+8)
 18196  004A3C  24F3               	addwf	prodl,w,c
 18197  004A3E  6ED9               	movwf	fsr2l,c
 18198  004A40  0E04               	movlw	high (_Channels+8)
 18199  004A42  20F4               	addwfc	prodh,w,c
 18200  004A44  6EDA               	movwf	fsr2h,c
 18201  004A46  6ADE               	clrf	postinc2,c
 18202  004A48  6ADE               	clrf	postinc2,c
 18203  004A4A  6ADE               	clrf	postinc2,c
 18204  004A4C  6ADD               	clrf	postdec2,c
 18205  004A4E                     l12544:
 18206                           
 18207                           ; BSR set to: 0
 18208                           ;lorawan_eu.c: 1051: }
 18209                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 18210  004A4E  6B67               	clrf	UpdateChannelIdStatus@i& (0+255),b
 18211  004A50  D04E               	goto	l12558
 18212  004A52                     l12546:
 18213                           
 18214                           ; BSR set to: 0
 18215                           ;lorawan_eu.c: 1054: {
 18216                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 18217  004A52  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18218  004A54  0D0E               	mullw	14
 18219  004A56  0E05               	movlw	low (_Channels+5)
 18220  004A58  24F3               	addwf	prodl,w,c
 18221  004A5A  6ED9               	movwf	fsr2l,c
 18222  004A5C  0E04               	movlw	high (_Channels+5)
 18223  004A5E  20F4               	addwfc	prodh,w,c
 18224  004A60  6EDA               	movwf	fsr2h,c
 18225  004A62  50DF               	movf	223,w,c
 18226  004A64  0B0F               	andlw	15
 18227  004A66  0100               	movlb	0	; () banked
 18228  004A68  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 18229  004A6A  0102               	movlb	2	; () banked
 18230  004A6C  51EB               	movf	(_loRa+235)& (0+255),w,b
 18231  004A6E  0100               	movlb	0	; () banked
 18232  004A70  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 18233  004A72  E216               	bc	l1217
 18234                           
 18235                           ; BSR set to: 0
 18236  004A74  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18237  004A76  0D0E               	mullw	14
 18238  004A78  0E04               	movlw	low (_Channels+4)
 18239  004A7A  24F3               	addwf	prodl,w,c
 18240  004A7C  6ED9               	movwf	fsr2l,c
 18241  004A7E  0E04               	movlw	high (_Channels+4)
 18242  004A80  20F4               	addwfc	prodh,w,c
 18243  004A82  6EDA               	movwf	fsr2h,c
 18244  004A84  04DE               	decf	postinc2,w,c
 18245  004A86  E10C               	bnz	l1217
 18246                           
 18247                           ; BSR set to: 0
 18248                           ;lorawan_eu.c: 1056: {
 18249                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 18250  004A88  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18251  004A8A  0D0E               	mullw	14
 18252  004A8C  0E05               	movlw	low (_Channels+5)
 18253  004A8E  24F3               	addwf	prodl,w,c
 18254  004A90  6ED9               	movwf	fsr2l,c
 18255  004A92  0E04               	movlw	high (_Channels+5)
 18256  004A94  20F4               	addwfc	prodh,w,c
 18257  004A96  6EDA               	movwf	fsr2h,c
 18258  004A98  50DF               	movf	223,w,c
 18259  004A9A  0B0F               	andlw	15
 18260  004A9C  0102               	movlb	2	; () banked
 18261  004A9E  6FEB               	movwf	(_loRa+235)& (0+255),b
 18262  004AA0                     l1217:
 18263                           
 18264                           ;lorawan_eu.c: 1058: }
 18265                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 18266  004AA0  0100               	movlb	0	; () banked
 18267  004AA2  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18268  004AA4  0D0E               	mullw	14
 18269  004AA6  0E05               	movlw	low (_Channels+5)
 18270  004AA8  24F3               	addwf	prodl,w,c
 18271  004AAA  6ED9               	movwf	fsr2l,c
 18272  004AAC  0E04               	movlw	high (_Channels+5)
 18273  004AAE  20F4               	addwfc	prodh,w,c
 18274  004AB0  6EDA               	movwf	fsr2h,c
 18275  004AB2  38DF               	swapf	223,w,c
 18276  004AB4  0B0F               	andlw	15
 18277  004AB6  0102               	movlb	2	; () banked
 18278  004AB8  61EC               	cpfslt	(_loRa+236)& (0+255),b
 18279  004ABA  D017               	goto	l12556
 18280                           
 18281                           ; BSR set to: 2
 18282  004ABC  0100               	movlb	0	; () banked
 18283  004ABE  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18284  004AC0  0D0E               	mullw	14
 18285  004AC2  0E04               	movlw	low (_Channels+4)
 18286  004AC4  24F3               	addwf	prodl,w,c
 18287  004AC6  6ED9               	movwf	fsr2l,c
 18288  004AC8  0E04               	movlw	high (_Channels+4)
 18289  004ACA  20F4               	addwfc	prodh,w,c
 18290  004ACC  6EDA               	movwf	fsr2h,c
 18291  004ACE  04DE               	decf	postinc2,w,c
 18292  004AD0  E10C               	bnz	l12556
 18293                           
 18294                           ; BSR set to: 0
 18295                           ;lorawan_eu.c: 1060: {
 18296                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 18297  004AD2  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 18298  004AD4  0D0E               	mullw	14
 18299  004AD6  0E05               	movlw	low (_Channels+5)
 18300  004AD8  24F3               	addwf	prodl,w,c
 18301  004ADA  6ED9               	movwf	fsr2l,c
 18302  004ADC  0E04               	movlw	high (_Channels+5)
 18303  004ADE  20F4               	addwfc	prodh,w,c
 18304  004AE0  6EDA               	movwf	fsr2h,c
 18305  004AE2  38DF               	swapf	223,w,c
 18306  004AE4  0B0F               	andlw	15
 18307  004AE6  0102               	movlb	2	; () banked
 18308  004AE8  6FEC               	movwf	(_loRa+236)& (0+255),b
 18309  004AEA                     l12556:
 18310  004AEA  0100               	movlb	0	; () banked
 18311  004AEC  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 18312  004AEE                     l12558:
 18313                           
 18314                           ; BSR set to: 0
 18315  004AEE  0102               	movlb	2	; () banked
 18316  004AF0  51ED               	movf	(_loRa+237)& (0+255),w,b
 18317  004AF2  0100               	movlb	0	; () banked
 18318  004AF4  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 18319  004AF6  E3AD               	bnc	l12546
 18320                           
 18321                           ; BSR set to: 0
 18322                           ;lorawan_eu.c: 1062: }
 18323                           ;lorawan_eu.c: 1063: }
 18324                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 18325  004AF8  0102               	movlb	2	; () banked
 18326  004AFA  51DF               	movf	(_loRa+223)& (0+255),w,b
 18327  004AFC  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18328  004AFE  E202               	bc	l12564
 18329                           
 18330                           ; BSR set to: 2
 18331                           ;lorawan_eu.c: 1066: {
 18332                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 18333  004B00  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 18334  004B04                     l12564:
 18335                           
 18336                           ; BSR set to: 2
 18337                           ;lorawan_eu.c: 1068: }
 18338                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 18339  004B04  51EB               	movf	(_loRa+235)& (0+255),w,b
 18340  004B06  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 18341  004B08  A0D8               	btfss	status,0,c
 18342                           
 18343                           ; BSR set to: 2
 18344                           ;lorawan_eu.c: 1071: {
 18345                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 18346  004B0A  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 18347                           
 18348                           ; BSR set to: 2
 18349  004B0E  0012               	return		;funcret
 18350  004B10                     __end_of_UpdateChannelIdStatus:
 18351                           	opt stack 0
 18352                           tosu	equ	0xFFF
 18353                           tosh	equ	0xFFE
 18354                           tosl	equ	0xFFD
 18355                           pclath	equ	0xFFA
 18356                           tblptru	equ	0xFF8
 18357                           tblptrh	equ	0xFF7
 18358                           tblptrl	equ	0xFF6
 18359                           tablat	equ	0xFF5
 18360                           prodh	equ	0xFF4
 18361                           prodl	equ	0xFF3
 18362                           intcon	equ	0xFF2
 18363                           intcon2	equ	0xFF1
 18364                           intcon3	equ	0xFF0
 18365                           indf0	equ	0xFEF
 18366                           postinc0	equ	0xFEE
 18367                           fsr0h	equ	0xFEA
 18368                           fsr0l	equ	0xFE9
 18369                           wreg	equ	0xFE8
 18370                           postinc1	equ	0xFE6
 18371                           postdec1	equ	0xFE5
 18372                           plusw1	equ	0xFE3
 18373                           fsr1h	equ	0xFE2
 18374                           fsr1l	equ	0xFE1
 18375                           indf2	equ	0xFDF
 18376                           postinc2	equ	0xFDE
 18377                           postdec2	equ	0xFDD
 18378                           plusw2	equ	0xFDB
 18379                           fsr2h	equ	0xFDA
 18380                           fsr2l	equ	0xFD9
 18381                           status	equ	0xFD8
 18382                           
 18383 ;; *************** function _ExecuteDutyCycle *****************
 18384 ;; Defined at:
 18385 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18386 ;; Parameters:    Size  Location     Type
 18387 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 18388 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18389 ;; Auto vars:     Size  Location     Type
 18390 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 18391 ;; Return value:  Size  Location     Type
 18392 ;;                  2    4[BANK0 ] PTR unsigned char 
 18393 ;; Registers used:
 18394 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18395 ;; Tracked objects:
 18396 ;;		On entry : F/0
 18397 ;;		On exit  : D/0
 18398 ;;		Unchanged: 0/0
 18399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18400 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18401 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18402 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18403 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18404 ;;Total ram usage:        6 bytes
 18405 ;; Hardware stack levels used:    1
 18406 ;; Hardware stack levels required when called:    7
 18407 ;; This function calls:
 18408 ;;		Nothing
 18409 ;; This function is called by:
 18410 ;;		_MacExecuteCommands
 18411 ;; This function uses a non-reentrant model
 18412 ;;
 18413                           
 18414                           	psect	text98
 18415  006B48                     __ptext98:
 18416                           	opt stack 0
 18417  006B48                     _ExecuteDutyCycle:
 18418                           	opt stack 18
 18419                           
 18420                           ; BSR set to: 0
 18421                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 18422                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 18423                           
 18424                           ; BSR set to: 2
 18425                           ;incstack = 0
 18426  006B48  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 18427  006B4C  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 18428  006B50  50DF               	movf	indf2,w,c
 18429  006B52  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 18430                           
 18431                           ; BSR set to: 0
 18432  006B54  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 18433  006B56  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 18434                           
 18435                           ; BSR set to: 0
 18436                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 18437  006B58  0E0F               	movlw	15
 18438  006B5A  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 18439  006B5C  D012               	goto	l1093
 18440                           
 18441                           ; BSR set to: 0
 18442                           ;lorawan_eu.c: 600: {
 18443                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 18444  006B5E  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 18445  006B62  0E01               	movlw	1
 18446  006B64  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 18447  006B66  6B68               	clrf	(??_ExecuteDutyCycle+2)& (0+255),b
 18448  006B68  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 18449  006B6A  D003               	goto	u15084
 18450  006B6C                     u15085:
 18451  006B6C  90D8               	bcf	status,0,c
 18452  006B6E  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 18453  006B70  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 18454  006B72                     u15084:
 18455  006B72  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 18456  006B74  D7FB               	goto	u15085
 18457  006B76  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 18458  006B7A  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 18459                           
 18460                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 18461  006B7E  0102               	movlb	2	; () banked
 18462  006B80  8D03               	bsf	(_loRa+3)& (0+255),6,b
 18463  006B82                     l1093:
 18464                           
 18465                           ;lorawan_eu.c: 603: }
 18466                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 18467  006B82  0100               	movlb	0	; () banked
 18468  006B84  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 18469  006B86  E102               	bnz	l13720
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;lorawan_eu.c: 606: {
 18473                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 18474  006B88  0102               	movlb	2	; () banked
 18475  006B8A  8F02               	bsf	(_loRa+2)& (0+255),7,b
 18476  006B8C                     l13720:
 18477                           
 18478                           ;lorawan_eu.c: 608: }
 18479                           ;lorawan_eu.c: 610: return ptr;
 18480  006B8C  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 18481  006B90  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 18482  006B94  0012               	return		;funcret
 18483  006B96                     __end_of_ExecuteDutyCycle:
 18484                           	opt stack 0
 18485                           tosu	equ	0xFFF
 18486                           tosh	equ	0xFFE
 18487                           tosl	equ	0xFFD
 18488                           pclath	equ	0xFFA
 18489                           tblptru	equ	0xFF8
 18490                           tblptrh	equ	0xFF7
 18491                           tblptrl	equ	0xFF6
 18492                           tablat	equ	0xFF5
 18493                           prodh	equ	0xFF4
 18494                           prodl	equ	0xFF3
 18495                           intcon	equ	0xFF2
 18496                           intcon2	equ	0xFF1
 18497                           intcon3	equ	0xFF0
 18498                           indf0	equ	0xFEF
 18499                           postinc0	equ	0xFEE
 18500                           fsr0h	equ	0xFEA
 18501                           fsr0l	equ	0xFE9
 18502                           wreg	equ	0xFE8
 18503                           postinc1	equ	0xFE6
 18504                           postdec1	equ	0xFE5
 18505                           plusw1	equ	0xFE3
 18506                           fsr1h	equ	0xFE2
 18507                           fsr1l	equ	0xFE1
 18508                           indf2	equ	0xFDF
 18509                           postinc2	equ	0xFDE
 18510                           postdec2	equ	0xFDD
 18511                           plusw2	equ	0xFDB
 18512                           fsr2h	equ	0xFDA
 18513                           fsr2l	equ	0xFD9
 18514                           status	equ	0xFD8
 18515                           
 18516 ;; *************** function _ExecuteDevStatus *****************
 18517 ;; Defined at:
 18518 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18519 ;; Parameters:    Size  Location     Type
 18520 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 18521 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18522 ;; Auto vars:     Size  Location     Type
 18523 ;;		None
 18524 ;; Return value:  Size  Location     Type
 18525 ;;                  2    4[BANK0 ] PTR unsigned char 
 18526 ;; Registers used:
 18527 ;;		wreg, status,2, status,0
 18528 ;; Tracked objects:
 18529 ;;		On entry : F/0
 18530 ;;		On exit  : F/0
 18531 ;;		Unchanged: F/0
 18532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18533 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18537 ;;Total ram usage:        2 bytes
 18538 ;; Hardware stack levels used:    1
 18539 ;; Hardware stack levels required when called:    7
 18540 ;; This function calls:
 18541 ;;		Nothing
 18542 ;; This function is called by:
 18543 ;;		_MacExecuteCommands
 18544 ;; This function uses a non-reentrant model
 18545 ;;
 18546                           
 18547                           	psect	text99
 18548  007A00                     __ptext99:
 18549                           	opt stack 0
 18550  007A00                     _ExecuteDevStatus:
 18551                           	opt stack 18
 18552                           
 18553                           ; BSR set to: 0
 18554                           ;lorawan_eu.c: 674: return ptr;
 18555                           
 18556                           ;incstack = 0
 18557  007A00  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 18558  007A04  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 18559                           
 18560                           ; BSR set to: 0
 18561  007A08  0012               	return		;funcret
 18562  007A0A                     __end_of_ExecuteDevStatus:
 18563                           	opt stack 0
 18564                           tosu	equ	0xFFF
 18565                           tosh	equ	0xFFE
 18566                           tosl	equ	0xFFD
 18567                           pclath	equ	0xFFA
 18568                           tblptru	equ	0xFF8
 18569                           tblptrh	equ	0xFF7
 18570                           tblptrl	equ	0xFF6
 18571                           tablat	equ	0xFF5
 18572                           prodh	equ	0xFF4
 18573                           prodl	equ	0xFF3
 18574                           intcon	equ	0xFF2
 18575                           intcon2	equ	0xFF1
 18576                           intcon3	equ	0xFF0
 18577                           indf0	equ	0xFEF
 18578                           postinc0	equ	0xFEE
 18579                           fsr0h	equ	0xFEA
 18580                           fsr0l	equ	0xFE9
 18581                           wreg	equ	0xFE8
 18582                           postinc1	equ	0xFE6
 18583                           postdec1	equ	0xFE5
 18584                           plusw1	equ	0xFE3
 18585                           fsr1h	equ	0xFE2
 18586                           fsr1l	equ	0xFE1
 18587                           indf2	equ	0xFDF
 18588                           postinc2	equ	0xFDE
 18589                           postdec2	equ	0xFDD
 18590                           plusw2	equ	0xFDB
 18591                           fsr2h	equ	0xFDA
 18592                           fsr2l	equ	0xFD9
 18593                           status	equ	0xFD8
 18594                           
 18595 ;; *************** function _LORAWAN_Send *****************
 18596 ;; Defined at:
 18597 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18598 ;; Parameters:    Size  Location     Type
 18599 ;;  confirmed       1    wreg     enum E7984
 18600 ;;  port            1  107[BANK1 ] unsigned char 
 18601 ;;  buffer          2  108[BANK1 ] PTR void 
 18602 ;;		 -> payload(2), NULL(0), 
 18603 ;;  bufferLength    1  110[BANK1 ] unsigned char 
 18604 ;; Auto vars:     Size  Location     Type
 18605 ;;  confirmed       1  131[BANK0 ] enum E7984
 18606 ;;  result          1  130[BANK0 ] enum E7957
 18607 ;; Return value:  Size  Location     Type
 18608 ;;                  1    wreg      enum E7957
 18609 ;; Registers used:
 18610 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18611 ;; Tracked objects:
 18612 ;;		On entry : F/1
 18613 ;;		On exit  : C/0
 18614 ;;		Unchanged: 0/0
 18615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18616 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18617 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18618 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18619 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18620 ;;Total ram usage:        7 bytes
 18621 ;; Hardware stack levels used:    1
 18622 ;; Hardware stack levels required when called:   13
 18623 ;; This function calls:
 18624 ;;		_AssemblePacket
 18625 ;;		_LORAWAN_GetMaxPayloadSize
 18626 ;;		_RADIO_ReceiveStop
 18627 ;;		_RADIO_Transmit
 18628 ;;		_SelectChannelForTransmission
 18629 ;; This function is called by:
 18630 ;;		_AutomaticReplyCallback
 18631 ;;		_LORAWAN_RxDone
 18632 ;;		_readAndSend
 18633 ;; This function uses a non-reentrant model
 18634 ;;
 18635                           
 18636                           	psect	text100
 18637  0056B4                     __ptext100:
 18638                           	opt stack 0
 18639  0056B4                     _LORAWAN_Send:
 18640                           	opt stack 16
 18641                           
 18642                           ; BSR set to: 0
 18643                           ;incstack = 0
 18644                           ;LORAWAN_Send@confirmed stored from wreg
 18645  0056B4  0100               	movlb	0	; () banked
 18646  0056B6  6FE3               	movwf	LORAWAN_Send@confirmed& (0+255),b
 18647                           
 18648                           ;lorawan.c: 187: LorawanError_t result;
 18649                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 18650  0056B8  0102               	movlb	2	; () banked
 18651  0056BA  A103               	btfss	(_loRa+3)& (0+255),0,b
 18652                           
 18653                           ; BSR set to: 2
 18654                           ;lorawan.c: 192: }
 18655                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 18656  0056BC  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 18657  0056BE  0012               	return	
 18658                           
 18659                           ; BSR set to: 2
 18660                           ;lorawan.c: 197: }
 18661                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 18662  0056C0  A902               	btfss	(_loRa+2)& (0+255),4,b
 18663  0056C2  0012               	return	
 18664                           
 18665                           ; BSR set to: 2
 18666                           ;lorawan.c: 202: }
 18667                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 18668  0056C4  0101               	movlb	1	; () banked
 18669  0056C6  516B               	movf	LORAWAN_Send@port& (0+255),w,b
 18670  0056C8  E103               	bnz	l14168
 18671                           
 18672                           ; BSR set to: 1
 18673  0056CA  516E               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18674  0056CC  E001               	bz	l14168
 18675  0056CE  0012               	return	
 18676  0056D0                     l14168:
 18677                           
 18678                           ; BSR set to: 1
 18679                           ;lorawan.c: 207: }
 18680                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 18681  0056D0  EC19  F036         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 18682  0056D4  6FE1               	movwf	??_LORAWAN_Send& (0+255),b
 18683  0056D6  0101               	movlb	1	; () banked
 18684  0056D8  516E               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 18685  0056DA  0100               	movlb	0	; () banked
 18686  0056DC  5DE1               	subwf	??_LORAWAN_Send& (0+255),w,b
 18687  0056DE  E201               	bc	l14172
 18688  0056E0  0012               	return	
 18689  0056E2                     l14172:
 18690                           
 18691                           ; BSR set to: 0
 18692                           ;lorawan.c: 213: }
 18693                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 18694  0056E2  0102               	movlb	2	; () banked
 18695  0056E4  2906               	incf	(_loRa+6)& (0+255),w,b
 18696  0056E6  E108               	bnz	l14176
 18697  0056E8  2907               	incf	(_loRa+7)& (0+255),w,b
 18698  0056EA  E106               	bnz	l14176
 18699  0056EC  2908               	incf	(_loRa+8)& (0+255),w,b
 18700  0056EE  E104               	bnz	l14176
 18701  0056F0  2909               	incf	(_loRa+9)& (0+255),w,b
 18702  0056F2  E102               	bnz	l14176
 18703                           
 18704                           ; BSR set to: 2
 18705                           ;lorawan.c: 216: {
 18706                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 18707  0056F4  8304               	bsf	(_loRa+4)& (0+255),1,b
 18708                           
 18709                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 18710                           ;	Return value of _LORAWAN_Send is never used
 18711  0056F6  0012               	return	
 18712  0056F8                     l14176:
 18713                           
 18714                           ; BSR set to: 2
 18715                           ;lorawan.c: 220: }
 18716                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 18717  0056F8  5102               	movf	(_loRa+2)& (0+255),w,b
 18718  0056FA  0B0F               	andlw	15
 18719  0056FC  E003               	bz	l14182
 18720                           
 18721                           ; BSR set to: 2
 18722  0056FE  5112               	movf	(_loRa+18)& (0+255),w,b
 18723  005700  E101               	bnz	l14182
 18724  005702  0012               	return	
 18725  005704                     l14182:
 18726                           
 18727                           ; BSR set to: 2
 18728                           ;lorawan.c: 225: }
 18729                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 18730  005704  0E01               	movlw	1
 18731  005706  ECC1  F033         	call	_SelectChannelForTransmission
 18732  00570A  6FE2               	movwf	LORAWAN_Send@result& (0+255),b
 18733                           
 18734                           ; BSR set to: 0
 18735                           ;lorawan.c: 228: if (result != OK)
 18736  00570C  51E2               	movf	LORAWAN_Send@result& (0+255),w,b
 18737  00570E  E001               	bz	l14190
 18738  005710  0012               	return	
 18739  005712                     l14190:
 18740                           
 18741                           ; BSR set to: 0
 18742                           ;lorawan.c: 232: else
 18743                           ;lorawan.c: 233: {
 18744                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 18745  005712  0E02               	movlw	2
 18746  005714  0102               	movlb	2	; () banked
 18747  005716  1912               	xorwf	(_loRa+18)& (0+255),w,b
 18748  005718  E102               	bnz	l14194
 18749                           
 18750                           ; BSR set to: 2
 18751                           ;lorawan.c: 235: {
 18752                           ;lorawan.c: 236: RADIO_ReceiveStop();
 18753  00571A  EC2E  F03B         	call	_RADIO_ReceiveStop	;wreg free
 18754  00571E                     l14194:
 18755                           
 18756                           ;lorawan.c: 237: }
 18757                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 18758  00571E  C16B  F166         	movff	LORAWAN_Send@port,AssemblePacket@port
 18759  005722  C16C  F167         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 18760  005726  C16D  F168         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 18761  00572A  C16E  F169         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 18762  00572E  0101               	movlb	1	; () banked
 18763  005730  6B6A               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 18764  005732  0100               	movlb	0	; () banked
 18765  005734  51E3               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 18766  005736  EC9E  F00D         	call	_AssemblePacket
 18767                           
 18768                           ; BSR set to: 2
 18769                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 18770  00573A  0EF0               	movlw	low (_macBuffer+16)
 18771  00573C  0100               	movlb	0	; () banked
 18772  00573E  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 18773  005740  0E04               	movlw	high (_macBuffer+16)
 18774  005742  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 18775  005744  C2D4  F098         	movff	_loRa+212,RADIO_Transmit@bufferLen
 18776  005748  EC00  F018         	call	_RADIO_Transmit	;wreg free
 18777  00574C  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 18778  00574E  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 18779  005750  A4D8               	btfss	status,2,c
 18780  005752  0012               	return	
 18781                           
 18782                           ; BSR set to: 0
 18783                           ;lorawan.c: 242: {
 18784                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 18785  005754  0102               	movlb	2	; () banked
 18786  005756  2B06               	incf	(_loRa+6)& (0+255),f,b
 18787  005758  0E00               	movlw	0
 18788  00575A  2307               	addwfc	(_loRa+7)& (0+255),f,b
 18789  00575C  2308               	addwfc	(_loRa+8)& (0+255),f,b
 18790  00575E  2309               	addwfc	(_loRa+9)& (0+255),f,b
 18791                           
 18792                           ;lorawan.c: 245: if (CNF == confirmed)
 18793  005760  0100               	movlb	0	; () banked
 18794  005762  05E3               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 18795  005764  E102               	bnz	l1701
 18796                           
 18797                           ; BSR set to: 0
 18798                           ;lorawan.c: 246: {
 18799                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 18800  005766  0102               	movlb	2	; () banked
 18801  005768  8100               	bsf	_loRa& (0+255),0,b
 18802  00576A                     l1701:
 18803                           
 18804                           ;lorawan.c: 248: }
 18805                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 18806  00576A  0102               	movlb	2	; () banked
 18807  00576C  8B00               	bsf	_loRa& (0+255),5,b
 18808                           
 18809                           ; BSR set to: 2
 18810                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 18811  00576E  5102               	movf	(_loRa+2)& (0+255),w,b
 18812  005770  0BF0               	andlw	-16
 18813  005772  0901               	iorlw	1
 18814  005774  6F02               	movwf	(_loRa+2)& (0+255),b
 18815                           
 18816                           ;lorawan.c: 251: }
 18817  005776  0012               	return		;funcret
 18818  005778                     __end_of_LORAWAN_Send:
 18819                           	opt stack 0
 18820                           tosu	equ	0xFFF
 18821                           tosh	equ	0xFFE
 18822                           tosl	equ	0xFFD
 18823                           pclath	equ	0xFFA
 18824                           tblptru	equ	0xFF8
 18825                           tblptrh	equ	0xFF7
 18826                           tblptrl	equ	0xFF6
 18827                           tablat	equ	0xFF5
 18828                           prodh	equ	0xFF4
 18829                           prodl	equ	0xFF3
 18830                           intcon	equ	0xFF2
 18831                           intcon2	equ	0xFF1
 18832                           intcon3	equ	0xFF0
 18833                           indf0	equ	0xFEF
 18834                           postinc0	equ	0xFEE
 18835                           fsr0h	equ	0xFEA
 18836                           fsr0l	equ	0xFE9
 18837                           wreg	equ	0xFE8
 18838                           postinc1	equ	0xFE6
 18839                           postdec1	equ	0xFE5
 18840                           plusw1	equ	0xFE3
 18841                           fsr1h	equ	0xFE2
 18842                           fsr1l	equ	0xFE1
 18843                           indf2	equ	0xFDF
 18844                           postinc2	equ	0xFDE
 18845                           postdec2	equ	0xFDD
 18846                           plusw2	equ	0xFDB
 18847                           fsr2h	equ	0xFDA
 18848                           fsr2l	equ	0xFD9
 18849                           status	equ	0xFD8
 18850                           
 18851 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 18852 ;; Defined at:
 18853 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18854 ;; Parameters:    Size  Location     Type
 18855 ;;		None
 18856 ;; Auto vars:     Size  Location     Type
 18857 ;;  result          1   14[BANK0 ] unsigned char 
 18858 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 18859 ;; Return value:  Size  Location     Type
 18860 ;;                  1    wreg      unsigned char 
 18861 ;; Registers used:
 18862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18863 ;; Tracked objects:
 18864 ;;		On entry : C/2
 18865 ;;		On exit  : F/0
 18866 ;;		Unchanged: 0/0
 18867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18869 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18870 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18871 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18872 ;;Total ram usage:        3 bytes
 18873 ;; Hardware stack levels used:    1
 18874 ;; Hardware stack levels required when called:    8
 18875 ;; This function calls:
 18876 ;;		_CountfOptsLength
 18877 ;; This function is called by:
 18878 ;;		_LORAWAN_Send
 18879 ;;		_AckRetransmissionCallback
 18880 ;; This function uses a non-reentrant model
 18881 ;;
 18882                           
 18883                           	psect	text101
 18884  006C32                     __ptext101:
 18885                           	opt stack 0
 18886  006C32                     _LORAWAN_GetMaxPayloadSize:
 18887                           	opt stack 20
 18888                           
 18889                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 18890                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 18891                           
 18892                           ;incstack = 0
 18893  006C32  ECBC  F02B         	call	_CountfOptsLength	;wreg free
 18894  006C36  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 18895                           
 18896                           ; BSR set to: 0
 18897                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 18898  006C38  0102               	movlb	2	; () banked
 18899  006C3A  51A7               	movf	(_loRa+167)& (0+255),w,b
 18900  006C3C  E10D               	bnz	l13882
 18901                           
 18902                           ; BSR set to: 2
 18903                           ;lorawan.c: 1564: {
 18904                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 18905  006C3E  0E2F               	movlw	low _maxPayloadSize
 18906  006C40  25DF               	addwf	(_loRa+223)& (0+255),w,b
 18907  006C42  6EF6               	movwf	tblptrl,c
 18908  006C44  6AF7               	clrf	tblptrh,c
 18909  006C46  0EFE               	movlw	high _maxPayloadSize
 18910  006C48  22F7               	addwfc	tblptrh,f,c
 18911  006C4A                     	if	1	;There are 3 active tblptr bytes
 18912  006C4A  6AF8               	clrf	tblptru,c
 18913  006C4C  0E00               	movlw	low (__mediumconst shr (0+16))
 18914  006C4E  22F8               	addwfc	tblptru,f,c
 18915  006C50                     	endif
 18916  006C50  0008               	tblrd		*
 18917  006C52  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 18918                           
 18919                           ;lorawan.c: 1566: }
 18920  006C56  D010               	goto	l13884
 18921  006C58                     l13882:
 18922                           
 18923                           ; BSR set to: 2
 18924                           ;lorawan.c: 1567: else
 18925                           ;lorawan.c: 1568: {
 18926                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 18927  006C58  0E2F               	movlw	low _maxPayloadSize
 18928  006C5A  25DF               	addwf	(_loRa+223)& (0+255),w,b
 18929  006C5C  6EF6               	movwf	tblptrl,c
 18930  006C5E  6AF7               	clrf	tblptrh,c
 18931  006C60  0EFE               	movlw	high _maxPayloadSize
 18932  006C62  22F7               	addwfc	tblptrh,f,c
 18933  006C64                     	if	1	;There are 3 active tblptr bytes
 18934  006C64  6AF8               	clrf	tblptru,c
 18935  006C66  0E00               	movlw	low (__mediumconst shr (0+16))
 18936  006C68  22F8               	addwfc	tblptru,f,c
 18937  006C6A                     	endif
 18938  006C6A  0008               	tblrd		*
 18939  006C6C  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 18940  006C70  0100               	movlb	0	; () banked
 18941  006C72  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 18942  006C74  5D6C               	subwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 18943  006C76  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 18944  006C78                     l13884:
 18945                           
 18946                           ;lorawan.c: 1570: }
 18947                           ;lorawan.c: 1572: return result;
 18948  006C78  0100               	movlb	0	; () banked
 18949  006C7A  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 18950                           
 18951                           ; BSR set to: 0
 18952  006C7C  0012               	return		;funcret
 18953  006C7E                     __end_of_LORAWAN_GetMaxPayloadSize:
 18954                           	opt stack 0
 18955                           tosu	equ	0xFFF
 18956                           tosh	equ	0xFFE
 18957                           tosl	equ	0xFFD
 18958                           pclath	equ	0xFFA
 18959                           tblptru	equ	0xFF8
 18960                           tblptrh	equ	0xFF7
 18961                           tblptrl	equ	0xFF6
 18962                           tablat	equ	0xFF5
 18963                           prodh	equ	0xFF4
 18964                           prodl	equ	0xFF3
 18965                           intcon	equ	0xFF2
 18966                           intcon2	equ	0xFF1
 18967                           intcon3	equ	0xFF0
 18968                           indf0	equ	0xFEF
 18969                           postinc0	equ	0xFEE
 18970                           fsr0h	equ	0xFEA
 18971                           fsr0l	equ	0xFE9
 18972                           wreg	equ	0xFE8
 18973                           postinc1	equ	0xFE6
 18974                           postdec1	equ	0xFE5
 18975                           plusw1	equ	0xFE3
 18976                           fsr1h	equ	0xFE2
 18977                           fsr1l	equ	0xFE1
 18978                           indf2	equ	0xFDF
 18979                           postinc2	equ	0xFDE
 18980                           postdec2	equ	0xFDD
 18981                           plusw2	equ	0xFDB
 18982                           fsr2h	equ	0xFDA
 18983                           fsr2l	equ	0xFD9
 18984                           status	equ	0xFD8
 18985                           
 18986 ;; *************** function _AssemblePacket *****************
 18987 ;; Defined at:
 18988 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18989 ;; Parameters:    Size  Location     Type
 18990 ;;  confirmed       1    wreg     unsigned char 
 18991 ;;  port            1  102[BANK1 ] unsigned char 
 18992 ;;  buffer          2  103[BANK1 ] PTR unsigned char 
 18993 ;;		 -> payload(2), NULL(0), 
 18994 ;;  bufferLength    2  105[BANK1 ] unsigned int 
 18995 ;; Auto vars:     Size  Location     Type
 18996 ;;  confirmed       1  124[BANK0 ] unsigned char 
 18997 ;;  bufferIndex     1  128[BANK0 ] unsigned char 
 18998 ;;  macCmdIdx       1  127[BANK0 ] unsigned char 
 18999 ;;  fCtrl           1  126[BANK0 ] struct .
 19000 ;;  mhdr            1  125[BANK0 ] struct .
 19001 ;; Return value:  Size  Location     Type
 19002 ;;                  1    wreg      void 
 19003 ;; Registers used:
 19004 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19005 ;; Tracked objects:
 19006 ;;		On entry : F/0
 19007 ;;		On exit  : F/2
 19008 ;;		Unchanged: 0/0
 19009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19010 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19011 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19012 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19013 ;;      Totals:         0       7       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19014 ;;Total ram usage:       12 bytes
 19015 ;; Hardware stack levels used:    1
 19016 ;; Hardware stack levels required when called:   12
 19017 ;; This function calls:
 19018 ;;		_AESCmac
 19019 ;;		_AssembleEncryptionBlock
 19020 ;;		_CountfOptsLength
 19021 ;;		_EncryptFRMPayload
 19022 ;;		_FindSmallestDataRate
 19023 ;;		_IncludeMacCommandsResponse
 19024 ;;		_memcpy
 19025 ;;		_memset
 19026 ;; This function is called by:
 19027 ;;		_LORAWAN_Send
 19028 ;; This function uses a non-reentrant model
 19029 ;;
 19030                           
 19031                           	psect	text102
 19032  001B3C                     __ptext102:
 19033                           	opt stack 0
 19034  001B3C                     _AssemblePacket:
 19035                           	opt stack 16
 19036                           
 19037                           ; BSR set to: 0
 19038                           ;incstack = 0
 19039                           ;AssemblePacket@confirmed stored from wreg
 19040  001B3C  6FDC               	movwf	AssemblePacket@confirmed& (0+255),b
 19041                           
 19042                           ;lorawan.c: 1674: Mhdr_t mhdr;
 19043                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 19044  001B3E  0E10               	movlw	16
 19045  001B40  0100               	movlb	0	; () banked
 19046  001B42  6FE0               	movwf	AssemblePacket@bufferIndex& (0+255),b
 19047                           
 19048                           ; BSR set to: 0
 19049                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 19050                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 19051  001B44  6BDF               	clrf	AssemblePacket@macCmdIdx& (0+255),b
 19052                           
 19053                           ; BSR set to: 0
 19054                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 19055  001B46  0EDD               	movlw	low AssemblePacket@mhdr
 19056  001B48  6F64               	movwf	memset@p1& (0+255),b
 19057  001B4A  6B65               	clrf	(memset@p1+1)& (0+255),b
 19058  001B4C  6B67               	clrf	(memset@c+1)& (0+255),b
 19059  001B4E  6B66               	clrf	memset@c& (0+255),b
 19060  001B50  6B69               	clrf	(memset@n+1)& (0+255),b
 19061  001B52  0E01               	movlw	1
 19062  001B54  6F68               	movwf	memset@n& (0+255),b
 19063  001B56  ECF1  F039         	call	_memset	;wreg free
 19064                           
 19065                           ; BSR set to: 0
 19066                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 19067  001B5A  0EE0               	movlw	low _macBuffer
 19068  001B5C  6F64               	movwf	memset@p1& (0+255),b
 19069  001B5E  0E04               	movlw	high _macBuffer
 19070  001B60  6F65               	movwf	(memset@p1+1)& (0+255),b
 19071  001B62  6B67               	clrf	(memset@c+1)& (0+255),b
 19072  001B64  6B66               	clrf	memset@c& (0+255),b
 19073  001B66  0E01               	movlw	1
 19074  001B68  6F69               	movwf	(memset@n+1)& (0+255),b
 19075  001B6A  0E0F               	movlw	15
 19076  001B6C  6F68               	movwf	memset@n& (0+255),b
 19077  001B6E  ECF1  F039         	call	_memset	;wreg free
 19078                           
 19079                           ; BSR set to: 0
 19080                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 19081  001B72  0EAF               	movlw	low _aesBuffer
 19082  001B74  6F64               	movwf	memset@p1& (0+255),b
 19083  001B76  0E01               	movlw	high _aesBuffer
 19084  001B78  6F65               	movwf	(memset@p1+1)& (0+255),b
 19085  001B7A  6B67               	clrf	(memset@c+1)& (0+255),b
 19086  001B7C  6B66               	clrf	memset@c& (0+255),b
 19087  001B7E  6B69               	clrf	(memset@n+1)& (0+255),b
 19088  001B80  0E10               	movlw	16
 19089  001B82  6F68               	movwf	memset@n& (0+255),b
 19090  001B84  ECF1  F039         	call	_memset	;wreg free
 19091                           
 19092                           ; BSR set to: 0
 19093                           ;lorawan.c: 1683: if (confirmed == 1)
 19094  001B88  05DC               	decf	AssemblePacket@confirmed& (0+255),w,b
 19095  001B8A  E107               	bnz	l13904
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;lorawan.c: 1684: {
 19099                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 19100  001B8C  51DD               	movf	AssemblePacket@mhdr& (0+255),w,b
 19101  001B8E  0B1F               	andlw	-225
 19102  001B90  0980               	iorlw	128
 19103  001B92  6FDD               	movwf	AssemblePacket@mhdr& (0+255),b
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 19107  001B94  0102               	movlb	2	; () banked
 19108  001B96  8100               	bsf	_loRa& (0+255),0,b
 19109                           
 19110                           ;lorawan.c: 1687: }
 19111  001B98  D004               	goto	l2186
 19112  001B9A                     l13904:
 19113                           
 19114                           ; BSR set to: 0
 19115                           ;lorawan.c: 1688: else
 19116                           ;lorawan.c: 1689: {
 19117                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 19118  001B9A  51DD               	movf	AssemblePacket@mhdr& (0+255),w,b
 19119  001B9C  0B1F               	andlw	-225
 19120  001B9E  0940               	iorlw	64
 19121  001BA0  6FDD               	movwf	AssemblePacket@mhdr& (0+255),b
 19122  001BA2                     l2186:
 19123                           
 19124                           ;lorawan.c: 1691: }
 19125                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 19126  001BA2  0EFC               	movlw	-4
 19127  001BA4  0100               	movlb	0	; () banked
 19128  001BA6  17DD               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19129                           
 19130                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 19131  001BA8  0EE3               	movlw	-29
 19132  001BAA  17DD               	andwf	AssemblePacket@mhdr& (0+255),f,b
 19133                           
 19134                           ; BSR set to: 0
 19135                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 19136  001BAC  0EE0               	movlw	low _macBuffer
 19137  001BAE  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19138  001BB0  6ED9               	movwf	fsr2l,c
 19139  001BB2  6ADA               	clrf	fsr2h,c
 19140  001BB4  0E04               	movlw	high _macBuffer
 19141  001BB6  22DA               	addwfc	fsr2h,f,c
 19142  001BB8  C0DD  FFDF         	movff	AssemblePacket@mhdr,indf2
 19143                           
 19144                           ; BSR set to: 0
 19145  001BBC  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19146                           
 19147                           ; BSR set to: 0
 19148                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 19149  001BBE  0EE0               	movlw	low _macBuffer
 19150  001BC0  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19151  001BC2  6F64               	movwf	memcpy@d1& (0+255),b
 19152  001BC4  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19153  001BC6  0E04               	movlw	high _macBuffer
 19154  001BC8  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19155  001BCA  0E1E               	movlw	low (_loRa+30)
 19156  001BCC  6F66               	movwf	memcpy@s1& (0+255),b
 19157  001BCE  0E02               	movlw	high (_loRa+30)
 19158  001BD0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19159  001BD2  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19160  001BD4  0E04               	movlw	4
 19161  001BD6  6F68               	movwf	memcpy@n& (0+255),b
 19162  001BD8  ECD5  F034         	call	_memcpy	;wreg free
 19163                           
 19164                           ; BSR set to: 0
 19165                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 19166  001BDC  0E04               	movlw	4
 19167  001BDE  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;lorawan.c: 1699: fCtrl.value = 0;
 19171  001BE0  6BDE               	clrf	AssemblePacket@fCtrl& (0+255),b
 19172                           
 19173                           ; BSR set to: 0
 19174                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 19175  001BE2  0102               	movlb	2	; () banked
 19176  001BE4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 19177  001BE6  D030               	goto	l2187
 19178                           
 19179                           ; BSR set to: 2
 19180                           ;lorawan.c: 1702: {
 19181                           ;lorawan.c: 1703: fCtrl.adr = 1;
 19182  001BE8  0100               	movlb	0	; () banked
 19183  001BEA  8FDE               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 19184                           
 19185                           ; BSR set to: 0
 19186                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 19187  001BEC  0102               	movlb	2	; () banked
 19188  001BEE  51DF               	movf	(_loRa+223)& (0+255),w,b
 19189  001BF0  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 19190  001BF2  E229               	bc	l2188
 19191                           
 19192                           ; BSR set to: 2
 19193                           ;lorawan.c: 1705: {
 19194                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 19195  001BF4  0100               	movlb	0	; () banked
 19196  001BF6  8DDE               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 19197                           
 19198                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 19199  001BF8  0102               	movlb	2	; () banked
 19200  001BFA  8900               	bsf	_loRa& (0+255),4,b
 19201                           
 19202                           ; BSR set to: 2
 19203                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 19204  001BFC  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 19205  001BFE  2BD1               	incf	(_loRa+209)& (0+255),f,b
 19206                           
 19207                           ; BSR set to: 2
 19208                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 19209  001C00  51A2               	movf	(_loRa+162)& (0+255),w,b
 19210  001C02  19D0               	xorwf	(_loRa+208)& (0+255),w,b
 19211  001C04  11D1               	iorwf	(_loRa+209)& (0+255),w,b
 19212  001C06  E102               	bnz	l13930
 19213                           
 19214                           ; BSR set to: 2
 19215                           ;lorawan.c: 1711: {
 19216                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 19217  001C08  6BEE               	clrf	(_loRa+238)& (0+255),b
 19218  001C0A  D01A               	goto	L9
 19219  001C0C                     l13930:
 19220                           
 19221                           ; BSR set to: 2
 19222                           ;lorawan.c: 1716: else
 19223                           ;lorawan.c: 1717: {
 19224                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 19225  001C0C  51A2               	movf	(_loRa+162)& (0+255),w,b
 19226  001C0E  0100               	movlb	0	; () banked
 19227  001C10  6FDA               	movwf	??_AssemblePacket& (0+255),b
 19228  001C12  6BDB               	clrf	(??_AssemblePacket+1)& (0+255),b
 19229  001C14  0102               	movlb	2	; () banked
 19230  001C16  51D0               	movf	(_loRa+208)& (0+255),w,b
 19231  001C18  0100               	movlb	0	; () banked
 19232  001C1A  5DDA               	subwf	??_AssemblePacket& (0+255),w,b
 19233  001C1C  0102               	movlb	2	; () banked
 19234  001C1E  51D1               	movf	(_loRa+209)& (0+255),w,b
 19235  001C20  0100               	movlb	0	; () banked
 19236  001C22  59DB               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 19237  001C24  E20E               	bc	l2191
 19238                           
 19239                           ; BSR set to: 0
 19240                           ;lorawan.c: 1719: {
 19241                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 19242  001C26  0102               	movlb	2	; () banked
 19243  001C28  2BEE               	incf	(_loRa+238)& (0+255),f,b
 19244                           
 19245                           ; BSR set to: 2
 19246                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 19247  001C2A  51EE               	movf	(_loRa+238)& (0+255),w,b
 19248  001C2C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 19249  001C2E  E20C               	bc	l2187
 19250                           
 19251                           ; BSR set to: 2
 19252                           ;lorawan.c: 1725: {
 19253                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 19254  001C30  6BEE               	clrf	(_loRa+238)& (0+255),b
 19255                           
 19256                           ; BSR set to: 2
 19257                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 19258  001C32  ECDB  F02D         	call	_FindSmallestDataRate	;wreg free
 19259  001C36  0900               	iorlw	0
 19260  001C38  E107               	bnz	l2187
 19261                           
 19262                           ; BSR set to: 0
 19263                           ;lorawan.c: 1729: {
 19264                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 19265  001C3A  0102               	movlb	2	; () banked
 19266  001C3C  6BD0               	clrf	(_loRa+208)& (0+255),b
 19267  001C3E  6BD1               	clrf	(_loRa+209)& (0+255),b
 19268  001C40                     L9:
 19269                           
 19270                           ;lorawan.c: 1732: fCtrl.adrAckReq = 0;
 19271  001C40  0100               	movlb	0	; () banked
 19272  001C42                     l2191:
 19273                           
 19274                           ; BSR set to: 0
 19275                           ;lorawan.c: 1737: else
 19276                           ;lorawan.c: 1738: {
 19277                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 19278  001C42  9DDE               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 19279                           
 19280                           ;lorawan.c: 1740: loRa.lorawanMacStatus.adrAckRequest = 0;
 19281  001C44  0102               	movlb	2	; () banked
 19282  001C46                     l2188:
 19283                           
 19284                           ; BSR set to: 2
 19285                           ;lorawan.c: 1744: else
 19286                           ;lorawan.c: 1745: {
 19287                           ;lorawan.c: 1746: loRa.lorawanMacStatus.adrAckRequest = 0;
 19288  001C46  9900               	bcf	_loRa& (0+255),4,b
 19289  001C48                     l2187:
 19290                           
 19291                           ;lorawan.c: 1747: }
 19292                           ;lorawan.c: 1748: }
 19293                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 19294  001C48  0102               	movlb	2	; () banked
 19295  001C4A  A300               	btfss	_loRa& (0+255),1,b
 19296  001C4C  D004               	goto	l2196
 19297                           
 19298                           ; BSR set to: 2
 19299                           ;lorawan.c: 1751: {
 19300                           ;lorawan.c: 1752: fCtrl.ack = 1;
 19301  001C4E  0100               	movlb	0	; () banked
 19302  001C50  8BDE               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 19303                           
 19304                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 19305  001C52  0102               	movlb	2	; () banked
 19306  001C54  9300               	bcf	_loRa& (0+255),1,b
 19307  001C56                     l2196:
 19308                           
 19309                           ; BSR set to: 2
 19310                           ;lorawan.c: 1754: }
 19311                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 19312  001C56  0100               	movlb	0	; () banked
 19313  001C58  99DE               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 19314                           
 19315                           ; BSR set to: 0
 19316                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 19317  001C5A  0102               	movlb	2	; () banked
 19318  001C5C  51A7               	movf	(_loRa+167)& (0+255),w,b
 19319  001C5E  E004               	bz	l13948
 19320                           
 19321                           ; BSR set to: 2
 19322  001C60  0101               	movlb	1	; () banked
 19323  001C62  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19324  001C64  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19325  001C66  E104               	bnz	l13950
 19326  001C68                     l13948:
 19327                           
 19328                           ;lorawan.c: 1759: {
 19329                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 19330  001C68  0EF0               	movlw	-16
 19331  001C6A  0100               	movlb	0	; () banked
 19332  001C6C  17DE               	andwf	AssemblePacket@fCtrl& (0+255),f,b
 19333                           
 19334                           ;lorawan.c: 1761: }
 19335  001C6E  D007               	goto	l13952
 19336  001C70                     l13950:
 19337                           
 19338                           ; BSR set to: 1
 19339                           ;lorawan.c: 1763: else
 19340                           ;lorawan.c: 1764: {
 19341                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 19342  001C70  ECBC  F02B         	call	_CountfOptsLength	;wreg free
 19343  001C74  6FDA               	movwf	??_AssemblePacket& (0+255),b
 19344  001C76  19DE               	xorwf	AssemblePacket@fCtrl& (0+255),w,b
 19345  001C78  0BF0               	andlw	-16
 19346  001C7A  19DA               	xorwf	??_AssemblePacket& (0+255),w,b
 19347  001C7C  6FDE               	movwf	AssemblePacket@fCtrl& (0+255),b
 19348  001C7E                     l13952:
 19349                           
 19350                           ; BSR set to: 0
 19351                           ;lorawan.c: 1766: }
 19352                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 19353  001C7E  0EE0               	movlw	low _macBuffer
 19354  001C80  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19355  001C82  6ED9               	movwf	fsr2l,c
 19356  001C84  6ADA               	clrf	fsr2h,c
 19357  001C86  0E04               	movlw	high _macBuffer
 19358  001C88  22DA               	addwfc	fsr2h,f,c
 19359  001C8A  C0DE  FFDF         	movff	AssemblePacket@fCtrl,indf2
 19360                           
 19361                           ; BSR set to: 0
 19362  001C8E  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19363                           
 19364                           ; BSR set to: 0
 19365                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 19366  001C90  0EE0               	movlw	low _macBuffer
 19367  001C92  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19368  001C94  6F64               	movwf	memcpy@d1& (0+255),b
 19369  001C96  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19370  001C98  0E04               	movlw	high _macBuffer
 19371  001C9A  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19372  001C9C  0E06               	movlw	low (_loRa+6)
 19373  001C9E  6F66               	movwf	memcpy@s1& (0+255),b
 19374  001CA0  0E02               	movlw	high (_loRa+6)
 19375  001CA2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19376  001CA4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19377  001CA6  0E02               	movlw	2
 19378  001CA8  6F68               	movwf	memcpy@n& (0+255),b
 19379  001CAA  ECD5  F034         	call	_memcpy	;wreg free
 19380                           
 19381                           ; BSR set to: 0
 19382                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 19383  001CAE  0E02               	movlw	2
 19384  001CB0  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 19385                           
 19386                           ; BSR set to: 0
 19387                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 19388  001CB2  0102               	movlb	2	; () banked
 19389  001CB4  51A7               	movf	(_loRa+167)& (0+255),w,b
 19390  001CB6  E00F               	bz	l13966
 19391                           
 19392                           ; BSR set to: 2
 19393  001CB8  0101               	movlb	1	; () banked
 19394  001CBA  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19395  001CBC  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19396  001CBE  E00B               	bz	l13966
 19397                           
 19398                           ; BSR set to: 1
 19399                           ;lorawan.c: 1774: {
 19400                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 19401  001CC0  0EE0               	movlw	low _macBuffer
 19402  001CC2  0100               	movlb	0	; () banked
 19403  001CC4  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19404  001CC6  0E04               	movlw	high _macBuffer
 19405  001CC8  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19406  001CCA  0EE0               	movlw	low AssemblePacket@bufferIndex
 19407  001CCC  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19408  001CCE  0E01               	movlw	1
 19409  001CD0  6F67               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19410  001CD2  EC1D  F00F         	call	_IncludeMacCommandsResponse	;wreg free
 19411  001CD6                     l13966:
 19412                           
 19413                           ;lorawan.c: 1776: }
 19414                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 19415  001CD6  0EE0               	movlw	low _macBuffer
 19416  001CD8  0100               	movlb	0	; () banked
 19417  001CDA  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19418  001CDC  6ED9               	movwf	fsr2l,c
 19419  001CDE  6ADA               	clrf	fsr2h,c
 19420  001CE0  0E04               	movlw	high _macBuffer
 19421  001CE2  22DA               	addwfc	fsr2h,f,c
 19422  001CE4  C166  FFDF         	movff	AssemblePacket@port,indf2
 19423                           
 19424                           ; BSR set to: 0
 19425  001CE8  2BE0               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 19426                           
 19427                           ; BSR set to: 0
 19428                           ;lorawan.c: 1780: if (bufferLength != 0)
 19429  001CEA  0101               	movlb	1	; () banked
 19430  001CEC  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19431  001CEE  116A               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 19432  001CF0  E031               	bz	l13978
 19433                           
 19434                           ; BSR set to: 1
 19435                           ;lorawan.c: 1781: {
 19436                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 19437  001CF2  0EE0               	movlw	low _macBuffer
 19438  001CF4  0100               	movlb	0	; () banked
 19439  001CF6  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19440  001CF8  6F64               	movwf	memcpy@d1& (0+255),b
 19441  001CFA  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19442  001CFC  0E04               	movlw	high _macBuffer
 19443  001CFE  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19444  001D00  C167  F066         	movff	AssemblePacket@buffer,memcpy@s1
 19445  001D04  C168  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 19446  001D08  C169  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 19447  001D0C  C16A  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 19448  001D10  ECD5  F034         	call	_memcpy	;wreg free
 19449                           
 19450                           ; BSR set to: 0
 19451                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 19452  001D14  C167  F0A4         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 19453  001D18  C168  F0A5         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 19454  001D1C  C169  F0A6         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 19455  001D20  6BA7               	clrf	EncryptFRMPayload@dir& (0+255),b
 19456  001D22  C206  F0A8         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19457  001D26  C207  F0A9         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19458  001D2A  C208  F0AA         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19459  001D2E  C209  F0AB         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19460  001D32  0E32               	movlw	low (_loRa+50)
 19461  001D34  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 19462  001D36  0E02               	movlw	high (_loRa+50)
 19463  001D38  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19464  001D3A  C0E0  F0AE         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19465  001D3E  0EE0               	movlw	low _macBuffer
 19466  001D40  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19467  001D42  0E04               	movlw	high _macBuffer
 19468  001D44  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19469  001D46  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 19470  001D48  ECC8  F020         	call	_EncryptFRMPayload	;wreg free
 19471                           
 19472                           ; BSR set to: 0
 19473                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 19474  001D4C  0101               	movlb	1	; () banked
 19475  001D4E  5169               	movf	AssemblePacket@bufferLength& (0+255),w,b
 19476  001D50  0100               	movlb	0	; () banked
 19477  001D52  D02A               	goto	L8
 19478  001D54                     l13978:
 19479                           
 19480                           ; BSR set to: 1
 19481                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 19482  001D54  0102               	movlb	2	; () banked
 19483  001D56  51A7               	movf	(_loRa+167)& (0+255),w,b
 19484  001D58  E028               	bz	l13984
 19485                           
 19486                           ; BSR set to: 2
 19487                           ;lorawan.c: 1787: {
 19488                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 19489  001D5A  0EEF               	movlw	low _radioBuffer
 19490  001D5C  0100               	movlb	0	; () banked
 19491  001D5E  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 19492  001D60  0E05               	movlw	high _radioBuffer
 19493  001D62  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 19494  001D64  0EDF               	movlw	low AssemblePacket@macCmdIdx
 19495  001D66  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 19496  001D68  6B67               	clrf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 19497  001D6A  EC1D  F00F         	call	_IncludeMacCommandsResponse	;wreg free
 19498                           
 19499                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 19500  001D6E  0EEF               	movlw	low _radioBuffer
 19501  001D70  6FA4               	movwf	EncryptFRMPayload@buffer& (0+255),b
 19502  001D72  0E05               	movlw	high _radioBuffer
 19503  001D74  6FA5               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 19504  001D76  C0DF  F0A6         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 19505  001D7A  6BA7               	clrf	EncryptFRMPayload@dir& (0+255),b
 19506  001D7C  C206  F0A8         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 19507  001D80  C207  F0A9         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 19508  001D84  C208  F0AA         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 19509  001D88  C209  F0AB         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 19510  001D8C  0E22               	movlw	low (_loRa+34)
 19511  001D8E  6FAC               	movwf	EncryptFRMPayload@key& (0+255),b
 19512  001D90  0E02               	movlw	high (_loRa+34)
 19513  001D92  6FAD               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 19514  001D94  C0E0  F0AE         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 19515  001D98  0EE0               	movlw	low _macBuffer
 19516  001D9A  6FAF               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 19517  001D9C  0E04               	movlw	high _macBuffer
 19518  001D9E  6FB0               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 19519  001DA0  6BB1               	clrf	EncryptFRMPayload@multicastStatus& (0+255),b
 19520  001DA2  ECC8  F020         	call	_EncryptFRMPayload	;wreg free
 19521                           
 19522                           ; BSR set to: 0
 19523                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 19524  001DA6  51DF               	movf	AssemblePacket@macCmdIdx& (0+255),w,b
 19525  001DA8                     L8:
 19526  001DA8  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 19527  001DAA                     l13984:
 19528                           
 19529                           ;lorawan.c: 1793: }
 19530                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 19531  001DAA  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 19532  001DAE  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 19533  001DB2  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 19534  001DB6  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 19535  001DBA  0100               	movlb	0	; () banked
 19536  001DBC  51E0               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 19537  001DBE  0FF0               	addlw	240
 19538  001DC0  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 19539  001DC2  0E49               	movlw	73
 19540  001DC4  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 19541  001DC6  0E00               	movlw	0
 19542  001DC8  6B74               	clrf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 19543  001DCA  EC82  F02D         	call	_AssembleEncryptionBlock
 19544                           
 19545                           ; BSR set to: 0
 19546                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 19547  001DCE  0EE0               	movlw	low _macBuffer
 19548  001DD0  6F64               	movwf	memcpy@d1& (0+255),b
 19549  001DD2  0E04               	movlw	high _macBuffer
 19550  001DD4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 19551  001DD6  0EAF               	movlw	low _aesBuffer
 19552  001DD8  6F66               	movwf	memcpy@s1& (0+255),b
 19553  001DDA  0E01               	movlw	high _aesBuffer
 19554  001DDC  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19555  001DDE  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19556  001DE0  0E10               	movlw	16
 19557  001DE2  6F68               	movwf	memcpy@n& (0+255),b
 19558  001DE4  ECD5  F034         	call	_memcpy	;wreg free
 19559                           
 19560                           ; BSR set to: 0
 19561                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 19562  001DE8  0E22               	movlw	low (_loRa+34)
 19563  001DEA  6FCC               	movwf	AESCmac@key& (0+255),b
 19564  001DEC  0E02               	movlw	high (_loRa+34)
 19565  001DEE  6FCD               	movwf	(AESCmac@key+1)& (0+255),b
 19566  001DF0  0EAF               	movlw	low _aesBuffer
 19567  001DF2  6FCE               	movwf	AESCmac@output& (0+255),b
 19568  001DF4  0E01               	movlw	high _aesBuffer
 19569  001DF6  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 19570  001DF8  0EE0               	movlw	low _macBuffer
 19571  001DFA  6FD0               	movwf	AESCmac@input& (0+255),b
 19572  001DFC  0E04               	movlw	high _macBuffer
 19573  001DFE  6FD1               	movwf	(AESCmac@input+1)& (0+255),b
 19574  001E00  C0E0  F0D2         	movff	AssemblePacket@bufferIndex,AESCmac@size
 19575  001E04  EC10  F00C         	call	_AESCmac	;wreg free
 19576                           
 19577                           ; BSR set to: 0
 19578                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 19579  001E08  0EE0               	movlw	low _macBuffer
 19580  001E0A  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19581  001E0C  6F64               	movwf	memcpy@d1& (0+255),b
 19582  001E0E  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 19583  001E10  0E04               	movlw	high _macBuffer
 19584  001E12  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 19585  001E14  0EAF               	movlw	low _aesBuffer
 19586  001E16  6F66               	movwf	memcpy@s1& (0+255),b
 19587  001E18  0E01               	movlw	high _aesBuffer
 19588  001E1A  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 19589  001E1C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 19590  001E1E  0E04               	movlw	4
 19591  001E20  6F68               	movwf	memcpy@n& (0+255),b
 19592  001E22  ECD5  F034         	call	_memcpy	;wreg free
 19593                           
 19594                           ; BSR set to: 0
 19595                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 19596  001E26  0E04               	movlw	4
 19597  001E28  27E0               	addwf	AssemblePacket@bufferIndex& (0+255),f,b
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 19601  001E2A  0EF0               	movlw	240
 19602  001E2C  25E0               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 19603  001E2E  0102               	movlb	2	; () banked
 19604  001E30  6FD4               	movwf	(_loRa+212)& (0+255),b
 19605  001E32  6BD5               	clrf	(_loRa+213)& (0+255),b
 19606  001E34  0EFF               	movlw	255
 19607  001E36  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 19608                           
 19609                           ; BSR set to: 2
 19610  001E38  0CFF               	retlw	255	;funcret
 19611  001E3A                     __end_of_AssemblePacket:
 19612                           	opt stack 0
 19613                           tosu	equ	0xFFF
 19614                           tosh	equ	0xFFE
 19615                           tosl	equ	0xFFD
 19616                           pclath	equ	0xFFA
 19617                           tblptru	equ	0xFF8
 19618                           tblptrh	equ	0xFF7
 19619                           tblptrl	equ	0xFF6
 19620                           tablat	equ	0xFF5
 19621                           prodh	equ	0xFF4
 19622                           prodl	equ	0xFF3
 19623                           intcon	equ	0xFF2
 19624                           intcon2	equ	0xFF1
 19625                           intcon3	equ	0xFF0
 19626                           indf0	equ	0xFEF
 19627                           postinc0	equ	0xFEE
 19628                           fsr0h	equ	0xFEA
 19629                           fsr0l	equ	0xFE9
 19630                           wreg	equ	0xFE8
 19631                           postinc1	equ	0xFE6
 19632                           postdec1	equ	0xFE5
 19633                           plusw1	equ	0xFE3
 19634                           fsr1h	equ	0xFE2
 19635                           fsr1l	equ	0xFE1
 19636                           indf2	equ	0xFDF
 19637                           postinc2	equ	0xFDE
 19638                           postdec2	equ	0xFDD
 19639                           plusw2	equ	0xFDB
 19640                           fsr2h	equ	0xFDA
 19641                           fsr2l	equ	0xFD9
 19642                           status	equ	0xFD8
 19643                           
 19644 ;; *************** function _IncludeMacCommandsResponse *****************
 19645 ;; Defined at:
 19646 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19647 ;; Parameters:    Size  Location     Type
 19648 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 19649 ;;		 -> macBuffer(271), radioBuffer(271), 
 19650 ;;  pBufferIndex    1    6[BANK0 ] PTR unsigned char 
 19651 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 19652 ;;  bIncludeInFo    1    7[BANK0 ] unsigned char 
 19653 ;; Auto vars:     Size  Location     Type
 19654 ;;  bufferIndex     1   15[BANK0 ] unsigned char 
 19655 ;;  i               1   14[BANK0 ] unsigned char 
 19656 ;; Return value:  Size  Location     Type
 19657 ;;                  1    wreg      void 
 19658 ;; Registers used:
 19659 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19660 ;; Tracked objects:
 19661 ;;		On entry : F/0
 19662 ;;		On exit  : F/0
 19663 ;;		Unchanged: 0/0
 19664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19665 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19666 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19667 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19668 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19669 ;;Total ram usage:       12 bytes
 19670 ;; Hardware stack levels used:    1
 19671 ;; Hardware stack levels required when called:    8
 19672 ;; This function calls:
 19673 ;;		_RADIO_GetPacketSnr
 19674 ;; This function is called by:
 19675 ;;		_AssemblePacket
 19676 ;; This function uses a non-reentrant model
 19677 ;;
 19678                           
 19679                           	psect	text103
 19680  001E3A                     __ptext103:
 19681                           	opt stack 0
 19682  001E3A                     _IncludeMacCommandsResponse:
 19683                           	opt stack 19
 19684                           
 19685                           ; BSR set to: 0
 19686                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 19687                           
 19688                           ; BSR set to: 0
 19689                           
 19690                           ; BSR set to: 2
 19691                           ;incstack = 0
 19692  001E3A  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19693  001E3C  6ED9               	movwf	fsr2l,c
 19694  001E3E  6ADA               	clrf	fsr2h,c
 19695  001E40  50DF               	movf	indf2,w,c
 19696  001E42  6F6F               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 19697                           
 19698                           ; BSR set to: 0
 19699                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 19700  001E44  6B6E               	clrf	IncludeMacCommandsResponse@i& (0+255),b
 19701  001E46  D169               	goto	l13530
 19702  001E48                     l13434:
 19703                           
 19704                           ; BSR set to: 0
 19705                           ;lorawan.c: 1851: {
 19706                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 19707  001E48  5167               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 19708  001E4A  E101 D14B          	bz	l13526
 19709                           
 19710                           ; BSR set to: 0
 19711  001E4E  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19712  001E50  0D02               	mullw	2
 19713  001E52  0EA8               	movlw	low (_loRa+168)
 19714  001E54  24F3               	addwf	prodl,w,c
 19715  001E56  6ED9               	movwf	fsr2l,c
 19716  001E58  0E02               	movlw	high (_loRa+168)
 19717  001E5A  20F4               	addwfc	prodh,w,c
 19718  001E5C  6EDA               	movwf	fsr2h,c
 19719  001E5E  28DE               	incf	postinc2,w,c
 19720  001E60  E101 D140          	bz	l13526
 19721                           
 19722                           ; BSR set to: 0
 19723                           ;lorawan.c: 1853: {
 19724                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 19725  001E64  0EFE               	movlw	254
 19726  001E66  6F68               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 19727  001E68  6969               	setf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 19728  001E6A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19729  001E6C  0D02               	mullw	2
 19730  001E6E  0EA8               	movlw	low (_loRa+168)
 19731  001E70  24F3               	addwf	prodl,w,c
 19732  001E72  6ED9               	movwf	fsr2l,c
 19733  001E74  0E02               	movlw	high (_loRa+168)
 19734  001E76  20F4               	addwfc	prodh,w,c
 19735  001E78  6EDA               	movwf	fsr2h,c
 19736  001E7A  50DF               	movf	indf2,w,c
 19737  001E7C  6F6A               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 19738  001E7E  6B6B               	clrf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 19739  001E80  5168               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 19740  001E82  276A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),f,b
 19741  001E84  5169               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 19742  001E86  236B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),f,b
 19743  001E88  0E56               	movlw	low _macEndDevCmdReplyLen
 19744  001E8A  256A               	addwf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 19745  001E8C  6EF6               	movwf	tblptrl,c
 19746  001E8E  0EFE               	movlw	high _macEndDevCmdReplyLen
 19747  001E90  216B               	addwfc	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 19748  001E92  6EF7               	movwf	tblptrh,c
 19749  001E94                     	if	1	;There are 3 active tblptr bytes
 19750  001E94  6AF8               	clrf	tblptru,c
 19751  001E96  0E00               	movlw	low (__mediumconst shr (0+16))
 19752  001E98  22F8               	addwfc	tblptru,f,c
 19753  001E9A                     	endif
 19754  001E9A  0008               	tblrd		*
 19755  001E9C  50F5               	movf	tablat,w,c
 19756  001E9E  C06F  F06C         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+4
 19757  001EA2  6B6D               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 19758  001EA4  276C               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19759  001EA6  0E00               	movlw	0
 19760  001EA8  236D               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19761  001EAA  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 19762  001EAC  6ED9               	movwf	fsr2l,c
 19763  001EAE  6ADA               	clrf	fsr2h,c
 19764  001EB0  50DF               	movf	indf2,w,c
 19765  001EB2  5F6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 19766  001EB4  0E00               	movlw	0
 19767  001EB6  5B6D               	subwfb	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 19768  001EB8  BF6D               	btfsc	(??_IncludeMacCommandsResponse+5)& (0+255),7,b
 19769  001EBA  D114               	goto	l13526
 19770  001EBC  516D               	movf	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 19771  001EBE  E105               	bnz	u14730
 19772  001EC0  0E10               	movlw	16
 19773  001EC2  5D6C               	subwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 19774  001EC4  E301 D12F          	bc	l13532
 19775  001EC8  D10D               	goto	l13526
 19776  001ECA                     u14730:
 19777  001ECA  D12D               	goto	l13532
 19778  001ECC                     l13442:
 19779                           
 19780                           ; BSR set to: 0
 19781                           ;lorawan.c: 1862: {
 19782                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 19783  001ECC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19784  001ECE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19785  001ED0  6ED9               	movwf	fsr2l,c
 19786  001ED2  0E00               	movlw	0
 19787  001ED4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19788  001ED6  6EDA               	movwf	fsr2h,c
 19789  001ED8  0E03               	movlw	3
 19790  001EDA  6EDF               	movwf	indf2,c
 19791                           
 19792                           ; BSR set to: 0
 19793  001EDC  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19794                           
 19795                           ; BSR set to: 0
 19796                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 19797  001EDE  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19798  001EE0  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19799  001EE2  6ED9               	movwf	fsr2l,c
 19800  001EE4  0E00               	movlw	0
 19801  001EE6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19802  001EE8  6EDA               	movwf	fsr2h,c
 19803  001EEA  6ADF               	clrf	indf2,c
 19804                           
 19805                           ; BSR set to: 0
 19806                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 19807  001EEC  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19808  001EEE  0D02               	mullw	2
 19809  001EF0  0EA9               	movlw	low (_loRa+169)
 19810  001EF2  24F3               	addwf	prodl,w,c
 19811  001EF4  6ED9               	movwf	fsr2l,c
 19812  001EF6  0E02               	movlw	high (_loRa+169)
 19813  001EF8  20F4               	addwfc	prodh,w,c
 19814  001EFA  6EDA               	movwf	fsr2h,c
 19815  001EFC  A0DF               	btfss	indf2,0,c
 19816  001EFE  D009               	goto	l13452
 19817                           
 19818                           ; BSR set to: 2
 19819                           ;lorawan.c: 1866: {
 19820                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 19821  001F00  0100               	movlb	0	; () banked
 19822  001F02  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19823  001F04  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19824  001F06  6ED9               	movwf	fsr2l,c
 19825  001F08  0E00               	movlw	0
 19826  001F0A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19827  001F0C  6EDA               	movwf	fsr2h,c
 19828  001F0E  0E00               	movlw	0
 19829  001F10  80DB               	bsf	plusw2,0,c
 19830  001F12                     l13452:
 19831                           
 19832                           ;lorawan.c: 1868: }
 19833                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 19834  001F12  0100               	movlb	0	; () banked
 19835  001F14  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19836  001F16  0D02               	mullw	2
 19837  001F18  0EA9               	movlw	low (_loRa+169)
 19838  001F1A  24F3               	addwf	prodl,w,c
 19839  001F1C  6ED9               	movwf	fsr2l,c
 19840  001F1E  0E02               	movlw	high (_loRa+169)
 19841  001F20  20F4               	addwfc	prodh,w,c
 19842  001F22  6EDA               	movwf	fsr2h,c
 19843  001F24  A2DF               	btfss	indf2,1,c
 19844  001F26  D008               	goto	l13456
 19845                           
 19846                           ; BSR set to: 2
 19847                           ;lorawan.c: 1871: {
 19848                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 19849  001F28  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19850  001F2A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19851  001F2C  6ED9               	movwf	fsr2l,c
 19852  001F2E  0E00               	movlw	0
 19853  001F30  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19854  001F32  6EDA               	movwf	fsr2h,c
 19855  001F34  0E00               	movlw	0
 19856  001F36  82DB               	bsf	plusw2,1,c
 19857  001F38                     l13456:
 19858                           
 19859                           ;lorawan.c: 1873: }
 19860                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 19861  001F38  0100               	movlb	0	; () banked
 19862  001F3A  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19863  001F3C  0D02               	mullw	2
 19864  001F3E  0EA9               	movlw	low (_loRa+169)
 19865  001F40  24F3               	addwf	prodl,w,c
 19866  001F42  6ED9               	movwf	fsr2l,c
 19867  001F44  0E02               	movlw	high (_loRa+169)
 19868  001F46  20F4               	addwfc	prodh,w,c
 19869  001F48  6EDA               	movwf	fsr2h,c
 19870  001F4A  A4DF               	btfss	indf2,2,c
 19871  001F4C  D009               	goto	l13460
 19872  001F4E                     l13458:
 19873                           
 19874                           ; BSR set to: 2
 19875                           ;lorawan.c: 1876: {
 19876                           ;lorawan.c: 1877: macBuffer[bufferIndex] |= 0x04;
 19877  001F4E  0100               	movlb	0	; () banked
 19878  001F50  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19879  001F52  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19880  001F54  6ED9               	movwf	fsr2l,c
 19881  001F56  0E00               	movlw	0
 19882  001F58  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19883  001F5A  6EDA               	movwf	fsr2h,c
 19884  001F5C  0E00               	movlw	0
 19885  001F5E  84DB               	bsf	plusw2,2,c
 19886  001F60                     l13460:
 19887                           
 19888                           ;lorawan.c: 1878: }
 19889                           ;lorawan.c: 1879: bufferIndex ++;
 19890  001F60  0100               	movlb	0	; () banked
 19891  001F62  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19892                           
 19893                           ;lorawan.c: 1880: }
 19894                           ;lorawan.c: 1881: break;
 19895  001F64  D0D9               	goto	l13528
 19896  001F66                     l13462:
 19897                           
 19898                           ; BSR set to: 0
 19899                           ;lorawan.c: 1884: {
 19900                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 19901  001F66  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19902  001F68  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19903  001F6A  6ED9               	movwf	fsr2l,c
 19904  001F6C  0E00               	movlw	0
 19905  001F6E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19906  001F70  6EDA               	movwf	fsr2h,c
 19907  001F72  0E05               	movlw	5
 19908  001F74  6EDF               	movwf	indf2,c
 19909                           
 19910                           ; BSR set to: 0
 19911  001F76  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 19912                           
 19913                           ; BSR set to: 0
 19914                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 19915  001F78  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19916  001F7A  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19917  001F7C  6ED9               	movwf	fsr2l,c
 19918  001F7E  0E00               	movlw	0
 19919  001F80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19920  001F82  6EDA               	movwf	fsr2h,c
 19921  001F84  6ADF               	clrf	indf2,c
 19922                           
 19923                           ; BSR set to: 0
 19924                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 19925  001F86  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19926  001F88  0D02               	mullw	2
 19927  001F8A  0EA9               	movlw	low (_loRa+169)
 19928  001F8C  24F3               	addwf	prodl,w,c
 19929  001F8E  6ED9               	movwf	fsr2l,c
 19930  001F90  0E02               	movlw	high (_loRa+169)
 19931  001F92  20F4               	addwfc	prodh,w,c
 19932  001F94  6EDA               	movwf	fsr2h,c
 19933  001F96  A6DF               	btfss	indf2,3,c
 19934  001F98  D009               	goto	l13472
 19935                           
 19936                           ; BSR set to: 2
 19937                           ;lorawan.c: 1888: {
 19938                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 19939  001F9A  0100               	movlb	0	; () banked
 19940  001F9C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19941  001F9E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19942  001FA0  6ED9               	movwf	fsr2l,c
 19943  001FA2  0E00               	movlw	0
 19944  001FA4  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19945  001FA6  6EDA               	movwf	fsr2h,c
 19946  001FA8  0E00               	movlw	0
 19947  001FAA  80DB               	bsf	plusw2,0,c
 19948  001FAC                     l13472:
 19949                           
 19950                           ;lorawan.c: 1890: }
 19951                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 19952  001FAC  0100               	movlb	0	; () banked
 19953  001FAE  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19954  001FB0  0D02               	mullw	2
 19955  001FB2  0EA9               	movlw	low (_loRa+169)
 19956  001FB4  24F3               	addwf	prodl,w,c
 19957  001FB6  6ED9               	movwf	fsr2l,c
 19958  001FB8  0E02               	movlw	high (_loRa+169)
 19959  001FBA  20F4               	addwfc	prodh,w,c
 19960  001FBC  6EDA               	movwf	fsr2h,c
 19961  001FBE  A8DF               	btfss	indf2,4,c
 19962  001FC0  D008               	goto	l13476
 19963                           
 19964                           ; BSR set to: 2
 19965                           ;lorawan.c: 1893: {
 19966                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 19967  001FC2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19968  001FC4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19969  001FC6  6ED9               	movwf	fsr2l,c
 19970  001FC8  0E00               	movlw	0
 19971  001FCA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 19972  001FCC  6EDA               	movwf	fsr2h,c
 19973  001FCE  0E00               	movlw	0
 19974  001FD0  82DB               	bsf	plusw2,1,c
 19975  001FD2                     l13476:
 19976                           
 19977                           ;lorawan.c: 1895: }
 19978                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 19979  001FD2  0100               	movlb	0	; () banked
 19980  001FD4  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 19981  001FD6  0D02               	mullw	2
 19982  001FD8  0EA9               	movlw	low (_loRa+169)
 19983  001FDA  24F3               	addwf	prodl,w,c
 19984  001FDC  6ED9               	movwf	fsr2l,c
 19985  001FDE  0E02               	movlw	high (_loRa+169)
 19986  001FE0  20F4               	addwfc	prodh,w,c
 19987  001FE2  6EDA               	movwf	fsr2h,c
 19988  001FE4  AADF               	btfss	indf2,5,c
 19989  001FE6  D7BC               	goto	l13460
 19990  001FE8  D7B2               	goto	l13458
 19991  001FEA                     l13482:
 19992                           
 19993                           ; BSR set to: 0
 19994                           ;lorawan.c: 1907: {
 19995                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 19996  001FEA  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 19997  001FEC  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 19998  001FEE  6ED9               	movwf	fsr2l,c
 19999  001FF0  0E00               	movlw	0
 20000  001FF2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20001  001FF4  6EDA               	movwf	fsr2h,c
 20002  001FF6  0E06               	movlw	6
 20003  001FF8  6EDF               	movwf	indf2,c
 20004                           
 20005                           ; BSR set to: 0
 20006  001FFA  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20007                           
 20008                           ; BSR set to: 0
 20009                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 20010  001FFC  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20011  001FFE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20012  002000  6ED9               	movwf	fsr2l,c
 20013  002002  0E00               	movlw	0
 20014  002004  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20015  002006  6EDA               	movwf	fsr2h,c
 20016  002008  C2E0  FFDF         	movff	_loRa+224,indf2
 20017  00200C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20018                           
 20019                           ; BSR set to: 0
 20020                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 20021  00200E  EC45  F03D         	call	_RADIO_GetPacketSnr	;wreg free
 20022  002012  0A80               	xorlw	128
 20023  002014  0FA0               	addlw	160
 20024  002016  E305               	bnc	l13492
 20025                           
 20026                           ; BSR set to: 1
 20027  002018  EC45  F03D         	call	_RADIO_GetPacketSnr	;wreg free
 20028  00201C  0A80               	xorlw	128
 20029  00201E  0F60               	addlw	-160
 20030  002020  E309               	bnc	l13496
 20031  002022                     l13492:
 20032                           
 20033                           ; BSR set to: 1
 20034                           ;lorawan.c: 1911: {
 20035                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 20036  002022  0100               	movlb	0	; () banked
 20037  002024  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20038  002026  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20039  002028  6ED9               	movwf	fsr2l,c
 20040  00202A  0E00               	movlw	0
 20041  00202C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20042  00202E  6EDA               	movwf	fsr2h,c
 20043  002030  0E20               	movlw	32
 20044  002032  D00A               	goto	L10
 20045  002034                     l13496:
 20046                           
 20047                           ; BSR set to: 1
 20048                           ;lorawan.c: 1914: else
 20049                           ;lorawan.c: 1915: {
 20050                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 20051  002034  0100               	movlb	0	; () banked
 20052  002036  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20053  002038  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20054  00203A  6ED9               	movwf	fsr2l,c
 20055  00203C  0E00               	movlw	0
 20056  00203E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20057  002040  6EDA               	movwf	fsr2h,c
 20058  002042  EC45  F03D         	call	_RADIO_GetPacketSnr	;wreg free
 20059  002046  0B3F               	andlw	63
 20060  002048                     L10:
 20061  002048  6EDF               	movwf	indf2,c
 20062  00204A  D78A               	goto	l13460
 20063  00204C                     l13500:
 20064                           
 20065                           ; BSR set to: 0
 20066                           ;lorawan.c: 1922: {
 20067                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 20068  00204C  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20069  00204E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20070  002050  6ED9               	movwf	fsr2l,c
 20071  002052  0E00               	movlw	0
 20072  002054  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20073  002056  6EDA               	movwf	fsr2h,c
 20074  002058  0E07               	movlw	7
 20075  00205A  6EDF               	movwf	indf2,c
 20076                           
 20077                           ; BSR set to: 0
 20078  00205C  2B6F               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 20079                           
 20080                           ; BSR set to: 0
 20081                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 20082  00205E  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20083  002060  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20084  002062  6ED9               	movwf	fsr2l,c
 20085  002064  0E00               	movlw	0
 20086  002066  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20087  002068  6EDA               	movwf	fsr2h,c
 20088  00206A  6ADF               	clrf	indf2,c
 20089                           
 20090                           ; BSR set to: 0
 20091                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 20092  00206C  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20093  00206E  0D02               	mullw	2
 20094  002070  0EA9               	movlw	low (_loRa+169)
 20095  002072  24F3               	addwf	prodl,w,c
 20096  002074  6ED9               	movwf	fsr2l,c
 20097  002076  0E02               	movlw	high (_loRa+169)
 20098  002078  20F4               	addwfc	prodh,w,c
 20099  00207A  6EDA               	movwf	fsr2h,c
 20100  00207C  AEDF               	btfss	indf2,7,c
 20101  00207E  D009               	goto	l13510
 20102                           
 20103                           ; BSR set to: 2
 20104                           ;lorawan.c: 1926: {
 20105                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 20106  002080  0100               	movlb	0	; () banked
 20107  002082  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20108  002084  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20109  002086  6ED9               	movwf	fsr2l,c
 20110  002088  0E00               	movlw	0
 20111  00208A  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20112  00208C  6EDA               	movwf	fsr2h,c
 20113  00208E  0E00               	movlw	0
 20114  002090  80DB               	bsf	plusw2,0,c
 20115  002092                     l13510:
 20116                           
 20117                           ;lorawan.c: 1928: }
 20118                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 20119  002092  0100               	movlb	0	; () banked
 20120  002094  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20121  002096  0D02               	mullw	2
 20122  002098  0EA9               	movlw	low (_loRa+169)
 20123  00209A  24F3               	addwf	prodl,w,c
 20124  00209C  6ED9               	movwf	fsr2l,c
 20125  00209E  0E02               	movlw	high (_loRa+169)
 20126  0020A0  20F4               	addwfc	prodh,w,c
 20127  0020A2  6EDA               	movwf	fsr2h,c
 20128  0020A4  ACDF               	btfss	indf2,6,c
 20129  0020A6  D75C               	goto	l13460
 20130                           
 20131                           ; BSR set to: 2
 20132                           ;lorawan.c: 1931: {
 20133                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 20134  0020A8  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20135  0020AA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20136  0020AC  6ED9               	movwf	fsr2l,c
 20137  0020AE  0E00               	movlw	0
 20138  0020B0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20139  0020B2  6EDA               	movwf	fsr2h,c
 20140  0020B4  0E00               	movlw	0
 20141  0020B6  82DB               	bsf	plusw2,1,c
 20142  0020B8  D753               	goto	l13460
 20143  0020BA                     l2238:
 20144                           
 20145                           ; BSR set to: 0
 20146                           ;lorawan.c: 1939: {
 20147                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 20148  0020BA  0102               	movlb	2	; () banked
 20149  0020BC  69DD               	setf	(_loRa+221)& (0+255),b
 20150                           
 20151                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 20152  0020BE  6BDE               	clrf	(_loRa+222)& (0+255),b
 20153  0020C0                     l13516:
 20154                           
 20155                           ;lorawan.c: 1942: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 20156  0020C0  0100               	movlb	0	; () banked
 20157  0020C2  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20158  0020C4  0D02               	mullw	2
 20159  0020C6  0EA8               	movlw	low (_loRa+168)
 20160  0020C8  24F3               	addwf	prodl,w,c
 20161  0020CA  6ED9               	movwf	fsr2l,c
 20162  0020CC  0E02               	movlw	high (_loRa+168)
 20163  0020CE  20F4               	addwfc	prodh,w,c
 20164  0020D0  6EDA               	movwf	fsr2h,c
 20165  0020D2  516F               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 20166  0020D4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 20167  0020D6  6EE9               	movwf	fsr0l,c
 20168  0020D8  0E00               	movlw	0
 20169  0020DA  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 20170  0020DC  6EEA               	movwf	fsr0h,c
 20171  0020DE  CFDF FFEF          	movff	indf2,indf0
 20172  0020E2  D73E               	goto	l13460
 20173  0020E4                     l13526:
 20174                           
 20175                           ; BSR set to: 0
 20176  0020E4  516E               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 20177  0020E6  0D02               	mullw	2
 20178  0020E8  0EA8               	movlw	low (_loRa+168)
 20179  0020EA  24F3               	addwf	prodl,w,c
 20180  0020EC  6ED9               	movwf	fsr2l,c
 20181  0020EE  0E02               	movlw	high (_loRa+168)
 20182  0020F0  20F4               	addwfc	prodh,w,c
 20183  0020F2  6EDA               	movwf	fsr2h,c
 20184  0020F4  50DF               	movf	indf2,w,c
 20185                           
 20186                           ; Switch size 1, requested type "speed"
 20187                           ; Number of cases is 7, Range of values is 2 to 8
 20188                           ; switch strategies available:
 20189                           ; Name         Instructions Cycles
 20190                           ; simple_byte           22    12 (average)
 20191                           ;	Chosen strategy is simple_byte
 20192  0020F6  0A02               	xorlw	2	; case 2
 20193  0020F8  E0E0               	bz	l2238
 20194  0020FA  0A01               	xorlw	1	; case 3
 20195  0020FC  E101 D6E6          	bz	l13442
 20196  002100  0A07               	xorlw	7	; case 4
 20197  002102  E0DE               	bz	l13516
 20198  002104  0A01               	xorlw	1	; case 5
 20199  002106  E101 D72E          	bz	l13462
 20200  00210A  0A03               	xorlw	3	; case 6
 20201  00210C  E101 D76D          	bz	l13482
 20202  002110  0A01               	xorlw	1	; case 7
 20203  002112  E09C               	bz	l13500
 20204  002114  0A0F               	xorlw	15	; case 8
 20205  002116  E0D4               	bz	l13516
 20206  002118                     l13528:
 20207                           
 20208                           ; BSR set to: 0
 20209  002118  2B6E               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 20210  00211A                     l13530:
 20211                           
 20212                           ; BSR set to: 0
 20213  00211A  0102               	movlb	2	; () banked
 20214  00211C  51A7               	movf	(_loRa+167)& (0+255),w,b
 20215  00211E  0100               	movlb	0	; () banked
 20216  002120  5D6E               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 20217  002122  E201 D691          	bnc	l13434
 20218  002126                     l13532:
 20219                           
 20220                           ; BSR set to: 0
 20221                           ;lorawan.c: 1957: }
 20222                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 20223  002126  5166               	movf	IncludeMacCommandsResponse@pBufferIndex& (0+255),w,b
 20224  002128  6ED9               	movwf	fsr2l,c
 20225  00212A  6ADA               	clrf	fsr2h,c
 20226  00212C  C06F  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 20227                           
 20228                           ; BSR set to: 0
 20229  002130  0012               	return		;funcret
 20230  002132                     __end_of_IncludeMacCommandsResponse:
 20231                           	opt stack 0
 20232                           tosu	equ	0xFFF
 20233                           tosh	equ	0xFFE
 20234                           tosl	equ	0xFFD
 20235                           pclath	equ	0xFFA
 20236                           tblptru	equ	0xFF8
 20237                           tblptrh	equ	0xFF7
 20238                           tblptrl	equ	0xFF6
 20239                           tablat	equ	0xFF5
 20240                           prodh	equ	0xFF4
 20241                           prodl	equ	0xFF3
 20242                           intcon	equ	0xFF2
 20243                           intcon2	equ	0xFF1
 20244                           intcon3	equ	0xFF0
 20245                           indf0	equ	0xFEF
 20246                           postinc0	equ	0xFEE
 20247                           fsr0h	equ	0xFEA
 20248                           fsr0l	equ	0xFE9
 20249                           wreg	equ	0xFE8
 20250                           postinc1	equ	0xFE6
 20251                           postdec1	equ	0xFE5
 20252                           plusw1	equ	0xFE3
 20253                           fsr1h	equ	0xFE2
 20254                           fsr1l	equ	0xFE1
 20255                           indf2	equ	0xFDF
 20256                           postinc2	equ	0xFDE
 20257                           postdec2	equ	0xFDD
 20258                           plusw2	equ	0xFDB
 20259                           fsr2h	equ	0xFDA
 20260                           fsr2l	equ	0xFD9
 20261                           status	equ	0xFD8
 20262                           
 20263 ;; *************** function _RADIO_GetPacketSnr *****************
 20264 ;; Defined at:
 20265 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 20266 ;; Parameters:    Size  Location     Type
 20267 ;;		None
 20268 ;; Auto vars:     Size  Location     Type
 20269 ;;		None
 20270 ;; Return value:  Size  Location     Type
 20271 ;;                  1    wreg      char 
 20272 ;; Registers used:
 20273 ;;		wreg, status,2
 20274 ;; Tracked objects:
 20275 ;;		On entry : E/0
 20276 ;;		On exit  : F/1
 20277 ;;		Unchanged: 0/0
 20278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20283 ;;Total ram usage:        0 bytes
 20284 ;; Hardware stack levels used:    1
 20285 ;; Hardware stack levels required when called:    7
 20286 ;; This function calls:
 20287 ;;		Nothing
 20288 ;; This function is called by:
 20289 ;;		_IncludeMacCommandsResponse
 20290 ;; This function uses a non-reentrant model
 20291 ;;
 20292                           
 20293                           	psect	text104
 20294  007A8A                     __ptext104:
 20295                           	opt stack 0
 20296  007A8A                     _RADIO_GetPacketSnr:
 20297                           	opt stack 19
 20298                           
 20299                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;incstack = 0
 20303  007A8A  0101               	movlb	1	; () banked
 20304  007A8C  51AB               	movf	(_RadioConfiguration+50)& (0+255),w,b
 20305                           
 20306                           ; BSR set to: 1
 20307  007A8E  0012               	return		;funcret
 20308  007A90                     __end_of_RADIO_GetPacketSnr:
 20309                           	opt stack 0
 20310                           tosu	equ	0xFFF
 20311                           tosh	equ	0xFFE
 20312                           tosl	equ	0xFFD
 20313                           pclath	equ	0xFFA
 20314                           tblptru	equ	0xFF8
 20315                           tblptrh	equ	0xFF7
 20316                           tblptrl	equ	0xFF6
 20317                           tablat	equ	0xFF5
 20318                           prodh	equ	0xFF4
 20319                           prodl	equ	0xFF3
 20320                           intcon	equ	0xFF2
 20321                           intcon2	equ	0xFF1
 20322                           intcon3	equ	0xFF0
 20323                           indf0	equ	0xFEF
 20324                           postinc0	equ	0xFEE
 20325                           fsr0h	equ	0xFEA
 20326                           fsr0l	equ	0xFE9
 20327                           wreg	equ	0xFE8
 20328                           postinc1	equ	0xFE6
 20329                           postdec1	equ	0xFE5
 20330                           plusw1	equ	0xFE3
 20331                           fsr1h	equ	0xFE2
 20332                           fsr1l	equ	0xFE1
 20333                           indf2	equ	0xFDF
 20334                           postinc2	equ	0xFDE
 20335                           postdec2	equ	0xFDD
 20336                           plusw2	equ	0xFDB
 20337                           fsr2h	equ	0xFDA
 20338                           fsr2l	equ	0xFD9
 20339                           status	equ	0xFD8
 20340                           
 20341 ;; *************** function _FindSmallestDataRate *****************
 20342 ;; Defined at:
 20343 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20344 ;; Parameters:    Size  Location     Type
 20345 ;;		None
 20346 ;; Auto vars:     Size  Location     Type
 20347 ;;  dataRate        1    7[BANK0 ] unsigned char 
 20348 ;;  i               1    6[BANK0 ] unsigned char 
 20349 ;;  found           1    5[BANK0 ] unsigned char 
 20350 ;; Return value:  Size  Location     Type
 20351 ;;                  1    wreg      unsigned char 
 20352 ;; Registers used:
 20353 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20354 ;; Tracked objects:
 20355 ;;		On entry : F/2
 20356 ;;		On exit  : F/0
 20357 ;;		Unchanged: 0/0
 20358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20359 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20360 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20361 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20362 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20363 ;;Total ram usage:        4 bytes
 20364 ;; Hardware stack levels used:    1
 20365 ;; Hardware stack levels required when called:    7
 20366 ;; This function calls:
 20367 ;;		Nothing
 20368 ;; This function is called by:
 20369 ;;		_AckRetransmissionCallback
 20370 ;;		_AssemblePacket
 20371 ;; This function uses a non-reentrant model
 20372 ;;
 20373                           
 20374                           	psect	text105
 20375  005BB6                     __ptext105:
 20376                           	opt stack 0
 20377  005BB6                     _FindSmallestDataRate:
 20378                           	opt stack 20
 20379                           
 20380                           ; BSR set to: 2
 20381                           ;lorawan.c: 1966: bool found = 0;
 20382                           
 20383                           ; BSR set to: 1
 20384                           ;incstack = 0
 20385  005BB6  0100               	movlb	0	; () banked
 20386  005BB8  6B65               	clrf	FindSmallestDataRate@found& (0+255),b
 20387                           
 20388                           ; BSR set to: 0
 20389                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 20390  005BBA  0102               	movlb	2	; () banked
 20391  005BBC  51DF               	movf	(_loRa+223)& (0+255),w,b
 20392  005BBE  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20393  005BC0  E24A               	bc	l13360
 20394                           
 20395                           ; BSR set to: 2
 20396                           ;lorawan.c: 1969: {
 20397                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 20398  005BC2  05DF               	decf	(_loRa+223)& (0+255),w,b
 20399  005BC4  0100               	movlb	0	; () banked
 20400  005BC6  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 20401                           
 20402                           ;lorawan.c: 1972: while ( (found == 0) && (dataRate >= loRa.minDataRate) )
 20403  005BC8  D03A               	goto	l13352
 20404  005BCA                     l2247:
 20405                           
 20406                           ; BSR set to: 0
 20407                           ;lorawan.c: 1973: {
 20408                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 20409  005BCA  6B66               	clrf	FindSmallestDataRate@i& (0+255),b
 20410  005BCC  D02B               	goto	l13344
 20411  005BCE                     l13334:
 20412                           
 20413                           ; BSR set to: 0
 20414                           ;lorawan.c: 1975: {
 20415                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 20416  005BCE  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 20417  005BD0  0D0E               	mullw	14
 20418  005BD2  0E05               	movlw	low (_Channels+5)
 20419  005BD4  24F3               	addwf	prodl,w,c
 20420  005BD6  6ED9               	movwf	fsr2l,c
 20421  005BD8  0E04               	movlw	high (_Channels+5)
 20422  005BDA  20F4               	addwfc	prodh,w,c
 20423  005BDC  6EDA               	movwf	fsr2h,c
 20424  005BDE  50DF               	movf	223,w,c
 20425  005BE0  0B0F               	andlw	15
 20426  005BE2  0100               	movlb	0	; () banked
 20427  005BE4  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 20428  005BE6  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 20429  005BE8  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20430  005BEA  E31B               	bnc	l13342
 20431                           
 20432                           ; BSR set to: 0
 20433  005BEC  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 20434  005BEE  0D0E               	mullw	14
 20435  005BF0  0E05               	movlw	low (_Channels+5)
 20436  005BF2  24F3               	addwf	prodl,w,c
 20437  005BF4  6ED9               	movwf	fsr2l,c
 20438  005BF6  0E04               	movlw	high (_Channels+5)
 20439  005BF8  20F4               	addwfc	prodh,w,c
 20440  005BFA  6EDA               	movwf	fsr2h,c
 20441  005BFC  38DF               	swapf	223,w,c
 20442  005BFE  0B0F               	andlw	15
 20443  005C00  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 20444  005C02  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20445  005C04  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 20446  005C06  E30D               	bnc	l13342
 20447                           
 20448                           ; BSR set to: 0
 20449  005C08  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 20450  005C0A  0D0E               	mullw	14
 20451  005C0C  0E04               	movlw	low (_Channels+4)
 20452  005C0E  24F3               	addwf	prodl,w,c
 20453  005C10  6ED9               	movwf	fsr2l,c
 20454  005C12  0E04               	movlw	high (_Channels+4)
 20455  005C14  20F4               	addwfc	prodh,w,c
 20456  005C16  6EDA               	movwf	fsr2h,c
 20457  005C18  04DE               	decf	postinc2,w,c
 20458  005C1A  E103               	bnz	l13342
 20459                           
 20460                           ; BSR set to: 0
 20461                           ;lorawan.c: 1977: {
 20462                           ;lorawan.c: 1978: found = 1;
 20463  005C1C  0E01               	movlw	1
 20464  005C1E  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 20465                           
 20466                           ;lorawan.c: 1979: break;
 20467  005C20  D006               	goto	l13346
 20468  005C22                     l13342:
 20469                           
 20470                           ; BSR set to: 0
 20471  005C22  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 20472  005C24                     l13344:
 20473                           
 20474                           ; BSR set to: 0
 20475  005C24  0102               	movlb	2	; () banked
 20476  005C26  51ED               	movf	(_loRa+237)& (0+255),w,b
 20477  005C28  0100               	movlb	0	; () banked
 20478  005C2A  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 20479  005C2C  E3D0               	bnc	l13334
 20480  005C2E                     l13346:
 20481                           
 20482                           ; BSR set to: 0
 20483                           ;lorawan.c: 1980: }
 20484                           ;lorawan.c: 1981: }
 20485                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 20486  005C2E  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 20487  005C30  E106               	bnz	l13352
 20488                           
 20489                           ; BSR set to: 0
 20490  005C32  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 20491  005C34  0102               	movlb	2	; () banked
 20492  005C36  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20493  005C38  E202               	bc	l13352
 20494                           
 20495                           ; BSR set to: 2
 20496                           ;lorawan.c: 1983: {
 20497                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 20498  005C3A  0100               	movlb	0	; () banked
 20499  005C3C  0767               	decf	FindSmallestDataRate@dataRate& (0+255),f,b
 20500  005C3E                     l13352:
 20501  005C3E  0100               	movlb	0	; () banked
 20502  005C40  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 20503  005C42  E105               	bnz	l13356
 20504                           
 20505                           ; BSR set to: 0
 20506  005C44  0102               	movlb	2	; () banked
 20507  005C46  51EB               	movf	(_loRa+235)& (0+255),w,b
 20508  005C48  0100               	movlb	0	; () banked
 20509  005C4A  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 20510  005C4C  E2BE               	bc	l2247
 20511  005C4E                     l13356:
 20512                           
 20513                           ; BSR set to: 0
 20514                           ;lorawan.c: 1985: }
 20515                           ;lorawan.c: 1986: }
 20516                           ;lorawan.c: 1988: if (found == 1)
 20517  005C4E  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 20518  005C50  E102               	bnz	l13360
 20519                           
 20520                           ; BSR set to: 0
 20521                           ;lorawan.c: 1989: {
 20522                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 20523  005C52  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 20524  005C56                     l13360:
 20525                           
 20526                           ;lorawan.c: 1991: }
 20527                           ;lorawan.c: 1992: }
 20528                           ;lorawan.c: 1994: return found;
 20529  005C56  0100               	movlb	0	; () banked
 20530  005C58  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 20531                           
 20532                           ; BSR set to: 0
 20533  005C5A  0012               	return		;funcret
 20534  005C5C                     __end_of_FindSmallestDataRate:
 20535                           	opt stack 0
 20536                           tosu	equ	0xFFF
 20537                           tosh	equ	0xFFE
 20538                           tosl	equ	0xFFD
 20539                           pclath	equ	0xFFA
 20540                           tblptru	equ	0xFF8
 20541                           tblptrh	equ	0xFF7
 20542                           tblptrl	equ	0xFF6
 20543                           tablat	equ	0xFF5
 20544                           prodh	equ	0xFF4
 20545                           prodl	equ	0xFF3
 20546                           intcon	equ	0xFF2
 20547                           intcon2	equ	0xFF1
 20548                           intcon3	equ	0xFF0
 20549                           indf0	equ	0xFEF
 20550                           postinc0	equ	0xFEE
 20551                           fsr0h	equ	0xFEA
 20552                           fsr0l	equ	0xFE9
 20553                           wreg	equ	0xFE8
 20554                           postinc1	equ	0xFE6
 20555                           postdec1	equ	0xFE5
 20556                           plusw1	equ	0xFE3
 20557                           fsr1h	equ	0xFE2
 20558                           fsr1l	equ	0xFE1
 20559                           indf2	equ	0xFDF
 20560                           postinc2	equ	0xFDE
 20561                           postdec2	equ	0xFDD
 20562                           plusw2	equ	0xFDB
 20563                           fsr2h	equ	0xFDA
 20564                           fsr2l	equ	0xFD9
 20565                           status	equ	0xFD8
 20566                           
 20567 ;; *************** function _EncryptFRMPayload *****************
 20568 ;; Defined at:
 20569 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;  buffer          2   68[BANK0 ] PTR unsigned char 
 20572 ;;		 -> payload(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 20573 ;;  bufferLength    1   70[BANK0 ] unsigned char 
 20574 ;;  dir             1   71[BANK0 ] unsigned char 
 20575 ;;  frameCounter    4   72[BANK0 ] unsigned long 
 20576 ;;  key             2   76[BANK0 ] PTR unsigned char 
 20577 ;;		 -> loRa.activationParameters(105), loRa(245), 
 20578 ;;  macBufferInd    1   78[BANK0 ] unsigned char 
 20579 ;;  bufferToBeEn    2   79[BANK0 ] PTR unsigned char 
 20580 ;;		 -> macBuffer(271), radioBuffer(271), 
 20581 ;;  multicastSta    1   81[BANK0 ] unsigned char 
 20582 ;; Auto vars:     Size  Location     Type
 20583 ;;  j               1   89[BANK0 ] unsigned char 
 20584 ;;  i               1   88[BANK0 ] unsigned char 
 20585 ;;  k               1   87[BANK0 ] unsigned char 
 20586 ;; Return value:  Size  Location     Type
 20587 ;;                  1    wreg      void 
 20588 ;; Registers used:
 20589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20590 ;; Tracked objects:
 20591 ;;		On entry : F/0
 20592 ;;		On exit  : F/0
 20593 ;;		Unchanged: 0/0
 20594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20595 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20596 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20597 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20598 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20599 ;;Total ram usage:       22 bytes
 20600 ;; Hardware stack levels used:    1
 20601 ;; Hardware stack levels required when called:   10
 20602 ;; This function calls:
 20603 ;;		_AESEncodeLoRa
 20604 ;;		_AssembleEncryptionBlock
 20605 ;; This function is called by:
 20606 ;;		_LORAWAN_RxDone
 20607 ;;		_AssemblePacket
 20608 ;; This function uses a non-reentrant model
 20609 ;;
 20610                           
 20611                           	psect	text106
 20612  004190                     __ptext106:
 20613                           	opt stack 0
 20614  004190                     _EncryptFRMPayload:
 20615                           	opt stack 17
 20616                           
 20617                           ; BSR set to: 0
 20618                           
 20619                           ; BSR set to: 0
 20620                           ;incstack = 0
 20621  004190  6BB8               	clrf	EncryptFRMPayload@i& (0+255),b
 20622  004192  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 20623                           
 20624                           ; BSR set to: 0
 20625                           ;lorawan.c: 2209: k = bufferLength / 16;
 20626  004194  39A6               	swapf	EncryptFRMPayload@bufferLength& (0+255),w,b
 20627  004196  0B0F               	andlw	15
 20628  004198  6FB7               	movwf	EncryptFRMPayload@k& (0+255),b
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 20632  00419A  0E01               	movlw	1
 20633  00419C  6FB8               	movwf	EncryptFRMPayload@i& (0+255),b
 20634  00419E  D051               	goto	l13396
 20635  0041A0                     l13378:
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;lorawan.c: 2211: {
 20639                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20640  0041A0  C0A8  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20641  0041A4  C0A9  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20642  0041A8  C0AA  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20643  0041AC  C0AB  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20644  0041B0  C0B8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20645  0041B4  0E01               	movlw	1
 20646  0041B6  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20647  0041B8  C0B1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20648  0041BC  51A7               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20649  0041BE  EC82  F02D         	call	_AssembleEncryptionBlock
 20650                           
 20651                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 20652  0041C2  0EAF               	movlw	low _aesBuffer
 20653  0041C4  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 20654  0041C6  0E01               	movlw	high _aesBuffer
 20655  0041C8  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20656  0041CA  C0AC  F092         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20657  0041CE  C0AD  F093         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20658  0041D2  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 20659                           
 20660                           ; BSR set to: 0
 20661                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 20662  0041D6  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 20663  0041D8                     l13386:
 20664                           
 20665                           ; BSR set to: 0
 20666                           ;lorawan.c: 2216: {
 20667                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 20668  0041D8  51AE               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20669  0041DA  25AF               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20670  0041DC  6ED9               	movwf	fsr2l,c
 20671  0041DE  0E00               	movlw	0
 20672  0041E0  21B0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20673  0041E2  6EDA               	movwf	fsr2h,c
 20674  0041E4  51B8               	movf	EncryptFRMPayload@i& (0+255),w,b
 20675  0041E6  6FB2               	movwf	??_EncryptFRMPayload& (0+255),b
 20676  0041E8  6BB3               	clrf	(??_EncryptFRMPayload+1)& (0+255),b
 20677  0041EA  3BB2               	swapf	??_EncryptFRMPayload& (0+255),f,b
 20678  0041EC  3BB3               	swapf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20679  0041EE  0EF0               	movlw	240
 20680  0041F0  17B3               	andwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20681  0041F2  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 20682  0041F4  0B0F               	andlw	15
 20683  0041F6  13B3               	iorwf	(??_EncryptFRMPayload+1)& (0+255),f,b
 20684  0041F8  0EF0               	movlw	240
 20685  0041FA  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20686  0041FC  C0A4  F0B4         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload+2
 20687  004200  C0A5  F0B5         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+3
 20688  004204  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 20689  004206  27B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20690  004208  51B3               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 20691  00420A  23B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20692  00420C  51B9               	movf	EncryptFRMPayload@j& (0+255),w,b
 20693  00420E  27B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 20694  004210  0E00               	movlw	0
 20695  004212  23B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 20696  004214  0EF0               	movlw	240
 20697  004216  25B4               	addwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20698  004218  6EE9               	movwf	fsr0l,c
 20699  00421A  0EFF               	movlw	255
 20700  00421C  21B5               	addwfc	(??_EncryptFRMPayload+3)& (0+255),w,b
 20701  00421E  6EEA               	movwf	fsr0h,c
 20702  004220  50EF               	movf	indf0,w,c
 20703  004222  6FB6               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 20704  004224  0EAF               	movlw	low _aesBuffer
 20705  004226  25B9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20706  004228  6EE9               	movwf	fsr0l,c
 20707  00422A  6AEA               	clrf	fsr0h,c
 20708  00422C  0E01               	movlw	high _aesBuffer
 20709  00422E  22EA               	addwfc	fsr0h,f,c
 20710  004230  50EF               	movf	indf0,w,c
 20711  004232  19B6               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 20712  004234  6EDF               	movwf	indf2,c
 20713                           
 20714                           ; BSR set to: 0
 20715  004236  2BAE               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20716                           
 20717                           ; BSR set to: 0
 20718  004238  2BB9               	incf	EncryptFRMPayload@j& (0+255),f,b
 20719                           
 20720                           ; BSR set to: 0
 20721  00423A  0E0F               	movlw	15
 20722  00423C  65B9               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 20723  00423E  D7CC               	goto	l13386
 20724                           
 20725                           ; BSR set to: 0
 20726  004240  2BB8               	incf	EncryptFRMPayload@i& (0+255),f,b
 20727  004242                     l13396:
 20728                           
 20729                           ; BSR set to: 0
 20730  004242  51B8               	movf	EncryptFRMPayload@i& (0+255),w,b
 20731  004244  5DB7               	subwf	EncryptFRMPayload@k& (0+255),w,b
 20732  004246  E2AC               	bc	l13378
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;lorawan.c: 2218: }
 20736                           ;lorawan.c: 2219: }
 20737                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 20738  004248  C0A6  F0B2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20739  00424C  0E0F               	movlw	15
 20740  00424E  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20741  004250  B4D8               	btfsc	status,2,c
 20742  004252  0C0F               	retlw	15
 20743                           
 20744                           ; BSR set to: 0
 20745                           ;lorawan.c: 2222: {
 20746                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 20747  004254  C0A8  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 20748  004258  C0A9  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 20749  00425C  C0AA  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 20750  004260  C0AB  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 20751  004264  C0B8  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 20752  004268  0E01               	movlw	1
 20753  00426A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 20754  00426C  C0B1  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 20755  004270  51A7               	movf	EncryptFRMPayload@dir& (0+255),w,b
 20756  004272  EC82  F02D         	call	_AssembleEncryptionBlock
 20757                           
 20758                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 20759  004276  0EAF               	movlw	low _aesBuffer
 20760  004278  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 20761  00427A  0E01               	movlw	high _aesBuffer
 20762  00427C  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 20763  00427E  C0AC  F092         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 20764  004282  C0AD  F093         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 20765  004286  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 20766                           
 20767                           ; BSR set to: 0
 20768                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 20769  00428A  6BB9               	clrf	EncryptFRMPayload@j& (0+255),b
 20770  00428C  D023               	goto	l13410
 20771  00428E                     l13404:
 20772                           
 20773                           ; BSR set to: 0
 20774                           ;lorawan.c: 2227: {
 20775                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 20776  00428E  51AE               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 20777  004290  25AF               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 20778  004292  6ED9               	movwf	fsr2l,c
 20779  004294  0E00               	movlw	0
 20780  004296  21B0               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 20781  004298  6EDA               	movwf	fsr2h,c
 20782  00429A  51B7               	movf	EncryptFRMPayload@k& (0+255),w,b
 20783  00429C  0D10               	mullw	16
 20784  00429E  C0A4  F0B2         	movff	EncryptFRMPayload@buffer,??_EncryptFRMPayload
 20785  0042A2  C0A5  F0B3         	movff	EncryptFRMPayload@buffer+1,??_EncryptFRMPayload+1
 20786  0042A6  50F3               	movf	prodl,w,c
 20787  0042A8  27B2               	addwf	??_EncryptFRMPayload& (0+255),f,b
 20788  0042AA  50F4               	movf	prodh,w,c
 20789  0042AC  23B3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),f,b
 20790  0042AE  51B9               	movf	EncryptFRMPayload@j& (0+255),w,b
 20791  0042B0  25B2               	addwf	??_EncryptFRMPayload& (0+255),w,b
 20792  0042B2  6EE9               	movwf	fsr0l,c
 20793  0042B4  0E00               	movlw	0
 20794  0042B6  21B3               	addwfc	(??_EncryptFRMPayload+1)& (0+255),w,b
 20795  0042B8  6EEA               	movwf	fsr0h,c
 20796  0042BA  50EF               	movf	indf0,w,c
 20797  0042BC  6FB4               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 20798  0042BE  0EAF               	movlw	low _aesBuffer
 20799  0042C0  25B9               	addwf	EncryptFRMPayload@j& (0+255),w,b
 20800  0042C2  6EE9               	movwf	fsr0l,c
 20801  0042C4  6AEA               	clrf	fsr0h,c
 20802  0042C6  0E01               	movlw	high _aesBuffer
 20803  0042C8  22EA               	addwfc	fsr0h,f,c
 20804  0042CA  50EF               	movf	indf0,w,c
 20805  0042CC  19B4               	xorwf	(??_EncryptFRMPayload+2)& (0+255),w,b
 20806  0042CE  6EDF               	movwf	indf2,c
 20807                           
 20808                           ; BSR set to: 0
 20809  0042D0  2BAE               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 20810                           
 20811                           ; BSR set to: 0
 20812  0042D2  2BB9               	incf	EncryptFRMPayload@j& (0+255),f,b
 20813  0042D4                     l13410:
 20814                           
 20815                           ; BSR set to: 0
 20816  0042D4  C0A6  F0B2         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 20817  0042D8  0E0F               	movlw	15
 20818  0042DA  17B2               	andwf	??_EncryptFRMPayload& (0+255),f,b
 20819  0042DC  51B2               	movf	??_EncryptFRMPayload& (0+255),w,b
 20820  0042DE  5DB9               	subwf	EncryptFRMPayload@j& (0+255),w,b
 20821  0042E0  E3D6               	bnc	l13404
 20822                           
 20823                           ; BSR set to: 0
 20824  0042E2  0012               	return		;funcret
 20825  0042E4                     __end_of_EncryptFRMPayload:
 20826                           	opt stack 0
 20827                           tosu	equ	0xFFF
 20828                           tosh	equ	0xFFE
 20829                           tosl	equ	0xFFD
 20830                           pclath	equ	0xFFA
 20831                           tblptru	equ	0xFF8
 20832                           tblptrh	equ	0xFF7
 20833                           tblptrl	equ	0xFF6
 20834                           tablat	equ	0xFF5
 20835                           prodh	equ	0xFF4
 20836                           prodl	equ	0xFF3
 20837                           intcon	equ	0xFF2
 20838                           intcon2	equ	0xFF1
 20839                           intcon3	equ	0xFF0
 20840                           indf0	equ	0xFEF
 20841                           postinc0	equ	0xFEE
 20842                           fsr0h	equ	0xFEA
 20843                           fsr0l	equ	0xFE9
 20844                           wreg	equ	0xFE8
 20845                           postinc1	equ	0xFE6
 20846                           postdec1	equ	0xFE5
 20847                           plusw1	equ	0xFE3
 20848                           fsr1h	equ	0xFE2
 20849                           fsr1l	equ	0xFE1
 20850                           indf2	equ	0xFDF
 20851                           postinc2	equ	0xFDE
 20852                           postdec2	equ	0xFDD
 20853                           plusw2	equ	0xFDB
 20854                           fsr2h	equ	0xFDA
 20855                           fsr2l	equ	0xFD9
 20856                           status	equ	0xFD8
 20857                           
 20858 ;; *************** function _AssembleEncryptionBlock *****************
 20859 ;; Defined at:
 20860 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20861 ;; Parameters:    Size  Location     Type
 20862 ;;  dir             1    wreg     unsigned char 
 20863 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 20864 ;;  blockId         1   18[BANK0 ] unsigned char 
 20865 ;;  firstByte       1   19[BANK0 ] unsigned char 
 20866 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 20867 ;; Auto vars:     Size  Location     Type
 20868 ;;  dir             1   21[BANK0 ] unsigned char 
 20869 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 20870 ;; Return value:  Size  Location     Type
 20871 ;;                  1    wreg      void 
 20872 ;; Registers used:
 20873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20874 ;; Tracked objects:
 20875 ;;		On entry : F/0
 20876 ;;		On exit  : F/0
 20877 ;;		Unchanged: 0/0
 20878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20879 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20880 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20882 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20883 ;;Total ram usage:        9 bytes
 20884 ;; Hardware stack levels used:    1
 20885 ;; Hardware stack levels required when called:    8
 20886 ;; This function calls:
 20887 ;;		_memcpy
 20888 ;;		_memset
 20889 ;; This function is called by:
 20890 ;;		_LORAWAN_RxDone
 20891 ;;		_AssemblePacket
 20892 ;;		_EncryptFRMPayload
 20893 ;; This function uses a non-reentrant model
 20894 ;;
 20895                           
 20896                           	psect	text107
 20897  005B04                     __ptext107:
 20898                           	opt stack 0
 20899  005B04                     _AssembleEncryptionBlock:
 20900                           	opt stack 18
 20901                           
 20902                           ; BSR set to: 0
 20903                           ;incstack = 0
 20904                           ;AssembleEncryptionBlock@dir stored from wreg
 20905  005B04  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 20906                           
 20907                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 20908  005B06  0100               	movlb	0	; () banked
 20909  005B08  6B76               	clrf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 20910                           
 20911                           ; BSR set to: 0
 20912                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 20913  005B0A  0EAF               	movlw	low _aesBuffer
 20914  005B0C  6F64               	movwf	memset@p1& (0+255),b
 20915  005B0E  0E01               	movlw	high _aesBuffer
 20916  005B10  6F65               	movwf	(memset@p1+1)& (0+255),b
 20917  005B12  6B67               	clrf	(memset@c+1)& (0+255),b
 20918  005B14  6B66               	clrf	memset@c& (0+255),b
 20919  005B16  6B69               	clrf	(memset@n+1)& (0+255),b
 20920  005B18  0E10               	movlw	16
 20921  005B1A  6F68               	movwf	memset@n& (0+255),b
 20922  005B1C  ECF1  F039         	call	_memset	;wreg free
 20923                           
 20924                           ; BSR set to: 0
 20925                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 20926  005B20  C073  F1AF         	movff	AssembleEncryptionBlock@firstByte,_aesBuffer
 20927                           
 20928                           ; BSR set to: 0
 20929                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 20930  005B24  0E05               	movlw	5
 20931  005B26  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20932                           
 20933                           ; BSR set to: 0
 20934                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 20935  005B28  0EAF               	movlw	low _aesBuffer
 20936  005B2A  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20937  005B2C  6ED9               	movwf	fsr2l,c
 20938  005B2E  6ADA               	clrf	fsr2h,c
 20939  005B30  0E01               	movlw	high _aesBuffer
 20940  005B32  22DA               	addwfc	fsr2h,f,c
 20941  005B34  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 20942                           
 20943                           ; BSR set to: 0
 20944  005B38  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20945                           
 20946                           ; BSR set to: 0
 20947                           ;lorawan.c: 2168: if (0 == multicastStatus)
 20948  005B3A  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 20949  005B3C  E112               	bnz	l12914
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;lorawan.c: 2169: {
 20953                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 20954  005B3E  0EAF               	movlw	low _aesBuffer
 20955  005B40  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20956  005B42  6F64               	movwf	memcpy@d1& (0+255),b
 20957  005B44  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20958  005B46  0E01               	movlw	high _aesBuffer
 20959  005B48  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20960  005B4A  0E1E               	movlw	low (_loRa+30)
 20961  005B4C  6F66               	movwf	memcpy@s1& (0+255),b
 20962  005B4E  0E02               	movlw	high (_loRa+30)
 20963  005B50  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20964  005B52  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20965  005B54  0E04               	movlw	4
 20966  005B56  6F68               	movwf	memcpy@n& (0+255),b
 20967  005B58  ECD5  F034         	call	_memcpy	;wreg free
 20968  005B5C                     l12912:
 20969                           
 20970                           ; BSR set to: 0
 20971                           ;lorawan.c: 2171: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.deviceAd
      +                          dress);
 20972  005B5C  0E04               	movlw	4
 20973  005B5E  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 20974                           
 20975                           ;lorawan.c: 2172: }
 20976  005B60  D010               	goto	l12918
 20977  005B62                     l12914:
 20978                           
 20979                           ; BSR set to: 0
 20980                           ;lorawan.c: 2173: else
 20981                           ;lorawan.c: 2174: {
 20982                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 20983  005B62  0EAF               	movlw	low _aesBuffer
 20984  005B64  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 20985  005B66  6F64               	movwf	memcpy@d1& (0+255),b
 20986  005B68  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 20987  005B6A  0E01               	movlw	high _aesBuffer
 20988  005B6C  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 20989  005B6E  0E62               	movlw	low (_loRa+98)
 20990  005B70  6F66               	movwf	memcpy@s1& (0+255),b
 20991  005B72  0E02               	movlw	high (_loRa+98)
 20992  005B74  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20993  005B76  6B69               	clrf	(memcpy@n+1)& (0+255),b
 20994  005B78  0E04               	movlw	4
 20995  005B7A  6F68               	movwf	memcpy@n& (0+255),b
 20996  005B7C  ECD5  F034         	call	_memcpy	;wreg free
 20997  005B80  D7ED               	goto	l12912
 20998  005B82                     l12918:
 20999                           
 21000                           ; BSR set to: 0
 21001                           ;lorawan.c: 2177: }
 21002                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 21003  005B82  0EAF               	movlw	low _aesBuffer
 21004  005B84  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21005  005B86  6F64               	movwf	memcpy@d1& (0+255),b
 21006  005B88  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 21007  005B8A  0E01               	movlw	high _aesBuffer
 21008  005B8C  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 21009  005B8E  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 21010  005B90  6F66               	movwf	memcpy@s1& (0+255),b
 21011  005B92  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 21012  005B94  6B69               	clrf	(memcpy@n+1)& (0+255),b
 21013  005B96  0E04               	movlw	4
 21014  005B98  6F68               	movwf	memcpy@n& (0+255),b
 21015  005B9A  ECD5  F034         	call	_memcpy	;wreg free
 21016                           
 21017                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 21018  005B9E  0E04               	movlw	4
 21019  005BA0  2776               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21020                           
 21021                           ; BSR set to: 0
 21022                           ;lorawan.c: 2182: bufferIndex ++;
 21023  005BA2  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 21024                           
 21025                           ; BSR set to: 0
 21026                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 21027  005BA4  0EAF               	movlw	low _aesBuffer
 21028  005BA6  2576               	addwf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 21029  005BA8  6ED9               	movwf	fsr2l,c
 21030  005BAA  6ADA               	clrf	fsr2h,c
 21031  005BAC  0E01               	movlw	high _aesBuffer
 21032  005BAE  22DA               	addwfc	fsr2h,f,c
 21033  005BB0  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 21034                           
 21035                           ; BSR set to: 0
 21036  005BB4  0012               	return		;funcret
 21037  005BB6                     __end_of_AssembleEncryptionBlock:
 21038                           	opt stack 0
 21039                           tosu	equ	0xFFF
 21040                           tosh	equ	0xFFE
 21041                           tosl	equ	0xFFD
 21042                           pclath	equ	0xFFA
 21043                           tblptru	equ	0xFF8
 21044                           tblptrh	equ	0xFF7
 21045                           tblptrl	equ	0xFF6
 21046                           tablat	equ	0xFF5
 21047                           prodh	equ	0xFF4
 21048                           prodl	equ	0xFF3
 21049                           intcon	equ	0xFF2
 21050                           intcon2	equ	0xFF1
 21051                           intcon3	equ	0xFF0
 21052                           indf0	equ	0xFEF
 21053                           postinc0	equ	0xFEE
 21054                           fsr0h	equ	0xFEA
 21055                           fsr0l	equ	0xFE9
 21056                           wreg	equ	0xFE8
 21057                           postinc1	equ	0xFE6
 21058                           postdec1	equ	0xFE5
 21059                           plusw1	equ	0xFE3
 21060                           fsr1h	equ	0xFE2
 21061                           fsr1l	equ	0xFE1
 21062                           indf2	equ	0xFDF
 21063                           postinc2	equ	0xFDE
 21064                           postdec2	equ	0xFDD
 21065                           plusw2	equ	0xFDB
 21066                           fsr2h	equ	0xFDA
 21067                           fsr2l	equ	0xFD9
 21068                           status	equ	0xFD8
 21069                           
 21070 ;; *************** function _CountfOptsLength *****************
 21071 ;; Defined at:
 21072 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21073 ;; Parameters:    Size  Location     Type
 21074 ;;		None
 21075 ;; Auto vars:     Size  Location     Type
 21076 ;;  i               1   11[BANK0 ] unsigned char 
 21077 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 21078 ;; Return value:  Size  Location     Type
 21079 ;;                  1    wreg      unsigned char 
 21080 ;; Registers used:
 21081 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 21082 ;; Tracked objects:
 21083 ;;		On entry : C/2
 21084 ;;		On exit  : F/0
 21085 ;;		Unchanged: 0/0
 21086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21087 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21088 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21089 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21090 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21091 ;;Total ram usage:        8 bytes
 21092 ;; Hardware stack levels used:    1
 21093 ;; Hardware stack levels required when called:    7
 21094 ;; This function calls:
 21095 ;;		Nothing
 21096 ;; This function is called by:
 21097 ;;		_LORAWAN_GetMaxPayloadSize
 21098 ;;		_AssemblePacket
 21099 ;; This function uses a non-reentrant model
 21100 ;;
 21101                           
 21102                           	psect	text108
 21103  005778                     __ptext108:
 21104                           	opt stack 0
 21105  005778                     _CountfOptsLength:
 21106                           	opt stack 20
 21107                           
 21108                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 21109                           
 21110                           ; BSR set to: 0
 21111                           ;incstack = 0
 21112  005778  0100               	movlb	0	; () banked
 21113  00577A  6B6A               	clrf	CountfOptsLength@macCommandLength& (0+255),b
 21114                           
 21115                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 21116  00577C  6B6B               	clrf	CountfOptsLength@i& (0+255),b
 21117  00577E  D053               	goto	l13422
 21118  005780                     l13414:
 21119                           
 21120                           ; BSR set to: 0
 21121                           ;lorawan.c: 2139: {
 21122                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 21123  005780  516B               	movf	CountfOptsLength@i& (0+255),w,b
 21124  005782  0D02               	mullw	2
 21125  005784  0EA8               	movlw	low (_loRa+168)
 21126  005786  24F3               	addwf	prodl,w,c
 21127  005788  6ED9               	movwf	fsr2l,c
 21128  00578A  0E02               	movlw	high (_loRa+168)
 21129  00578C  20F4               	addwfc	prodh,w,c
 21130  00578E  6EDA               	movwf	fsr2h,c
 21131  005790  28DE               	incf	postinc2,w,c
 21132  005792  E048               	bz	l13420
 21133                           
 21134                           ; BSR set to: 0
 21135                           ;lorawan.c: 2141: {
 21136                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 21137  005794  0EFE               	movlw	254
 21138  005796  6F64               	movwf	??_CountfOptsLength& (0+255),b
 21139  005798  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 21140  00579A  516B               	movf	CountfOptsLength@i& (0+255),w,b
 21141  00579C  0D02               	mullw	2
 21142  00579E  0EA8               	movlw	low (_loRa+168)
 21143  0057A0  24F3               	addwf	prodl,w,c
 21144  0057A2  6ED9               	movwf	fsr2l,c
 21145  0057A4  0E02               	movlw	high (_loRa+168)
 21146  0057A6  20F4               	addwfc	prodh,w,c
 21147  0057A8  6EDA               	movwf	fsr2h,c
 21148  0057AA  50DF               	movf	indf2,w,c
 21149  0057AC  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21150  0057AE  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21151  0057B0  5164               	movf	??_CountfOptsLength& (0+255),w,b
 21152  0057B2  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21153  0057B4  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21154  0057B6  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21155  0057B8  0E56               	movlw	low _macEndDevCmdReplyLen
 21156  0057BA  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21157  0057BC  6EF6               	movwf	tblptrl,c
 21158  0057BE  0EFE               	movlw	high _macEndDevCmdReplyLen
 21159  0057C0  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21160  0057C2  6EF7               	movwf	tblptrh,c
 21161  0057C4                     	if	1	;There are 3 active tblptr bytes
 21162  0057C4  6AF8               	clrf	tblptru,c
 21163  0057C6  0E00               	movlw	low (__mediumconst shr (0+16))
 21164  0057C8  22F8               	addwfc	tblptru,f,c
 21165  0057CA                     	endif
 21166  0057CA  0008               	tblrd		*
 21167  0057CC  50F5               	movf	tablat,w,c
 21168  0057CE  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 21169  0057D2  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 21170  0057D4  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 21171  0057D6  0E00               	movlw	0
 21172  0057D8  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 21173  0057DA  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 21174  0057DC  D005               	goto	l13418
 21175  0057DE  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 21176  0057E0  E127               	bnz	l13424
 21177  0057E2  0E10               	movlw	16
 21178  0057E4  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 21179  0057E6  E224               	bc	l13424
 21180  0057E8                     l13418:
 21181                           
 21182                           ; BSR set to: 0
 21183                           ;lorawan.c: 2143: {
 21184                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 21185  0057E8  0EFE               	movlw	254
 21186  0057EA  6F64               	movwf	??_CountfOptsLength& (0+255),b
 21187  0057EC  6965               	setf	(??_CountfOptsLength+1)& (0+255),b
 21188  0057EE  516B               	movf	CountfOptsLength@i& (0+255),w,b
 21189  0057F0  0D02               	mullw	2
 21190  0057F2  0EA8               	movlw	low (_loRa+168)
 21191  0057F4  24F3               	addwf	prodl,w,c
 21192  0057F6  6ED9               	movwf	fsr2l,c
 21193  0057F8  0E02               	movlw	high (_loRa+168)
 21194  0057FA  20F4               	addwfc	prodh,w,c
 21195  0057FC  6EDA               	movwf	fsr2h,c
 21196  0057FE  50DF               	movf	indf2,w,c
 21197  005800  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 21198  005802  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 21199  005804  5164               	movf	??_CountfOptsLength& (0+255),w,b
 21200  005806  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 21201  005808  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 21202  00580A  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 21203  00580C  0E56               	movlw	low _macEndDevCmdReplyLen
 21204  00580E  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 21205  005810  6EF6               	movwf	tblptrl,c
 21206  005812  0EFE               	movlw	high _macEndDevCmdReplyLen
 21207  005814  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 21208  005816  6EF7               	movwf	tblptrh,c
 21209  005818                     	if	1	;There are 3 active tblptr bytes
 21210  005818  6AF8               	clrf	tblptru,c
 21211  00581A  0E00               	movlw	low (__mediumconst shr (0+16))
 21212  00581C  22F8               	addwfc	tblptru,f,c
 21213  00581E                     	endif
 21214  00581E  0008               	tblrd		*
 21215  005820  50F5               	movf	tablat,w,c
 21216  005822  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 21217  005824                     l13420:
 21218                           
 21219                           ; BSR set to: 0
 21220  005824  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 21221  005826                     l13422:
 21222                           
 21223                           ; BSR set to: 0
 21224  005826  0102               	movlb	2	; () banked
 21225  005828  51A7               	movf	(_loRa+167)& (0+255),w,b
 21226  00582A  0100               	movlb	0	; () banked
 21227  00582C  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 21228  00582E  E3A8               	bnc	l13414
 21229  005830                     l13424:
 21230                           
 21231                           ; BSR set to: 0
 21232                           ;lorawan.c: 2149: }
 21233                           ;lorawan.c: 2150: }
 21234                           ;lorawan.c: 2151: }
 21235                           ;lorawan.c: 2153: return macCommandLength;
 21236  005830  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 21237                           
 21238                           ; BSR set to: 0
 21239  005832  0012               	return		;funcret
 21240  005834                     __end_of_CountfOptsLength:
 21241                           	opt stack 0
 21242                           tosu	equ	0xFFF
 21243                           tosh	equ	0xFFE
 21244                           tosl	equ	0xFFD
 21245                           pclath	equ	0xFFA
 21246                           tblptru	equ	0xFF8
 21247                           tblptrh	equ	0xFF7
 21248                           tblptrl	equ	0xFF6
 21249                           tablat	equ	0xFF5
 21250                           prodh	equ	0xFF4
 21251                           prodl	equ	0xFF3
 21252                           intcon	equ	0xFF2
 21253                           intcon2	equ	0xFF1
 21254                           intcon3	equ	0xFF0
 21255                           indf0	equ	0xFEF
 21256                           postinc0	equ	0xFEE
 21257                           fsr0h	equ	0xFEA
 21258                           fsr0l	equ	0xFE9
 21259                           wreg	equ	0xFE8
 21260                           postinc1	equ	0xFE6
 21261                           postdec1	equ	0xFE5
 21262                           plusw1	equ	0xFE3
 21263                           fsr1h	equ	0xFE2
 21264                           fsr1l	equ	0xFE1
 21265                           indf2	equ	0xFDF
 21266                           postinc2	equ	0xFDE
 21267                           postdec2	equ	0xFDD
 21268                           plusw2	equ	0xFDB
 21269                           fsr2h	equ	0xFDA
 21270                           fsr2l	equ	0xFD9
 21271                           status	equ	0xFD8
 21272                           
 21273 ;; *************** function _ExtractMic *****************
 21274 ;; Defined at:
 21275 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21276 ;; Parameters:    Size  Location     Type
 21277 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 21278 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21279 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 21280 ;; Auto vars:     Size  Location     Type
 21281 ;;  mic             4   20[BANK0 ] unsigned long 
 21282 ;; Return value:  Size  Location     Type
 21283 ;;                  4   14[BANK0 ] unsigned long 
 21284 ;; Registers used:
 21285 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21286 ;; Tracked objects:
 21287 ;;		On entry : F/0
 21288 ;;		On exit  : F/0
 21289 ;;		Unchanged: 0/0
 21290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21291 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21292 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21293 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21294 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21295 ;;Total ram usage:       10 bytes
 21296 ;; Hardware stack levels used:    1
 21297 ;; Hardware stack levels required when called:    8
 21298 ;; This function calls:
 21299 ;;		_memcpy
 21300 ;; This function is called by:
 21301 ;;		_LORAWAN_RxDone
 21302 ;; This function uses a non-reentrant model
 21303 ;;
 21304                           
 21305                           	psect	text109
 21306  006E7A                     __ptext109:
 21307                           	opt stack 0
 21308  006E7A                     _ExtractMic:
 21309                           	opt stack 18
 21310                           
 21311                           ; BSR set to: 0
 21312                           ;lorawan.c: 2189: uint32_t mic = 0;
 21313                           
 21314                           ; BSR set to: 0
 21315                           ;incstack = 0
 21316  006E7A  6B74               	clrf	ExtractMic@mic& (0+255),b
 21317  006E7C  6B75               	clrf	(ExtractMic@mic+1)& (0+255),b
 21318  006E7E  6B76               	clrf	(ExtractMic@mic+2)& (0+255),b
 21319  006E80  6B77               	clrf	(ExtractMic@mic+3)& (0+255),b
 21320                           
 21321                           ; BSR set to: 0
 21322                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 21323  006E82  0E74               	movlw	low ExtractMic@mic
 21324  006E84  6F64               	movwf	memcpy@d1& (0+255),b
 21325  006E86  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 21326  006E88  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 21327  006E8A  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 21328  006E8C  6F72               	movwf	??_ExtractMic& (0+255),b
 21329  006E8E  0E00               	movlw	0
 21330  006E90  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 21331  006E92  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 21332  006E94  0EFC               	movlw	252
 21333  006E96  2572               	addwf	??_ExtractMic& (0+255),w,b
 21334  006E98  6F66               	movwf	memcpy@s1& (0+255),b
 21335  006E9A  0EFF               	movlw	255
 21336  006E9C  2173               	addwfc	(??_ExtractMic+1)& (0+255),w,b
 21337  006E9E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21338  006EA0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 21339  006EA2  0E04               	movlw	4
 21340  006EA4  6F68               	movwf	memcpy@n& (0+255),b
 21341  006EA6  ECD5  F034         	call	_memcpy	;wreg free
 21342                           
 21343                           ; BSR set to: 0
 21344                           ;lorawan.c: 2191: return mic;
 21345  006EAA  C074  F06E         	movff	ExtractMic@mic,?_ExtractMic
 21346  006EAE  C075  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 21347  006EB2  C076  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 21348  006EB6  C077  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 21349                           
 21350                           ; BSR set to: 0
 21351  006EBA  0012               	return		;funcret
 21352  006EBC                     __end_of_ExtractMic:
 21353                           	opt stack 0
 21354                           tosu	equ	0xFFF
 21355                           tosh	equ	0xFFE
 21356                           tosl	equ	0xFFD
 21357                           pclath	equ	0xFFA
 21358                           tblptru	equ	0xFF8
 21359                           tblptrh	equ	0xFF7
 21360                           tblptrl	equ	0xFF6
 21361                           tablat	equ	0xFF5
 21362                           prodh	equ	0xFF4
 21363                           prodl	equ	0xFF3
 21364                           intcon	equ	0xFF2
 21365                           intcon2	equ	0xFF1
 21366                           intcon3	equ	0xFF0
 21367                           indf0	equ	0xFEF
 21368                           postinc0	equ	0xFEE
 21369                           fsr0h	equ	0xFEA
 21370                           fsr0l	equ	0xFE9
 21371                           wreg	equ	0xFE8
 21372                           postinc1	equ	0xFE6
 21373                           postdec1	equ	0xFE5
 21374                           plusw1	equ	0xFE3
 21375                           fsr1h	equ	0xFE2
 21376                           fsr1l	equ	0xFE1
 21377                           indf2	equ	0xFDF
 21378                           postinc2	equ	0xFDE
 21379                           postdec2	equ	0xFDD
 21380                           plusw2	equ	0xFDB
 21381                           fsr2h	equ	0xFDA
 21382                           fsr2l	equ	0xFD9
 21383                           status	equ	0xFD8
 21384                           
 21385 ;; *************** function _ComputeSessionKeys *****************
 21386 ;; Defined at:
 21387 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21388 ;; Parameters:    Size  Location     Type
 21389 ;;  joinAcceptBu    2   68[BANK0 ] PTR struct .
 21390 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21391 ;; Auto vars:     Size  Location     Type
 21392 ;;		None
 21393 ;; Return value:  Size  Location     Type
 21394 ;;                  1    wreg      void 
 21395 ;; Registers used:
 21396 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21397 ;; Tracked objects:
 21398 ;;		On entry : D/0
 21399 ;;		On exit  : F/0
 21400 ;;		Unchanged: 0/0
 21401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21402 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21405 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21406 ;;Total ram usage:        2 bytes
 21407 ;; Hardware stack levels used:    1
 21408 ;; Hardware stack levels required when called:   10
 21409 ;; This function calls:
 21410 ;;		_AESEncodeLoRa
 21411 ;;		_PrepareSessionKeys
 21412 ;; This function is called by:
 21413 ;;		_LORAWAN_RxDone
 21414 ;; This function uses a non-reentrant model
 21415 ;;
 21416                           
 21417                           	psect	text110
 21418  006042                     __ptext110:
 21419                           	opt stack 0
 21420  006042                     _ComputeSessionKeys:
 21421                           	opt stack 16
 21422                           
 21423                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21424                           
 21425                           ; BSR set to: 0
 21426                           ;incstack = 0
 21427  006042  0E32               	movlw	low (_loRa+50)
 21428  006044  0100               	movlb	0	; () banked
 21429  006046  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21430  006048  0E02               	movlw	high (_loRa+50)
 21431  00604A  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21432  00604C  29A4               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21433  00604E  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21434  006050  0E00               	movlw	0
 21435  006052  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21436  006054  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21437  006056  0E04               	movlw	4
 21438  006058  25A4               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21439  00605A  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21440  00605C  0E00               	movlw	0
 21441  00605E  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21442  006060  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21443  006062  EC9F  F030         	call	_PrepareSessionKeys	;wreg free
 21444                           
 21445                           ; BSR set to: 0
 21446                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 21447  006066  0E02               	movlw	2
 21448  006068  0102               	movlb	2	; () banked
 21449  00606A  6F32               	movwf	(_loRa+50)& (0+255),b
 21450                           
 21451                           ; BSR set to: 2
 21452                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 21453  00606C  0E32               	movlw	low (_loRa+50)
 21454  00606E  0100               	movlb	0	; () banked
 21455  006070  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 21456  006072  0E02               	movlw	high (_loRa+50)
 21457  006074  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21458  006076  0E42               	movlw	low (_loRa+66)
 21459  006078  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 21460  00607A  0E02               	movlw	high (_loRa+66)
 21461  00607C  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21462  00607E  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 21466  006082  0E22               	movlw	low (_loRa+34)
 21467  006084  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 21468  006086  0E02               	movlw	high (_loRa+34)
 21469  006088  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 21470  00608A  29A4               	incf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21471  00608C  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 21472  00608E  0E00               	movlw	0
 21473  006090  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21474  006092  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 21475  006094  0E04               	movlw	4
 21476  006096  25A4               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 21477  006098  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 21478  00609A  0E00               	movlw	0
 21479  00609C  21A5               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 21480  00609E  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 21481  0060A0  EC9F  F030         	call	_PrepareSessionKeys	;wreg free
 21482                           
 21483                           ; BSR set to: 0
 21484                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 21485  0060A4  0E01               	movlw	1
 21486  0060A6  0102               	movlb	2	; () banked
 21487  0060A8  6F22               	movwf	(_loRa+34)& (0+255),b
 21488                           
 21489                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 21490  0060AA  0E22               	movlw	low (_loRa+34)
 21491  0060AC  0100               	movlb	0	; () banked
 21492  0060AE  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 21493  0060B0  0E02               	movlw	high (_loRa+34)
 21494  0060B2  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 21495  0060B4  0E42               	movlw	low (_loRa+66)
 21496  0060B6  6F92               	movwf	AESEncodeLoRa@key& (0+255),b
 21497  0060B8  0E02               	movlw	high (_loRa+66)
 21498  0060BA  6F93               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 21499  0060BC  EF1A  F03A         	goto	_AESEncodeLoRa	;wreg free
 21500  0060C0                     __end_of_ComputeSessionKeys:
 21501                           	opt stack 0
 21502                           tosu	equ	0xFFF
 21503                           tosh	equ	0xFFE
 21504                           tosl	equ	0xFFD
 21505                           pclath	equ	0xFFA
 21506                           tblptru	equ	0xFF8
 21507                           tblptrh	equ	0xFF7
 21508                           tblptrl	equ	0xFF6
 21509                           tablat	equ	0xFF5
 21510                           prodh	equ	0xFF4
 21511                           prodl	equ	0xFF3
 21512                           intcon	equ	0xFF2
 21513                           intcon2	equ	0xFF1
 21514                           intcon3	equ	0xFF0
 21515                           indf0	equ	0xFEF
 21516                           postinc0	equ	0xFEE
 21517                           fsr0h	equ	0xFEA
 21518                           fsr0l	equ	0xFE9
 21519                           wreg	equ	0xFE8
 21520                           postinc1	equ	0xFE6
 21521                           postdec1	equ	0xFE5
 21522                           plusw1	equ	0xFE3
 21523                           fsr1h	equ	0xFE2
 21524                           fsr1l	equ	0xFE1
 21525                           indf2	equ	0xFDF
 21526                           postinc2	equ	0xFDE
 21527                           postdec2	equ	0xFDD
 21528                           plusw2	equ	0xFDB
 21529                           fsr2h	equ	0xFDA
 21530                           fsr2l	equ	0xFD9
 21531                           status	equ	0xFD8
 21532                           
 21533 ;; *************** function _PrepareSessionKeys *****************
 21534 ;; Defined at:
 21535 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21536 ;; Parameters:    Size  Location     Type
 21537 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 21538 ;;		 -> loRa.activationParameters(105), loRa(245), 
 21539 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 21540 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21541 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 21542 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21543 ;; Auto vars:     Size  Location     Type
 21544 ;;  index           1   20[BANK0 ] unsigned char 
 21545 ;; Return value:  Size  Location     Type
 21546 ;;                  1    wreg      void 
 21547 ;; Registers used:
 21548 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21549 ;; Tracked objects:
 21550 ;;		On entry : F/0
 21551 ;;		On exit  : F/0
 21552 ;;		Unchanged: 0/0
 21553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21554 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21555 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21557 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21558 ;;Total ram usage:        7 bytes
 21559 ;; Hardware stack levels used:    1
 21560 ;; Hardware stack levels required when called:    8
 21561 ;; This function calls:
 21562 ;;		_memcpy
 21563 ;;		_memset
 21564 ;; This function is called by:
 21565 ;;		_ComputeSessionKeys
 21566 ;; This function uses a non-reentrant model
 21567 ;;
 21568                           
 21569                           	psect	text111
 21570  00613E                     __ptext111:
 21571                           	opt stack 0
 21572  00613E                     _PrepareSessionKeys:
 21573                           	opt stack 17
 21574                           
 21575                           ; BSR set to: 0
 21576                           ;lorawan.c: 2047: uint8_t index = 0;
 21577                           
 21578                           ; BSR set to: 0
 21579                           ;incstack = 0
 21580  00613E  6B74               	clrf	PrepareSessionKeys@index& (0+255),b
 21581                           
 21582                           ; BSR set to: 0
 21583                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 21584  006140  C06E  F064         	movff	PrepareSessionKeys@sessionKey,memset@p1
 21585  006144  C06F  F065         	movff	PrepareSessionKeys@sessionKey+1,memset@p1+1
 21586  006148  6B67               	clrf	(memset@c+1)& (0+255),b
 21587  00614A  6B66               	clrf	memset@c& (0+255),b
 21588  00614C  6B69               	clrf	(memset@n+1)& (0+255),b
 21589  00614E  0E10               	movlw	16
 21590  006150  6F68               	movwf	memset@n& (0+255),b
 21591  006152  ECF1  F039         	call	_memset	;wreg free
 21592                           
 21593                           ; BSR set to: 0
 21594                           ;lorawan.c: 2050: index ++;
 21595  006156  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 21596                           
 21597                           ; BSR set to: 0
 21598                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 21599  006158  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 21600  00615A  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21601  00615C  6F64               	movwf	memcpy@d1& (0+255),b
 21602  00615E  0E00               	movlw	0
 21603  006160  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21604  006162  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21605  006164  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 21606  006168  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 21607  00616C  6B69               	clrf	(memcpy@n+1)& (0+255),b
 21608  00616E  0E03               	movlw	3
 21609  006170  6F68               	movwf	memcpy@n& (0+255),b
 21610  006172  ECD5  F034         	call	_memcpy	;wreg free
 21611                           
 21612                           ; BSR set to: 0
 21613                           ;lorawan.c: 2053: index = index + 3;
 21614  006176  0E03               	movlw	3
 21615  006178  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 21616                           
 21617                           ; BSR set to: 0
 21618                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 21619  00617A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 21620  00617C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21621  00617E  6F64               	movwf	memcpy@d1& (0+255),b
 21622  006180  0E00               	movlw	0
 21623  006182  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21624  006184  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21625  006186  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 21626  00618A  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 21627  00618E  6B69               	clrf	(memcpy@n+1)& (0+255),b
 21628  006190  0E03               	movlw	3
 21629  006192  6F68               	movwf	memcpy@n& (0+255),b
 21630  006194  ECD5  F034         	call	_memcpy	;wreg free
 21631                           
 21632                           ; BSR set to: 0
 21633                           ;lorawan.c: 2056: index = index + 3;
 21634  006198  0E03               	movlw	3
 21635  00619A  2774               	addwf	PrepareSessionKeys@index& (0+255),f,b
 21636                           
 21637                           ; BSR set to: 0
 21638                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 21639  00619C  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 21640  00619E  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 21641  0061A0  6F64               	movwf	memcpy@d1& (0+255),b
 21642  0061A2  0E00               	movlw	0
 21643  0061A4  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 21644  0061A6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21645  0061A8  0ED2               	movlw	low (_loRa+210)
 21646  0061AA  6F66               	movwf	memcpy@s1& (0+255),b
 21647  0061AC  0E02               	movlw	high (_loRa+210)
 21648  0061AE  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21649  0061B0  6B69               	clrf	(memcpy@n+1)& (0+255),b
 21650  0061B2  0E02               	movlw	2
 21651  0061B4  6F68               	movwf	memcpy@n& (0+255),b
 21652  0061B6  EFD5  F034         	goto	_memcpy	;wreg free
 21653  0061BA                     __end_of_PrepareSessionKeys:
 21654                           	opt stack 0
 21655                           tosu	equ	0xFFF
 21656                           tosh	equ	0xFFE
 21657                           tosl	equ	0xFFD
 21658                           pclath	equ	0xFFA
 21659                           tblptru	equ	0xFF8
 21660                           tblptrh	equ	0xFF7
 21661                           tblptrl	equ	0xFF6
 21662                           tablat	equ	0xFF5
 21663                           prodh	equ	0xFF4
 21664                           prodl	equ	0xFF3
 21665                           intcon	equ	0xFF2
 21666                           intcon2	equ	0xFF1
 21667                           intcon3	equ	0xFF0
 21668                           indf0	equ	0xFEF
 21669                           postinc0	equ	0xFEE
 21670                           fsr0h	equ	0xFEA
 21671                           fsr0l	equ	0xFE9
 21672                           wreg	equ	0xFE8
 21673                           postinc1	equ	0xFE6
 21674                           postdec1	equ	0xFE5
 21675                           plusw1	equ	0xFE3
 21676                           fsr1h	equ	0xFE2
 21677                           fsr1l	equ	0xFE1
 21678                           indf2	equ	0xFDF
 21679                           postinc2	equ	0xFDE
 21680                           postdec2	equ	0xFDD
 21681                           plusw2	equ	0xFDB
 21682                           fsr2h	equ	0xFDA
 21683                           fsr2l	equ	0xFD9
 21684                           status	equ	0xFD8
 21685                           
 21686 ;; *************** function _CheckMcastFlags *****************
 21687 ;; Defined at:
 21688 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21689 ;; Parameters:    Size  Location     Type
 21690 ;;  hdr             2    4[BANK0 ] PTR struct .
 21691 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21692 ;; Auto vars:     Size  Location     Type
 21693 ;;		None
 21694 ;; Return value:  Size  Location     Type
 21695 ;;                  1    wreg      unsigned char 
 21696 ;; Registers used:
 21697 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21698 ;; Tracked objects:
 21699 ;;		On entry : F/2
 21700 ;;		On exit  : D/0
 21701 ;;		Unchanged: 0/0
 21702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21703 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21706 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21707 ;;Total ram usage:        2 bytes
 21708 ;; Hardware stack levels used:    1
 21709 ;; Hardware stack levels required when called:    7
 21710 ;; This function calls:
 21711 ;;		Nothing
 21712 ;; This function is called by:
 21713 ;;		_LORAWAN_RxDone
 21714 ;; This function uses a non-reentrant model
 21715 ;;
 21716                           
 21717                           	psect	text112
 21718  0062AC                     __ptext112:
 21719                           	opt stack 0
 21720  0062AC                     _CheckMcastFlags:
 21721                           	opt stack 19
 21722                           
 21723                           ; BSR set to: 2
 21724                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 21725                           
 21726                           ; BSR set to: 0
 21727                           ;incstack = 0
 21728  0062AC  0100               	movlb	0	; () banked
 21729  0062AE  EE20 F005          	lfsr	2,5
 21730  0062B2  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21731  0062B4  26D9               	addwf	fsr2l,f,c
 21732  0062B6  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21733  0062B8  22DA               	addwfc	fsr2h,f,c
 21734  0062BA  BADF               	btfsc	indf2,5,c
 21735  0062BC  0C00               	retlw	0
 21736                           
 21737                           ; BSR set to: 0
 21738  0062BE  EE20 F005          	lfsr	2,5
 21739  0062C2  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21740  0062C4  26D9               	addwf	fsr2l,f,c
 21741  0062C6  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21742  0062C8  22DA               	addwfc	fsr2h,f,c
 21743  0062CA  BCDF               	btfsc	indf2,6,c
 21744  0062CC  0C00               	retlw	0
 21745                           
 21746                           ; BSR set to: 0
 21747  0062CE  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 21748  0062D2  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 21749  0062D6  38DF               	swapf	223,w,c
 21750  0062D8  32E8               	rrcf	wreg,f,c
 21751  0062DA  0B07               	andlw	7
 21752  0062DC  0A03               	xorlw	3
 21753  0062DE  E001               	bz	l14272
 21754                           
 21755                           ; BSR set to: 0
 21756                           ;lorawan.c: 2110: {
 21757                           ;lorawan.c: 2111: return 0;
 21758  0062E0  0C00               	retlw	0
 21759  0062E2                     l14272:
 21760                           
 21761                           ; BSR set to: 0
 21762                           ;lorawan.c: 2112: }
 21763                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 21764  0062E2  EE20 F005          	lfsr	2,5
 21765  0062E6  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21766  0062E8  26D9               	addwf	fsr2l,f,c
 21767  0062EA  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21768  0062EC  22DA               	addwfc	fsr2h,f,c
 21769  0062EE  50DF               	movf	223,w,c
 21770  0062F0  0B0F               	andlw	15
 21771  0062F2  E001               	bz	l14280
 21772  0062F4  0C00               	retlw	0
 21773  0062F6                     l14280:
 21774                           
 21775                           ; BSR set to: 0
 21776                           ;lorawan.c: 2118: else
 21777                           ;lorawan.c: 2119: {
 21778                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 21779  0062F6  EE20 F008          	lfsr	2,8
 21780  0062FA  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21781  0062FC  26D9               	addwf	fsr2l,f,c
 21782  0062FE  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21783  006300  22DA               	addwfc	fsr2h,f,c
 21784  006302  50DF               	movf	indf2,w,c
 21785  006304  E101               	bnz	l14286
 21786  006306  0C00               	retlw	0
 21787  006308                     l14286:
 21788                           
 21789                           ; BSR set to: 0
 21790                           ;lorawan.c: 2123: }
 21791                           ;lorawan.c: 2124: }
 21792                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 21793  006308  EE20 F005          	lfsr	2,5
 21794  00630C  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 21795  00630E  26D9               	addwf	fsr2l,f,c
 21796  006310  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 21797  006312  22DA               	addwfc	fsr2h,f,c
 21798  006314  A8DF               	btfss	indf2,4,c
 21799  006316  0C01               	retlw	1
 21800                           
 21801                           ; BSR set to: 0
 21802                           ;lorawan.c: 2127: {
 21803                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 21804  006318  0102               	movlb	2	; () banked
 21805  00631A  8700               	bsf	_loRa& (0+255),3,b
 21806                           
 21807                           ;lorawan.c: 2129: }
 21808                           ;lorawan.c: 2131: return 1;
 21809  00631C  0C01               	retlw	1	;funcret
 21810  00631E                     __end_of_CheckMcastFlags:
 21811                           	opt stack 0
 21812                           tosu	equ	0xFFF
 21813                           tosh	equ	0xFFE
 21814                           tosl	equ	0xFFD
 21815                           pclath	equ	0xFFA
 21816                           tblptru	equ	0xFF8
 21817                           tblptrh	equ	0xFF7
 21818                           tblptrl	equ	0xFF6
 21819                           tablat	equ	0xFF5
 21820                           prodh	equ	0xFF4
 21821                           prodl	equ	0xFF3
 21822                           intcon	equ	0xFF2
 21823                           intcon2	equ	0xFF1
 21824                           intcon3	equ	0xFF0
 21825                           indf0	equ	0xFEF
 21826                           postinc0	equ	0xFEE
 21827                           fsr0h	equ	0xFEA
 21828                           fsr0l	equ	0xFE9
 21829                           wreg	equ	0xFE8
 21830                           postinc1	equ	0xFE6
 21831                           postdec1	equ	0xFE5
 21832                           plusw1	equ	0xFE3
 21833                           fsr1h	equ	0xFE2
 21834                           fsr1l	equ	0xFE1
 21835                           indf2	equ	0xFDF
 21836                           postinc2	equ	0xFDE
 21837                           postdec2	equ	0xFDD
 21838                           plusw2	equ	0xFDB
 21839                           fsr2h	equ	0xFDA
 21840                           fsr2l	equ	0xFD9
 21841                           status	equ	0xFD8
 21842                           
 21843 ;; *************** function _CheckFlags *****************
 21844 ;; Defined at:
 21845 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21846 ;; Parameters:    Size  Location     Type
 21847 ;;  hdr             2    4[BANK0 ] PTR struct .
 21848 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 21849 ;; Auto vars:     Size  Location     Type
 21850 ;;		None
 21851 ;; Return value:  Size  Location     Type
 21852 ;;                  1    wreg      void 
 21853 ;; Registers used:
 21854 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 21855 ;; Tracked objects:
 21856 ;;		On entry : F/2
 21857 ;;		On exit  : D/0
 21858 ;;		Unchanged: 0/0
 21859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21860 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21861 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21863 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21864 ;;Total ram usage:        2 bytes
 21865 ;; Hardware stack levels used:    1
 21866 ;; Hardware stack levels required when called:    7
 21867 ;; This function calls:
 21868 ;;		Nothing
 21869 ;; This function is called by:
 21870 ;;		_LORAWAN_RxDone
 21871 ;; This function uses a non-reentrant model
 21872 ;;
 21873                           
 21874                           	psect	text113
 21875  0067E2                     __ptext113:
 21876                           	opt stack 0
 21877  0067E2                     _CheckFlags:
 21878                           	opt stack 19
 21879                           
 21880                           ; BSR set to: 2
 21881                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 21882                           
 21883                           ;incstack = 0
 21884  0067E2  0100               	movlb	0	; () banked
 21885  0067E4  EE20 F005          	lfsr	2,5
 21886  0067E8  5164               	movf	CheckFlags@hdr& (0+255),w,b
 21887  0067EA  26D9               	addwf	fsr2l,f,c
 21888  0067EC  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21889  0067EE  22DA               	addwfc	fsr2h,f,c
 21890  0067F0  AEDF               	btfss	indf2,7,c
 21891  0067F2  D002               	goto	l14320
 21892                           
 21893                           ; BSR set to: 0
 21894                           ;lorawan.c: 2077: {
 21895                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 21896  0067F4  0102               	movlb	2	; () banked
 21897  0067F6  8D02               	bsf	(_loRa+2)& (0+255),6,b
 21898  0067F8                     l14320:
 21899                           
 21900                           ;lorawan.c: 2079: }
 21901                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 21902  0067F8  0100               	movlb	0	; () banked
 21903  0067FA  EE20 F005          	lfsr	2,5
 21904  0067FE  5164               	movf	CheckFlags@hdr& (0+255),w,b
 21905  006800  26D9               	addwf	fsr2l,f,c
 21906  006802  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21907  006804  22DA               	addwfc	fsr2h,f,c
 21908  006806  A8DF               	btfss	indf2,4,c
 21909  006808  D002               	goto	l14324
 21910                           
 21911                           ; BSR set to: 0
 21912                           ;lorawan.c: 2082: {
 21913                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 21914  00680A  0102               	movlb	2	; () banked
 21915  00680C  8700               	bsf	_loRa& (0+255),3,b
 21916  00680E                     l14324:
 21917                           
 21918                           ;lorawan.c: 2084: }
 21919                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 21920  00680E  0100               	movlb	0	; () banked
 21921  006810  EE20 F005          	lfsr	2,5
 21922  006814  5164               	movf	CheckFlags@hdr& (0+255),w,b
 21923  006816  26D9               	addwf	fsr2l,f,c
 21924  006818  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 21925  00681A  22DA               	addwfc	fsr2h,f,c
 21926  00681C  ACDF               	btfss	indf2,6,c
 21927  00681E  D002               	goto	l14328
 21928                           
 21929                           ; BSR set to: 0
 21930                           ;lorawan.c: 2087: {
 21931                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 21932  006820  0102               	movlb	2	; () banked
 21933  006822  8900               	bsf	_loRa& (0+255),4,b
 21934  006824                     l14328:
 21935                           
 21936                           ;lorawan.c: 2089: }
 21937                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 21938  006824  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 21939  006828  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 21940  00682C  0100               	movlb	0	; () banked
 21941  00682E  38DF               	swapf	223,w,c
 21942  006830  32E8               	rrcf	wreg,f,c
 21943  006832  0B07               	andlw	7
 21944  006834  0A05               	xorlw	5
 21945  006836  A4D8               	btfss	status,2,c
 21946  006838  0012               	return	
 21947                           
 21948                           ; BSR set to: 0
 21949                           ;lorawan.c: 2092: {
 21950                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 21951  00683A  0102               	movlb	2	; () banked
 21952  00683C  8300               	bsf	_loRa& (0+255),1,b
 21953  00683E  0012               	return		;funcret
 21954  006840                     __end_of_CheckFlags:
 21955                           	opt stack 0
 21956                           tosu	equ	0xFFF
 21957                           tosh	equ	0xFFE
 21958                           tosl	equ	0xFFD
 21959                           pclath	equ	0xFFA
 21960                           tblptru	equ	0xFF8
 21961                           tblptrh	equ	0xFF7
 21962                           tblptrl	equ	0xFF6
 21963                           tablat	equ	0xFF5
 21964                           prodh	equ	0xFF4
 21965                           prodl	equ	0xFF3
 21966                           intcon	equ	0xFF2
 21967                           intcon2	equ	0xFF1
 21968                           intcon3	equ	0xFF0
 21969                           indf0	equ	0xFEF
 21970                           postinc0	equ	0xFEE
 21971                           fsr0h	equ	0xFEA
 21972                           fsr0l	equ	0xFE9
 21973                           wreg	equ	0xFE8
 21974                           postinc1	equ	0xFE6
 21975                           postdec1	equ	0xFE5
 21976                           plusw1	equ	0xFE3
 21977                           fsr1h	equ	0xFE2
 21978                           fsr1l	equ	0xFE1
 21979                           indf2	equ	0xFDF
 21980                           postinc2	equ	0xFDE
 21981                           postdec2	equ	0xFDD
 21982                           plusw2	equ	0xFDB
 21983                           fsr2h	equ	0xFDA
 21984                           fsr2l	equ	0xFD9
 21985                           status	equ	0xFD8
 21986                           
 21987 ;; *************** function _RADIO_FSKPacketSent *****************
 21988 ;; Defined at:
 21989 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 21990 ;; Parameters:    Size  Location     Type
 21991 ;;		None
 21992 ;; Auto vars:     Size  Location     Type
 21993 ;;  timeOnAir       4  118[BANK0 ] unsigned long 
 21994 ;;  irqFlags        1  126[BANK0 ] unsigned char 
 21995 ;; Return value:  Size  Location     Type
 21996 ;;                  1    wreg      void 
 21997 ;; Registers used:
 21998 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21999 ;; Tracked objects:
 22000 ;;		On entry : F/0
 22001 ;;		On exit  : C/0
 22002 ;;		Unchanged: 0/0
 22003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22005 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22006 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22007 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22008 ;;Total ram usage:       13 bytes
 22009 ;; Hardware stack levels used:    1
 22010 ;; Hardware stack levels required when called:   15
 22011 ;; This function calls:
 22012 ;;		_LORAWAN_TxDone
 22013 ;;		_RADIO_RegisterRead
 22014 ;;		_RADIO_WriteMode
 22015 ;;		_SwTimerReadValue
 22016 ;;		_SwTimerStop
 22017 ;; This function is called by:
 22018 ;;		_RADIO_DIO0
 22019 ;; This function uses a non-reentrant model
 22020 ;;
 22021                           
 22022                           	psect	text114
 22023  003A5C                     __ptext114:
 22024                           	opt stack 0
 22025  003A5C                     _RADIO_FSKPacketSent:
 22026                           	opt stack 13
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 22030                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 22031                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 22032                           
 22033                           ;incstack = 0
 22034  003A5C  0E3F               	movlw	63
 22035  003A5E  EC41  F03A         	call	_RADIO_RegisterRead
 22036  003A62  6FDE               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 22037                           
 22038                           ; BSR set to: 0
 22039                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 22040  003A64  A7DE               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 22041  003A66  0012               	return	
 22042                           
 22043                           ; BSR set to: 0
 22044                           ;radio_driver_SX1276.c: 1100: {
 22045                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 22046  003A68  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 22047  003A6C  0E00               	movlw	0
 22048  003A6E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 22049  003A70  ECB9  F029         	call	_RADIO_WriteMode
 22050                           
 22051                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 22052  003A74  0101               	movlb	1	; () banked
 22053  003A76  919C               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 22054                           
 22055                           ; BSR set to: 1
 22056                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 22057  003A78  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 22058  003A7A  EC6A  F03B         	call	_SwTimerStop
 22059                           
 22060                           ; BSR set to: 0
 22061                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 22062  003A7E  0101               	movlb	1	; () banked
 22063  003A80  B99C               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 22064  003A82  0012               	return	
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;radio_driver_SX1276.c: 1107: {
 22068                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 22069  003A84  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22070  003A86  EC7F  F037         	call	_SwTimerReadValue
 22071  003A8A  5190               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 22072  003A8C  E107               	bnz	u17560
 22073  003A8E  0E1F               	movlw	31
 22074  003A90  5D8D               	subwf	?_SwTimerReadValue& (0+255),w,b
 22075  003A92  0EAC               	movlw	172
 22076  003A94  598E               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 22077  003A96  0EDF               	movlw	223
 22078  003A98  598F               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 22079  003A9A  E346               	bnc	l15146
 22080  003A9C                     u17560:
 22081                           
 22082                           ; BSR set to: 0
 22083  003A9C  0101               	movlb	1	; () banked
 22084  003A9E  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22085  003AA0  EC7F  F037         	call	_SwTimerReadValue
 22086  003AA4  0E0D               	movlw	13
 22087  003AA6  D005               	goto	u17570
 22088  003AA8                     u17575:
 22089  003AA8  90D8               	bcf	status,0,c
 22090  003AAA  3390               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 22091  003AAC  338F               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 22092  003AAE  338E               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 22093  003AB0  338D               	rrcf	?_SwTimerReadValue& (0+255),f,b
 22094  003AB2                     u17570:
 22095  003AB2  2EE8               	decfsz	wreg,f,c
 22096  003AB4  D7F9               	goto	u17575
 22097  003AB6  0E7D               	movlw	125
 22098  003AB8  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22099  003ABA  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 22100  003ABE  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 22101  003AC2  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 22102  003AC4  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 22103  003AC6  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22104  003AC8  50F3               	movf	prodl,w,c
 22105  003ACA  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22106  003ACC  50F4               	movf	prodh,w,c
 22107  003ACE  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22108  003AD0  0E00               	movlw	0
 22109  003AD2  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22110  003AD4  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22111  003AD6  50F3               	movf	prodl,w,c
 22112  003AD8  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22113  003ADA  50F4               	movf	prodh,w,c
 22114  003ADC  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22115  003ADE  0E00               	movlw	0
 22116  003AE0  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22117  003AE2  0E7D               	movlw	125
 22118  003AE4  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 22119  003AE6  50F3               	movf	prodl,w,c
 22120  003AE8  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22121  003AEA  50F4               	movf	prodh,w,c
 22122  003AEC  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22123  003AEE  0E00               	movlw	0
 22124  003AF0  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22125  003AF2  50F3               	movf	prodl,w,c
 22126  003AF4  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22127  003AF6  50F4               	movf	prodh,w,c
 22128  003AF8  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22129  003AFA  0E00               	movlw	0
 22130  003AFC  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22131  003AFE  50F3               	movf	prodl,w,c
 22132  003B00  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22133  003B02  50F4               	movf	prodh,w,c
 22134  003B04  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22135  003B06  0E7D               	movlw	125
 22136  003B08  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 22137  003B0A  50F3               	movf	prodl,w,c
 22138  003B0C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22139  003B0E  0E00               	movlw	0
 22140  003B10  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 22141  003B12  50F3               	movf	prodl,w,c
 22142  003B14  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22143  003B16  0E00               	movlw	0
 22144  003B18  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22145  003B1A  50F3               	movf	prodl,w,c
 22146  003B1C  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22147  003B1E  0E00               	movlw	0
 22148  003B20  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22149  003B22  50F3               	movf	prodl,w,c
 22150  003B24  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22151  003B26  D045               	goto	L11
 22152  003B28                     l15146:
 22153                           
 22154                           ; BSR set to: 0
 22155  003B28  0101               	movlb	1	; () banked
 22156  003B2A  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22157  003B2C  EC7F  F037         	call	_SwTimerReadValue
 22158  003B30  0E7D               	movlw	125
 22159  003B32  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22160  003B34  CFF3 F0D2          	movff	prodl,??_RADIO_FSKPacketSent
 22161  003B38  CFF4 F0D3          	movff	prodh,??_RADIO_FSKPacketSent+1
 22162  003B3C  6BD4               	clrf	(??_RADIO_FSKPacketSent+2)& (0+255),b
 22163  003B3E  6BD5               	clrf	(??_RADIO_FSKPacketSent+3)& (0+255),b
 22164  003B40  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22165  003B42  50F3               	movf	prodl,w,c
 22166  003B44  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22167  003B46  50F4               	movf	prodh,w,c
 22168  003B48  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22169  003B4A  0E00               	movlw	0
 22170  003B4C  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22171  003B4E  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22172  003B50  50F3               	movf	prodl,w,c
 22173  003B52  27D3               	addwf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22174  003B54  50F4               	movf	prodh,w,c
 22175  003B56  23D4               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22176  003B58  0E00               	movlw	0
 22177  003B5A  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22178  003B5C  0E7D               	movlw	125
 22179  003B5E  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 22180  003B60  50F3               	movf	prodl,w,c
 22181  003B62  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22182  003B64  50F4               	movf	prodh,w,c
 22183  003B66  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22184  003B68  0E00               	movlw	0
 22185  003B6A  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22186  003B6C  50F3               	movf	prodl,w,c
 22187  003B6E  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22188  003B70  50F4               	movf	prodh,w,c
 22189  003B72  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22190  003B74  0E00               	movlw	0
 22191  003B76  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22192  003B78  50F3               	movf	prodl,w,c
 22193  003B7A  27D4               	addwf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22194  003B7C  50F4               	movf	prodh,w,c
 22195  003B7E  23D5               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22196  003B80  0E7D               	movlw	125
 22197  003B82  0390               	mulwf	(?_SwTimerReadValue+3)& (0+255),b
 22198  003B84  50F3               	movf	prodl,w,c
 22199  003B86  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22200  003B88  0E00               	movlw	0
 22201  003B8A  038F               	mulwf	(?_SwTimerReadValue+2)& (0+255),b
 22202  003B8C  50F3               	movf	prodl,w,c
 22203  003B8E  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22204  003B90  0E00               	movlw	0
 22205  003B92  038E               	mulwf	(?_SwTimerReadValue+1)& (0+255),b
 22206  003B94  50F3               	movf	prodl,w,c
 22207  003B96  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22208  003B98  0E00               	movlw	0
 22209  003B9A  038D               	mulwf	?_SwTimerReadValue& (0+255),b
 22210  003B9C  50F3               	movf	prodl,w,c
 22211  003B9E  27D5               	addwf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22212  003BA0  0E0D               	movlw	13
 22213  003BA2  D005               	goto	u17580
 22214  003BA4                     u17585:
 22215  003BA4  90D8               	bcf	status,0,c
 22216  003BA6  33D5               	rrcf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 22217  003BA8  33D4               	rrcf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 22218  003BAA  33D3               	rrcf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 22219  003BAC  33D2               	rrcf	??_RADIO_FSKPacketSent& (0+255),f,b
 22220  003BAE                     u17580:
 22221  003BAE  2EE8               	decfsz	wreg,f,c
 22222  003BB0  D7F9               	goto	u17585
 22223  003BB2                     L11:
 22224  003BB2  C0D2  F0DA         	movff	??_RADIO_FSKPacketSent,_RADIO_FSKPacketSent$1219
 22225  003BB6  C0D3  F0DB         	movff	??_RADIO_FSKPacketSent+1,_RADIO_FSKPacketSent$1219+1
 22226  003BBA  C0D4  F0DC         	movff	??_RADIO_FSKPacketSent+2,_RADIO_FSKPacketSent$1219+2
 22227  003BBE  C0D5  F0DD         	movff	??_RADIO_FSKPacketSent+3,_RADIO_FSKPacketSent$1219+3
 22228                           
 22229                           ; BSR set to: 0
 22230  003BC2  51DA               	movf	_RADIO_FSKPacketSent$1219& (0+255),w,b
 22231  003BC4  0820               	sublw	32
 22232  003BC6  6FD6               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 22233  003BC8  0E4E               	movlw	78
 22234  003BCA  55DB               	subfwb	(_RADIO_FSKPacketSent$1219+1)& (0+255),w,b
 22235  003BCC  6FD7               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 22236  003BCE  0E00               	movlw	0
 22237  003BD0  55DC               	subfwb	(_RADIO_FSKPacketSent$1219+2)& (0+255),w,b
 22238  003BD2  6FD8               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 22239  003BD4  0E00               	movlw	0
 22240  003BD6  55DD               	subfwb	(_RADIO_FSKPacketSent$1219+3)& (0+255),w,b
 22241  003BD8  6FD9               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 22245  003BDA  0101               	movlb	1	; () banked
 22246  003BDC  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 22247  003BDE  EC6A  F03B         	call	_SwTimerStop
 22248                           
 22249                           ; BSR set to: 0
 22250                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 22251  003BE2  C0D6  F0A0         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 22252  003BE6  C0D7  F0A1         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 22253  003BEA  EF8C  F005         	goto	_LORAWAN_TxDone	;wreg free
 22254  003BEE                     __end_of_RADIO_FSKPacketSent:
 22255                           	opt stack 0
 22256                           tosu	equ	0xFFF
 22257                           tosh	equ	0xFFE
 22258                           tosl	equ	0xFFD
 22259                           pclath	equ	0xFFA
 22260                           tblptru	equ	0xFF8
 22261                           tblptrh	equ	0xFF7
 22262                           tblptrl	equ	0xFF6
 22263                           tablat	equ	0xFF5
 22264                           prodh	equ	0xFF4
 22265                           prodl	equ	0xFF3
 22266                           intcon	equ	0xFF2
 22267                           intcon2	equ	0xFF1
 22268                           intcon3	equ	0xFF0
 22269                           indf0	equ	0xFEF
 22270                           postinc0	equ	0xFEE
 22271                           fsr0h	equ	0xFEA
 22272                           fsr0l	equ	0xFE9
 22273                           wreg	equ	0xFE8
 22274                           postinc1	equ	0xFE6
 22275                           postdec1	equ	0xFE5
 22276                           plusw1	equ	0xFE3
 22277                           fsr1h	equ	0xFE2
 22278                           fsr1l	equ	0xFE1
 22279                           indf2	equ	0xFDF
 22280                           postinc2	equ	0xFDE
 22281                           postdec2	equ	0xFDD
 22282                           plusw2	equ	0xFDB
 22283                           fsr2h	equ	0xFDA
 22284                           fsr2l	equ	0xFD9
 22285                           status	equ	0xFD8
 22286                           
 22287 ;; *************** function _LORAWAN_TxDone *****************
 22288 ;; Defined at:
 22289 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 22290 ;; Parameters:    Size  Location     Type
 22291 ;;  timeOnAir       2   64[BANK0 ] unsigned int 
 22292 ;; Auto vars:     Size  Location     Type
 22293 ;;  minim           4  109[BANK0 ] unsigned long 
 22294 ;;  ticks           4  105[BANK0 ] unsigned long 
 22295 ;;  delta           4  101[BANK0 ] unsigned long 
 22296 ;;  i               1  113[BANK0 ] unsigned char 
 22297 ;;  found           1  100[BANK0 ] unsigned char 
 22298 ;; Return value:  Size  Location     Type
 22299 ;;                  1    wreg      void 
 22300 ;; Registers used:
 22301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22302 ;; Tracked objects:
 22303 ;;		On entry : E/1
 22304 ;;		On exit  : C/0
 22305 ;;		Unchanged: 0/0
 22306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22307 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22308 ;;      Locals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22309 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22310 ;;      Totals:         0      50       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22311 ;;Total ram usage:       50 bytes
 22312 ;; Hardware stack levels used:    1
 22313 ;; Hardware stack levels required when called:   14
 22314 ;; This function calls:
 22315 ;;		_LORAWAN_EnterContinuousReceive
 22316 ;;		_RADIO_GetStatus
 22317 ;;		_RxDataDone
 22318 ;;		_SwTimerIsRunning
 22319 ;;		_SwTimerReadValue
 22320 ;;		_SwTimerSetTimeout
 22321 ;;		_SwTimerStart
 22322 ;;		_SwTimerStop
 22323 ;;		___lldiv
 22324 ;; This function is called by:
 22325 ;;		_RADIO_TxDone
 22326 ;;		_RADIO_FSKPacketSent
 22327 ;;		_RADIO_WatchdogTimeout
 22328 ;; This function uses a non-reentrant model
 22329 ;;
 22330                           
 22331                           	psect	text115
 22332  000B18                     __ptext115:
 22333                           	opt stack 0
 22334  000B18                     _LORAWAN_TxDone:
 22335                           	opt stack 13
 22336                           
 22337                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 22338                           
 22339                           ;incstack = 0
 22340  000B18  0102               	movlb	2	; () banked
 22341  000B1A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 22342  000B1C  EFAA  F009         	goto	l14954
 22343                           
 22344                           ; BSR set to: 2
 22345                           ;lorawan_eu.c: 368: {
 22346                           ;lorawan_eu.c: 369: bool found = 0;
 22347  000B20  0100               	movlb	0	; () banked
 22348  000B22  6BC4               	clrf	LORAWAN_TxDone@found& (0+255),b
 22349                           
 22350                           ;lorawan_eu.c: 370: uint8_t i;
 22351                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 22352  000B24  6BC5               	clrf	LORAWAN_TxDone@delta& (0+255),b
 22353  000B26  6BC6               	clrf	(LORAWAN_TxDone@delta+1)& (0+255),b
 22354  000B28  6BC7               	clrf	(LORAWAN_TxDone@delta+2)& (0+255),b
 22355  000B2A  6BC8               	clrf	(LORAWAN_TxDone@delta+3)& (0+255),b
 22356  000B2C  69CD               	setf	LORAWAN_TxDone@minim& (0+255),b
 22357  000B2E  69CE               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 22358  000B30  69CF               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 22359  000B32  69D0               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 22360                           
 22361                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 22362  000B34  0102               	movlb	2	; () banked
 22363  000B36  6BF1               	clrf	(_loRa+241)& (0+255),b
 22364                           
 22365                           ; BSR set to: 2
 22366                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 22367  000B38  5102               	movf	(_loRa+2)& (0+255),w,b
 22368  000B3A  0BF0               	andlw	-16
 22369  000B3C  0902               	iorlw	2
 22370  000B3E  6F02               	movwf	(_loRa+2)& (0+255),b
 22371                           
 22372                           ; BSR set to: 2
 22373                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 22374  000B40  C2DA  F0D1         	movff	_loRa+218,LORAWAN_TxDone@i
 22375                           
 22376                           ; BSR set to: 2
 22377                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 22378  000B44  A500               	btfss	_loRa& (0+255),2,b
 22379  000B46  D110               	goto	l14884
 22380                           
 22381                           ; BSR set to: 2
 22382                           ;lorawan_eu.c: 382: {
 22383                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22384  000B48  0E3F               	movlw	low _rxWindowOffset
 22385  000B4A  2517               	addwf	(_loRa+23)& (0+255),w,b
 22386  000B4C  6EF6               	movwf	tblptrl,c
 22387  000B4E  6AF7               	clrf	tblptrh,c
 22388  000B50  0EFE               	movlw	high _rxWindowOffset
 22389  000B52  22F7               	addwfc	tblptrh,f,c
 22390  000B54                     	if	1	;There are 3 active tblptr bytes
 22391  000B54  6AF8               	clrf	tblptru,c
 22392  000B56  0E00               	movlw	low (__mediumconst shr (0+16))
 22393  000B58  22F8               	addwfc	tblptru,f,c
 22394  000B5A                     	endif
 22395  000B5A  0008               	tblrd		*
 22396  000B5C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 22397  000B60  5198               	movf	(_loRa+152)& (0+255),w,b
 22398  000B62  0100               	movlb	0	; () banked
 22399  000B64  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22400  000B66  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22401  000B68  0E00               	movlw	0
 22402  000B6A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22403  000B6C  0EFF               	movlw	255
 22404  000B6E  0102               	movlb	2	; () banked
 22405  000B70  2199               	addwfc	(_loRa+153)& (0+255),w,b
 22406  000B72  0100               	movlb	0	; () banked
 22407  000B74  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22408  000B76  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22409  000B78  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22410  000B7A  0E0C               	movlw	12
 22411  000B7C                     u17135:
 22412  000B7C  90D8               	bcf	status,0,c
 22413  000B7E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22414  000B80  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22415  000B82  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22416  000B84  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22417  000B86  2EE8               	decfsz	wreg,f,c
 22418  000B88  D7F9               	goto	u17135
 22419  000B8A  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22420  000B8E  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22421  000B92  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22422  000B96  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22423  000B9A  0E7D               	movlw	125
 22424  000B9C  6F68               	movwf	___lldiv@divisor& (0+255),b
 22425  000B9E  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22426  000BA0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22427  000BA2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22428  000BA4  EC1B  F031         	call	___lldiv	;wreg free
 22429  000BA8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22430  000BAC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22431  000BB0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22432  000BB4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22433  000BB8  0102               	movlb	2	; () banked
 22434  000BBA  51E2               	movf	(_loRa+226)& (0+255),w,b
 22435  000BBC  EC5E  F037         	call	_SwTimerSetTimeout
 22436                           
 22437                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22438  000BC0  0E3F               	movlw	low _rxWindowOffset
 22439  000BC2  0102               	movlb	2	; () banked
 22440  000BC4  251C               	addwf	(_loRa+28)& (0+255),w,b
 22441  000BC6  6EF6               	movwf	tblptrl,c
 22442  000BC8  6AF7               	clrf	tblptrh,c
 22443  000BCA  0EFE               	movlw	high _rxWindowOffset
 22444  000BCC  22F7               	addwfc	tblptrh,f,c
 22445  000BCE                     	if	1	;There are 3 active tblptr bytes
 22446  000BCE  6AF8               	clrf	tblptru,c
 22447  000BD0  0E00               	movlw	low (__mediumconst shr (0+16))
 22448  000BD2  22F8               	addwfc	tblptru,f,c
 22449  000BD4                     	endif
 22450  000BD4  0008               	tblrd		*
 22451  000BD6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 22452  000BDA  519A               	movf	(_loRa+154)& (0+255),w,b
 22453  000BDC  0100               	movlb	0	; () banked
 22454  000BDE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22455  000BE0  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22456  000BE2  0E00               	movlw	0
 22457  000BE4  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22458  000BE6  0EFF               	movlw	255
 22459  000BE8  0102               	movlb	2	; () banked
 22460  000BEA  219B               	addwfc	(_loRa+155)& (0+255),w,b
 22461  000BEC  0100               	movlb	0	; () banked
 22462  000BEE  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22463  000BF0  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22464  000BF2  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22465  000BF4  0E0C               	movlw	12
 22466  000BF6                     u17145:
 22467  000BF6  90D8               	bcf	status,0,c
 22468  000BF8  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22469  000BFA  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22470  000BFC  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22471  000BFE  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22472  000C00  2EE8               	decfsz	wreg,f,c
 22473  000C02  D7F9               	goto	u17145
 22474  000C04  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22475  000C08  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22476  000C0C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22477  000C10  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22478  000C14  0E7D               	movlw	125
 22479  000C16  6F68               	movwf	___lldiv@divisor& (0+255),b
 22480  000C18  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22481  000C1A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22482  000C1C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22483  000C1E  EC1B  F031         	call	___lldiv	;wreg free
 22484  000C22  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22485  000C26  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22486  000C2A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22487  000C2E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22488  000C32  0102               	movlb	2	; () banked
 22489  000C34  51E3               	movf	(_loRa+227)& (0+255),w,b
 22490  000C36  EC5E  F037         	call	_SwTimerSetTimeout
 22491                           
 22492                           ; BSR set to: 0
 22493                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 22494  000C3A  0102               	movlb	2	; () banked
 22495  000C3C  51E2               	movf	(_loRa+226)& (0+255),w,b
 22496  000C3E  EC59  F02F         	call	_SwTimerStart
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 22500  000C42  0102               	movlb	2	; () banked
 22501  000C44  51E3               	movf	(_loRa+227)& (0+255),w,b
 22502  000C46  EC59  F02F         	call	_SwTimerStart
 22503                           
 22504                           ; BSR set to: 0
 22505                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 22506  000C4A  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 22507  000C4E  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 22508  000C52  0102               	movlb	2	; () banked
 22509  000C54  51DB               	movf	(_loRa+219)& (0+255),w,b
 22510  000C56  0100               	movlb	0	; () banked
 22511  000C58  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22512  000C5A  0102               	movlb	2	; () banked
 22513  000C5C  51DC               	movf	(_loRa+220)& (0+255),w,b
 22514  000C5E  0100               	movlb	0	; () banked
 22515  000C60  6FA5               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22516  000C62  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22517  000C64  6BA7               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 22518  000C66  0ED6               	movlw	214
 22519  000C68  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22520  000C6A  CFF3 F0A8          	movff	prodl,??_LORAWAN_TxDone+6
 22521  000C6E  CFF4 F0A9          	movff	prodh,??_LORAWAN_TxDone+7
 22522  000C72  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 22523  000C74  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 22524  000C76  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22525  000C78  50F3               	movf	prodl,w,c
 22526  000C7A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22527  000C7C  50F4               	movf	prodh,w,c
 22528  000C7E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 22529  000C80  0E00               	movlw	0
 22530  000C82  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22531  000C84  0E0B               	movlw	11
 22532  000C86  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22533  000C88  50F3               	movf	prodl,w,c
 22534  000C8A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22535  000C8C  50F4               	movf	prodh,w,c
 22536  000C8E  23AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),f,b
 22537  000C90  0E00               	movlw	0
 22538  000C92  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22539  000C94  0ED6               	movlw	214
 22540  000C96  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22541  000C98  50F3               	movf	prodl,w,c
 22542  000C9A  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 22543  000C9C  50F4               	movf	prodh,w,c
 22544  000C9E  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22545  000CA0  0E0B               	movlw	11
 22546  000CA2  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22547  000CA4  50F3               	movf	prodl,w,c
 22548  000CA6  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 22549  000CA8  50F4               	movf	prodh,w,c
 22550  000CAA  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22551  000CAC  0E00               	movlw	0
 22552  000CAE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22553  000CB0  50F3               	movf	prodl,w,c
 22554  000CB2  27AA               	addwf	(??_LORAWAN_TxDone+8)& (0+255),f,b
 22555  000CB4  50F4               	movf	prodh,w,c
 22556  000CB6  23AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22557  000CB8  0ED6               	movlw	214
 22558  000CBA  03A7               	mulwf	(??_LORAWAN_TxDone+5)& (0+255),b
 22559  000CBC  50F3               	movf	prodl,w,c
 22560  000CBE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22561  000CC0  0E0B               	movlw	11
 22562  000CC2  03A6               	mulwf	(??_LORAWAN_TxDone+4)& (0+255),b
 22563  000CC4  50F3               	movf	prodl,w,c
 22564  000CC6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22565  000CC8  0E00               	movlw	0
 22566  000CCA  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22567  000CCC  50F3               	movf	prodl,w,c
 22568  000CCE  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22569  000CD0  0E00               	movlw	0
 22570  000CD2  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22571  000CD4  50F3               	movf	prodl,w,c
 22572  000CD6  27AB               	addwf	(??_LORAWAN_TxDone+9)& (0+255),f,b
 22573  000CD8  0EFF               	movlw	255
 22574  000CDA  25A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 22575  000CDC  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 22576  000CDE  0EFF               	movlw	255
 22577  000CE0  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 22578  000CE2  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 22579  000CE4  0EFF               	movlw	255
 22580  000CE6  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 22581  000CE8  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 22582  000CEA  0EFF               	movlw	255
 22583  000CEC  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 22584  000CEE  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 22585  000CF0  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 22586  000CF2  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22587  000CF4  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 22588  000CF8  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 22589  000CFC  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 22590  000CFE  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 22591  000D00  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22592  000D02  50F3               	movf	prodl,w,c
 22593  000D04  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 22594  000D06  50F4               	movf	prodh,w,c
 22595  000D08  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22596  000D0A  0E00               	movlw	0
 22597  000D0C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22598  000D0E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 22599  000D10  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22600  000D12  50F3               	movf	prodl,w,c
 22601  000D14  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 22602  000D16  50F4               	movf	prodh,w,c
 22603  000D18  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22604  000D1A  0E00               	movlw	0
 22605  000D1C  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22606  000D1E  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 22607  000D20  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22608  000D22  50F3               	movf	prodl,w,c
 22609  000D24  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22610  000D26  50F4               	movf	prodh,w,c
 22611  000D28  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22612  000D2A  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 22613  000D2C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22614  000D2E  50F3               	movf	prodl,w,c
 22615  000D30  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22616  000D32  50F4               	movf	prodh,w,c
 22617  000D34  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22618  000D36  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 22619  000D38  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22620  000D3A  50F3               	movf	prodl,w,c
 22621  000D3C  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22622  000D3E  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 22623  000D40  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22624  000D42  50F3               	movf	prodl,w,c
 22625  000D44  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22626  000D46  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22627  000D48  0D0E               	mullw	14
 22628  000D4A  0E08               	movlw	low (_Channels+8)
 22629  000D4C  24F3               	addwf	prodl,w,c
 22630  000D4E  6ED9               	movwf	fsr2l,c
 22631  000D50  0E04               	movlw	high (_Channels+8)
 22632  000D52  20F4               	addwfc	prodh,w,c
 22633  000D54  6EDA               	movwf	fsr2h,c
 22634  000D56  C0B0  FFDE         	movff	??_LORAWAN_TxDone+14,postinc2
 22635  000D5A  C0B1  FFDE         	movff	??_LORAWAN_TxDone+15,postinc2
 22636  000D5E  C0B2  FFDE         	movff	??_LORAWAN_TxDone+16,postinc2
 22637  000D62  C0B3  FFDE         	movff	??_LORAWAN_TxDone+17,postinc2
 22638                           
 22639                           ;lorawan_eu.c: 389: }
 22640  000D66  D11D               	goto	l14894
 22641  000D68                     l14884:
 22642                           
 22643                           ; BSR set to: 2
 22644                           ;lorawan_eu.c: 390: else
 22645                           ;lorawan_eu.c: 391: {
 22646                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22647  000D68  0E3F               	movlw	low _rxWindowOffset
 22648  000D6A  2517               	addwf	(_loRa+23)& (0+255),w,b
 22649  000D6C  6EF6               	movwf	tblptrl,c
 22650  000D6E  6AF7               	clrf	tblptrh,c
 22651  000D70  0EFE               	movlw	high _rxWindowOffset
 22652  000D72  22F7               	addwfc	tblptrh,f,c
 22653  000D74                     	if	1	;There are 3 active tblptr bytes
 22654  000D74  6AF8               	clrf	tblptru,c
 22655  000D76  0E00               	movlw	low (__mediumconst shr (0+16))
 22656  000D78  22F8               	addwfc	tblptru,f,c
 22657  000D7A                     	endif
 22658  000D7A  0008               	tblrd		*
 22659  000D7C  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 22660  000D80  5194               	movf	(_loRa+148)& (0+255),w,b
 22661  000D82  0100               	movlb	0	; () banked
 22662  000D84  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22663  000D86  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22664  000D88  0E00               	movlw	0
 22665  000D8A  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22666  000D8C  0EFF               	movlw	255
 22667  000D8E  0102               	movlb	2	; () banked
 22668  000D90  2195               	addwfc	(_loRa+149)& (0+255),w,b
 22669  000D92  0100               	movlb	0	; () banked
 22670  000D94  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22671  000D96  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22672  000D98  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22673  000D9A  0E0C               	movlw	12
 22674  000D9C                     u17155:
 22675  000D9C  90D8               	bcf	status,0,c
 22676  000D9E  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22677  000DA0  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22678  000DA2  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22679  000DA4  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22680  000DA6  2EE8               	decfsz	wreg,f,c
 22681  000DA8  D7F9               	goto	u17155
 22682  000DAA  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22683  000DAE  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22684  000DB2  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22685  000DB6  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22686  000DBA  0E7D               	movlw	125
 22687  000DBC  6F68               	movwf	___lldiv@divisor& (0+255),b
 22688  000DBE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22689  000DC0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22690  000DC2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22691  000DC4  EC1B  F031         	call	___lldiv	;wreg free
 22692  000DC8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22693  000DCC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22694  000DD0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22695  000DD4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22696  000DD8  0102               	movlb	2	; () banked
 22697  000DDA  51E4               	movf	(_loRa+228)& (0+255),w,b
 22698  000DDC  EC5E  F037         	call	_SwTimerSetTimeout
 22699                           
 22700                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 22701  000DE0  0E3F               	movlw	low _rxWindowOffset
 22702  000DE2  0102               	movlb	2	; () banked
 22703  000DE4  251C               	addwf	(_loRa+28)& (0+255),w,b
 22704  000DE6  6EF6               	movwf	tblptrl,c
 22705  000DE8  6AF7               	clrf	tblptrh,c
 22706  000DEA  0EFE               	movlw	high _rxWindowOffset
 22707  000DEC  22F7               	addwfc	tblptrh,f,c
 22708  000DEE                     	if	1	;There are 3 active tblptr bytes
 22709  000DEE  6AF8               	clrf	tblptru,c
 22710  000DF0  0E00               	movlw	low (__mediumconst shr (0+16))
 22711  000DF2  22F8               	addwfc	tblptru,f,c
 22712  000DF4                     	endif
 22713  000DF4  0008               	tblrd		*
 22714  000DF6  CFF5 F0A2          	movff	tablat,??_LORAWAN_TxDone
 22715  000DFA  5196               	movf	(_loRa+150)& (0+255),w,b
 22716  000DFC  0100               	movlb	0	; () banked
 22717  000DFE  25A2               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 22718  000E00  6FA3               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22719  000E02  0E00               	movlw	0
 22720  000E04  BFA2               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 22721  000E06  0EFF               	movlw	255
 22722  000E08  0102               	movlb	2	; () banked
 22723  000E0A  2197               	addwfc	(_loRa+151)& (0+255),w,b
 22724  000E0C  0100               	movlb	0	; () banked
 22725  000E0E  6FA4               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22726  000E10  6BA5               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 22727  000E12  6BA6               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 22728  000E14  0E0C               	movlw	12
 22729  000E16                     u17165:
 22730  000E16  90D8               	bcf	status,0,c
 22731  000E18  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22732  000E1A  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22733  000E1C  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22734  000E1E  37A6               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 22735  000E20  2EE8               	decfsz	wreg,f,c
 22736  000E22  D7F9               	goto	u17165
 22737  000E24  C0A3  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 22738  000E28  C0A4  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 22739  000E2C  C0A5  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 22740  000E30  C0A6  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 22741  000E34  0E7D               	movlw	125
 22742  000E36  6F68               	movwf	___lldiv@divisor& (0+255),b
 22743  000E38  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 22744  000E3A  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 22745  000E3C  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 22746  000E3E  EC1B  F031         	call	___lldiv	;wreg free
 22747  000E42  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 22748  000E46  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 22749  000E4A  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 22750  000E4E  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 22751  000E52  0102               	movlb	2	; () banked
 22752  000E54  51E5               	movf	(_loRa+229)& (0+255),w,b
 22753  000E56  EC5E  F037         	call	_SwTimerSetTimeout
 22754                           
 22755                           ; BSR set to: 0
 22756                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 22757  000E5A  0102               	movlb	2	; () banked
 22758  000E5C  51E4               	movf	(_loRa+228)& (0+255),w,b
 22759  000E5E  EC59  F02F         	call	_SwTimerStart
 22760                           
 22761                           ; BSR set to: 0
 22762                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 22763  000E62  0102               	movlb	2	; () banked
 22764  000E64  5112               	movf	(_loRa+18)& (0+255),w,b
 22765  000E66  E103               	bnz	l14892
 22766                           
 22767                           ; BSR set to: 2
 22768                           ;lorawan_eu.c: 396: {
 22769                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 22770  000E68  51E5               	movf	(_loRa+229)& (0+255),w,b
 22771  000E6A  EC59  F02F         	call	_SwTimerStart
 22772  000E6E                     l14892:
 22773                           
 22774                           ;lorawan_eu.c: 398: }
 22775                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 22776  000E6E  C0A0  F0A2         	movff	LORAWAN_TxDone@timeOnAir,??_LORAWAN_TxDone
 22777  000E72  C0A1  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,??_LORAWAN_TxDone+1
 22778  000E76  EE22  F0DB         	lfsr	2,_loRa+219
 22779  000E7A  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 22780  000E7E  CFDD F0A5          	movff	postdec2,??_LORAWAN_TxDone+3
 22781  000E82  0100               	movlb	0	; () banked
 22782  000E84  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22783  000E86  0D0E               	mullw	14
 22784  000E88  0E06               	movlw	low (_Channels+6)
 22785  000E8A  24F3               	addwf	prodl,w,c
 22786  000E8C  6ED9               	movwf	fsr2l,c
 22787  000E8E  0E04               	movlw	high (_Channels+6)
 22788  000E90  20F4               	addwfc	prodh,w,c
 22789  000E92  6EDA               	movwf	fsr2h,c
 22790  000E94  CFDE F0A6          	movff	postinc2,??_LORAWAN_TxDone+4
 22791  000E98  CFDD F0A7          	movff	postdec2,??_LORAWAN_TxDone+5
 22792  000E9C  51A6               	movf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 22793  000E9E  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 22794  000EA0  51A7               	movf	(??_LORAWAN_TxDone+5)& (0+255),w,b
 22795  000EA2  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 22796  000EA4  6BAA               	clrf	(??_LORAWAN_TxDone+8)& (0+255),b
 22797  000EA6  6BAB               	clrf	(??_LORAWAN_TxDone+9)& (0+255),b
 22798  000EA8  29A8               	incf	(??_LORAWAN_TxDone+6)& (0+255),w,b
 22799  000EAA  6FAC               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 22800  000EAC  0E00               	movlw	0
 22801  000EAE  21A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 22802  000EB0  6FAD               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 22803  000EB2  0E00               	movlw	0
 22804  000EB4  21AA               	addwfc	(??_LORAWAN_TxDone+8)& (0+255),w,b
 22805  000EB6  6FAE               	movwf	(??_LORAWAN_TxDone+12)& (0+255),b
 22806  000EB8  0E00               	movlw	0
 22807  000EBA  21AB               	addwfc	(??_LORAWAN_TxDone+9)& (0+255),w,b
 22808  000EBC  6FAF               	movwf	(??_LORAWAN_TxDone+13)& (0+255),b
 22809  000EBE  51AC               	movf	(??_LORAWAN_TxDone+10)& (0+255),w,b
 22810  000EC0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22811  000EC2  CFF3 F0B0          	movff	prodl,??_LORAWAN_TxDone+14
 22812  000EC6  CFF4 F0B1          	movff	prodh,??_LORAWAN_TxDone+15
 22813  000ECA  6BB2               	clrf	(??_LORAWAN_TxDone+16)& (0+255),b
 22814  000ECC  6BB3               	clrf	(??_LORAWAN_TxDone+17)& (0+255),b
 22815  000ECE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22816  000ED0  50F3               	movf	prodl,w,c
 22817  000ED2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 22818  000ED4  50F4               	movf	prodh,w,c
 22819  000ED6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22820  000ED8  0E00               	movlw	0
 22821  000EDA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22822  000EDC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 22823  000EDE  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22824  000EE0  50F3               	movf	prodl,w,c
 22825  000EE2  27B1               	addwf	(??_LORAWAN_TxDone+15)& (0+255),f,b
 22826  000EE4  50F4               	movf	prodh,w,c
 22827  000EE6  23B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22828  000EE8  0E00               	movlw	0
 22829  000EEA  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22830  000EEC  51AD               	movf	(??_LORAWAN_TxDone+11)& (0+255),w,b
 22831  000EEE  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22832  000EF0  50F3               	movf	prodl,w,c
 22833  000EF2  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22834  000EF4  50F4               	movf	prodh,w,c
 22835  000EF6  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22836  000EF8  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 22837  000EFA  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22838  000EFC  50F3               	movf	prodl,w,c
 22839  000EFE  27B2               	addwf	(??_LORAWAN_TxDone+16)& (0+255),f,b
 22840  000F00  50F4               	movf	prodh,w,c
 22841  000F02  23B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22842  000F04  51AE               	movf	(??_LORAWAN_TxDone+12)& (0+255),w,b
 22843  000F06  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 22844  000F08  50F3               	movf	prodl,w,c
 22845  000F0A  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22846  000F0C  51AF               	movf	(??_LORAWAN_TxDone+13)& (0+255),w,b
 22847  000F0E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22848  000F10  50F3               	movf	prodl,w,c
 22849  000F12  27B3               	addwf	(??_LORAWAN_TxDone+17)& (0+255),f,b
 22850  000F14  0EFF               	movlw	255
 22851  000F16  25B0               	addwf	(??_LORAWAN_TxDone+14)& (0+255),w,b
 22852  000F18  6FB4               	movwf	(??_LORAWAN_TxDone+18)& (0+255),b
 22853  000F1A  0EFF               	movlw	255
 22854  000F1C  21B1               	addwfc	(??_LORAWAN_TxDone+15)& (0+255),w,b
 22855  000F1E  6FB5               	movwf	(??_LORAWAN_TxDone+19)& (0+255),b
 22856  000F20  0EFF               	movlw	255
 22857  000F22  21B2               	addwfc	(??_LORAWAN_TxDone+16)& (0+255),w,b
 22858  000F24  6FB6               	movwf	(??_LORAWAN_TxDone+20)& (0+255),b
 22859  000F26  0EFF               	movlw	255
 22860  000F28  21B3               	addwfc	(??_LORAWAN_TxDone+17)& (0+255),w,b
 22861  000F2A  6FB7               	movwf	(??_LORAWAN_TxDone+21)& (0+255),b
 22862  000F2C  51B4               	movf	(??_LORAWAN_TxDone+18)& (0+255),w,b
 22863  000F2E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22864  000F30  CFF3 F0B8          	movff	prodl,??_LORAWAN_TxDone+22
 22865  000F34  CFF4 F0B9          	movff	prodh,??_LORAWAN_TxDone+23
 22866  000F38  6BBA               	clrf	(??_LORAWAN_TxDone+24)& (0+255),b
 22867  000F3A  6BBB               	clrf	(??_LORAWAN_TxDone+25)& (0+255),b
 22868  000F3C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22869  000F3E  50F3               	movf	prodl,w,c
 22870  000F40  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 22871  000F42  50F4               	movf	prodh,w,c
 22872  000F44  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 22873  000F46  0E00               	movlw	0
 22874  000F48  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22875  000F4A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 22876  000F4C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22877  000F4E  50F3               	movf	prodl,w,c
 22878  000F50  27B9               	addwf	(??_LORAWAN_TxDone+23)& (0+255),f,b
 22879  000F52  50F4               	movf	prodh,w,c
 22880  000F54  23BA               	addwfc	(??_LORAWAN_TxDone+24)& (0+255),f,b
 22881  000F56  0E00               	movlw	0
 22882  000F58  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22883  000F5A  51B5               	movf	(??_LORAWAN_TxDone+19)& (0+255),w,b
 22884  000F5C  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22885  000F5E  50F3               	movf	prodl,w,c
 22886  000F60  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 22887  000F62  50F4               	movf	prodh,w,c
 22888  000F64  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22889  000F66  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 22890  000F68  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22891  000F6A  50F3               	movf	prodl,w,c
 22892  000F6C  27BA               	addwf	(??_LORAWAN_TxDone+24)& (0+255),f,b
 22893  000F6E  50F4               	movf	prodh,w,c
 22894  000F70  23BB               	addwfc	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22895  000F72  51B6               	movf	(??_LORAWAN_TxDone+20)& (0+255),w,b
 22896  000F74  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22897  000F76  50F3               	movf	prodl,w,c
 22898  000F78  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22899  000F7A  51B7               	movf	(??_LORAWAN_TxDone+21)& (0+255),w,b
 22900  000F7C  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22901  000F7E  50F3               	movf	prodl,w,c
 22902  000F80  27BB               	addwf	(??_LORAWAN_TxDone+25)& (0+255),f,b
 22903  000F82  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 22904  000F84  0D0E               	mullw	14
 22905  000F86  0E08               	movlw	low (_Channels+8)
 22906  000F88  24F3               	addwf	prodl,w,c
 22907  000F8A  6ED9               	movwf	fsr2l,c
 22908  000F8C  0E04               	movlw	high (_Channels+8)
 22909  000F8E  20F4               	addwfc	prodh,w,c
 22910  000F90  6EDA               	movwf	fsr2h,c
 22911  000F92  C0B8  FFDE         	movff	??_LORAWAN_TxDone+22,postinc2
 22912  000F96  C0B9  FFDE         	movff	??_LORAWAN_TxDone+23,postinc2
 22913  000F9A  C0BA  FFDE         	movff	??_LORAWAN_TxDone+24,postinc2
 22914  000F9E  C0BB  FFDE         	movff	??_LORAWAN_TxDone+25,postinc2
 22915  000FA2                     l14894:
 22916                           
 22917                           ; BSR set to: 0
 22918                           ;lorawan_eu.c: 401: }
 22919                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 22920  000FA2  0102               	movlb	2	; () banked
 22921  000FA4  51E9               	movf	(_loRa+233)& (0+255),w,b
 22922  000FA6  ECF1  F03A         	call	_SwTimerIsRunning
 22923  000FAA  0900               	iorlw	0
 22924  000FAC  E101 D0C8          	bz	l14906
 22925                           
 22926                           ; BSR set to: 0
 22927                           ;lorawan_eu.c: 404: {
 22928                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 22929  000FB0  0102               	movlb	2	; () banked
 22930  000FB2  51E9               	movf	(_loRa+233)& (0+255),w,b
 22931  000FB4  EC6A  F03B         	call	_SwTimerStop
 22932                           
 22933                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 22934  000FB8  0102               	movlb	2	; () banked
 22935  000FBA  51E9               	movf	(_loRa+233)& (0+255),w,b
 22936  000FBC  EC7F  F037         	call	_SwTimerReadValue
 22937  000FC0  C08D  F0C9         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 22938  000FC4  C08E  F0CA         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 22939  000FC8  C08F  F0CB         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 22940  000FCC  C090  F0CC         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 22941                           
 22942                           ; BSR set to: 0
 22943                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 22944  000FD0  51CC               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 22945  000FD2  E107               	bnz	u17190
 22946  000FD4  0E1F               	movlw	31
 22947  000FD6  5DC9               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 22948  000FD8  0EAC               	movlw	172
 22949  000FDA  59CA               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 22950  000FDC  0EDF               	movlw	223
 22951  000FDE  59CB               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 22952  000FE0  E34A               	bnc	l14902
 22953  000FE2                     u17190:
 22954                           
 22955                           ; BSR set to: 0
 22956  000FE2  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 22957  000FE6  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 22958  000FEA  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 22959  000FEE  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 22960  000FF2  0E0D               	movlw	13
 22961  000FF4  D005               	goto	u17200
 22962  000FF6                     u17205:
 22963  000FF6  90D8               	bcf	status,0,c
 22964  000FF8  33A5               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 22965  000FFA  33A4               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 22966  000FFC  33A3               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 22967  000FFE  33A2               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 22968  001000                     u17200:
 22969  001000  2EE8               	decfsz	wreg,f,c
 22970  001002  D7F9               	goto	u17205
 22971  001004  0E7D               	movlw	125
 22972  001006  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22973  001008  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 22974  00100C  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 22975  001010  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 22976  001012  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 22977  001014  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22978  001016  50F3               	movf	prodl,w,c
 22979  001018  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22980  00101A  50F4               	movf	prodh,w,c
 22981  00101C  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22982  00101E  0E00               	movlw	0
 22983  001020  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22984  001022  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 22985  001024  50F3               	movf	prodl,w,c
 22986  001026  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 22987  001028  50F4               	movf	prodh,w,c
 22988  00102A  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22989  00102C  0E00               	movlw	0
 22990  00102E  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22991  001030  0E7D               	movlw	125
 22992  001032  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 22993  001034  50F3               	movf	prodl,w,c
 22994  001036  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 22995  001038  50F4               	movf	prodh,w,c
 22996  00103A  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 22997  00103C  0E00               	movlw	0
 22998  00103E  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 22999  001040  50F3               	movf	prodl,w,c
 23000  001042  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23001  001044  50F4               	movf	prodh,w,c
 23002  001046  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23003  001048  0E00               	movlw	0
 23004  00104A  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23005  00104C  50F3               	movf	prodl,w,c
 23006  00104E  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23007  001050  50F4               	movf	prodh,w,c
 23008  001052  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23009  001054  0E7D               	movlw	125
 23010  001056  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 23011  001058  50F3               	movf	prodl,w,c
 23012  00105A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23013  00105C  0E00               	movlw	0
 23014  00105E  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23015  001060  50F3               	movf	prodl,w,c
 23016  001062  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23017  001064  0E00               	movlw	0
 23018  001066  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23019  001068  50F3               	movf	prodl,w,c
 23020  00106A  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23021  00106C  0E00               	movlw	0
 23022  00106E  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23023  001070  50F3               	movf	prodl,w,c
 23024  001072  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23025  001074  D049               	goto	L12
 23026  001076                     l14902:
 23027                           
 23028                           ; BSR set to: 0
 23029  001076  C0C9  F0A2         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 23030  00107A  C0CA  F0A3         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 23031  00107E  C0CB  F0A4         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 23032  001082  C0CC  F0A5         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 23033  001086  0E7D               	movlw	125
 23034  001088  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23035  00108A  CFF3 F0A6          	movff	prodl,??_LORAWAN_TxDone+4
 23036  00108E  CFF4 F0A7          	movff	prodh,??_LORAWAN_TxDone+5
 23037  001092  6BA8               	clrf	(??_LORAWAN_TxDone+6)& (0+255),b
 23038  001094  6BA9               	clrf	(??_LORAWAN_TxDone+7)& (0+255),b
 23039  001096  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23040  001098  50F3               	movf	prodl,w,c
 23041  00109A  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23042  00109C  50F4               	movf	prodh,w,c
 23043  00109E  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23044  0010A0  0E00               	movlw	0
 23045  0010A2  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23046  0010A4  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23047  0010A6  50F3               	movf	prodl,w,c
 23048  0010A8  27A7               	addwf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23049  0010AA  50F4               	movf	prodh,w,c
 23050  0010AC  23A8               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23051  0010AE  0E00               	movlw	0
 23052  0010B0  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23053  0010B2  0E7D               	movlw	125
 23054  0010B4  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23055  0010B6  50F3               	movf	prodl,w,c
 23056  0010B8  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23057  0010BA  50F4               	movf	prodh,w,c
 23058  0010BC  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23059  0010BE  0E00               	movlw	0
 23060  0010C0  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23061  0010C2  50F3               	movf	prodl,w,c
 23062  0010C4  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23063  0010C6  50F4               	movf	prodh,w,c
 23064  0010C8  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23065  0010CA  0E00               	movlw	0
 23066  0010CC  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23067  0010CE  50F3               	movf	prodl,w,c
 23068  0010D0  27A8               	addwf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23069  0010D2  50F4               	movf	prodh,w,c
 23070  0010D4  23A9               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23071  0010D6  0E7D               	movlw	125
 23072  0010D8  03A5               	mulwf	(??_LORAWAN_TxDone+3)& (0+255),b
 23073  0010DA  50F3               	movf	prodl,w,c
 23074  0010DC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23075  0010DE  0E00               	movlw	0
 23076  0010E0  03A4               	mulwf	(??_LORAWAN_TxDone+2)& (0+255),b
 23077  0010E2  50F3               	movf	prodl,w,c
 23078  0010E4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23079  0010E6  0E00               	movlw	0
 23080  0010E8  03A3               	mulwf	(??_LORAWAN_TxDone+1)& (0+255),b
 23081  0010EA  50F3               	movf	prodl,w,c
 23082  0010EC  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23083  0010EE  0E00               	movlw	0
 23084  0010F0  03A2               	mulwf	??_LORAWAN_TxDone& (0+255),b
 23085  0010F2  50F3               	movf	prodl,w,c
 23086  0010F4  27A9               	addwf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23087  0010F6  0E0D               	movlw	13
 23088  0010F8  D005               	goto	u17210
 23089  0010FA                     u17215:
 23090  0010FA  90D8               	bcf	status,0,c
 23091  0010FC  33A9               	rrcf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 23092  0010FE  33A8               	rrcf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 23093  001100  33A7               	rrcf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 23094  001102  33A6               	rrcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 23095  001104                     u17210:
 23096  001104  2EE8               	decfsz	wreg,f,c
 23097  001106  D7F9               	goto	u17215
 23098  001108                     L12:
 23099  001108  C0A6  F0BC         	movff	??_LORAWAN_TxDone+4,_LORAWAN_TxDone$2096
 23100  00110C  C0A7  F0BD         	movff	??_LORAWAN_TxDone+5,_LORAWAN_TxDone$2096+1
 23101  001110  C0A8  F0BE         	movff	??_LORAWAN_TxDone+6,_LORAWAN_TxDone$2096+2
 23102  001114  C0A9  F0BF         	movff	??_LORAWAN_TxDone+7,_LORAWAN_TxDone$2096+3
 23103                           
 23104                           ; BSR set to: 0
 23105  001118  51BC               	movf	_LORAWAN_TxDone$2096& (0+255),w,b
 23106  00111A  0102               	movlb	2	; () banked
 23107  00111C  5DC8               	subwf	(_loRa+200)& (0+255),w,b
 23108  00111E  0100               	movlb	0	; () banked
 23109  001120  6FC5               	movwf	LORAWAN_TxDone@delta& (0+255),b
 23110  001122  51BD               	movf	(_LORAWAN_TxDone$2096+1)& (0+255),w,b
 23111  001124  0102               	movlb	2	; () banked
 23112  001126  59C9               	subwfb	(_loRa+201)& (0+255),w,b
 23113  001128  0100               	movlb	0	; () banked
 23114  00112A  6FC6               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 23115  00112C  51BE               	movf	(_LORAWAN_TxDone$2096+2)& (0+255),w,b
 23116  00112E  0102               	movlb	2	; () banked
 23117  001130  59CA               	subwfb	(_loRa+202)& (0+255),w,b
 23118  001132  0100               	movlb	0	; () banked
 23119  001134  6FC7               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 23120  001136  51BF               	movf	(_LORAWAN_TxDone$2096+3)& (0+255),w,b
 23121  001138  0102               	movlb	2	; () banked
 23122  00113A  59CB               	subwfb	(_loRa+203)& (0+255),w,b
 23123  00113C  0100               	movlb	0	; () banked
 23124  00113E  6FC8               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 23125  001140                     l14906:
 23126                           
 23127                           ; BSR set to: 0
 23128                           ;lorawan_eu.c: 409: }
 23129                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 23130  001140  6BD1               	clrf	LORAWAN_TxDone@i& (0+255),b
 23131  001142                     l14912:
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;lorawan_eu.c: 412: {
 23135                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 23136  001142  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23137  001144  0D0E               	mullw	14
 23138  001146  0E04               	movlw	low (_Channels+4)
 23139  001148  24F3               	addwf	prodl,w,c
 23140  00114A  6ED9               	movwf	fsr2l,c
 23141  00114C  0E04               	movlw	high (_Channels+4)
 23142  00114E  20F4               	addwfc	prodh,w,c
 23143  001150  6EDA               	movwf	fsr2h,c
 23144  001152  04DE               	decf	postinc2,w,c
 23145  001154  E001 D08E          	bnz	l14930
 23146                           
 23147                           ; BSR set to: 0
 23148  001158  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23149  00115A  0D0E               	mullw	14
 23150  00115C  0E08               	movlw	low (_Channels+8)
 23151  00115E  24F3               	addwf	prodl,w,c
 23152  001160  6ED9               	movwf	fsr2l,c
 23153  001162  0E04               	movlw	high (_Channels+8)
 23154  001164  20F4               	addwfc	prodh,w,c
 23155  001166  6EDA               	movwf	fsr2h,c
 23156  001168  50DE               	movf	postinc2,w,c
 23157  00116A  10DE               	iorwf	postinc2,w,c
 23158  00116C  10DE               	iorwf	postinc2,w,c
 23159  00116E  10DE               	iorwf	postinc2,w,c
 23160  001170  E101 D080          	bz	l14930
 23161                           
 23162                           ; BSR set to: 0
 23163                           ;lorawan_eu.c: 414: {
 23164                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 23165  001174  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23166  001176  0102               	movlb	2	; () banked
 23167  001178  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 23168  00117A  E04B               	bz	l1033
 23169                           
 23170                           ; BSR set to: 2
 23171                           ;lorawan_eu.c: 416: {
 23172                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 23173  00117C  0100               	movlb	0	; () banked
 23174  00117E  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23175  001180  0D0E               	mullw	14
 23176  001182  0E08               	movlw	low (_Channels+8)
 23177  001184  24F3               	addwf	prodl,w,c
 23178  001186  6ED9               	movwf	fsr2l,c
 23179  001188  0E04               	movlw	high (_Channels+8)
 23180  00118A  20F4               	addwfc	prodh,w,c
 23181  00118C  6EDA               	movwf	fsr2h,c
 23182  00118E  50DE               	movf	postinc2,w,c
 23183  001190  5DC5               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 23184  001192  50DE               	movf	postinc2,w,c
 23185  001194  59C6               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 23186  001196  50DE               	movf	postinc2,w,c
 23187  001198  59C7               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 23188  00119A  50DE               	movf	postinc2,w,c
 23189  00119C  59C8               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 23190  00119E  E22D               	bc	l14922
 23191                           
 23192                           ; BSR set to: 0
 23193                           ;lorawan_eu.c: 418: {
 23194                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 23195  0011A0  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23196  0011A2  0D0E               	mullw	14
 23197  0011A4  0E08               	movlw	low (_Channels+8)
 23198  0011A6  24F3               	addwf	prodl,w,c
 23199  0011A8  6ED9               	movwf	fsr2l,c
 23200  0011AA  0E04               	movlw	high (_Channels+8)
 23201  0011AC  20F4               	addwfc	prodh,w,c
 23202  0011AE  6EDA               	movwf	fsr2h,c
 23203  0011B0  CFDE F0A2          	movff	postinc2,??_LORAWAN_TxDone
 23204  0011B4  CFDE F0A3          	movff	postinc2,??_LORAWAN_TxDone+1
 23205  0011B8  CFDE F0A4          	movff	postinc2,??_LORAWAN_TxDone+2
 23206  0011BC  CFDE F0A5          	movff	postinc2,??_LORAWAN_TxDone+3
 23207  0011C0  51C5               	movf	LORAWAN_TxDone@delta& (0+255),w,b
 23208  0011C2  5DA2               	subwf	??_LORAWAN_TxDone& (0+255),w,b
 23209  0011C4  6FA6               	movwf	(??_LORAWAN_TxDone+4)& (0+255),b
 23210  0011C6  51C6               	movf	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 23211  0011C8  59A3               	subwfb	(??_LORAWAN_TxDone+1)& (0+255),w,b
 23212  0011CA  6FA7               	movwf	(??_LORAWAN_TxDone+5)& (0+255),b
 23213  0011CC  51C7               	movf	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 23214  0011CE  59A4               	subwfb	(??_LORAWAN_TxDone+2)& (0+255),w,b
 23215  0011D0  6FA8               	movwf	(??_LORAWAN_TxDone+6)& (0+255),b
 23216  0011D2  51C8               	movf	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 23217  0011D4  59A5               	subwfb	(??_LORAWAN_TxDone+3)& (0+255),w,b
 23218  0011D6  6FA9               	movwf	(??_LORAWAN_TxDone+7)& (0+255),b
 23219  0011D8  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23220  0011DA  0D0E               	mullw	14
 23221  0011DC  0E08               	movlw	low (_Channels+8)
 23222  0011DE  24F3               	addwf	prodl,w,c
 23223  0011E0  6ED9               	movwf	fsr2l,c
 23224  0011E2  0E04               	movlw	high (_Channels+8)
 23225  0011E4  20F4               	addwfc	prodh,w,c
 23226  0011E6  6EDA               	movwf	fsr2h,c
 23227  0011E8  C0A6  FFDE         	movff	??_LORAWAN_TxDone+4,postinc2
 23228  0011EC  C0A7  FFDE         	movff	??_LORAWAN_TxDone+5,postinc2
 23229  0011F0  C0A8  FFDE         	movff	??_LORAWAN_TxDone+6,postinc2
 23230  0011F4  C0A9  FFDE         	movff	??_LORAWAN_TxDone+7,postinc2
 23231                           
 23232                           ;lorawan_eu.c: 420: }
 23233  0011F8  D00C               	goto	l1033
 23234  0011FA                     l14922:
 23235                           
 23236                           ; BSR set to: 0
 23237                           ;lorawan_eu.c: 421: else
 23238                           ;lorawan_eu.c: 422: {
 23239                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 23240  0011FA  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23241  0011FC  0D0E               	mullw	14
 23242  0011FE  0E08               	movlw	low (_Channels+8)
 23243  001200  24F3               	addwf	prodl,w,c
 23244  001202  6ED9               	movwf	fsr2l,c
 23245  001204  0E04               	movlw	high (_Channels+8)
 23246  001206  20F4               	addwfc	prodh,w,c
 23247  001208  6EDA               	movwf	fsr2h,c
 23248  00120A  6ADE               	clrf	postinc2,c
 23249  00120C  6ADE               	clrf	postinc2,c
 23250  00120E  6ADE               	clrf	postinc2,c
 23251  001210  6ADD               	clrf	postdec2,c
 23252  001212                     l1033:
 23253                           
 23254                           ;lorawan_eu.c: 424: }
 23255                           ;lorawan_eu.c: 425: }
 23256                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 23257  001212  0100               	movlb	0	; () banked
 23258  001214  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23259  001216  0D0E               	mullw	14
 23260  001218  0E08               	movlw	low (_Channels+8)
 23261  00121A  24F3               	addwf	prodl,w,c
 23262  00121C  6ED9               	movwf	fsr2l,c
 23263  00121E  0E04               	movlw	high (_Channels+8)
 23264  001220  20F4               	addwfc	prodh,w,c
 23265  001222  6EDA               	movwf	fsr2h,c
 23266  001224  50DE               	movf	postinc2,w,c
 23267  001226  5DCD               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 23268  001228  50DE               	movf	postinc2,w,c
 23269  00122A  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23270  00122C  50DE               	movf	postinc2,w,c
 23271  00122E  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23272  001230  50DE               	movf	postinc2,w,c
 23273  001232  59D0               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23274  001234  E31F               	bnc	l14930
 23275                           
 23276                           ; BSR set to: 0
 23277  001236  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23278  001238  0D0E               	mullw	14
 23279  00123A  0E08               	movlw	low (_Channels+8)
 23280  00123C  24F3               	addwf	prodl,w,c
 23281  00123E  6ED9               	movwf	fsr2l,c
 23282  001240  0E04               	movlw	high (_Channels+8)
 23283  001242  20F4               	addwfc	prodh,w,c
 23284  001244  6EDA               	movwf	fsr2h,c
 23285  001246  50DE               	movf	postinc2,w,c
 23286  001248  10DE               	iorwf	postinc2,w,c
 23287  00124A  10DE               	iorwf	postinc2,w,c
 23288  00124C  10DE               	iorwf	postinc2,w,c
 23289  00124E  E012               	bz	l14930
 23290                           
 23291                           ; BSR set to: 0
 23292                           ;lorawan_eu.c: 427: {
 23293                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 23294  001250  51D1               	movf	LORAWAN_TxDone@i& (0+255),w,b
 23295  001252  0D0E               	mullw	14
 23296  001254  0E08               	movlw	low (_Channels+8)
 23297  001256  24F3               	addwf	prodl,w,c
 23298  001258  6ED9               	movwf	fsr2l,c
 23299  00125A  0E04               	movlw	high (_Channels+8)
 23300  00125C  20F4               	addwfc	prodh,w,c
 23301  00125E  6EDA               	movwf	fsr2h,c
 23302  001260  CFDE F0CD          	movff	postinc2,LORAWAN_TxDone@minim
 23303  001264  CFDE F0CE          	movff	postinc2,LORAWAN_TxDone@minim+1
 23304  001268  CFDE F0CF          	movff	postinc2,LORAWAN_TxDone@minim+2
 23305  00126C  CFDE F0D0          	movff	postinc2,LORAWAN_TxDone@minim+3
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;lorawan_eu.c: 429: found = 1;
 23309  001270  0E01               	movlw	1
 23310  001272  6FC4               	movwf	LORAWAN_TxDone@found& (0+255),b
 23311  001274                     l14930:
 23312                           
 23313                           ; BSR set to: 0
 23314  001274  2BD1               	incf	LORAWAN_TxDone@i& (0+255),f,b
 23315                           
 23316                           ; BSR set to: 0
 23317  001276  0E0F               	movlw	15
 23318  001278  65D1               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 23319  00127A  D763               	goto	l14912
 23320                           
 23321                           ; BSR set to: 0
 23322                           ;lorawan_eu.c: 430: }
 23323                           ;lorawan_eu.c: 431: }
 23324                           ;lorawan_eu.c: 432: }
 23325                           ;lorawan_eu.c: 433: if (found == 1)
 23326  00127C  05C4               	decf	LORAWAN_TxDone@found& (0+255),w,b
 23327  00127E  E15F               	bnz	l14948
 23328                           
 23329                           ; BSR set to: 0
 23330                           ;lorawan_eu.c: 434: {
 23331                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 23332  001280  C0CD  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 23333  001284  C0CE  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 23334  001288  C0CF  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 23335  00128C  C0D0  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 23336                           
 23337                           ; BSR set to: 0
 23338                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 23339  001290  51D0               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 23340  001292  E106               	bnz	u17300
 23341  001294  29CD               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 23342  001296  0EFF               	movlw	255
 23343  001298  59CE               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 23344  00129A  0E0F               	movlw	15
 23345  00129C  59CF               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 23346  00129E  E318               	bnc	l14942
 23347  0012A0                     u17300:
 23348                           
 23349                           ; BSR set to: 0
 23350  0012A0  C0CD  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 23351  0012A4  C0CE  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 23352  0012A8  C0CF  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 23353  0012AC  C0D0  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 23354  0012B0  0E7D               	movlw	125
 23355  0012B2  6F68               	movwf	___lldiv@divisor& (0+255),b
 23356  0012B4  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23357  0012B6  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23358  0012B8  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23359  0012BA  EC1B  F031         	call	___lldiv	;wreg free
 23360  0012BE  0E0C               	movlw	12
 23361  0012C0                     u17315:
 23362  0012C0  90D8               	bcf	status,0,c
 23363  0012C2  3764               	rlcf	?___lldiv& (0+255),f,b
 23364  0012C4  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 23365  0012C6  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 23366  0012C8  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 23367  0012CA  2EE8               	decfsz	wreg,f,c
 23368  0012CC  D7F9               	goto	u17315
 23369  0012CE  D01F               	goto	L13
 23370  0012D0                     l14942:
 23371                           
 23372                           ; BSR set to: 0
 23373  0012D0  C0CD  F0A2         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 23374  0012D4  C0CE  F0A3         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 23375  0012D8  C0CF  F0A4         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 23376  0012DC  C0D0  F0A5         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 23377  0012E0  0E0C               	movlw	12
 23378  0012E2                     u17325:
 23379  0012E2  90D8               	bcf	status,0,c
 23380  0012E4  37A2               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 23381  0012E6  37A3               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 23382  0012E8  37A4               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 23383  0012EA  37A5               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 23384  0012EC  2EE8               	decfsz	wreg,f,c
 23385  0012EE  D7F9               	goto	u17325
 23386  0012F0  C0A2  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 23387  0012F4  C0A3  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 23388  0012F8  C0A4  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 23389  0012FC  C0A5  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 23390  001300  0E7D               	movlw	125
 23391  001302  6F68               	movwf	___lldiv@divisor& (0+255),b
 23392  001304  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 23393  001306  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 23394  001308  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 23395  00130A  EC1B  F031         	call	___lldiv	;wreg free
 23396  00130E                     L13:
 23397  00130E  C064  F0C0         	movff	?___lldiv,_LORAWAN_TxDone$2097
 23398  001312  C065  F0C1         	movff	?___lldiv+1,_LORAWAN_TxDone$2097+1
 23399  001316  C066  F0C2         	movff	?___lldiv+2,_LORAWAN_TxDone$2097+2
 23400  00131A  C067  F0C3         	movff	?___lldiv+3,_LORAWAN_TxDone$2097+3
 23401                           
 23402                           ; BSR set to: 0
 23403  00131E  C0C0  F071         	movff	_LORAWAN_TxDone$2097,SwTimerSetTimeout@timeout
 23404  001322  C0C1  F072         	movff	_LORAWAN_TxDone$2097+1,SwTimerSetTimeout@timeout+1
 23405  001326  C0C2  F073         	movff	_LORAWAN_TxDone$2097+2,SwTimerSetTimeout@timeout+2
 23406  00132A  C0C3  F074         	movff	_LORAWAN_TxDone$2097+3,SwTimerSetTimeout@timeout+3
 23407  00132E  0102               	movlb	2	; () banked
 23408  001330  51E9               	movf	(_loRa+233)& (0+255),w,b
 23409  001332  EC5E  F037         	call	_SwTimerSetTimeout
 23410                           
 23411                           ; BSR set to: 0
 23412                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 23413  001336  0102               	movlb	2	; () banked
 23414  001338  51E9               	movf	(_loRa+233)& (0+255),w,b
 23415  00133A  EC59  F02F         	call	_SwTimerStart
 23416  00133E                     l14948:
 23417                           
 23418                           ; BSR set to: 0
 23419                           ;lorawan_eu.c: 438: }
 23420                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 23421  00133E  0E02               	movlw	2
 23422  001340  0102               	movlb	2	; () banked
 23423  001342  1912               	xorwf	(_loRa+18)& (0+255),w,b
 23424  001344  A4D8               	btfss	status,2,c
 23425  001346  0012               	return	
 23426                           
 23427                           ; BSR set to: 2
 23428                           ;lorawan_eu.c: 440: {
 23429                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 23430  001348  5102               	movf	(_loRa+2)& (0+255),w,b
 23431  00134A  0BF0               	andlw	-16
 23432  00134C  0908               	iorlw	8
 23433  00134E  6F02               	movwf	(_loRa+2)& (0+255),b
 23434                           
 23435                           ; BSR set to: 2
 23436                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 23437  001350  EF62  F032         	goto	_LORAWAN_EnterContinuousReceive	;wreg free
 23438  001354                     l14954:
 23439                           
 23440                           ; BSR set to: 2
 23441                           ;lorawan_eu.c: 445: else
 23442                           ;lorawan_eu.c: 446: {
 23443                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 23444  001354  EC48  F03D         	call	_RADIO_GetStatus	;wreg free
 23445  001358  0100               	movlb	0	; () banked
 23446  00135A  6FA2               	movwf	??_LORAWAN_TxDone& (0+255),b
 23447  00135C  A9A2               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 23448  00135E  D00F               	goto	l14958
 23449                           
 23450                           ; BSR set to: 0
 23451                           ;lorawan_eu.c: 448: {
 23452                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 23453  001360  6B64               	clrf	RxDataDone@pData& (0+255),b
 23454  001362  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 23455  001364  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 23456  001366  0E02               	movlw	2
 23457  001368  6F67               	movwf	RxDataDone@status& (0+255),b
 23458  00136A  0005               	push	
 23459  00136C  6EFA               	movwf	pclath,c
 23460  00136E  0101               	movlb	1	; () banked
 23461  001370  5172               	movf	_rxPayload& (0+255),w,b
 23462  001372  6EFD               	movwf	tosl,c
 23463  001374  5173               	movf	(_rxPayload+1)& (0+255),w,b
 23464  001376  6EFE               	movwf	tosh,c
 23465  001378  6AFF               	clrf	tosu,c
 23466  00137A  50FA               	movf	pclath,w,c
 23467  00137C  0012               	return		;indir
 23468  00137E                     l14958:
 23469                           
 23470                           ; BSR set to: 0
 23471                           ;lorawan_eu.c: 452: else
 23472                           ;lorawan_eu.c: 453: {
 23473                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 23474  00137E  0101               	movlb	1	; () banked
 23475  001380  5172               	movf	_rxPayload& (0+255),w,b
 23476  001382  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 23477  001384  B4D8               	btfsc	status,2,c
 23478  001386  0012               	return	
 23479                           
 23480                           ; BSR set to: 1
 23481                           ;lorawan_eu.c: 456: {
 23482                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 23483  001388  0100               	movlb	0	; () banked
 23484  00138A  6B64               	clrf	RxDataDone@pData& (0+255),b
 23485  00138C  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 23486  00138E  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 23487  001390  0E03               	movlw	3
 23488  001392  6F67               	movwf	RxDataDone@status& (0+255),b
 23489  001394  0005               	push	
 23490  001396  6EFA               	movwf	pclath,c
 23491  001398  0101               	movlb	1	; () banked
 23492  00139A  5172               	movf	_rxPayload& (0+255),w,b
 23493  00139C  6EFD               	movwf	tosl,c
 23494  00139E  5173               	movf	(_rxPayload+1)& (0+255),w,b
 23495  0013A0  6EFE               	movwf	tosh,c
 23496  0013A2  6AFF               	clrf	tosu,c
 23497  0013A4  50FA               	movf	pclath,w,c
 23498  0013A6  0012               	return		;indir
 23499  0013A8                     __end_of_LORAWAN_TxDone:
 23500                           	opt stack 0
 23501                           tosu	equ	0xFFF
 23502                           tosh	equ	0xFFE
 23503                           tosl	equ	0xFFD
 23504                           pclath	equ	0xFFA
 23505                           tblptru	equ	0xFF8
 23506                           tblptrh	equ	0xFF7
 23507                           tblptrl	equ	0xFF6
 23508                           tablat	equ	0xFF5
 23509                           prodh	equ	0xFF4
 23510                           prodl	equ	0xFF3
 23511                           intcon	equ	0xFF2
 23512                           intcon2	equ	0xFF1
 23513                           intcon3	equ	0xFF0
 23514                           indf0	equ	0xFEF
 23515                           postinc0	equ	0xFEE
 23516                           fsr0h	equ	0xFEA
 23517                           fsr0l	equ	0xFE9
 23518                           wreg	equ	0xFE8
 23519                           postinc1	equ	0xFE6
 23520                           postdec1	equ	0xFE5
 23521                           plusw1	equ	0xFE3
 23522                           fsr1h	equ	0xFE2
 23523                           fsr1l	equ	0xFE1
 23524                           indf2	equ	0xFDF
 23525                           postinc2	equ	0xFDE
 23526                           postdec2	equ	0xFDD
 23527                           plusw2	equ	0xFDB
 23528                           fsr2h	equ	0xFDA
 23529                           fsr2l	equ	0xFD9
 23530                           status	equ	0xFD8
 23531                           
 23532 ;; *************** function _SwTimerReadValue *****************
 23533 ;; Defined at:
 23534 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 23535 ;; Parameters:    Size  Location     Type
 23536 ;;  timerId         1    wreg     unsigned char 
 23537 ;; Auto vars:     Size  Location     Type
 23538 ;;  timerId         1   53[BANK0 ] unsigned char 
 23539 ;;  ticksCount      4   49[BANK0 ] unsigned long 
 23540 ;; Return value:  Size  Location     Type
 23541 ;;                  4   45[BANK0 ] unsigned long 
 23542 ;; Registers used:
 23543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23544 ;; Tracked objects:
 23545 ;;		On entry : C/1
 23546 ;;		On exit  : F/0
 23547 ;;		Unchanged: 0/0
 23548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23549 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23550 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23552 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23553 ;;Total ram usage:        9 bytes
 23554 ;; Hardware stack levels used:    1
 23555 ;; Hardware stack levels required when called:   10
 23556 ;; This function calls:
 23557 ;;		_SwTimersInterrupt
 23558 ;; This function is called by:
 23559 ;;		_RADIO_TxDone
 23560 ;;		_RADIO_FSKPacketSent
 23561 ;;		_LORAWAN_TxDone
 23562 ;; This function uses a non-reentrant model
 23563 ;;
 23564                           
 23565                           	psect	text116
 23566  006EFE                     __ptext116:
 23567                           	opt stack 0
 23568  006EFE                     _SwTimerReadValue:
 23569                           	opt stack 16
 23570                           
 23571                           ;incstack = 0
 23572                           ;SwTimerReadValue@timerId stored from wreg
 23573  006EFE  0100               	movlb	0	; () banked
 23574  006F00  6F95               	movwf	SwTimerReadValue@timerId& (0+255),b
 23575                           
 23576                           ;sw_timer.c: 195: uint32_t ticksCount;
 23577                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 23578  006F02  9EF2               	bcf	intcon,7,c	;volatile
 23579                           
 23580                           ;sw_timer.c: 200: SwTimersInterrupt();
 23581  006F04  EC78  F027         	call	_SwTimersInterrupt	;wreg free
 23582                           
 23583                           ; BSR set to: 0
 23584                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 23585  006F08  5195               	movf	SwTimerReadValue@timerId& (0+255),w,b
 23586  006F0A  0D08               	mullw	8
 23587  006F0C  0E00               	movlw	low _swTimers
 23588  006F0E  24F3               	addwf	prodl,w,c
 23589  006F10  6ED9               	movwf	fsr2l,c
 23590  006F12  0E03               	movlw	high _swTimers
 23591  006F14  20F4               	addwfc	prodh,w,c
 23592  006F16  6EDA               	movwf	fsr2h,c
 23593  006F18  CFDE F091          	movff	postinc2,SwTimerReadValue@ticksCount
 23594  006F1C  CFDE F092          	movff	postinc2,SwTimerReadValue@ticksCount+1
 23595  006F20  CFDE F093          	movff	postinc2,SwTimerReadValue@ticksCount+2
 23596  006F24  CFDE F094          	movff	postinc2,SwTimerReadValue@ticksCount+3
 23597                           
 23598                           ; BSR set to: 0
 23599                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 23600  006F28  8EF2               	bsf	intcon,7,c	;volatile
 23601                           
 23602                           ; BSR set to: 0
 23603                           ;sw_timer.c: 204: return ticksCount;
 23604  006F2A  C091  F08D         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 23605  006F2E  C092  F08E         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 23606  006F32  C093  F08F         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 23607  006F36  C094  F090         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 23608                           
 23609                           ; BSR set to: 0
 23610  006F3A  0012               	return		;funcret
 23611  006F3C                     __end_of_SwTimerReadValue:
 23612                           	opt stack 0
 23613                           tosu	equ	0xFFF
 23614                           tosh	equ	0xFFE
 23615                           tosl	equ	0xFFD
 23616                           pclath	equ	0xFFA
 23617                           tblptru	equ	0xFF8
 23618                           tblptrh	equ	0xFF7
 23619                           tblptrl	equ	0xFF6
 23620                           tablat	equ	0xFF5
 23621                           prodh	equ	0xFF4
 23622                           prodl	equ	0xFF3
 23623                           intcon	equ	0xFF2
 23624                           intcon2	equ	0xFF1
 23625                           intcon3	equ	0xFF0
 23626                           indf0	equ	0xFEF
 23627                           postinc0	equ	0xFEE
 23628                           fsr0h	equ	0xFEA
 23629                           fsr0l	equ	0xFE9
 23630                           wreg	equ	0xFE8
 23631                           postinc1	equ	0xFE6
 23632                           postdec1	equ	0xFE5
 23633                           plusw1	equ	0xFE3
 23634                           fsr1h	equ	0xFE2
 23635                           fsr1l	equ	0xFE1
 23636                           indf2	equ	0xFDF
 23637                           postinc2	equ	0xFDE
 23638                           postdec2	equ	0xFDD
 23639                           plusw2	equ	0xFDB
 23640                           fsr2h	equ	0xFDA
 23641                           fsr2l	equ	0xFD9
 23642                           status	equ	0xFD8
 23643                           
 23644 ;; *************** function _SwTimerIsRunning *****************
 23645 ;; Defined at:
 23646 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 23647 ;; Parameters:    Size  Location     Type
 23648 ;;  timerId         1    wreg     unsigned char 
 23649 ;; Auto vars:     Size  Location     Type
 23650 ;;  timerId         1    4[BANK0 ] unsigned char 
 23651 ;;  isRunning       1    5[BANK0 ] unsigned char 
 23652 ;; Return value:  Size  Location     Type
 23653 ;;                  1    wreg      unsigned char 
 23654 ;; Registers used:
 23655 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 23656 ;; Tracked objects:
 23657 ;;		On entry : F/2
 23658 ;;		On exit  : F/0
 23659 ;;		Unchanged: 0/0
 23660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23661 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23662 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23664 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23665 ;;Total ram usage:        2 bytes
 23666 ;; Hardware stack levels used:    1
 23667 ;; Hardware stack levels required when called:    7
 23668 ;; This function calls:
 23669 ;;		Nothing
 23670 ;; This function is called by:
 23671 ;;		_LORAWAN_TxDone
 23672 ;; This function uses a non-reentrant model
 23673 ;;
 23674                           
 23675                           	psect	text117
 23676  0075E2                     __ptext117:
 23677                           	opt stack 0
 23678  0075E2                     _SwTimerIsRunning:
 23679                           	opt stack 19
 23680                           
 23681                           ; BSR set to: 0
 23682                           ;incstack = 0
 23683                           ;SwTimerIsRunning@timerId stored from wreg
 23684  0075E2  0100               	movlb	0	; () banked
 23685  0075E4  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 23686                           
 23687                           ;sw_timer.c: 209: uint8_t isRunning;
 23688                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 23689  0075E6  9EF2               	bcf	intcon,7,c	;volatile
 23690                           
 23691                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 23692  0075E8  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 23693  0075EA  0D08               	mullw	8
 23694  0075EC  0E04               	movlw	low (_swTimers+4)
 23695  0075EE  24F3               	addwf	prodl,w,c
 23696  0075F0  6ED9               	movwf	fsr2l,c
 23697  0075F2  0E03               	movlw	high (_swTimers+4)
 23698  0075F4  20F4               	addwfc	prodh,w,c
 23699  0075F6  6EDA               	movwf	fsr2h,c
 23700  0075F8  50DF               	movf	indf2,w,c
 23701  0075FA  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 23702                           
 23703                           ; BSR set to: 0
 23704                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 23705  0075FC  8EF2               	bsf	intcon,7,c	;volatile
 23706                           
 23707                           ; BSR set to: 0
 23708                           ;sw_timer.c: 215: return isRunning;
 23709  0075FE  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 23710                           
 23711                           ; BSR set to: 0
 23712  007600  0012               	return		;funcret
 23713  007602                     __end_of_SwTimerIsRunning:
 23714                           	opt stack 0
 23715                           tosu	equ	0xFFF
 23716                           tosh	equ	0xFFE
 23717                           tosl	equ	0xFFD
 23718                           pclath	equ	0xFFA
 23719                           tblptru	equ	0xFF8
 23720                           tblptrh	equ	0xFF7
 23721                           tblptrl	equ	0xFF6
 23722                           tablat	equ	0xFF5
 23723                           prodh	equ	0xFF4
 23724                           prodl	equ	0xFF3
 23725                           intcon	equ	0xFF2
 23726                           intcon2	equ	0xFF1
 23727                           intcon3	equ	0xFF0
 23728                           indf0	equ	0xFEF
 23729                           postinc0	equ	0xFEE
 23730                           fsr0h	equ	0xFEA
 23731                           fsr0l	equ	0xFE9
 23732                           wreg	equ	0xFE8
 23733                           postinc1	equ	0xFE6
 23734                           postdec1	equ	0xFE5
 23735                           plusw1	equ	0xFE3
 23736                           fsr1h	equ	0xFE2
 23737                           fsr1l	equ	0xFE1
 23738                           indf2	equ	0xFDF
 23739                           postinc2	equ	0xFDE
 23740                           postdec2	equ	0xFDD
 23741                           plusw2	equ	0xFDB
 23742                           fsr2h	equ	0xFDA
 23743                           fsr2l	equ	0xFD9
 23744                           status	equ	0xFD8
 23745                           
 23746 ;; *************** function _RADIO_GetStatus *****************
 23747 ;; Defined at:
 23748 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 23749 ;; Parameters:    Size  Location     Type
 23750 ;;		None
 23751 ;; Auto vars:     Size  Location     Type
 23752 ;;		None
 23753 ;; Return value:  Size  Location     Type
 23754 ;;                  1    wreg      unsigned char 
 23755 ;; Registers used:
 23756 ;;		wreg, status,2
 23757 ;; Tracked objects:
 23758 ;;		On entry : C/2
 23759 ;;		On exit  : F/1
 23760 ;;		Unchanged: 0/0
 23761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23764 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23765 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23766 ;;Total ram usage:        0 bytes
 23767 ;; Hardware stack levels used:    1
 23768 ;; Hardware stack levels required when called:    7
 23769 ;; This function calls:
 23770 ;;		Nothing
 23771 ;; This function is called by:
 23772 ;;		_LORAWAN_TxDone
 23773 ;;		_LORAWAN_ReceiveWindow2Callback
 23774 ;;		_LORAWAN_RxDone
 23775 ;; This function uses a non-reentrant model
 23776 ;;
 23777                           
 23778                           	psect	text118
 23779  007A90                     __ptext118:
 23780                           	opt stack 0
 23781  007A90                     _RADIO_GetStatus:
 23782                           	opt stack 19
 23783                           
 23784                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 23785                           
 23786                           ; BSR set to: 0
 23787                           ;incstack = 0
 23788  007A90  0101               	movlb	1	; () banked
 23789  007A92  519C               	movf	(_RadioConfiguration+35)& (0+255),w,b
 23790                           
 23791                           ; BSR set to: 1
 23792  007A94  0012               	return		;funcret
 23793  007A96                     __end_of_RADIO_GetStatus:
 23794                           	opt stack 0
 23795                           tosu	equ	0xFFF
 23796                           tosh	equ	0xFFE
 23797                           tosl	equ	0xFFD
 23798                           pclath	equ	0xFFA
 23799                           tblptru	equ	0xFF8
 23800                           tblptrh	equ	0xFF7
 23801                           tblptrl	equ	0xFF6
 23802                           tablat	equ	0xFF5
 23803                           prodh	equ	0xFF4
 23804                           prodl	equ	0xFF3
 23805                           intcon	equ	0xFF2
 23806                           intcon2	equ	0xFF1
 23807                           intcon3	equ	0xFF0
 23808                           indf0	equ	0xFEF
 23809                           postinc0	equ	0xFEE
 23810                           fsr0h	equ	0xFEA
 23811                           fsr0l	equ	0xFE9
 23812                           wreg	equ	0xFE8
 23813                           postinc1	equ	0xFE6
 23814                           postdec1	equ	0xFE5
 23815                           plusw1	equ	0xFE3
 23816                           fsr1h	equ	0xFE2
 23817                           fsr1l	equ	0xFE1
 23818                           indf2	equ	0xFDF
 23819                           postinc2	equ	0xFDE
 23820                           postdec2	equ	0xFDD
 23821                           plusw2	equ	0xFDB
 23822                           fsr2h	equ	0xFDA
 23823                           fsr2l	equ	0xFD9
 23824                           status	equ	0xFD8
 23825                           
 23826 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 23827 ;; Defined at:
 23828 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23829 ;; Parameters:    Size  Location     Type
 23830 ;;		None
 23831 ;; Auto vars:     Size  Location     Type
 23832 ;;		None
 23833 ;; Return value:  Size  Location     Type
 23834 ;;                  1    wreg      void 
 23835 ;; Registers used:
 23836 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23837 ;; Tracked objects:
 23838 ;;		On entry : F/2
 23839 ;;		On exit  : E/0
 23840 ;;		Unchanged: 0/0
 23841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23846 ;;Total ram usage:        0 bytes
 23847 ;; Hardware stack levels used:    1
 23848 ;; Hardware stack levels required when called:   13
 23849 ;; This function calls:
 23850 ;;		_ConfigureRadioRx
 23851 ;;		_RADIO_ReceiveStart
 23852 ;;		_RADIO_ReceiveStop
 23853 ;;		_RADIO_ReleaseData
 23854 ;;		_ResetParametersForConfirmedTransmission
 23855 ;;		_ResetParametersForUnconfirmedTransmission
 23856 ;;		_RxDataDone
 23857 ;; This function is called by:
 23858 ;;		_LORAWAN_TxDone
 23859 ;;		_LORAWAN_ReceiveWindow2Callback
 23860 ;;		_LORAWAN_RxDone
 23861 ;;		_SetReceptionNotOkState
 23862 ;; This function uses a non-reentrant model
 23863 ;;
 23864                           
 23865                           	psect	text119
 23866  0064C4                     __ptext119:
 23867                           	opt stack 0
 23868  0064C4                     _LORAWAN_EnterContinuousReceive:
 23869                           	opt stack 13
 23870                           
 23871                           ; BSR set to: 2
 23872                           ;lorawan.c: 917: RADIO_ReceiveStop();
 23873                           
 23874                           ; BSR set to: 1
 23875                           ;incstack = 0
 23876  0064C4  EC2E  F03B         	call	_RADIO_ReceiveStop	;wreg free
 23877                           
 23878                           ; BSR set to: 1
 23879                           ;lorawan.c: 918: RADIO_ReleaseData();
 23880  0064C8  EC4B  F03D         	call	_RADIO_ReleaseData	;wreg free
 23881                           
 23882                           ; BSR set to: 1
 23883                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 23884  0064CC  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 23885  0064D0  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 23886  0064D4  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 23887  0064D8  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 23888  0064DC  0102               	movlb	2	; () banked
 23889  0064DE  511C               	movf	(_loRa+28)& (0+255),w,b
 23890  0064E0  EC2E  F03A         	call	_ConfigureRadioRx
 23891                           
 23892                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 23893  0064E4  0100               	movlb	0	; () banked
 23894  0064E6  6B97               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 23895  0064E8  6B96               	clrf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 23896  0064EA  EC08  F016         	call	_RADIO_ReceiveStart	;wreg free
 23897  0064EE  5196               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 23898  0064F0  1197               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 23899  0064F2  B4D8               	btfsc	status,2,c
 23900  0064F4  0012               	return	
 23901                           
 23902                           ; BSR set to: 0
 23903                           ;lorawan.c: 923: {
 23904                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 23905  0064F6  ECA3  F03C         	call	_ResetParametersForConfirmedTransmission	;wreg free
 23906                           
 23907                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 23908  0064FA  EC9C  F03C         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 23909                           
 23910                           ; BSR set to: 2
 23911                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 23912  0064FE  0EF0               	movlw	-16
 23913  006500  1702               	andwf	(_loRa+2)& (0+255),f,b
 23914                           
 23915                           ; BSR set to: 2
 23916                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 23917  006502  0101               	movlb	1	; () banked
 23918  006504  5172               	movf	_rxPayload& (0+255),w,b
 23919  006506  1173               	iorwf	(_rxPayload+1)& (0+255),w,b
 23920  006508  B4D8               	btfsc	status,2,c
 23921  00650A  0012               	return	
 23922                           
 23923                           ; BSR set to: 1
 23924                           ;lorawan.c: 928: {
 23925                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 23926  00650C  0100               	movlb	0	; () banked
 23927  00650E  6B64               	clrf	RxDataDone@pData& (0+255),b
 23928  006510  6B65               	clrf	(RxDataDone@pData+1)& (0+255),b
 23929  006512  6B66               	clrf	RxDataDone@dataLength& (0+255),b
 23930  006514  6B67               	clrf	RxDataDone@status& (0+255),b
 23931  006516  0005               	push	
 23932  006518  6AFA               	clrf	pclath,c
 23933  00651A  0101               	movlb	1	; () banked
 23934  00651C  5172               	movf	_rxPayload& (0+255),w,b
 23935  00651E  6EFD               	movwf	tosl,c
 23936  006520  5173               	movf	(_rxPayload+1)& (0+255),w,b
 23937  006522  6EFE               	movwf	tosh,c
 23938  006524  6AFF               	clrf	tosu,c
 23939  006526  50FA               	movf	pclath,w,c
 23940  006528  0012               	return		;indir
 23941  00652A                     __end_of_LORAWAN_EnterContinuousReceive:
 23942                           	opt stack 0
 23943                           tosu	equ	0xFFF
 23944                           tosh	equ	0xFFE
 23945                           tosl	equ	0xFFD
 23946                           pclath	equ	0xFFA
 23947                           tblptru	equ	0xFF8
 23948                           tblptrh	equ	0xFF7
 23949                           tblptrl	equ	0xFF6
 23950                           tablat	equ	0xFF5
 23951                           prodh	equ	0xFF4
 23952                           prodl	equ	0xFF3
 23953                           intcon	equ	0xFF2
 23954                           intcon2	equ	0xFF1
 23955                           intcon3	equ	0xFF0
 23956                           indf0	equ	0xFEF
 23957                           postinc0	equ	0xFEE
 23958                           fsr0h	equ	0xFEA
 23959                           fsr0l	equ	0xFE9
 23960                           wreg	equ	0xFE8
 23961                           postinc1	equ	0xFE6
 23962                           postdec1	equ	0xFE5
 23963                           plusw1	equ	0xFE3
 23964                           fsr1h	equ	0xFE2
 23965                           fsr1l	equ	0xFE1
 23966                           indf2	equ	0xFDF
 23967                           postinc2	equ	0xFDE
 23968                           postdec2	equ	0xFDD
 23969                           plusw2	equ	0xFDB
 23970                           fsr2h	equ	0xFDA
 23971                           fsr2l	equ	0xFD9
 23972                           status	equ	0xFD8
 23973                           
 23974 ;; *************** function _RxDataDone *****************
 23975 ;; Defined at:
 23976 ;;		line 91 in file "main.c"
 23977 ;; Parameters:    Size  Location     Type
 23978 ;;  pData           2    4[BANK0 ] PTR unsigned char 
 23979 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 23980 ;;  dataLength      1    6[BANK0 ] unsigned char 
 23981 ;;  status          1    7[BANK0 ] enum E8173
 23982 ;; Auto vars:     Size  Location     Type
 23983 ;;		None
 23984 ;; Return value:  Size  Location     Type
 23985 ;;                  1    wreg      void 
 23986 ;; Registers used:
 23987 ;;		None
 23988 ;; Tracked objects:
 23989 ;;		On entry : F/1
 23990 ;;		On exit  : F/1
 23991 ;;		Unchanged: F/0
 23992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23993 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23996 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23997 ;;Total ram usage:        4 bytes
 23998 ;; Hardware stack levels used:    1
 23999 ;; Hardware stack levels required when called:    7
 24000 ;; This function calls:
 24001 ;;		Nothing
 24002 ;; This function is called by:
 24003 ;;		_main
 24004 ;;		_LORAWAN_EnterContinuousReceive
 24005 ;;		_LORAWAN_ReceiveWindow2Callback
 24006 ;;		_SetReceptionNotOkState
 24007 ;;		_LORAWAN_RxDone
 24008 ;;		_LORAWAN_RxTimeout
 24009 ;;		_LORAWAN_TxDone
 24010 ;;		_AckRetransmissionCallback
 24011 ;;		_UnconfirmedTransmissionCallback
 24012 ;; This function uses a non-reentrant model
 24013 ;;
 24014                           
 24015                           	psect	text120
 24016  007ADC                     __ptext120:
 24017                           	opt stack 0
 24018  007ADC                     _RxDataDone:
 24019                           	opt stack 20
 24020                           
 24021                           ; BSR set to: 1
 24022                           
 24023                           ;incstack = 0
 24024  007ADC  0012               	return		;funcret
 24025  007ADE                     __end_of_RxDataDone:
 24026                           	opt stack 0
 24027                           tosu	equ	0xFFF
 24028                           tosh	equ	0xFFE
 24029                           tosl	equ	0xFFD
 24030                           pclath	equ	0xFFA
 24031                           tblptru	equ	0xFF8
 24032                           tblptrh	equ	0xFF7
 24033                           tblptrl	equ	0xFF6
 24034                           tablat	equ	0xFF5
 24035                           prodh	equ	0xFF4
 24036                           prodl	equ	0xFF3
 24037                           intcon	equ	0xFF2
 24038                           intcon2	equ	0xFF1
 24039                           intcon3	equ	0xFF0
 24040                           indf0	equ	0xFEF
 24041                           postinc0	equ	0xFEE
 24042                           fsr0h	equ	0xFEA
 24043                           fsr0l	equ	0xFE9
 24044                           wreg	equ	0xFE8
 24045                           postinc1	equ	0xFE6
 24046                           postdec1	equ	0xFE5
 24047                           plusw1	equ	0xFE3
 24048                           fsr1h	equ	0xFE2
 24049                           fsr1l	equ	0xFE1
 24050                           indf2	equ	0xFDF
 24051                           postinc2	equ	0xFDE
 24052                           postdec2	equ	0xFDD
 24053                           plusw2	equ	0xFDB
 24054                           fsr2h	equ	0xFDA
 24055                           fsr2l	equ	0xFD9
 24056                           status	equ	0xFD8
 24057                           
 24058 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 24059 ;; Defined at:
 24060 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24061 ;; Parameters:    Size  Location     Type
 24062 ;;		None
 24063 ;; Auto vars:     Size  Location     Type
 24064 ;;		None
 24065 ;; Return value:  Size  Location     Type
 24066 ;;                  1    wreg      void 
 24067 ;; Registers used:
 24068 ;;		wreg, status,2
 24069 ;; Tracked objects:
 24070 ;;		On entry : D/0
 24071 ;;		On exit  : F/2
 24072 ;;		Unchanged: 0/0
 24073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24078 ;;Total ram usage:        0 bytes
 24079 ;; Hardware stack levels used:    1
 24080 ;; Hardware stack levels required when called:    7
 24081 ;; This function calls:
 24082 ;;		Nothing
 24083 ;; This function is called by:
 24084 ;;		_LORAWAN_RxTimeout
 24085 ;;		_LORAWAN_ReceiveWindow2Callback
 24086 ;;		_LORAWAN_EnterContinuousReceive
 24087 ;;		_UnconfirmedTransmissionCallback
 24088 ;; This function uses a non-reentrant model
 24089 ;;
 24090                           
 24091                           	psect	text121
 24092  007938                     __ptext121:
 24093                           	opt stack 0
 24094  007938                     _ResetParametersForUnconfirmedTransmission:
 24095                           	opt stack 20
 24096                           
 24097                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 24098                           
 24099                           ; BSR set to: 1
 24100                           ;incstack = 0
 24101  007938  0EF0               	movlw	-16
 24102  00793A  0102               	movlb	2	; () banked
 24103  00793C  1702               	andwf	(_loRa+2)& (0+255),f,b
 24104                           
 24105                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 24106  00793E  0E01               	movlw	1
 24107  007940  6FD8               	movwf	(_loRa+216)& (0+255),b
 24108                           
 24109                           ; BSR set to: 2
 24110                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 24111  007942  6BA7               	clrf	(_loRa+167)& (0+255),b
 24112                           
 24113                           ; BSR set to: 2
 24114  007944  0012               	return		;funcret
 24115  007946                     __end_of_ResetParametersForUnconfirmedTransmission:
 24116                           	opt stack 0
 24117                           tosu	equ	0xFFF
 24118                           tosh	equ	0xFFE
 24119                           tosl	equ	0xFFD
 24120                           pclath	equ	0xFFA
 24121                           tblptru	equ	0xFF8
 24122                           tblptrh	equ	0xFF7
 24123                           tblptrl	equ	0xFF6
 24124                           tablat	equ	0xFF5
 24125                           prodh	equ	0xFF4
 24126                           prodl	equ	0xFF3
 24127                           intcon	equ	0xFF2
 24128                           intcon2	equ	0xFF1
 24129                           intcon3	equ	0xFF0
 24130                           indf0	equ	0xFEF
 24131                           postinc0	equ	0xFEE
 24132                           fsr0h	equ	0xFEA
 24133                           fsr0l	equ	0xFE9
 24134                           wreg	equ	0xFE8
 24135                           postinc1	equ	0xFE6
 24136                           postdec1	equ	0xFE5
 24137                           plusw1	equ	0xFE3
 24138                           fsr1h	equ	0xFE2
 24139                           fsr1l	equ	0xFE1
 24140                           indf2	equ	0xFDF
 24141                           postinc2	equ	0xFDE
 24142                           postdec2	equ	0xFDD
 24143                           plusw2	equ	0xFDB
 24144                           fsr2h	equ	0xFDA
 24145                           fsr2l	equ	0xFD9
 24146                           status	equ	0xFD8
 24147                           
 24148 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 24149 ;; Defined at:
 24150 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24151 ;; Parameters:    Size  Location     Type
 24152 ;;		None
 24153 ;; Auto vars:     Size  Location     Type
 24154 ;;		None
 24155 ;; Return value:  Size  Location     Type
 24156 ;;                  1    wreg      void 
 24157 ;; Registers used:
 24158 ;;		wreg, status,2
 24159 ;; Tracked objects:
 24160 ;;		On entry : D/2
 24161 ;;		On exit  : F/2
 24162 ;;		Unchanged: 0/0
 24163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24168 ;;Total ram usage:        0 bytes
 24169 ;; Hardware stack levels used:    1
 24170 ;; Hardware stack levels required when called:    7
 24171 ;; This function calls:
 24172 ;;		Nothing
 24173 ;; This function is called by:
 24174 ;;		_LORAWAN_RxTimeout
 24175 ;;		_LORAWAN_ReceiveWindow2Callback
 24176 ;;		_LORAWAN_EnterContinuousReceive
 24177 ;;		_AckRetransmissionCallback
 24178 ;; This function uses a non-reentrant model
 24179 ;;
 24180                           
 24181                           	psect	text122
 24182  007946                     __ptext122:
 24183                           	opt stack 0
 24184  007946                     _ResetParametersForConfirmedTransmission:
 24185                           	opt stack 18
 24186                           
 24187                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 24188                           
 24189                           ; BSR set to: 2
 24190                           ;incstack = 0
 24191  007946  0EF0               	movlw	-16
 24192  007948  0102               	movlb	2	; () banked
 24193  00794A  1702               	andwf	(_loRa+2)& (0+255),f,b
 24194                           
 24195                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 24196  00794C  0E01               	movlw	1
 24197  00794E  6FD9               	movwf	(_loRa+217)& (0+255),b
 24198                           
 24199                           ; BSR set to: 2
 24200                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 24201  007950  9100               	bcf	_loRa& (0+255),0,b
 24202                           
 24203                           ; BSR set to: 2
 24204  007952  0C01               	retlw	1	;funcret
 24205  007954                     __end_of_ResetParametersForConfirmedTransmission:
 24206                           	opt stack 0
 24207                           tosu	equ	0xFFF
 24208                           tosh	equ	0xFFE
 24209                           tosl	equ	0xFFD
 24210                           pclath	equ	0xFFA
 24211                           tblptru	equ	0xFF8
 24212                           tblptrh	equ	0xFF7
 24213                           tblptrl	equ	0xFF6
 24214                           tablat	equ	0xFF5
 24215                           prodh	equ	0xFF4
 24216                           prodl	equ	0xFF3
 24217                           intcon	equ	0xFF2
 24218                           intcon2	equ	0xFF1
 24219                           intcon3	equ	0xFF0
 24220                           indf0	equ	0xFEF
 24221                           postinc0	equ	0xFEE
 24222                           fsr0h	equ	0xFEA
 24223                           fsr0l	equ	0xFE9
 24224                           wreg	equ	0xFE8
 24225                           postinc1	equ	0xFE6
 24226                           postdec1	equ	0xFE5
 24227                           plusw1	equ	0xFE3
 24228                           fsr1h	equ	0xFE2
 24229                           fsr1l	equ	0xFE1
 24230                           indf2	equ	0xFDF
 24231                           postinc2	equ	0xFDE
 24232                           postdec2	equ	0xFDD
 24233                           plusw2	equ	0xFDB
 24234                           fsr2h	equ	0xFDA
 24235                           fsr2l	equ	0xFD9
 24236                           status	equ	0xFD8
 24237                           
 24238 ;; *************** function _RADIO_ReleaseData *****************
 24239 ;; Defined at:
 24240 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24241 ;; Parameters:    Size  Location     Type
 24242 ;;		None
 24243 ;; Auto vars:     Size  Location     Type
 24244 ;;		None
 24245 ;; Return value:  Size  Location     Type
 24246 ;;                  1    wreg      void 
 24247 ;; Registers used:
 24248 ;;		status,2, status,0
 24249 ;; Tracked objects:
 24250 ;;		On entry : C/2
 24251 ;;		On exit  : F/1
 24252 ;;		Unchanged: 0/0
 24253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24256 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24257 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24258 ;;Total ram usage:        0 bytes
 24259 ;; Hardware stack levels used:    1
 24260 ;; Hardware stack levels required when called:    7
 24261 ;; This function calls:
 24262 ;;		Nothing
 24263 ;; This function is called by:
 24264 ;;		_LORAWAN_ReceiveWindow1Callback
 24265 ;;		_LORAWAN_ReceiveWindow2Callback
 24266 ;;		_LORAWAN_EnterContinuousReceive
 24267 ;;		_LORAWAN_RxDone
 24268 ;; This function uses a non-reentrant model
 24269 ;;
 24270                           
 24271                           	psect	text123
 24272  007A96                     __ptext123:
 24273                           	opt stack 0
 24274  007A96                     _RADIO_ReleaseData:
 24275                           	opt stack 18
 24276                           
 24277                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 24278                           
 24279                           ; BSR set to: 2
 24280                           ;incstack = 0
 24281  007A96  0101               	movlb	1	; () banked
 24282  007A98  959C               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 24283                           
 24284                           ; BSR set to: 1
 24285  007A9A  0012               	return		;funcret
 24286  007A9C                     __end_of_RADIO_ReleaseData:
 24287                           	opt stack 0
 24288                           tosu	equ	0xFFF
 24289                           tosh	equ	0xFFE
 24290                           tosl	equ	0xFFD
 24291                           pclath	equ	0xFFA
 24292                           tblptru	equ	0xFF8
 24293                           tblptrh	equ	0xFF7
 24294                           tblptrl	equ	0xFF6
 24295                           tablat	equ	0xFF5
 24296                           prodh	equ	0xFF4
 24297                           prodl	equ	0xFF3
 24298                           intcon	equ	0xFF2
 24299                           intcon2	equ	0xFF1
 24300                           intcon3	equ	0xFF0
 24301                           indf0	equ	0xFEF
 24302                           postinc0	equ	0xFEE
 24303                           fsr0h	equ	0xFEA
 24304                           fsr0l	equ	0xFE9
 24305                           wreg	equ	0xFE8
 24306                           postinc1	equ	0xFE6
 24307                           postdec1	equ	0xFE5
 24308                           plusw1	equ	0xFE3
 24309                           fsr1h	equ	0xFE2
 24310                           fsr1l	equ	0xFE1
 24311                           indf2	equ	0xFDF
 24312                           postinc2	equ	0xFDE
 24313                           postdec2	equ	0xFDD
 24314                           plusw2	equ	0xFDB
 24315                           fsr2h	equ	0xFDA
 24316                           fsr2l	equ	0xFD9
 24317                           status	equ	0xFD8
 24318                           
 24319 ;; *************** function _RADIO_ReceiveStop *****************
 24320 ;; Defined at:
 24321 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24322 ;; Parameters:    Size  Location     Type
 24323 ;;		None
 24324 ;; Auto vars:     Size  Location     Type
 24325 ;;		None
 24326 ;; Return value:  Size  Location     Type
 24327 ;;                  1    wreg      void 
 24328 ;; Registers used:
 24329 ;;		wreg, status,2, status,0, cstack
 24330 ;; Tracked objects:
 24331 ;;		On entry : F/2
 24332 ;;		On exit  : F/1
 24333 ;;		Unchanged: 0/0
 24334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24335 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24336 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24338 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24339 ;;Total ram usage:        0 bytes
 24340 ;; Hardware stack levels used:    1
 24341 ;; Hardware stack levels required when called:   11
 24342 ;; This function calls:
 24343 ;;		_RADIO_WriteMode
 24344 ;; This function is called by:
 24345 ;;		_LORAWAN_Send
 24346 ;;		_LORAWAN_ReceiveWindow1Callback
 24347 ;;		_LORAWAN_ReceiveWindow2Callback
 24348 ;;		_LORAWAN_EnterContinuousReceive
 24349 ;; This function uses a non-reentrant model
 24350 ;;
 24351                           
 24352                           	psect	text124
 24353  00765C                     __ptext124:
 24354                           	opt stack 0
 24355  00765C                     _RADIO_ReceiveStop:
 24356                           	opt stack 17
 24357                           
 24358                           ; BSR set to: 2
 24359                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 24360                           
 24361                           ; BSR set to: 1
 24362                           ;incstack = 0
 24363  00765C  0E02               	movlw	2
 24364  00765E  0101               	movlb	1	; () banked
 24365  007660  199C               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 24366  007662  A4D8               	btfss	status,2,c
 24367  007664  0012               	return	
 24368                           
 24369                           ; BSR set to: 1
 24370                           ;radio_driver_SX1276.c: 954: {
 24371                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 24372  007666  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24373  00766A  0E00               	movlw	0
 24374  00766C  0100               	movlb	0	; () banked
 24375  00766E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24376  007670  ECB9  F029         	call	_RADIO_WriteMode
 24377                           
 24378                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 24379  007674  0101               	movlb	1	; () banked
 24380  007676  939C               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 24381                           
 24382                           ; BSR set to: 1
 24383  007678  0012               	return		;funcret
 24384  00767A                     __end_of_RADIO_ReceiveStop:
 24385                           	opt stack 0
 24386                           tosu	equ	0xFFF
 24387                           tosh	equ	0xFFE
 24388                           tosl	equ	0xFFD
 24389                           pclath	equ	0xFFA
 24390                           tblptru	equ	0xFF8
 24391                           tblptrh	equ	0xFF7
 24392                           tblptrl	equ	0xFF6
 24393                           tablat	equ	0xFF5
 24394                           prodh	equ	0xFF4
 24395                           prodl	equ	0xFF3
 24396                           intcon	equ	0xFF2
 24397                           intcon2	equ	0xFF1
 24398                           intcon3	equ	0xFF0
 24399                           indf0	equ	0xFEF
 24400                           postinc0	equ	0xFEE
 24401                           fsr0h	equ	0xFEA
 24402                           fsr0l	equ	0xFE9
 24403                           wreg	equ	0xFE8
 24404                           postinc1	equ	0xFE6
 24405                           postdec1	equ	0xFE5
 24406                           plusw1	equ	0xFE3
 24407                           fsr1h	equ	0xFE2
 24408                           fsr1l	equ	0xFE1
 24409                           indf2	equ	0xFDF
 24410                           postinc2	equ	0xFDE
 24411                           postdec2	equ	0xFDD
 24412                           plusw2	equ	0xFDB
 24413                           fsr2h	equ	0xFDA
 24414                           fsr2l	equ	0xFD9
 24415                           status	equ	0xFD8
 24416                           
 24417 ;; *************** function _RADIO_ReceiveStart *****************
 24418 ;; Defined at:
 24419 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24420 ;; Parameters:    Size  Location     Type
 24421 ;;  rxWindowSize    2   54[BANK0 ] unsigned int 
 24422 ;; Auto vars:     Size  Location     Type
 24423 ;;		None
 24424 ;; Return value:  Size  Location     Type
 24425 ;;                  2   54[BANK0 ] enum E7805
 24426 ;; Registers used:
 24427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24428 ;; Tracked objects:
 24429 ;;		On entry : F/0
 24430 ;;		On exit  : F/0
 24431 ;;		Unchanged: 0/0
 24432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24433 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24434 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24435 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24436 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24437 ;;Total ram usage:       10 bytes
 24438 ;; Hardware stack levels used:    1
 24439 ;; Hardware stack levels required when called:   12
 24440 ;; This function calls:
 24441 ;;		_RADIO_RegisterWrite
 24442 ;;		_RADIO_WriteConfiguration
 24443 ;;		_RADIO_WriteMode
 24444 ;;		_SwTimerSetTimeout
 24445 ;;		_SwTimerStart
 24446 ;;		___lldiv
 24447 ;; This function is called by:
 24448 ;;		_LORAWAN_ReceiveWindow1Callback
 24449 ;;		_LORAWAN_ReceiveWindow2Callback
 24450 ;;		_LORAWAN_EnterContinuousReceive
 24451 ;; This function uses a non-reentrant model
 24452 ;;
 24453                           
 24454                           	psect	text125
 24455  002C10                     __ptext125:
 24456                           	opt stack 0
 24457  002C10                     _RADIO_ReceiveStart:
 24458                           	opt stack 13
 24459                           
 24460                           ; BSR set to: 0
 24461                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 24462                           
 24463                           ; BSR set to: 1
 24464                           ;incstack = 0
 24465  002C10  0101               	movlb	1	; () banked
 24466  002C12  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 24467  002C14  D006               	goto	l12960
 24468                           
 24469                           ; BSR set to: 1
 24470                           ;radio_driver_SX1276.c: 878: {
 24471                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 24472  002C16  0E80               	movlw	128
 24473  002C18  0100               	movlb	0	; () banked
 24474  002C1A  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24475  002C1C  0E03               	movlw	3
 24476  002C1E  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 24477  002C20  0C03               	retlw	3
 24478  002C22                     l12960:
 24479                           
 24480                           ; BSR set to: 1
 24481                           ;radio_driver_SX1276.c: 880: }
 24482                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 24483  002C22  C19C  F098         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 24484  002C26  0E03               	movlw	3
 24485  002C28  0100               	movlb	0	; () banked
 24486  002C2A  1798               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 24487  002C2C  E005               	bz	l12966
 24488                           
 24489                           ; BSR set to: 0
 24490                           ;radio_driver_SX1276.c: 883: {
 24491                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 24492  002C2E  0E80               	movlw	128
 24493  002C30  6F97               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24494  002C32  0E04               	movlw	4
 24495  002C34  6F96               	movwf	?_RADIO_ReceiveStart& (0+255),b
 24496  002C36  0C04               	retlw	4
 24497  002C38                     l12966:
 24498                           
 24499                           ; BSR set to: 0
 24500                           ;radio_driver_SX1276.c: 885: }
 24501                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 24502  002C38  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24503  002C3A  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24504  002C3C  E107               	bnz	l12970
 24505                           
 24506                           ; BSR set to: 0
 24507                           ;radio_driver_SX1276.c: 888: {
 24508                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 24509  002C3E  0E00               	movlw	0
 24510  002C40  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 24511  002C42  0E04               	movlw	4
 24512  002C44  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 24513  002C46  ECD4  F009         	call	_RADIO_WriteConfiguration	;wreg free
 24514                           
 24515                           ;radio_driver_SX1276.c: 890: }
 24516  002C4A  D006               	goto	l12972
 24517  002C4C                     l12970:
 24518                           
 24519                           ; BSR set to: 0
 24520                           ;radio_driver_SX1276.c: 891: else
 24521                           ;radio_driver_SX1276.c: 892: {
 24522                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 24523  002C4C  C096  F07D         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 24524  002C50  C097  F07E         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 24525  002C54  ECD4  F009         	call	_RADIO_WriteConfiguration	;wreg free
 24526  002C58                     l12972:
 24527                           
 24528                           ;radio_driver_SX1276.c: 894: }
 24529                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 24530  002C58  0101               	movlb	1	; () banked
 24531  002C5A  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 24532  002C5C  E111               	bnz	l12976
 24533                           
 24534                           ; BSR set to: 1
 24535                           ;radio_driver_SX1276.c: 897: {
 24536                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 24537  002C5E  0E01               	movlw	1
 24538  002C60  0100               	movlb	0	; () banked
 24539  002C62  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 24540  002C64  0E22               	movlw	34
 24541  002C66  EC3D  F03B         	call	_RADIO_RegisterWrite
 24542                           
 24543                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 24544  002C6A  0100               	movlb	0	; () banked
 24545  002C6C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 24546  002C6E  0E40               	movlw	64
 24547  002C70  EC3D  F03B         	call	_RADIO_RegisterWrite
 24548                           
 24549                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 24550  002C74  0100               	movlb	0	; () banked
 24551  002C76  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 24552  002C78  0E41               	movlw	65
 24553  002C7A  EC3D  F03B         	call	_RADIO_RegisterWrite
 24554                           
 24555                           ;radio_driver_SX1276.c: 908: }
 24556  002C7E  D014               	goto	l12978
 24557  002C80                     l12976:
 24558                           
 24559                           ; BSR set to: 1
 24560                           ;radio_driver_SX1276.c: 909: else
 24561                           ;radio_driver_SX1276.c: 910: {
 24562                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 24563  002C80  C1AD  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 24564  002C84  0E12               	movlw	18
 24565  002C86  EC3D  F03B         	call	_RADIO_RegisterWrite
 24566                           
 24567                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 24568  002C8A  C1AE  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 24569  002C8E  0E13               	movlw	19
 24570  002C90  EC3D  F03B         	call	_RADIO_RegisterWrite
 24571                           
 24572                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 24573  002C94  0100               	movlb	0	; () banked
 24574  002C96  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 24575  002C98  0E40               	movlw	64
 24576  002C9A  EC3D  F03B         	call	_RADIO_RegisterWrite
 24577                           
 24578                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 24579  002C9E  0100               	movlb	0	; () banked
 24580  002CA0  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 24581  002CA2  0E41               	movlw	65
 24582  002CA4  EC3D  F03B         	call	_RADIO_RegisterWrite
 24583  002CA8                     l12978:
 24584                           
 24585                           ;radio_driver_SX1276.c: 917: }
 24586                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 24587  002CA8  0101               	movlb	1	; () banked
 24588  002CAA  839C               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 24589                           
 24590                           ; BSR set to: 1
 24591                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 24592  002CAC  0EE7               	movlw	231
 24593  002CAE  179C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 24594                           
 24595                           ; BSR set to: 1
 24596                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 24597  002CB0  0100               	movlb	0	; () banked
 24598  002CB2  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24599  002CB4  1197               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24600  002CB6  E108               	bnz	l12986
 24601                           
 24602                           ; BSR set to: 0
 24603                           ;radio_driver_SX1276.c: 925: {
 24604                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 24605  002CB8  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24606  002CBC  0E00               	movlw	0
 24607  002CBE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24608  002CC0  0E05               	movlw	5
 24609  002CC2  ECB9  F029         	call	_RADIO_WriteMode
 24610                           
 24611                           ;radio_driver_SX1276.c: 927: }
 24612  002CC6  D041               	goto	l12996
 24613  002CC8                     l12986:
 24614                           
 24615                           ; BSR set to: 0
 24616                           ;radio_driver_SX1276.c: 928: else
 24617                           ;radio_driver_SX1276.c: 929: {
 24618                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 24619  002CC8  0101               	movlb	1	; () banked
 24620  002CCA  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 24621  002CCC  E109               	bnz	l12990
 24622                           
 24623                           ; BSR set to: 1
 24624                           ;radio_driver_SX1276.c: 931: {
 24625                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 24626  002CCE  0E01               	movlw	1
 24627  002CD0  0100               	movlb	0	; () banked
 24628  002CD2  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 24629  002CD4  0E00               	movlw	0
 24630  002CD6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24631  002CD8  0E06               	movlw	6
 24632  002CDA  ECB9  F029         	call	_RADIO_WriteMode
 24633                           
 24634                           ;radio_driver_SX1276.c: 933: }
 24635  002CDE  D035               	goto	l12996
 24636  002CE0                     l12990:
 24637                           
 24638                           ; BSR set to: 1
 24639                           ;radio_driver_SX1276.c: 934: else
 24640                           ;radio_driver_SX1276.c: 935: {
 24641                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 24642  002CE0  0E00               	movlw	0
 24643  002CE2  0100               	movlb	0	; () banked
 24644  002CE4  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 24645  002CE6  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24646  002CE8  0E05               	movlw	5
 24647  002CEA  ECB9  F029         	call	_RADIO_WriteMode
 24648                           
 24649                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 24650  002CEE  0100               	movlb	0	; () banked
 24651  002CF0  5196               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 24652  002CF2  6F98               	movwf	??_RADIO_ReceiveStart& (0+255),b
 24653  002CF4  5197               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 24654  002CF6  6F99               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 24655  002CF8  6B9A               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 24656  002CFA  6B9B               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 24657  002CFC  0E0C               	movlw	12
 24658  002CFE                     u13965:
 24659  002CFE  90D8               	bcf	status,0,c
 24660  002D00  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 24661  002D02  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 24662  002D04  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 24663  002D06  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 24664  002D08  2EE8               	decfsz	wreg,f,c
 24665  002D0A  D7F9               	goto	u13965
 24666  002D0C  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 24667  002D10  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 24668  002D14  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 24669  002D18  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 24670  002D1C  0E7D               	movlw	125
 24671  002D1E  6F68               	movwf	___lldiv@divisor& (0+255),b
 24672  002D20  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 24673  002D22  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 24674  002D24  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 24675  002D26  EC1B  F031         	call	___lldiv	;wreg free
 24676  002D2A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 24677  002D2E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 24678  002D32  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 24679  002D36  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 24680  002D3A  0101               	movlb	1	; () banked
 24681  002D3C  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 24682  002D3E  EC5E  F037         	call	_SwTimerSetTimeout
 24683                           
 24684                           ; BSR set to: 0
 24685                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 24686  002D42  0101               	movlb	1	; () banked
 24687  002D44  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 24688  002D46  EC59  F02F         	call	_SwTimerStart
 24689  002D4A                     l12996:
 24690                           
 24691                           ;radio_driver_SX1276.c: 939: }
 24692                           ;radio_driver_SX1276.c: 940: }
 24693                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 24694  002D4A  0101               	movlb	1	; () banked
 24695  002D4C  51A3               	movf	(_RadioConfiguration+42)& (0+255),w,b
 24696  002D4E  11A4               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 24697  002D50  11A5               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 24698  002D52  11A6               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 24699  002D54  E059               	bz	l13008
 24700                           
 24701                           ; BSR set to: 1
 24702                           ;radio_driver_SX1276.c: 943: {
 24703                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 24704  002D56  51A6               	movf	(_RadioConfiguration+45)& (0+255),w,b
 24705  002D58  E106               	bnz	u13980
 24706  002D5A  29A3               	incf	(_RadioConfiguration+42)& (0+255),w,b
 24707  002D5C  0EFF               	movlw	255
 24708  002D5E  59A4               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 24709  002D60  0E0F               	movlw	15
 24710  002D62  59A5               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 24711  002D64  E319               	bnc	l13002
 24712  002D66                     u13980:
 24713                           
 24714                           ; BSR set to: 1
 24715  002D66  C1A3  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 24716  002D6A  C1A4  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 24717  002D6E  C1A5  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 24718  002D72  C1A6  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 24719  002D76  0E7D               	movlw	125
 24720  002D78  0100               	movlb	0	; () banked
 24721  002D7A  6F68               	movwf	___lldiv@divisor& (0+255),b
 24722  002D7C  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 24723  002D7E  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 24724  002D80  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 24725  002D82  EC1B  F031         	call	___lldiv	;wreg free
 24726  002D86  0E0C               	movlw	12
 24727  002D88                     u13995:
 24728  002D88  90D8               	bcf	status,0,c
 24729  002D8A  3764               	rlcf	?___lldiv& (0+255),f,b
 24730  002D8C  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 24731  002D8E  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 24732  002D90  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 24733  002D92  2EE8               	decfsz	wreg,f,c
 24734  002D94  D7F9               	goto	u13995
 24735  002D96  D020               	goto	L14
 24736  002D98                     l13002:
 24737                           
 24738                           ; BSR set to: 1
 24739  002D98  C1A3  F098         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 24740  002D9C  C1A4  F099         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 24741  002DA0  C1A5  F09A         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 24742  002DA4  C1A6  F09B         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 24743  002DA8  0E0C               	movlw	12
 24744  002DAA                     u14005:
 24745  002DAA  90D8               	bcf	status,0,c
 24746  002DAC  0100               	movlb	0	; () banked
 24747  002DAE  3798               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 24748  002DB0  3799               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 24749  002DB2  379A               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 24750  002DB4  379B               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 24751  002DB6  2EE8               	decfsz	wreg,f,c
 24752  002DB8  D7F8               	goto	u14005
 24753  002DBA  C098  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 24754  002DBE  C099  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 24755  002DC2  C09A  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 24756  002DC6  C09B  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 24757  002DCA  0E7D               	movlw	125
 24758  002DCC  6F68               	movwf	___lldiv@divisor& (0+255),b
 24759  002DCE  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 24760  002DD0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 24761  002DD2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 24762  002DD4  EC1B  F031         	call	___lldiv	;wreg free
 24763  002DD8                     L14:
 24764  002DD8  C064  F09C         	movff	?___lldiv,_RADIO_ReceiveStart$1203
 24765  002DDC  C065  F09D         	movff	?___lldiv+1,_RADIO_ReceiveStart$1203+1
 24766  002DE0  C066  F09E         	movff	?___lldiv+2,_RADIO_ReceiveStart$1203+2
 24767  002DE4  C067  F09F         	movff	?___lldiv+3,_RADIO_ReceiveStart$1203+3
 24768                           
 24769                           ; BSR set to: 0
 24770  002DE8  C09C  F071         	movff	_RADIO_ReceiveStart$1203,SwTimerSetTimeout@timeout
 24771  002DEC  C09D  F072         	movff	_RADIO_ReceiveStart$1203+1,SwTimerSetTimeout@timeout+1
 24772  002DF0  C09E  F073         	movff	_RADIO_ReceiveStart$1203+2,SwTimerSetTimeout@timeout+2
 24773  002DF4  C09F  F074         	movff	_RADIO_ReceiveStart$1203+3,SwTimerSetTimeout@timeout+3
 24774  002DF8  0101               	movlb	1	; () banked
 24775  002DFA  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24776  002DFC  EC5E  F037         	call	_SwTimerSetTimeout
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 24780  002E00  0101               	movlb	1	; () banked
 24781  002E02  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24782  002E04  EC59  F02F         	call	_SwTimerStart
 24783  002E08                     l13008:
 24784                           
 24785                           ;radio_driver_SX1276.c: 946: }
 24786                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 24787  002E08  0100               	movlb	0	; () banked
 24788  002E0A  6B96               	clrf	?_RADIO_ReceiveStart& (0+255),b
 24789  002E0C  6B97               	clrf	(?_RADIO_ReceiveStart+1)& (0+255),b
 24790                           
 24791                           ; BSR set to: 0
 24792  002E0E  0012               	return		;funcret
 24793  002E10                     __end_of_RADIO_ReceiveStart:
 24794                           	opt stack 0
 24795                           tosu	equ	0xFFF
 24796                           tosh	equ	0xFFE
 24797                           tosl	equ	0xFFD
 24798                           pclath	equ	0xFFA
 24799                           tblptru	equ	0xFF8
 24800                           tblptrh	equ	0xFF7
 24801                           tblptrl	equ	0xFF6
 24802                           tablat	equ	0xFF5
 24803                           prodh	equ	0xFF4
 24804                           prodl	equ	0xFF3
 24805                           intcon	equ	0xFF2
 24806                           intcon2	equ	0xFF1
 24807                           intcon3	equ	0xFF0
 24808                           indf0	equ	0xFEF
 24809                           postinc0	equ	0xFEE
 24810                           fsr0h	equ	0xFEA
 24811                           fsr0l	equ	0xFE9
 24812                           wreg	equ	0xFE8
 24813                           postinc1	equ	0xFE6
 24814                           postdec1	equ	0xFE5
 24815                           plusw1	equ	0xFE3
 24816                           fsr1h	equ	0xFE2
 24817                           fsr1l	equ	0xFE1
 24818                           indf2	equ	0xFDF
 24819                           postinc2	equ	0xFDE
 24820                           postdec2	equ	0xFDD
 24821                           plusw2	equ	0xFDB
 24822                           fsr2h	equ	0xFDA
 24823                           fsr2l	equ	0xFD9
 24824                           status	equ	0xFD8
 24825                           
 24826 ;; *************** function _ConfigureRadioRx *****************
 24827 ;; Defined at:
 24828 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24829 ;; Parameters:    Size  Location     Type
 24830 ;;  dataRate        1    wreg     unsigned char 
 24831 ;;  freq            4   22[BANK0 ] unsigned long 
 24832 ;; Auto vars:     Size  Location     Type
 24833 ;;  dataRate        1   26[BANK0 ] unsigned char 
 24834 ;; Return value:  Size  Location     Type
 24835 ;;                  1    wreg      void 
 24836 ;; Registers used:
 24837 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 24838 ;; Tracked objects:
 24839 ;;		On entry : F/2
 24840 ;;		On exit  : 0/0
 24841 ;;		Unchanged: 0/0
 24842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24843 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24844 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24846 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24847 ;;Total ram usage:        5 bytes
 24848 ;; Hardware stack levels used:    1
 24849 ;; Hardware stack levels required when called:   10
 24850 ;; This function calls:
 24851 ;;		_ConfigureRadio
 24852 ;;		_RADIO_SetCRC
 24853 ;;		_RADIO_SetIQInverted
 24854 ;; This function is called by:
 24855 ;;		_LORAWAN_ReceiveWindow1Callback
 24856 ;;		_LORAWAN_ReceiveWindow2Callback
 24857 ;;		_LORAWAN_EnterContinuousReceive
 24858 ;; This function uses a non-reentrant model
 24859 ;;
 24860                           
 24861                           	psect	text126
 24862  00745C                     __ptext126:
 24863                           	opt stack 0
 24864  00745C                     _ConfigureRadioRx:
 24865                           	opt stack 15
 24866                           
 24867                           ; BSR set to: 0
 24868                           ;incstack = 0
 24869                           ;ConfigureRadioRx@dataRate stored from wreg
 24870  00745C  0100               	movlb	0	; () banked
 24871  00745E  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 24872                           
 24873                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 24874  007460  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 24875  007464  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 24876  007468  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 24877  00746C  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 24878  007470  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 24879  007472  ECCC  F02E         	call	_ConfigureRadio
 24880                           
 24881                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 24882  007476  0E00               	movlw	0
 24883  007478  EC0A  F03D         	call	_RADIO_SetCRC
 24884                           
 24885                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 24886  00747C  0E01               	movlw	1
 24887  00747E  EF05  F03D         	goto	_RADIO_SetIQInverted
 24888  007482                     __end_of_ConfigureRadioRx:
 24889                           	opt stack 0
 24890                           tosu	equ	0xFFF
 24891                           tosh	equ	0xFFE
 24892                           tosl	equ	0xFFD
 24893                           pclath	equ	0xFFA
 24894                           tblptru	equ	0xFF8
 24895                           tblptrh	equ	0xFF7
 24896                           tblptrl	equ	0xFF6
 24897                           tablat	equ	0xFF5
 24898                           prodh	equ	0xFF4
 24899                           prodl	equ	0xFF3
 24900                           intcon	equ	0xFF2
 24901                           intcon2	equ	0xFF1
 24902                           intcon3	equ	0xFF0
 24903                           indf0	equ	0xFEF
 24904                           postinc0	equ	0xFEE
 24905                           fsr0h	equ	0xFEA
 24906                           fsr0l	equ	0xFE9
 24907                           wreg	equ	0xFE8
 24908                           postinc1	equ	0xFE6
 24909                           postdec1	equ	0xFE5
 24910                           plusw1	equ	0xFE3
 24911                           fsr1h	equ	0xFE2
 24912                           fsr1l	equ	0xFE1
 24913                           indf2	equ	0xFDF
 24914                           postinc2	equ	0xFDE
 24915                           postdec2	equ	0xFDD
 24916                           plusw2	equ	0xFDB
 24917                           fsr2h	equ	0xFDA
 24918                           fsr2l	equ	0xFD9
 24919                           status	equ	0xFD8
 24920                           
 24921 ;; *************** function _INTERRUPT_GetDioStatus *****************
 24922 ;; Defined at:
 24923 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 24924 ;; Parameters:    Size  Location     Type
 24925 ;;		None
 24926 ;; Auto vars:     Size  Location     Type
 24927 ;;  a               1    4[BANK0 ] unsigned char 
 24928 ;; Return value:  Size  Location     Type
 24929 ;;                  1    wreg      unsigned char 
 24930 ;; Registers used:
 24931 ;;		wreg, status,2
 24932 ;; Tracked objects:
 24933 ;;		On entry : F/0
 24934 ;;		On exit  : F/0
 24935 ;;		Unchanged: 0/0
 24936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24941 ;;Total ram usage:        1 bytes
 24942 ;; Hardware stack levels used:    1
 24943 ;; Hardware stack levels required when called:    7
 24944 ;; This function calls:
 24945 ;;		Nothing
 24946 ;; This function is called by:
 24947 ;;		_LORAWAN_Mainloop
 24948 ;; This function uses a non-reentrant model
 24949 ;;
 24950                           
 24951                           	psect	text127
 24952  007954                     __ptext127:
 24953                           	opt stack 0
 24954  007954                     _INTERRUPT_GetDioStatus:
 24955                           	opt stack 22
 24956                           
 24957                           ; BSR set to: 0
 24958                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 24959                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 24960                           
 24961                           ;incstack = 0
 24962  007954  9EF2               	bcf	intcon,7,c	;volatile
 24963                           
 24964                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 24965  007956  C048  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 24966                           
 24967                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 24968  00795A  6A48               	clrf	_dioStatus,c	;volatile
 24969                           
 24970                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 24971  00795C  8EF2               	bsf	intcon,7,c	;volatile
 24972                           
 24973                           ; BSR set to: 0
 24974                           ;interrupt_manager_lora_addons.c: 55: return a;
 24975  00795E  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 24976                           
 24977                           ; BSR set to: 0
 24978  007960  0012               	return		;funcret
 24979  007962                     __end_of_INTERRUPT_GetDioStatus:
 24980                           	opt stack 0
 24981                           tosu	equ	0xFFF
 24982                           tosh	equ	0xFFE
 24983                           tosl	equ	0xFFD
 24984                           pclath	equ	0xFFA
 24985                           tblptru	equ	0xFF8
 24986                           tblptrh	equ	0xFF7
 24987                           tblptrl	equ	0xFF6
 24988                           tablat	equ	0xFF5
 24989                           prodh	equ	0xFF4
 24990                           prodl	equ	0xFF3
 24991                           intcon	equ	0xFF2
 24992                           intcon2	equ	0xFF1
 24993                           intcon3	equ	0xFF0
 24994                           indf0	equ	0xFEF
 24995                           postinc0	equ	0xFEE
 24996                           fsr0h	equ	0xFEA
 24997                           fsr0l	equ	0xFE9
 24998                           wreg	equ	0xFE8
 24999                           postinc1	equ	0xFE6
 25000                           postdec1	equ	0xFE5
 25001                           plusw1	equ	0xFE3
 25002                           fsr1h	equ	0xFE2
 25003                           fsr1l	equ	0xFE1
 25004                           indf2	equ	0xFDF
 25005                           postinc2	equ	0xFDE
 25006                           postdec2	equ	0xFDD
 25007                           plusw2	equ	0xFDB
 25008                           fsr2h	equ	0xFDA
 25009                           fsr2l	equ	0xFD9
 25010                           status	equ	0xFD8
 25011                           
 25012 ;; *************** function _LORAWAN_Join *****************
 25013 ;; Defined at:
 25014 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25015 ;; Parameters:    Size  Location     Type
 25016 ;;  activationTy    1    wreg     enum E7980
 25017 ;; Auto vars:     Size  Location     Type
 25018 ;;  activationTy    1  137[BANK0 ] enum E7980
 25019 ;;  result          1  136[BANK0 ] enum E7957
 25020 ;;  bufferIndex     1  135[BANK0 ] unsigned char 
 25021 ;; Return value:  Size  Location     Type
 25022 ;;                  1    wreg      enum E7957
 25023 ;; Registers used:
 25024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25025 ;; Tracked objects:
 25026 ;;		On entry : F/2
 25027 ;;		On exit  : D/0
 25028 ;;		Unchanged: 0/0
 25029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25031 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25033 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25034 ;;Total ram usage:        3 bytes
 25035 ;; Hardware stack levels used:    1
 25036 ;; Hardware stack levels required when called:   14
 25037 ;; This function calls:
 25038 ;;		_PrepareJoinRequestFrame
 25039 ;;		_RADIO_Transmit
 25040 ;;		_SelectChannelForTransmission
 25041 ;;		_SwTimerSetTimeout
 25042 ;;		_SwTimerStart
 25043 ;;		_UpdateJoinInProgress
 25044 ;; This function is called by:
 25045 ;;		_main
 25046 ;; This function uses a non-reentrant model
 25047 ;;
 25048                           
 25049                           	psect	text128
 25050  005E26                     __ptext128:
 25051                           	opt stack 0
 25052  005E26                     _LORAWAN_Join:
 25053                           	opt stack 16
 25054                           
 25055                           ; BSR set to: 0
 25056                           ;incstack = 0
 25057                           ;LORAWAN_Join@activationTypeNew stored from wreg
 25058  005E26  0100               	movlb	0	; () banked
 25059  005E28  6FE9               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 25060                           
 25061                           ;lorawan.c: 117: uint8_t bufferIndex;
 25062                           ;lorawan.c: 118: LorawanError_t result;
 25063                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 25064  005E2A  0102               	movlb	2	; () banked
 25065  005E2C  A103               	btfss	(_loRa+3)& (0+255),0,b
 25066                           
 25067                           ; BSR set to: 2
 25068                           ;lorawan.c: 123: }
 25069                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 25070  005E2E  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 25071  005E30  0012               	return	
 25072                           
 25073                           ; BSR set to: 2
 25074                           ;lorawan.c: 128: }
 25075                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 25076  005E32  5102               	movf	(_loRa+2)& (0+255),w,b
 25077  005E34  0B0F               	andlw	15
 25078  005E36  E001               	bz	l1672
 25079  005E38  0012               	return	
 25080  005E3A                     l1672:
 25081                           
 25082                           ; BSR set to: 2
 25083                           ;lorawan.c: 133: }
 25084                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 25085  005E3A  C0E9  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 25086                           
 25087                           ; BSR set to: 2
 25088                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 25089  005E3E  0100               	movlb	0	; () banked
 25090  005E40  51E9               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 25091  005E42  E11F               	bnz	l1673
 25092                           
 25093                           ; BSR set to: 0
 25094                           ;lorawan.c: 138: {
 25095                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 25096  005E44  0102               	movlb	2	; () banked
 25097  005E46  B1A5               	btfsc	(_loRa+165)& (0+255),0,b
 25098                           
 25099                           ; BSR set to: 2
 25100  005E48  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 25101  005E4A  0012               	return	
 25102                           
 25103                           ; BSR set to: 2
 25104  005E4C  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 25105  005E4E  0012               	return	
 25106                           
 25107                           ; BSR set to: 2
 25108                           ;lorawan.c: 144: else
 25109                           ;lorawan.c: 145: {
 25110                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 25111  005E50  EC4F  F023         	call	_PrepareJoinRequestFrame	;wreg free
 25112  005E54  6FE7               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 25113                           
 25114                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 25115  005E56  0E00               	movlw	0
 25116  005E58  ECC1  F033         	call	_SelectChannelForTransmission
 25117  005E5C  6FE8               	movwf	LORAWAN_Join@result& (0+255),b
 25118                           
 25119                           ; BSR set to: 0
 25120                           ;lorawan.c: 149: if (result == OK)
 25121  005E5E  51E8               	movf	LORAWAN_Join@result& (0+255),w,b
 25122  005E60  A4D8               	btfss	status,2,c
 25123  005E62  0012               	return	
 25124                           
 25125                           ; BSR set to: 0
 25126                           ;lorawan.c: 150: {
 25127                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 25128  005E64  0EE0               	movlw	low _macBuffer
 25129  005E66  6F96               	movwf	RADIO_Transmit@buffer& (0+255),b
 25130  005E68  0E04               	movlw	high _macBuffer
 25131  005E6A  6F97               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 25132  005E6C  C0E7  F098         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 25133  005E70  EC00  F018         	call	_RADIO_Transmit	;wreg free
 25134  005E74  5196               	movf	?_RADIO_Transmit& (0+255),w,b
 25135  005E76  1197               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 25136  005E78  A4D8               	btfss	status,2,c
 25137  005E7A  0012               	return	
 25138                           
 25139                           ; BSR set to: 0
 25140                           ;lorawan.c: 152: {
 25141                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 25142  005E7C  0E01               	movlw	1
 25143  005E7E  EFE7  F03B         	goto	_UpdateJoinInProgress
 25144  005E82                     l1673:
 25145                           
 25146                           ; BSR set to: 0
 25147                           ;lorawan.c: 167: else
 25148                           ;lorawan.c: 168: {
 25149                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 25150  005E82  0102               	movlb	2	; () banked
 25151  005E84  BBA5               	btfsc	(_loRa+165)& (0+255),5,b
 25152                           
 25153                           ; BSR set to: 2
 25154  005E86  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 25155  005E88  0012               	return	
 25156                           
 25157                           ; BSR set to: 2
 25158  005E8A  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 25159  005E8C  0012               	return	
 25160                           
 25161                           ; BSR set to: 2
 25162                           ;lorawan.c: 174: else
 25163                           ;lorawan.c: 175: {
 25164                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 25165  005E8E  0E07               	movlw	7
 25166  005E90  ECE7  F03B         	call	_UpdateJoinInProgress
 25167                           
 25168                           ; BSR set to: 2
 25169                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 25170  005E94  0E8F               	movlw	143
 25171  005E96  0100               	movlb	0	; () banked
 25172  005E98  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 25173  005E9A  0E02               	movlw	2
 25174  005E9C  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 25175  005E9E  6B73               	clrf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 25176  005EA0  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 25177  005EA2  0102               	movlb	2	; () banked
 25178  005EA4  51F3               	movf	(_loRa+243)& (0+255),w,b
 25179  005EA6  EC5E  F037         	call	_SwTimerSetTimeout
 25180                           
 25181                           ; BSR set to: 0
 25182                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 25183  005EAA  0102               	movlb	2	; () banked
 25184  005EAC  51F3               	movf	(_loRa+243)& (0+255),w,b
 25185  005EAE  EF59  F02F         	goto	_SwTimerStart
 25186  005EB2                     __end_of_LORAWAN_Join:
 25187                           	opt stack 0
 25188                           tosu	equ	0xFFF
 25189                           tosh	equ	0xFFE
 25190                           tosl	equ	0xFFD
 25191                           pclath	equ	0xFFA
 25192                           tblptru	equ	0xFF8
 25193                           tblptrh	equ	0xFF7
 25194                           tblptrl	equ	0xFF6
 25195                           tablat	equ	0xFF5
 25196                           prodh	equ	0xFF4
 25197                           prodl	equ	0xFF3
 25198                           intcon	equ	0xFF2
 25199                           intcon2	equ	0xFF1
 25200                           intcon3	equ	0xFF0
 25201                           indf0	equ	0xFEF
 25202                           postinc0	equ	0xFEE
 25203                           fsr0h	equ	0xFEA
 25204                           fsr0l	equ	0xFE9
 25205                           wreg	equ	0xFE8
 25206                           postinc1	equ	0xFE6
 25207                           postdec1	equ	0xFE5
 25208                           plusw1	equ	0xFE3
 25209                           fsr1h	equ	0xFE2
 25210                           fsr1l	equ	0xFE1
 25211                           indf2	equ	0xFDF
 25212                           postinc2	equ	0xFDE
 25213                           postdec2	equ	0xFDD
 25214                           plusw2	equ	0xFDB
 25215                           fsr2h	equ	0xFDA
 25216                           fsr2l	equ	0xFD9
 25217                           status	equ	0xFD8
 25218                           
 25219 ;; *************** function _UpdateJoinInProgress *****************
 25220 ;; Defined at:
 25221 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 25222 ;; Parameters:    Size  Location     Type
 25223 ;;  state           1    wreg     unsigned char 
 25224 ;; Auto vars:     Size  Location     Type
 25225 ;;  state           1    4[BANK0 ] unsigned char 
 25226 ;; Return value:  Size  Location     Type
 25227 ;;                  1    wreg      void 
 25228 ;; Registers used:
 25229 ;;		wreg, status,2, status,0
 25230 ;; Tracked objects:
 25231 ;;		On entry : D/0
 25232 ;;		On exit  : F/2
 25233 ;;		Unchanged: 0/0
 25234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25236 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25238 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25239 ;;Total ram usage:        1 bytes
 25240 ;; Hardware stack levels used:    1
 25241 ;; Hardware stack levels required when called:    7
 25242 ;; This function calls:
 25243 ;;		Nothing
 25244 ;; This function is called by:
 25245 ;;		_LORAWAN_Join
 25246 ;; This function uses a non-reentrant model
 25247 ;;
 25248                           
 25249                           	psect	text129
 25250  0077CE                     __ptext129:
 25251                           	opt stack 0
 25252  0077CE                     _UpdateJoinInProgress:
 25253                           	opt stack 22
 25254                           
 25255                           ;incstack = 0
 25256                           ;UpdateJoinInProgress@state stored from wreg
 25257  0077CE  0100               	movlb	0	; () banked
 25258  0077D0  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 25259                           
 25260                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 25261  0077D2  0102               	movlb	2	; () banked
 25262  0077D4  9902               	bcf	(_loRa+2)& (0+255),4,b
 25263                           
 25264                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 25265  0077D6  8500               	bsf	_loRa& (0+255),2,b
 25266                           
 25267                           ; BSR set to: 2
 25268                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 25269  0077D8  5102               	movf	(_loRa+2)& (0+255),w,b
 25270  0077DA  0100               	movlb	0	; () banked
 25271  0077DC  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25272  0077DE  0BF0               	andlw	-16
 25273  0077E0  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 25274  0077E2  0102               	movlb	2	; () banked
 25275  0077E4  6F02               	movwf	(_loRa+2)& (0+255),b
 25276                           
 25277                           ; BSR set to: 2
 25278  0077E6  0012               	return		;funcret
 25279  0077E8                     __end_of_UpdateJoinInProgress:
 25280                           	opt stack 0
 25281                           tosu	equ	0xFFF
 25282                           tosh	equ	0xFFE
 25283                           tosl	equ	0xFFD
 25284                           pclath	equ	0xFFA
 25285                           tblptru	equ	0xFF8
 25286                           tblptrh	equ	0xFF7
 25287                           tblptrl	equ	0xFF6
 25288                           tablat	equ	0xFF5
 25289                           prodh	equ	0xFF4
 25290                           prodl	equ	0xFF3
 25291                           intcon	equ	0xFF2
 25292                           intcon2	equ	0xFF1
 25293                           intcon3	equ	0xFF0
 25294                           indf0	equ	0xFEF
 25295                           postinc0	equ	0xFEE
 25296                           fsr0h	equ	0xFEA
 25297                           fsr0l	equ	0xFE9
 25298                           wreg	equ	0xFE8
 25299                           postinc1	equ	0xFE6
 25300                           postdec1	equ	0xFE5
 25301                           plusw1	equ	0xFE3
 25302                           fsr1h	equ	0xFE2
 25303                           fsr1l	equ	0xFE1
 25304                           indf2	equ	0xFDF
 25305                           postinc2	equ	0xFDE
 25306                           postdec2	equ	0xFDD
 25307                           plusw2	equ	0xFDB
 25308                           fsr2h	equ	0xFDA
 25309                           fsr2l	equ	0xFD9
 25310                           status	equ	0xFD8
 25311                           
 25312 ;; *************** function _SelectChannelForTransmission *****************
 25313 ;; Defined at:
 25314 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25315 ;; Parameters:    Size  Location     Type
 25316 ;;  transmission    1    wreg     unsigned char 
 25317 ;; Auto vars:     Size  Location     Type
 25318 ;;  transmission    1   37[BANK0 ] unsigned char 
 25319 ;;  channelIndex    1   39[BANK0 ] unsigned char 
 25320 ;;  result          1   38[BANK0 ] enum E8016
 25321 ;; Return value:  Size  Location     Type
 25322 ;;                  1    wreg      enum E8016
 25323 ;; Registers used:
 25324 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25325 ;; Tracked objects:
 25326 ;;		On entry : 0/0
 25327 ;;		On exit  : F/0
 25328 ;;		Unchanged: 0/0
 25329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25331 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25333 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25334 ;;Total ram usage:        3 bytes
 25335 ;; Hardware stack levels used:    1
 25336 ;; Hardware stack levels required when called:   11
 25337 ;; This function calls:
 25338 ;;		_ConfigureRadioTx
 25339 ;;		_SearchAvailableChannel
 25340 ;; This function is called by:
 25341 ;;		_LORAWAN_RxTimeout
 25342 ;;		_LORAWAN_Join
 25343 ;;		_LORAWAN_Send
 25344 ;;		_AckRetransmissionCallback
 25345 ;;		_UnconfirmedTransmissionCallback
 25346 ;; This function uses a non-reentrant model
 25347 ;;
 25348                           
 25349                           	psect	text130
 25350  006782                     __ptext130:
 25351                           	opt stack 0
 25352  006782                     _SelectChannelForTransmission:
 25353                           	opt stack 17
 25354                           
 25355                           ; BSR set to: 2
 25356                           ;incstack = 0
 25357                           ;SelectChannelForTransmission@transmissionType stored from wreg
 25358  006782  0100               	movlb	0	; () banked
 25359  006784  6F85               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 25360                           
 25361                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 25362                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 25363  006786  C085  F079         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 25364  00678A  0E87               	movlw	low SelectChannelForTransmission@channelIndex
 25365  00678C  6F7A               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 25366  00678E  6B7B               	clrf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 25367  006790  0E10               	movlw	16
 25368  006792  ECDB  F028         	call	_SearchAvailableChannel
 25369  006796  6F86               	movwf	SelectChannelForTransmission@result& (0+255),b
 25370                           
 25371                           ; BSR set to: 0
 25372                           ;lorawan_eu.c: 926: if (result == OK)
 25373  006798  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 25374  00679A  E120               	bnz	l13704
 25375                           
 25376                           ; BSR set to: 0
 25377                           ;lorawan_eu.c: 927: {
 25378                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 25379  00679C  C087  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 25380                           
 25381                           ; BSR set to: 0
 25382                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 25383  0067A0  5187               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 25384  0067A2  0D0E               	mullw	14
 25385  0067A4  0E00               	movlw	low _Channels
 25386  0067A6  24F3               	addwf	prodl,w,c
 25387  0067A8  6ED9               	movwf	fsr2l,c
 25388  0067AA  0E04               	movlw	high _Channels
 25389  0067AC  20F4               	addwfc	prodh,w,c
 25390  0067AE  6EDA               	movwf	fsr2h,c
 25391  0067B0  CFDE F213          	movff	postinc2,_loRa+19
 25392  0067B4  CFDE F214          	movff	postinc2,_loRa+20
 25393  0067B8  CFDE F215          	movff	postinc2,_loRa+21
 25394  0067BC  CFDE F216          	movff	postinc2,_loRa+22
 25395                           
 25396                           ; BSR set to: 0
 25397                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 25398  0067C0  C2DF  F217         	movff	_loRa+223,_loRa+23
 25399                           
 25400                           ; BSR set to: 0
 25401                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 25402  0067C4  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 25403  0067C8  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 25404  0067CC  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 25405  0067D0  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 25406  0067D4  0102               	movlb	2	; () banked
 25407  0067D6  5117               	movf	(_loRa+23)& (0+255),w,b
 25408  0067D8  ECF8  F036         	call	_ConfigureRadioTx
 25409  0067DC                     l13704:
 25410                           
 25411                           ;lorawan_eu.c: 933: }
 25412                           ;lorawan_eu.c: 934: return result;
 25413  0067DC  0100               	movlb	0	; () banked
 25414  0067DE  5186               	movf	SelectChannelForTransmission@result& (0+255),w,b
 25415                           
 25416                           ; BSR set to: 0
 25417  0067E0  0012               	return		;funcret
 25418  0067E2                     __end_of_SelectChannelForTransmission:
 25419                           	opt stack 0
 25420                           tosu	equ	0xFFF
 25421                           tosh	equ	0xFFE
 25422                           tosl	equ	0xFFD
 25423                           pclath	equ	0xFFA
 25424                           tblptru	equ	0xFF8
 25425                           tblptrh	equ	0xFF7
 25426                           tblptrl	equ	0xFF6
 25427                           tablat	equ	0xFF5
 25428                           prodh	equ	0xFF4
 25429                           prodl	equ	0xFF3
 25430                           intcon	equ	0xFF2
 25431                           intcon2	equ	0xFF1
 25432                           intcon3	equ	0xFF0
 25433                           indf0	equ	0xFEF
 25434                           postinc0	equ	0xFEE
 25435                           fsr0h	equ	0xFEA
 25436                           fsr0l	equ	0xFE9
 25437                           wreg	equ	0xFE8
 25438                           postinc1	equ	0xFE6
 25439                           postdec1	equ	0xFE5
 25440                           plusw1	equ	0xFE3
 25441                           fsr1h	equ	0xFE2
 25442                           fsr1l	equ	0xFE1
 25443                           indf2	equ	0xFDF
 25444                           postinc2	equ	0xFDE
 25445                           postdec2	equ	0xFDD
 25446                           plusw2	equ	0xFDB
 25447                           fsr2h	equ	0xFDA
 25448                           fsr2l	equ	0xFD9
 25449                           status	equ	0xFD8
 25450                           
 25451 ;; *************** function _SearchAvailableChannel *****************
 25452 ;; Defined at:
 25453 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25454 ;; Parameters:    Size  Location     Type
 25455 ;;  maxChannels     1    wreg     unsigned char 
 25456 ;;  transmission    1   25[BANK0 ] unsigned char 
 25457 ;;  channelIndex    2   26[BANK0 ] PTR unsigned char 
 25458 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 25459 ;; Auto vars:     Size  Location     Type
 25460 ;;  maxChannels     1   34[BANK0 ] unsigned char 
 25461 ;;  i               1   36[BANK0 ] unsigned char 
 25462 ;;  randomNumber    1   35[BANK0 ] unsigned char 
 25463 ;;  result          1   33[BANK0 ] enum E8016
 25464 ;;  randomNumber    1   32[BANK0 ] unsigned char 
 25465 ;; Return value:  Size  Location     Type
 25466 ;;                  1    wreg      enum E8016
 25467 ;; Registers used:
 25468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 25469 ;; Tracked objects:
 25470 ;;		On entry : D/2
 25471 ;;		On exit  : F/0
 25472 ;;		Unchanged: 0/0
 25473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25474 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25475 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25476 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25477 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25478 ;;Total ram usage:       12 bytes
 25479 ;; Hardware stack levels used:    1
 25480 ;; Hardware stack levels required when called:   10
 25481 ;; This function calls:
 25482 ;;		_Random
 25483 ;; This function is called by:
 25484 ;;		_SelectChannelForTransmission
 25485 ;;		_LORAWAN_RxDone
 25486 ;; This function uses a non-reentrant model
 25487 ;;
 25488                           
 25489                           	psect	text131
 25490  0051B6                     __ptext131:
 25491                           	opt stack 0
 25492  0051B6                     _SearchAvailableChannel:
 25493                           	opt stack 17
 25494                           
 25495                           ; BSR set to: 0
 25496                           ;incstack = 0
 25497                           ;SearchAvailableChannel@maxChannels stored from wreg
 25498  0051B6  0100               	movlb	0	; () banked
 25499  0051B8  6F82               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 25500                           
 25501                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 25502                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 25503  0051BA  6B81               	clrf	SearchAvailableChannel@result& (0+255),b
 25504                           
 25505                           ; BSR set to: 0
 25506                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 25507  0051BC  C082  F077         	movff	SearchAvailableChannel@maxChannels,Random@max
 25508  0051C0  6B78               	clrf	(Random@max+1)& (0+255),b
 25509  0051C2  ECD0  F03A         	call	_Random	;wreg free
 25510  0051C6  2977               	incf	?_Random& (0+255),w,b
 25511  0051C8  6F83               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 25512                           
 25513                           ; BSR set to: 0
 25514                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 25515  0051CA  C083  F080         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 25516                           
 25517                           ;lorawan_eu.c: 786: while (randomNumber)
 25518  0051CE  D054               	goto	l13210
 25519  0051D0                     l1135:
 25520                           
 25521                           ; BSR set to: 0
 25522                           ;lorawan_eu.c: 787: {
 25523                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 25524  0051D0  6B84               	clrf	SearchAvailableChannel@i& (0+255),b
 25525  0051D2  D047               	goto	l13202
 25526  0051D4                     l13186:
 25527                           
 25528                           ; BSR set to: 0
 25529                           ;lorawan_eu.c: 789: {
 25530                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 25531  0051D4  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25532  0051D6  0D0E               	mullw	14
 25533  0051D8  0E04               	movlw	low (_Channels+4)
 25534  0051DA  24F3               	addwf	prodl,w,c
 25535  0051DC  6ED9               	movwf	fsr2l,c
 25536  0051DE  0E04               	movlw	high (_Channels+4)
 25537  0051E0  20F4               	addwfc	prodh,w,c
 25538  0051E2  6EDA               	movwf	fsr2h,c
 25539  0051E4  04DE               	decf	postinc2,w,c
 25540  0051E6  E13B               	bnz	l1138
 25541                           
 25542                           ; BSR set to: 0
 25543  0051E8  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25544  0051EA  0D0E               	mullw	14
 25545  0051EC  0E08               	movlw	low (_Channels+8)
 25546  0051EE  24F3               	addwf	prodl,w,c
 25547  0051F0  6ED9               	movwf	fsr2l,c
 25548  0051F2  0E04               	movlw	high (_Channels+8)
 25549  0051F4  20F4               	addwfc	prodh,w,c
 25550  0051F6  6EDA               	movwf	fsr2h,c
 25551  0051F8  50DE               	movf	postinc2,w,c
 25552  0051FA  10DE               	iorwf	postinc2,w,c
 25553  0051FC  10DE               	iorwf	postinc2,w,c
 25554  0051FE  10DE               	iorwf	postinc2,w,c
 25555  005200  E12E               	bnz	l1138
 25556                           
 25557                           ; BSR set to: 0
 25558  005202  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25559  005204  0D0E               	mullw	14
 25560  005206  0E05               	movlw	low (_Channels+5)
 25561  005208  24F3               	addwf	prodl,w,c
 25562  00520A  6ED9               	movwf	fsr2l,c
 25563  00520C  0E04               	movlw	high (_Channels+5)
 25564  00520E  20F4               	addwfc	prodh,w,c
 25565  005210  6EDA               	movwf	fsr2h,c
 25566  005212  50DF               	movf	223,w,c
 25567  005214  0B0F               	andlw	15
 25568  005216  0100               	movlb	0	; () banked
 25569  005218  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 25570  00521A  517C               	movf	??_SearchAvailableChannel& (0+255),w,b
 25571  00521C  0102               	movlb	2	; () banked
 25572  00521E  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 25573  005220  E31E               	bnc	l1138
 25574                           
 25575                           ; BSR set to: 2
 25576  005222  0100               	movlb	0	; () banked
 25577  005224  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25578  005226  0D0E               	mullw	14
 25579  005228  0E05               	movlw	low (_Channels+5)
 25580  00522A  24F3               	addwf	prodl,w,c
 25581  00522C  6ED9               	movwf	fsr2l,c
 25582  00522E  0E04               	movlw	high (_Channels+5)
 25583  005230  20F4               	addwfc	prodh,w,c
 25584  005232  6EDA               	movwf	fsr2h,c
 25585  005234  38DF               	swapf	223,w,c
 25586  005236  0B0F               	andlw	15
 25587  005238  6F7C               	movwf	??_SearchAvailableChannel& (0+255),b
 25588  00523A  0102               	movlb	2	; () banked
 25589  00523C  51DF               	movf	(_loRa+223)& (0+255),w,b
 25590  00523E  0100               	movlb	0	; () banked
 25591  005240  5D7C               	subwf	??_SearchAvailableChannel& (0+255),w,b
 25592  005242  E30D               	bnc	l1138
 25593                           
 25594                           ; BSR set to: 0
 25595                           ;lorawan_eu.c: 791: {
 25596                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 25597  005244  5179               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 25598  005246  E10A               	bnz	l13198
 25599                           
 25600                           ; BSR set to: 0
 25601                           ;lorawan_eu.c: 793: {
 25602                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 25603  005248  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25604  00524A  0D0E               	mullw	14
 25605  00524C  0E0C               	movlw	low (_Channels+12)
 25606  00524E  24F3               	addwf	prodl,w,c
 25607  005250  6ED9               	movwf	fsr2l,c
 25608  005252  0E04               	movlw	high (_Channels+12)
 25609  005254  20F4               	addwfc	prodh,w,c
 25610  005256  6EDA               	movwf	fsr2h,c
 25611  005258  04DE               	decf	postinc2,w,c
 25612  00525A  E101               	bnz	l1138
 25613  00525C                     l13198:
 25614                           
 25615                           ; BSR set to: 0
 25616                           ;lorawan_eu.c: 795: {
 25617                           ;lorawan_eu.c: 796: randomNumber --;
 25618  00525C  0783               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 25619  00525E                     l1138:
 25620  00525E  0100               	movlb	0	; () banked
 25621  005260  2B84               	incf	SearchAvailableChannel@i& (0+255),f,b
 25622  005262                     l13202:
 25623                           
 25624                           ; BSR set to: 0
 25625  005262  5182               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 25626  005264  5D84               	subwf	SearchAvailableChannel@i& (0+255),w,b
 25627  005266  E202               	bc	l13206
 25628                           
 25629                           ; BSR set to: 0
 25630  005268  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 25631  00526A  E1B4               	bnz	l13186
 25632  00526C                     l13206:
 25633                           
 25634                           ; BSR set to: 0
 25635                           ;lorawan_eu.c: 802: }
 25636                           ;lorawan_eu.c: 803: }
 25637                           ;lorawan_eu.c: 804: }
 25638                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 25639  00526C  5180               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 25640  00526E  1983               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 25641  005270  E103               	bnz	l13210
 25642                           
 25643                           ; BSR set to: 0
 25644                           ;lorawan_eu.c: 807: {
 25645                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 25646  005272  0E09               	movlw	9
 25647  005274  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 25648                           
 25649                           ;lorawan_eu.c: 809: break;
 25650  005276  D002               	goto	l13212
 25651  005278                     l13210:
 25652                           
 25653                           ; BSR set to: 0
 25654  005278  5183               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 25655  00527A  E1AA               	bnz	l1135
 25656  00527C                     l13212:
 25657                           
 25658                           ; BSR set to: 0
 25659                           ;lorawan_eu.c: 810: }
 25660                           ;lorawan_eu.c: 811: }
 25661                           ;lorawan_eu.c: 813: if ( i != 0)
 25662  00527C  5184               	movf	SearchAvailableChannel@i& (0+255),w,b
 25663  00527E  E007               	bz	l13216
 25664                           
 25665                           ; BSR set to: 0
 25666                           ;lorawan_eu.c: 814: {
 25667                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 25668  005280  0584               	decf	SearchAvailableChannel@i& (0+255),w,b
 25669  005282  C07A  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 25670  005286  C07B  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 25671  00528A  6EDF               	movwf	indf2,c
 25672                           
 25673                           ;lorawan_eu.c: 816: }
 25674  00528C  D002               	goto	l1148
 25675  00528E                     l13216:
 25676                           
 25677                           ; BSR set to: 0
 25678                           ;lorawan_eu.c: 817: else
 25679                           ;lorawan_eu.c: 818: {
 25680                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 25681  00528E  0E09               	movlw	9
 25682  005290  6F81               	movwf	SearchAvailableChannel@result& (0+255),b
 25683  005292                     l1148:
 25684                           
 25685                           ; BSR set to: 0
 25686                           ;lorawan_eu.c: 820: }
 25687                           ;lorawan_eu.c: 821: return result;
 25688  005292  5181               	movf	SearchAvailableChannel@result& (0+255),w,b
 25689                           
 25690                           ; BSR set to: 0
 25691  005294  0012               	return		;funcret
 25692  005296                     __end_of_SearchAvailableChannel:
 25693                           	opt stack 0
 25694                           tosu	equ	0xFFF
 25695                           tosh	equ	0xFFE
 25696                           tosl	equ	0xFFD
 25697                           pclath	equ	0xFFA
 25698                           tblptru	equ	0xFF8
 25699                           tblptrh	equ	0xFF7
 25700                           tblptrl	equ	0xFF6
 25701                           tablat	equ	0xFF5
 25702                           prodh	equ	0xFF4
 25703                           prodl	equ	0xFF3
 25704                           intcon	equ	0xFF2
 25705                           intcon2	equ	0xFF1
 25706                           intcon3	equ	0xFF0
 25707                           indf0	equ	0xFEF
 25708                           postinc0	equ	0xFEE
 25709                           fsr0h	equ	0xFEA
 25710                           fsr0l	equ	0xFE9
 25711                           wreg	equ	0xFE8
 25712                           postinc1	equ	0xFE6
 25713                           postdec1	equ	0xFE5
 25714                           plusw1	equ	0xFE3
 25715                           fsr1h	equ	0xFE2
 25716                           fsr1l	equ	0xFE1
 25717                           indf2	equ	0xFDF
 25718                           postinc2	equ	0xFDE
 25719                           postdec2	equ	0xFDD
 25720                           plusw2	equ	0xFDB
 25721                           fsr2h	equ	0xFDA
 25722                           fsr2l	equ	0xFD9
 25723                           status	equ	0xFD8
 25724                           
 25725 ;; *************** function _ConfigureRadioTx *****************
 25726 ;; Defined at:
 25727 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 25728 ;; Parameters:    Size  Location     Type
 25729 ;;  dataRate        1    wreg     unsigned char 
 25730 ;;  freq            4   22[BANK0 ] unsigned long 
 25731 ;; Auto vars:     Size  Location     Type
 25732 ;;  dataRate        1   26[BANK0 ] unsigned char 
 25733 ;;  txPower         1   27[BANK0 ] char 
 25734 ;; Return value:  Size  Location     Type
 25735 ;;                  1    wreg      void 
 25736 ;; Registers used:
 25737 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25738 ;; Tracked objects:
 25739 ;;		On entry : F/2
 25740 ;;		On exit  : 0/0
 25741 ;;		Unchanged: 0/0
 25742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25743 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25744 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25746 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25747 ;;Total ram usage:        6 bytes
 25748 ;; Hardware stack levels used:    1
 25749 ;; Hardware stack levels required when called:   10
 25750 ;; This function calls:
 25751 ;;		_ConfigureRadio
 25752 ;;		_RADIO_SetCRC
 25753 ;;		_RADIO_SetIQInverted
 25754 ;;		_RADIO_SetOutputPower
 25755 ;; This function is called by:
 25756 ;;		_SelectChannelForTransmission
 25757 ;; This function uses a non-reentrant model
 25758 ;;
 25759                           
 25760                           	psect	text132
 25761  006DF0                     __ptext132:
 25762                           	opt stack 0
 25763  006DF0                     _ConfigureRadioTx:
 25764                           	opt stack 17
 25765                           
 25766                           ; BSR set to: 0
 25767                           ;incstack = 0
 25768                           ;ConfigureRadioTx@dataRate stored from wreg
 25769  006DF0  0100               	movlb	0	; () banked
 25770  006DF2  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 25771                           
 25772                           ;lorawan_eu.c: 1257: int8_t txPower;
 25773                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 25774  006DF4  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 25775  006DF8  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 25776  006DFC  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 25777  006E00  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 25778  006E04  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 25779  006E06  ECCC  F02E         	call	_ConfigureRadio
 25780                           
 25781                           ;lorawan_eu.c: 1262: {
 25782                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 25783  006E0A  0E64               	movlw	low _txPower868
 25784  006E0C  0102               	movlb	2	; () banked
 25785  006E0E  25E1               	addwf	(_loRa+225)& (0+255),w,b
 25786  006E10  6EF6               	movwf	tblptrl,c
 25787  006E12  6AF7               	clrf	tblptrh,c
 25788  006E14  0EFE               	movlw	high _txPower868
 25789  006E16  22F7               	addwfc	tblptrh,f,c
 25790  006E18                     	if	1	;There are 3 active tblptr bytes
 25791  006E18  6AF8               	clrf	tblptru,c
 25792  006E1A  0E00               	movlw	low (__mediumconst shr (0+16))
 25793  006E1C  22F8               	addwfc	tblptru,f,c
 25794  006E1E                     	endif
 25795  006E1E  0008               	tblrd		*
 25796  006E20  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 25797                           
 25798                           ; BSR set to: 2
 25799                           ;lorawan_eu.c: 1268: }
 25800                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 25801                           
 25802                           ;lorawan_eu.c: 1264: }
 25803  006E24  0100               	movlb	0	; () banked
 25804  006E26  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 25805  006E28  EC2E  F03D         	call	_RADIO_SetOutputPower
 25806                           
 25807                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 25808  006E2C  0E01               	movlw	1
 25809  006E2E  EC0A  F03D         	call	_RADIO_SetCRC
 25810                           
 25811                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 25812  006E32  0E00               	movlw	0
 25813  006E34  EF05  F03D         	goto	_RADIO_SetIQInverted
 25814  006E38                     __end_of_ConfigureRadioTx:
 25815                           	opt stack 0
 25816                           tosu	equ	0xFFF
 25817                           tosh	equ	0xFFE
 25818                           tosl	equ	0xFFD
 25819                           pclath	equ	0xFFA
 25820                           tblptru	equ	0xFF8
 25821                           tblptrh	equ	0xFF7
 25822                           tblptrl	equ	0xFF6
 25823                           tablat	equ	0xFF5
 25824                           prodh	equ	0xFF4
 25825                           prodl	equ	0xFF3
 25826                           intcon	equ	0xFF2
 25827                           intcon2	equ	0xFF1
 25828                           intcon3	equ	0xFF0
 25829                           indf0	equ	0xFEF
 25830                           postinc0	equ	0xFEE
 25831                           fsr0h	equ	0xFEA
 25832                           fsr0l	equ	0xFE9
 25833                           wreg	equ	0xFE8
 25834                           postinc1	equ	0xFE6
 25835                           postdec1	equ	0xFE5
 25836                           plusw1	equ	0xFE3
 25837                           fsr1h	equ	0xFE2
 25838                           fsr1l	equ	0xFE1
 25839                           indf2	equ	0xFDF
 25840                           postinc2	equ	0xFDE
 25841                           postdec2	equ	0xFDD
 25842                           plusw2	equ	0xFDB
 25843                           fsr2h	equ	0xFDA
 25844                           fsr2l	equ	0xFD9
 25845                           status	equ	0xFD8
 25846                           
 25847 ;; *************** function _RADIO_SetOutputPower *****************
 25848 ;; Defined at:
 25849 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25850 ;; Parameters:    Size  Location     Type
 25851 ;;  power           1    wreg     char 
 25852 ;; Auto vars:     Size  Location     Type
 25853 ;;  power           1    4[BANK0 ] char 
 25854 ;; Return value:  Size  Location     Type
 25855 ;;                  1    wreg      void 
 25856 ;; Registers used:
 25857 ;;		wreg
 25858 ;; Tracked objects:
 25859 ;;		On entry : F/0
 25860 ;;		On exit  : 0/0
 25861 ;;		Unchanged: 0/0
 25862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25864 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25865 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25866 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25867 ;;Total ram usage:        1 bytes
 25868 ;; Hardware stack levels used:    1
 25869 ;; Hardware stack levels required when called:    7
 25870 ;; This function calls:
 25871 ;;		Nothing
 25872 ;; This function is called by:
 25873 ;;		_ConfigureRadioTx
 25874 ;; This function uses a non-reentrant model
 25875 ;;
 25876                           
 25877                           	psect	text133
 25878  007A5C                     __ptext133:
 25879                           	opt stack 0
 25880  007A5C                     _RADIO_SetOutputPower:
 25881                           	opt stack 19
 25882                           
 25883                           ;incstack = 0
 25884                           ;RADIO_SetOutputPower@power stored from wreg
 25885  007A5C  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 25886                           
 25887                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 25888  007A5E  C064  F194         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 25889  007A62  0012               	return		;funcret
 25890  007A64                     __end_of_RADIO_SetOutputPower:
 25891                           	opt stack 0
 25892                           tosu	equ	0xFFF
 25893                           tosh	equ	0xFFE
 25894                           tosl	equ	0xFFD
 25895                           pclath	equ	0xFFA
 25896                           tblptru	equ	0xFF8
 25897                           tblptrh	equ	0xFF7
 25898                           tblptrl	equ	0xFF6
 25899                           tablat	equ	0xFF5
 25900                           prodh	equ	0xFF4
 25901                           prodl	equ	0xFF3
 25902                           intcon	equ	0xFF2
 25903                           intcon2	equ	0xFF1
 25904                           intcon3	equ	0xFF0
 25905                           indf0	equ	0xFEF
 25906                           postinc0	equ	0xFEE
 25907                           fsr0h	equ	0xFEA
 25908                           fsr0l	equ	0xFE9
 25909                           wreg	equ	0xFE8
 25910                           postinc1	equ	0xFE6
 25911                           postdec1	equ	0xFE5
 25912                           plusw1	equ	0xFE3
 25913                           fsr1h	equ	0xFE2
 25914                           fsr1l	equ	0xFE1
 25915                           indf2	equ	0xFDF
 25916                           postinc2	equ	0xFDE
 25917                           postdec2	equ	0xFDD
 25918                           plusw2	equ	0xFDB
 25919                           fsr2h	equ	0xFDA
 25920                           fsr2l	equ	0xFD9
 25921                           status	equ	0xFD8
 25922                           
 25923 ;; *************** function _RADIO_SetIQInverted *****************
 25924 ;; Defined at:
 25925 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 25926 ;; Parameters:    Size  Location     Type
 25927 ;;  iqInverted      1    wreg     unsigned char 
 25928 ;; Auto vars:     Size  Location     Type
 25929 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 25930 ;; Return value:  Size  Location     Type
 25931 ;;                  1    wreg      void 
 25932 ;; Registers used:
 25933 ;;		wreg
 25934 ;; Tracked objects:
 25935 ;;		On entry : 0/0
 25936 ;;		On exit  : 0/0
 25937 ;;		Unchanged: 0/0
 25938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 25939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25940 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25942 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 25943 ;;Total ram usage:        1 bytes
 25944 ;; Hardware stack levels used:    1
 25945 ;; Hardware stack levels required when called:    7
 25946 ;; This function calls:
 25947 ;;		Nothing
 25948 ;; This function is called by:
 25949 ;;		_ConfigureRadioTx
 25950 ;;		_ConfigureRadioRx
 25951 ;; This function uses a non-reentrant model
 25952 ;;
 25953                           
 25954                           	psect	text134
 25955  007A0A                     __ptext134:
 25956                           	opt stack 0
 25957  007A0A                     _RADIO_SetIQInverted:
 25958                           	opt stack 19
 25959                           
 25960                           ;incstack = 0
 25961                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 25962  007A0A  0100               	movlb	0	; () banked
 25963  007A0C  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 25964                           
 25965                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 25966  007A0E  C064  F199         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 25967  007A12  0012               	return		;funcret
 25968  007A14                     __end_of_RADIO_SetIQInverted:
 25969                           	opt stack 0
 25970                           tosu	equ	0xFFF
 25971                           tosh	equ	0xFFE
 25972                           tosl	equ	0xFFD
 25973                           pclath	equ	0xFFA
 25974                           tblptru	equ	0xFF8
 25975                           tblptrh	equ	0xFF7
 25976                           tblptrl	equ	0xFF6
 25977                           tablat	equ	0xFF5
 25978                           prodh	equ	0xFF4
 25979                           prodl	equ	0xFF3
 25980                           intcon	equ	0xFF2
 25981                           intcon2	equ	0xFF1
 25982                           intcon3	equ	0xFF0
 25983                           indf0	equ	0xFEF
 25984                           postinc0	equ	0xFEE
 25985                           fsr0h	equ	0xFEA
 25986                           fsr0l	equ	0xFE9
 25987                           wreg	equ	0xFE8
 25988                           postinc1	equ	0xFE6
 25989                           postdec1	equ	0xFE5
 25990                           plusw1	equ	0xFE3
 25991                           fsr1h	equ	0xFE2
 25992                           fsr1l	equ	0xFE1
 25993                           indf2	equ	0xFDF
 25994                           postinc2	equ	0xFDE
 25995                           postdec2	equ	0xFDD
 25996                           plusw2	equ	0xFDB
 25997                           fsr2h	equ	0xFDA
 25998                           fsr2l	equ	0xFD9
 25999                           status	equ	0xFD8
 26000                           
 26001 ;; *************** function _RADIO_SetCRC *****************
 26002 ;; Defined at:
 26003 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26004 ;; Parameters:    Size  Location     Type
 26005 ;;  crc             1    wreg     unsigned char 
 26006 ;; Auto vars:     Size  Location     Type
 26007 ;;  crc             1    4[BANK0 ] unsigned char 
 26008 ;; Return value:  Size  Location     Type
 26009 ;;                  1    wreg      void 
 26010 ;; Registers used:
 26011 ;;		wreg
 26012 ;; Tracked objects:
 26013 ;;		On entry : 0/0
 26014 ;;		On exit  : 0/0
 26015 ;;		Unchanged: 0/0
 26016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26018 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26020 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26021 ;;Total ram usage:        1 bytes
 26022 ;; Hardware stack levels used:    1
 26023 ;; Hardware stack levels required when called:    7
 26024 ;; This function calls:
 26025 ;;		Nothing
 26026 ;; This function is called by:
 26027 ;;		_ConfigureRadioTx
 26028 ;;		_ConfigureRadioRx
 26029 ;; This function uses a non-reentrant model
 26030 ;;
 26031                           
 26032                           	psect	text135
 26033  007A14                     __ptext135:
 26034                           	opt stack 0
 26035  007A14                     _RADIO_SetCRC:
 26036                           	opt stack 19
 26037                           
 26038                           ;incstack = 0
 26039                           ;RADIO_SetCRC@crc stored from wreg
 26040  007A14  0100               	movlb	0	; () banked
 26041  007A16  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 26042                           
 26043                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 26044  007A18  C064  F195         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 26045  007A1C  0012               	return		;funcret
 26046  007A1E                     __end_of_RADIO_SetCRC:
 26047                           	opt stack 0
 26048                           tosu	equ	0xFFF
 26049                           tosh	equ	0xFFE
 26050                           tosl	equ	0xFFD
 26051                           pclath	equ	0xFFA
 26052                           tblptru	equ	0xFF8
 26053                           tblptrh	equ	0xFF7
 26054                           tblptrl	equ	0xFF6
 26055                           tablat	equ	0xFF5
 26056                           prodh	equ	0xFF4
 26057                           prodl	equ	0xFF3
 26058                           intcon	equ	0xFF2
 26059                           intcon2	equ	0xFF1
 26060                           intcon3	equ	0xFF0
 26061                           indf0	equ	0xFEF
 26062                           postinc0	equ	0xFEE
 26063                           fsr0h	equ	0xFEA
 26064                           fsr0l	equ	0xFE9
 26065                           wreg	equ	0xFE8
 26066                           postinc1	equ	0xFE6
 26067                           postdec1	equ	0xFE5
 26068                           plusw1	equ	0xFE3
 26069                           fsr1h	equ	0xFE2
 26070                           fsr1l	equ	0xFE1
 26071                           indf2	equ	0xFDF
 26072                           postinc2	equ	0xFDE
 26073                           postdec2	equ	0xFDD
 26074                           plusw2	equ	0xFDB
 26075                           fsr2h	equ	0xFDA
 26076                           fsr2l	equ	0xFD9
 26077                           status	equ	0xFD8
 26078                           
 26079 ;; *************** function _ConfigureRadio *****************
 26080 ;; Defined at:
 26081 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26082 ;; Parameters:    Size  Location     Type
 26083 ;;  dataRate        1    wreg     unsigned char 
 26084 ;;  freq            4   17[BANK0 ] unsigned long 
 26085 ;; Auto vars:     Size  Location     Type
 26086 ;;  dataRate        1   21[BANK0 ] unsigned char 
 26087 ;; Return value:  Size  Location     Type
 26088 ;;                  1    wreg      void 
 26089 ;; Registers used:
 26090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26091 ;; Tracked objects:
 26092 ;;		On entry : F/0
 26093 ;;		On exit  : 0/0
 26094 ;;		Unchanged: 0/0
 26095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26096 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26097 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26099 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26100 ;;Total ram usage:        5 bytes
 26101 ;; Hardware stack levels used:    1
 26102 ;; Hardware stack levels required when called:    9
 26103 ;; This function calls:
 26104 ;;		_RADIO_SetBandwidth
 26105 ;;		_RADIO_SetChannelFrequency
 26106 ;;		_RADIO_SetFSKSyncWord
 26107 ;;		_RADIO_SetFrequencyHopPeriod
 26108 ;;		_RADIO_SetLoRaSyncWord
 26109 ;;		_RADIO_SetModulation
 26110 ;;		_RADIO_SetSpreadingFactor
 26111 ;; This function is called by:
 26112 ;;		_ConfigureRadioTx
 26113 ;;		_ConfigureRadioRx
 26114 ;; This function uses a non-reentrant model
 26115 ;;
 26116                           
 26117                           	psect	text136
 26118  005D98                     __ptext136:
 26119                           	opt stack 0
 26120  005D98                     _ConfigureRadio:
 26121                           	opt stack 17
 26122                           
 26123                           ;incstack = 0
 26124                           ;ConfigureRadio@dataRate stored from wreg
 26125  005D98  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 26126                           
 26127                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 26128  005D9A  0E37               	movlw	low _modulation
 26129  005D9C  0100               	movlb	0	; () banked
 26130  005D9E  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 26131  005DA0  6EF6               	movwf	tblptrl,c
 26132  005DA2  6AF7               	clrf	tblptrh,c
 26133  005DA4  0EFE               	movlw	high _modulation
 26134  005DA6  22F7               	addwfc	tblptrh,f,c
 26135  005DA8                     	if	1	;There are 3 active tblptr bytes
 26136  005DA8  6AF8               	clrf	tblptru,c
 26137  005DAA  0E00               	movlw	low (__mediumconst shr (0+16))
 26138  005DAC  22F8               	addwfc	tblptru,f,c
 26139  005DAE                     	endif
 26140  005DAE  0008               	tblrd		*
 26141  005DB0  50F5               	movf	tablat,w,c
 26142  005DB2  EC36  F03D         	call	_RADIO_SetModulation
 26143                           
 26144                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 26145  005DB6  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 26146  005DBA  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 26147  005DBE  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 26148  005DC2  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 26149  005DC6  ECE0  F02F         	call	_RADIO_SetChannelFrequency	;wreg free
 26150                           
 26151                           ; BSR set to: 0
 26152                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 26153  005DCA  0E00               	movlw	0
 26154  005DCC  6B65               	clrf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 26155  005DCE  6B64               	clrf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 26156  005DD0  EC0F  F03D         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 26157                           
 26158                           ; BSR set to: 0
 26159                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 26160  005DD4  0E07               	movlw	7
 26161  005DD6  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 26162  005DD8  D01F               	goto	l12826
 26163                           
 26164                           ; BSR set to: 0
 26165                           ;lorawan_eu.c: 870: {
 26166                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 26167  005DDA  0E5D               	movlw	low _spreadingFactor
 26168  005DDC  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 26169  005DDE  6EF6               	movwf	tblptrl,c
 26170  005DE0  6AF7               	clrf	tblptrh,c
 26171  005DE2  0EFE               	movlw	high _spreadingFactor
 26172  005DE4  22F7               	addwfc	tblptrh,f,c
 26173  005DE6                     	if	1	;There are 3 active tblptr bytes
 26174  005DE6  6AF8               	clrf	tblptru,c
 26175  005DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 26176  005DEA  22F8               	addwfc	tblptru,f,c
 26177  005DEC                     	endif
 26178  005DEC  0008               	tblrd		*
 26179  005DEE  50F5               	movf	tablat,w,c
 26180  005DF0  EC32  F03D         	call	_RADIO_SetSpreadingFactor
 26181                           
 26182                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 26183  005DF4  0E4F               	movlw	low _bandwidth
 26184  005DF6  0100               	movlb	0	; () banked
 26185  005DF8  2575               	addwf	ConfigureRadio@dataRate& (0+255),w,b
 26186  005DFA  6EF6               	movwf	tblptrl,c
 26187  005DFC  6AF7               	clrf	tblptrh,c
 26188  005DFE  0EFE               	movlw	high _bandwidth
 26189  005E00  22F7               	addwfc	tblptrh,f,c
 26190  005E02                     	if	1	;There are 3 active tblptr bytes
 26191  005E02  6AF8               	clrf	tblptru,c
 26192  005E04  0E00               	movlw	low (__mediumconst shr (0+16))
 26193  005E06  22F8               	addwfc	tblptru,f,c
 26194  005E08                     	endif
 26195  005E08  0008               	tblrd		*
 26196  005E0A  50F5               	movf	tablat,w,c
 26197  005E0C  EC3A  F03D         	call	_RADIO_SetBandwidth
 26198                           
 26199                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 26200  005E10  0102               	movlb	2	; () banked
 26201  005E12  51F4               	movf	(_loRa+244)& (0+255),w,b
 26202  005E14  EF14  F03D         	goto	_RADIO_SetLoRaSyncWord
 26203  005E18                     l12826:
 26204                           
 26205                           ; BSR set to: 0
 26206                           ;lorawan_eu.c: 876: else
 26207                           ;lorawan_eu.c: 877: {
 26208                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 26209  005E18  0EBE               	movlw	low _FskSyncWordBuff
 26210  005E1A  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 26211  005E1C  0EFE               	movlw	high _FskSyncWordBuff
 26212  005E1E  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 26213  005E20  0E03               	movlw	3
 26214  005E22  EF9C  F039         	goto	_RADIO_SetFSKSyncWord
 26215  005E26                     __end_of_ConfigureRadio:
 26216                           	opt stack 0
 26217                           tosu	equ	0xFFF
 26218                           tosh	equ	0xFFE
 26219                           tosl	equ	0xFFD
 26220                           pclath	equ	0xFFA
 26221                           tblptru	equ	0xFF8
 26222                           tblptrh	equ	0xFF7
 26223                           tblptrl	equ	0xFF6
 26224                           tablat	equ	0xFF5
 26225                           prodh	equ	0xFF4
 26226                           prodl	equ	0xFF3
 26227                           intcon	equ	0xFF2
 26228                           intcon2	equ	0xFF1
 26229                           intcon3	equ	0xFF0
 26230                           indf0	equ	0xFEF
 26231                           postinc0	equ	0xFEE
 26232                           fsr0h	equ	0xFEA
 26233                           fsr0l	equ	0xFE9
 26234                           wreg	equ	0xFE8
 26235                           postinc1	equ	0xFE6
 26236                           postdec1	equ	0xFE5
 26237                           plusw1	equ	0xFE3
 26238                           fsr1h	equ	0xFE2
 26239                           fsr1l	equ	0xFE1
 26240                           indf2	equ	0xFDF
 26241                           postinc2	equ	0xFDE
 26242                           postdec2	equ	0xFDD
 26243                           plusw2	equ	0xFDB
 26244                           fsr2h	equ	0xFDA
 26245                           fsr2l	equ	0xFD9
 26246                           status	equ	0xFD8
 26247                           
 26248 ;; *************** function _RADIO_SetSpreadingFactor *****************
 26249 ;; Defined at:
 26250 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26251 ;; Parameters:    Size  Location     Type
 26252 ;;  spreadingFac    1    wreg     enum E7761
 26253 ;; Auto vars:     Size  Location     Type
 26254 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 26255 ;; Return value:  Size  Location     Type
 26256 ;;                  1    wreg      void 
 26257 ;; Registers used:
 26258 ;;		wreg
 26259 ;; Tracked objects:
 26260 ;;		On entry : F/0
 26261 ;;		On exit  : 0/0
 26262 ;;		Unchanged: 0/0
 26263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26264 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26267 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26268 ;;Total ram usage:        1 bytes
 26269 ;; Hardware stack levels used:    1
 26270 ;; Hardware stack levels required when called:    7
 26271 ;; This function calls:
 26272 ;;		Nothing
 26273 ;; This function is called by:
 26274 ;;		_ConfigureRadio
 26275 ;; This function uses a non-reentrant model
 26276 ;;
 26277                           
 26278                           	psect	text137
 26279  007A64                     __ptext137:
 26280                           	opt stack 0
 26281  007A64                     _RADIO_SetSpreadingFactor:
 26282                           	opt stack 18
 26283                           
 26284                           ;incstack = 0
 26285                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 26286  007A64  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 26287                           
 26288                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 26289  007A66  C064  F192         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 26290  007A6A  0012               	return		;funcret
 26291  007A6C                     __end_of_RADIO_SetSpreadingFactor:
 26292                           	opt stack 0
 26293                           tosu	equ	0xFFF
 26294                           tosh	equ	0xFFE
 26295                           tosl	equ	0xFFD
 26296                           pclath	equ	0xFFA
 26297                           tblptru	equ	0xFF8
 26298                           tblptrh	equ	0xFF7
 26299                           tblptrl	equ	0xFF6
 26300                           tablat	equ	0xFF5
 26301                           prodh	equ	0xFF4
 26302                           prodl	equ	0xFF3
 26303                           intcon	equ	0xFF2
 26304                           intcon2	equ	0xFF1
 26305                           intcon3	equ	0xFF0
 26306                           indf0	equ	0xFEF
 26307                           postinc0	equ	0xFEE
 26308                           fsr0h	equ	0xFEA
 26309                           fsr0l	equ	0xFE9
 26310                           wreg	equ	0xFE8
 26311                           postinc1	equ	0xFE6
 26312                           postdec1	equ	0xFE5
 26313                           plusw1	equ	0xFE3
 26314                           fsr1h	equ	0xFE2
 26315                           fsr1l	equ	0xFE1
 26316                           indf2	equ	0xFDF
 26317                           postinc2	equ	0xFDE
 26318                           postdec2	equ	0xFDD
 26319                           plusw2	equ	0xFDB
 26320                           fsr2h	equ	0xFDA
 26321                           fsr2l	equ	0xFD9
 26322                           status	equ	0xFD8
 26323                           
 26324 ;; *************** function _RADIO_SetModulation *****************
 26325 ;; Defined at:
 26326 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26327 ;; Parameters:    Size  Location     Type
 26328 ;;  modulation      1    wreg     enum E7751
 26329 ;; Auto vars:     Size  Location     Type
 26330 ;;  modulation      1    4[BANK0 ] enum E7751
 26331 ;; Return value:  Size  Location     Type
 26332 ;;                  1    wreg      void 
 26333 ;; Registers used:
 26334 ;;		wreg
 26335 ;; Tracked objects:
 26336 ;;		On entry : F/0
 26337 ;;		On exit  : 0/0
 26338 ;;		Unchanged: 0/0
 26339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26343 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26344 ;;Total ram usage:        1 bytes
 26345 ;; Hardware stack levels used:    1
 26346 ;; Hardware stack levels required when called:    7
 26347 ;; This function calls:
 26348 ;;		Nothing
 26349 ;; This function is called by:
 26350 ;;		_ConfigureRadio
 26351 ;; This function uses a non-reentrant model
 26352 ;;
 26353                           
 26354                           	psect	text138
 26355  007A6C                     __ptext138:
 26356                           	opt stack 0
 26357  007A6C                     _RADIO_SetModulation:
 26358                           	opt stack 18
 26359                           
 26360                           ;incstack = 0
 26361                           ;RADIO_SetModulation@modulation stored from wreg
 26362  007A6C  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 26363                           
 26364                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 26365  007A6E  C064  F191         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 26366  007A72  0012               	return		;funcret
 26367  007A74                     __end_of_RADIO_SetModulation:
 26368                           	opt stack 0
 26369                           tosu	equ	0xFFF
 26370                           tosh	equ	0xFFE
 26371                           tosl	equ	0xFFD
 26372                           pclath	equ	0xFFA
 26373                           tblptru	equ	0xFF8
 26374                           tblptrh	equ	0xFF7
 26375                           tblptrl	equ	0xFF6
 26376                           tablat	equ	0xFF5
 26377                           prodh	equ	0xFF4
 26378                           prodl	equ	0xFF3
 26379                           intcon	equ	0xFF2
 26380                           intcon2	equ	0xFF1
 26381                           intcon3	equ	0xFF0
 26382                           indf0	equ	0xFEF
 26383                           postinc0	equ	0xFEE
 26384                           fsr0h	equ	0xFEA
 26385                           fsr0l	equ	0xFE9
 26386                           wreg	equ	0xFE8
 26387                           postinc1	equ	0xFE6
 26388                           postdec1	equ	0xFE5
 26389                           plusw1	equ	0xFE3
 26390                           fsr1h	equ	0xFE2
 26391                           fsr1l	equ	0xFE1
 26392                           indf2	equ	0xFDF
 26393                           postinc2	equ	0xFDE
 26394                           postdec2	equ	0xFDD
 26395                           plusw2	equ	0xFDB
 26396                           fsr2h	equ	0xFDA
 26397                           fsr2l	equ	0xFD9
 26398                           status	equ	0xFD8
 26399                           
 26400 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 26401 ;; Defined at:
 26402 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26403 ;; Parameters:    Size  Location     Type
 26404 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 26405 ;; Auto vars:     Size  Location     Type
 26406 ;;		None
 26407 ;; Return value:  Size  Location     Type
 26408 ;;                  1    wreg      void 
 26409 ;; Registers used:
 26410 ;;		None
 26411 ;; Tracked objects:
 26412 ;;		On entry : F/0
 26413 ;;		On exit  : F/0
 26414 ;;		Unchanged: F/0
 26415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26419 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26420 ;;Total ram usage:        2 bytes
 26421 ;; Hardware stack levels used:    1
 26422 ;; Hardware stack levels required when called:    7
 26423 ;; This function calls:
 26424 ;;		Nothing
 26425 ;; This function is called by:
 26426 ;;		_ConfigureRadio
 26427 ;; This function uses a non-reentrant model
 26428 ;;
 26429                           
 26430                           	psect	text139
 26431  007A1E                     __ptext139:
 26432                           	opt stack 0
 26433  007A1E                     _RADIO_SetFrequencyHopPeriod:
 26434                           	opt stack 18
 26435                           
 26436                           ; BSR set to: 0
 26437                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 26438                           
 26439                           ;incstack = 0
 26440  007A1E  C064  F197         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 26441  007A22  C065  F198         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 26442                           
 26443                           ; BSR set to: 0
 26444  007A26  0012               	return		;funcret
 26445  007A28                     __end_of_RADIO_SetFrequencyHopPeriod:
 26446                           	opt stack 0
 26447                           tosu	equ	0xFFF
 26448                           tosh	equ	0xFFE
 26449                           tosl	equ	0xFFD
 26450                           pclath	equ	0xFFA
 26451                           tblptru	equ	0xFF8
 26452                           tblptrh	equ	0xFF7
 26453                           tblptrl	equ	0xFF6
 26454                           tablat	equ	0xFF5
 26455                           prodh	equ	0xFF4
 26456                           prodl	equ	0xFF3
 26457                           intcon	equ	0xFF2
 26458                           intcon2	equ	0xFF1
 26459                           intcon3	equ	0xFF0
 26460                           indf0	equ	0xFEF
 26461                           postinc0	equ	0xFEE
 26462                           fsr0h	equ	0xFEA
 26463                           fsr0l	equ	0xFE9
 26464                           wreg	equ	0xFE8
 26465                           postinc1	equ	0xFE6
 26466                           postdec1	equ	0xFE5
 26467                           plusw1	equ	0xFE3
 26468                           fsr1h	equ	0xFE2
 26469                           fsr1l	equ	0xFE1
 26470                           indf2	equ	0xFDF
 26471                           postinc2	equ	0xFDE
 26472                           postdec2	equ	0xFDD
 26473                           plusw2	equ	0xFDB
 26474                           fsr2h	equ	0xFDA
 26475                           fsr2l	equ	0xFD9
 26476                           status	equ	0xFD8
 26477                           
 26478 ;; *************** function _RADIO_SetFSKSyncWord *****************
 26479 ;; Defined at:
 26480 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26481 ;; Parameters:    Size  Location     Type
 26482 ;;  syncWordLen     1    wreg     unsigned char 
 26483 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 26484 ;;		 -> FskSyncWordBuff(3), 
 26485 ;; Auto vars:     Size  Location     Type
 26486 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 26487 ;; Return value:  Size  Location     Type
 26488 ;;                  1    wreg      void 
 26489 ;; Registers used:
 26490 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 26491 ;; Tracked objects:
 26492 ;;		On entry : F/0
 26493 ;;		On exit  : F/0
 26494 ;;		Unchanged: 0/0
 26495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26496 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26497 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26498 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26499 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26500 ;;Total ram usage:        3 bytes
 26501 ;; Hardware stack levels used:    1
 26502 ;; Hardware stack levels required when called:    8
 26503 ;; This function calls:
 26504 ;;		_memcpy
 26505 ;; This function is called by:
 26506 ;;		_ConfigureRadio
 26507 ;; This function uses a non-reentrant model
 26508 ;;
 26509                           
 26510                           	psect	text140
 26511  007338                     __ptext140:
 26512                           	opt stack 0
 26513  007338                     _RADIO_SetFSKSyncWord:
 26514                           	opt stack 17
 26515                           
 26516                           ; BSR set to: 0
 26517                           ;incstack = 0
 26518                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 26519  007338  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 26520                           
 26521                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 26522  00733A  0E08               	movlw	8
 26523  00733C  0100               	movlb	0	; () banked
 26524  00733E  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 26525  007340  D001               	goto	l12528
 26526                           
 26527                           ; BSR set to: 0
 26528                           ;radio_driver_SX1276.c: 1627: {
 26529                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 26530  007342  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 26531  007344                     l12528:
 26532                           
 26533                           ; BSR set to: 0
 26534                           ;radio_driver_SX1276.c: 1629: }
 26535                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 26536  007344  0E88               	movlw	low (_RadioConfiguration+15)
 26537  007346  6F64               	movwf	memcpy@d1& (0+255),b
 26538  007348  0E01               	movlw	high (_RadioConfiguration+15)
 26539  00734A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 26540  00734C  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 26541  007350  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 26542  007354  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 26543  007358  6B69               	clrf	(memcpy@n+1)& (0+255),b
 26544  00735A  ECD5  F034         	call	_memcpy	;wreg free
 26545                           
 26546                           ; BSR set to: 0
 26547                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 26548  00735E  C070  F190         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 26549                           
 26550                           ; BSR set to: 0
 26551  007362  0012               	return		;funcret
 26552  007364                     __end_of_RADIO_SetFSKSyncWord:
 26553                           	opt stack 0
 26554                           tosu	equ	0xFFF
 26555                           tosh	equ	0xFFE
 26556                           tosl	equ	0xFFD
 26557                           pclath	equ	0xFFA
 26558                           tblptru	equ	0xFF8
 26559                           tblptrh	equ	0xFF7
 26560                           tblptrl	equ	0xFF6
 26561                           tablat	equ	0xFF5
 26562                           prodh	equ	0xFF4
 26563                           prodl	equ	0xFF3
 26564                           intcon	equ	0xFF2
 26565                           intcon2	equ	0xFF1
 26566                           intcon3	equ	0xFF0
 26567                           indf0	equ	0xFEF
 26568                           postinc0	equ	0xFEE
 26569                           fsr0h	equ	0xFEA
 26570                           fsr0l	equ	0xFE9
 26571                           wreg	equ	0xFE8
 26572                           postinc1	equ	0xFE6
 26573                           postdec1	equ	0xFE5
 26574                           plusw1	equ	0xFE3
 26575                           fsr1h	equ	0xFE2
 26576                           fsr1l	equ	0xFE1
 26577                           indf2	equ	0xFDF
 26578                           postinc2	equ	0xFDE
 26579                           postdec2	equ	0xFDD
 26580                           plusw2	equ	0xFDB
 26581                           fsr2h	equ	0xFDA
 26582                           fsr2l	equ	0xFD9
 26583                           status	equ	0xFD8
 26584                           
 26585 ;; *************** function _RADIO_SetChannelFrequency *****************
 26586 ;; Defined at:
 26587 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26588 ;; Parameters:    Size  Location     Type
 26589 ;;  frequency       4    4[BANK0 ] unsigned long 
 26590 ;; Auto vars:     Size  Location     Type
 26591 ;;		None
 26592 ;; Return value:  Size  Location     Type
 26593 ;;                  2    4[BANK0 ] enum E7805
 26594 ;; Registers used:
 26595 ;;		wreg, status,2, status,0
 26596 ;; Tracked objects:
 26597 ;;		On entry : 0/0
 26598 ;;		On exit  : F/0
 26599 ;;		Unchanged: 0/0
 26600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26601 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26604 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26605 ;;Total ram usage:        4 bytes
 26606 ;; Hardware stack levels used:    1
 26607 ;; Hardware stack levels required when called:    7
 26608 ;; This function calls:
 26609 ;;		Nothing
 26610 ;; This function is called by:
 26611 ;;		_ConfigureRadio
 26612 ;; This function uses a non-reentrant model
 26613 ;;
 26614                           
 26615                           	psect	text141
 26616  005FC0                     __ptext141:
 26617                           	opt stack 0
 26618  005FC0                     _RADIO_SetChannelFrequency:
 26619                           	opt stack 18
 26620                           
 26621                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 26622                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 26623                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 26624                           
 26625                           ; BSR set to: 0
 26626                           ;incstack = 0
 26627  005FC0  0E40               	movlw	64
 26628  005FC2  0100               	movlb	0	; () banked
 26629  005FC4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26630  005FC6  0E74               	movlw	116
 26631  005FC8  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26632  005FCA  0E2A               	movlw	42
 26633  005FCC  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26634  005FCE  0E08               	movlw	8
 26635  005FD0  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26636  005FD2  E309               	bnc	l12508
 26637                           
 26638                           ; BSR set to: 0
 26639  005FD4  0EC1               	movlw	193
 26640  005FD6  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26641  005FD8  0E49               	movlw	73
 26642  005FDA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26643  005FDC  0E6E               	movlw	110
 26644  005FDE  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26645  005FE0  0E0A               	movlw	10
 26646  005FE2  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26647  005FE4  E325               	bnc	l692
 26648  005FE6                     l12508:
 26649                           
 26650                           ; BSR set to: 0
 26651  005FE6  0E80               	movlw	128
 26652  005FE8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26653  005FEA  0E1A               	movlw	26
 26654  005FEC  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26655  005FEE  0E70               	movlw	112
 26656  005FF0  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26657  005FF2  0E18               	movlw	24
 26658  005FF4  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26659  005FF6  E309               	bnc	l12512
 26660                           
 26661                           ; BSR set to: 0
 26662  005FF8  0E41               	movlw	65
 26663  005FFA  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26664  005FFC  0EDD               	movlw	221
 26665  005FFE  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26666  006000  0E4A               	movlw	74
 26667  006002  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26668  006004  0E1F               	movlw	31
 26669  006006  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26670  006008  E313               	bnc	l692
 26671  00600A                     l12512:
 26672                           
 26673                           ; BSR set to: 0
 26674  00600A  0E80               	movlw	128
 26675  00600C  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26676  00600E  0E13               	movlw	19
 26677  006010  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26678  006012  0E61               	movlw	97
 26679  006014  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26680  006016  0E33               	movlw	51
 26681  006018  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26682  00601A  A0D8               	btfss	status,0,c
 26683  00601C  0012               	return	
 26684                           
 26685                           ; BSR set to: 0
 26686  00601E  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 26687  006020  0EF7               	movlw	247
 26688  006022  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 26689  006024  0ECB               	movlw	203
 26690  006026  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 26691  006028  0E3C               	movlw	60
 26692  00602A  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 26693  00602C  B0D8               	btfsc	status,0,c
 26694  00602E  0012               	return	
 26695  006030                     l692:
 26696                           
 26697                           ; BSR set to: 0
 26698                           ;radio_driver_SX1276.c: 1449: {
 26699                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 26700  006030  C064  F179         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 26701  006034  C065  F17A         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 26702  006038  C066  F17B         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 26703  00603C  C067  F17C         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 26704                           
 26705                           ; BSR set to: 0
 26706                           
 26707                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 26708                           ;	Return value of _RADIO_SetChannelFrequency is never used
 26709  006040  0012               	return		;funcret
 26710  006042                     __end_of_RADIO_SetChannelFrequency:
 26711                           	opt stack 0
 26712                           tosu	equ	0xFFF
 26713                           tosh	equ	0xFFE
 26714                           tosl	equ	0xFFD
 26715                           pclath	equ	0xFFA
 26716                           tblptru	equ	0xFF8
 26717                           tblptrh	equ	0xFF7
 26718                           tblptrl	equ	0xFF6
 26719                           tablat	equ	0xFF5
 26720                           prodh	equ	0xFF4
 26721                           prodl	equ	0xFF3
 26722                           intcon	equ	0xFF2
 26723                           intcon2	equ	0xFF1
 26724                           intcon3	equ	0xFF0
 26725                           indf0	equ	0xFEF
 26726                           postinc0	equ	0xFEE
 26727                           fsr0h	equ	0xFEA
 26728                           fsr0l	equ	0xFE9
 26729                           wreg	equ	0xFE8
 26730                           postinc1	equ	0xFE6
 26731                           postdec1	equ	0xFE5
 26732                           plusw1	equ	0xFE3
 26733                           fsr1h	equ	0xFE2
 26734                           fsr1l	equ	0xFE1
 26735                           indf2	equ	0xFDF
 26736                           postinc2	equ	0xFDE
 26737                           postdec2	equ	0xFDD
 26738                           plusw2	equ	0xFDB
 26739                           fsr2h	equ	0xFDA
 26740                           fsr2l	equ	0xFD9
 26741                           status	equ	0xFD8
 26742                           
 26743 ;; *************** function _RADIO_SetBandwidth *****************
 26744 ;; Defined at:
 26745 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26746 ;; Parameters:    Size  Location     Type
 26747 ;;  bandwidth       1    wreg     enum E7769
 26748 ;; Auto vars:     Size  Location     Type
 26749 ;;  bandwidth       1    4[BANK0 ] enum E7769
 26750 ;; Return value:  Size  Location     Type
 26751 ;;                  1    wreg      void 
 26752 ;; Registers used:
 26753 ;;		wreg
 26754 ;; Tracked objects:
 26755 ;;		On entry : F/0
 26756 ;;		On exit  : 0/0
 26757 ;;		Unchanged: 0/0
 26758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26760 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26762 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26763 ;;Total ram usage:        1 bytes
 26764 ;; Hardware stack levels used:    1
 26765 ;; Hardware stack levels required when called:    7
 26766 ;; This function calls:
 26767 ;;		Nothing
 26768 ;; This function is called by:
 26769 ;;		_ConfigureRadio
 26770 ;; This function uses a non-reentrant model
 26771 ;;
 26772                           
 26773                           	psect	text142
 26774  007A74                     __ptext142:
 26775                           	opt stack 0
 26776  007A74                     _RADIO_SetBandwidth:
 26777                           	opt stack 18
 26778                           
 26779                           ; BSR set to: 0
 26780                           ;incstack = 0
 26781                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 26782  007A74  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 26783                           
 26784                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 26785  007A76  C064  F193         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 26786  007A7A  0012               	return		;funcret
 26787  007A7C                     __end_of_RADIO_SetBandwidth:
 26788                           	opt stack 0
 26789                           tosu	equ	0xFFF
 26790                           tosh	equ	0xFFE
 26791                           tosl	equ	0xFFD
 26792                           pclath	equ	0xFFA
 26793                           tblptru	equ	0xFF8
 26794                           tblptrh	equ	0xFF7
 26795                           tblptrl	equ	0xFF6
 26796                           tablat	equ	0xFF5
 26797                           prodh	equ	0xFF4
 26798                           prodl	equ	0xFF3
 26799                           intcon	equ	0xFF2
 26800                           intcon2	equ	0xFF1
 26801                           intcon3	equ	0xFF0
 26802                           indf0	equ	0xFEF
 26803                           postinc0	equ	0xFEE
 26804                           fsr0h	equ	0xFEA
 26805                           fsr0l	equ	0xFE9
 26806                           wreg	equ	0xFE8
 26807                           postinc1	equ	0xFE6
 26808                           postdec1	equ	0xFE5
 26809                           plusw1	equ	0xFE3
 26810                           fsr1h	equ	0xFE2
 26811                           fsr1l	equ	0xFE1
 26812                           indf2	equ	0xFDF
 26813                           postinc2	equ	0xFDE
 26814                           postdec2	equ	0xFDD
 26815                           plusw2	equ	0xFDB
 26816                           fsr2h	equ	0xFDA
 26817                           fsr2l	equ	0xFD9
 26818                           status	equ	0xFD8
 26819                           
 26820 ;; *************** function _RADIO_Transmit *****************
 26821 ;; Defined at:
 26822 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26823 ;; Parameters:    Size  Location     Type
 26824 ;;  buffer          2   54[BANK0 ] PTR unsigned char 
 26825 ;;		 -> macBuffer(271), 
 26826 ;;  bufferLen       1   56[BANK0 ] unsigned char 
 26827 ;; Auto vars:     Size  Location     Type
 26828 ;;  i               1   70[BANK0 ] unsigned char 
 26829 ;;  regValue        1   69[BANK0 ] unsigned char 
 26830 ;; Return value:  Size  Location     Type
 26831 ;;                  2   54[BANK0 ] enum E7805
 26832 ;; Registers used:
 26833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26834 ;; Tracked objects:
 26835 ;;		On entry : F/0
 26836 ;;		On exit  : F/0
 26837 ;;		Unchanged: 0/0
 26838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26839 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26840 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26841 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26842 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26843 ;;Total ram usage:       17 bytes
 26844 ;; Hardware stack levels used:    1
 26845 ;; Hardware stack levels required when called:   12
 26846 ;; This function calls:
 26847 ;;		_HALSPICSAssert
 26848 ;;		_HALSPICSDeassert
 26849 ;;		_HALSPISend
 26850 ;;		_RADIO_RegisterRead
 26851 ;;		_RADIO_RegisterWrite
 26852 ;;		_RADIO_WriteConfiguration
 26853 ;;		_RADIO_WriteMode
 26854 ;;		_SwTimerSetTimeout
 26855 ;;		_SwTimerStart
 26856 ;;		_SwTimerStop
 26857 ;;		___lldiv
 26858 ;; This function is called by:
 26859 ;;		_LORAWAN_RxTimeout
 26860 ;;		_LORAWAN_Join
 26861 ;;		_LORAWAN_Send
 26862 ;;		_AckRetransmissionCallback
 26863 ;;		_UnconfirmedTransmissionCallback
 26864 ;; This function uses a non-reentrant model
 26865 ;;
 26866                           
 26867                           	psect	text143
 26868  003000                     __ptext143:
 26869                           	opt stack 0
 26870  003000                     _RADIO_Transmit:
 26871                           	opt stack 16
 26872                           
 26873                           ; BSR set to: 0
 26874                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 26875                           ;radio_driver_SX1276.c: 789: uint8_t i;
 26876                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 26877                           
 26878                           ;incstack = 0
 26879  003000  0101               	movlb	1	; () banked
 26880  003002  A59C               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 26881  003004  D006               	goto	l13588
 26882                           
 26883                           ; BSR set to: 1
 26884                           ;radio_driver_SX1276.c: 792: {
 26885                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 26886  003006  0E80               	movlw	128
 26887  003008  0100               	movlb	0	; () banked
 26888  00300A  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26889  00300C  0E03               	movlw	3
 26890  00300E  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26891  003010  0C03               	retlw	3
 26892  003012                     l13588:
 26893                           
 26894                           ; BSR set to: 1
 26895                           ;radio_driver_SX1276.c: 794: }
 26896                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 26897  003012  C19C  F099         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 26898  003016  0E03               	movlw	3
 26899  003018  0100               	movlb	0	; () banked
 26900  00301A  1799               	andwf	??_RADIO_Transmit& (0+255),f,b
 26901  00301C  E005               	bz	l13594
 26902                           
 26903                           ; BSR set to: 0
 26904                           ;radio_driver_SX1276.c: 797: {
 26905                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 26906  00301E  0E80               	movlw	128
 26907  003020  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26908  003022  0E04               	movlw	4
 26909  003024  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26910  003026  0C04               	retlw	4
 26911  003028                     l13594:
 26912                           
 26913                           ; BSR set to: 0
 26914                           ;radio_driver_SX1276.c: 799: }
 26915                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 26916  003028  0101               	movlb	1	; () banked
 26917  00302A  5191               	movf	(_RadioConfiguration+24)& (0+255),w,b
 26918  00302C  E109               	bnz	l13602
 26919                           
 26920                           ; BSR set to: 1
 26921  00302E  0E40               	movlw	64
 26922  003030  0100               	movlb	0	; () banked
 26923  003032  6598               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 26924  003034  D005               	goto	l13602
 26925                           
 26926                           ; BSR set to: 0
 26927                           ;radio_driver_SX1276.c: 802: {
 26928                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 26929  003036  0E80               	movlw	128
 26930  003038  6F97               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 26931  00303A  0E02               	movlw	2
 26932  00303C  6F96               	movwf	?_RADIO_Transmit& (0+255),b
 26933  00303E  0C02               	retlw	2
 26934  003040                     l13602:
 26935                           
 26936                           ;radio_driver_SX1276.c: 804: }
 26937                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 26938  003040  0101               	movlb	1	; () banked
 26939  003042  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 26940  003044  EC6A  F03B         	call	_SwTimerStop
 26941                           
 26942                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 26943  003048  0E00               	movlw	0
 26944  00304A  6F7E               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 26945  00304C  0E04               	movlw	4
 26946  00304E  6F7D               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 26947  003050  ECD4  F009         	call	_RADIO_WriteConfiguration	;wreg free
 26948                           
 26949                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 26950  003054  0101               	movlb	1	; () banked
 26951  003056  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 26952  003058  E123               	bnz	l13620
 26953                           
 26954                           ; BSR set to: 1
 26955                           ;radio_driver_SX1276.c: 813: {
 26956                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 26957  00305A  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 26958  00305E  0E22               	movlw	34
 26959  003060  EC3D  F03B         	call	_RADIO_RegisterWrite
 26960                           
 26961                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 26962  003064  0E0A               	movlw	10
 26963  003066  EC41  F03A         	call	_RADIO_RegisterRead
 26964  00306A  6FA5               	movwf	RADIO_Transmit@regValue& (0+255),b
 26965                           
 26966                           ; BSR set to: 0
 26967                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 26968  00306C  0EF0               	movlw	240
 26969  00306E  17A5               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 26970                           
 26971                           ; BSR set to: 0
 26972                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 26973  003070  87A5               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 26974                           
 26975                           ; BSR set to: 0
 26976                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 26977  003072  C0A5  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 26978  003076  0E0A               	movlw	10
 26979  003078  EC3D  F03B         	call	_RADIO_RegisterWrite
 26980                           
 26981                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 26982  00307C  0E40               	movlw	64
 26983  00307E  0100               	movlb	0	; () banked
 26984  003080  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 26985  003082  EC3D  F03B         	call	_RADIO_RegisterWrite
 26986                           
 26987                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 26988  003086  0100               	movlb	0	; () banked
 26989  003088  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 26990  00308A  0E41               	movlw	65
 26991  00308C  EC3D  F03B         	call	_RADIO_RegisterWrite
 26992                           
 26993                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 26994  003090  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 26995  003094  0E01               	movlw	1
 26996  003096  0100               	movlb	0	; () banked
 26997  003098  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 26998  00309A  ECB9  F029         	call	_RADIO_WriteMode
 26999                           
 27000                           ;radio_driver_SX1276.c: 828: }
 27001  00309E  D00A               	goto	l13622
 27002  0030A0                     l13620:
 27003                           
 27004                           ; BSR set to: 1
 27005                           ;radio_driver_SX1276.c: 829: else
 27006                           ;radio_driver_SX1276.c: 830: {
 27007                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 27008  0030A0  0100               	movlb	0	; () banked
 27009  0030A2  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27010  0030A4  0E40               	movlw	64
 27011  0030A6  EC3D  F03B         	call	_RADIO_RegisterWrite
 27012                           
 27013                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 27014  0030AA  0100               	movlb	0	; () banked
 27015  0030AC  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27016  0030AE  0E41               	movlw	65
 27017  0030B0  EC3D  F03B         	call	_RADIO_RegisterWrite
 27018  0030B4                     l13622:
 27019                           
 27020                           ;radio_driver_SX1276.c: 834: }
 27021                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 27022  0030B4  0101               	movlb	1	; () banked
 27023  0030B6  5191               	movf	(_RadioConfiguration+24)& (0+255),w,b
 27024  0030B8  E105               	bnz	l13626
 27025                           
 27026                           ; BSR set to: 1
 27027                           ;radio_driver_SX1276.c: 837: {
 27028                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 27029  0030BA  C098  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 27030  0030BE  0E00               	movlw	0
 27031  0030C0  EC3D  F03B         	call	_RADIO_RegisterWrite
 27032  0030C4                     l13626:
 27033                           
 27034                           ;radio_driver_SX1276.c: 840: }
 27035                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 27036  0030C4  EC5F  F03D         	call	_HALSPICSAssert	;wreg free
 27037                           
 27038                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 27039  0030C8  0E80               	movlw	128
 27040  0030CA  EC19  F03D         	call	_HALSPISend
 27041                           
 27042                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 27043  0030CE  0100               	movlb	0	; () banked
 27044  0030D0  6BA6               	clrf	RADIO_Transmit@i& (0+255),b
 27045  0030D2  D00B               	goto	l13636
 27046  0030D4                     l13632:
 27047                           
 27048                           ; BSR set to: 0
 27049                           ;radio_driver_SX1276.c: 846: {
 27050                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 27051  0030D4  51A6               	movf	RADIO_Transmit@i& (0+255),w,b
 27052  0030D6  2596               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 27053  0030D8  6ED9               	movwf	fsr2l,c
 27054  0030DA  0E00               	movlw	0
 27055  0030DC  2197               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 27056  0030DE  6EDA               	movwf	fsr2h,c
 27057  0030E0  50DF               	movf	indf2,w,c
 27058  0030E2  EC19  F03D         	call	_HALSPISend
 27059  0030E6  0100               	movlb	0	; () banked
 27060  0030E8  2BA6               	incf	RADIO_Transmit@i& (0+255),f,b
 27061  0030EA                     l13636:
 27062                           
 27063                           ; BSR set to: 0
 27064  0030EA  5198               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 27065  0030EC  5DA6               	subwf	RADIO_Transmit@i& (0+255),w,b
 27066  0030EE  E3F2               	bnc	l13632
 27067                           
 27068                           ; BSR set to: 0
 27069                           ;radio_driver_SX1276.c: 848: }
 27070                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 27071  0030F0  EC5D  F03D         	call	_HALSPICSDeassert	;wreg free
 27072                           
 27073                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 27074  0030F4  0101               	movlb	1	; () banked
 27075  0030F6  819C               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 27076                           
 27077                           ; BSR set to: 1
 27078                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27079  0030F8  0EE7               	movlw	231
 27080  0030FA  179C               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27081                           
 27082                           ; BSR set to: 1
 27083                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 27084  0030FC  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27085  003100  0E00               	movlw	0
 27086  003102  0100               	movlb	0	; () banked
 27087  003104  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27088  003106  0E03               	movlw	3
 27089  003108  ECB9  F029         	call	_RADIO_WriteMode
 27090                           
 27091                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 27092  00310C  0100               	movlb	0	; () banked
 27093  00310E  6B71               	clrf	SwTimerSetTimeout@timeout& (0+255),b
 27094  003110  6B72               	clrf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 27095  003112  0E0A               	movlw	10
 27096  003114  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 27097  003116  6B74               	clrf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 27098  003118  0101               	movlb	1	; () banked
 27099  00311A  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27100  00311C  EC5E  F037         	call	_SwTimerSetTimeout
 27101                           
 27102                           ; BSR set to: 0
 27103                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 27104  003120  0101               	movlb	1	; () banked
 27105  003122  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 27106  003124  EC59  F02F         	call	_SwTimerStart
 27107                           
 27108                           ; BSR set to: 0
 27109                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27110  003128  0101               	movlb	1	; () banked
 27111  00312A  51A3               	movf	(_RadioConfiguration+42)& (0+255),w,b
 27112  00312C  11A4               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27113  00312E  11A5               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27114  003130  11A6               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27115  003132  E059               	bz	l13666
 27116                           
 27117                           ; BSR set to: 1
 27118                           ;radio_driver_SX1276.c: 866: {
 27119                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27120  003134  51A6               	movf	(_RadioConfiguration+45)& (0+255),w,b
 27121  003136  E106               	bnz	u15000
 27122  003138  29A3               	incf	(_RadioConfiguration+42)& (0+255),w,b
 27123  00313A  0EFF               	movlw	255
 27124  00313C  59A4               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27125  00313E  0E0F               	movlw	15
 27126  003140  59A5               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27127  003142  E319               	bnc	l13660
 27128  003144                     u15000:
 27129                           
 27130                           ; BSR set to: 1
 27131  003144  C1A3  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 27132  003148  C1A4  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27133  00314C  C1A5  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27134  003150  C1A6  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27135  003154  0E7D               	movlw	125
 27136  003156  0100               	movlb	0	; () banked
 27137  003158  6F68               	movwf	___lldiv@divisor& (0+255),b
 27138  00315A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 27139  00315C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27140  00315E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27141  003160  EC1B  F031         	call	___lldiv	;wreg free
 27142  003164  0E0C               	movlw	12
 27143  003166                     u15015:
 27144  003166  90D8               	bcf	status,0,c
 27145  003168  3764               	rlcf	?___lldiv& (0+255),f,b
 27146  00316A  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 27147  00316C  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 27148  00316E  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 27149  003170  2EE8               	decfsz	wreg,f,c
 27150  003172  D7F9               	goto	u15015
 27151  003174  D020               	goto	L15
 27152  003176                     l13660:
 27153                           
 27154                           ; BSR set to: 1
 27155  003176  C1A3  F099         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 27156  00317A  C1A4  F09A         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 27157  00317E  C1A5  F09B         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 27158  003182  C1A6  F09C         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 27159  003186  0E0C               	movlw	12
 27160  003188                     u15025:
 27161  003188  90D8               	bcf	status,0,c
 27162  00318A  0100               	movlb	0	; () banked
 27163  00318C  3799               	rlcf	??_RADIO_Transmit& (0+255),f,b
 27164  00318E  379A               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 27165  003190  379B               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 27166  003192  379C               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 27167  003194  2EE8               	decfsz	wreg,f,c
 27168  003196  D7F8               	goto	u15025
 27169  003198  C099  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 27170  00319C  C09A  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 27171  0031A0  C09B  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 27172  0031A4  C09C  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 27173  0031A8  0E7D               	movlw	125
 27174  0031AA  6F68               	movwf	___lldiv@divisor& (0+255),b
 27175  0031AC  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 27176  0031AE  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 27177  0031B0  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 27178  0031B2  EC1B  F031         	call	___lldiv	;wreg free
 27179  0031B6                     L15:
 27180  0031B6  C064  F0A1         	movff	?___lldiv,_RADIO_Transmit$1200
 27181  0031BA  C065  F0A2         	movff	?___lldiv+1,_RADIO_Transmit$1200+1
 27182  0031BE  C066  F0A3         	movff	?___lldiv+2,_RADIO_Transmit$1200+2
 27183  0031C2  C067  F0A4         	movff	?___lldiv+3,_RADIO_Transmit$1200+3
 27184                           
 27185                           ; BSR set to: 0
 27186  0031C6  C0A1  F071         	movff	_RADIO_Transmit$1200,SwTimerSetTimeout@timeout
 27187  0031CA  C0A2  F072         	movff	_RADIO_Transmit$1200+1,SwTimerSetTimeout@timeout+1
 27188  0031CE  C0A3  F073         	movff	_RADIO_Transmit$1200+2,SwTimerSetTimeout@timeout+2
 27189  0031D2  C0A4  F074         	movff	_RADIO_Transmit$1200+3,SwTimerSetTimeout@timeout+3
 27190  0031D6  0101               	movlb	1	; () banked
 27191  0031D8  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27192  0031DA  EC5E  F037         	call	_SwTimerSetTimeout
 27193                           
 27194                           ; BSR set to: 0
 27195                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27196  0031DE  0101               	movlb	1	; () banked
 27197  0031E0  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27198  0031E2  EC59  F02F         	call	_SwTimerStart
 27199  0031E6                     l13666:
 27200                           
 27201                           ;radio_driver_SX1276.c: 869: }
 27202                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 27203  0031E6  0100               	movlb	0	; () banked
 27204  0031E8  6B96               	clrf	?_RADIO_Transmit& (0+255),b
 27205  0031EA  6B97               	clrf	(?_RADIO_Transmit+1)& (0+255),b
 27206                           
 27207                           ; BSR set to: 0
 27208  0031EC  0012               	return		;funcret
 27209  0031EE                     __end_of_RADIO_Transmit:
 27210                           	opt stack 0
 27211                           tosu	equ	0xFFF
 27212                           tosh	equ	0xFFE
 27213                           tosl	equ	0xFFD
 27214                           pclath	equ	0xFFA
 27215                           tblptru	equ	0xFF8
 27216                           tblptrh	equ	0xFF7
 27217                           tblptrl	equ	0xFF6
 27218                           tablat	equ	0xFF5
 27219                           prodh	equ	0xFF4
 27220                           prodl	equ	0xFF3
 27221                           intcon	equ	0xFF2
 27222                           intcon2	equ	0xFF1
 27223                           intcon3	equ	0xFF0
 27224                           indf0	equ	0xFEF
 27225                           postinc0	equ	0xFEE
 27226                           fsr0h	equ	0xFEA
 27227                           fsr0l	equ	0xFE9
 27228                           wreg	equ	0xFE8
 27229                           postinc1	equ	0xFE6
 27230                           postdec1	equ	0xFE5
 27231                           plusw1	equ	0xFE3
 27232                           fsr1h	equ	0xFE2
 27233                           fsr1l	equ	0xFE1
 27234                           indf2	equ	0xFDF
 27235                           postinc2	equ	0xFDE
 27236                           postdec2	equ	0xFDD
 27237                           plusw2	equ	0xFDB
 27238                           fsr2h	equ	0xFDA
 27239                           fsr2l	equ	0xFD9
 27240                           status	equ	0xFD8
 27241                           
 27242 ;; *************** function _RADIO_WriteConfiguration *****************
 27243 ;; Defined at:
 27244 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27245 ;; Parameters:    Size  Location     Type
 27246 ;;  symbolTimeou    2   29[BANK0 ] unsigned int 
 27247 ;; Auto vars:     Size  Location     Type
 27248 ;;  tempValue       4   34[BANK0 ] unsigned long 
 27249 ;;  regValue        1   38[BANK0 ] unsigned char 
 27250 ;;  i               1   33[BANK0 ] unsigned char 
 27251 ;; Return value:  Size  Location     Type
 27252 ;;                  1    wreg      void 
 27253 ;; Registers used:
 27254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27255 ;; Tracked objects:
 27256 ;;		On entry : F/0
 27257 ;;		On exit  : 0/0
 27258 ;;		Unchanged: 0/0
 27259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27260 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27261 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27262 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27263 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27264 ;;Total ram usage:       10 bytes
 27265 ;; Hardware stack levels used:    1
 27266 ;; Hardware stack levels required when called:   11
 27267 ;; This function calls:
 27268 ;;		_RADIO_RegisterRead
 27269 ;;		_RADIO_RegisterWrite
 27270 ;;		_RADIO_WriteFSKBitRate
 27271 ;;		_RADIO_WriteFSKFrequencyDeviation
 27272 ;;		_RADIO_WriteFrequency
 27273 ;;		_RADIO_WriteMode
 27274 ;;		_RADIO_WritePower
 27275 ;;		___lmul
 27276 ;; This function is called by:
 27277 ;;		_RADIO_Transmit
 27278 ;;		_RADIO_ReceiveStart
 27279 ;; This function uses a non-reentrant model
 27280 ;;
 27281                           
 27282                           	psect	text144
 27283  0013A8                     __ptext144:
 27284                           	opt stack 0
 27285  0013A8                     _RADIO_WriteConfiguration:
 27286                           	opt stack 16
 27287                           
 27288                           ; BSR set to: 0
 27289                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 27290                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 27291                           ;radio_driver_SX1276.c: 537: uint8_t i;
 27292                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27293                           
 27294                           ; BSR set to: 0
 27295                           ;incstack = 0
 27296  0013A8  C191  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27297  0013AC  0E00               	movlw	0
 27298  0013AE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27299  0013B0  ECB9  F029         	call	_RADIO_WriteMode
 27300                           
 27301                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 27302  0013B4  C179  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 27303  0013B8  C17A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 27304  0013BC  C17B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 27305  0013C0  C17C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 27306  0013C4  EC4B  F029         	call	_RADIO_WriteFrequency	;wreg free
 27307                           
 27308                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 27309  0013C8  0101               	movlb	1	; () banked
 27310  0013CA  5194               	movf	(_RadioConfiguration+27)& (0+255),w,b
 27311  0013CC  EC8D  F02A         	call	_RADIO_WritePower
 27312                           
 27313                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 27314  0013D0  0101               	movlb	1	; () banked
 27315  0013D2  0591               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27316  0013D4  E001 D1B6          	bnz	l12752
 27317                           
 27318                           ; BSR set to: 1
 27319                           ;radio_driver_SX1276.c: 545: {
 27320                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 27321  0013D8  C187  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 27322  0013DC  0E39               	movlw	57
 27323  0013DE  EC3D  F03B         	call	_RADIO_RegisterWrite
 27324                           
 27325                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 27326                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 27327                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 27328                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 27329  0013E2  C19B  F07F         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 27330  0013E6  0E01               	movlw	1
 27331  0013E8  0100               	movlb	0	; () banked
 27332  0013EA  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27333  0013EC  0101               	movlb	1	; () banked
 27334  0013EE  90D8               	bcf	status,0,c
 27335  0013F0  359A               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 27336  0013F2  0100               	movlb	0	; () banked
 27337  0013F4  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 27338  0013F6  0101               	movlb	1	; () banked
 27339  0013F8  3993               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 27340  0013FA  0BF0               	andlw	240
 27341  0013FC  0100               	movlb	0	; () banked
 27342  0013FE  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 27343  001400  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 27344  001402  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27345  001404  0E1D               	movlw	29
 27346  001406  EC3D  F03B         	call	_RADIO_RegisterWrite
 27347                           
 27348                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 27349                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 27350                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 27351                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 27352  00140A  C07E  F07F         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration
 27353  00140E  0E03               	movlw	3
 27354  001410  0100               	movlb	0	; () banked
 27355  001412  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27356  001414  C195  F080         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+1
 27357  001418  0E01               	movlw	1
 27358  00141A  1780               	andwf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 27359  00141C  90D8               	bcf	status,0,c
 27360  00141E  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 27361  001420  90D8               	bcf	status,0,c
 27362  001422  3780               	rlcf	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 27363  001424  0101               	movlb	1	; () banked
 27364  001426  3992               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 27365  001428  0BF0               	andlw	240
 27366  00142A  0100               	movlb	0	; () banked
 27367  00142C  1180               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 27368  00142E  117F               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 27369  001430  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27370  001432  0E1E               	movlw	30
 27371  001434  EC3D  F03B         	call	_RADIO_RegisterWrite
 27372                           
 27373                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 27374  001438  0101               	movlb	1	; () banked
 27375  00143A  5197               	movf	(_RadioConfiguration+30)& (0+255),w,b
 27376  00143C  1198               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 27377  00143E  E060               	bz	l449
 27378                           
 27379                           ; BSR set to: 1
 27380                           ;radio_driver_SX1276.c: 561: {
 27381                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 27382  001440  C197  F082         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 27383  001444  C198  F083         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 27384  001448  0100               	movlb	0	; () banked
 27385  00144A  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 27386  00144C  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 27387                           
 27388                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 27389  00144E  D042               	goto	l12644
 27390  001450                     l12636:
 27391                           
 27392                           ; BSR set to: 1
 27393                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 27394  001450  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 27395  001454  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 27396  001458  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 27397  00145C  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 27398  001460  0E7D               	movlw	125
 27399  001462  0100               	movlb	0	; () banked
 27400  001464  6F68               	movwf	___lmul@multiplicand& (0+255),b
 27401  001466  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 27402  001468  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 27403  00146A  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 27404  00146C  EC9D  F02F         	call	___lmul	;wreg free
 27405  001470  D022               	goto	L17
 27406  001472                     l12638:
 27407                           
 27408                           ; BSR set to: 1
 27409                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 27410  001472  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 27411  001476  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 27412  00147A  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 27413  00147E  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 27414  001482  0EFA               	movlw	250
 27415  001484  0100               	movlb	0	; () banked
 27416  001486  6F68               	movwf	___lmul@multiplicand& (0+255),b
 27417  001488  6B69               	clrf	(___lmul@multiplicand+1)& (0+255),b
 27418  00148A  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 27419  00148C  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 27420  00148E  EC9D  F02F         	call	___lmul	;wreg free
 27421  001492  D011               	goto	L17
 27422  001494                     l12640:
 27423                           
 27424                           ; BSR set to: 1
 27425                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 27426  001494  C082  F064         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 27427  001498  C083  F065         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 27428  00149C  C084  F066         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 27429  0014A0  C085  F067         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 27430  0014A4  0EF4               	movlw	244
 27431  0014A6  0100               	movlb	0	; () banked
 27432  0014A8  6F68               	movwf	___lmul@multiplicand& (0+255),b
 27433  0014AA  0E01               	movlw	1
 27434  0014AC  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27435  0014AE  6B6A               	clrf	(___lmul@multiplicand+2)& (0+255),b
 27436  0014B0  6B6B               	clrf	(___lmul@multiplicand+3)& (0+255),b
 27437  0014B2  EC9D  F02F         	call	___lmul	;wreg free
 27438  0014B6                     L17:
 27439  0014B6  C064  F082         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 27440  0014BA  C065  F083         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 27441  0014BE  C066  F084         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 27442  0014C2  C067  F085         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 27443                           
 27444                           ;radio_driver_SX1276.c: 574: break;
 27445  0014C6  D00F               	goto	l12646
 27446  0014C8                     l455:
 27447                           
 27448                           ; BSR set to: 1
 27449                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 27450  0014C8  0100               	movlb	0	; () banked
 27451  0014CA  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 27452  0014CC  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 27453  0014CE  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 27454  0014D0  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 27455                           
 27456                           ;radio_driver_SX1276.c: 578: break;
 27457  0014D2  D009               	goto	l12646
 27458  0014D4                     l12644:
 27459                           
 27460                           ; BSR set to: 0
 27461  0014D4  0101               	movlb	1	; () banked
 27462  0014D6  5193               	movf	(_RadioConfiguration+26)& (0+255),w,b
 27463                           
 27464                           ; Switch size 1, requested type "speed"
 27465                           ; Number of cases is 3, Range of values is 7 to 9
 27466                           ; switch strategies available:
 27467                           ; Name         Instructions Cycles
 27468                           ; simple_byte           10     6 (average)
 27469                           ;	Chosen strategy is simple_byte
 27470  0014D8  0A07               	xorlw	7	; case 7
 27471  0014DA  E0BA               	bz	l12636
 27472  0014DC  0A0F               	xorlw	15	; case 8
 27473  0014DE  E0C9               	bz	l12638
 27474  0014E0  0A01               	xorlw	1	; case 9
 27475  0014E2  E0D8               	bz	l12640
 27476  0014E4  D7F1               	goto	l455
 27477  0014E6                     l12646:
 27478                           
 27479                           ; BSR set to: 0
 27480                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 27481  0014E6  0101               	movlb	1	; () banked
 27482  0014E8  2992               	incf	(_RadioConfiguration+25)& (0+255),w,b
 27483  0014EA  0100               	movlb	0	; () banked
 27484  0014EC  6F7F               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 27485  0014EE  D005               	goto	u13480
 27486  0014F0                     u13485:
 27487  0014F0  90D8               	bcf	status,0,c
 27488  0014F2  3385               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 27489  0014F4  3384               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 27490  0014F6  3383               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 27491  0014F8  3382               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 27492  0014FA                     u13480:
 27493  0014FA  2F7F               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 27494  0014FC  D7F9               	goto	u13485
 27495                           
 27496                           ;radio_driver_SX1276.c: 582: }
 27497  0014FE  D005               	goto	l12648
 27498  001500                     l449:
 27499                           
 27500                           ; BSR set to: 1
 27501                           ;radio_driver_SX1276.c: 583: else
 27502                           ;radio_driver_SX1276.c: 584: {
 27503                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 27504  001500  0100               	movlb	0	; () banked
 27505  001502  6B82               	clrf	RADIO_WriteConfiguration@tempValue& (0+255),b
 27506  001504  6B83               	clrf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 27507  001506  6B84               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 27508  001508  6B85               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 27509  00150A                     l12648:
 27510                           
 27511                           ;radio_driver_SX1276.c: 586: }
 27512                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 27513  00150A  C082  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 27514  00150E  0E24               	movlw	36
 27515  001510  EC3D  F03B         	call	_RADIO_RegisterWrite
 27516                           
 27517                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 27518  001514  C07D  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 27519  001518  0E1F               	movlw	31
 27520  00151A  EC3D  F03B         	call	_RADIO_RegisterWrite
 27521                           
 27522                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 27523  00151E  0E26               	movlw	38
 27524  001520  EC41  F03A         	call	_RADIO_RegisterRead
 27525  001524  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;radio_driver_SX1276.c: 596: if (
 27529                           ;radio_driver_SX1276.c: 597: (
 27530                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 27531                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 27532                           ;radio_driver_SX1276.c: 600: ) ||
 27533                           ;radio_driver_SX1276.c: 601: (
 27534                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 27535                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 27536                           ;radio_driver_SX1276.c: 604: )
 27537                           ;radio_driver_SX1276.c: 605: )
 27538  001526  0E0C               	movlw	12
 27539  001528  0101               	movlb	1	; () banked
 27540  00152A  1992               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 27541  00152C  E106               	bnz	l12656
 27542                           
 27543                           ; BSR set to: 1
 27544  00152E  0E07               	movlw	7
 27545  001530  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27546  001532  E009               	bz	l12660
 27547                           
 27548                           ; BSR set to: 1
 27549  001534  0E08               	movlw	8
 27550  001536  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27551  001538  E006               	bz	l12660
 27552  00153A                     l12656:
 27553                           
 27554                           ; BSR set to: 1
 27555  00153A  0E0B               	movlw	11
 27556  00153C  1992               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 27557  00153E  E106               	bnz	l12662
 27558                           
 27559                           ; BSR set to: 1
 27560  001540  0E07               	movlw	7
 27561  001542  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27562  001544  E103               	bnz	l12662
 27563  001546                     l12660:
 27564                           
 27565                           ; BSR set to: 1
 27566                           ;radio_driver_SX1276.c: 606: {
 27567                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 27568  001546  0100               	movlb	0	; () banked
 27569  001548  8786               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 27570                           
 27571                           ;radio_driver_SX1276.c: 608: }
 27572  00154A  D002               	goto	l462
 27573  00154C                     l12662:
 27574                           
 27575                           ; BSR set to: 1
 27576                           ;radio_driver_SX1276.c: 609: else
 27577                           ;radio_driver_SX1276.c: 610: {
 27578                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 27579  00154C  0100               	movlb	0	; () banked
 27580  00154E  9786               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 27581  001550                     l462:
 27582                           
 27583                           ; BSR set to: 0
 27584                           ;radio_driver_SX1276.c: 612: }
 27585                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 27586  001550  8586               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 27587                           
 27588                           ; BSR set to: 0
 27589                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 27590  001552  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27591  001556  0E26               	movlw	38
 27592  001558  EC3D  F03B         	call	_RADIO_RegisterWrite
 27593                           
 27594                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 27595  00155C  0E31               	movlw	49
 27596  00155E  EC41  F03A         	call	_RADIO_RegisterRead
 27597  001562  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27598                           
 27599                           ; BSR set to: 0
 27600                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 27601  001564  0EF8               	movlw	248
 27602  001566  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27603                           
 27604                           ; BSR set to: 0
 27605                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 27606  001568  0E03               	movlw	3
 27607  00156A  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27608                           
 27609                           ; BSR set to: 0
 27610                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 27611  00156C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27612  001570  0E31               	movlw	49
 27613  001572  EC3D  F03B         	call	_RADIO_RegisterWrite
 27614                           
 27615                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 27616  001576  0E0A               	movlw	10
 27617  001578  0100               	movlb	0	; () banked
 27618  00157A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27619  00157C  0E37               	movlw	55
 27620  00157E  EC3D  F03B         	call	_RADIO_RegisterWrite
 27621                           
 27622                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 27623  001582  0E12               	movlw	18
 27624  001584  0101               	movlb	1	; () banked
 27625  001586  19AA               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 27626  001588  E129               	bnz	l12700
 27627                           
 27628                           ; BSR set to: 1
 27629                           ;radio_driver_SX1276.c: 626: {
 27630                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 27631                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 27632  00158A  0E07               	movlw	7
 27633  00158C  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27634  00158E  E003               	bz	l12682
 27635                           
 27636                           ; BSR set to: 1
 27637  001590  0E08               	movlw	8
 27638  001592  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27639  001594  E115               	bnz	l12692
 27640  001596                     l12682:
 27641                           
 27642                           ; BSR set to: 1
 27643                           ;radio_driver_SX1276.c: 631: {
 27644                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 27645  001596  0E31               	movlw	49
 27646  001598  EC41  F03A         	call	_RADIO_RegisterRead
 27647  00159C  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27648                           
 27649                           ; BSR set to: 0
 27650                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 27651  00159E  9F86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 27652                           
 27653                           ; BSR set to: 0
 27654                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 27655  0015A0  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27656  0015A4  0E31               	movlw	49
 27657  0015A6  EC3D  F03B         	call	_RADIO_RegisterWrite
 27658                           
 27659                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 27660  0015AA  0E40               	movlw	64
 27661  0015AC  0100               	movlb	0	; () banked
 27662  0015AE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27663  0015B0  0E2F               	movlw	47
 27664  0015B2  EC3D  F03B         	call	_RADIO_RegisterWrite
 27665                           
 27666                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 27667  0015B6  0100               	movlb	0	; () banked
 27668  0015B8  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27669  0015BA  0E30               	movlw	48
 27670  0015BC  EC3D  F03B         	call	_RADIO_RegisterWrite
 27671  0015C0                     l12692:
 27672                           
 27673                           ;radio_driver_SX1276.c: 637: }
 27674                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 27675  0015C0  0E09               	movlw	9
 27676  0015C2  0101               	movlb	1	; () banked
 27677  0015C4  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27678  0015C6  E10A               	bnz	l12700
 27679                           
 27680                           ; BSR set to: 1
 27681                           ;radio_driver_SX1276.c: 640: {
 27682                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 27683  0015C8  0E31               	movlw	49
 27684  0015CA  EC41  F03A         	call	_RADIO_RegisterRead
 27685  0015CE  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27686                           
 27687                           ; BSR set to: 0
 27688                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 27689  0015D0  8F86               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 27690                           
 27691                           ; BSR set to: 0
 27692                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 27693  0015D2  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27694  0015D6  0E31               	movlw	49
 27695  0015D8  EC3D  F03B         	call	_RADIO_RegisterWrite
 27696  0015DC                     l12700:
 27697                           
 27698                           ;radio_driver_SX1276.c: 644: }
 27699                           ;radio_driver_SX1276.c: 645: }
 27700                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 27701  0015DC  0E33               	movlw	51
 27702  0015DE  EC41  F03A         	call	_RADIO_RegisterRead
 27703  0015E2  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27704                           
 27705                           ; BSR set to: 0
 27706                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 27707  0015E4  9D86               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 27708                           
 27709                           ; BSR set to: 0
 27710                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 27711  0015E6  8186               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 27712                           
 27713                           ; BSR set to: 0
 27714                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 27715  0015E8  C199  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 27716  0015EC  0E01               	movlw	1
 27717  0015EE  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27718  0015F0  0E06               	movlw	6
 27719  0015F2  6F80               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 27720  0015F4                     u13585:
 27721  0015F4  90D8               	bcf	status,0,c
 27722  0015F6  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 27723  0015F8  2F80               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 27724  0015FA  D7FC               	goto	u13585
 27725  0015FC  517F               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 27726  0015FE  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 27727                           
 27728                           ; BSR set to: 0
 27729                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 27730  001600  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27731  001604  0E33               	movlw	51
 27732  001606  EC3D  F03B         	call	_RADIO_RegisterWrite
 27733                           
 27734                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 27735  00160A  C199  F07F         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 27736  00160E  0E01               	movlw	1
 27737  001610  0100               	movlb	0	; () banked
 27738  001612  177F               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 27739  001614  90D8               	bcf	status,0,c
 27740  001616  377F               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 27741  001618  90D8               	bcf	status,0,c
 27742  00161A  357F               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 27743  00161C  0AFF               	xorlw	255
 27744  00161E  0B1D               	andlw	29
 27745  001620  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27746                           
 27747                           ; BSR set to: 0
 27748                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 27749  001622  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 27750  001626  0E3B               	movlw	59
 27751  001628  EC3D  F03B         	call	_RADIO_RegisterWrite
 27752                           
 27753                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 27754  00162C  0101               	movlb	1	; () banked
 27755  00162E  5186               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27756  001630  0100               	movlb	0	; () banked
 27757  001632  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27758  001634  0E20               	movlw	32
 27759  001636  EC3D  F03B         	call	_RADIO_RegisterWrite
 27760                           
 27761                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27762  00163A  C185  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27763  00163E  0E21               	movlw	33
 27764  001640  EC3D  F03B         	call	_RADIO_RegisterWrite
 27765                           
 27766                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 27767  001644  0100               	movlb	0	; () banked
 27768  001646  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27769  001648  0E0D               	movlw	13
 27770  00164A  EC3D  F03B         	call	_RADIO_RegisterWrite
 27771                           
 27772                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 27773  00164E  0100               	movlb	0	; () banked
 27774  001650  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27775  001652  0E0E               	movlw	14
 27776  001654  EC3D  F03B         	call	_RADIO_RegisterWrite
 27777                           
 27778                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 27779  001658  0100               	movlb	0	; () banked
 27780  00165A  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 27781  00165C  0E0F               	movlw	15
 27782  00165E  EC3D  F03B         	call	_RADIO_RegisterWrite
 27783                           
 27784                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 27785  001662  0E12               	movlw	18
 27786  001664  0101               	movlb	1	; () banked
 27787  001666  19AA               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 27788  001668  E168               	bnz	l468
 27789                           
 27790                           ; BSR set to: 1
 27791                           ;radio_driver_SX1276.c: 665: {
 27792                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 27793                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 27794                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 27795                           ;radio_driver_SX1276.c: 669: )
 27796  00166A  0E09               	movlw	9
 27797  00166C  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27798  00166E  E11E               	bnz	l12734
 27799                           
 27800                           ; BSR set to: 1
 27801  001670  0E80               	movlw	128
 27802  001672  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 27803  001674  0E13               	movlw	19
 27804  001676  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27805  001678  0E61               	movlw	97
 27806  00167A  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27807  00167C  0E33               	movlw	51
 27808  00167E  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27809  001680  E315               	bnc	l12734
 27810                           
 27811                           ; BSR set to: 1
 27812  001682  0579               	decf	_RadioConfiguration& (0+255),w,b
 27813  001684  0EF7               	movlw	247
 27814  001686  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27815  001688  0ECB               	movlw	203
 27816  00168A  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27817  00168C  0E3C               	movlw	60
 27818  00168E  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27819  001690  E20D               	bc	l12734
 27820                           
 27821                           ; BSR set to: 1
 27822                           ;radio_driver_SX1276.c: 670: {
 27823                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 27824  001692  0E02               	movlw	2
 27825  001694  0100               	movlb	0	; () banked
 27826  001696  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27827  001698  0E36               	movlw	54
 27828  00169A  EC3D  F03B         	call	_RADIO_RegisterWrite
 27829                           
 27830                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 27831  00169E  0E64               	movlw	100
 27832  0016A0  0100               	movlb	0	; () banked
 27833  0016A2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27834  0016A4  0E3A               	movlw	58
 27835  0016A6  EC3D  F03B         	call	_RADIO_RegisterWrite
 27836                           
 27837                           ;radio_driver_SX1276.c: 673: }
 27838  0016AA  D028               	goto	l12744
 27839  0016AC                     l12734:
 27840                           
 27841                           ; BSR set to: 1
 27842                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 27843                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 27844                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 27845                           ;radio_driver_SX1276.c: 677: )
 27846  0016AC  0E09               	movlw	9
 27847  0016AE  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27848  0016B0  E11F               	bnz	l12742
 27849                           
 27850                           ; BSR set to: 1
 27851  0016B2  0E80               	movlw	128
 27852  0016B4  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 27853  0016B6  0E1A               	movlw	26
 27854  0016B8  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27855  0016BA  0E70               	movlw	112
 27856  0016BC  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27857  0016BE  0E18               	movlw	24
 27858  0016C0  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27859  0016C2  E316               	bnc	l12742
 27860                           
 27861                           ; BSR set to: 1
 27862  0016C4  0E41               	movlw	65
 27863  0016C6  5D79               	subwf	_RadioConfiguration& (0+255),w,b
 27864  0016C8  0EDD               	movlw	221
 27865  0016CA  597A               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 27866  0016CC  0E4A               	movlw	74
 27867  0016CE  597B               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 27868  0016D0  0E1F               	movlw	31
 27869  0016D2  597C               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 27870  0016D4  E20D               	bc	l12742
 27871                           
 27872                           ; BSR set to: 1
 27873                           ;radio_driver_SX1276.c: 678: {
 27874                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 27875  0016D6  0E02               	movlw	2
 27876  0016D8  0100               	movlb	0	; () banked
 27877  0016DA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27878  0016DC  0E36               	movlw	54
 27879  0016DE  EC3D  F03B         	call	_RADIO_RegisterWrite
 27880                           
 27881                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 27882  0016E2  0E7F               	movlw	127
 27883  0016E4  0100               	movlb	0	; () banked
 27884  0016E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27885  0016E8  0E3A               	movlw	58
 27886  0016EA  EC3D  F03B         	call	_RADIO_RegisterWrite
 27887                           
 27888                           ;radio_driver_SX1276.c: 681: }
 27889  0016EE  D006               	goto	l12744
 27890  0016F0                     l12742:
 27891                           
 27892                           ; BSR set to: 1
 27893                           ;radio_driver_SX1276.c: 682: else
 27894                           ;radio_driver_SX1276.c: 683: {
 27895                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 27896  0016F0  0E03               	movlw	3
 27897  0016F2  0100               	movlb	0	; () banked
 27898  0016F4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27899  0016F6  0E36               	movlw	54
 27900  0016F8  EC3D  F03B         	call	_RADIO_RegisterWrite
 27901  0016FC                     l12744:
 27902                           
 27903                           ;radio_driver_SX1276.c: 685: }
 27904                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 27905  0016FC  0E09               	movlw	9
 27906  0016FE  0101               	movlb	1	; () banked
 27907  001700  1993               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 27908  001702  E10F               	bnz	l12750
 27909                           
 27910                           ; BSR set to: 1
 27911  001704  0599               	decf	(_RadioConfiguration+32)& (0+255),w,b
 27912  001706  E10D               	bnz	l12750
 27913                           
 27914                           ; BSR set to: 1
 27915                           ;radio_driver_SX1276.c: 689: {
 27916                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 27917  001708  0E65               	movlw	101
 27918  00170A  0100               	movlb	0	; () banked
 27919  00170C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27920  00170E  0E3A               	movlw	58
 27921  001710  EC3D  F03B         	call	_RADIO_RegisterWrite
 27922                           
 27923                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 27924  001714  0E19               	movlw	25
 27925  001716  0100               	movlb	0	; () banked
 27926  001718  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27927  00171A  0E3B               	movlw	59
 27928  00171C  EC3D  F03B         	call	_RADIO_RegisterWrite
 27929                           
 27930                           ;radio_driver_SX1276.c: 692: }
 27931  001720  D00C               	goto	l468
 27932  001722                     l12750:
 27933                           
 27934                           ; BSR set to: 1
 27935                           ;radio_driver_SX1276.c: 693: else
 27936                           ;radio_driver_SX1276.c: 694: {
 27937                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 27938  001722  0E65               	movlw	101
 27939  001724  0100               	movlb	0	; () banked
 27940  001726  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27941  001728  0E3A               	movlw	58
 27942  00172A  EC3D  F03B         	call	_RADIO_RegisterWrite
 27943                           
 27944                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 27945  00172E  0E1D               	movlw	29
 27946  001730  0100               	movlb	0	; () banked
 27947  001732  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27948  001734  0E3B               	movlw	59
 27949  001736  EC3D  F03B         	call	_RADIO_RegisterWrite
 27950  00173A                     l468:
 27951                           
 27952                           ;radio_driver_SX1276.c: 697: }
 27953                           ;radio_driver_SX1276.c: 698: }
 27954                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 27955  00173A  0100               	movlb	0	; () banked
 27956  00173C  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 27957  00173E  0E12               	movlw	18
 27958  001740  EF3D  F03B         	goto	_RADIO_RegisterWrite
 27959  001744                     l12752:
 27960                           
 27961                           ; BSR set to: 1
 27962                           ;radio_driver_SX1276.c: 703: else
 27963                           ;radio_driver_SX1276.c: 704: {
 27964                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 27965  001744  C17D  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 27966  001748  C17E  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 27967  00174C  C17F  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 27968  001750  C180  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 27969  001754  EC2D  F033         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 27970                           
 27971                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 27972  001758  C181  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 27973  00175C  C182  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 27974  001760  C183  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 27975  001764  C184  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 27976  001768  EC5F  F033         	call	_RADIO_WriteFSKBitRate	;wreg free
 27977                           
 27978                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 27979  00176C  0101               	movlb	1	; () banked
 27980  00176E  5186               	movf	(_RadioConfiguration+13)& (0+255),w,b
 27981  001770  0100               	movlb	0	; () banked
 27982  001772  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27983  001774  0E25               	movlw	37
 27984  001776  EC3D  F03B         	call	_RADIO_RegisterWrite
 27985                           
 27986                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 27987  00177A  C185  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 27988  00177E  0E26               	movlw	38
 27989  001780  EC3D  F03B         	call	_RADIO_RegisterWrite
 27990                           
 27991                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 27992  001784  0E0A               	movlw	10
 27993  001786  EC41  F03A         	call	_RADIO_RegisterRead
 27994  00178A  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 27995                           
 27996                           ; BSR set to: 0
 27997                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 27998  00178C  0E9F               	movlw	159
 27999  00178E  1786               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28000                           
 28001                           ; BSR set to: 0
 28002                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 28003  001790  0101               	movlb	1	; () banked
 28004  001792  39AC               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 28005  001794  46E8               	rlncf	wreg,f,c
 28006  001796  0BE0               	andlw	224
 28007  001798  0100               	movlb	0	; () banked
 28008  00179A  1386               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 28009                           
 28010                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 28011  00179C  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28012  0017A0  0E0A               	movlw	10
 28013  0017A2  EC3D  F03B         	call	_RADIO_RegisterWrite
 28014                           
 28015                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 28016  0017A6  0EC8               	movlw	200
 28017  0017A8  0100               	movlb	0	; () banked
 28018  0017AA  6F86               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 28019                           
 28020                           ; BSR set to: 0
 28021                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 28022  0017AC  0101               	movlb	1	; () banked
 28023  0017AE  5195               	movf	(_RadioConfiguration+28)& (0+255),w,b
 28024  0017B0  E002               	bz	l12764
 28025                           
 28026                           ; BSR set to: 1
 28027                           ;radio_driver_SX1276.c: 722: {
 28028                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 28029  0017B2  0100               	movlb	0	; () banked
 28030  0017B4  8986               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 28031  0017B6                     l12764:
 28032                           
 28033                           ;radio_driver_SX1276.c: 724: }
 28034                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 28035  0017B6  C086  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 28036  0017BA  0E30               	movlw	48
 28037  0017BC  EC3D  F03B         	call	_RADIO_RegisterWrite
 28038                           
 28039                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 28040  0017C0  0100               	movlb	0	; () banked
 28041  0017C2  6B81               	clrf	RADIO_WriteConfiguration@i& (0+255),b
 28042  0017C4  D00E               	goto	l12772
 28043  0017C6                     l12768:
 28044                           
 28045                           ; BSR set to: 0
 28046                           ;radio_driver_SX1276.c: 729: {
 28047                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 28048  0017C6  0E88               	movlw	low (_RadioConfiguration+15)
 28049  0017C8  2581               	addwf	RADIO_WriteConfiguration@i& (0+255),w,b
 28050  0017CA  6ED9               	movwf	fsr2l,c
 28051  0017CC  6ADA               	clrf	fsr2h,c
 28052  0017CE  0E01               	movlw	high (_RadioConfiguration+15)
 28053  0017D0  22DA               	addwfc	fsr2h,f,c
 28054  0017D2  50DF               	movf	indf2,w,c
 28055  0017D4  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28056  0017D6  5181               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 28057  0017D8  0F28               	addlw	40
 28058  0017DA  EC3D  F03B         	call	_RADIO_RegisterWrite
 28059  0017DE  0100               	movlb	0	; () banked
 28060  0017E0  2B81               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 28061  0017E2                     l12772:
 28062                           
 28063                           ; BSR set to: 0
 28064  0017E2  0101               	movlb	1	; () banked
 28065  0017E4  5190               	movf	(_RadioConfiguration+23)& (0+255),w,b
 28066  0017E6  0100               	movlb	0	; () banked
 28067  0017E8  5D81               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 28068  0017EA  E3ED               	bnc	l12768
 28069                           
 28070                           ; BSR set to: 0
 28071                           ;radio_driver_SX1276.c: 733: }
 28072                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 28073  0017EC  0101               	movlb	1	; () banked
 28074  0017EE  5190               	movf	(_RadioConfiguration+23)& (0+255),w,b
 28075  0017F0  E008               	bz	l12778
 28076                           
 28077                           ; BSR set to: 1
 28078                           ;radio_driver_SX1276.c: 737: {
 28079                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 28080  0017F2  0590               	decf	(_RadioConfiguration+23)& (0+255),w,b
 28081  0017F4  0910               	iorlw	16
 28082  0017F6  0100               	movlb	0	; () banked
 28083  0017F8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28084  0017FA  0E27               	movlw	39
 28085  0017FC  EC3D  F03B         	call	_RADIO_RegisterWrite
 28086                           
 28087                           ;radio_driver_SX1276.c: 739: }
 28088  001800  D005               	goto	l481
 28089  001802                     l12778:
 28090                           
 28091                           ; BSR set to: 1
 28092                           ;radio_driver_SX1276.c: 740: else
 28093                           ;radio_driver_SX1276.c: 741: {
 28094                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 28095  001802  0100               	movlb	0	; () banked
 28096  001804  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 28097  001806  0E27               	movlw	39
 28098  001808  EC3D  F03B         	call	_RADIO_RegisterWrite
 28099  00180C                     l481:
 28100                           
 28101                           ;radio_driver_SX1276.c: 743: }
 28102                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 28103  00180C  0100               	movlb	0	; () banked
 28104  00180E  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 28105  001810  0E3E               	movlw	62
 28106  001812  EC3D  F03B         	call	_RADIO_RegisterWrite
 28107                           
 28108                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 28109  001816  0100               	movlb	0	; () banked
 28110  001818  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 28111  00181A  0E3F               	movlw	63
 28112  00181C  EF3D  F03B         	goto	_RADIO_RegisterWrite
 28113  001820                     __end_of_RADIO_WriteConfiguration:
 28114                           	opt stack 0
 28115                           tosu	equ	0xFFF
 28116                           tosh	equ	0xFFE
 28117                           tosl	equ	0xFFD
 28118                           pclath	equ	0xFFA
 28119                           tblptru	equ	0xFF8
 28120                           tblptrh	equ	0xFF7
 28121                           tblptrl	equ	0xFF6
 28122                           tablat	equ	0xFF5
 28123                           prodh	equ	0xFF4
 28124                           prodl	equ	0xFF3
 28125                           intcon	equ	0xFF2
 28126                           intcon2	equ	0xFF1
 28127                           intcon3	equ	0xFF0
 28128                           indf0	equ	0xFEF
 28129                           postinc0	equ	0xFEE
 28130                           fsr0h	equ	0xFEA
 28131                           fsr0l	equ	0xFE9
 28132                           wreg	equ	0xFE8
 28133                           postinc1	equ	0xFE6
 28134                           postdec1	equ	0xFE5
 28135                           plusw1	equ	0xFE3
 28136                           fsr1h	equ	0xFE2
 28137                           fsr1l	equ	0xFE1
 28138                           indf2	equ	0xFDF
 28139                           postinc2	equ	0xFDE
 28140                           postdec2	equ	0xFDD
 28141                           plusw2	equ	0xFDB
 28142                           fsr2h	equ	0xFDA
 28143                           fsr2l	equ	0xFD9
 28144                           status	equ	0xFD8
 28145                           
 28146 ;; *************** function _RADIO_WritePower *****************
 28147 ;; Defined at:
 28148 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28149 ;; Parameters:    Size  Location     Type
 28150 ;;  power           1    wreg     char 
 28151 ;; Auto vars:     Size  Location     Type
 28152 ;;  power           1   10[BANK0 ] char 
 28153 ;;  paDac           1    9[BANK0 ] unsigned char 
 28154 ;;  ocp             1    8[BANK0 ] unsigned char 
 28155 ;; Return value:  Size  Location     Type
 28156 ;;                  1    wreg      void 
 28157 ;; Registers used:
 28158 ;;		wreg, status,2, status,0, cstack
 28159 ;; Tracked objects:
 28160 ;;		On entry : F/1
 28161 ;;		On exit  : 0/0
 28162 ;;		Unchanged: 0/0
 28163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28165 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28167 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28168 ;;Total ram usage:        3 bytes
 28169 ;; Hardware stack levels used:    1
 28170 ;; Hardware stack levels required when called:   10
 28171 ;; This function calls:
 28172 ;;		_RADIO_RegisterRead
 28173 ;;		_RADIO_RegisterWrite
 28174 ;; This function is called by:
 28175 ;;		_RADIO_WriteConfiguration
 28176 ;; This function uses a non-reentrant model
 28177 ;;
 28178                           
 28179                           	psect	text145
 28180  00551A                     __ptext145:
 28181                           	opt stack 0
 28182  00551A                     _RADIO_WritePower:
 28183                           	opt stack 16
 28184                           
 28185                           ;incstack = 0
 28186                           ;RADIO_WritePower@power stored from wreg
 28187  00551A  0100               	movlb	0	; () banked
 28188  00551C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28189                           
 28190                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 28191                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 28192                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 28193  00551E  0101               	movlb	1	; () banked
 28194  005520  5196               	movf	(_RadioConfiguration+29)& (0+255),w,b
 28195  005522  E127               	bnz	l12462
 28196                           
 28197                           ; BSR set to: 1
 28198                           ;radio_driver_SX1276.c: 348: {
 28199                           ;radio_driver_SX1276.c: 350: if (power < -3)
 28200  005524  0100               	movlb	0	; () banked
 28201  005526  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28202  005528  0A80               	xorlw	128
 28203  00552A  0F83               	addlw	131
 28204  00552C  E202               	bc	l12442
 28205                           
 28206                           ; BSR set to: 0
 28207                           ;radio_driver_SX1276.c: 351: {
 28208                           ;radio_driver_SX1276.c: 352: power = -3;
 28209  00552E  0EFD               	movlw	253
 28210  005530  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28211  005532                     l12442:
 28212                           
 28213                           ; BSR set to: 0
 28214                           ;radio_driver_SX1276.c: 353: }
 28215                           ;radio_driver_SX1276.c: 354: if (power > 15)
 28216  005532  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28217  005534  0A80               	xorlw	128
 28218  005536  0F70               	addlw	-144
 28219  005538  E302               	bnc	l12446
 28220                           
 28221                           ; BSR set to: 0
 28222                           ;radio_driver_SX1276.c: 355: {
 28223                           ;radio_driver_SX1276.c: 356: power = 15;
 28224  00553A  0E0F               	movlw	15
 28225  00553C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28226  00553E                     l12446:
 28227                           
 28228                           ; BSR set to: 0
 28229                           ;radio_driver_SX1276.c: 357: }
 28230                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 28231  00553E  0E4D               	movlw	77
 28232  005540  EC41  F03A         	call	_RADIO_RegisterRead
 28233  005544  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 28234                           
 28235                           ; BSR set to: 0
 28236                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 28237  005546  0EF8               	movlw	248
 28238  005548  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 28239                           
 28240                           ; BSR set to: 0
 28241                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 28242  00554A  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 28243                           
 28244                           ; BSR set to: 0
 28245                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 28246  00554C  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 28247  005550  0E4D               	movlw	77
 28248  005552  EC3D  F03B         	call	_RADIO_RegisterWrite
 28249                           
 28250                           ;radio_driver_SX1276.c: 364: if (power < 0)
 28251  005556  0100               	movlb	0	; () banked
 28252  005558  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 28253  00555A  D005               	goto	l12460
 28254                           
 28255                           ; BSR set to: 0
 28256                           ;radio_driver_SX1276.c: 365: {
 28257                           ;radio_driver_SX1276.c: 369: power += 3;
 28258  00555C  0E03               	movlw	3
 28259  00555E  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 28260                           
 28261                           ; BSR set to: 0
 28262                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 28263  005560  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28264  005562  0920               	iorlw	32
 28265  005564  D002               	goto	L19
 28266  005566                     l12460:
 28267                           
 28268                           ; BSR set to: 0
 28269                           ;radio_driver_SX1276.c: 372: else
 28270                           ;radio_driver_SX1276.c: 373: {
 28271                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 28272  005566  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28273  005568  0970               	iorlw	112
 28274  00556A                     L19:
 28275  00556A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28276  00556C  0E09               	movlw	9
 28277  00556E  EF3D  F03B         	goto	_RADIO_RegisterWrite
 28278  005572                     l12462:
 28279                           
 28280                           ; BSR set to: 1
 28281                           ;radio_driver_SX1276.c: 380: else
 28282                           ;radio_driver_SX1276.c: 381: {
 28283                           ;radio_driver_SX1276.c: 385: if (power < 2)
 28284  005572  0100               	movlb	0	; () banked
 28285  005574  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28286  005576  0A80               	xorlw	128
 28287  005578  0F7E               	addlw	-130
 28288  00557A  E202               	bc	l12466
 28289                           
 28290                           ; BSR set to: 0
 28291                           ;radio_driver_SX1276.c: 386: {
 28292                           ;radio_driver_SX1276.c: 387: power = 2;
 28293  00557C  0E02               	movlw	2
 28294  00557E  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28295  005580                     l12466:
 28296                           
 28297                           ; BSR set to: 0
 28298                           ;radio_driver_SX1276.c: 388: }
 28299                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 28300  005580  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28301  005582  0A80               	xorlw	128
 28302  005584  0F6C               	addlw	-148
 28303  005586  E302               	bnc	l12470
 28304                           
 28305                           ; BSR set to: 0
 28306                           ;radio_driver_SX1276.c: 392: {
 28307                           ;radio_driver_SX1276.c: 393: power = 20;
 28308  005588  0E14               	movlw	20
 28309  00558A  D005               	goto	L18
 28310  00558C                     l12470:
 28311                           
 28312                           ; BSR set to: 0
 28313                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 28314  00558C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28315  00558E  0A80               	xorlw	128
 28316  005590  0F6E               	addlw	-146
 28317  005592  E302               	bnc	l12474
 28318                           
 28319                           ; BSR set to: 0
 28320                           ;radio_driver_SX1276.c: 396: {
 28321                           ;radio_driver_SX1276.c: 397: power = 17;
 28322  005594  0E11               	movlw	17
 28323  005596                     L18:
 28324  005596  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28325  005598                     l12474:
 28326                           
 28327                           ; BSR set to: 0
 28328                           ;radio_driver_SX1276.c: 398: }
 28329                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 28330  005598  0E0B               	movlw	11
 28331  00559A  EC41  F03A         	call	_RADIO_RegisterRead
 28332  00559E  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 28333                           
 28334                           ; BSR set to: 0
 28335                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 28336  0055A0  0E4D               	movlw	77
 28337  0055A2  EC41  F03A         	call	_RADIO_RegisterRead
 28338  0055A6  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 28339                           
 28340                           ; BSR set to: 0
 28341                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 28342  0055A8  0EF8               	movlw	248
 28343  0055AA  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 28344                           
 28345                           ; BSR set to: 0
 28346                           ;radio_driver_SX1276.c: 403: if (power == 20)
 28347  0055AC  0E14               	movlw	20
 28348  0055AE  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 28349  0055B0  E106               	bnz	l12488
 28350                           
 28351                           ; BSR set to: 0
 28352                           ;radio_driver_SX1276.c: 404: {
 28353                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 28354  0055B2  0E07               	movlw	7
 28355  0055B4  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 28356                           
 28357                           ; BSR set to: 0
 28358                           ;radio_driver_SX1276.c: 406: power = 15;
 28359  0055B6  0E0F               	movlw	15
 28360  0055B8  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 28361                           
 28362                           ; BSR set to: 0
 28363                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 28364  0055BA  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 28365                           
 28366                           ;radio_driver_SX1276.c: 408: }
 28367  0055BC  D004               	goto	l12494
 28368  0055BE                     l12488:
 28369                           
 28370                           ; BSR set to: 0
 28371                           ;radio_driver_SX1276.c: 409: else
 28372                           ;radio_driver_SX1276.c: 410: {
 28373                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 28374  0055BE  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 28375                           
 28376                           ; BSR set to: 0
 28377                           ;radio_driver_SX1276.c: 412: power -= 2;
 28378  0055C0  0EFE               	movlw	254
 28379  0055C2  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 28383  0055C4  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 28384  0055C6                     l12494:
 28385                           
 28386                           ; BSR set to: 0
 28387                           ;radio_driver_SX1276.c: 414: }
 28388                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 28389  0055C6  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 28390  0055CA  0E4D               	movlw	77
 28391  0055CC  EC3D  F03B         	call	_RADIO_RegisterWrite
 28392                           
 28393                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 28394  0055D0  0100               	movlb	0	; () banked
 28395  0055D2  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 28396  0055D4  0980               	iorlw	128
 28397  0055D6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 28398  0055D8  0E09               	movlw	9
 28399  0055DA  EC3D  F03B         	call	_RADIO_RegisterWrite
 28400                           
 28401                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 28402  0055DE  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 28403  0055E2  0E0B               	movlw	11
 28404  0055E4  EF3D  F03B         	goto	_RADIO_RegisterWrite
 28405  0055E8                     __end_of_RADIO_WritePower:
 28406                           	opt stack 0
 28407                           tosu	equ	0xFFF
 28408                           tosh	equ	0xFFE
 28409                           tosl	equ	0xFFD
 28410                           pclath	equ	0xFFA
 28411                           tblptru	equ	0xFF8
 28412                           tblptrh	equ	0xFF7
 28413                           tblptrl	equ	0xFF6
 28414                           tablat	equ	0xFF5
 28415                           prodh	equ	0xFF4
 28416                           prodl	equ	0xFF3
 28417                           intcon	equ	0xFF2
 28418                           intcon2	equ	0xFF1
 28419                           intcon3	equ	0xFF0
 28420                           indf0	equ	0xFEF
 28421                           postinc0	equ	0xFEE
 28422                           fsr0h	equ	0xFEA
 28423                           fsr0l	equ	0xFE9
 28424                           wreg	equ	0xFE8
 28425                           postinc1	equ	0xFE6
 28426                           postdec1	equ	0xFE5
 28427                           plusw1	equ	0xFE3
 28428                           fsr1h	equ	0xFE2
 28429                           fsr1l	equ	0xFE1
 28430                           indf2	equ	0xFDF
 28431                           postinc2	equ	0xFDE
 28432                           postdec2	equ	0xFDD
 28433                           plusw2	equ	0xFDB
 28434                           fsr2h	equ	0xFDA
 28435                           fsr2l	equ	0xFD9
 28436                           status	equ	0xFD8
 28437                           
 28438 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 28439 ;; Defined at:
 28440 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28441 ;; Parameters:    Size  Location     Type
 28442 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 28443 ;; Auto vars:     Size  Location     Type
 28444 ;;  num             4   21[BANK0 ] unsigned long 
 28445 ;; Return value:  Size  Location     Type
 28446 ;;                  1    wreg      void 
 28447 ;; Registers used:
 28448 ;;		wreg, status,2, status,0, cstack
 28449 ;; Tracked objects:
 28450 ;;		On entry : F/1
 28451 ;;		On exit  : 0/0
 28452 ;;		Unchanged: 0/0
 28453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28454 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28455 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28457 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28458 ;;Total ram usage:        8 bytes
 28459 ;; Hardware stack levels used:    1
 28460 ;; Hardware stack levels required when called:   10
 28461 ;; This function calls:
 28462 ;;		_RADIO_RegisterWrite
 28463 ;;		___lldiv
 28464 ;; This function is called by:
 28465 ;;		_RADIO_WriteConfiguration
 28466 ;; This function uses a non-reentrant model
 28467 ;;
 28468                           
 28469                           	psect	text146
 28470  00665A                     __ptext146:
 28471                           	opt stack 0
 28472  00665A                     _RADIO_WriteFSKFrequencyDeviation:
 28473                           	opt stack 16
 28474                           
 28475                           ; BSR set to: 1
 28476                           ;radio_driver_SX1276.c: 296: uint32_t num;
 28477                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 28478                           
 28479                           ;incstack = 0
 28480  00665A  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 28481  00665E  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 28482  006662  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 28483  006666  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 28484                           
 28485                           ; BSR set to: 1
 28486                           ;radio_driver_SX1276.c: 304: num <<= (8);
 28487  00666A  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 28488  00666E  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 28489  006672  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 28490  006676  0100               	movlb	0	; () banked
 28491  006678  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 28492                           
 28493                           ; BSR set to: 0
 28494                           ;radio_driver_SX1276.c: 305: num /= 15625;
 28495  00667A  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 28496  00667E  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 28497  006682  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 28498  006686  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 28499  00668A  0E09               	movlw	9
 28500  00668C  6F68               	movwf	___lldiv@divisor& (0+255),b
 28501  00668E  0E3D               	movlw	61
 28502  006690  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 28503  006692  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 28504  006694  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 28505  006696  EC1B  F031         	call	___lldiv	;wreg free
 28506  00669A  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 28507  00669E  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 28508  0066A2  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 28509  0066A6  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 28510                           
 28511                           ; BSR set to: 0
 28512                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 28513  0066AA  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 28514  0066AE  0E04               	movlw	4
 28515  0066B0  EC3D  F03B         	call	_RADIO_RegisterWrite
 28516                           
 28517                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 28518  0066B4  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 28519  0066B8  0E05               	movlw	5
 28520  0066BA  EF3D  F03B         	goto	_RADIO_RegisterWrite
 28521  0066BE                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 28522                           	opt stack 0
 28523                           tosu	equ	0xFFF
 28524                           tosh	equ	0xFFE
 28525                           tosl	equ	0xFFD
 28526                           pclath	equ	0xFFA
 28527                           tblptru	equ	0xFF8
 28528                           tblptrh	equ	0xFF7
 28529                           tblptrl	equ	0xFF6
 28530                           tablat	equ	0xFF5
 28531                           prodh	equ	0xFF4
 28532                           prodl	equ	0xFF3
 28533                           intcon	equ	0xFF2
 28534                           intcon2	equ	0xFF1
 28535                           intcon3	equ	0xFF0
 28536                           indf0	equ	0xFEF
 28537                           postinc0	equ	0xFEE
 28538                           fsr0h	equ	0xFEA
 28539                           fsr0l	equ	0xFE9
 28540                           wreg	equ	0xFE8
 28541                           postinc1	equ	0xFE6
 28542                           postdec1	equ	0xFE5
 28543                           plusw1	equ	0xFE3
 28544                           fsr1h	equ	0xFE2
 28545                           fsr1l	equ	0xFE1
 28546                           indf2	equ	0xFDF
 28547                           postinc2	equ	0xFDE
 28548                           postdec2	equ	0xFDD
 28549                           plusw2	equ	0xFDB
 28550                           fsr2h	equ	0xFDA
 28551                           fsr2l	equ	0xFD9
 28552                           status	equ	0xFD8
 28553                           
 28554 ;; *************** function _RADIO_WriteFSKBitRate *****************
 28555 ;; Defined at:
 28556 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 28557 ;; Parameters:    Size  Location     Type
 28558 ;;  bitRate         4   17[BANK0 ] unsigned long 
 28559 ;; Auto vars:     Size  Location     Type
 28560 ;;  num             4   21[BANK0 ] unsigned long 
 28561 ;; Return value:  Size  Location     Type
 28562 ;;                  1    wreg      void 
 28563 ;; Registers used:
 28564 ;;		wreg, status,2, status,0, cstack
 28565 ;; Tracked objects:
 28566 ;;		On entry : 0/1
 28567 ;;		On exit  : 0/0
 28568 ;;		Unchanged: 0/0
 28569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28571 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28573 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28574 ;;Total ram usage:        8 bytes
 28575 ;; Hardware stack levels used:    1
 28576 ;; Hardware stack levels required when called:   10
 28577 ;; This function calls:
 28578 ;;		_RADIO_RegisterWrite
 28579 ;;		___lldiv
 28580 ;; This function is called by:
 28581 ;;		_RADIO_WriteConfiguration
 28582 ;; This function uses a non-reentrant model
 28583 ;;
 28584                           
 28585                           	psect	text147
 28586  0066BE                     __ptext147:
 28587                           	opt stack 0
 28588  0066BE                     _RADIO_WriteFSKBitRate:
 28589                           	opt stack 16
 28590                           
 28591                           ;radio_driver_SX1276.c: 318: uint32_t num;
 28592                           ;radio_driver_SX1276.c: 320: num = 32000000;
 28593                           
 28594                           ;incstack = 0
 28595  0066BE  0100               	movlb	0	; () banked
 28596  0066C0  6B75               	clrf	RADIO_WriteFSKBitRate@num& (0+255),b
 28597  0066C2  0E48               	movlw	72
 28598  0066C4  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 28599  0066C6  0EE8               	movlw	232
 28600  0066C8  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 28601  0066CA  0E01               	movlw	1
 28602  0066CC  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 28603                           
 28604                           ; BSR set to: 0
 28605                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 28606  0066CE  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 28607  0066D2  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 28608  0066D6  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 28609  0066DA  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 28610  0066DE  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 28611  0066E2  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 28612  0066E6  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 28613  0066EA  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 28614  0066EE  EC1B  F031         	call	___lldiv	;wreg free
 28615  0066F2  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 28616  0066F6  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 28617  0066FA  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 28618  0066FE  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 28622  006702  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 28623  006706  0E02               	movlw	2
 28624  006708  EC3D  F03B         	call	_RADIO_RegisterWrite
 28625                           
 28626                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 28627  00670C  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 28628  006710  0E03               	movlw	3
 28629  006712  EC3D  F03B         	call	_RADIO_RegisterWrite
 28630                           
 28631                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 28632  006716  0100               	movlb	0	; () banked
 28633  006718  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 28634  00671A  0E5D               	movlw	93
 28635  00671C  EF3D  F03B         	goto	_RADIO_RegisterWrite
 28636  006720                     __end_of_RADIO_WriteFSKBitRate:
 28637                           	opt stack 0
 28638                           tosu	equ	0xFFF
 28639                           tosh	equ	0xFFE
 28640                           tosl	equ	0xFFD
 28641                           pclath	equ	0xFFA
 28642                           tblptru	equ	0xFF8
 28643                           tblptrh	equ	0xFF7
 28644                           tblptrl	equ	0xFF6
 28645                           tablat	equ	0xFF5
 28646                           prodh	equ	0xFF4
 28647                           prodl	equ	0xFF3
 28648                           intcon	equ	0xFF2
 28649                           intcon2	equ	0xFF1
 28650                           intcon3	equ	0xFF0
 28651                           indf0	equ	0xFEF
 28652                           postinc0	equ	0xFEE
 28653                           fsr0h	equ	0xFEA
 28654                           fsr0l	equ	0xFE9
 28655                           wreg	equ	0xFE8
 28656                           postinc1	equ	0xFE6
 28657                           postdec1	equ	0xFE5
 28658                           plusw1	equ	0xFE3
 28659                           fsr1h	equ	0xFE2
 28660                           fsr1l	equ	0xFE1
 28661                           indf2	equ	0xFDF
 28662                           postinc2	equ	0xFDE
 28663                           postdec2	equ	0xFDD
 28664                           plusw2	equ	0xFDB
 28665                           fsr2h	equ	0xFDA
 28666                           fsr2l	equ	0xFD9
 28667                           status	equ	0xFD8
 28668                           
 28669 ;; *************** function _PrepareJoinRequestFrame *****************
 28670 ;; Defined at:
 28671 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28672 ;; Parameters:    Size  Location     Type
 28673 ;;		None
 28674 ;; Auto vars:     Size  Location     Type
 28675 ;;  mic             4  128[BANK0 ] unsigned long 
 28676 ;;  iCtr            1  134[BANK0 ] unsigned char 
 28677 ;;  bufferIndex     1  133[BANK0 ] unsigned char 
 28678 ;;  mhdr            1  132[BANK0 ] struct .
 28679 ;; Return value:  Size  Location     Type
 28680 ;;                  1    wreg      unsigned char 
 28681 ;; Registers used:
 28682 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28683 ;; Tracked objects:
 28684 ;;		On entry : F/2
 28685 ;;		On exit  : F/0
 28686 ;;		Unchanged: 0/0
 28687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28689 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28690 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28691 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28692 ;;Total ram usage:        9 bytes
 28693 ;; Hardware stack levels used:    1
 28694 ;; Hardware stack levels required when called:   13
 28695 ;; This function calls:
 28696 ;;		_ComputeMic
 28697 ;;		_Random
 28698 ;;		_memcpy
 28699 ;;		_memset
 28700 ;; This function is called by:
 28701 ;;		_LORAWAN_Join
 28702 ;; This function uses a non-reentrant model
 28703 ;;
 28704                           
 28705                           	psect	text148
 28706  00469E                     __ptext148:
 28707                           	opt stack 0
 28708  00469E                     _PrepareJoinRequestFrame:
 28709                           	opt stack 16
 28710                           
 28711                           ; BSR set to: 2
 28712                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 28713                           
 28714                           ;incstack = 0
 28715  00469E  0100               	movlb	0	; () banked
 28716  0046A0  6BE5               	clrf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 28717                           
 28718                           ; BSR set to: 0
 28719                           ;lorawan.c: 1809: Mhdr_t mhdr;
 28720                           ;lorawan.c: 1810: uint32_t mic;
 28721                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 28722  0046A2  0EE0               	movlw	low _macBuffer
 28723  0046A4  6F64               	movwf	memset@p1& (0+255),b
 28724  0046A6  0E04               	movlw	high _macBuffer
 28725  0046A8  6F65               	movwf	(memset@p1+1)& (0+255),b
 28726  0046AA  6B67               	clrf	(memset@c+1)& (0+255),b
 28727  0046AC  6B66               	clrf	memset@c& (0+255),b
 28728  0046AE  0E01               	movlw	1
 28729  0046B0  6F69               	movwf	(memset@n+1)& (0+255),b
 28730  0046B2  0E0F               	movlw	15
 28731  0046B4  6F68               	movwf	memset@n& (0+255),b
 28732  0046B6  ECF1  F039         	call	_memset	;wreg free
 28733                           
 28734                           ; BSR set to: 0
 28735                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 28736  0046BA  0E1F               	movlw	-225
 28737  0046BC  17E4               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 28738                           
 28739                           ; BSR set to: 0
 28740                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 28741  0046BE  0EFC               	movlw	-4
 28742  0046C0  17E4               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 28743                           
 28744                           ; BSR set to: 0
 28745                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 28746  0046C2  0EE3               	movlw	-29
 28747  0046C4  17E4               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 28748                           
 28749                           ; BSR set to: 0
 28750                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 28751  0046C6  EE24  F0E0         	lfsr	2,_macBuffer
 28752  0046CA  C0E4  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 28753                           
 28754                           ; BSR set to: 0
 28755  0046CE  2BE5               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28756                           
 28757                           ; BSR set to: 0
 28758                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 28759  0046D0  6BE6               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 28760  0046D2                     l15700:
 28761                           
 28762                           ; BSR set to: 0
 28763                           ;lorawan.c: 1821: {
 28764                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 28765  0046D2  51E6               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 28766  0046D4  0859               	sublw	low (_loRa+89)
 28767  0046D6  6ED9               	movwf	fsr2l,c
 28768  0046D8  0E00               	movlw	0
 28769  0046DA  A0D8               	btfss	status,0,c
 28770  0046DC  2AE8               	incf	wreg,f,c
 28771  0046DE  0802               	sublw	high (_loRa+89)
 28772  0046E0  6EDA               	movwf	fsr2h,c
 28773  0046E2  0EE0               	movlw	low _macBuffer
 28774  0046E4  6FDE               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 28775  0046E6  0E04               	movlw	high _macBuffer
 28776  0046E8  6FDF               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 28777  0046EA  51E5               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28778  0046EC  27DE               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 28779  0046EE  0E00               	movlw	0
 28780  0046F0  23DF               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 28781  0046F2  51E6               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 28782  0046F4  25DE               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 28783  0046F6  6EE9               	movwf	fsr0l,c
 28784  0046F8  0E00               	movlw	0
 28785  0046FA  21DF               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 28786  0046FC  6EEA               	movwf	fsr0h,c
 28787  0046FE  CFDF FFEF          	movff	indf2,indf0
 28788                           
 28789                           ; BSR set to: 0
 28790  004702  2BE6               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 28791                           
 28792                           ; BSR set to: 0
 28793  004704  0E07               	movlw	7
 28794  004706  65E6               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 28795  004708  D7E4               	goto	l15700
 28796                           
 28797                           ; BSR set to: 0
 28798                           ;lorawan.c: 1823: }
 28799                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 28800  00470A  0E08               	movlw	8
 28801  00470C  27E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28802                           
 28803                           ; BSR set to: 0
 28804                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 28805  00470E  6BE6               	clrf	PrepareJoinRequestFrame@iCtr& (0+255),b
 28806  004710                     l15712:
 28807                           
 28808                           ; BSR set to: 0
 28809                           ;lorawan.c: 1828: {
 28810                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 28811  004710  51E6               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 28812  004712  0861               	sublw	low (_loRa+97)
 28813  004714  6ED9               	movwf	fsr2l,c
 28814  004716  0E00               	movlw	0
 28815  004718  A0D8               	btfss	status,0,c
 28816  00471A  2AE8               	incf	wreg,f,c
 28817  00471C  0802               	sublw	high (_loRa+97)
 28818  00471E  6EDA               	movwf	fsr2h,c
 28819  004720  0EE0               	movlw	low _macBuffer
 28820  004722  6FDE               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 28821  004724  0E04               	movlw	high _macBuffer
 28822  004726  6FDF               	movwf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 28823  004728  51E5               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28824  00472A  27DE               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 28825  00472C  0E00               	movlw	0
 28826  00472E  23DF               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 28827  004730  51E6               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 28828  004732  25DE               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 28829  004734  6EE9               	movwf	fsr0l,c
 28830  004736  0E00               	movlw	0
 28831  004738  21DF               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 28832  00473A  6EEA               	movwf	fsr0h,c
 28833  00473C  CFDF FFEF          	movff	indf2,indf0
 28834                           
 28835                           ; BSR set to: 0
 28836  004740  2BE6               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 28837                           
 28838                           ; BSR set to: 0
 28839  004742  0E07               	movlw	7
 28840  004744  65E6               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 28841  004746  D7E4               	goto	l15712
 28842                           
 28843                           ; BSR set to: 0
 28844                           ;lorawan.c: 1830: }
 28845                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 28846  004748  0E08               	movlw	8
 28847  00474A  27E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28848                           
 28849                           ; BSR set to: 0
 28850                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 28851  00474C  6978               	setf	(Random@max+1)& (0+255),b
 28852  00474E  6977               	setf	Random@max& (0+255),b
 28853  004750  ECD0  F03A         	call	_Random	;wreg free
 28854  004754  C077  F2D2         	movff	?_Random,_loRa+210
 28855  004758  C078  F2D3         	movff	?_Random+1,_loRa+211
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 28859  00475C  0EE0               	movlw	low _macBuffer
 28860  00475E  25E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28861  004760  6F64               	movwf	memcpy@d1& (0+255),b
 28862  004762  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28863  004764  0E04               	movlw	high _macBuffer
 28864  004766  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28865  004768  0ED2               	movlw	low (_loRa+210)
 28866  00476A  6F66               	movwf	memcpy@s1& (0+255),b
 28867  00476C  0E02               	movlw	high (_loRa+210)
 28868  00476E  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 28869  004770  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28870  004772  0E02               	movlw	2
 28871  004774  6F68               	movwf	memcpy@n& (0+255),b
 28872  004776  ECD5  F034         	call	_memcpy	;wreg free
 28873                           
 28874                           ; BSR set to: 0
 28875                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 28876  00477A  0E02               	movlw	2
 28877  00477C  27E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28878                           
 28879                           ; BSR set to: 0
 28880                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 28881  00477E  0E42               	movlw	low (_loRa+66)
 28882  004780  0101               	movlb	1	; () banked
 28883  004782  6F66               	movwf	ComputeMic@key& (0+255),b
 28884  004784  0E02               	movlw	high (_loRa+66)
 28885  004786  6F67               	movwf	(ComputeMic@key+1)& (0+255),b
 28886  004788  0EE0               	movlw	low _macBuffer
 28887  00478A  6F68               	movwf	ComputeMic@buffer& (0+255),b
 28888  00478C  0E04               	movlw	high _macBuffer
 28889  00478E  6F69               	movwf	(ComputeMic@buffer+1)& (0+255),b
 28890  004790  C0E5  F16A         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 28891  004794  EC01  F035         	call	_ComputeMic	;wreg free
 28892  004798  C166  F0E0         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 28893  00479C  C167  F0E1         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 28894  0047A0  C168  F0E2         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 28895  0047A4  C169  F0E3         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 28896                           
 28897                           ; BSR set to: 0
 28898                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 28899  0047A8  0EE0               	movlw	low _macBuffer
 28900  0047AA  25E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28901  0047AC  6F64               	movwf	memcpy@d1& (0+255),b
 28902  0047AE  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 28903  0047B0  0E04               	movlw	high _macBuffer
 28904  0047B2  2365               	addwfc	(memcpy@d1+1)& (0+255),f,b
 28905  0047B4  0EE0               	movlw	low PrepareJoinRequestFrame@mic
 28906  0047B6  6F66               	movwf	memcpy@s1& (0+255),b
 28907  0047B8  6B67               	clrf	(memcpy@s1+1)& (0+255),b
 28908  0047BA  6B69               	clrf	(memcpy@n+1)& (0+255),b
 28909  0047BC  0E04               	movlw	4
 28910  0047BE  6F68               	movwf	memcpy@n& (0+255),b
 28911  0047C0  ECD5  F034         	call	_memcpy	;wreg free
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 28915  0047C4  0E04               	movlw	4
 28916  0047C6  27E5               	addwf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 28917                           
 28918                           ; BSR set to: 0
 28919                           ;lorawan.c: 1842: return bufferIndex;
 28920  0047C8  51E5               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 28921                           
 28922                           ; BSR set to: 0
 28923  0047CA  0012               	return		;funcret
 28924  0047CC                     __end_of_PrepareJoinRequestFrame:
 28925                           	opt stack 0
 28926                           tosu	equ	0xFFF
 28927                           tosh	equ	0xFFE
 28928                           tosl	equ	0xFFD
 28929                           pclath	equ	0xFFA
 28930                           tblptru	equ	0xFF8
 28931                           tblptrh	equ	0xFF7
 28932                           tblptrl	equ	0xFF6
 28933                           tablat	equ	0xFF5
 28934                           prodh	equ	0xFF4
 28935                           prodl	equ	0xFF3
 28936                           intcon	equ	0xFF2
 28937                           intcon2	equ	0xFF1
 28938                           intcon3	equ	0xFF0
 28939                           indf0	equ	0xFEF
 28940                           postinc0	equ	0xFEE
 28941                           fsr0h	equ	0xFEA
 28942                           fsr0l	equ	0xFE9
 28943                           wreg	equ	0xFE8
 28944                           postinc1	equ	0xFE6
 28945                           postdec1	equ	0xFE5
 28946                           plusw1	equ	0xFE3
 28947                           fsr1h	equ	0xFE2
 28948                           fsr1l	equ	0xFE1
 28949                           indf2	equ	0xFDF
 28950                           postinc2	equ	0xFDE
 28951                           postdec2	equ	0xFDD
 28952                           plusw2	equ	0xFDB
 28953                           fsr2h	equ	0xFDA
 28954                           fsr2l	equ	0xFD9
 28955                           status	equ	0xFD8
 28956                           
 28957 ;; *************** function _Random *****************
 28958 ;; Defined at:
 28959 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28960 ;; Parameters:    Size  Location     Type
 28961 ;;  max             2   23[BANK0 ] unsigned int 
 28962 ;; Auto vars:     Size  Location     Type
 28963 ;;		None
 28964 ;; Return value:  Size  Location     Type
 28965 ;;                  2   23[BANK0 ] unsigned int 
 28966 ;; Registers used:
 28967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 28968 ;; Tracked objects:
 28969 ;;		On entry : F/0
 28970 ;;		On exit  : F/0
 28971 ;;		Unchanged: 0/0
 28972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28977 ;;Total ram usage:        2 bytes
 28978 ;; Hardware stack levels used:    1
 28979 ;; Hardware stack levels required when called:    9
 28980 ;; This function calls:
 28981 ;;		___lwmod
 28982 ;;		_rand
 28983 ;; This function is called by:
 28984 ;;		_SearchAvailableChannel
 28985 ;;		_PrepareJoinRequestFrame
 28986 ;; This function uses a non-reentrant model
 28987 ;;
 28988                           
 28989                           	psect	text149
 28990  0075A0                     __ptext149:
 28991                           	opt stack 0
 28992  0075A0                     _Random:
 28993                           	opt stack 17
 28994                           
 28995                           ; BSR set to: 0
 28996                           ;lorawan.c: 1118: return (rand () % max);
 28997                           
 28998                           ; BSR set to: 0
 28999                           ;incstack = 0
 29000  0075A0  ECCB  F035         	call	_rand	;wreg free
 29001  0075A4  C070  F072         	movff	?_rand,___lwmod@dividend
 29002  0075A8  C071  F073         	movff	?_rand+1,___lwmod@dividend+1
 29003  0075AC  C077  F074         	movff	Random@max,___lwmod@divisor
 29004  0075B0  C078  F075         	movff	Random@max+1,___lwmod@divisor+1
 29005  0075B4  EC9E  F037         	call	___lwmod	;wreg free
 29006  0075B8  C072  F077         	movff	?___lwmod,?_Random
 29007  0075BC  C073  F078         	movff	?___lwmod+1,?_Random+1
 29008                           
 29009                           ; BSR set to: 0
 29010  0075C0  0012               	return		;funcret
 29011  0075C2                     __end_of_Random:
 29012                           	opt stack 0
 29013                           tosu	equ	0xFFF
 29014                           tosh	equ	0xFFE
 29015                           tosl	equ	0xFFD
 29016                           pclath	equ	0xFFA
 29017                           tblptru	equ	0xFF8
 29018                           tblptrh	equ	0xFF7
 29019                           tblptrl	equ	0xFF6
 29020                           tablat	equ	0xFF5
 29021                           prodh	equ	0xFF4
 29022                           prodl	equ	0xFF3
 29023                           intcon	equ	0xFF2
 29024                           intcon2	equ	0xFF1
 29025                           intcon3	equ	0xFF0
 29026                           indf0	equ	0xFEF
 29027                           postinc0	equ	0xFEE
 29028                           fsr0h	equ	0xFEA
 29029                           fsr0l	equ	0xFE9
 29030                           wreg	equ	0xFE8
 29031                           postinc1	equ	0xFE6
 29032                           postdec1	equ	0xFE5
 29033                           plusw1	equ	0xFE3
 29034                           fsr1h	equ	0xFE2
 29035                           fsr1l	equ	0xFE1
 29036                           indf2	equ	0xFDF
 29037                           postinc2	equ	0xFDE
 29038                           postdec2	equ	0xFDD
 29039                           plusw2	equ	0xFDB
 29040                           fsr2h	equ	0xFDA
 29041                           fsr2l	equ	0xFD9
 29042                           status	equ	0xFD8
 29043                           
 29044 ;; *************** function _rand *****************
 29045 ;; Defined at:
 29046 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 29047 ;; Parameters:    Size  Location     Type
 29048 ;;		None
 29049 ;; Auto vars:     Size  Location     Type
 29050 ;;		None
 29051 ;; Return value:  Size  Location     Type
 29052 ;;                  2   16[BANK0 ] int 
 29053 ;; Registers used:
 29054 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 29055 ;; Tracked objects:
 29056 ;;		On entry : F/0
 29057 ;;		On exit  : F/0
 29058 ;;		Unchanged: 0/0
 29059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29060 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29063 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29064 ;;Total ram usage:        2 bytes
 29065 ;; Hardware stack levels used:    1
 29066 ;; Hardware stack levels required when called:    8
 29067 ;; This function calls:
 29068 ;;		___lmul
 29069 ;; This function is called by:
 29070 ;;		_Random
 29071 ;; This function uses a non-reentrant model
 29072 ;;
 29073                           
 29074                           	psect	text150
 29075  006B96                     __ptext150:
 29076                           	opt stack 0
 29077  006B96                     _rand:
 29078                           	opt stack 17
 29079                           
 29080                           ; BSR set to: 0
 29081                           
 29082                           ; BSR set to: 0
 29083                           ;incstack = 0
 29084  006B96  C056  F064         	movff	_randx,___lmul@multiplier
 29085  006B9A  C057  F065         	movff	_randx+1,___lmul@multiplier+1
 29086  006B9E  C058  F066         	movff	_randx+2,___lmul@multiplier+2
 29087  006BA2  C059  F067         	movff	_randx+3,___lmul@multiplier+3
 29088  006BA6  0E6D               	movlw	109
 29089  006BA8  6F68               	movwf	___lmul@multiplicand& (0+255),b
 29090  006BAA  0E4E               	movlw	78
 29091  006BAC  6F69               	movwf	(___lmul@multiplicand+1)& (0+255),b
 29092  006BAE  0EC6               	movlw	198
 29093  006BB0  6F6A               	movwf	(___lmul@multiplicand+2)& (0+255),b
 29094  006BB2  0E41               	movlw	65
 29095  006BB4  6F6B               	movwf	(___lmul@multiplicand+3)& (0+255),b
 29096  006BB6  EC9D  F02F         	call	___lmul	;wreg free
 29097  006BBA  C064  F056         	movff	?___lmul,_randx
 29098  006BBE  C065  F057         	movff	?___lmul+1,_randx+1
 29099  006BC2  C066  F058         	movff	?___lmul+2,_randx+2
 29100  006BC6  C067  F059         	movff	?___lmul+3,_randx+3
 29101                           
 29102                           ; BSR set to: 0
 29103  006BCA  0E39               	movlw	57
 29104  006BCC  2656               	addwf	_randx,f,c
 29105  006BCE  0E30               	movlw	48
 29106  006BD0  2257               	addwfc	_randx+1,f,c
 29107  006BD2  0E00               	movlw	0
 29108  006BD4  2258               	addwfc	_randx+2,f,c
 29109  006BD6  2259               	addwfc	_randx+3,f,c
 29110                           
 29111                           ; BSR set to: 0
 29112  006BD8  5058               	movf	_randx+2,w,c
 29113  006BDA  6F70               	movwf	?_rand& (0+255),b
 29114  006BDC  0E7F               	movlw	127
 29115  006BDE  1459               	andwf	_randx+3,w,c
 29116  006BE0  6F71               	movwf	(?_rand+1)& (0+255),b
 29117                           
 29118                           ; BSR set to: 0
 29119  006BE2  0012               	return		;funcret
 29120  006BE4                     __end_of_rand:
 29121                           	opt stack 0
 29122                           tosu	equ	0xFFF
 29123                           tosh	equ	0xFFE
 29124                           tosl	equ	0xFFD
 29125                           pclath	equ	0xFFA
 29126                           tblptru	equ	0xFF8
 29127                           tblptrh	equ	0xFF7
 29128                           tblptrl	equ	0xFF6
 29129                           tablat	equ	0xFF5
 29130                           prodh	equ	0xFF4
 29131                           prodl	equ	0xFF3
 29132                           intcon	equ	0xFF2
 29133                           intcon2	equ	0xFF1
 29134                           intcon3	equ	0xFF0
 29135                           indf0	equ	0xFEF
 29136                           postinc0	equ	0xFEE
 29137                           fsr0h	equ	0xFEA
 29138                           fsr0l	equ	0xFE9
 29139                           wreg	equ	0xFE8
 29140                           postinc1	equ	0xFE6
 29141                           postdec1	equ	0xFE5
 29142                           plusw1	equ	0xFE3
 29143                           fsr1h	equ	0xFE2
 29144                           fsr1l	equ	0xFE1
 29145                           indf2	equ	0xFDF
 29146                           postinc2	equ	0xFDE
 29147                           postdec2	equ	0xFDD
 29148                           plusw2	equ	0xFDB
 29149                           fsr2h	equ	0xFDA
 29150                           fsr2l	equ	0xFD9
 29151                           status	equ	0xFD8
 29152                           
 29153 ;; *************** function ___lmul *****************
 29154 ;; Defined at:
 29155 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 29156 ;; Parameters:    Size  Location     Type
 29157 ;;  multiplier      4    4[BANK0 ] unsigned long 
 29158 ;;  multiplicand    4    8[BANK0 ] unsigned long 
 29159 ;; Auto vars:     Size  Location     Type
 29160 ;;  product         4   12[BANK0 ] unsigned long 
 29161 ;; Return value:  Size  Location     Type
 29162 ;;                  4    4[BANK0 ] unsigned long 
 29163 ;; Registers used:
 29164 ;;		wreg, status,2, status,0, prodl, prodh
 29165 ;; Tracked objects:
 29166 ;;		On entry : F/0
 29167 ;;		On exit  : F/0
 29168 ;;		Unchanged: 0/0
 29169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29170 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29171 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29172 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29173 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29174 ;;Total ram usage:       12 bytes
 29175 ;; Hardware stack levels used:    1
 29176 ;; Hardware stack levels required when called:    7
 29177 ;; This function calls:
 29178 ;;		Nothing
 29179 ;; This function is called by:
 29180 ;;		_RADIO_WriteConfiguration
 29181 ;;		_ExecuteNewChannel
 29182 ;;		_ExecuteRxParamSetupReq
 29183 ;;		_UpdateCfList
 29184 ;;		_rand
 29185 ;; This function uses a non-reentrant model
 29186 ;;
 29187                           
 29188                           	psect	text151
 29189  005F3A                     __ptext151:
 29190                           	opt stack 0
 29191  005F3A                     ___lmul:
 29192                           	opt stack 17
 29193                           
 29194                           ; BSR set to: 0
 29195                           
 29196                           ; BSR set to: 0
 29197                           ;incstack = 0
 29198  005F3A  5164               	movf	___lmul@multiplier& (0+255),w,b
 29199  005F3C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 29200  005F3E  CFF3 F06C          	movff	prodl,___lmul@product
 29201  005F42  CFF4 F06D          	movff	prodh,___lmul@product+1
 29202  005F46  6B6E               	clrf	(___lmul@product+2)& (0+255),b
 29203  005F48  6B6F               	clrf	(___lmul@product+3)& (0+255),b
 29204  005F4A  5164               	movf	___lmul@multiplier& (0+255),w,b
 29205  005F4C  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 29206  005F4E  50F3               	movf	prodl,w,c
 29207  005F50  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 29208  005F52  50F4               	movf	prodh,w,c
 29209  005F54  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 29210  005F56  0E00               	movlw	0
 29211  005F58  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 29212  005F5A  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 29213  005F5C  0368               	mulwf	___lmul@multiplicand& (0+255),b
 29214  005F5E  50F3               	movf	prodl,w,c
 29215  005F60  276D               	addwf	(___lmul@product+1)& (0+255),f,b
 29216  005F62  50F4               	movf	prodh,w,c
 29217  005F64  236E               	addwfc	(___lmul@product+2)& (0+255),f,b
 29218  005F66  0E00               	movlw	0
 29219  005F68  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 29220  005F6A  5164               	movf	___lmul@multiplier& (0+255),w,b
 29221  005F6C  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 29222  005F6E  50F3               	movf	prodl,w,c
 29223  005F70  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 29224  005F72  50F4               	movf	prodh,w,c
 29225  005F74  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 29226  005F76  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 29227  005F78  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 29228  005F7A  50F3               	movf	prodl,w,c
 29229  005F7C  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 29230  005F7E  50F4               	movf	prodh,w,c
 29231  005F80  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 29232  005F82  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 29233  005F84  0368               	mulwf	___lmul@multiplicand& (0+255),b
 29234  005F86  50F3               	movf	prodl,w,c
 29235  005F88  276E               	addwf	(___lmul@product+2)& (0+255),f,b
 29236  005F8A  50F4               	movf	prodh,w,c
 29237  005F8C  236F               	addwfc	(___lmul@product+3)& (0+255),f,b
 29238  005F8E  516B               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 29239  005F90  0364               	mulwf	___lmul@multiplier& (0+255),b
 29240  005F92  50F3               	movf	prodl,w,c
 29241  005F94  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 29242  005F96  5165               	movf	(___lmul@multiplier+1)& (0+255),w,b
 29243  005F98  036A               	mulwf	(___lmul@multiplicand+2)& (0+255),b
 29244  005F9A  50F3               	movf	prodl,w,c
 29245  005F9C  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 29246  005F9E  5166               	movf	(___lmul@multiplier+2)& (0+255),w,b
 29247  005FA0  0369               	mulwf	(___lmul@multiplicand+1)& (0+255),b
 29248  005FA2  50F3               	movf	prodl,w,c
 29249  005FA4  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 29250  005FA6  5167               	movf	(___lmul@multiplier+3)& (0+255),w,b
 29251  005FA8  0368               	mulwf	___lmul@multiplicand& (0+255),b
 29252  005FAA  50F3               	movf	prodl,w,c
 29253  005FAC  276F               	addwf	(___lmul@product+3)& (0+255),f,b
 29254                           
 29255                           ; BSR set to: 0
 29256  005FAE  C06C  F064         	movff	___lmul@product,?___lmul
 29257  005FB2  C06D  F065         	movff	___lmul@product+1,?___lmul+1
 29258  005FB6  C06E  F066         	movff	___lmul@product+2,?___lmul+2
 29259  005FBA  C06F  F067         	movff	___lmul@product+3,?___lmul+3
 29260                           
 29261                           ; BSR set to: 0
 29262  005FBE  0012               	return		;funcret
 29263  005FC0                     __end_of___lmul:
 29264                           	opt stack 0
 29265                           tosu	equ	0xFFF
 29266                           tosh	equ	0xFFE
 29267                           tosl	equ	0xFFD
 29268                           pclath	equ	0xFFA
 29269                           tblptru	equ	0xFF8
 29270                           tblptrh	equ	0xFF7
 29271                           tblptrl	equ	0xFF6
 29272                           tablat	equ	0xFF5
 29273                           prodh	equ	0xFF4
 29274                           prodl	equ	0xFF3
 29275                           intcon	equ	0xFF2
 29276                           intcon2	equ	0xFF1
 29277                           intcon3	equ	0xFF0
 29278                           indf0	equ	0xFEF
 29279                           postinc0	equ	0xFEE
 29280                           fsr0h	equ	0xFEA
 29281                           fsr0l	equ	0xFE9
 29282                           wreg	equ	0xFE8
 29283                           postinc1	equ	0xFE6
 29284                           postdec1	equ	0xFE5
 29285                           plusw1	equ	0xFE3
 29286                           fsr1h	equ	0xFE2
 29287                           fsr1l	equ	0xFE1
 29288                           indf2	equ	0xFDF
 29289                           postinc2	equ	0xFDE
 29290                           postdec2	equ	0xFDD
 29291                           plusw2	equ	0xFDB
 29292                           fsr2h	equ	0xFDA
 29293                           fsr2l	equ	0xFD9
 29294                           status	equ	0xFD8
 29295                           
 29296 ;; *************** function ___lwmod *****************
 29297 ;; Defined at:
 29298 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 29299 ;; Parameters:    Size  Location     Type
 29300 ;;  dividend        2   18[BANK0 ] unsigned int 
 29301 ;;  divisor         2   20[BANK0 ] unsigned int 
 29302 ;; Auto vars:     Size  Location     Type
 29303 ;;  counter         1   22[BANK0 ] unsigned char 
 29304 ;; Return value:  Size  Location     Type
 29305 ;;                  2   18[BANK0 ] unsigned int 
 29306 ;; Registers used:
 29307 ;;		wreg, status,2, status,0
 29308 ;; Tracked objects:
 29309 ;;		On entry : F/0
 29310 ;;		On exit  : F/0
 29311 ;;		Unchanged: 0/0
 29312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29314 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29316 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29317 ;;Total ram usage:        5 bytes
 29318 ;; Hardware stack levels used:    1
 29319 ;; Hardware stack levels required when called:    7
 29320 ;; This function calls:
 29321 ;;		Nothing
 29322 ;; This function is called by:
 29323 ;;		_Random
 29324 ;;		_printf
 29325 ;; This function uses a non-reentrant model
 29326 ;;
 29327                           
 29328                           	psect	text152
 29329  006F3C                     __ptext152:
 29330                           	opt stack 0
 29331  006F3C                     ___lwmod:
 29332                           	opt stack 21
 29333                           
 29334                           ; BSR set to: 0
 29335                           
 29336                           ; BSR set to: 0
 29337                           ;incstack = 0
 29338  006F3C  5174               	movf	___lwmod@divisor& (0+255),w,b
 29339  006F3E  1175               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 29340  006F40  E017               	bz	l3177
 29341                           
 29342                           ; BSR set to: 0
 29343  006F42  0E01               	movlw	1
 29344  006F44  6F76               	movwf	___lwmod@counter& (0+255),b
 29345  006F46  D004               	goto	l12596
 29346  006F48                     l12594:
 29347                           
 29348                           ; BSR set to: 0
 29349  006F48  90D8               	bcf	status,0,c
 29350  006F4A  3774               	rlcf	___lwmod@divisor& (0+255),f,b
 29351  006F4C  3775               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 29352  006F4E  2B76               	incf	___lwmod@counter& (0+255),f,b
 29353  006F50                     l12596:
 29354                           
 29355                           ; BSR set to: 0
 29356  006F50  AF75               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 29357  006F52  D7FA               	goto	l12594
 29358  006F54                     l12598:
 29359                           
 29360                           ; BSR set to: 0
 29361  006F54  5174               	movf	___lwmod@divisor& (0+255),w,b
 29362  006F56  5D72               	subwf	___lwmod@dividend& (0+255),w,b
 29363  006F58  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29364  006F5A  5973               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 29365  006F5C  E304               	bnc	l12602
 29366                           
 29367                           ; BSR set to: 0
 29368  006F5E  5174               	movf	___lwmod@divisor& (0+255),w,b
 29369  006F60  5F72               	subwf	___lwmod@dividend& (0+255),f,b
 29370  006F62  5175               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29371  006F64  5B73               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 29372  006F66                     l12602:
 29373                           
 29374                           ; BSR set to: 0
 29375  006F66  90D8               	bcf	status,0,c
 29376  006F68  3375               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 29377  006F6A  3374               	rrcf	___lwmod@divisor& (0+255),f,b
 29378                           
 29379                           ; BSR set to: 0
 29380  006F6C  2F76               	decfsz	___lwmod@counter& (0+255),f,b
 29381  006F6E  D7F2               	goto	l12598
 29382  006F70                     l3177:
 29383                           
 29384                           ; BSR set to: 0
 29385  006F70  C072  F072         	movff	___lwmod@dividend,?___lwmod
 29386  006F74  C073  F073         	movff	___lwmod@dividend+1,?___lwmod+1
 29387                           
 29388                           ; BSR set to: 0
 29389  006F78  0012               	return		;funcret
 29390  006F7A                     __end_of___lwmod:
 29391                           	opt stack 0
 29392                           tosu	equ	0xFFF
 29393                           tosh	equ	0xFFE
 29394                           tosl	equ	0xFFD
 29395                           pclath	equ	0xFFA
 29396                           tblptru	equ	0xFF8
 29397                           tblptrh	equ	0xFF7
 29398                           tblptrl	equ	0xFF6
 29399                           tablat	equ	0xFF5
 29400                           prodh	equ	0xFF4
 29401                           prodl	equ	0xFF3
 29402                           intcon	equ	0xFF2
 29403                           intcon2	equ	0xFF1
 29404                           intcon3	equ	0xFF0
 29405                           indf0	equ	0xFEF
 29406                           postinc0	equ	0xFEE
 29407                           fsr0h	equ	0xFEA
 29408                           fsr0l	equ	0xFE9
 29409                           wreg	equ	0xFE8
 29410                           postinc1	equ	0xFE6
 29411                           postdec1	equ	0xFE5
 29412                           plusw1	equ	0xFE3
 29413                           fsr1h	equ	0xFE2
 29414                           fsr1l	equ	0xFE1
 29415                           indf2	equ	0xFDF
 29416                           postinc2	equ	0xFDE
 29417                           postdec2	equ	0xFDD
 29418                           plusw2	equ	0xFDB
 29419                           fsr2h	equ	0xFDA
 29420                           fsr2l	equ	0xFD9
 29421                           status	equ	0xFD8
 29422                           
 29423 ;; *************** function _ComputeMic *****************
 29424 ;; Defined at:
 29425 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 29426 ;; Parameters:    Size  Location     Type
 29427 ;;  key             2  102[BANK1 ] PTR unsigned char 
 29428 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29429 ;;  buffer          2  104[BANK1 ] PTR unsigned char 
 29430 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 29431 ;;  bufferLength    1  106[BANK1 ] unsigned char 
 29432 ;; Auto vars:     Size  Location     Type
 29433 ;;  mic             4  122[BANK0 ] unsigned long 
 29434 ;; Return value:  Size  Location     Type
 29435 ;;                  4  102[BANK1 ] unsigned long 
 29436 ;; Registers used:
 29437 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29438 ;; Tracked objects:
 29439 ;;		On entry : F/1
 29440 ;;		On exit  : F/0
 29441 ;;		Unchanged: 0/0
 29442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29443 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29444 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29446 ;;      Totals:         0       4       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29447 ;;Total ram usage:        9 bytes
 29448 ;; Hardware stack levels used:    1
 29449 ;; Hardware stack levels required when called:   12
 29450 ;; This function calls:
 29451 ;;		_AESCmac
 29452 ;;		_memcpy
 29453 ;; This function is called by:
 29454 ;;		_LORAWAN_RxDone
 29455 ;;		_PrepareJoinRequestFrame
 29456 ;; This function uses a non-reentrant model
 29457 ;;
 29458                           
 29459                           	psect	text153
 29460  006A02                     __ptext153:
 29461                           	opt stack 0
 29462  006A02                     _ComputeMic:
 29463                           	opt stack 14
 29464                           
 29465                           ; BSR set to: 1
 29466                           ;lorawan.c: 2196: uint32_t mic = 0;
 29467                           
 29468                           ; BSR set to: 0
 29469                           ;incstack = 0
 29470  006A02  0100               	movlb	0	; () banked
 29471  006A04  6BDA               	clrf	ComputeMic@mic& (0+255),b
 29472  006A06  6BDB               	clrf	(ComputeMic@mic+1)& (0+255),b
 29473  006A08  6BDC               	clrf	(ComputeMic@mic+2)& (0+255),b
 29474  006A0A  6BDD               	clrf	(ComputeMic@mic+3)& (0+255),b
 29475                           
 29476                           ; BSR set to: 0
 29477                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 29478  006A0C  C166  F0CC         	movff	ComputeMic@key,AESCmac@key
 29479  006A10  C167  F0CD         	movff	ComputeMic@key+1,AESCmac@key+1
 29480  006A14  0EAF               	movlw	low _aesBuffer
 29481  006A16  6FCE               	movwf	AESCmac@output& (0+255),b
 29482  006A18  0E01               	movlw	high _aesBuffer
 29483  006A1A  6FCF               	movwf	(AESCmac@output+1)& (0+255),b
 29484  006A1C  C168  F0D0         	movff	ComputeMic@buffer,AESCmac@input
 29485  006A20  C169  F0D1         	movff	ComputeMic@buffer+1,AESCmac@input+1
 29486  006A24  C16A  F0D2         	movff	ComputeMic@bufferLength,AESCmac@size
 29487  006A28  EC10  F00C         	call	_AESCmac	;wreg free
 29488                           
 29489                           ; BSR set to: 0
 29490                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 29491  006A2C  0EDA               	movlw	low ComputeMic@mic
 29492  006A2E  6F64               	movwf	memcpy@d1& (0+255),b
 29493  006A30  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 29494  006A32  0EAF               	movlw	low _aesBuffer
 29495  006A34  6F66               	movwf	memcpy@s1& (0+255),b
 29496  006A36  0E01               	movlw	high _aesBuffer
 29497  006A38  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 29498  006A3A  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29499  006A3C  0E04               	movlw	4
 29500  006A3E  6F68               	movwf	memcpy@n& (0+255),b
 29501  006A40  ECD5  F034         	call	_memcpy	;wreg free
 29502                           
 29503                           ; BSR set to: 0
 29504                           ;lorawan.c: 2202: return mic;
 29505  006A44  C0DA  F166         	movff	ComputeMic@mic,?_ComputeMic
 29506  006A48  C0DB  F167         	movff	ComputeMic@mic+1,?_ComputeMic+1
 29507  006A4C  C0DC  F168         	movff	ComputeMic@mic+2,?_ComputeMic+2
 29508  006A50  C0DD  F169         	movff	ComputeMic@mic+3,?_ComputeMic+3
 29509                           
 29510                           ; BSR set to: 0
 29511  006A54  0012               	return		;funcret
 29512  006A56                     __end_of_ComputeMic:
 29513                           	opt stack 0
 29514                           tosu	equ	0xFFF
 29515                           tosh	equ	0xFFE
 29516                           tosl	equ	0xFFD
 29517                           pclath	equ	0xFFA
 29518                           tblptru	equ	0xFF8
 29519                           tblptrh	equ	0xFF7
 29520                           tblptrl	equ	0xFF6
 29521                           tablat	equ	0xFF5
 29522                           prodh	equ	0xFF4
 29523                           prodl	equ	0xFF3
 29524                           intcon	equ	0xFF2
 29525                           intcon2	equ	0xFF1
 29526                           intcon3	equ	0xFF0
 29527                           indf0	equ	0xFEF
 29528                           postinc0	equ	0xFEE
 29529                           fsr0h	equ	0xFEA
 29530                           fsr0l	equ	0xFE9
 29531                           wreg	equ	0xFE8
 29532                           postinc1	equ	0xFE6
 29533                           postdec1	equ	0xFE5
 29534                           plusw1	equ	0xFE3
 29535                           fsr1h	equ	0xFE2
 29536                           fsr1l	equ	0xFE1
 29537                           indf2	equ	0xFDF
 29538                           postinc2	equ	0xFDE
 29539                           postdec2	equ	0xFDD
 29540                           plusw2	equ	0xFDB
 29541                           fsr2h	equ	0xFDA
 29542                           fsr2l	equ	0xFD9
 29543                           status	equ	0xFD8
 29544                           
 29545 ;; *************** function _AESCmac *****************
 29546 ;; Defined at:
 29547 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 29548 ;; Parameters:    Size  Location     Type
 29549 ;;  key             2  108[BANK0 ] PTR unsigned char 
 29550 ;;		 -> loRa.activationParameters(105), loRa(245), 
 29551 ;;  output          2  110[BANK0 ] PTR unsigned char 
 29552 ;;		 -> aesBuffer(16), 
 29553 ;;  input           2  112[BANK0 ] PTR unsigned char 
 29554 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 29555 ;;  size            1  114[BANK0 ] unsigned char 
 29556 ;; Auto vars:     Size  Location     Type
 29557 ;;  x              16   80[BANK1 ] unsigned char [16]
 29558 ;;  y              16   64[BANK1 ] unsigned char [16]
 29559 ;;  padded         16   48[BANK1 ] unsigned char [16]
 29560 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 29561 ;;  k1             16   16[BANK1 ] unsigned char [16]
 29562 ;;  k2             16    0[BANK1 ] unsigned char [16]
 29563 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 29564 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 29565 ;;  i               1  101[BANK1 ] unsigned char 
 29566 ;;  j               1  100[BANK1 ] unsigned char 
 29567 ;;  n               1   99[BANK1 ] unsigned char 
 29568 ;;  flag            1   98[BANK1 ] unsigned char 
 29569 ;; Return value:  Size  Location     Type
 29570 ;;                  1    wreg      void 
 29571 ;; Registers used:
 29572 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29573 ;; Tracked objects:
 29574 ;;		On entry : F/0
 29575 ;;		On exit  : F/0
 29576 ;;		Unchanged: 0/0
 29577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29578 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29579 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29580 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29581 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29582 ;;Total ram usage:      116 bytes
 29583 ;; Hardware stack levels used:    1
 29584 ;; Hardware stack levels required when called:   11
 29585 ;; This function calls:
 29586 ;;		_AESEncodeLoRa
 29587 ;;		_GenerateSubkey
 29588 ;;		_memcpy
 29589 ;;		_memset
 29590 ;; This function is called by:
 29591 ;;		_LORAWAN_RxDone
 29592 ;;		_AssemblePacket
 29593 ;;		_ComputeMic
 29594 ;; This function uses a non-reentrant model
 29595 ;;
 29596                           
 29597                           	psect	text154
 29598  001820                     __ptext154:
 29599                           	opt stack 0
 29600  001820                     _AESCmac:
 29601                           	opt stack 16
 29602                           
 29603                           ; BSR set to: 0
 29604                           
 29605                           ; BSR set to: 0
 29606                           ;incstack = 0
 29607  001820  0101               	movlb	1	; () banked
 29608  001822  6B65               	clrf	AESCmac@i& (0+255),b
 29609  001824  6B64               	clrf	AESCmac@j& (0+255),b
 29610                           
 29611                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 29612  001826  6B62               	clrf	AESCmac@flag& (0+255),b
 29613                           
 29614                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 29615                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 29616                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 29617  001828  6B60               	clrf	AESCmac@ptr& (0+255),b
 29618  00182A  6B61               	clrf	(AESCmac@ptr+1)& (0+255),b
 29619                           
 29620                           ; BSR set to: 1
 29621                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 29622  00182C  C0CC  F0A4         	movff	AESCmac@key,GenerateSubkey@key
 29623  001830  C0CD  F0A5         	movff	AESCmac@key+1,GenerateSubkey@key+1
 29624  001834  0E10               	movlw	low AESCmac@k1
 29625  001836  0100               	movlb	0	; () banked
 29626  001838  6FA6               	movwf	GenerateSubkey@k1& (0+255),b
 29627  00183A  0E01               	movlw	high AESCmac@k1
 29628  00183C  6FA7               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 29629  00183E  0E00               	movlw	low AESCmac@k2
 29630  001840  6FA8               	movwf	GenerateSubkey@k2& (0+255),b
 29631  001842  0E01               	movlw	high AESCmac@k2
 29632  001844  6FA9               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 29633  001846  EC88  F025         	call	_GenerateSubkey	;wreg free
 29634                           
 29635                           ; BSR set to: 0
 29636                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 29637  00184A  51D2               	movf	AESCmac@size& (0+255),w,b
 29638  00184C  6FD3               	movwf	??_AESCmac& (0+255),b
 29639  00184E  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 29640  001850  0E0F               	movlw	15
 29641  001852  27D3               	addwf	??_AESCmac& (0+255),f,b
 29642  001854  0E00               	movlw	0
 29643  001856  23D4               	addwfc	(??_AESCmac+1)& (0+255),f,b
 29644  001858  0E04               	movlw	4
 29645  00185A  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 29646  00185C                     u14405:
 29647  00185C  35D4               	rlcf	(??_AESCmac+1)& (0+255),w,b
 29648  00185E  33D4               	rrcf	(??_AESCmac+1)& (0+255),f,b
 29649  001860  33D3               	rrcf	??_AESCmac& (0+255),f,b
 29650  001862  2FD5               	decfsz	(??_AESCmac+2)& (0+255),f,b
 29651  001864  D7FB               	goto	u14405
 29652  001866  51D3               	movf	??_AESCmac& (0+255),w,b
 29653  001868  0101               	movlb	1	; () banked
 29654  00186A  6F63               	movwf	AESCmac@n& (0+255),b
 29655                           
 29656                           ; BSR set to: 1
 29657                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 29658  00186C  5163               	movf	AESCmac@n& (0+255),w,b
 29659  00186E  E104               	bnz	l13246
 29660                           
 29661                           ; BSR set to: 1
 29662                           ;lorawan_aes_cmac.c: 53: {
 29663                           ;lorawan_aes_cmac.c: 54: n = 1;
 29664  001870  0E01               	movlw	1
 29665  001872  6F63               	movwf	AESCmac@n& (0+255),b
 29666                           
 29667                           ; BSR set to: 1
 29668                           ;lorawan_aes_cmac.c: 55: flag = 0;
 29669  001874  6B62               	clrf	AESCmac@flag& (0+255),b
 29670                           
 29671                           ;lorawan_aes_cmac.c: 56: }
 29672  001876  D00A               	goto	l1390
 29673  001878                     l13246:
 29674                           
 29675                           ; BSR set to: 1
 29676                           ;lorawan_aes_cmac.c: 57: else
 29677                           ;lorawan_aes_cmac.c: 58: {
 29678                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 29679  001878  C0D2  F0D3         	movff	AESCmac@size,??_AESCmac
 29680  00187C  0E0F               	movlw	15
 29681  00187E  0100               	movlb	0	; () banked
 29682  001880  17D3               	andwf	??_AESCmac& (0+255),f,b
 29683  001882  0E01               	movlw	1
 29684  001884  A4D8               	btfss	status,2,c
 29685  001886  0E00               	movlw	0
 29686  001888  0101               	movlb	1	; () banked
 29687  00188A  6F62               	movwf	AESCmac@flag& (0+255),b
 29688  00188C                     l1390:
 29689                           
 29690                           ; BSR set to: 1
 29691                           ;lorawan_aes_cmac.c: 60: }
 29692                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 29693  00188C  0562               	decf	AESCmac@flag& (0+255),w,b
 29694  00188E  E141               	bnz	l13260
 29695                           
 29696                           ; BSR set to: 1
 29697                           ;lorawan_aes_cmac.c: 63: {
 29698                           ;lorawan_aes_cmac.c: 64: j = 0;
 29699  001890  6B64               	clrf	AESCmac@j& (0+255),b
 29700                           
 29701                           ; BSR set to: 1
 29702                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 29703  001892  5163               	movf	AESCmac@n& (0+255),w,b
 29704  001894  0D10               	mullw	16
 29705  001896  50F3               	movf	prodl,w,c
 29706  001898  0FF0               	addlw	240
 29707  00189A  6F65               	movwf	AESCmac@i& (0+255),b
 29708  00189C  D01E               	goto	l13258
 29709  00189E                     l13252:
 29710                           
 29711                           ; BSR set to: 0
 29712                           ;lorawan_aes_cmac.c: 66: {
 29713                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 29714  00189E  0E20               	movlw	low AESCmac@mLast
 29715  0018A0  0101               	movlb	1	; () banked
 29716  0018A2  2564               	addwf	AESCmac@j& (0+255),w,b
 29717  0018A4  6ED9               	movwf	fsr2l,c
 29718  0018A6  6ADA               	clrf	fsr2h,c
 29719  0018A8  0E01               	movlw	high AESCmac@mLast
 29720  0018AA  22DA               	addwfc	fsr2h,f,c
 29721  0018AC  0E10               	movlw	low AESCmac@k1
 29722  0018AE  2564               	addwf	AESCmac@j& (0+255),w,b
 29723  0018B0  6EE9               	movwf	fsr0l,c
 29724  0018B2  6AEA               	clrf	fsr0h,c
 29725  0018B4  0E01               	movlw	high AESCmac@k1
 29726  0018B6  22EA               	addwfc	fsr0h,f,c
 29727  0018B8  50EF               	movf	indf0,w,c
 29728  0018BA  0100               	movlb	0	; () banked
 29729  0018BC  6FD3               	movwf	??_AESCmac& (0+255),b
 29730  0018BE  0101               	movlb	1	; () banked
 29731  0018C0  5165               	movf	AESCmac@i& (0+255),w,b
 29732  0018C2  0100               	movlb	0	; () banked
 29733  0018C4  25D0               	addwf	AESCmac@input& (0+255),w,b
 29734  0018C6  6EE9               	movwf	fsr0l,c
 29735  0018C8  0E00               	movlw	0
 29736  0018CA  21D1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 29737  0018CC  6EEA               	movwf	fsr0h,c
 29738  0018CE  50EF               	movf	indf0,w,c
 29739  0018D0  19D3               	xorwf	??_AESCmac& (0+255),w,b
 29740  0018D2  6EDF               	movwf	indf2,c
 29741                           
 29742                           ; BSR set to: 0
 29743                           ;lorawan_aes_cmac.c: 68: j++;
 29744  0018D4  0101               	movlb	1	; () banked
 29745  0018D6  2B64               	incf	AESCmac@j& (0+255),f,b
 29746                           
 29747                           ; BSR set to: 1
 29748  0018D8  2B65               	incf	AESCmac@i& (0+255),f,b
 29749  0018DA                     l13258:
 29750                           
 29751                           ; BSR set to: 1
 29752  0018DA  5163               	movf	AESCmac@n& (0+255),w,b
 29753  0018DC  0100               	movlb	0	; () banked
 29754  0018DE  6FD3               	movwf	??_AESCmac& (0+255),b
 29755  0018E0  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 29756  0018E2  3BD3               	swapf	??_AESCmac& (0+255),f,b
 29757  0018E4  3BD4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29758  0018E6  0EF0               	movlw	240
 29759  0018E8  17D4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29760  0018EA  51D3               	movf	??_AESCmac& (0+255),w,b
 29761  0018EC  0B0F               	andlw	15
 29762  0018EE  13D4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29763  0018F0  0EF0               	movlw	240
 29764  0018F2  17D3               	andwf	??_AESCmac& (0+255),f,b
 29765  0018F4  0101               	movlb	1	; () banked
 29766  0018F6  5165               	movf	AESCmac@i& (0+255),w,b
 29767  0018F8  0100               	movlb	0	; () banked
 29768  0018FA  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 29769  0018FC  6BD6               	clrf	(??_AESCmac+3)& (0+255),b
 29770  0018FE  51D3               	movf	??_AESCmac& (0+255),w,b
 29771  001900  5DD5               	subwf	(??_AESCmac+2)& (0+255),w,b
 29772  001902  51D6               	movf	(??_AESCmac+3)& (0+255),w,b
 29773  001904  0A80               	xorlw	128
 29774  001906  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 29775  001908  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 29776  00190A  0A80               	xorlw	128
 29777  00190C  59D7               	subwfb	(??_AESCmac+4)& (0+255),w,b
 29778  00190E  E263               	bc	l13290
 29779  001910  D7C6               	goto	l13252
 29780  001912                     l13260:
 29781                           
 29782                           ; BSR set to: 1
 29783                           ;lorawan_aes_cmac.c: 71: else
 29784                           ;lorawan_aes_cmac.c: 72: {
 29785                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 29786  001912  0100               	movlb	0	; () banked
 29787  001914  51D2               	movf	AESCmac@size& (0+255),w,b
 29788  001916  25D0               	addwf	AESCmac@input& (0+255),w,b
 29789  001918  6FD3               	movwf	??_AESCmac& (0+255),b
 29790  00191A  0E00               	movlw	0
 29791  00191C  21D1               	addwfc	(AESCmac@input+1)& (0+255),w,b
 29792  00191E  6FD4               	movwf	(??_AESCmac+1)& (0+255),b
 29793  001920  51D2               	movf	AESCmac@size& (0+255),w,b
 29794  001922  0B0F               	andlw	15
 29795  001924  5DD3               	subwf	??_AESCmac& (0+255),w,b
 29796  001926  0101               	movlb	1	; () banked
 29797  001928  6F60               	movwf	AESCmac@ptr& (0+255),b
 29798  00192A  0100               	movlb	0	; () banked
 29799  00192C  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 29800  00192E  A0D8               	btfss	status,0,c
 29801  001930  05D4               	decf	(??_AESCmac+1)& (0+255),w,b
 29802  001932  0101               	movlb	1	; () banked
 29803  001934  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 29804                           
 29805                           ; BSR set to: 1
 29806                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 29807  001936  6B65               	clrf	AESCmac@i& (0+255),b
 29808  001938                     l13266:
 29809                           
 29810                           ; BSR set to: 1
 29811                           ;lorawan_aes_cmac.c: 76: {
 29812                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 29813  001938  0100               	movlb	0	; () banked
 29814  00193A  51D2               	movf	AESCmac@size& (0+255),w,b
 29815  00193C  0B0F               	andlw	15
 29816  00193E  0101               	movlb	1	; () banked
 29817  001940  6165               	cpfslt	AESCmac@i& (0+255),b
 29818  001942  D00F               	goto	l13270
 29819                           
 29820                           ; BSR set to: 1
 29821                           ;lorawan_aes_cmac.c: 78: {
 29822                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 29823  001944  5165               	movf	AESCmac@i& (0+255),w,b
 29824  001946  2560               	addwf	AESCmac@ptr& (0+255),w,b
 29825  001948  6ED9               	movwf	fsr2l,c
 29826  00194A  0E00               	movlw	0
 29827  00194C  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 29828  00194E  6EDA               	movwf	fsr2h,c
 29829  001950  0E30               	movlw	low AESCmac@padded
 29830  001952  2565               	addwf	AESCmac@i& (0+255),w,b
 29831  001954  6EE9               	movwf	fsr0l,c
 29832  001956  6AEA               	clrf	fsr0h,c
 29833  001958  0E01               	movlw	high AESCmac@padded
 29834  00195A  22EA               	addwfc	fsr0h,f,c
 29835  00195C  CFDF FFEF          	movff	indf2,indf0
 29836                           
 29837                           ;lorawan_aes_cmac.c: 80: }
 29838  001960  D016               	goto	l13276
 29839  001962                     l13270:
 29840                           
 29841                           ; BSR set to: 1
 29842                           ;lorawan_aes_cmac.c: 81: else
 29843                           ;lorawan_aes_cmac.c: 82: {
 29844                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 29845  001962  0100               	movlb	0	; () banked
 29846  001964  51D2               	movf	AESCmac@size& (0+255),w,b
 29847  001966  0B0F               	andlw	15
 29848  001968  0101               	movlb	1	; () banked
 29849  00196A  1965               	xorwf	AESCmac@i& (0+255),w,b
 29850  00196C  E109               	bnz	l13274
 29851                           
 29852                           ; BSR set to: 1
 29853                           ;lorawan_aes_cmac.c: 84: {
 29854                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 29855  00196E  0E30               	movlw	low AESCmac@padded
 29856  001970  2565               	addwf	AESCmac@i& (0+255),w,b
 29857  001972  6ED9               	movwf	fsr2l,c
 29858  001974  6ADA               	clrf	fsr2h,c
 29859  001976  0E01               	movlw	high AESCmac@padded
 29860  001978  22DA               	addwfc	fsr2h,f,c
 29861  00197A  0E80               	movlw	128
 29862  00197C  6EDF               	movwf	indf2,c
 29863                           
 29864                           ;lorawan_aes_cmac.c: 86: }
 29865  00197E  D007               	goto	l13276
 29866  001980                     l13274:
 29867                           
 29868                           ; BSR set to: 1
 29869                           ;lorawan_aes_cmac.c: 87: else
 29870                           ;lorawan_aes_cmac.c: 88: {
 29871                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 29872  001980  0E30               	movlw	low AESCmac@padded
 29873  001982  2565               	addwf	AESCmac@i& (0+255),w,b
 29874  001984  6ED9               	movwf	fsr2l,c
 29875  001986  6ADA               	clrf	fsr2h,c
 29876  001988  0E01               	movlw	high AESCmac@padded
 29877  00198A  22DA               	addwfc	fsr2h,f,c
 29878  00198C  6ADF               	clrf	indf2,c
 29879  00198E                     l13276:
 29880                           
 29881                           ; BSR set to: 1
 29882  00198E  2B65               	incf	AESCmac@i& (0+255),f,b
 29883                           
 29884                           ; BSR set to: 1
 29885  001990  0E0F               	movlw	15
 29886  001992  6565               	cpfsgt	AESCmac@i& (0+255),b
 29887  001994  D7D1               	goto	l13266
 29888                           
 29889                           ; BSR set to: 1
 29890                           ;lorawan_aes_cmac.c: 90: }
 29891                           ;lorawan_aes_cmac.c: 91: }
 29892                           ;lorawan_aes_cmac.c: 92: }
 29893                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 29894  001996  6B65               	clrf	AESCmac@i& (0+255),b
 29895  001998                     l13284:
 29896                           
 29897                           ; BSR set to: 1
 29898                           ;lorawan_aes_cmac.c: 96: {
 29899                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 29900  001998  0E20               	movlw	low AESCmac@mLast
 29901  00199A  2565               	addwf	AESCmac@i& (0+255),w,b
 29902  00199C  6ED9               	movwf	fsr2l,c
 29903  00199E  6ADA               	clrf	fsr2h,c
 29904  0019A0  0E01               	movlw	high AESCmac@mLast
 29905  0019A2  22DA               	addwfc	fsr2h,f,c
 29906  0019A4  0E00               	movlw	low AESCmac@k2
 29907  0019A6  2565               	addwf	AESCmac@i& (0+255),w,b
 29908  0019A8  6EE9               	movwf	fsr0l,c
 29909  0019AA  6AEA               	clrf	fsr0h,c
 29910  0019AC  0E01               	movlw	high AESCmac@k2
 29911  0019AE  22EA               	addwfc	fsr0h,f,c
 29912  0019B0  50EF               	movf	indf0,w,c
 29913  0019B2  0100               	movlb	0	; () banked
 29914  0019B4  6FD3               	movwf	??_AESCmac& (0+255),b
 29915  0019B6  0E30               	movlw	low AESCmac@padded
 29916  0019B8  0101               	movlb	1	; () banked
 29917  0019BA  2565               	addwf	AESCmac@i& (0+255),w,b
 29918  0019BC  6EE9               	movwf	fsr0l,c
 29919  0019BE  6AEA               	clrf	fsr0h,c
 29920  0019C0  0E01               	movlw	high AESCmac@padded
 29921  0019C2  22EA               	addwfc	fsr0h,f,c
 29922  0019C4  50EF               	movf	indf0,w,c
 29923  0019C6  0100               	movlb	0	; () banked
 29924  0019C8  19D3               	xorwf	??_AESCmac& (0+255),w,b
 29925  0019CA  6EDF               	movwf	indf2,c
 29926                           
 29927                           ; BSR set to: 0
 29928  0019CC  0101               	movlb	1	; () banked
 29929  0019CE  2B65               	incf	AESCmac@i& (0+255),f,b
 29930                           
 29931                           ; BSR set to: 1
 29932  0019D0  0E0F               	movlw	15
 29933  0019D2  6565               	cpfsgt	AESCmac@i& (0+255),b
 29934  0019D4  D7E1               	goto	l13284
 29935  0019D6                     l13290:
 29936                           
 29937                           ;lorawan_aes_cmac.c: 98: }
 29938                           ;lorawan_aes_cmac.c: 99: }
 29939                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 29940  0019D6  0E50               	movlw	low AESCmac@x
 29941  0019D8  0100               	movlb	0	; () banked
 29942  0019DA  6F64               	movwf	memset@p1& (0+255),b
 29943  0019DC  0E01               	movlw	high AESCmac@x
 29944  0019DE  6F65               	movwf	(memset@p1+1)& (0+255),b
 29945  0019E0  6B67               	clrf	(memset@c+1)& (0+255),b
 29946  0019E2  6B66               	clrf	memset@c& (0+255),b
 29947  0019E4  6B69               	clrf	(memset@n+1)& (0+255),b
 29948  0019E6  0E10               	movlw	16
 29949  0019E8  6F68               	movwf	memset@n& (0+255),b
 29950  0019EA  ECF1  F039         	call	_memset	;wreg free
 29951                           
 29952                           ; BSR set to: 0
 29953                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 29954  0019EE  0101               	movlb	1	; () banked
 29955  0019F0  6B65               	clrf	AESCmac@i& (0+255),b
 29956  0019F2  D051               	goto	l13308
 29957  0019F4                     l1405:
 29958                           
 29959                           ; BSR set to: 0
 29960                           ;lorawan_aes_cmac.c: 104: {
 29961                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 29962  0019F4  0101               	movlb	1	; () banked
 29963  0019F6  6B64               	clrf	AESCmac@j& (0+255),b
 29964  0019F8                     l13298:
 29965                           
 29966                           ; BSR set to: 1
 29967                           ;lorawan_aes_cmac.c: 106: {
 29968                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 29969  0019F8  0E40               	movlw	low AESCmac@y
 29970  0019FA  2564               	addwf	AESCmac@j& (0+255),w,b
 29971  0019FC  6ED9               	movwf	fsr2l,c
 29972  0019FE  6ADA               	clrf	fsr2h,c
 29973  001A00  0E01               	movlw	high AESCmac@y
 29974  001A02  22DA               	addwfc	fsr2h,f,c
 29975  001A04  5165               	movf	AESCmac@i& (0+255),w,b
 29976  001A06  0100               	movlb	0	; () banked
 29977  001A08  6FD3               	movwf	??_AESCmac& (0+255),b
 29978  001A0A  6BD4               	clrf	(??_AESCmac+1)& (0+255),b
 29979  001A0C  3BD3               	swapf	??_AESCmac& (0+255),f,b
 29980  001A0E  3BD4               	swapf	(??_AESCmac+1)& (0+255),f,b
 29981  001A10  0EF0               	movlw	240
 29982  001A12  17D4               	andwf	(??_AESCmac+1)& (0+255),f,b
 29983  001A14  51D3               	movf	??_AESCmac& (0+255),w,b
 29984  001A16  0B0F               	andlw	15
 29985  001A18  13D4               	iorwf	(??_AESCmac+1)& (0+255),f,b
 29986  001A1A  0EF0               	movlw	240
 29987  001A1C  17D3               	andwf	??_AESCmac& (0+255),f,b
 29988  001A1E  C0D0  F0D5         	movff	AESCmac@input,??_AESCmac+2
 29989  001A22  C0D1  F0D6         	movff	AESCmac@input+1,??_AESCmac+3
 29990  001A26  51D3               	movf	??_AESCmac& (0+255),w,b
 29991  001A28  27D5               	addwf	(??_AESCmac+2)& (0+255),f,b
 29992  001A2A  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 29993  001A2C  23D6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 29994  001A2E  0101               	movlb	1	; () banked
 29995  001A30  5164               	movf	AESCmac@j& (0+255),w,b
 29996  001A32  0100               	movlb	0	; () banked
 29997  001A34  25D5               	addwf	(??_AESCmac+2)& (0+255),w,b
 29998  001A36  6EE9               	movwf	fsr0l,c
 29999  001A38  0E00               	movlw	0
 30000  001A3A  21D6               	addwfc	(??_AESCmac+3)& (0+255),w,b
 30001  001A3C  6EEA               	movwf	fsr0h,c
 30002  001A3E  50EF               	movf	indf0,w,c
 30003  001A40  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 30004  001A42  0E50               	movlw	low AESCmac@x
 30005  001A44  0101               	movlb	1	; () banked
 30006  001A46  2564               	addwf	AESCmac@j& (0+255),w,b
 30007  001A48  6EE9               	movwf	fsr0l,c
 30008  001A4A  6AEA               	clrf	fsr0h,c
 30009  001A4C  0E01               	movlw	high AESCmac@x
 30010  001A4E  22EA               	addwfc	fsr0h,f,c
 30011  001A50  50EF               	movf	indf0,w,c
 30012  001A52  0100               	movlb	0	; () banked
 30013  001A54  19D7               	xorwf	(??_AESCmac+4)& (0+255),w,b
 30014  001A56  6EDF               	movwf	indf2,c
 30015                           
 30016                           ; BSR set to: 0
 30017  001A58  0101               	movlb	1	; () banked
 30018  001A5A  2B64               	incf	AESCmac@j& (0+255),f,b
 30019                           
 30020                           ; BSR set to: 1
 30021  001A5C  0E0F               	movlw	15
 30022  001A5E  6564               	cpfsgt	AESCmac@j& (0+255),b
 30023  001A60  D7CB               	goto	l13298
 30024                           
 30025                           ; BSR set to: 1
 30026                           ;lorawan_aes_cmac.c: 108: }
 30027                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 30028  001A62  0E50               	movlw	low AESCmac@x
 30029  001A64  0100               	movlb	0	; () banked
 30030  001A66  6F64               	movwf	memcpy@d1& (0+255),b
 30031  001A68  0E01               	movlw	high AESCmac@x
 30032  001A6A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 30033  001A6C  0E40               	movlw	low AESCmac@y
 30034  001A6E  6F66               	movwf	memcpy@s1& (0+255),b
 30035  001A70  0E01               	movlw	high AESCmac@y
 30036  001A72  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 30037  001A74  6B69               	clrf	(memcpy@n+1)& (0+255),b
 30038  001A76  0E10               	movlw	16
 30039  001A78  6F68               	movwf	memcpy@n& (0+255),b
 30040  001A7A  ECD5  F034         	call	_memcpy	;wreg free
 30041                           
 30042                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 30043  001A7E  0E50               	movlw	low AESCmac@x
 30044  001A80  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 30045  001A82  0E01               	movlw	high AESCmac@x
 30046  001A84  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30047  001A86  C0CC  F092         	movff	AESCmac@key,AESEncodeLoRa@key
 30048  001A8A  C0CD  F093         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30049  001A8E  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 30050                           
 30051                           ; BSR set to: 0
 30052  001A92  0101               	movlb	1	; () banked
 30053  001A94  2B65               	incf	AESCmac@i& (0+255),f,b
 30054  001A96                     l13308:
 30055                           
 30056                           ; BSR set to: 1
 30057  001A96  0100               	movlb	0	; () banked
 30058  001A98  69D3               	setf	??_AESCmac& (0+255),b
 30059  001A9A  69D4               	setf	(??_AESCmac+1)& (0+255),b
 30060  001A9C  0101               	movlb	1	; () banked
 30061  001A9E  5163               	movf	AESCmac@n& (0+255),w,b
 30062  001AA0  0100               	movlb	0	; () banked
 30063  001AA2  6FD5               	movwf	(??_AESCmac+2)& (0+255),b
 30064  001AA4  6BD6               	clrf	(??_AESCmac+3)& (0+255),b
 30065  001AA6  51D3               	movf	??_AESCmac& (0+255),w,b
 30066  001AA8  27D5               	addwf	(??_AESCmac+2)& (0+255),f,b
 30067  001AAA  51D4               	movf	(??_AESCmac+1)& (0+255),w,b
 30068  001AAC  23D6               	addwfc	(??_AESCmac+3)& (0+255),f,b
 30069  001AAE  0101               	movlb	1	; () banked
 30070  001AB0  5165               	movf	AESCmac@i& (0+255),w,b
 30071  001AB2  0100               	movlb	0	; () banked
 30072  001AB4  6FD7               	movwf	(??_AESCmac+4)& (0+255),b
 30073  001AB6  6BD8               	clrf	(??_AESCmac+5)& (0+255),b
 30074  001AB8  51D5               	movf	(??_AESCmac+2)& (0+255),w,b
 30075  001ABA  5DD7               	subwf	(??_AESCmac+4)& (0+255),w,b
 30076  001ABC  51D8               	movf	(??_AESCmac+5)& (0+255),w,b
 30077  001ABE  0A80               	xorlw	128
 30078  001AC0  6FD9               	movwf	(??_AESCmac+6)& (0+255),b
 30079  001AC2  51D6               	movf	(??_AESCmac+3)& (0+255),w,b
 30080  001AC4  0A80               	xorlw	128
 30081  001AC6  59D9               	subwfb	(??_AESCmac+6)& (0+255),w,b
 30082  001AC8  E395               	bnc	l1405
 30083                           
 30084                           ; BSR set to: 0
 30085                           ;lorawan_aes_cmac.c: 111: }
 30086                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 30087  001ACA  0101               	movlb	1	; () banked
 30088  001ACC  6B65               	clrf	AESCmac@i& (0+255),b
 30089  001ACE                     l13314:
 30090                           
 30091                           ; BSR set to: 1
 30092                           ;lorawan_aes_cmac.c: 114: {
 30093                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 30094  001ACE  0E40               	movlw	low AESCmac@y
 30095  001AD0  2565               	addwf	AESCmac@i& (0+255),w,b
 30096  001AD2  6ED9               	movwf	fsr2l,c
 30097  001AD4  6ADA               	clrf	fsr2h,c
 30098  001AD6  0E01               	movlw	high AESCmac@y
 30099  001AD8  22DA               	addwfc	fsr2h,f,c
 30100  001ADA  0E20               	movlw	low AESCmac@mLast
 30101  001ADC  2565               	addwf	AESCmac@i& (0+255),w,b
 30102  001ADE  6EE9               	movwf	fsr0l,c
 30103  001AE0  6AEA               	clrf	fsr0h,c
 30104  001AE2  0E01               	movlw	high AESCmac@mLast
 30105  001AE4  22EA               	addwfc	fsr0h,f,c
 30106  001AE6  50EF               	movf	indf0,w,c
 30107  001AE8  0100               	movlb	0	; () banked
 30108  001AEA  6FD3               	movwf	??_AESCmac& (0+255),b
 30109  001AEC  0E50               	movlw	low AESCmac@x
 30110  001AEE  0101               	movlb	1	; () banked
 30111  001AF0  2565               	addwf	AESCmac@i& (0+255),w,b
 30112  001AF2  6EE9               	movwf	fsr0l,c
 30113  001AF4  6AEA               	clrf	fsr0h,c
 30114  001AF6  0E01               	movlw	high AESCmac@x
 30115  001AF8  22EA               	addwfc	fsr0h,f,c
 30116  001AFA  50EF               	movf	indf0,w,c
 30117  001AFC  0100               	movlb	0	; () banked
 30118  001AFE  19D3               	xorwf	??_AESCmac& (0+255),w,b
 30119  001B00  6EDF               	movwf	indf2,c
 30120                           
 30121                           ; BSR set to: 0
 30122  001B02  0101               	movlb	1	; () banked
 30123  001B04  2B65               	incf	AESCmac@i& (0+255),f,b
 30124                           
 30125                           ; BSR set to: 1
 30126  001B06  0E0F               	movlw	15
 30127  001B08  6565               	cpfsgt	AESCmac@i& (0+255),b
 30128  001B0A  D7E1               	goto	l13314
 30129                           
 30130                           ; BSR set to: 1
 30131                           ;lorawan_aes_cmac.c: 116: }
 30132                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 30133  001B0C  0E40               	movlw	low AESCmac@y
 30134  001B0E  0100               	movlb	0	; () banked
 30135  001B10  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 30136  001B12  0E01               	movlw	high AESCmac@y
 30137  001B14  6F91               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 30138  001B16  C0CC  F092         	movff	AESCmac@key,AESEncodeLoRa@key
 30139  001B1A  C0CD  F093         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 30140  001B1E  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 30141                           
 30142                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 30143  001B22  C0CE  F064         	movff	AESCmac@output,memcpy@d1
 30144  001B26  C0CF  F065         	movff	AESCmac@output+1,memcpy@d1+1
 30145  001B2A  0E40               	movlw	low AESCmac@y
 30146  001B2C  6F66               	movwf	memcpy@s1& (0+255),b
 30147  001B2E  0E01               	movlw	high AESCmac@y
 30148  001B30  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 30149  001B32  6B69               	clrf	(memcpy@n+1)& (0+255),b
 30150  001B34  0E10               	movlw	16
 30151  001B36  6F68               	movwf	memcpy@n& (0+255),b
 30152  001B38  EFD5  F034         	goto	_memcpy	;wreg free
 30153  001B3C                     __end_of_AESCmac:
 30154                           	opt stack 0
 30155                           tosu	equ	0xFFF
 30156                           tosh	equ	0xFFE
 30157                           tosl	equ	0xFFD
 30158                           pclath	equ	0xFFA
 30159                           tblptru	equ	0xFF8
 30160                           tblptrh	equ	0xFF7
 30161                           tblptrl	equ	0xFF6
 30162                           tablat	equ	0xFF5
 30163                           prodh	equ	0xFF4
 30164                           prodl	equ	0xFF3
 30165                           intcon	equ	0xFF2
 30166                           intcon2	equ	0xFF1
 30167                           intcon3	equ	0xFF0
 30168                           indf0	equ	0xFEF
 30169                           postinc0	equ	0xFEE
 30170                           fsr0h	equ	0xFEA
 30171                           fsr0l	equ	0xFE9
 30172                           wreg	equ	0xFE8
 30173                           postinc1	equ	0xFE6
 30174                           postdec1	equ	0xFE5
 30175                           plusw1	equ	0xFE3
 30176                           fsr1h	equ	0xFE2
 30177                           fsr1l	equ	0xFE1
 30178                           indf2	equ	0xFDF
 30179                           postinc2	equ	0xFDE
 30180                           postdec2	equ	0xFDD
 30181                           plusw2	equ	0xFDB
 30182                           fsr2h	equ	0xFDA
 30183                           fsr2l	equ	0xFD9
 30184                           status	equ	0xFD8
 30185                           
 30186 ;; *************** function _GenerateSubkey *****************
 30187 ;; Defined at:
 30188 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30189 ;; Parameters:    Size  Location     Type
 30190 ;;  key             2   68[BANK0 ] PTR unsigned char 
 30191 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30192 ;;  k1              2   70[BANK0 ] PTR unsigned char 
 30193 ;;		 -> AESCmac@k1(16), 
 30194 ;;  k2              2   72[BANK0 ] PTR unsigned char 
 30195 ;;		 -> AESCmac@k2(16), 
 30196 ;; Auto vars:     Size  Location     Type
 30197 ;;  l              16   91[BANK0 ] unsigned char [16]
 30198 ;;  const_Rb       16   75[BANK0 ] unsigned char [16]
 30199 ;;  i               1  107[BANK0 ] unsigned char 
 30200 ;; Return value:  Size  Location     Type
 30201 ;;                  1    wreg      void 
 30202 ;; Registers used:
 30203 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30204 ;; Tracked objects:
 30205 ;;		On entry : F/0
 30206 ;;		On exit  : F/0
 30207 ;;		Unchanged: 0/0
 30208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30209 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30210 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30211 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30212 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30213 ;;Total ram usage:       40 bytes
 30214 ;; Hardware stack levels used:    1
 30215 ;; Hardware stack levels required when called:   10
 30216 ;; This function calls:
 30217 ;;		_AESEncodeLoRa
 30218 ;;		_FillSubKey
 30219 ;;		_memset
 30220 ;; This function is called by:
 30221 ;;		_AESCmac
 30222 ;; This function uses a non-reentrant model
 30223 ;;
 30224                           
 30225                           	psect	text155
 30226  004B10                     __ptext155:
 30227                           	opt stack 0
 30228  004B10                     _GenerateSubkey:
 30229                           	opt stack 16
 30230                           
 30231                           ; BSR set to: 0
 30232                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 30233                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 30234                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 30235                           
 30236                           ; BSR set to: 0
 30237                           
 30238                           ; BSR set to: 0
 30239                           ;incstack = 0
 30240  004B10  EE21  F0C1         	lfsr	2,GenerateSubkey@F7870
 30241  004B14  EE00  F0AB         	lfsr	0,GenerateSubkey@const_Rb
 30242  004B18  0E0F               	movlw	15
 30243  004B1A                     u13811:
 30244  004B1A  CFDB FFEB          	movff	plusw2,plusw0
 30245  004B1E  06E8               	decf	wreg,f,c
 30246  004B20  E2FC               	bc	u13811
 30247                           
 30248                           ; BSR set to: 0
 30249                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 30250  004B22  0EBB               	movlw	low GenerateSubkey@l
 30251  004B24  6F64               	movwf	memset@p1& (0+255),b
 30252  004B26  6B65               	clrf	(memset@p1+1)& (0+255),b
 30253  004B28  6B67               	clrf	(memset@c+1)& (0+255),b
 30254  004B2A  6B66               	clrf	memset@c& (0+255),b
 30255  004B2C  6B69               	clrf	(memset@n+1)& (0+255),b
 30256  004B2E  0E10               	movlw	16
 30257  004B30  6F68               	movwf	memset@n& (0+255),b
 30258  004B32  ECF1  F039         	call	_memset	;wreg free
 30259                           
 30260                           ; BSR set to: 0
 30261                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 30262  004B36  0EBB               	movlw	low GenerateSubkey@l
 30263  004B38  6F90               	movwf	AESEncodeLoRa@block& (0+255),b
 30264  004B3A  6B91               	clrf	(AESEncodeLoRa@block+1)& (0+255),b
 30265  004B3C  C0A4  F092         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 30266  004B40  C0A5  F093         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 30267  004B44  EC1A  F03A         	call	_AESEncodeLoRa	;wreg free
 30268                           
 30269                           ; BSR set to: 0
 30270                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 30271  004B48  BFBB               	btfsc	GenerateSubkey@l& (0+255),7,b
 30272  004B4A  D00C               	goto	l12864
 30273                           
 30274                           ; BSR set to: 0
 30275                           ;lorawan_aes_cmac.c: 138: {
 30276                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 30277  004B4C  0EBB               	movlw	low GenerateSubkey@l
 30278  004B4E  6F64               	movwf	FillSubKey@source& (0+255),b
 30279  004B50  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 30280  004B52  C0A6  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 30281  004B56  C0A7  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 30282  004B5A  0E10               	movlw	16
 30283  004B5C  6F68               	movwf	FillSubKey@size& (0+255),b
 30284  004B5E  ECAF  F036         	call	_FillSubKey	;wreg free
 30285                           
 30286                           ;lorawan_aes_cmac.c: 140: }
 30287  004B62  D01E               	goto	l12878
 30288  004B64                     l12864:
 30289                           
 30290                           ; BSR set to: 0
 30291                           ;lorawan_aes_cmac.c: 141: else
 30292                           ;lorawan_aes_cmac.c: 142: {
 30293                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 30294  004B64  0EBB               	movlw	low GenerateSubkey@l
 30295  004B66  6F64               	movwf	FillSubKey@source& (0+255),b
 30296  004B68  6B65               	clrf	(FillSubKey@source+1)& (0+255),b
 30297  004B6A  C0A6  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 30298  004B6E  C0A7  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 30299  004B72  0E10               	movlw	16
 30300  004B74  6F68               	movwf	FillSubKey@size& (0+255),b
 30301  004B76  ECAF  F036         	call	_FillSubKey	;wreg free
 30302                           
 30303                           ; BSR set to: 0
 30304                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 30305  004B7A  6BCB               	clrf	GenerateSubkey@i& (0+255),b
 30306  004B7C                     l12872:
 30307                           
 30308                           ; BSR set to: 0
 30309                           ;lorawan_aes_cmac.c: 146: {
 30310                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 30311  004B7C  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 30312  004B7E  0FAB               	addlw	low GenerateSubkey@const_Rb
 30313  004B80  6ED9               	movwf	fsr2l,c
 30314  004B82  6ADA               	clrf	fsr2h,c
 30315  004B84  50DF               	movf	indf2,w,c
 30316  004B86  6FAA               	movwf	??_GenerateSubkey& (0+255),b
 30317  004B88  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 30318  004B8A  25A6               	addwf	GenerateSubkey@k1& (0+255),w,b
 30319  004B8C  6ED9               	movwf	fsr2l,c
 30320  004B8E  0E00               	movlw	0
 30321  004B90  21A7               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 30322  004B92  6EDA               	movwf	fsr2h,c
 30323  004B94  51AA               	movf	??_GenerateSubkey& (0+255),w,b
 30324  004B96  1ADF               	xorwf	indf2,f,c
 30325                           
 30326                           ; BSR set to: 0
 30327  004B98  2BCB               	incf	GenerateSubkey@i& (0+255),f,b
 30328                           
 30329                           ; BSR set to: 0
 30330  004B9A  0E0F               	movlw	15
 30331  004B9C  65CB               	cpfsgt	GenerateSubkey@i& (0+255),b
 30332  004B9E  D7EE               	goto	l12872
 30333  004BA0                     l12878:
 30334                           
 30335                           ; BSR set to: 0
 30336                           ;lorawan_aes_cmac.c: 148: }
 30337                           ;lorawan_aes_cmac.c: 149: }
 30338                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 30339  004BA0  C0A6  FFD9         	movff	GenerateSubkey@k1,fsr2l
 30340  004BA4  C0A7  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 30341  004BA8  BEDF               	btfsc	indf2,7,c
 30342  004BAA  D00C               	goto	l12882
 30343                           
 30344                           ; BSR set to: 0
 30345                           ;lorawan_aes_cmac.c: 153: {
 30346                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 30347  004BAC  C0A6  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 30348  004BB0  C0A7  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 30349  004BB4  C0A8  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 30350  004BB8  C0A9  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 30351  004BBC  0E10               	movlw	16
 30352  004BBE  6F68               	movwf	FillSubKey@size& (0+255),b
 30353  004BC0  EFAF  F036         	goto	_FillSubKey	;wreg free
 30354  004BC4                     l12882:
 30355                           
 30356                           ; BSR set to: 0
 30357                           ;lorawan_aes_cmac.c: 156: else
 30358                           ;lorawan_aes_cmac.c: 157: {
 30359                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 30360  004BC4  C0A6  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 30361  004BC8  C0A7  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 30362  004BCC  C0A8  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 30363  004BD0  C0A9  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 30364  004BD4  0E10               	movlw	16
 30365  004BD6  6F68               	movwf	FillSubKey@size& (0+255),b
 30366  004BD8  ECAF  F036         	call	_FillSubKey	;wreg free
 30367                           
 30368                           ; BSR set to: 0
 30369                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 30370  004BDC  6BCB               	clrf	GenerateSubkey@i& (0+255),b
 30371  004BDE                     l12890:
 30372                           
 30373                           ; BSR set to: 0
 30374                           ;lorawan_aes_cmac.c: 161: {
 30375                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 30376  004BDE  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 30377  004BE0  25A8               	addwf	GenerateSubkey@k2& (0+255),w,b
 30378  004BE2  6ED9               	movwf	fsr2l,c
 30379  004BE4  0E00               	movlw	0
 30380  004BE6  21A9               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 30381  004BE8  6EDA               	movwf	fsr2h,c
 30382  004BEA  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 30383  004BEC  0FAB               	addlw	low GenerateSubkey@const_Rb
 30384  004BEE  6EE9               	movwf	fsr0l,c
 30385  004BF0  6AEA               	clrf	fsr0h,c
 30386  004BF2  50EF               	movf	indf0,w,c
 30387  004BF4  6FAA               	movwf	??_GenerateSubkey& (0+255),b
 30388  004BF6  51CB               	movf	GenerateSubkey@i& (0+255),w,b
 30389  004BF8  25A8               	addwf	GenerateSubkey@k2& (0+255),w,b
 30390  004BFA  6EE9               	movwf	fsr0l,c
 30391  004BFC  0E00               	movlw	0
 30392  004BFE  21A9               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 30393  004C00  6EEA               	movwf	fsr0h,c
 30394  004C02  50EF               	movf	indf0,w,c
 30395  004C04  19AA               	xorwf	??_GenerateSubkey& (0+255),w,b
 30396  004C06  6EDF               	movwf	indf2,c
 30397                           
 30398                           ; BSR set to: 0
 30399  004C08  2BCB               	incf	GenerateSubkey@i& (0+255),f,b
 30400                           
 30401                           ; BSR set to: 0
 30402  004C0A  0E0F               	movlw	15
 30403  004C0C  65CB               	cpfsgt	GenerateSubkey@i& (0+255),b
 30404  004C0E  D7E7               	goto	l12890
 30405  004C10  0C0F               	retlw	15
 30406  004C12                     __end_of_GenerateSubkey:
 30407                           	opt stack 0
 30408                           tosu	equ	0xFFF
 30409                           tosh	equ	0xFFE
 30410                           tosl	equ	0xFFD
 30411                           pclath	equ	0xFFA
 30412                           tblptru	equ	0xFF8
 30413                           tblptrh	equ	0xFF7
 30414                           tblptrl	equ	0xFF6
 30415                           tablat	equ	0xFF5
 30416                           prodh	equ	0xFF4
 30417                           prodl	equ	0xFF3
 30418                           intcon	equ	0xFF2
 30419                           intcon2	equ	0xFF1
 30420                           intcon3	equ	0xFF0
 30421                           indf0	equ	0xFEF
 30422                           postinc0	equ	0xFEE
 30423                           plusw0	equ	0xFEB
 30424                           fsr0h	equ	0xFEA
 30425                           fsr0l	equ	0xFE9
 30426                           wreg	equ	0xFE8
 30427                           postinc1	equ	0xFE6
 30428                           postdec1	equ	0xFE5
 30429                           plusw1	equ	0xFE3
 30430                           fsr1h	equ	0xFE2
 30431                           fsr1l	equ	0xFE1
 30432                           indf2	equ	0xFDF
 30433                           postinc2	equ	0xFDE
 30434                           postdec2	equ	0xFDD
 30435                           plusw2	equ	0xFDB
 30436                           fsr2h	equ	0xFDA
 30437                           fsr2l	equ	0xFD9
 30438                           status	equ	0xFD8
 30439                           
 30440 ;; *************** function _FillSubKey *****************
 30441 ;; Defined at:
 30442 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 30443 ;; Parameters:    Size  Location     Type
 30444 ;;  source          2    4[BANK0 ] PTR unsigned char 
 30445 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 30446 ;;  key             2    6[BANK0 ] PTR unsigned char 
 30447 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 30448 ;;  size            1    8[BANK0 ] unsigned char 
 30449 ;; Auto vars:     Size  Location     Type
 30450 ;;  i               1   11[BANK0 ] unsigned char 
 30451 ;;  carry           1   10[BANK0 ] unsigned char 
 30452 ;; Return value:  Size  Location     Type
 30453 ;;                  1    wreg      void 
 30454 ;; Registers used:
 30455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 30456 ;; Tracked objects:
 30457 ;;		On entry : F/0
 30458 ;;		On exit  : F/0
 30459 ;;		Unchanged: 0/0
 30460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30461 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30462 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30463 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30464 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30465 ;;Total ram usage:        8 bytes
 30466 ;; Hardware stack levels used:    1
 30467 ;; Hardware stack levels required when called:    7
 30468 ;; This function calls:
 30469 ;;		Nothing
 30470 ;; This function is called by:
 30471 ;;		_GenerateSubkey
 30472 ;; This function uses a non-reentrant model
 30473 ;;
 30474                           
 30475                           	psect	text156
 30476  006D5E                     __ptext156:
 30477                           	opt stack 0
 30478  006D5E                     _FillSubKey:
 30479                           	opt stack 18
 30480                           
 30481                           ; BSR set to: 0
 30482                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 30483                           
 30484                           ; BSR set to: 0
 30485                           ;incstack = 0
 30486  006D5E  6B6B               	clrf	FillSubKey@i& (0+255),b
 30487                           
 30488                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 30489  006D60  6B6A               	clrf	FillSubKey@carry& (0+255),b
 30490                           
 30491                           ;lorawan_aes_cmac.c: 172: i=size;
 30492  006D62  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 30493                           
 30494                           ;lorawan_aes_cmac.c: 174: while(i--)
 30495  006D66  D01C               	goto	l12576
 30496  006D68                     l12572:
 30497                           
 30498                           ; BSR set to: 0
 30499                           ;lorawan_aes_cmac.c: 175: {
 30500                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 30501  006D68  516B               	movf	FillSubKey@i& (0+255),w,b
 30502  006D6A  2566               	addwf	FillSubKey@key& (0+255),w,b
 30503  006D6C  6ED9               	movwf	fsr2l,c
 30504  006D6E  0E00               	movlw	0
 30505  006D70  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 30506  006D72  6EDA               	movwf	fsr2h,c
 30507  006D74  516B               	movf	FillSubKey@i& (0+255),w,b
 30508  006D76  2564               	addwf	FillSubKey@source& (0+255),w,b
 30509  006D78  6EE9               	movwf	fsr0l,c
 30510  006D7A  0E00               	movlw	0
 30511  006D7C  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 30512  006D7E  6EEA               	movwf	fsr0h,c
 30513  006D80  50EF               	movf	indf0,w,c
 30514  006D82  6F69               	movwf	??_FillSubKey& (0+255),b
 30515  006D84  90D8               	bcf	status,0,c
 30516  006D86  3569               	rlcf	??_FillSubKey& (0+255),w,b
 30517  006D88  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 30518  006D8A  6EDF               	movwf	indf2,c
 30519                           
 30520                           ; BSR set to: 0
 30521                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 30522  006D8C  516B               	movf	FillSubKey@i& (0+255),w,b
 30523  006D8E  2564               	addwf	FillSubKey@source& (0+255),w,b
 30524  006D90  6ED9               	movwf	fsr2l,c
 30525  006D92  0E00               	movlw	0
 30526  006D94  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 30527  006D96  6EDA               	movwf	fsr2h,c
 30528  006D98  0E01               	movlw	1
 30529  006D9A  AEDF               	btfss	indf2,7,c
 30530  006D9C  0E00               	movlw	0
 30531  006D9E  6F6A               	movwf	FillSubKey@carry& (0+255),b
 30532  006DA0                     l12576:
 30533                           
 30534                           ; BSR set to: 0
 30535  006DA0  076B               	decf	FillSubKey@i& (0+255),f,b
 30536  006DA2  296B               	incf	FillSubKey@i& (0+255),w,b
 30537  006DA4  E1E1               	bnz	l12572
 30538                           
 30539                           ; BSR set to: 0
 30540  006DA6  0012               	return		;funcret
 30541  006DA8                     __end_of_FillSubKey:
 30542                           	opt stack 0
 30543                           tosu	equ	0xFFF
 30544                           tosh	equ	0xFFE
 30545                           tosl	equ	0xFFD
 30546                           pclath	equ	0xFFA
 30547                           tblptru	equ	0xFF8
 30548                           tblptrh	equ	0xFF7
 30549                           tblptrl	equ	0xFF6
 30550                           tablat	equ	0xFF5
 30551                           prodh	equ	0xFF4
 30552                           prodl	equ	0xFF3
 30553                           intcon	equ	0xFF2
 30554                           intcon2	equ	0xFF1
 30555                           intcon3	equ	0xFF0
 30556                           indf0	equ	0xFEF
 30557                           postinc0	equ	0xFEE
 30558                           plusw0	equ	0xFEB
 30559                           fsr0h	equ	0xFEA
 30560                           fsr0l	equ	0xFE9
 30561                           wreg	equ	0xFE8
 30562                           postinc1	equ	0xFE6
 30563                           postdec1	equ	0xFE5
 30564                           plusw1	equ	0xFE3
 30565                           fsr1h	equ	0xFE2
 30566                           fsr1l	equ	0xFE1
 30567                           indf2	equ	0xFDF
 30568                           postinc2	equ	0xFDE
 30569                           postdec2	equ	0xFDD
 30570                           plusw2	equ	0xFDB
 30571                           fsr2h	equ	0xFDA
 30572                           fsr2l	equ	0xFD9
 30573                           status	equ	0xFD8
 30574                           
 30575 ;; *************** function _AESEncodeLoRa *****************
 30576 ;; Defined at:
 30577 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 30578 ;; Parameters:    Size  Location     Type
 30579 ;;  block           2   48[BANK0 ] PTR unsigned char 
 30580 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30581 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30582 ;;  key             2   50[BANK0 ] PTR unsigned char 
 30583 ;;		 -> loRa.activationParameters(105), loRa(245), 
 30584 ;; Auto vars:     Size  Location     Type
 30585 ;;  useKey         16   52[BANK0 ] unsigned char [16]
 30586 ;; Return value:  Size  Location     Type
 30587 ;;                  1    wreg      void 
 30588 ;; Registers used:
 30589 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30590 ;; Tracked objects:
 30591 ;;		On entry : F/0
 30592 ;;		On exit  : F/0
 30593 ;;		Unchanged: 0/0
 30594 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30595 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30596 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30597 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30598 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30599 ;;Total ram usage:       20 bytes
 30600 ;; Hardware stack levels used:    1
 30601 ;; Hardware stack levels required when called:    9
 30602 ;; This function calls:
 30603 ;;		_AESEncode
 30604 ;;		_memcpy
 30605 ;; This function is called by:
 30606 ;;		_AESCmac
 30607 ;;		_GenerateSubkey
 30608 ;;		_LORAWAN_RxDone
 30609 ;;		_ComputeSessionKeys
 30610 ;;		_EncryptFRMPayload
 30611 ;; This function uses a non-reentrant model
 30612 ;;
 30613                           
 30614                           	psect	text157
 30615  007434                     __ptext157:
 30616                           	opt stack 0
 30617  007434                     _AESEncodeLoRa:
 30618                           	opt stack 17
 30619                           
 30620                           ; BSR set to: 0
 30621                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 30622                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 30623                           
 30624                           ; BSR set to: 0
 30625                           ;incstack = 0
 30626  007434  0E94               	movlw	low AESEncodeLoRa@useKey
 30627  007436  6F64               	movwf	memcpy@d1& (0+255),b
 30628  007438  6B65               	clrf	(memcpy@d1+1)& (0+255),b
 30629  00743A  C092  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 30630  00743E  C093  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 30631  007442  6B69               	clrf	(memcpy@n+1)& (0+255),b
 30632  007444  0E10               	movlw	16
 30633  007446  6F68               	movwf	memcpy@n& (0+255),b
 30634  007448  ECD5  F034         	call	_memcpy	;wreg free
 30635                           
 30636                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 30637  00744C  C090  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 30638  007450  C091  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 30639  007454  0E94               	movlw	low AESEncodeLoRa@useKey
 30640  007456  6F6C               	movwf	AESEncode@masterKey& (0+255),b
 30641  007458  EF99  F010         	goto	_AESEncode	;wreg free
 30642  00745C                     __end_of_AESEncodeLoRa:
 30643                           	opt stack 0
 30644                           tosu	equ	0xFFF
 30645                           tosh	equ	0xFFE
 30646                           tosl	equ	0xFFD
 30647                           pclath	equ	0xFFA
 30648                           tblptru	equ	0xFF8
 30649                           tblptrh	equ	0xFF7
 30650                           tblptrl	equ	0xFF6
 30651                           tablat	equ	0xFF5
 30652                           prodh	equ	0xFF4
 30653                           prodl	equ	0xFF3
 30654                           intcon	equ	0xFF2
 30655                           intcon2	equ	0xFF1
 30656                           intcon3	equ	0xFF0
 30657                           indf0	equ	0xFEF
 30658                           postinc0	equ	0xFEE
 30659                           plusw0	equ	0xFEB
 30660                           fsr0h	equ	0xFEA
 30661                           fsr0l	equ	0xFE9
 30662                           wreg	equ	0xFE8
 30663                           postinc1	equ	0xFE6
 30664                           postdec1	equ	0xFE5
 30665                           plusw1	equ	0xFE3
 30666                           fsr1h	equ	0xFE2
 30667                           fsr1l	equ	0xFE1
 30668                           indf2	equ	0xFDF
 30669                           postinc2	equ	0xFDE
 30670                           postdec2	equ	0xFDD
 30671                           plusw2	equ	0xFDB
 30672                           fsr2h	equ	0xFDA
 30673                           fsr2l	equ	0xFD9
 30674                           status	equ	0xFD8
 30675                           
 30676 ;; *************** function _AESEncode *****************
 30677 ;; Defined at:
 30678 ;;		line 236 in file "mcc_generated_files/LoRaWAN/AES.c"
 30679 ;; Parameters:    Size  Location     Type
 30680 ;;  block           2   10[BANK0 ] PTR unsigned char 
 30681 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 30682 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 30683 ;;  masterKey       1   12[BANK0 ] PTR unsigned char 
 30684 ;;		 -> AESEncodeLoRa@useKey(16), 
 30685 ;; Auto vars:     Size  Location     Type
 30686 ;;  aux3            1   46[BANK0 ] unsigned char 
 30687 ;;  aux1            1   45[BANK0 ] unsigned char 
 30688 ;;  aux2            1   44[BANK0 ] unsigned char 
 30689 ;;  aux             1   43[BANK0 ] unsigned char 
 30690 ;;  key            16   21[BANK0 ] unsigned char [16]
 30691 ;;  i               1   47[BANK0 ] unsigned char 
 30692 ;; Return value:  Size  Location     Type
 30693 ;;                  1    wreg      void 
 30694 ;; Registers used:
 30695 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 30696 ;; Tracked objects:
 30697 ;;		On entry : F/0
 30698 ;;		On exit  : F/0
 30699 ;;		Unchanged: 0/0
 30700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30701 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30702 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30703 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30704 ;;      Totals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30705 ;;Total ram usage:       38 bytes
 30706 ;; Hardware stack levels used:    1
 30707 ;; Hardware stack levels required when called:    8
 30708 ;; This function calls:
 30709 ;;		_EncKeySchedule
 30710 ;;		_EncodeShiftRow
 30711 ;; This function is called by:
 30712 ;;		_AESEncodeLoRa
 30713 ;; This function uses a non-reentrant model
 30714 ;;
 30715                           
 30716                           	psect	text158
 30717  002132                     __ptext158:
 30718                           	opt stack 0
 30719  002132                     _AESEncode:
 30720                           	opt stack 17
 30721                           
 30722                           ; BSR set to: 0
 30723                           ;AES.c: 238: unsigned char i;
 30724                           ;AES.c: 240: unsigned char key[16];
 30725                           ;AES.c: 242: for (i = 0; i < 16; i++)
 30726                           
 30727                           ; BSR set to: 0
 30728                           ;incstack = 0
 30729  002132  6B8F               	clrf	AESEncode@i& (0+255),b
 30730  002134                     l12176:
 30731                           
 30732                           ; BSR set to: 0
 30733                           ;AES.c: 243: {
 30734                           ;AES.c: 244: key[i] = masterKey[i];
 30735  002134  516C               	movf	AESEncode@masterKey& (0+255),w,b
 30736  002136  258F               	addwf	AESEncode@i& (0+255),w,b
 30737  002138  6ED9               	movwf	fsr2l,c
 30738  00213A  6ADA               	clrf	fsr2h,c
 30739  00213C  518F               	movf	AESEncode@i& (0+255),w,b
 30740  00213E  0F75               	addlw	low AESEncode@key
 30741  002140  6EE9               	movwf	fsr0l,c
 30742  002142  6AEA               	clrf	fsr0h,c
 30743  002144  CFDF FFEF          	movff	indf2,indf0
 30744                           
 30745                           ; BSR set to: 0
 30746  002148  2B8F               	incf	AESEncode@i& (0+255),f,b
 30747                           
 30748                           ; BSR set to: 0
 30749  00214A  0E0F               	movlw	15
 30750  00214C  658F               	cpfsgt	AESEncode@i& (0+255),b
 30751  00214E  D7F2               	goto	l12176
 30752                           
 30753                           ; BSR set to: 0
 30754                           ;AES.c: 245: }
 30755                           ;AES.c: 248: _roundCounter = 10;
 30756  002150  0E0A               	movlw	10
 30757  002152  6E47               	movwf	__roundCounter,c
 30758                           
 30759                           ;AES.c: 250: _rcon = 0x01;
 30760  002154  0E01               	movlw	1
 30761  002156  6E46               	movwf	__rcon,c
 30762                           
 30763                           ; BSR set to: 0
 30764                           ;AES.c: 253: for(i=0;i<16;i++)
 30765  002158  6B8F               	clrf	AESEncode@i& (0+255),b
 30766  00215A                     l12190:
 30767                           
 30768                           ; BSR set to: 0
 30769                           ;AES.c: 254: {
 30770                           ;AES.c: 255: block[i] ^= key[i];
 30771  00215A  518F               	movf	AESEncode@i& (0+255),w,b
 30772  00215C  0F75               	addlw	low AESEncode@key
 30773  00215E  6ED9               	movwf	fsr2l,c
 30774  002160  6ADA               	clrf	fsr2h,c
 30775  002162  50DF               	movf	indf2,w,c
 30776  002164  6F6D               	movwf	??_AESEncode& (0+255),b
 30777  002166  518F               	movf	AESEncode@i& (0+255),w,b
 30778  002168  256A               	addwf	AESEncode@block& (0+255),w,b
 30779  00216A  6ED9               	movwf	fsr2l,c
 30780  00216C  0E00               	movlw	0
 30781  00216E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30782  002170  6EDA               	movwf	fsr2h,c
 30783  002172  516D               	movf	??_AESEncode& (0+255),w,b
 30784  002174  1ADF               	xorwf	indf2,f,c
 30785                           
 30786                           ; BSR set to: 0
 30787  002176  2B8F               	incf	AESEncode@i& (0+255),f,b
 30788                           
 30789                           ; BSR set to: 0
 30790  002178  0E0F               	movlw	15
 30791  00217A  658F               	cpfsgt	AESEncode@i& (0+255),b
 30792  00217C  D7EE               	goto	l12190
 30793  00217E                     l2477:
 30794                           
 30795                           ; BSR set to: 0
 30796                           ;AES.c: 259: {
 30797                           ;AES.c: 261: for(i=0;i<16;i++)
 30798  00217E  6B8F               	clrf	AESEncode@i& (0+255),b
 30799  002180                     l12200:
 30800                           
 30801                           ; BSR set to: 0
 30802                           ;AES.c: 262: {
 30803                           ;AES.c: 263: block[i]=STable[block[i]];
 30804  002180  518F               	movf	AESEncode@i& (0+255),w,b
 30805  002182  256A               	addwf	AESEncode@block& (0+255),w,b
 30806  002184  6ED9               	movwf	fsr2l,c
 30807  002186  0E00               	movlw	0
 30808  002188  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30809  00218A  6EDA               	movwf	fsr2h,c
 30810  00218C  50DF               	movf	indf2,w,c
 30811  00218E  6F6D               	movwf	??_AESEncode& (0+255),b
 30812  002190  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30813  002192  0E25               	movlw	low _STable
 30814  002194  256D               	addwf	??_AESEncode& (0+255),w,b
 30815  002196  6EF6               	movwf	tblptrl,c
 30816  002198  0EFD               	movlw	high _STable
 30817  00219A  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30818  00219C  6EF7               	movwf	tblptrh,c
 30819  00219E                     	if	1	;There are 3 active tblptr bytes
 30820  00219E  6AF8               	clrf	tblptru,c
 30821  0021A0  0E00               	movlw	low (__mediumconst shr (0+16))
 30822  0021A2  22F8               	addwfc	tblptru,f,c
 30823  0021A4                     	endif
 30824  0021A4  518F               	movf	AESEncode@i& (0+255),w,b
 30825  0021A6  256A               	addwf	AESEncode@block& (0+255),w,b
 30826  0021A8  6ED9               	movwf	fsr2l,c
 30827  0021AA  0E00               	movlw	0
 30828  0021AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30829  0021AE  6EDA               	movwf	fsr2h,c
 30830  0021B0  0008               	tblrd		*
 30831  0021B2  CFF5 FFDF          	movff	tablat,indf2
 30832                           
 30833                           ; BSR set to: 0
 30834  0021B6  2B8F               	incf	AESEncode@i& (0+255),f,b
 30835                           
 30836                           ; BSR set to: 0
 30837  0021B8  0E0F               	movlw	15
 30838  0021BA  658F               	cpfsgt	AESEncode@i& (0+255),b
 30839  0021BC  D7E1               	goto	l12200
 30840                           
 30841                           ; BSR set to: 0
 30842                           ;AES.c: 264: }
 30843                           ;AES.c: 267: EncodeShiftRow(block);
 30844  0021BE  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 30845  0021C2  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 30846  0021C6  ECBC  F01E         	call	_EncodeShiftRow	;wreg free
 30847                           
 30848                           ; BSR set to: 0
 30849                           ;AES.c: 270: if(_roundCounter != 1)
 30850  0021CA  0447               	decf	__roundCounter,w,c
 30851  0021CC  E101 D111          	bz	l12248
 30852                           
 30853                           ; BSR set to: 0
 30854                           ;AES.c: 271: {
 30855                           ;AES.c: 272: unsigned char aux,aux1,aux2,aux3;
 30856                           ;AES.c: 274: for(i=0;i<16;i+=4)
 30857  0021D0  6B8F               	clrf	AESEncode@i& (0+255),b
 30858  0021D2                     l12216:
 30859                           
 30860                           ; BSR set to: 0
 30861                           ;AES.c: 275: {
 30862                           ;AES.c: 276: aux1= block[i+0] ^ block[i+1];
 30863  0021D2  518F               	movf	AESEncode@i& (0+255),w,b
 30864  0021D4  256A               	addwf	AESEncode@block& (0+255),w,b
 30865  0021D6  6F6D               	movwf	??_AESEncode& (0+255),b
 30866  0021D8  0E00               	movlw	0
 30867  0021DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30868  0021DC  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30869  0021DE  296D               	incf	??_AESEncode& (0+255),w,b
 30870  0021E0  6ED9               	movwf	fsr2l,c
 30871  0021E2  0E00               	movlw	0
 30872  0021E4  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30873  0021E6  6EDA               	movwf	fsr2h,c
 30874  0021E8  50DF               	movf	indf2,w,c
 30875  0021EA  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30876  0021EC  518F               	movf	AESEncode@i& (0+255),w,b
 30877  0021EE  256A               	addwf	AESEncode@block& (0+255),w,b
 30878  0021F0  6ED9               	movwf	fsr2l,c
 30879  0021F2  0E00               	movlw	0
 30880  0021F4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30881  0021F6  6EDA               	movwf	fsr2h,c
 30882  0021F8  50DF               	movf	indf2,w,c
 30883  0021FA  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30884  0021FC  6F8D               	movwf	AESEncode@aux1& (0+255),b
 30885                           
 30886                           ;AES.c: 277: aux3= block[i+2]^block[i+3];
 30887  0021FE  518F               	movf	AESEncode@i& (0+255),w,b
 30888  002200  256A               	addwf	AESEncode@block& (0+255),w,b
 30889  002202  6F6D               	movwf	??_AESEncode& (0+255),b
 30890  002204  0E00               	movlw	0
 30891  002206  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30892  002208  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30893  00220A  0E03               	movlw	3
 30894  00220C  256D               	addwf	??_AESEncode& (0+255),w,b
 30895  00220E  6ED9               	movwf	fsr2l,c
 30896  002210  0E00               	movlw	0
 30897  002212  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30898  002214  6EDA               	movwf	fsr2h,c
 30899  002216  50DF               	movf	indf2,w,c
 30900  002218  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30901  00221A  518F               	movf	AESEncode@i& (0+255),w,b
 30902  00221C  256A               	addwf	AESEncode@block& (0+255),w,b
 30903  00221E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30904  002220  0E00               	movlw	0
 30905  002222  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30906  002224  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30907  002226  0E02               	movlw	2
 30908  002228  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30909  00222A  6ED9               	movwf	fsr2l,c
 30910  00222C  0E00               	movlw	0
 30911  00222E  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30912  002230  6EDA               	movwf	fsr2h,c
 30913  002232  50DF               	movf	indf2,w,c
 30914  002234  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30915  002236  6F8E               	movwf	AESEncode@aux3& (0+255),b
 30916                           
 30917                           ; BSR set to: 0
 30918                           ;AES.c: 278: aux = aux1 ^ aux3;
 30919  002238  198D               	xorwf	AESEncode@aux1& (0+255),w,b
 30920  00223A  6F8B               	movwf	AESEncode@aux& (0+255),b
 30921                           
 30922                           ; BSR set to: 0
 30923                           ;AES.c: 279: aux2= block[i+2]^block[i+1];
 30924  00223C  518F               	movf	AESEncode@i& (0+255),w,b
 30925  00223E  256A               	addwf	AESEncode@block& (0+255),w,b
 30926  002240  6F6D               	movwf	??_AESEncode& (0+255),b
 30927  002242  0E00               	movlw	0
 30928  002244  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30929  002246  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 30930  002248  296D               	incf	??_AESEncode& (0+255),w,b
 30931  00224A  6ED9               	movwf	fsr2l,c
 30932  00224C  0E00               	movlw	0
 30933  00224E  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 30934  002250  6EDA               	movwf	fsr2h,c
 30935  002252  50DF               	movf	indf2,w,c
 30936  002254  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 30937  002256  518F               	movf	AESEncode@i& (0+255),w,b
 30938  002258  256A               	addwf	AESEncode@block& (0+255),w,b
 30939  00225A  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 30940  00225C  0E00               	movlw	0
 30941  00225E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 30942  002260  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 30943  002262  0E02               	movlw	2
 30944  002264  2570               	addwf	(??_AESEncode+3)& (0+255),w,b
 30945  002266  6ED9               	movwf	fsr2l,c
 30946  002268  0E00               	movlw	0
 30947  00226A  2171               	addwfc	(??_AESEncode+4)& (0+255),w,b
 30948  00226C  6EDA               	movwf	fsr2h,c
 30949  00226E  50DF               	movf	indf2,w,c
 30950  002270  196F               	xorwf	(??_AESEncode+2)& (0+255),w,b
 30951  002272  6F8C               	movwf	AESEncode@aux2& (0+255),b
 30952                           
 30953                           ;AES.c: 281: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 30954  002274  0E7F               	movlw	127
 30955  002276  658D               	cpfsgt	AESEncode@aux1& (0+255),b
 30956  002278  D00C               	goto	l12224
 30957                           
 30958                           ; BSR set to: 0
 30959  00227A  0E1B               	movlw	27
 30960  00227C  C08D  F06D         	movff	AESEncode@aux1,??_AESEncode
 30961  002280  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30962  002282  90D8               	bcf	status,0,c
 30963  002284  376D               	rlcf	??_AESEncode& (0+255),f,b
 30964  002286  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30965  002288  196D               	xorwf	??_AESEncode& (0+255),w,b
 30966  00228A  6F85               	movwf	_AESEncode$3876& (0+255),b
 30967  00228C  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30968  00228E  6F86               	movwf	(_AESEncode$3876+1)& (0+255),b
 30969  002290  D005               	goto	l12226
 30970  002292                     l12224:
 30971                           
 30972                           ; BSR set to: 0
 30973  002292  90D8               	bcf	status,0,c
 30974  002294  358D               	rlcf	AESEncode@aux1& (0+255),w,b
 30975  002296  6F85               	movwf	_AESEncode$3876& (0+255),b
 30976  002298  6B86               	clrf	(_AESEncode$3876+1)& (0+255),b
 30977  00229A  3786               	rlcf	(_AESEncode$3876+1)& (0+255),f,b
 30978  00229C                     l12226:
 30979                           
 30980                           ; BSR set to: 0
 30981  00229C  C085  F08D         	movff	_AESEncode$3876,AESEncode@aux1
 30982                           
 30983                           ;AES.c: 282: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 30984  0022A0  0E7F               	movlw	127
 30985  0022A2  658C               	cpfsgt	AESEncode@aux2& (0+255),b
 30986  0022A4  D00C               	goto	l12230
 30987                           
 30988                           ; BSR set to: 0
 30989  0022A6  0E1B               	movlw	27
 30990  0022A8  C08C  F06D         	movff	AESEncode@aux2,??_AESEncode
 30991  0022AC  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 30992  0022AE  90D8               	bcf	status,0,c
 30993  0022B0  376D               	rlcf	??_AESEncode& (0+255),f,b
 30994  0022B2  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 30995  0022B4  196D               	xorwf	??_AESEncode& (0+255),w,b
 30996  0022B6  6F87               	movwf	_AESEncode$3877& (0+255),b
 30997  0022B8  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 30998  0022BA  6F88               	movwf	(_AESEncode$3877+1)& (0+255),b
 30999  0022BC  D005               	goto	l12232
 31000  0022BE                     l12230:
 31001                           
 31002                           ; BSR set to: 0
 31003  0022BE  90D8               	bcf	status,0,c
 31004  0022C0  358C               	rlcf	AESEncode@aux2& (0+255),w,b
 31005  0022C2  6F87               	movwf	_AESEncode$3877& (0+255),b
 31006  0022C4  6B88               	clrf	(_AESEncode$3877+1)& (0+255),b
 31007  0022C6  3788               	rlcf	(_AESEncode$3877+1)& (0+255),f,b
 31008  0022C8                     l12232:
 31009                           
 31010                           ; BSR set to: 0
 31011  0022C8  C087  F08C         	movff	_AESEncode$3877,AESEncode@aux2
 31012                           
 31013                           ;AES.c: 283: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 31014  0022CC  0E7F               	movlw	127
 31015  0022CE  658E               	cpfsgt	AESEncode@aux3& (0+255),b
 31016  0022D0  D00C               	goto	l12236
 31017                           
 31018                           ; BSR set to: 0
 31019  0022D2  0E1B               	movlw	27
 31020  0022D4  C08E  F06D         	movff	AESEncode@aux3,??_AESEncode
 31021  0022D8  6B6E               	clrf	(??_AESEncode+1)& (0+255),b
 31022  0022DA  90D8               	bcf	status,0,c
 31023  0022DC  376D               	rlcf	??_AESEncode& (0+255),f,b
 31024  0022DE  376E               	rlcf	(??_AESEncode+1)& (0+255),f,b
 31025  0022E0  196D               	xorwf	??_AESEncode& (0+255),w,b
 31026  0022E2  6F89               	movwf	_AESEncode$3878& (0+255),b
 31027  0022E4  516E               	movf	(??_AESEncode+1)& (0+255),w,b
 31028  0022E6  6F8A               	movwf	(_AESEncode$3878+1)& (0+255),b
 31029  0022E8  D005               	goto	l12238
 31030  0022EA                     l12236:
 31031                           
 31032                           ; BSR set to: 0
 31033  0022EA  90D8               	bcf	status,0,c
 31034  0022EC  358E               	rlcf	AESEncode@aux3& (0+255),w,b
 31035  0022EE  6F89               	movwf	_AESEncode$3878& (0+255),b
 31036  0022F0  6B8A               	clrf	(_AESEncode$3878+1)& (0+255),b
 31037  0022F2  378A               	rlcf	(_AESEncode$3878+1)& (0+255),f,b
 31038  0022F4                     l12238:
 31039                           
 31040                           ; BSR set to: 0
 31041  0022F4  C089  F08E         	movff	_AESEncode$3878,AESEncode@aux3
 31042                           
 31043                           ; BSR set to: 0
 31044                           ;AES.c: 285: block[i+0]= aux^aux1^block[i+0];
 31045  0022F8  518F               	movf	AESEncode@i& (0+255),w,b
 31046  0022FA  256A               	addwf	AESEncode@block& (0+255),w,b
 31047  0022FC  6ED9               	movwf	fsr2l,c
 31048  0022FE  0E00               	movlw	0
 31049  002300  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31050  002302  6EDA               	movwf	fsr2h,c
 31051  002304  518F               	movf	AESEncode@i& (0+255),w,b
 31052  002306  256A               	addwf	AESEncode@block& (0+255),w,b
 31053  002308  6EE9               	movwf	fsr0l,c
 31054  00230A  0E00               	movlw	0
 31055  00230C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31056  00230E  6EEA               	movwf	fsr0h,c
 31057  002310  50EF               	movf	indf0,w,c
 31058  002312  198B               	xorwf	AESEncode@aux& (0+255),w,b
 31059  002314  198D               	xorwf	AESEncode@aux1& (0+255),w,b
 31060  002316  6EDF               	movwf	indf2,c
 31061                           
 31062                           ; BSR set to: 0
 31063                           ;AES.c: 286: block[i+1]= aux^aux2^block[i+1];
 31064  002318  518F               	movf	AESEncode@i& (0+255),w,b
 31065  00231A  256A               	addwf	AESEncode@block& (0+255),w,b
 31066  00231C  6F6D               	movwf	??_AESEncode& (0+255),b
 31067  00231E  0E00               	movlw	0
 31068  002320  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31069  002322  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 31070  002324  296D               	incf	??_AESEncode& (0+255),w,b
 31071  002326  6ED9               	movwf	fsr2l,c
 31072  002328  0E00               	movlw	0
 31073  00232A  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 31074  00232C  6EDA               	movwf	fsr2h,c
 31075  00232E  518F               	movf	AESEncode@i& (0+255),w,b
 31076  002330  256A               	addwf	AESEncode@block& (0+255),w,b
 31077  002332  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 31078  002334  0E00               	movlw	0
 31079  002336  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31080  002338  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 31081  00233A  296F               	incf	(??_AESEncode+2)& (0+255),w,b
 31082  00233C  6EE9               	movwf	fsr0l,c
 31083  00233E  0E00               	movlw	0
 31084  002340  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 31085  002342  6EEA               	movwf	fsr0h,c
 31086  002344  50EF               	movf	indf0,w,c
 31087  002346  198B               	xorwf	AESEncode@aux& (0+255),w,b
 31088  002348  198C               	xorwf	AESEncode@aux2& (0+255),w,b
 31089  00234A  6EDF               	movwf	indf2,c
 31090                           
 31091                           ; BSR set to: 0
 31092                           ;AES.c: 287: block[i+2]= aux^aux3^block[i+2];
 31093  00234C  518F               	movf	AESEncode@i& (0+255),w,b
 31094  00234E  256A               	addwf	AESEncode@block& (0+255),w,b
 31095  002350  6F6D               	movwf	??_AESEncode& (0+255),b
 31096  002352  0E00               	movlw	0
 31097  002354  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31098  002356  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 31099  002358  0E02               	movlw	2
 31100  00235A  256D               	addwf	??_AESEncode& (0+255),w,b
 31101  00235C  6ED9               	movwf	fsr2l,c
 31102  00235E  0E00               	movlw	0
 31103  002360  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 31104  002362  6EDA               	movwf	fsr2h,c
 31105  002364  518F               	movf	AESEncode@i& (0+255),w,b
 31106  002366  256A               	addwf	AESEncode@block& (0+255),w,b
 31107  002368  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 31108  00236A  0E00               	movlw	0
 31109  00236C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31110  00236E  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 31111  002370  0E02               	movlw	2
 31112  002372  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 31113  002374  6EE9               	movwf	fsr0l,c
 31114  002376  0E00               	movlw	0
 31115  002378  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 31116  00237A  6EEA               	movwf	fsr0h,c
 31117  00237C  50EF               	movf	indf0,w,c
 31118  00237E  198B               	xorwf	AESEncode@aux& (0+255),w,b
 31119  002380  198E               	xorwf	AESEncode@aux3& (0+255),w,b
 31120  002382  6EDF               	movwf	indf2,c
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;AES.c: 288: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 31124  002384  518F               	movf	AESEncode@i& (0+255),w,b
 31125  002386  256A               	addwf	AESEncode@block& (0+255),w,b
 31126  002388  6F6D               	movwf	??_AESEncode& (0+255),b
 31127  00238A  0E00               	movlw	0
 31128  00238C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31129  00238E  6F6E               	movwf	(??_AESEncode+1)& (0+255),b
 31130  002390  0E03               	movlw	3
 31131  002392  256D               	addwf	??_AESEncode& (0+255),w,b
 31132  002394  6ED9               	movwf	fsr2l,c
 31133  002396  0E00               	movlw	0
 31134  002398  216E               	addwfc	(??_AESEncode+1)& (0+255),w,b
 31135  00239A  6EDA               	movwf	fsr2h,c
 31136  00239C  518F               	movf	AESEncode@i& (0+255),w,b
 31137  00239E  256A               	addwf	AESEncode@block& (0+255),w,b
 31138  0023A0  6F6F               	movwf	(??_AESEncode+2)& (0+255),b
 31139  0023A2  0E00               	movlw	0
 31140  0023A4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31141  0023A6  6F70               	movwf	(??_AESEncode+3)& (0+255),b
 31142  0023A8  0E02               	movlw	2
 31143  0023AA  256F               	addwf	(??_AESEncode+2)& (0+255),w,b
 31144  0023AC  6EE9               	movwf	fsr0l,c
 31145  0023AE  0E00               	movlw	0
 31146  0023B0  2170               	addwfc	(??_AESEncode+3)& (0+255),w,b
 31147  0023B2  6EEA               	movwf	fsr0h,c
 31148  0023B4  50EF               	movf	indf0,w,c
 31149  0023B6  6F71               	movwf	(??_AESEncode+4)& (0+255),b
 31150  0023B8  518F               	movf	AESEncode@i& (0+255),w,b
 31151  0023BA  256A               	addwf	AESEncode@block& (0+255),w,b
 31152  0023BC  6F72               	movwf	(??_AESEncode+5)& (0+255),b
 31153  0023BE  0E00               	movlw	0
 31154  0023C0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31155  0023C2  6F73               	movwf	(??_AESEncode+6)& (0+255),b
 31156  0023C4  2972               	incf	(??_AESEncode+5)& (0+255),w,b
 31157  0023C6  6EE9               	movwf	fsr0l,c
 31158  0023C8  0E00               	movlw	0
 31159  0023CA  2173               	addwfc	(??_AESEncode+6)& (0+255),w,b
 31160  0023CC  6EEA               	movwf	fsr0h,c
 31161  0023CE  50EF               	movf	indf0,w,c
 31162  0023D0  6F74               	movwf	(??_AESEncode+7)& (0+255),b
 31163  0023D2  518F               	movf	AESEncode@i& (0+255),w,b
 31164  0023D4  256A               	addwf	AESEncode@block& (0+255),w,b
 31165  0023D6  6EE9               	movwf	fsr0l,c
 31166  0023D8  0E00               	movlw	0
 31167  0023DA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31168  0023DC  6EEA               	movwf	fsr0h,c
 31169  0023DE  50EF               	movf	indf0,w,c
 31170  0023E0  1974               	xorwf	(??_AESEncode+7)& (0+255),w,b
 31171  0023E2  1971               	xorwf	(??_AESEncode+4)& (0+255),w,b
 31172  0023E4  198B               	xorwf	AESEncode@aux& (0+255),w,b
 31173  0023E6  6EDF               	movwf	indf2,c
 31174  0023E8  0E04               	movlw	4
 31175  0023EA  278F               	addwf	AESEncode@i& (0+255),f,b
 31176  0023EC  0E0F               	movlw	15
 31177  0023EE  658F               	cpfsgt	AESEncode@i& (0+255),b
 31178  0023F0  D6F0               	goto	l12216
 31179  0023F2                     l12248:
 31180                           
 31181                           ; BSR set to: 0
 31182                           ;AES.c: 289: }
 31183                           ;AES.c: 290: }
 31184                           ;AES.c: 292: EncKeySchedule(key);
 31185  0023F2  0E75               	movlw	low AESEncode@key
 31186  0023F4  6F64               	movwf	EncKeySchedule@key& (0+255),b
 31187  0023F6  ECDE  F014         	call	_EncKeySchedule	;wreg free
 31188                           
 31189                           ; BSR set to: 0
 31190                           ;AES.c: 294: for(i=0;i<16;i++)
 31191  0023FA  6B8F               	clrf	AESEncode@i& (0+255),b
 31192  0023FC                     l12256:
 31193                           
 31194                           ; BSR set to: 0
 31195                           ;AES.c: 295: {
 31196                           ;AES.c: 296: block[i] ^= key[i];
 31197  0023FC  518F               	movf	AESEncode@i& (0+255),w,b
 31198  0023FE  0F75               	addlw	low AESEncode@key
 31199  002400  6ED9               	movwf	fsr2l,c
 31200  002402  6ADA               	clrf	fsr2h,c
 31201  002404  50DF               	movf	indf2,w,c
 31202  002406  6F6D               	movwf	??_AESEncode& (0+255),b
 31203  002408  518F               	movf	AESEncode@i& (0+255),w,b
 31204  00240A  256A               	addwf	AESEncode@block& (0+255),w,b
 31205  00240C  6ED9               	movwf	fsr2l,c
 31206  00240E  0E00               	movlw	0
 31207  002410  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 31208  002412  6EDA               	movwf	fsr2h,c
 31209  002414  516D               	movf	??_AESEncode& (0+255),w,b
 31210  002416  1ADF               	xorwf	indf2,f,c
 31211                           
 31212                           ; BSR set to: 0
 31213  002418  2B8F               	incf	AESEncode@i& (0+255),f,b
 31214                           
 31215                           ; BSR set to: 0
 31216  00241A  0E0F               	movlw	15
 31217  00241C  658F               	cpfsgt	AESEncode@i& (0+255),b
 31218  00241E  D7EE               	goto	l12256
 31219                           
 31220                           ; BSR set to: 0
 31221                           ;AES.c: 297: }
 31222                           ;AES.c: 299: _roundCounter--;
 31223  002420  0647               	decf	__roundCounter,f,c
 31224                           
 31225                           ; BSR set to: 0
 31226                           ;AES.c: 300: }
 31227                           ;AES.c: 301: while(_roundCounter !=0);
 31228  002422  5047               	movf	__roundCounter,w,c
 31229  002424  E001 D6AB          	bnz	l2477
 31230                           
 31231                           ; BSR set to: 0
 31232  002428  0012               	return		;funcret
 31233  00242A                     __end_of_AESEncode:
 31234                           	opt stack 0
 31235                           tosu	equ	0xFFF
 31236                           tosh	equ	0xFFE
 31237                           tosl	equ	0xFFD
 31238                           pclath	equ	0xFFA
 31239                           tblptru	equ	0xFF8
 31240                           tblptrh	equ	0xFF7
 31241                           tblptrl	equ	0xFF6
 31242                           tablat	equ	0xFF5
 31243                           prodh	equ	0xFF4
 31244                           prodl	equ	0xFF3
 31245                           intcon	equ	0xFF2
 31246                           intcon2	equ	0xFF1
 31247                           intcon3	equ	0xFF0
 31248                           indf0	equ	0xFEF
 31249                           postinc0	equ	0xFEE
 31250                           plusw0	equ	0xFEB
 31251                           fsr0h	equ	0xFEA
 31252                           fsr0l	equ	0xFE9
 31253                           wreg	equ	0xFE8
 31254                           postinc1	equ	0xFE6
 31255                           postdec1	equ	0xFE5
 31256                           plusw1	equ	0xFE3
 31257                           fsr1h	equ	0xFE2
 31258                           fsr1l	equ	0xFE1
 31259                           indf2	equ	0xFDF
 31260                           postinc2	equ	0xFDE
 31261                           postdec2	equ	0xFDD
 31262                           plusw2	equ	0xFDB
 31263                           fsr2h	equ	0xFDA
 31264                           fsr2l	equ	0xFD9
 31265                           status	equ	0xFD8
 31266                           
 31267 ;; *************** function _EncodeShiftRow *****************
 31268 ;; Defined at:
 31269 ;;		line 205 in file "mcc_generated_files/LoRaWAN/AES.c"
 31270 ;; Parameters:    Size  Location     Type
 31271 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 31272 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 31273 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 31274 ;; Auto vars:     Size  Location     Type
 31275 ;;  temp            1    6[BANK0 ] unsigned char 
 31276 ;; Return value:  Size  Location     Type
 31277 ;;                  1    wreg      void 
 31278 ;; Registers used:
 31279 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 31280 ;; Tracked objects:
 31281 ;;		On entry : F/0
 31282 ;;		On exit  : F/0
 31283 ;;		Unchanged: 0/0
 31284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31285 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31286 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31288 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31289 ;;Total ram usage:        3 bytes
 31290 ;; Hardware stack levels used:    1
 31291 ;; Hardware stack levels required when called:    7
 31292 ;; This function calls:
 31293 ;;		Nothing
 31294 ;; This function is called by:
 31295 ;;		_AESEncode
 31296 ;; This function uses a non-reentrant model
 31297 ;;
 31298                           
 31299                           	psect	text159
 31300  003D78                     __ptext159:
 31301                           	opt stack 0
 31302  003D78                     _EncodeShiftRow:
 31303                           	opt stack 17
 31304                           
 31305                           ; BSR set to: 0
 31306                           ;AES.c: 207: unsigned char temp;
 31307                           ;AES.c: 212: temp=stateTable[1];
 31308                           
 31309                           ; BSR set to: 0
 31310                           ;incstack = 0
 31311  003D78  EE20 F001          	lfsr	2,1
 31312  003D7C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31313  003D7E  26D9               	addwf	fsr2l,f,c
 31314  003D80  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31315  003D82  22DA               	addwfc	fsr2h,f,c
 31316  003D84  50DF               	movf	indf2,w,c
 31317  003D86  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 31318                           
 31319                           ; BSR set to: 0
 31320                           ;AES.c: 213: stateTable[1]=stateTable[5];
 31321  003D88  EE20 F005          	lfsr	2,5
 31322  003D8C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31323  003D8E  26D9               	addwf	fsr2l,f,c
 31324  003D90  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31325  003D92  22DA               	addwfc	fsr2h,f,c
 31326  003D94  EE00 F001          	lfsr	0,1
 31327  003D98  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31328  003D9A  26E9               	addwf	fsr0l,f,c
 31329  003D9C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31330  003D9E  22EA               	addwfc	fsr0h,f,c
 31331  003DA0  CFDF FFEF          	movff	indf2,indf0
 31332                           
 31333                           ; BSR set to: 0
 31334                           ;AES.c: 214: stateTable[5]=stateTable[9];
 31335  003DA4  EE20 F009          	lfsr	2,9
 31336  003DA8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31337  003DAA  26D9               	addwf	fsr2l,f,c
 31338  003DAC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31339  003DAE  22DA               	addwfc	fsr2h,f,c
 31340  003DB0  EE00 F005          	lfsr	0,5
 31341  003DB4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31342  003DB6  26E9               	addwf	fsr0l,f,c
 31343  003DB8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31344  003DBA  22EA               	addwfc	fsr0h,f,c
 31345  003DBC  CFDF FFEF          	movff	indf2,indf0
 31346                           
 31347                           ; BSR set to: 0
 31348                           ;AES.c: 215: stateTable[9]=stateTable[13];
 31349  003DC0  EE20 F00D          	lfsr	2,13
 31350  003DC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31351  003DC6  26D9               	addwf	fsr2l,f,c
 31352  003DC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31353  003DCA  22DA               	addwfc	fsr2h,f,c
 31354  003DCC  EE00 F009          	lfsr	0,9
 31355  003DD0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31356  003DD2  26E9               	addwf	fsr0l,f,c
 31357  003DD4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31358  003DD6  22EA               	addwfc	fsr0h,f,c
 31359  003DD8  CFDF FFEF          	movff	indf2,indf0
 31360                           
 31361                           ; BSR set to: 0
 31362                           ;AES.c: 216: stateTable[13]=temp;
 31363  003DDC  EE20 F00D          	lfsr	2,13
 31364  003DE0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31365  003DE2  26D9               	addwf	fsr2l,f,c
 31366  003DE4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31367  003DE6  22DA               	addwfc	fsr2h,f,c
 31368  003DE8  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 31369                           
 31370                           ; BSR set to: 0
 31371                           ;AES.c: 219: temp=stateTable[2];
 31372  003DEC  EE20 F002          	lfsr	2,2
 31373  003DF0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31374  003DF2  26D9               	addwf	fsr2l,f,c
 31375  003DF4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31376  003DF6  22DA               	addwfc	fsr2h,f,c
 31377  003DF8  50DF               	movf	indf2,w,c
 31378  003DFA  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 31379                           
 31380                           ; BSR set to: 0
 31381                           ;AES.c: 220: stateTable[2]=stateTable[10];
 31382  003DFC  EE20 F00A          	lfsr	2,10
 31383  003E00  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31384  003E02  26D9               	addwf	fsr2l,f,c
 31385  003E04  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31386  003E06  22DA               	addwfc	fsr2h,f,c
 31387  003E08  EE00 F002          	lfsr	0,2
 31388  003E0C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31389  003E0E  26E9               	addwf	fsr0l,f,c
 31390  003E10  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31391  003E12  22EA               	addwfc	fsr0h,f,c
 31392  003E14  CFDF FFEF          	movff	indf2,indf0
 31393                           
 31394                           ;AES.c: 221: stateTable[10]=temp;
 31395  003E18  EE20 F00A          	lfsr	2,10
 31396  003E1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31397  003E1E  26D9               	addwf	fsr2l,f,c
 31398  003E20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31399  003E22  22DA               	addwfc	fsr2h,f,c
 31400  003E24  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 31401                           
 31402                           ;AES.c: 222: temp=stateTable[14];
 31403  003E28  EE20 F00E          	lfsr	2,14
 31404  003E2C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31405  003E2E  26D9               	addwf	fsr2l,f,c
 31406  003E30  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31407  003E32  22DA               	addwfc	fsr2h,f,c
 31408  003E34  50DF               	movf	indf2,w,c
 31409  003E36  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 31410                           
 31411                           ; BSR set to: 0
 31412                           ;AES.c: 223: stateTable[14]=stateTable[6];
 31413  003E38  EE20 F006          	lfsr	2,6
 31414  003E3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31415  003E3E  26D9               	addwf	fsr2l,f,c
 31416  003E40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31417  003E42  22DA               	addwfc	fsr2h,f,c
 31418  003E44  EE00 F00E          	lfsr	0,14
 31419  003E48  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31420  003E4A  26E9               	addwf	fsr0l,f,c
 31421  003E4C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31422  003E4E  22EA               	addwfc	fsr0h,f,c
 31423  003E50  CFDF FFEF          	movff	indf2,indf0
 31424                           
 31425                           ; BSR set to: 0
 31426                           ;AES.c: 224: stateTable[6]=temp;
 31427  003E54  EE20 F006          	lfsr	2,6
 31428  003E58  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31429  003E5A  26D9               	addwf	fsr2l,f,c
 31430  003E5C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31431  003E5E  22DA               	addwfc	fsr2h,f,c
 31432  003E60  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 31433                           
 31434                           ; BSR set to: 0
 31435                           ;AES.c: 227: temp=stateTable[3];
 31436  003E64  EE20 F003          	lfsr	2,3
 31437  003E68  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31438  003E6A  26D9               	addwf	fsr2l,f,c
 31439  003E6C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31440  003E6E  22DA               	addwfc	fsr2h,f,c
 31441  003E70  50DF               	movf	indf2,w,c
 31442  003E72  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 31443                           
 31444                           ; BSR set to: 0
 31445                           ;AES.c: 228: stateTable[3]=stateTable[15];
 31446  003E74  EE20 F00F          	lfsr	2,15
 31447  003E78  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31448  003E7A  26D9               	addwf	fsr2l,f,c
 31449  003E7C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31450  003E7E  22DA               	addwfc	fsr2h,f,c
 31451  003E80  EE00 F003          	lfsr	0,3
 31452  003E84  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31453  003E86  26E9               	addwf	fsr0l,f,c
 31454  003E88  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31455  003E8A  22EA               	addwfc	fsr0h,f,c
 31456  003E8C  CFDF FFEF          	movff	indf2,indf0
 31457                           
 31458                           ; BSR set to: 0
 31459                           ;AES.c: 229: stateTable[15]=stateTable[11];
 31460  003E90  EE20 F00B          	lfsr	2,11
 31461  003E94  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31462  003E96  26D9               	addwf	fsr2l,f,c
 31463  003E98  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31464  003E9A  22DA               	addwfc	fsr2h,f,c
 31465  003E9C  EE00 F00F          	lfsr	0,15
 31466  003EA0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31467  003EA2  26E9               	addwf	fsr0l,f,c
 31468  003EA4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31469  003EA6  22EA               	addwfc	fsr0h,f,c
 31470  003EA8  CFDF FFEF          	movff	indf2,indf0
 31471                           
 31472                           ; BSR set to: 0
 31473                           ;AES.c: 230: stateTable[11]=stateTable[7];
 31474  003EAC  EE20 F007          	lfsr	2,7
 31475  003EB0  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31476  003EB2  26D9               	addwf	fsr2l,f,c
 31477  003EB4  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31478  003EB6  22DA               	addwfc	fsr2h,f,c
 31479  003EB8  EE00 F00B          	lfsr	0,11
 31480  003EBC  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31481  003EBE  26E9               	addwf	fsr0l,f,c
 31482  003EC0  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31483  003EC2  22EA               	addwfc	fsr0h,f,c
 31484  003EC4  CFDF FFEF          	movff	indf2,indf0
 31485                           
 31486                           ;AES.c: 231: stateTable[7]=temp;
 31487  003EC8  EE20 F007          	lfsr	2,7
 31488  003ECC  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 31489  003ECE  26D9               	addwf	fsr2l,f,c
 31490  003ED0  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 31491  003ED2  22DA               	addwfc	fsr2h,f,c
 31492  003ED4  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 31493                           
 31494                           ; BSR set to: 0
 31495  003ED8  0012               	return		;funcret
 31496  003EDA                     __end_of_EncodeShiftRow:
 31497                           	opt stack 0
 31498                           tosu	equ	0xFFF
 31499                           tosh	equ	0xFFE
 31500                           tosl	equ	0xFFD
 31501                           pclath	equ	0xFFA
 31502                           tblptru	equ	0xFF8
 31503                           tblptrh	equ	0xFF7
 31504                           tblptrl	equ	0xFF6
 31505                           tablat	equ	0xFF5
 31506                           prodh	equ	0xFF4
 31507                           prodl	equ	0xFF3
 31508                           intcon	equ	0xFF2
 31509                           intcon2	equ	0xFF1
 31510                           intcon3	equ	0xFF0
 31511                           indf0	equ	0xFEF
 31512                           postinc0	equ	0xFEE
 31513                           plusw0	equ	0xFEB
 31514                           fsr0h	equ	0xFEA
 31515                           fsr0l	equ	0xFE9
 31516                           wreg	equ	0xFE8
 31517                           postinc1	equ	0xFE6
 31518                           postdec1	equ	0xFE5
 31519                           plusw1	equ	0xFE3
 31520                           fsr1h	equ	0xFE2
 31521                           fsr1l	equ	0xFE1
 31522                           indf2	equ	0xFDF
 31523                           postinc2	equ	0xFDE
 31524                           postdec2	equ	0xFDD
 31525                           plusw2	equ	0xFDB
 31526                           fsr2h	equ	0xFDA
 31527                           fsr2l	equ	0xFD9
 31528                           status	equ	0xFD8
 31529                           
 31530 ;; *************** function _EncKeySchedule *****************
 31531 ;; Defined at:
 31532 ;;		line 160 in file "mcc_generated_files/LoRaWAN/AES.c"
 31533 ;; Parameters:    Size  Location     Type
 31534 ;;  key             1    4[BANK0 ] PTR unsigned char 
 31535 ;;		 -> AESEncode@key(16), 
 31536 ;; Auto vars:     Size  Location     Type
 31537 ;;		None
 31538 ;; Return value:  Size  Location     Type
 31539 ;;                  1    wreg      void 
 31540 ;; Registers used:
 31541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 31542 ;; Tracked objects:
 31543 ;;		On entry : F/0
 31544 ;;		On exit  : F/0
 31545 ;;		Unchanged: 0/0
 31546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31547 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31548 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31549 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31550 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31551 ;;Total ram usage:        6 bytes
 31552 ;; Hardware stack levels used:    1
 31553 ;; Hardware stack levels required when called:    7
 31554 ;; This function calls:
 31555 ;;		Nothing
 31556 ;; This function is called by:
 31557 ;;		_AESEncode
 31558 ;; This function uses a non-reentrant model
 31559 ;;
 31560                           
 31561                           	psect	text160
 31562  0029BC                     __ptext160:
 31563                           	opt stack 0
 31564  0029BC                     _EncKeySchedule:
 31565                           	opt stack 17
 31566                           
 31567                           ; BSR set to: 0
 31568                           ;AES.c: 163: key[0]^=STable[key[13]];
 31569                           
 31570                           ; BSR set to: 0
 31571                           ;incstack = 0
 31572  0029BC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31573  0029BE  6ED9               	movwf	fsr2l,c
 31574  0029C0  6ADA               	clrf	fsr2h,c
 31575  0029C2  0E0D               	movlw	13
 31576  0029C4  26D9               	addwf	fsr2l,f,c
 31577  0029C6  50DF               	movf	indf2,w,c
 31578  0029C8  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31579  0029CA  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 31580  0029CC  0E25               	movlw	low _STable
 31581  0029CE  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 31582  0029D0  6EF6               	movwf	tblptrl,c
 31583  0029D2  0EFD               	movlw	high _STable
 31584  0029D4  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 31585  0029D6  6EF7               	movwf	tblptrh,c
 31586  0029D8                     	if	1	;There are 3 active tblptr bytes
 31587  0029D8  6AF8               	clrf	tblptru,c
 31588  0029DA  0E00               	movlw	low (__mediumconst shr (0+16))
 31589  0029DC  22F8               	addwfc	tblptru,f,c
 31590  0029DE                     	endif
 31591  0029DE  0008               	tblrd		*
 31592  0029E0  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 31593  0029E4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31594  0029E6  6ED9               	movwf	fsr2l,c
 31595  0029E8  6ADA               	clrf	fsr2h,c
 31596  0029EA  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 31597  0029EC  1ADF               	xorwf	indf2,f,c
 31598                           
 31599                           ;AES.c: 164: key[1]^=STable[key[14]];
 31600  0029EE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31601  0029F0  6ED9               	movwf	fsr2l,c
 31602  0029F2  6ADA               	clrf	fsr2h,c
 31603  0029F4  0E0E               	movlw	14
 31604  0029F6  26D9               	addwf	fsr2l,f,c
 31605  0029F8  50DF               	movf	indf2,w,c
 31606  0029FA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31607  0029FC  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 31608  0029FE  0E25               	movlw	low _STable
 31609  002A00  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 31610  002A02  6EF6               	movwf	tblptrl,c
 31611  002A04  0EFD               	movlw	high _STable
 31612  002A06  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 31613  002A08  6EF7               	movwf	tblptrh,c
 31614  002A0A                     	if	1	;There are 3 active tblptr bytes
 31615  002A0A  6AF8               	clrf	tblptru,c
 31616  002A0C  0E00               	movlw	low (__mediumconst shr (0+16))
 31617  002A0E  22F8               	addwfc	tblptru,f,c
 31618  002A10                     	endif
 31619  002A10  0008               	tblrd		*
 31620  002A12  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 31621  002A16  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31622  002A18  6ED9               	movwf	fsr2l,c
 31623  002A1A  6ADA               	clrf	fsr2h,c
 31624  002A1C  2AD9               	incf	fsr2l,f,c
 31625  002A1E  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 31626  002A20  1ADF               	xorwf	indf2,f,c
 31627                           
 31628                           ;AES.c: 165: key[2]^=STable[key[15]];
 31629  002A22  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31630  002A24  6ED9               	movwf	fsr2l,c
 31631  002A26  6ADA               	clrf	fsr2h,c
 31632  002A28  0E0F               	movlw	15
 31633  002A2A  26D9               	addwf	fsr2l,f,c
 31634  002A2C  50DF               	movf	indf2,w,c
 31635  002A2E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31636  002A30  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 31637  002A32  0E25               	movlw	low _STable
 31638  002A34  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 31639  002A36  6EF6               	movwf	tblptrl,c
 31640  002A38  0EFD               	movlw	high _STable
 31641  002A3A  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 31642  002A3C  6EF7               	movwf	tblptrh,c
 31643  002A3E                     	if	1	;There are 3 active tblptr bytes
 31644  002A3E  6AF8               	clrf	tblptru,c
 31645  002A40  0E00               	movlw	low (__mediumconst shr (0+16))
 31646  002A42  22F8               	addwfc	tblptru,f,c
 31647  002A44                     	endif
 31648  002A44  0008               	tblrd		*
 31649  002A46  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 31650  002A4A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31651  002A4C  6ED9               	movwf	fsr2l,c
 31652  002A4E  6ADA               	clrf	fsr2h,c
 31653  002A50  0E02               	movlw	2
 31654  002A52  26D9               	addwf	fsr2l,f,c
 31655  002A54  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 31656  002A56  1ADF               	xorwf	indf2,f,c
 31657                           
 31658                           ;AES.c: 166: key[3]^=STable[key[12]];
 31659  002A58  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31660  002A5A  6ED9               	movwf	fsr2l,c
 31661  002A5C  6ADA               	clrf	fsr2h,c
 31662  002A5E  0E0C               	movlw	12
 31663  002A60  26D9               	addwf	fsr2l,f,c
 31664  002A62  50DF               	movf	indf2,w,c
 31665  002A64  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31666  002A66  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 31667  002A68  0E25               	movlw	low _STable
 31668  002A6A  2565               	addwf	??_EncKeySchedule& (0+255),w,b
 31669  002A6C  6EF6               	movwf	tblptrl,c
 31670  002A6E  0EFD               	movlw	high _STable
 31671  002A70  2166               	addwfc	(??_EncKeySchedule+1)& (0+255),w,b
 31672  002A72  6EF7               	movwf	tblptrh,c
 31673  002A74                     	if	1	;There are 3 active tblptr bytes
 31674  002A74  6AF8               	clrf	tblptru,c
 31675  002A76  0E00               	movlw	low (__mediumconst shr (0+16))
 31676  002A78  22F8               	addwfc	tblptru,f,c
 31677  002A7A                     	endif
 31678  002A7A  0008               	tblrd		*
 31679  002A7C  CFF5 F067          	movff	tablat,??_EncKeySchedule+2
 31680  002A80  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31681  002A82  6ED9               	movwf	fsr2l,c
 31682  002A84  6ADA               	clrf	fsr2h,c
 31683  002A86  0E03               	movlw	3
 31684  002A88  26D9               	addwf	fsr2l,f,c
 31685  002A8A  5167               	movf	(??_EncKeySchedule+2)& (0+255),w,b
 31686  002A8C  1ADF               	xorwf	indf2,f,c
 31687                           
 31688                           ; BSR set to: 0
 31689                           ;AES.c: 168: key[0]^=_rcon;
 31690  002A8E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31691  002A90  6ED9               	movwf	fsr2l,c
 31692  002A92  6ADA               	clrf	fsr2h,c
 31693  002A94  5046               	movf	__rcon,w,c
 31694  002A96  1ADF               	xorwf	indf2,f,c
 31695                           
 31696                           ; BSR set to: 0
 31697                           ;AES.c: 169: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 31698  002A98  0E7F               	movlw	127
 31699  002A9A  6446               	cpfsgt	__rcon,c
 31700  002A9C  D00C               	goto	l12038
 31701                           
 31702                           ; BSR set to: 0
 31703  002A9E  0E1B               	movlw	27
 31704  002AA0  C046  F065         	movff	__rcon,??_EncKeySchedule
 31705  002AA4  6B66               	clrf	(??_EncKeySchedule+1)& (0+255),b
 31706  002AA6  90D8               	bcf	status,0,c
 31707  002AA8  3765               	rlcf	??_EncKeySchedule& (0+255),f,b
 31708  002AAA  3766               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 31709  002AAC  1965               	xorwf	??_EncKeySchedule& (0+255),w,b
 31710  002AAE  6F68               	movwf	_EncKeySchedule$3862& (0+255),b
 31711  002AB0  5166               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 31712  002AB2  6F69               	movwf	(_EncKeySchedule$3862+1)& (0+255),b
 31713  002AB4  D005               	goto	l12040
 31714  002AB6                     l12038:
 31715                           
 31716                           ; BSR set to: 0
 31717  002AB6  90D8               	bcf	status,0,c
 31718  002AB8  3446               	rlcf	__rcon,w,c
 31719  002ABA  6F68               	movwf	_EncKeySchedule$3862& (0+255),b
 31720  002ABC  6B69               	clrf	(_EncKeySchedule$3862+1)& (0+255),b
 31721  002ABE  3769               	rlcf	(_EncKeySchedule$3862+1)& (0+255),f,b
 31722  002AC0                     l12040:
 31723                           
 31724                           ; BSR set to: 0
 31725  002AC0  C068  F046         	movff	_EncKeySchedule$3862,__rcon
 31726                           
 31727                           ; BSR set to: 0
 31728                           ;AES.c: 172: key[4]^=key[0];
 31729  002AC4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31730  002AC6  6ED9               	movwf	fsr2l,c
 31731  002AC8  6ADA               	clrf	fsr2h,c
 31732  002ACA  50DF               	movf	indf2,w,c
 31733  002ACC  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31734  002ACE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31735  002AD0  6ED9               	movwf	fsr2l,c
 31736  002AD2  6ADA               	clrf	fsr2h,c
 31737  002AD4  0E04               	movlw	4
 31738  002AD6  26D9               	addwf	fsr2l,f,c
 31739  002AD8  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31740  002ADA  1ADF               	xorwf	indf2,f,c
 31741                           
 31742                           ; BSR set to: 0
 31743                           ;AES.c: 173: key[5]^=key[1];
 31744  002ADC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31745  002ADE  6ED9               	movwf	fsr2l,c
 31746  002AE0  6ADA               	clrf	fsr2h,c
 31747  002AE2  2AD9               	incf	fsr2l,f,c
 31748  002AE4  50DF               	movf	indf2,w,c
 31749  002AE6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31750  002AE8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31751  002AEA  6ED9               	movwf	fsr2l,c
 31752  002AEC  6ADA               	clrf	fsr2h,c
 31753  002AEE  0E05               	movlw	5
 31754  002AF0  26D9               	addwf	fsr2l,f,c
 31755  002AF2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31756  002AF4  1ADF               	xorwf	indf2,f,c
 31757                           
 31758                           ; BSR set to: 0
 31759                           ;AES.c: 174: key[6]^=key[2];
 31760  002AF6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31761  002AF8  6ED9               	movwf	fsr2l,c
 31762  002AFA  6ADA               	clrf	fsr2h,c
 31763  002AFC  0E02               	movlw	2
 31764  002AFE  26D9               	addwf	fsr2l,f,c
 31765  002B00  50DF               	movf	indf2,w,c
 31766  002B02  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31767  002B04  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31768  002B06  6ED9               	movwf	fsr2l,c
 31769  002B08  6ADA               	clrf	fsr2h,c
 31770  002B0A  0E06               	movlw	6
 31771  002B0C  26D9               	addwf	fsr2l,f,c
 31772  002B0E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31773  002B10  1ADF               	xorwf	indf2,f,c
 31774                           
 31775                           ; BSR set to: 0
 31776                           ;AES.c: 175: key[7]^=key[3];
 31777  002B12  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31778  002B14  6ED9               	movwf	fsr2l,c
 31779  002B16  6ADA               	clrf	fsr2h,c
 31780  002B18  0E03               	movlw	3
 31781  002B1A  26D9               	addwf	fsr2l,f,c
 31782  002B1C  50DF               	movf	indf2,w,c
 31783  002B1E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31784  002B20  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31785  002B22  6ED9               	movwf	fsr2l,c
 31786  002B24  6ADA               	clrf	fsr2h,c
 31787  002B26  0E07               	movlw	7
 31788  002B28  26D9               	addwf	fsr2l,f,c
 31789  002B2A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31790  002B2C  1ADF               	xorwf	indf2,f,c
 31791                           
 31792                           ; BSR set to: 0
 31793                           ;AES.c: 178: key[8]^=key[4];
 31794  002B2E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31795  002B30  6ED9               	movwf	fsr2l,c
 31796  002B32  6ADA               	clrf	fsr2h,c
 31797  002B34  0E04               	movlw	4
 31798  002B36  26D9               	addwf	fsr2l,f,c
 31799  002B38  50DF               	movf	indf2,w,c
 31800  002B3A  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31801  002B3C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31802  002B3E  6ED9               	movwf	fsr2l,c
 31803  002B40  6ADA               	clrf	fsr2h,c
 31804  002B42  0E08               	movlw	8
 31805  002B44  26D9               	addwf	fsr2l,f,c
 31806  002B46  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31807  002B48  1ADF               	xorwf	indf2,f,c
 31808                           
 31809                           ; BSR set to: 0
 31810                           ;AES.c: 179: key[9]^=key[5];
 31811  002B4A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31812  002B4C  6ED9               	movwf	fsr2l,c
 31813  002B4E  6ADA               	clrf	fsr2h,c
 31814  002B50  0E05               	movlw	5
 31815  002B52  26D9               	addwf	fsr2l,f,c
 31816  002B54  50DF               	movf	indf2,w,c
 31817  002B56  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31818  002B58  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31819  002B5A  6ED9               	movwf	fsr2l,c
 31820  002B5C  6ADA               	clrf	fsr2h,c
 31821  002B5E  0E09               	movlw	9
 31822  002B60  26D9               	addwf	fsr2l,f,c
 31823  002B62  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31824  002B64  1ADF               	xorwf	indf2,f,c
 31825                           
 31826                           ; BSR set to: 0
 31827                           ;AES.c: 180: key[10]^=key[6];
 31828  002B66  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31829  002B68  6ED9               	movwf	fsr2l,c
 31830  002B6A  6ADA               	clrf	fsr2h,c
 31831  002B6C  0E06               	movlw	6
 31832  002B6E  26D9               	addwf	fsr2l,f,c
 31833  002B70  50DF               	movf	indf2,w,c
 31834  002B72  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31835  002B74  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31836  002B76  6ED9               	movwf	fsr2l,c
 31837  002B78  6ADA               	clrf	fsr2h,c
 31838  002B7A  0E0A               	movlw	10
 31839  002B7C  26D9               	addwf	fsr2l,f,c
 31840  002B7E  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31841  002B80  1ADF               	xorwf	indf2,f,c
 31842                           
 31843                           ; BSR set to: 0
 31844                           ;AES.c: 181: key[11]^=key[7];
 31845  002B82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31846  002B84  6ED9               	movwf	fsr2l,c
 31847  002B86  6ADA               	clrf	fsr2h,c
 31848  002B88  0E07               	movlw	7
 31849  002B8A  26D9               	addwf	fsr2l,f,c
 31850  002B8C  50DF               	movf	indf2,w,c
 31851  002B8E  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31852  002B90  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31853  002B92  6ED9               	movwf	fsr2l,c
 31854  002B94  6ADA               	clrf	fsr2h,c
 31855  002B96  0E0B               	movlw	11
 31856  002B98  26D9               	addwf	fsr2l,f,c
 31857  002B9A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31858  002B9C  1ADF               	xorwf	indf2,f,c
 31859                           
 31860                           ; BSR set to: 0
 31861                           ;AES.c: 184: key[12]^=key[8];
 31862  002B9E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31863  002BA0  6ED9               	movwf	fsr2l,c
 31864  002BA2  6ADA               	clrf	fsr2h,c
 31865  002BA4  0E08               	movlw	8
 31866  002BA6  26D9               	addwf	fsr2l,f,c
 31867  002BA8  50DF               	movf	indf2,w,c
 31868  002BAA  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31869  002BAC  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31870  002BAE  6ED9               	movwf	fsr2l,c
 31871  002BB0  6ADA               	clrf	fsr2h,c
 31872  002BB2  0E0C               	movlw	12
 31873  002BB4  26D9               	addwf	fsr2l,f,c
 31874  002BB6  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31875  002BB8  1ADF               	xorwf	indf2,f,c
 31876                           
 31877                           ; BSR set to: 0
 31878                           ;AES.c: 185: key[13]^=key[9];
 31879  002BBA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31880  002BBC  6ED9               	movwf	fsr2l,c
 31881  002BBE  6ADA               	clrf	fsr2h,c
 31882  002BC0  0E09               	movlw	9
 31883  002BC2  26D9               	addwf	fsr2l,f,c
 31884  002BC4  50DF               	movf	indf2,w,c
 31885  002BC6  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31886  002BC8  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31887  002BCA  6ED9               	movwf	fsr2l,c
 31888  002BCC  6ADA               	clrf	fsr2h,c
 31889  002BCE  0E0D               	movlw	13
 31890  002BD0  26D9               	addwf	fsr2l,f,c
 31891  002BD2  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31892  002BD4  1ADF               	xorwf	indf2,f,c
 31893                           
 31894                           ; BSR set to: 0
 31895                           ;AES.c: 186: key[14]^=key[10];
 31896  002BD6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31897  002BD8  6ED9               	movwf	fsr2l,c
 31898  002BDA  6ADA               	clrf	fsr2h,c
 31899  002BDC  0E0A               	movlw	10
 31900  002BDE  26D9               	addwf	fsr2l,f,c
 31901  002BE0  50DF               	movf	indf2,w,c
 31902  002BE2  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31903  002BE4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31904  002BE6  6ED9               	movwf	fsr2l,c
 31905  002BE8  6ADA               	clrf	fsr2h,c
 31906  002BEA  0E0E               	movlw	14
 31907  002BEC  26D9               	addwf	fsr2l,f,c
 31908  002BEE  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31909  002BF0  1ADF               	xorwf	indf2,f,c
 31910                           
 31911                           ; BSR set to: 0
 31912                           ;AES.c: 187: key[15]^=key[11];
 31913  002BF2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31914  002BF4  6ED9               	movwf	fsr2l,c
 31915  002BF6  6ADA               	clrf	fsr2h,c
 31916  002BF8  0E0B               	movlw	11
 31917  002BFA  26D9               	addwf	fsr2l,f,c
 31918  002BFC  50DF               	movf	indf2,w,c
 31919  002BFE  6F65               	movwf	??_EncKeySchedule& (0+255),b
 31920  002C00  5164               	movf	EncKeySchedule@key& (0+255),w,b
 31921  002C02  6ED9               	movwf	fsr2l,c
 31922  002C04  6ADA               	clrf	fsr2h,c
 31923  002C06  0E0F               	movlw	15
 31924  002C08  26D9               	addwf	fsr2l,f,c
 31925  002C0A  5165               	movf	??_EncKeySchedule& (0+255),w,b
 31926  002C0C  1ADF               	xorwf	indf2,f,c
 31927                           
 31928                           ; BSR set to: 0
 31929  002C0E  0012               	return		;funcret
 31930  002C10                     __end_of_EncKeySchedule:
 31931                           	opt stack 0
 31932                           tosu	equ	0xFFF
 31933                           tosh	equ	0xFFE
 31934                           tosl	equ	0xFFD
 31935                           pclath	equ	0xFFA
 31936                           tblptru	equ	0xFF8
 31937                           tblptrh	equ	0xFF7
 31938                           tblptrl	equ	0xFF6
 31939                           tablat	equ	0xFF5
 31940                           prodh	equ	0xFF4
 31941                           prodl	equ	0xFF3
 31942                           intcon	equ	0xFF2
 31943                           intcon2	equ	0xFF1
 31944                           intcon3	equ	0xFF0
 31945                           indf0	equ	0xFEF
 31946                           postinc0	equ	0xFEE
 31947                           plusw0	equ	0xFEB
 31948                           fsr0h	equ	0xFEA
 31949                           fsr0l	equ	0xFE9
 31950                           wreg	equ	0xFE8
 31951                           postinc1	equ	0xFE6
 31952                           postdec1	equ	0xFE5
 31953                           plusw1	equ	0xFE3
 31954                           fsr1h	equ	0xFE2
 31955                           fsr1l	equ	0xFE1
 31956                           indf2	equ	0xFDF
 31957                           postinc2	equ	0xFDE
 31958                           postdec2	equ	0xFDD
 31959                           plusw2	equ	0xFDB
 31960                           fsr2h	equ	0xFDA
 31961                           fsr2l	equ	0xFD9
 31962                           status	equ	0xFD8
 31963                           
 31964 ;; *************** function _LORAWAN_Init *****************
 31965 ;; Defined at:
 31966 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 31967 ;; Parameters:    Size  Location     Type
 31968 ;;  RxPayload       2   70[BANK0 ] PTR FTN(PTR unsigned cha
 31969 ;;		 -> RxDataDone(1), 
 31970 ;;  RxJoinRespon    2   72[BANK0 ] PTR FTN(unsigned char ,)
 31971 ;;		 -> RxJoinResponse(1), 
 31972 ;; Auto vars:     Size  Location     Type
 31973 ;;		None
 31974 ;; Return value:  Size  Location     Type
 31975 ;;                  1    wreg      void 
 31976 ;; Registers used:
 31977 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31978 ;; Tracked objects:
 31979 ;;		On entry : F/0
 31980 ;;		On exit  : D/0
 31981 ;;		Unchanged: 0/0
 31982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31983 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31986 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31987 ;;Total ram usage:        4 bytes
 31988 ;; Hardware stack levels used:    1
 31989 ;; Hardware stack levels required when called:   13
 31990 ;; This function calls:
 31991 ;;		_CreateAllSoftwareTimers
 31992 ;;		_LORAWAN_Reset
 31993 ;;		_RADIO_Init
 31994 ;;		_RADIO_ReadRandom
 31995 ;;		_SetCallbackSoftwareTimers
 31996 ;;		_StopAllSoftwareTimers
 31997 ;;		_srand
 31998 ;; This function is called by:
 31999 ;;		_main
 32000 ;; This function uses a non-reentrant model
 32001 ;;
 32002                           
 32003                           	psect	text161
 32004  006840                     __ptext161:
 32005                           	opt stack 0
 32006  006840                     _LORAWAN_Init:
 32007                           	opt stack 17
 32008                           
 32009                           ; BSR set to: 0
 32010                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 32011                           
 32012                           ; BSR set to: 0
 32013                           ;incstack = 0
 32014  006840  0102               	movlb	2	; () banked
 32015  006842  51F0               	movf	(_loRa+240)& (0+255),w,b
 32016  006844  E108               	bnz	l15750
 32017                           
 32018                           ; BSR set to: 2
 32019                           ;lorawan_eu.c: 127: {
 32020                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 32021  006846  EC54  F035         	call	_CreateAllSoftwareTimers	;wreg free
 32022                           
 32023                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 32024  00684A  EC1A  F02C         	call	_SetCallbackSoftwareTimers	;wreg free
 32025                           
 32026                           ; BSR set to: 0
 32027                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 32028  00684E  0E01               	movlw	1
 32029  006850  0102               	movlb	2	; () banked
 32030  006852  6FF0               	movwf	(_loRa+240)& (0+255),b
 32031                           
 32032                           ;lorawan_eu.c: 131: }
 32033  006854  D002               	goto	l15752
 32034  006856                     l15750:
 32035                           
 32036                           ; BSR set to: 2
 32037                           ;lorawan_eu.c: 132: else
 32038                           ;lorawan_eu.c: 133: {
 32039                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 32040  006856  ECF2  F035         	call	_StopAllSoftwareTimers	;wreg free
 32041  00685A                     l15752:
 32042                           
 32043                           ;lorawan_eu.c: 135: }
 32044                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 32045  00685A  C0A6  F172         	movff	LORAWAN_Init@RxPayload,_rxPayload
 32046  00685E  C0A7  F173         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 32047                           
 32048                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 32049  006862  C0A8  F174         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 32050  006866  C0A9  F175         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 32051                           
 32052                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 32053  00686A  0EFF               	movlw	low (_radioBuffer+16)
 32054  00686C  0100               	movlb	0	; () banked
 32055  00686E  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 32056  006870  0E05               	movlw	high (_radioBuffer+16)
 32057  006872  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 32058  006874  0EA0               	movlw	160
 32059  006876  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 32060  006878  0E27               	movlw	39
 32061  00687A  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 32062  00687C  0EBE               	movlw	190
 32063  00687E  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 32064  006880  0E33               	movlw	51
 32065  006882  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 32066  006884  EC63  F01C         	call	_RADIO_Init	;wreg free
 32067                           
 32068                           ; BSR set to: 1
 32069                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 32070  006888  EC60  F030         	call	_RADIO_ReadRandom	;wreg free
 32071  00688C  C070  F075         	movff	?_RADIO_ReadRandom,srand@x
 32072  006890  C071  F076         	movff	?_RADIO_ReadRandom+1,srand@x+1
 32073  006894  ECB1  F03C         	call	_srand	;wreg free
 32074                           
 32075                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 32076  006898  0E00               	movlw	0
 32077  00689A  EF6D  F01F         	goto	_LORAWAN_Reset
 32078  00689E                     __end_of_LORAWAN_Init:
 32079                           	opt stack 0
 32080                           tosu	equ	0xFFF
 32081                           tosh	equ	0xFFE
 32082                           tosl	equ	0xFFD
 32083                           pclath	equ	0xFFA
 32084                           tblptru	equ	0xFF8
 32085                           tblptrh	equ	0xFF7
 32086                           tblptrl	equ	0xFF6
 32087                           tablat	equ	0xFF5
 32088                           prodh	equ	0xFF4
 32089                           prodl	equ	0xFF3
 32090                           intcon	equ	0xFF2
 32091                           intcon2	equ	0xFF1
 32092                           intcon3	equ	0xFF0
 32093                           indf0	equ	0xFEF
 32094                           postinc0	equ	0xFEE
 32095                           plusw0	equ	0xFEB
 32096                           fsr0h	equ	0xFEA
 32097                           fsr0l	equ	0xFE9
 32098                           wreg	equ	0xFE8
 32099                           postinc1	equ	0xFE6
 32100                           postdec1	equ	0xFE5
 32101                           plusw1	equ	0xFE3
 32102                           fsr1h	equ	0xFE2
 32103                           fsr1l	equ	0xFE1
 32104                           indf2	equ	0xFDF
 32105                           postinc2	equ	0xFDE
 32106                           postdec2	equ	0xFDD
 32107                           plusw2	equ	0xFDB
 32108                           fsr2h	equ	0xFDA
 32109                           fsr2l	equ	0xFD9
 32110                           status	equ	0xFD8
 32111                           
 32112 ;; *************** function _srand *****************
 32113 ;; Defined at:
 32114 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 32115 ;; Parameters:    Size  Location     Type
 32116 ;;  x               2   21[BANK0 ] unsigned int 
 32117 ;; Auto vars:     Size  Location     Type
 32118 ;;		None
 32119 ;; Return value:  Size  Location     Type
 32120 ;;                  1    wreg      void 
 32121 ;; Registers used:
 32122 ;;		status,2
 32123 ;; Tracked objects:
 32124 ;;		On entry : 0/1
 32125 ;;		On exit  : 0/0
 32126 ;;		Unchanged: 0/0
 32127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32128 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32131 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32132 ;;Total ram usage:        2 bytes
 32133 ;; Hardware stack levels used:    1
 32134 ;; Hardware stack levels required when called:    7
 32135 ;; This function calls:
 32136 ;;		Nothing
 32137 ;; This function is called by:
 32138 ;;		_LORAWAN_Init
 32139 ;; This function uses a non-reentrant model
 32140 ;;
 32141                           
 32142                           	psect	text162
 32143  007962                     __ptext162:
 32144                           	opt stack 0
 32145  007962                     _srand:
 32146                           	opt stack 22
 32147                           
 32148                           ;incstack = 0
 32149  007962  C075  F056         	movff	srand@x,_randx
 32150  007966  C076  F057         	movff	srand@x+1,_randx+1
 32151  00796A  6A58               	clrf	_randx+2,c
 32152  00796C  6A59               	clrf	_randx+3,c
 32153  00796E  0012               	return		;funcret
 32154  007970                     __end_of_srand:
 32155                           	opt stack 0
 32156                           tosu	equ	0xFFF
 32157                           tosh	equ	0xFFE
 32158                           tosl	equ	0xFFD
 32159                           pclath	equ	0xFFA
 32160                           tblptru	equ	0xFF8
 32161                           tblptrh	equ	0xFF7
 32162                           tblptrl	equ	0xFF6
 32163                           tablat	equ	0xFF5
 32164                           prodh	equ	0xFF4
 32165                           prodl	equ	0xFF3
 32166                           intcon	equ	0xFF2
 32167                           intcon2	equ	0xFF1
 32168                           intcon3	equ	0xFF0
 32169                           indf0	equ	0xFEF
 32170                           postinc0	equ	0xFEE
 32171                           plusw0	equ	0xFEB
 32172                           fsr0h	equ	0xFEA
 32173                           fsr0l	equ	0xFE9
 32174                           wreg	equ	0xFE8
 32175                           postinc1	equ	0xFE6
 32176                           postdec1	equ	0xFE5
 32177                           plusw1	equ	0xFE3
 32178                           fsr1h	equ	0xFE2
 32179                           fsr1l	equ	0xFE1
 32180                           indf2	equ	0xFDF
 32181                           postinc2	equ	0xFDE
 32182                           postdec2	equ	0xFDD
 32183                           plusw2	equ	0xFDB
 32184                           fsr2h	equ	0xFDA
 32185                           fsr2l	equ	0xFD9
 32186                           status	equ	0xFD8
 32187                           
 32188 ;; *************** function _SetCallbackSoftwareTimers *****************
 32189 ;; Defined at:
 32190 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32191 ;; Parameters:    Size  Location     Type
 32192 ;;		None
 32193 ;; Auto vars:     Size  Location     Type
 32194 ;;		None
 32195 ;; Return value:  Size  Location     Type
 32196 ;;                  1    wreg      void 
 32197 ;; Registers used:
 32198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32199 ;; Tracked objects:
 32200 ;;		On entry : F/2
 32201 ;;		On exit  : F/0
 32202 ;;		Unchanged: 0/0
 32203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32204 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32205 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32206 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32207 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32208 ;;Total ram usage:        0 bytes
 32209 ;; Hardware stack levels used:    1
 32210 ;; Hardware stack levels required when called:    8
 32211 ;; This function calls:
 32212 ;;		_SwTimerSetCallback
 32213 ;; This function is called by:
 32214 ;;		_LORAWAN_Init
 32215 ;; This function uses a non-reentrant model
 32216 ;;
 32217                           
 32218                           	psect	text163
 32219  005834                     __ptext163:
 32220                           	opt stack 0
 32221  005834                     _SetCallbackSoftwareTimers:
 32222                           	opt stack 21
 32223                           
 32224                           ; BSR set to: 2
 32225                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 32226                           
 32227                           ;incstack = 0
 32228  005834  0EEA               	movlw	low _LORAWAN_ReceiveWindow1Callback
 32229  005836  0100               	movlb	0	; () banked
 32230  005838  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32231  00583A  0E58               	movlw	high _LORAWAN_ReceiveWindow1Callback
 32232  00583C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32233  00583E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32234  005840  0102               	movlb	2	; () banked
 32235  005842  51E2               	movf	(_loRa+226)& (0+255),w,b
 32236  005844  EC3F  F039         	call	_SwTimerSetCallback
 32237                           
 32238                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 32239  005848  0EE8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 32240  00584A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32241  00584C  0E55               	movlw	high _LORAWAN_ReceiveWindow2Callback
 32242  00584E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32243  005850  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32244  005852  0102               	movlb	2	; () banked
 32245  005854  51E3               	movf	(_loRa+227)& (0+255),w,b
 32246  005856  EC3F  F039         	call	_SwTimerSetCallback
 32247                           
 32248                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 32249  00585A  0E38               	movlw	low _LORAWAN_LinkCheckCallback
 32250  00585C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32251  00585E  0E40               	movlw	high _LORAWAN_LinkCheckCallback
 32252  005860  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32253  005862  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32254  005864  0102               	movlb	2	; () banked
 32255  005866  51E7               	movf	(_loRa+231)& (0+255),w,b
 32256  005868  EC3F  F039         	call	_SwTimerSetCallback
 32257                           
 32258                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 32259  00586C  0EEA               	movlw	low _LORAWAN_ReceiveWindow1Callback
 32260  00586E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32261  005870  0E58               	movlw	high _LORAWAN_ReceiveWindow1Callback
 32262  005872  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32263  005874  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32264  005876  0102               	movlb	2	; () banked
 32265  005878  51E4               	movf	(_loRa+228)& (0+255),w,b
 32266  00587A  EC3F  F039         	call	_SwTimerSetCallback
 32267                           
 32268                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 32269  00587E  0EE8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 32270  005880  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32271  005882  0E55               	movlw	high _LORAWAN_ReceiveWindow2Callback
 32272  005884  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32273  005886  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32274  005888  0102               	movlb	2	; () banked
 32275  00588A  51E5               	movf	(_loRa+229)& (0+255),w,b
 32276  00588C  EC3F  F039         	call	_SwTimerSetCallback
 32277                           
 32278                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 32279  005890  0E12               	movlw	low _AckRetransmissionCallback
 32280  005892  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32281  005894  0E4C               	movlw	high _AckRetransmissionCallback
 32282  005896  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32283  005898  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32284  00589A  0102               	movlb	2	; () banked
 32285  00589C  51E8               	movf	(_loRa+232)& (0+255),w,b
 32286  00589E  EC3F  F039         	call	_SwTimerSetCallback
 32287                           
 32288                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 32289  0058A2  0E20               	movlw	low _AutomaticReplyCallback
 32290  0058A4  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32291  0058A6  0E76               	movlw	high _AutomaticReplyCallback
 32292  0058A8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32293  0058AA  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32294  0058AC  0102               	movlb	2	; () banked
 32295  0058AE  51E6               	movf	(_loRa+230)& (0+255),w,b
 32296  0058B0  EC3F  F039         	call	_SwTimerSetCallback
 32297                           
 32298                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 32299  0058B4  0E1E               	movlw	low _UnconfirmedTransmissionCallback
 32300  0058B6  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32301  0058B8  0E63               	movlw	high _UnconfirmedTransmissionCallback
 32302  0058BA  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32303  0058BC  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32304  0058BE  0102               	movlb	2	; () banked
 32305  0058C0  51EA               	movf	(_loRa+234)& (0+255),w,b
 32306  0058C2  EC3F  F039         	call	_SwTimerSetCallback
 32307                           
 32308                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 32309  0058C6  0ECC               	movlw	low _UpdateJoinSuccessState
 32310  0058C8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32311  0058CA  0E47               	movlw	high _UpdateJoinSuccessState
 32312  0058CC  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32313  0058CE  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32314  0058D0  0102               	movlb	2	; () banked
 32315  0058D2  51F3               	movf	(_loRa+243)& (0+255),w,b
 32316  0058D4  EC3F  F039         	call	_SwTimerSetCallback
 32317                           
 32318                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 32319  0058D8  0E2A               	movlw	low _DutyCycleCallback
 32320  0058DA  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 32321  0058DC  0E24               	movlw	high _DutyCycleCallback
 32322  0058DE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 32323  0058E0  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 32324  0058E2  0102               	movlb	2	; () banked
 32325  0058E4  51E9               	movf	(_loRa+233)& (0+255),w,b
 32326  0058E6  EF3F  F039         	goto	_SwTimerSetCallback
 32327  0058EA                     __end_of_SetCallbackSoftwareTimers:
 32328                           	opt stack 0
 32329                           tosu	equ	0xFFF
 32330                           tosh	equ	0xFFE
 32331                           tosl	equ	0xFFD
 32332                           pclath	equ	0xFFA
 32333                           tblptru	equ	0xFF8
 32334                           tblptrh	equ	0xFF7
 32335                           tblptrl	equ	0xFF6
 32336                           tablat	equ	0xFF5
 32337                           prodh	equ	0xFF4
 32338                           prodl	equ	0xFF3
 32339                           intcon	equ	0xFF2
 32340                           intcon2	equ	0xFF1
 32341                           intcon3	equ	0xFF0
 32342                           indf0	equ	0xFEF
 32343                           postinc0	equ	0xFEE
 32344                           plusw0	equ	0xFEB
 32345                           fsr0h	equ	0xFEA
 32346                           fsr0l	equ	0xFE9
 32347                           wreg	equ	0xFE8
 32348                           postinc1	equ	0xFE6
 32349                           postdec1	equ	0xFE5
 32350                           plusw1	equ	0xFE3
 32351                           fsr1h	equ	0xFE2
 32352                           fsr1l	equ	0xFE1
 32353                           indf2	equ	0xFDF
 32354                           postinc2	equ	0xFDE
 32355                           postdec2	equ	0xFDD
 32356                           plusw2	equ	0xFDB
 32357                           fsr2h	equ	0xFDA
 32358                           fsr2l	equ	0xFD9
 32359                           status	equ	0xFD8
 32360                           
 32361 ;; *************** function _RADIO_ReadRandom *****************
 32362 ;; Defined at:
 32363 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 32364 ;; Parameters:    Size  Location     Type
 32365 ;;		None
 32366 ;; Auto vars:     Size  Location     Type
 32367 ;;  retVal          2   18[BANK0 ] unsigned int 
 32368 ;;  i               1   20[BANK0 ] unsigned char 
 32369 ;; Return value:  Size  Location     Type
 32370 ;;                  2   16[BANK0 ] unsigned int 
 32371 ;; Registers used:
 32372 ;;		wreg, status,2, status,0, cstack
 32373 ;; Tracked objects:
 32374 ;;		On entry : F/1
 32375 ;;		On exit  : 0/0
 32376 ;;		Unchanged: 0/0
 32377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32379 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32381 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32382 ;;Total ram usage:        5 bytes
 32383 ;; Hardware stack levels used:    1
 32384 ;; Hardware stack levels required when called:   11
 32385 ;; This function calls:
 32386 ;;		_RADIO_RegisterRead
 32387 ;;		_RADIO_RegisterWrite
 32388 ;;		_RADIO_WriteMode
 32389 ;;		_SystemBlockingWaitMs
 32390 ;; This function is called by:
 32391 ;;		_LORAWAN_Init
 32392 ;; This function uses a non-reentrant model
 32393 ;;
 32394                           
 32395                           	psect	text164
 32396  0060C0                     __ptext164:
 32397                           	opt stack 0
 32398  0060C0                     _RADIO_ReadRandom:
 32399                           	opt stack 18
 32400                           
 32401                           ; BSR set to: 1
 32402                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 32403                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 32404                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 32405                           
 32406                           ; BSR set to: 0
 32407                           ;incstack = 0
 32408  0060C0  0100               	movlb	0	; () banked
 32409  0060C2  6B72               	clrf	RADIO_ReadRandom@retVal& (0+255),b
 32410  0060C4  6B73               	clrf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 32411                           
 32412                           ; BSR set to: 0
 32413                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32414  0060C6  0E01               	movlw	1
 32415  0060C8  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32416  0060CA  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32417  0060CC  0E00               	movlw	0
 32418  0060CE  ECB9  F029         	call	_RADIO_WriteMode
 32419                           
 32420                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 32421  0060D2  0100               	movlb	0	; () banked
 32422  0060D4  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32423  0060D6  0E11               	movlw	17
 32424  0060D8  EC3D  F03B         	call	_RADIO_RegisterWrite
 32425                           
 32426                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 32427  0060DC  0E01               	movlw	1
 32428  0060DE  0100               	movlb	0	; () banked
 32429  0060E0  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32430  0060E2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32431  0060E4  0E05               	movlw	5
 32432  0060E6  ECB9  F029         	call	_RADIO_WriteMode
 32433                           
 32434                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 32435  0060EA  0100               	movlb	0	; () banked
 32436  0060EC  6B74               	clrf	RADIO_ReadRandom@i& (0+255),b
 32437  0060EE                     l15548:
 32438                           
 32439                           ; BSR set to: 0
 32440                           ;radio_driver_SX1276.c: 1377: {
 32441                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 32442  0060EE  0E01               	movlw	1
 32443  0060F0  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 32444  0060F2  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 32445  0060F4  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 32446  0060F6  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 32447  0060F8  ECDC  F039         	call	_SystemBlockingWaitMs	;wreg free
 32448                           
 32449                           ; BSR set to: 0
 32450                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 32451  0060FC  90D8               	bcf	status,0,c
 32452  0060FE  3772               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 32453  006100  3773               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 32454                           
 32455                           ; BSR set to: 0
 32456                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 32457  006102  0E2C               	movlw	44
 32458  006104  EC41  F03A         	call	_RADIO_RegisterRead
 32459  006108  0B01               	andlw	1
 32460  00610A  1372               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 32461  00610C  2B74               	incf	RADIO_ReadRandom@i& (0+255),f,b
 32462                           
 32463                           ; BSR set to: 0
 32464  00610E  0E0F               	movlw	15
 32465  006110  6574               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 32466  006112  D7ED               	goto	l15548
 32467                           
 32468                           ; BSR set to: 0
 32469                           ;radio_driver_SX1276.c: 1381: }
 32470                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 32471  006114  0E01               	movlw	1
 32472  006116  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 32473  006118  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 32474  00611A  0E00               	movlw	0
 32475  00611C  ECB9  F029         	call	_RADIO_WriteMode
 32476                           
 32477                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 32478  006120  0100               	movlb	0	; () banked
 32479  006122  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 32480  006124  0E12               	movlw	18
 32481  006126  EC3D  F03B         	call	_RADIO_RegisterWrite
 32482                           
 32483                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 32484  00612A  0100               	movlb	0	; () banked
 32485  00612C  6B66               	clrf	RADIO_RegisterWrite@value& (0+255),b
 32486  00612E  0E11               	movlw	17
 32487  006130  EC3D  F03B         	call	_RADIO_RegisterWrite
 32488                           
 32489                           ;radio_driver_SX1276.c: 1389: return retVal;
 32490  006134  C072  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 32491  006138  C073  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 32492  00613C  0012               	return		;funcret
 32493  00613E                     __end_of_RADIO_ReadRandom:
 32494                           	opt stack 0
 32495                           tosu	equ	0xFFF
 32496                           tosh	equ	0xFFE
 32497                           tosl	equ	0xFFD
 32498                           pclath	equ	0xFFA
 32499                           tblptru	equ	0xFF8
 32500                           tblptrh	equ	0xFF7
 32501                           tblptrl	equ	0xFF6
 32502                           tablat	equ	0xFF5
 32503                           prodh	equ	0xFF4
 32504                           prodl	equ	0xFF3
 32505                           intcon	equ	0xFF2
 32506                           intcon2	equ	0xFF1
 32507                           intcon3	equ	0xFF0
 32508                           indf0	equ	0xFEF
 32509                           postinc0	equ	0xFEE
 32510                           plusw0	equ	0xFEB
 32511                           fsr0h	equ	0xFEA
 32512                           fsr0l	equ	0xFE9
 32513                           wreg	equ	0xFE8
 32514                           postinc1	equ	0xFE6
 32515                           postdec1	equ	0xFE5
 32516                           plusw1	equ	0xFE3
 32517                           fsr1h	equ	0xFE2
 32518                           fsr1l	equ	0xFE1
 32519                           indf2	equ	0xFDF
 32520                           postinc2	equ	0xFDE
 32521                           postdec2	equ	0xFDD
 32522                           plusw2	equ	0xFDB
 32523                           fsr2h	equ	0xFDA
 32524                           fsr2l	equ	0xFD9
 32525                           status	equ	0xFD8
 32526                           
 32527 ;; *************** function _LORAWAN_Reset *****************
 32528 ;; Defined at:
 32529 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 32530 ;; Parameters:    Size  Location     Type
 32531 ;;  ismBandNew      1    wreg     enum E8047
 32532 ;; Auto vars:     Size  Location     Type
 32533 ;;  ismBandNew      1   69[BANK0 ] enum E8047
 32534 ;; Return value:  Size  Location     Type
 32535 ;;                  1    wreg      void 
 32536 ;; Registers used:
 32537 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32538 ;; Tracked objects:
 32539 ;;		On entry : 0/1
 32540 ;;		On exit  : D/0
 32541 ;;		Unchanged: 0/0
 32542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32543 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32544 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32546 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32547 ;;Total ram usage:        1 bytes
 32548 ;; Hardware stack levels used:    1
 32549 ;; Hardware stack levels required when called:   12
 32550 ;; This function calls:
 32551 ;;		_InitDefault433Channels
 32552 ;;		_InitDefault868Channels
 32553 ;;		_LORAWAN_LinkCheckConfigure
 32554 ;;		_RADIO_Init
 32555 ;;		_RADIO_SetLoRaSyncWord
 32556 ;;		_StopAllSoftwareTimers
 32557 ;;		_UpdateMinMaxChDataRate
 32558 ;;		_memset
 32559 ;; This function is called by:
 32560 ;;		_LORAWAN_Init
 32561 ;; This function uses a non-reentrant model
 32562 ;;
 32563                           
 32564                           	psect	text165
 32565  003EDA                     __ptext165:
 32566                           	opt stack 0
 32567  003EDA                     _LORAWAN_Reset:
 32568                           	opt stack 17
 32569                           
 32570                           ;incstack = 0
 32571                           ;LORAWAN_Reset@ismBandNew stored from wreg
 32572  003EDA  0100               	movlb	0	; () banked
 32573  003EDC  6FA5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 32574                           
 32575                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 32576  003EDE  0102               	movlb	2	; () banked
 32577  003EE0  05F0               	decf	(_loRa+240)& (0+255),w,b
 32578  003EE2  E102               	bnz	l15568
 32579                           
 32580                           ; BSR set to: 2
 32581                           ;lorawan_eu.c: 151: {
 32582                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 32583  003EE4  ECF2  F035         	call	_StopAllSoftwareTimers	;wreg free
 32584  003EE8                     l15568:
 32585                           
 32586                           ;lorawan_eu.c: 153: }
 32587                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 32588  003EE8  0E34               	movlw	52
 32589  003EEA  0102               	movlb	2	; () banked
 32590  003EEC  6FF4               	movwf	(_loRa+244)& (0+255),b
 32591                           
 32592                           ; BSR set to: 2
 32593                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 32594  003EEE  51F4               	movf	(_loRa+244)& (0+255),w,b
 32595  003EF0  EC14  F03D         	call	_RADIO_SetLoRaSyncWord
 32596                           
 32597                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 32598  003EF4  0102               	movlb	2	; () banked
 32599  003EF6  6B02               	clrf	(_loRa+2)& (0+255),b
 32600  003EF8  6B03               	clrf	(_loRa+3)& (0+255),b
 32601  003EFA  6B04               	clrf	(_loRa+4)& (0+255),b
 32602  003EFC  6B05               	clrf	(_loRa+5)& (0+255),b
 32603                           
 32604                           ; BSR set to: 2
 32605                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 32606  003EFE  69DD               	setf	(_loRa+221)& (0+255),b
 32607                           
 32608                           ; BSR set to: 2
 32609                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 32610  003F00  6BDE               	clrf	(_loRa+222)& (0+255),b
 32611                           
 32612                           ; BSR set to: 2
 32613                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 32614  003F02  6BC8               	clrf	(_loRa+200)& (0+255),b
 32615  003F04  6BC9               	clrf	(_loRa+201)& (0+255),b
 32616  003F06  6BCA               	clrf	(_loRa+202)& (0+255),b
 32617  003F08  6BCB               	clrf	(_loRa+203)& (0+255),b
 32618                           
 32619                           ; BSR set to: 2
 32620                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 32621  003F0A  6BD4               	clrf	(_loRa+212)& (0+255),b
 32622  003F0C  6BD5               	clrf	(_loRa+213)& (0+255),b
 32623                           
 32624                           ; BSR set to: 2
 32625                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 32626  003F0E  6B0A               	clrf	(_loRa+10)& (0+255),b
 32627  003F10  6B0B               	clrf	(_loRa+11)& (0+255),b
 32628  003F12  6B0C               	clrf	(_loRa+12)& (0+255),b
 32629  003F14  6B0D               	clrf	(_loRa+13)& (0+255),b
 32630                           
 32631                           ; BSR set to: 2
 32632                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 32633  003F16  6B06               	clrf	(_loRa+6)& (0+255),b
 32634  003F18  6B07               	clrf	(_loRa+7)& (0+255),b
 32635  003F1A  6B08               	clrf	(_loRa+8)& (0+255),b
 32636  003F1C  6B09               	clrf	(_loRa+9)& (0+255),b
 32637                           
 32638                           ; BSR set to: 2
 32639                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 32640  003F1E  6BD2               	clrf	(_loRa+210)& (0+255),b
 32641  003F20  6BD3               	clrf	(_loRa+211)& (0+255),b
 32642                           
 32643                           ; BSR set to: 2
 32644                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 32645  003F22  6BDC               	clrf	(_loRa+220)& (0+255),b
 32646  003F24  0E01               	movlw	1
 32647  003F26  6FDB               	movwf	(_loRa+219)& (0+255),b
 32648                           
 32649                           ; BSR set to: 2
 32650                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 32651  003F28  6BD0               	clrf	(_loRa+208)& (0+255),b
 32652  003F2A  6BD1               	clrf	(_loRa+209)& (0+255),b
 32653                           
 32654                           ; BSR set to: 2
 32655                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 32656  003F2C  6BEE               	clrf	(_loRa+238)& (0+255),b
 32657                           
 32658                           ; BSR set to: 2
 32659                           ;lorawan_eu.c: 169: loRa.offset = 0;
 32660  003F2E  6BEF               	clrf	(_loRa+239)& (0+255),b
 32661                           
 32662                           ; BSR set to: 2
 32663                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 32664  003F30  6BC8               	clrf	(_loRa+200)& (0+255),b
 32665  003F32  6BC9               	clrf	(_loRa+201)& (0+255),b
 32666  003F34  6BCA               	clrf	(_loRa+202)& (0+255),b
 32667  003F36  6BCB               	clrf	(_loRa+203)& (0+255),b
 32668                           
 32669                           ; BSR set to: 2
 32670                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 32671  003F38  9503               	bcf	(_loRa+3)& (0+255),2,b
 32672                           
 32673                           ; BSR set to: 2
 32674                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 32675  003F3A  6B02               	clrf	(_loRa+2)& (0+255),b
 32676  003F3C  6B03               	clrf	(_loRa+3)& (0+255),b
 32677  003F3E  6B04               	clrf	(_loRa+4)& (0+255),b
 32678  003F40  6B05               	clrf	(_loRa+5)& (0+255),b
 32679                           
 32680                           ; BSR set to: 2
 32681                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 32682  003F42  6B00               	clrf	_loRa& (0+255),b
 32683  003F44  6B01               	clrf	(_loRa+1)& (0+255),b
 32684                           
 32685                           ; BSR set to: 2
 32686                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 32687  003F46  0E07               	movlw	7
 32688  003F48  6FD7               	movwf	(_loRa+215)& (0+255),b
 32689                           
 32690                           ; BSR set to: 2
 32691                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 32692  003F4A  6BD6               	clrf	(_loRa+214)& (0+255),b
 32693                           
 32694                           ; BSR set to: 2
 32695                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 32696  003F4C  0E01               	movlw	1
 32697  003F4E  6FD9               	movwf	(_loRa+217)& (0+255),b
 32698                           
 32699                           ; BSR set to: 2
 32700                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 32701  003F50  6FD8               	movwf	(_loRa+216)& (0+255),b
 32702                           
 32703                           ; BSR set to: 2
 32704                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 32705  003F52  69E0               	setf	(_loRa+224)& (0+255),b
 32706                           
 32707                           ; BSR set to: 2
 32708                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 32709  003F54  C0A5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 32710                           
 32711                           ; BSR set to: 2
 32712                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 32713  003F58  6B12               	clrf	(_loRa+18)& (0+255),b
 32714                           
 32715                           ; BSR set to: 2
 32716                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 32717  003F5A  0E10               	movlw	16
 32718  003F5C  6FED               	movwf	(_loRa+237)& (0+255),b
 32719                           
 32720                           ; BSR set to: 2
 32721                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 32722  003F5E  0100               	movlb	0	; () banked
 32723  003F60  51A5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 32724  003F62  E11A               	bnz	l15630
 32725                           
 32726                           ; BSR set to: 0
 32727                           ;lorawan_eu.c: 193: {
 32728                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 32729  003F64  0EFF               	movlw	low (_radioBuffer+16)
 32730  003F66  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 32731  003F68  0E05               	movlw	high (_radioBuffer+16)
 32732  003F6A  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 32733  003F6C  0EA0               	movlw	160
 32734  003F6E  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 32735  003F70  0E27               	movlw	39
 32736  003F72  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 32737  003F74  0EBE               	movlw	190
 32738  003F76  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 32739  003F78  0E33               	movlw	51
 32740  003F7A  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 32741  003F7C  EC63  F01C         	call	_RADIO_Init	;wreg free
 32742                           
 32743                           ; BSR set to: 1
 32744                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 32745  003F80  EC95  F032         	call	_InitDefault868Channels	;wreg free
 32746                           
 32747                           ; BSR set to: 0
 32748                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 32749  003F84  0102               	movlb	2	; () banked
 32750  003F86  6B1C               	clrf	(_loRa+28)& (0+255),b
 32751                           
 32752                           ; BSR set to: 2
 32753                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 32754  003F88  0E08               	movlw	8
 32755  003F8A  6F18               	movwf	(_loRa+24)& (0+255),b
 32756  003F8C  0EE6               	movlw	230
 32757  003F8E  6F19               	movwf	(_loRa+25)& (0+255),b
 32758  003F90  0ED3               	movlw	211
 32759  003F92  6F1A               	movwf	(_loRa+26)& (0+255),b
 32760  003F94  0E33               	movlw	51
 32761  003F96  D019               	goto	L20
 32762  003F98                     l15630:
 32763                           
 32764                           ; BSR set to: 0
 32765                           ;lorawan_eu.c: 201: else
 32766                           ;lorawan_eu.c: 202: {
 32767                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 32768  003F98  0EFF               	movlw	low (_radioBuffer+16)
 32769  003F9A  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 32770  003F9C  0E05               	movlw	high (_radioBuffer+16)
 32771  003F9E  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 32772  003FA0  0E20               	movlw	32
 32773  003FA2  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 32774  003FA4  0EA2               	movlw	162
 32775  003FA6  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 32776  003FA8  0ED3               	movlw	211
 32777  003FAA  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 32778  003FAC  0E19               	movlw	25
 32779  003FAE  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 32780  003FB0  EC63  F01C         	call	_RADIO_Init	;wreg free
 32781                           
 32782                           ; BSR set to: 1
 32783                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 32784  003FB4  ECC8  F032         	call	_InitDefault433Channels	;wreg free
 32785                           
 32786                           ; BSR set to: 0
 32787                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 32788  003FB8  0102               	movlb	2	; () banked
 32789  003FBA  6B1C               	clrf	(_loRa+28)& (0+255),b
 32790                           
 32791                           ; BSR set to: 2
 32792                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 32793  003FBC  0E28               	movlw	40
 32794  003FBE  6F18               	movwf	(_loRa+24)& (0+255),b
 32795  003FC0  0E76               	movlw	118
 32796  003FC2  6F19               	movwf	(_loRa+25)& (0+255),b
 32797  003FC4  0EE8               	movlw	232
 32798  003FC6  6F1A               	movwf	(_loRa+26)& (0+255),b
 32799  003FC8  0E19               	movlw	25
 32800  003FCA                     L20:
 32801  003FCA  6F1B               	movwf	(_loRa+27)& (0+255),b
 32802                           
 32803                           ; BSR set to: 2
 32804                           ;lorawan_eu.c: 209: }
 32805                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 32806  003FCC  0E01               	movlw	1
 32807  003FCE  6FE1               	movwf	(_loRa+225)& (0+255),b
 32808                           
 32809                           ; BSR set to: 2
 32810                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 32811  003FD0  6BDF               	clrf	(_loRa+223)& (0+255),b
 32812                           
 32813                           ; BSR set to: 2
 32814                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 32815  003FD2  ECCF  F02C         	call	_UpdateMinMaxChDataRate	;wreg free
 32816                           
 32817                           ; BSR set to: 0
 32818                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 32819  003FD6  0102               	movlb	2	; () banked
 32820  003FD8  6BA5               	clrf	(_loRa+165)& (0+255),b
 32821  003FDA  6BA6               	clrf	(_loRa+166)& (0+255),b
 32822                           
 32823                           ; BSR set to: 2
 32824                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 32825  003FDC  0E1D               	movlw	low (_loRa+29)
 32826  003FDE  0100               	movlb	0	; () banked
 32827  003FE0  6F64               	movwf	memset@p1& (0+255),b
 32828  003FE2  0E02               	movlw	high (_loRa+29)
 32829  003FE4  6F65               	movwf	(memset@p1+1)& (0+255),b
 32830  003FE6  6B67               	clrf	(memset@c+1)& (0+255),b
 32831  003FE8  6B66               	clrf	memset@c& (0+255),b
 32832  003FEA  6B69               	clrf	(memset@n+1)& (0+255),b
 32833  003FEC  0E69               	movlw	105
 32834  003FEE  6F68               	movwf	memset@n& (0+255),b
 32835  003FF0  ECF1  F039         	call	_memset	;wreg free
 32836                           
 32837                           ; BSR set to: 0
 32838                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 32839  003FF4  0E03               	movlw	3
 32840  003FF6  0102               	movlb	2	; () banked
 32841  003FF8  6F95               	movwf	(_loRa+149)& (0+255),b
 32842  003FFA  0EE8               	movlw	232
 32843  003FFC  6F94               	movwf	(_loRa+148)& (0+255),b
 32844                           
 32845                           ; BSR set to: 2
 32846                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 32847  003FFE  0E07               	movlw	7
 32848  004000  6F97               	movwf	(_loRa+151)& (0+255),b
 32849  004002  0ED0               	movlw	208
 32850  004004  6F96               	movwf	(_loRa+150)& (0+255),b
 32851                           
 32852                           ; BSR set to: 2
 32853                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 32854  004006  0E13               	movlw	19
 32855  004008  6F99               	movwf	(_loRa+153)& (0+255),b
 32856  00400A  0E88               	movlw	136
 32857  00400C  6F98               	movwf	(_loRa+152)& (0+255),b
 32858                           
 32859                           ; BSR set to: 2
 32860                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 32861  00400E  0E17               	movlw	23
 32862  004010  6F9B               	movwf	(_loRa+155)& (0+255),b
 32863  004012  0E70               	movlw	112
 32864  004014  6F9A               	movwf	(_loRa+154)& (0+255),b
 32865                           
 32866                           ; BSR set to: 2
 32867                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 32868  004016  0E07               	movlw	7
 32869  004018  6FA1               	movwf	(_loRa+161)& (0+255),b
 32870  00401A  0ED0               	movlw	208
 32871  00401C  6FA0               	movwf	(_loRa+160)& (0+255),b
 32872                           
 32873                           ; BSR set to: 2
 32874                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 32875  00401E  0E20               	movlw	32
 32876  004020  6FA3               	movwf	(_loRa+163)& (0+255),b
 32877                           
 32878                           ; BSR set to: 2
 32879                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 32880  004022  0E40               	movlw	64
 32881  004024  6FA2               	movwf	(_loRa+162)& (0+255),b
 32882                           
 32883                           ; BSR set to: 2
 32884                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 32885  004026  6F9D               	movwf	(_loRa+157)& (0+255),b
 32886  004028  6B9C               	clrf	(_loRa+156)& (0+255),b
 32887                           
 32888                           ; BSR set to: 2
 32889                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 32890  00402A  6F9F               	movwf	(_loRa+159)& (0+255),b
 32891  00402C  6B9E               	clrf	(_loRa+158)& (0+255),b
 32892                           
 32893                           ; BSR set to: 2
 32894                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 32895  00402E  0100               	movlb	0	; () banked
 32896  004030  6B97               	clrf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 32897  004032  6B96               	clrf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 32898  004034  EF95  F01B         	goto	_LORAWAN_LinkCheckConfigure	;wreg free
 32899  004038                     __end_of_LORAWAN_Reset:
 32900                           	opt stack 0
 32901                           tosu	equ	0xFFF
 32902                           tosh	equ	0xFFE
 32903                           tosl	equ	0xFFD
 32904                           pclath	equ	0xFFA
 32905                           tblptru	equ	0xFF8
 32906                           tblptrh	equ	0xFF7
 32907                           tblptrl	equ	0xFF6
 32908                           tablat	equ	0xFF5
 32909                           prodh	equ	0xFF4
 32910                           prodl	equ	0xFF3
 32911                           intcon	equ	0xFF2
 32912                           intcon2	equ	0xFF1
 32913                           intcon3	equ	0xFF0
 32914                           indf0	equ	0xFEF
 32915                           postinc0	equ	0xFEE
 32916                           plusw0	equ	0xFEB
 32917                           fsr0h	equ	0xFEA
 32918                           fsr0l	equ	0xFE9
 32919                           wreg	equ	0xFE8
 32920                           postinc1	equ	0xFE6
 32921                           postdec1	equ	0xFE5
 32922                           plusw1	equ	0xFE3
 32923                           fsr1h	equ	0xFE2
 32924                           fsr1l	equ	0xFE1
 32925                           indf2	equ	0xFDF
 32926                           postinc2	equ	0xFDE
 32927                           postdec2	equ	0xFDD
 32928                           plusw2	equ	0xFDB
 32929                           fsr2h	equ	0xFDA
 32930                           fsr2l	equ	0xFD9
 32931                           status	equ	0xFD8
 32932                           
 32933 ;; *************** function _UpdateMinMaxChDataRate *****************
 32934 ;; Defined at:
 32935 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32936 ;; Parameters:    Size  Location     Type
 32937 ;;		None
 32938 ;; Auto vars:     Size  Location     Type
 32939 ;;  i               1    5[BANK0 ] unsigned char 
 32940 ;; Return value:  Size  Location     Type
 32941 ;;                  1    wreg      void 
 32942 ;; Registers used:
 32943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 32944 ;; Tracked objects:
 32945 ;;		On entry : F/2
 32946 ;;		On exit  : F/0
 32947 ;;		Unchanged: 0/0
 32948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32950 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32951 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32952 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32953 ;;Total ram usage:        2 bytes
 32954 ;; Hardware stack levels used:    1
 32955 ;; Hardware stack levels required when called:    7
 32956 ;; This function calls:
 32957 ;;		Nothing
 32958 ;; This function is called by:
 32959 ;;		_LORAWAN_Reset
 32960 ;; This function uses a non-reentrant model
 32961 ;;
 32962                           
 32963                           	psect	text166
 32964  00599E                     __ptext166:
 32965                           	opt stack 0
 32966  00599E                     _UpdateMinMaxChDataRate:
 32967                           	opt stack 21
 32968                           
 32969                           ; BSR set to: 2
 32970                           ;lorawan.c: 1065: uint8_t i;
 32971                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 32972                           
 32973                           ;incstack = 0
 32974  00599E  0E07               	movlw	7
 32975  0059A0  6FEB               	movwf	(_loRa+235)& (0+255),b
 32976                           
 32977                           ; BSR set to: 2
 32978                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 32979  0059A2  6BEC               	clrf	(_loRa+236)& (0+255),b
 32980                           
 32981                           ; BSR set to: 2
 32982                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 32983  0059A4  0100               	movlb	0	; () banked
 32984  0059A6  6B65               	clrf	UpdateMinMaxChDataRate@i& (0+255),b
 32985  0059A8  D04E               	goto	l11112
 32986  0059AA                     l11100:
 32987                           
 32988                           ; BSR set to: 0
 32989                           ;lorawan.c: 1072: {
 32990                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 32991  0059AA  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 32992  0059AC  0D0E               	mullw	14
 32993  0059AE  0E05               	movlw	low (_Channels+5)
 32994  0059B0  24F3               	addwf	prodl,w,c
 32995  0059B2  6ED9               	movwf	fsr2l,c
 32996  0059B4  0E04               	movlw	high (_Channels+5)
 32997  0059B6  20F4               	addwfc	prodh,w,c
 32998  0059B8  6EDA               	movwf	fsr2h,c
 32999  0059BA  50DF               	movf	223,w,c
 33000  0059BC  0B0F               	andlw	15
 33001  0059BE  0100               	movlb	0	; () banked
 33002  0059C0  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 33003  0059C2  0102               	movlb	2	; () banked
 33004  0059C4  51EB               	movf	(_loRa+235)& (0+255),w,b
 33005  0059C6  0100               	movlb	0	; () banked
 33006  0059C8  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 33007  0059CA  E216               	bc	l2050
 33008                           
 33009                           ; BSR set to: 0
 33010  0059CC  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33011  0059CE  0D0E               	mullw	14
 33012  0059D0  0E04               	movlw	low (_Channels+4)
 33013  0059D2  24F3               	addwf	prodl,w,c
 33014  0059D4  6ED9               	movwf	fsr2l,c
 33015  0059D6  0E04               	movlw	high (_Channels+4)
 33016  0059D8  20F4               	addwfc	prodh,w,c
 33017  0059DA  6EDA               	movwf	fsr2h,c
 33018  0059DC  04DE               	decf	postinc2,w,c
 33019  0059DE  E10C               	bnz	l2050
 33020                           
 33021                           ; BSR set to: 0
 33022                           ;lorawan.c: 1074: {
 33023                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 33024  0059E0  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33025  0059E2  0D0E               	mullw	14
 33026  0059E4  0E05               	movlw	low (_Channels+5)
 33027  0059E6  24F3               	addwf	prodl,w,c
 33028  0059E8  6ED9               	movwf	fsr2l,c
 33029  0059EA  0E04               	movlw	high (_Channels+5)
 33030  0059EC  20F4               	addwfc	prodh,w,c
 33031  0059EE  6EDA               	movwf	fsr2h,c
 33032  0059F0  50DF               	movf	223,w,c
 33033  0059F2  0B0F               	andlw	15
 33034  0059F4  0102               	movlb	2	; () banked
 33035  0059F6  6FEB               	movwf	(_loRa+235)& (0+255),b
 33036  0059F8                     l2050:
 33037                           
 33038                           ;lorawan.c: 1076: }
 33039                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 33040  0059F8  0100               	movlb	0	; () banked
 33041  0059FA  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33042  0059FC  0D0E               	mullw	14
 33043  0059FE  0E05               	movlw	low (_Channels+5)
 33044  005A00  24F3               	addwf	prodl,w,c
 33045  005A02  6ED9               	movwf	fsr2l,c
 33046  005A04  0E04               	movlw	high (_Channels+5)
 33047  005A06  20F4               	addwfc	prodh,w,c
 33048  005A08  6EDA               	movwf	fsr2h,c
 33049  005A0A  38DF               	swapf	223,w,c
 33050  005A0C  0B0F               	andlw	15
 33051  005A0E  0102               	movlb	2	; () banked
 33052  005A10  61EC               	cpfslt	(_loRa+236)& (0+255),b
 33053  005A12  D017               	goto	l11110
 33054                           
 33055                           ; BSR set to: 2
 33056  005A14  0100               	movlb	0	; () banked
 33057  005A16  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33058  005A18  0D0E               	mullw	14
 33059  005A1A  0E04               	movlw	low (_Channels+4)
 33060  005A1C  24F3               	addwf	prodl,w,c
 33061  005A1E  6ED9               	movwf	fsr2l,c
 33062  005A20  0E04               	movlw	high (_Channels+4)
 33063  005A22  20F4               	addwfc	prodh,w,c
 33064  005A24  6EDA               	movwf	fsr2h,c
 33065  005A26  04DE               	decf	postinc2,w,c
 33066  005A28  E10C               	bnz	l11110
 33067                           
 33068                           ; BSR set to: 0
 33069                           ;lorawan.c: 1078: {
 33070                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 33071  005A2A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33072  005A2C  0D0E               	mullw	14
 33073  005A2E  0E05               	movlw	low (_Channels+5)
 33074  005A30  24F3               	addwf	prodl,w,c
 33075  005A32  6ED9               	movwf	fsr2l,c
 33076  005A34  0E04               	movlw	high (_Channels+5)
 33077  005A36  20F4               	addwfc	prodh,w,c
 33078  005A38  6EDA               	movwf	fsr2h,c
 33079  005A3A  38DF               	swapf	223,w,c
 33080  005A3C  0B0F               	andlw	15
 33081  005A3E  0102               	movlb	2	; () banked
 33082  005A40  6FEC               	movwf	(_loRa+236)& (0+255),b
 33083  005A42                     l11110:
 33084  005A42  0100               	movlb	0	; () banked
 33085  005A44  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 33086  005A46                     l11112:
 33087                           
 33088                           ; BSR set to: 0
 33089  005A46  0102               	movlb	2	; () banked
 33090  005A48  51ED               	movf	(_loRa+237)& (0+255),w,b
 33091  005A4A  0100               	movlb	0	; () banked
 33092  005A4C  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 33093  005A4E  E3AD               	bnc	l11100
 33094                           
 33095                           ; BSR set to: 0
 33096  005A50  0012               	return		;funcret
 33097  005A52                     __end_of_UpdateMinMaxChDataRate:
 33098                           	opt stack 0
 33099                           tosu	equ	0xFFF
 33100                           tosh	equ	0xFFE
 33101                           tosl	equ	0xFFD
 33102                           pclath	equ	0xFFA
 33103                           tblptru	equ	0xFF8
 33104                           tblptrh	equ	0xFF7
 33105                           tblptrl	equ	0xFF6
 33106                           tablat	equ	0xFF5
 33107                           prodh	equ	0xFF4
 33108                           prodl	equ	0xFF3
 33109                           intcon	equ	0xFF2
 33110                           intcon2	equ	0xFF1
 33111                           intcon3	equ	0xFF0
 33112                           indf0	equ	0xFEF
 33113                           postinc0	equ	0xFEE
 33114                           plusw0	equ	0xFEB
 33115                           fsr0h	equ	0xFEA
 33116                           fsr0l	equ	0xFE9
 33117                           wreg	equ	0xFE8
 33118                           postinc1	equ	0xFE6
 33119                           postdec1	equ	0xFE5
 33120                           plusw1	equ	0xFE3
 33121                           fsr1h	equ	0xFE2
 33122                           fsr1l	equ	0xFE1
 33123                           indf2	equ	0xFDF
 33124                           postinc2	equ	0xFDE
 33125                           postdec2	equ	0xFDD
 33126                           plusw2	equ	0xFDB
 33127                           fsr2h	equ	0xFDA
 33128                           fsr2l	equ	0xFD9
 33129                           status	equ	0xFD8
 33130                           
 33131 ;; *************** function _StopAllSoftwareTimers *****************
 33132 ;; Defined at:
 33133 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 33134 ;; Parameters:    Size  Location     Type
 33135 ;;		None
 33136 ;; Auto vars:     Size  Location     Type
 33137 ;;		None
 33138 ;; Return value:  Size  Location     Type
 33139 ;;                  1    wreg      void 
 33140 ;; Registers used:
 33141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33142 ;; Tracked objects:
 33143 ;;		On entry : F/2
 33144 ;;		On exit  : F/0
 33145 ;;		Unchanged: 0/0
 33146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33147 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33150 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33151 ;;Total ram usage:        0 bytes
 33152 ;; Hardware stack levels used:    1
 33153 ;; Hardware stack levels required when called:    8
 33154 ;; This function calls:
 33155 ;;		_SwTimerStop
 33156 ;; This function is called by:
 33157 ;;		_LORAWAN_Init
 33158 ;;		_LORAWAN_Reset
 33159 ;; This function uses a non-reentrant model
 33160 ;;
 33161                           
 33162                           	psect	text167
 33163  006BE4                     __ptext167:
 33164                           	opt stack 0
 33165  006BE4                     _StopAllSoftwareTimers:
 33166                           	opt stack 21
 33167                           
 33168                           ; BSR set to: 2
 33169                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 33170                           
 33171                           ; BSR set to: 0
 33172                           ;incstack = 0
 33173  006BE4  51E2               	movf	(_loRa+226)& (0+255),w,b
 33174  006BE6  EC6A  F03B         	call	_SwTimerStop
 33175                           
 33176                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 33177  006BEA  0102               	movlb	2	; () banked
 33178  006BEC  51E3               	movf	(_loRa+227)& (0+255),w,b
 33179  006BEE  EC6A  F03B         	call	_SwTimerStop
 33180                           
 33181                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 33182  006BF2  0102               	movlb	2	; () banked
 33183  006BF4  51E7               	movf	(_loRa+231)& (0+255),w,b
 33184  006BF6  EC6A  F03B         	call	_SwTimerStop
 33185                           
 33186                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 33187  006BFA  0102               	movlb	2	; () banked
 33188  006BFC  51E4               	movf	(_loRa+228)& (0+255),w,b
 33189  006BFE  EC6A  F03B         	call	_SwTimerStop
 33190                           
 33191                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 33192  006C02  0102               	movlb	2	; () banked
 33193  006C04  51E5               	movf	(_loRa+229)& (0+255),w,b
 33194  006C06  EC6A  F03B         	call	_SwTimerStop
 33195                           
 33196                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 33197  006C0A  0102               	movlb	2	; () banked
 33198  006C0C  51E8               	movf	(_loRa+232)& (0+255),w,b
 33199  006C0E  EC6A  F03B         	call	_SwTimerStop
 33200                           
 33201                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 33202  006C12  0102               	movlb	2	; () banked
 33203  006C14  51E6               	movf	(_loRa+230)& (0+255),w,b
 33204  006C16  EC6A  F03B         	call	_SwTimerStop
 33205                           
 33206                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 33207  006C1A  0102               	movlb	2	; () banked
 33208  006C1C  51EA               	movf	(_loRa+234)& (0+255),w,b
 33209  006C1E  EC6A  F03B         	call	_SwTimerStop
 33210                           
 33211                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 33212  006C22  0102               	movlb	2	; () banked
 33213  006C24  51F3               	movf	(_loRa+243)& (0+255),w,b
 33214  006C26  EC6A  F03B         	call	_SwTimerStop
 33215                           
 33216                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 33217  006C2A  0102               	movlb	2	; () banked
 33218  006C2C  51E9               	movf	(_loRa+233)& (0+255),w,b
 33219  006C2E  EF6A  F03B         	goto	_SwTimerStop
 33220  006C32                     __end_of_StopAllSoftwareTimers:
 33221                           	opt stack 0
 33222                           tosu	equ	0xFFF
 33223                           tosh	equ	0xFFE
 33224                           tosl	equ	0xFFD
 33225                           pclath	equ	0xFFA
 33226                           tblptru	equ	0xFF8
 33227                           tblptrh	equ	0xFF7
 33228                           tblptrl	equ	0xFF6
 33229                           tablat	equ	0xFF5
 33230                           prodh	equ	0xFF4
 33231                           prodl	equ	0xFF3
 33232                           intcon	equ	0xFF2
 33233                           intcon2	equ	0xFF1
 33234                           intcon3	equ	0xFF0
 33235                           indf0	equ	0xFEF
 33236                           postinc0	equ	0xFEE
 33237                           plusw0	equ	0xFEB
 33238                           fsr0h	equ	0xFEA
 33239                           fsr0l	equ	0xFE9
 33240                           wreg	equ	0xFE8
 33241                           postinc1	equ	0xFE6
 33242                           postdec1	equ	0xFE5
 33243                           plusw1	equ	0xFE3
 33244                           fsr1h	equ	0xFE2
 33245                           fsr1l	equ	0xFE1
 33246                           indf2	equ	0xFDF
 33247                           postinc2	equ	0xFDE
 33248                           postdec2	equ	0xFDD
 33249                           plusw2	equ	0xFDB
 33250                           fsr2h	equ	0xFDA
 33251                           fsr2l	equ	0xFD9
 33252                           status	equ	0xFD8
 33253                           
 33254 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 33255 ;; Defined at:
 33256 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33257 ;; Parameters:    Size  Location     Type
 33258 ;;  syncWord        1    wreg     unsigned char 
 33259 ;; Auto vars:     Size  Location     Type
 33260 ;;  syncWord        1    4[BANK0 ] unsigned char 
 33261 ;; Return value:  Size  Location     Type
 33262 ;;                  1    wreg      void 
 33263 ;; Registers used:
 33264 ;;		wreg
 33265 ;; Tracked objects:
 33266 ;;		On entry : F/2
 33267 ;;		On exit  : 0/0
 33268 ;;		Unchanged: 0/0
 33269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33271 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33273 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33274 ;;Total ram usage:        1 bytes
 33275 ;; Hardware stack levels used:    1
 33276 ;; Hardware stack levels required when called:    7
 33277 ;; This function calls:
 33278 ;;		Nothing
 33279 ;; This function is called by:
 33280 ;;		_LORAWAN_Reset
 33281 ;;		_ConfigureRadio
 33282 ;; This function uses a non-reentrant model
 33283 ;;
 33284                           
 33285                           	psect	text168
 33286  007A28                     __ptext168:
 33287                           	opt stack 0
 33288  007A28                     _RADIO_SetLoRaSyncWord:
 33289                           	opt stack 18
 33290                           
 33291                           ; BSR set to: 0
 33292                           ;incstack = 0
 33293                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 33294  007A28  0100               	movlb	0	; () banked
 33295  007A2A  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 33296                           
 33297                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 33298  007A2C  C064  F187         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 33299  007A30  0012               	return		;funcret
 33300  007A32                     __end_of_RADIO_SetLoRaSyncWord:
 33301                           	opt stack 0
 33302                           tosu	equ	0xFFF
 33303                           tosh	equ	0xFFE
 33304                           tosl	equ	0xFFD
 33305                           pclath	equ	0xFFA
 33306                           tblptru	equ	0xFF8
 33307                           tblptrh	equ	0xFF7
 33308                           tblptrl	equ	0xFF6
 33309                           tablat	equ	0xFF5
 33310                           prodh	equ	0xFF4
 33311                           prodl	equ	0xFF3
 33312                           intcon	equ	0xFF2
 33313                           intcon2	equ	0xFF1
 33314                           intcon3	equ	0xFF0
 33315                           indf0	equ	0xFEF
 33316                           postinc0	equ	0xFEE
 33317                           plusw0	equ	0xFEB
 33318                           fsr0h	equ	0xFEA
 33319                           fsr0l	equ	0xFE9
 33320                           wreg	equ	0xFE8
 33321                           postinc1	equ	0xFE6
 33322                           postdec1	equ	0xFE5
 33323                           plusw1	equ	0xFE3
 33324                           fsr1h	equ	0xFE2
 33325                           fsr1l	equ	0xFE1
 33326                           indf2	equ	0xFDF
 33327                           postinc2	equ	0xFDE
 33328                           postdec2	equ	0xFDD
 33329                           plusw2	equ	0xFDB
 33330                           fsr2h	equ	0xFDA
 33331                           fsr2l	equ	0xFD9
 33332                           status	equ	0xFD8
 33333                           
 33334 ;; *************** function _RADIO_Init *****************
 33335 ;; Defined at:
 33336 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33337 ;; Parameters:    Size  Location     Type
 33338 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 33339 ;;		 -> radioBuffer(271), 
 33340 ;;  frequency       4   31[BANK0 ] unsigned long 
 33341 ;; Auto vars:     Size  Location     Type
 33342 ;;		None
 33343 ;; Return value:  Size  Location     Type
 33344 ;;                  1    wreg      void 
 33345 ;; Registers used:
 33346 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33347 ;; Tracked objects:
 33348 ;;		On entry : F/0
 33349 ;;		On exit  : F/1
 33350 ;;		Unchanged: 0/0
 33351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33352 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33353 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33354 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33355 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33356 ;;Total ram usage:        7 bytes
 33357 ;; Hardware stack levels used:    1
 33358 ;; Hardware stack levels required when called:   11
 33359 ;; This function calls:
 33360 ;;		_RADIO_RegisterRead
 33361 ;;		_RADIO_RegisterWrite
 33362 ;;		_RADIO_Reset
 33363 ;;		_RADIO_WriteFrequency
 33364 ;;		_RADIO_WriteMode
 33365 ;;		_SwTimerCreate
 33366 ;;		_SwTimerSetCallback
 33367 ;;		_SwTimerStop
 33368 ;; This function is called by:
 33369 ;;		_LORAWAN_Init
 33370 ;;		_LORAWAN_Reset
 33371 ;; This function uses a non-reentrant model
 33372 ;;
 33373                           
 33374                           	psect	text169
 33375  0038C6                     __ptext169:
 33376                           	opt stack 0
 33377  0038C6                     _RADIO_Init:
 33378                           	opt stack 18
 33379                           
 33380                           ; BSR set to: 0
 33381                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 33382                           
 33383                           ;incstack = 0
 33384  0038C6  C07F  F179         	movff	RADIO_Init@frequency,_RadioConfiguration
 33385  0038CA  C080  F17A         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 33386  0038CE  C081  F17B         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 33387  0038D2  C082  F17C         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 33388                           
 33389                           ; BSR set to: 0
 33390                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 33391  0038D6  0EA8               	movlw	168
 33392  0038D8  0101               	movlb	1	; () banked
 33393  0038DA  6F7D               	movwf	(_RadioConfiguration+4)& (0+255),b
 33394  0038DC  0E61               	movlw	97
 33395  0038DE  6F7E               	movwf	(_RadioConfiguration+5)& (0+255),b
 33396  0038E0  6B7F               	clrf	(_RadioConfiguration+6)& (0+255),b
 33397  0038E2  6B80               	clrf	(_RadioConfiguration+7)& (0+255),b
 33398                           
 33399                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 33400  0038E4  0E50               	movlw	80
 33401  0038E6  6F81               	movwf	(_RadioConfiguration+8)& (0+255),b
 33402  0038E8  0EC3               	movlw	195
 33403  0038EA  6F82               	movwf	(_RadioConfiguration+9)& (0+255),b
 33404  0038EC  6B83               	clrf	(_RadioConfiguration+10)& (0+255),b
 33405  0038EE  6B84               	clrf	(_RadioConfiguration+11)& (0+255),b
 33406                           
 33407                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 33408  0038F0  0E01               	movlw	1
 33409  0038F2  6F91               	movwf	(_RadioConfiguration+24)& (0+255),b
 33410                           
 33411                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 33412  0038F4  0E07               	movlw	7
 33413  0038F6  6F93               	movwf	(_RadioConfiguration+26)& (0+255),b
 33414                           
 33415                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 33416  0038F8  0E01               	movlw	1
 33417  0038FA  6F94               	movwf	(_RadioConfiguration+27)& (0+255),b
 33418                           
 33419                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 33420  0038FC  6F9A               	movwf	(_RadioConfiguration+33)& (0+255),b
 33421                           
 33422                           ; BSR set to: 1
 33423                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 33424  0038FE  6B9B               	clrf	(_RadioConfiguration+34)& (0+255),b
 33425                           
 33426                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 33427  003900  6B86               	clrf	(_RadioConfiguration+13)& (0+255),b
 33428  003902  0E08               	movlw	8
 33429  003904  6F85               	movwf	(_RadioConfiguration+12)& (0+255),b
 33430                           
 33431                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 33432  003906  0E0C               	movlw	12
 33433  003908  6F92               	movwf	(_RadioConfiguration+25)& (0+255),b
 33434                           
 33435                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 33436  00390A  0E01               	movlw	1
 33437  00390C  6F95               	movwf	(_RadioConfiguration+28)& (0+255),b
 33438                           
 33439                           ; BSR set to: 1
 33440                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 33441  00390E  6B96               	clrf	(_RadioConfiguration+29)& (0+255),b
 33442                           
 33443                           ; BSR set to: 1
 33444                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 33445  003910  6B99               	clrf	(_RadioConfiguration+32)& (0+255),b
 33446                           
 33447                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 33448  003912  0EC1               	movlw	193
 33449  003914  6F88               	movwf	(_RadioConfiguration+15)& (0+255),b
 33450                           
 33451                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 33452  003916  0E94               	movlw	148
 33453  003918  6F89               	movwf	(_RadioConfiguration+16)& (0+255),b
 33454                           
 33455                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 33456  00391A  0EC1               	movlw	193
 33457  00391C  6F8A               	movwf	(_RadioConfiguration+17)& (0+255),b
 33458                           
 33459                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 33460  00391E  0E03               	movlw	3
 33461  003920  6F90               	movwf	(_RadioConfiguration+23)& (0+255),b
 33462                           
 33463                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 33464  003922  0E34               	movlw	52
 33465  003924  6F87               	movwf	(_RadioConfiguration+14)& (0+255),b
 33466                           
 33467                           ; BSR set to: 1
 33468                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 33469  003926  6B9C               	clrf	(_RadioConfiguration+35)& (0+255),b
 33470                           
 33471                           ; BSR set to: 1
 33472                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 33473  003928  6B9D               	clrf	(_RadioConfiguration+36)& (0+255),b
 33474                           
 33475                           ; BSR set to: 1
 33476                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 33477  00392A  C07D  F19E         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 33478  00392E  C07E  F19F         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 33479                           
 33480                           ; BSR set to: 1
 33481                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 33482  003932  6B97               	clrf	(_RadioConfiguration+30)& (0+255),b
 33483  003934  6B98               	clrf	(_RadioConfiguration+31)& (0+255),b
 33484                           
 33485                           ; BSR set to: 1
 33486                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 33487  003936  0E80               	movlw	128
 33488  003938  6FAB               	movwf	(_RadioConfiguration+50)& (0+255),b
 33489                           
 33490                           ; BSR set to: 1
 33491                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 33492  00393A  0E98               	movlw	152
 33493  00393C  6FA3               	movwf	(_RadioConfiguration+42)& (0+255),b
 33494  00393E  0E3A               	movlw	58
 33495  003940  6FA4               	movwf	(_RadioConfiguration+43)& (0+255),b
 33496  003942  6BA5               	clrf	(_RadioConfiguration+44)& (0+255),b
 33497  003944  6BA6               	clrf	(_RadioConfiguration+45)& (0+255),b
 33498                           
 33499                           ; BSR set to: 1
 33500                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 33501  003946  0E02               	movlw	2
 33502  003948  6FAC               	movwf	(_RadioConfiguration+51)& (0+255),b
 33503                           
 33504                           ; BSR set to: 1
 33505                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 33506  00394A  0E0B               	movlw	11
 33507  00394C  6FAD               	movwf	(_RadioConfiguration+52)& (0+255),b
 33508                           
 33509                           ; BSR set to: 1
 33510                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 33511  00394E  0E12               	movlw	18
 33512  003950  6FAE               	movwf	(_RadioConfiguration+53)& (0+255),b
 33513                           
 33514                           ; BSR set to: 1
 33515                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 33516  003952  6BA8               	clrf	(_RadioConfiguration+47)& (0+255),b
 33517  003954  6BA9               	clrf	(_RadioConfiguration+48)& (0+255),b
 33518                           
 33519                           ; BSR set to: 1
 33520                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 33521  003956  51A7               	movf	(_RadioConfiguration+46)& (0+255),w,b
 33522  003958  E123               	bnz	l14998
 33523                           
 33524                           ; BSR set to: 1
 33525                           ;radio_driver_SX1276.c: 457: {
 33526                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 33527  00395A  ECF9  F031         	call	_SwTimerCreate	;wreg free
 33528  00395E  0101               	movlb	1	; () banked
 33529  003960  6FA0               	movwf	(_RadioConfiguration+39)& (0+255),b
 33530                           
 33531                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 33532  003962  ECF9  F031         	call	_SwTimerCreate	;wreg free
 33533  003966  0101               	movlb	1	; () banked
 33534  003968  6FA1               	movwf	(_RadioConfiguration+40)& (0+255),b
 33535                           
 33536                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 33537  00396A  ECF9  F031         	call	_SwTimerCreate	;wreg free
 33538  00396E  0101               	movlb	1	; () banked
 33539  003970  6FA2               	movwf	(_RadioConfiguration+41)& (0+255),b
 33540                           
 33541                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 33542  003972  0E16               	movlw	low _RADIO_RxFSKTimeout
 33543  003974  0100               	movlb	0	; () banked
 33544  003976  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 33545  003978  0E71               	movlw	high _RADIO_RxFSKTimeout
 33546  00397A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33547  00397C  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 33548  00397E  0101               	movlb	1	; () banked
 33549  003980  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 33550  003982  EC3F  F039         	call	_SwTimerSetCallback
 33551                           
 33552                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 33553  003986  0E38               	movlw	low _RADIO_WatchdogTimeout
 33554  003988  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 33555  00398A  0E6E               	movlw	high _RADIO_WatchdogTimeout
 33556  00398C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 33557  00398E  6B66               	clrf	SwTimerSetCallback@callbackParameter& (0+255),b
 33558  003990  0101               	movlb	1	; () banked
 33559  003992  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 33560  003994  EC3F  F039         	call	_SwTimerSetCallback
 33561                           
 33562                           ; BSR set to: 0
 33563                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 33564  003998  0E01               	movlw	1
 33565  00399A  0101               	movlb	1	; () banked
 33566  00399C  6FA7               	movwf	(_RadioConfiguration+46)& (0+255),b
 33567                           
 33568                           ;radio_driver_SX1276.c: 466: }
 33569  00399E  D00B               	goto	l15000
 33570  0039A0                     l14998:
 33571                           
 33572                           ; BSR set to: 1
 33573                           ;radio_driver_SX1276.c: 467: else
 33574                           ;radio_driver_SX1276.c: 468: {
 33575                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 33576  0039A0  51A0               	movf	(_RadioConfiguration+39)& (0+255),w,b
 33577  0039A2  EC6A  F03B         	call	_SwTimerStop
 33578                           
 33579                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 33580  0039A6  0101               	movlb	1	; () banked
 33581  0039A8  51A1               	movf	(_RadioConfiguration+40)& (0+255),w,b
 33582  0039AA  EC6A  F03B         	call	_SwTimerStop
 33583                           
 33584                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 33585  0039AE  0101               	movlb	1	; () banked
 33586  0039B0  51A2               	movf	(_RadioConfiguration+41)& (0+255),w,b
 33587  0039B2  EC6A  F03B         	call	_SwTimerStop
 33588  0039B6                     l15000:
 33589                           
 33590                           ;radio_driver_SX1276.c: 472: }
 33591                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 33592  0039B6  ECDA  F038         	call	_RADIO_Reset	;wreg free
 33593                           
 33594                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 33595  0039BA  0E00               	movlw	0
 33596  0039BC  0100               	movlb	0	; () banked
 33597  0039BE  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33598  0039C0  0E01               	movlw	1
 33599  0039C2  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33600  0039C4  ECB9  F029         	call	_RADIO_WriteMode
 33601                           
 33602                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 33603  0039C8  C179  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 33604  0039CC  C17A  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 33605  0039D0  C17B  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 33606  0039D4  C17C  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 33607  0039D8  EC4B  F029         	call	_RADIO_WriteFrequency	;wreg free
 33608                           
 33609                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 33610  0039DC  0E42               	movlw	66
 33611  0039DE  0100               	movlb	0	; () banked
 33612  0039E0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33613  0039E2  0E3B               	movlw	59
 33614  0039E4  EC3D  F03B         	call	_RADIO_RegisterWrite
 33615  0039E8                     l15008:
 33616  0039E8  0E3B               	movlw	59
 33617  0039EA  EC41  F03A         	call	_RADIO_RegisterRead
 33618  0039EE  6F83               	movwf	??_RADIO_Init& (0+255),b
 33619  0039F0  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 33620  0039F2  D7FA               	goto	l15008
 33621                           
 33622                           ; BSR set to: 0
 33623                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 33624  0039F4  0E23               	movlw	35
 33625  0039F6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33626  0039F8  0E0C               	movlw	12
 33627  0039FA  EC3D  F03B         	call	_RADIO_RegisterWrite
 33628                           
 33629                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 33630  0039FE  0E1E               	movlw	30
 33631  003A00  0100               	movlb	0	; () banked
 33632  003A02  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33633  003A04  0E0D               	movlw	13
 33634  003A06  EC3D  F03B         	call	_RADIO_RegisterWrite
 33635                           
 33636                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 33637  003A0A  0EAA               	movlw	170
 33638  003A0C  0100               	movlb	0	; () banked
 33639  003A0E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33640  003A10  0E1F               	movlw	31
 33641  003A12  EC3D  F03B         	call	_RADIO_RegisterWrite
 33642                           
 33643                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 33644  003A16  0E8F               	movlw	143
 33645  003A18  0100               	movlb	0	; () banked
 33646  003A1A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33647  003A1C  0E35               	movlw	53
 33648  003A1E  EC3D  F03B         	call	_RADIO_RegisterWrite
 33649                           
 33650                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 33651  003A22  0100               	movlb	0	; () banked
 33652  003A24  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 33653  003A26  0E32               	movlw	50
 33654  003A28  EC3D  F03B         	call	_RADIO_RegisterWrite
 33655                           
 33656                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 33657  003A2C  0E40               	movlw	64
 33658  003A2E  0100               	movlb	0	; () banked
 33659  003A30  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33660  003A32  0E31               	movlw	49
 33661  003A34  EC3D  F03B         	call	_RADIO_RegisterWrite
 33662                           
 33663                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 33664  003A38  0E01               	movlw	1
 33665  003A3A  0100               	movlb	0	; () banked
 33666  003A3C  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 33667  003A3E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 33668  003A40  0E00               	movlw	0
 33669  003A42  ECB9  F029         	call	_RADIO_WriteMode
 33670                           
 33671                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 33672  003A46  0100               	movlb	0	; () banked
 33673  003A48  6966               	setf	RADIO_RegisterWrite@value& (0+255),b
 33674  003A4A  0E23               	movlw	35
 33675  003A4C  EC3D  F03B         	call	_RADIO_RegisterWrite
 33676                           
 33677                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 33678  003A50  0E42               	movlw	66
 33679  003A52  EC41  F03A         	call	_RADIO_RegisterRead
 33680  003A56  0101               	movlb	1	; () banked
 33681  003A58  6FAA               	movwf	(_RadioConfiguration+49)& (0+255),b
 33682                           
 33683                           ; BSR set to: 1
 33684  003A5A  0012               	return		;funcret
 33685  003A5C                     __end_of_RADIO_Init:
 33686                           	opt stack 0
 33687                           tosu	equ	0xFFF
 33688                           tosh	equ	0xFFE
 33689                           tosl	equ	0xFFD
 33690                           pclath	equ	0xFFA
 33691                           tblptru	equ	0xFF8
 33692                           tblptrh	equ	0xFF7
 33693                           tblptrl	equ	0xFF6
 33694                           tablat	equ	0xFF5
 33695                           prodh	equ	0xFF4
 33696                           prodl	equ	0xFF3
 33697                           intcon	equ	0xFF2
 33698                           intcon2	equ	0xFF1
 33699                           intcon3	equ	0xFF0
 33700                           indf0	equ	0xFEF
 33701                           postinc0	equ	0xFEE
 33702                           plusw0	equ	0xFEB
 33703                           fsr0h	equ	0xFEA
 33704                           fsr0l	equ	0xFE9
 33705                           wreg	equ	0xFE8
 33706                           postinc1	equ	0xFE6
 33707                           postdec1	equ	0xFE5
 33708                           plusw1	equ	0xFE3
 33709                           fsr1h	equ	0xFE2
 33710                           fsr1l	equ	0xFE1
 33711                           indf2	equ	0xFDF
 33712                           postinc2	equ	0xFDE
 33713                           postdec2	equ	0xFDD
 33714                           plusw2	equ	0xFDB
 33715                           fsr2h	equ	0xFDA
 33716                           fsr2l	equ	0xFD9
 33717                           status	equ	0xFD8
 33718                           
 33719 ;; *************** function _SwTimerSetCallback *****************
 33720 ;; Defined at:
 33721 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 33722 ;; Parameters:    Size  Location     Type
 33723 ;;  timerId         1    wreg     unsigned char 
 33724 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 33725 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 33726 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 33727 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 33728 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 33729 ;; Auto vars:     Size  Location     Type
 33730 ;;  timerId         1    7[BANK0 ] unsigned char 
 33731 ;; Return value:  Size  Location     Type
 33732 ;;                  1    wreg      void 
 33733 ;; Registers used:
 33734 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 33735 ;; Tracked objects:
 33736 ;;		On entry : C/2
 33737 ;;		On exit  : F/0
 33738 ;;		Unchanged: 0/0
 33739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33740 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33741 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33743 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33744 ;;Total ram usage:        4 bytes
 33745 ;; Hardware stack levels used:    1
 33746 ;; Hardware stack levels required when called:    7
 33747 ;; This function calls:
 33748 ;;		Nothing
 33749 ;; This function is called by:
 33750 ;;		_RADIO_Init
 33751 ;;		_SetCallbackSoftwareTimers
 33752 ;; This function uses a non-reentrant model
 33753 ;;
 33754                           
 33755                           	psect	text170
 33756  00727E                     __ptext170:
 33757                           	opt stack 0
 33758  00727E                     _SwTimerSetCallback:
 33759                           	opt stack 21
 33760                           
 33761                           ; BSR set to: 1
 33762                           ;incstack = 0
 33763                           ;SwTimerSetCallback@timerId stored from wreg
 33764  00727E  0100               	movlb	0	; () banked
 33765  007280  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 33766                           
 33767                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 33768  007282  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 33769  007284  0D08               	mullw	8
 33770  007286  0E06               	movlw	low (_swTimers+6)
 33771  007288  24F3               	addwf	prodl,w,c
 33772  00728A  6ED9               	movwf	fsr2l,c
 33773  00728C  0E03               	movlw	high (_swTimers+6)
 33774  00728E  20F4               	addwfc	prodh,w,c
 33775  007290  6EDA               	movwf	fsr2h,c
 33776  007292  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 33777  007296  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 33778                           
 33779                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 33780  00729A  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 33781  00729C  0D08               	mullw	8
 33782  00729E  0E05               	movlw	low (_swTimers+5)
 33783  0072A0  24F3               	addwf	prodl,w,c
 33784  0072A2  6ED9               	movwf	fsr2l,c
 33785  0072A4  0E03               	movlw	high (_swTimers+5)
 33786  0072A6  20F4               	addwfc	prodh,w,c
 33787  0072A8  6EDA               	movwf	fsr2h,c
 33788  0072AA  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 33789                           
 33790                           ; BSR set to: 0
 33791  0072AE  0012               	return		;funcret
 33792  0072B0                     __end_of_SwTimerSetCallback:
 33793                           	opt stack 0
 33794                           tosu	equ	0xFFF
 33795                           tosh	equ	0xFFE
 33796                           tosl	equ	0xFFD
 33797                           pclath	equ	0xFFA
 33798                           tblptru	equ	0xFF8
 33799                           tblptrh	equ	0xFF7
 33800                           tblptrl	equ	0xFF6
 33801                           tablat	equ	0xFF5
 33802                           prodh	equ	0xFF4
 33803                           prodl	equ	0xFF3
 33804                           intcon	equ	0xFF2
 33805                           intcon2	equ	0xFF1
 33806                           intcon3	equ	0xFF0
 33807                           indf0	equ	0xFEF
 33808                           postinc0	equ	0xFEE
 33809                           plusw0	equ	0xFEB
 33810                           fsr0h	equ	0xFEA
 33811                           fsr0l	equ	0xFE9
 33812                           wreg	equ	0xFE8
 33813                           postinc1	equ	0xFE6
 33814                           postdec1	equ	0xFE5
 33815                           plusw1	equ	0xFE3
 33816                           fsr1h	equ	0xFE2
 33817                           fsr1l	equ	0xFE1
 33818                           indf2	equ	0xFDF
 33819                           postinc2	equ	0xFDE
 33820                           postdec2	equ	0xFDD
 33821                           plusw2	equ	0xFDB
 33822                           fsr2h	equ	0xFDA
 33823                           fsr2l	equ	0xFD9
 33824                           status	equ	0xFD8
 33825                           
 33826 ;; *************** function _RADIO_WriteMode *****************
 33827 ;; Defined at:
 33828 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 33829 ;; Parameters:    Size  Location     Type
 33830 ;;  newMode         1    wreg     enum E8492
 33831 ;;  newModulatio    1    9[BANK0 ] enum E7751
 33832 ;;  blocking        1   10[BANK0 ] unsigned char 
 33833 ;; Auto vars:     Size  Location     Type
 33834 ;;  newMode         1   14[BANK0 ] enum E8492
 33835 ;;  opMode          1   15[BANK0 ] unsigned char 
 33836 ;;  currentMode     1   13[BANK0 ] enum E8492
 33837 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 33838 ;;  currentModul    1   11[BANK0 ] enum E7751
 33839 ;; Return value:  Size  Location     Type
 33840 ;;                  1    wreg      void 
 33841 ;; Registers used:
 33842 ;;		wreg, status,2, status,0, cstack
 33843 ;; Tracked objects:
 33844 ;;		On entry : F/0
 33845 ;;		On exit  : 0/0
 33846 ;;		Unchanged: 0/0
 33847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33848 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33849 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33851 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33852 ;;Total ram usage:        7 bytes
 33853 ;; Hardware stack levels used:    1
 33854 ;; Hardware stack levels required when called:   10
 33855 ;; This function calls:
 33856 ;;		_HALDIO5PinValue
 33857 ;;		_RADIO_RegisterRead
 33858 ;;		_RADIO_RegisterWrite
 33859 ;;		_SystemBlockingWaitMs
 33860 ;; This function is called by:
 33861 ;;		_RADIO_Init
 33862 ;;		_RADIO_WriteConfiguration
 33863 ;;		_RADIO_Transmit
 33864 ;;		_RADIO_ReceiveStart
 33865 ;;		_RADIO_ReceiveStop
 33866 ;;		_RADIO_RxDone
 33867 ;;		_RADIO_FSKPayloadReady
 33868 ;;		_RADIO_RxTimeout
 33869 ;;		_RADIO_TxDone
 33870 ;;		_RADIO_FSKPacketSent
 33871 ;;		_RADIO_ReadRandom
 33872 ;;		_RADIO_RxFSKTimeout
 33873 ;;		_RADIO_WatchdogTimeout
 33874 ;; This function uses a non-reentrant model
 33875 ;;
 33876                           
 33877                           	psect	text171
 33878  005372                     __ptext171:
 33879                           	opt stack 0
 33880  005372                     _RADIO_WriteMode:
 33881                           	opt stack 17
 33882                           
 33883                           ; BSR set to: 0
 33884                           ;incstack = 0
 33885                           ;RADIO_WriteMode@newMode stored from wreg
 33886  005372  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 33887                           
 33888                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 33889                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 33890                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 33891                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 33892                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 33893                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 33894  005374  0100               	movlb	0	; () banked
 33895  005376  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33896  005378  E108               	bnz	l12348
 33897                           
 33898                           ; BSR set to: 0
 33899  00537A  0E06               	movlw	6
 33900  00537C  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33901  00537E  B4D8               	btfsc	status,2,c
 33902  005380  0012               	return	
 33903                           
 33904                           ; BSR set to: 0
 33905  005382  0E07               	movlw	7
 33906  005384  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 33907  005386  E101               	bnz	l12348
 33908  005388  0012               	return	
 33909  00538A                     l12348:
 33910                           
 33911                           ; BSR set to: 0
 33912                           ;radio_driver_SX1276.c: 159: }
 33913                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 33914  00538A  0E07               	movlw	7
 33915  00538C  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 33916                           
 33917                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 33918  00538E  0E01               	movlw	1
 33919  005390  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 33920                           
 33921                           ; BSR set to: 0
 33922                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 33923  005392  EC41  F03A         	call	_RADIO_RegisterRead
 33924  005396  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 33925                           
 33926                           ; BSR set to: 0
 33927                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 33928  005398  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 33929  00539A  D003               	goto	l384
 33930                           
 33931                           ; BSR set to: 0
 33932                           ;radio_driver_SX1276.c: 168: {
 33933                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 33934  00539C  0E01               	movlw	1
 33935  00539E  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 33936                           
 33937                           ;radio_driver_SX1276.c: 170: }
 33938  0053A0  D001               	goto	l12356
 33939  0053A2                     l384:
 33940                           
 33941                           ; BSR set to: 0
 33942                           ;radio_driver_SX1276.c: 171: else
 33943                           ;radio_driver_SX1276.c: 172: {
 33944                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 33945  0053A2  6B6B               	clrf	RADIO_WriteMode@currentModulation& (0+255),b
 33946  0053A4                     l12356:
 33947                           
 33948                           ; BSR set to: 0
 33949                           ;radio_driver_SX1276.c: 174: }
 33950                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 33951  0053A4  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33952  0053A6  0B07               	andlw	7
 33953  0053A8  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 33954                           
 33955                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 33956  0053AA  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 33957  0053AC  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 33958  0053AE  E018               	bz	l12372
 33959                           
 33960                           ; BSR set to: 0
 33961                           ;radio_driver_SX1276.c: 181: {
 33962                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 33963  0053B0  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 33964  0053B2  E008               	bz	l12364
 33965                           
 33966                           ; BSR set to: 0
 33967                           ;radio_driver_SX1276.c: 184: {
 33968                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 33969  0053B4  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 33970  0053B6  0BF8               	andlw	248
 33971  0053B8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 33972  0053BA  0E01               	movlw	1
 33973  0053BC  EC3D  F03B         	call	_RADIO_RegisterWrite
 33974                           
 33975                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 33976  0053C0  0100               	movlb	0	; () banked
 33977  0053C2  6B6D               	clrf	RADIO_WriteMode@currentMode& (0+255),b
 33978  0053C4                     l12364:
 33979                           
 33980                           ; BSR set to: 0
 33981                           ;radio_driver_SX1276.c: 188: }
 33982                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 33983  0053C4  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 33984  0053C6  E103               	bnz	l12368
 33985                           
 33986                           ; BSR set to: 0
 33987                           ;radio_driver_SX1276.c: 191: {
 33988                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 33989  0053C8  0E78               	movlw	120
 33990  0053CA  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 33991                           
 33992                           ;radio_driver_SX1276.c: 194: }
 33993  0053CC  D004               	goto	l12370
 33994  0053CE                     l12368:
 33995                           
 33996                           ; BSR set to: 0
 33997                           ;radio_driver_SX1276.c: 195: else
 33998                           ;radio_driver_SX1276.c: 196: {
 33999                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 34000  0053CE  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 34001  0053D0  0B78               	andlw	120
 34002  0053D2  0980               	iorlw	128
 34003  0053D4  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 34004  0053D6                     l12370:
 34005                           
 34006                           ; BSR set to: 0
 34007                           ;radio_driver_SX1276.c: 199: }
 34008                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 34009  0053D6  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 34010  0053DA  0E01               	movlw	1
 34011  0053DC  EC3D  F03B         	call	_RADIO_RegisterWrite
 34012  0053E0                     l12372:
 34013                           
 34014                           ;radio_driver_SX1276.c: 201: }
 34015                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 34016  0053E0  0100               	movlb	0	; () banked
 34017  0053E2  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 34018  0053E4  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 34019  0053E6  B4D8               	btfsc	status,2,c
 34020  0053E8  0012               	return	
 34021                           
 34022                           ; BSR set to: 0
 34023                           ;radio_driver_SX1276.c: 208: {
 34024                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 34025  0053EA  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 34026  0053EC  E012               	bz	l12388
 34027                           
 34028                           ; BSR set to: 0
 34029  0053EE  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 34030  0053F0  E110               	bnz	l12388
 34031                           
 34032                           ; BSR set to: 0
 34033                           ;radio_driver_SX1276.c: 212: {
 34034                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 34035  0053F2  0E41               	movlw	65
 34036  0053F4  EC41  F03A         	call	_RADIO_RegisterRead
 34037  0053F8  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 34038                           
 34039                           ; BSR set to: 0
 34040                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 34041  0053FA  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 34042  0053FC  E103               	bnz	l12384
 34043                           
 34044                           ; BSR set to: 0
 34045                           ;radio_driver_SX1276.c: 215: {
 34046                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 34047  0053FE  0E30               	movlw	48
 34048  005400  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 34049                           
 34050                           ;radio_driver_SX1276.c: 218: }
 34051  005402  D002               	goto	l12386
 34052  005404                     l12384:
 34053                           
 34054                           ; BSR set to: 0
 34055                           ;radio_driver_SX1276.c: 219: else
 34056                           ;radio_driver_SX1276.c: 220: {
 34057                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 34058  005404  0ECF               	movlw	207
 34059  005406  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 34060  005408                     l12386:
 34061                           
 34062                           ; BSR set to: 0
 34063                           ;radio_driver_SX1276.c: 223: }
 34064                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 34065  005408  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 34066  00540C  0E41               	movlw	65
 34067  00540E  EC3D  F03B         	call	_RADIO_RegisterWrite
 34068  005412                     l12388:
 34069                           
 34070                           ;radio_driver_SX1276.c: 225: }
 34071                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 34072  005412  0EF8               	movlw	248
 34073  005414  0100               	movlb	0	; () banked
 34074  005416  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 34075                           
 34076                           ; BSR set to: 0
 34077                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 34078  005418  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 34079  00541A  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 34080                           
 34081                           ; BSR set to: 0
 34082                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 34083  00541C  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 34084  005420  0E01               	movlw	1
 34085  005422  EC3D  F03B         	call	_RADIO_RegisterWrite
 34086                           
 34087                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 34088  005426  0100               	movlb	0	; () banked
 34089  005428  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 34090  00542A  A4D8               	btfss	status,2,c
 34091  00542C  0012               	return	
 34092                           
 34093                           ; BSR set to: 0
 34094                           ;radio_driver_SX1276.c: 234: {
 34095                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 34096  00542E  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 34097  005430  E005               	bz	l12400
 34098  005432                     l12398:
 34099  005432  EC4E  F03D         	call	_HALDIO5PinValue	;wreg free
 34100  005436  0900               	iorlw	0
 34101  005438  E0FC               	bz	l12398
 34102  00543A  0012               	return	
 34103  00543C                     l12400:
 34104                           
 34105                           ; BSR set to: 0
 34106                           ;radio_driver_SX1276.c: 240: else
 34107                           ;radio_driver_SX1276.c: 241: {
 34108                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 34109  00543C  0E01               	movlw	1
 34110  00543E  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 34111  005440  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 34112  005442  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 34113  005444  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 34114  005446  EFDC  F039         	goto	_SystemBlockingWaitMs	;wreg free
 34115  00544A                     __end_of_RADIO_WriteMode:
 34116                           	opt stack 0
 34117                           tosu	equ	0xFFF
 34118                           tosh	equ	0xFFE
 34119                           tosl	equ	0xFFD
 34120                           pclath	equ	0xFFA
 34121                           tblptru	equ	0xFF8
 34122                           tblptrh	equ	0xFF7
 34123                           tblptrl	equ	0xFF6
 34124                           tablat	equ	0xFF5
 34125                           prodh	equ	0xFF4
 34126                           prodl	equ	0xFF3
 34127                           intcon	equ	0xFF2
 34128                           intcon2	equ	0xFF1
 34129                           intcon3	equ	0xFF0
 34130                           indf0	equ	0xFEF
 34131                           postinc0	equ	0xFEE
 34132                           plusw0	equ	0xFEB
 34133                           fsr0h	equ	0xFEA
 34134                           fsr0l	equ	0xFE9
 34135                           wreg	equ	0xFE8
 34136                           postinc1	equ	0xFE6
 34137                           postdec1	equ	0xFE5
 34138                           plusw1	equ	0xFE3
 34139                           fsr1h	equ	0xFE2
 34140                           fsr1l	equ	0xFE1
 34141                           indf2	equ	0xFDF
 34142                           postinc2	equ	0xFDE
 34143                           postdec2	equ	0xFDD
 34144                           plusw2	equ	0xFDB
 34145                           fsr2h	equ	0xFDA
 34146                           fsr2l	equ	0xFD9
 34147                           status	equ	0xFD8
 34148                           
 34149 ;; *************** function _RADIO_RegisterRead *****************
 34150 ;; Defined at:
 34151 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34152 ;; Parameters:    Size  Location     Type
 34153 ;;  reg             1    wreg     unsigned char 
 34154 ;; Auto vars:     Size  Location     Type
 34155 ;;  reg             1    6[BANK0 ] unsigned char 
 34156 ;;  readValue       1    7[BANK0 ] unsigned char 
 34157 ;; Return value:  Size  Location     Type
 34158 ;;                  1    wreg      unsigned char 
 34159 ;; Registers used:
 34160 ;;		wreg, status,2, status,0, cstack
 34161 ;; Tracked objects:
 34162 ;;		On entry : 0/0
 34163 ;;		On exit  : F/0
 34164 ;;		Unchanged: 0/0
 34165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34167 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34168 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34169 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34170 ;;Total ram usage:        2 bytes
 34171 ;; Hardware stack levels used:    1
 34172 ;; Hardware stack levels required when called:    9
 34173 ;; This function calls:
 34174 ;;		_HALSPICSAssert
 34175 ;;		_HALSPICSDeassert
 34176 ;;		_HALSPISend
 34177 ;; This function is called by:
 34178 ;;		_RADIO_WriteMode
 34179 ;;		_RADIO_WritePower
 34180 ;;		_RADIO_Init
 34181 ;;		_RADIO_WriteConfiguration
 34182 ;;		_RADIO_Transmit
 34183 ;;		_RADIO_RxDone
 34184 ;;		_RADIO_FSKPayloadReady
 34185 ;;		_RADIO_FSKPacketSent
 34186 ;;		_RADIO_FHSSChangeChannel
 34187 ;;		_RADIO_DIO0
 34188 ;;		_RADIO_DIO1
 34189 ;;		_RADIO_DIO2
 34190 ;;		_RADIO_DIO3
 34191 ;;		_RADIO_DIO4
 34192 ;;		_RADIO_DIO5
 34193 ;;		_RADIO_ReadRandom
 34194 ;;		_RADIO_RxFSKTimeout
 34195 ;; This function uses a non-reentrant model
 34196 ;;
 34197                           
 34198                           	psect	text172
 34199  007482                     __ptext172:
 34200                           	opt stack 0
 34201  007482                     _RADIO_RegisterRead:
 34202                           	opt stack 17
 34203                           
 34204                           ;incstack = 0
 34205                           ;RADIO_RegisterRead@reg stored from wreg
 34206  007482  0100               	movlb	0	; () banked
 34207  007484  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 34208                           
 34209                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 34210                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 34211  007486  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 34212                           
 34213                           ; BSR set to: 0
 34214                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 34215  007488  EC5F  F03D         	call	_HALSPICSAssert	;wreg free
 34216                           
 34217                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 34218  00748C  0100               	movlb	0	; () banked
 34219  00748E  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 34220  007490  EC19  F03D         	call	_HALSPISend
 34221                           
 34222                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 34223  007494  0EFF               	movlw	255
 34224  007496  EC19  F03D         	call	_HALSPISend
 34225  00749A  0100               	movlb	0	; () banked
 34226  00749C  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 34227                           
 34228                           ; BSR set to: 0
 34229                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 34230  00749E  EC5D  F03D         	call	_HALSPICSDeassert	;wreg free
 34231                           
 34232                           ;radio_driver_SX1276.c: 142: return readValue;
 34233  0074A2  0100               	movlb	0	; () banked
 34234  0074A4  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 34235                           
 34236                           ; BSR set to: 0
 34237  0074A6  0012               	return		;funcret
 34238  0074A8                     __end_of_RADIO_RegisterRead:
 34239                           	opt stack 0
 34240                           tosu	equ	0xFFF
 34241                           tosh	equ	0xFFE
 34242                           tosl	equ	0xFFD
 34243                           pclath	equ	0xFFA
 34244                           tblptru	equ	0xFF8
 34245                           tblptrh	equ	0xFF7
 34246                           tblptrl	equ	0xFF6
 34247                           tablat	equ	0xFF5
 34248                           prodh	equ	0xFF4
 34249                           prodl	equ	0xFF3
 34250                           intcon	equ	0xFF2
 34251                           intcon2	equ	0xFF1
 34252                           intcon3	equ	0xFF0
 34253                           indf0	equ	0xFEF
 34254                           postinc0	equ	0xFEE
 34255                           plusw0	equ	0xFEB
 34256                           fsr0h	equ	0xFEA
 34257                           fsr0l	equ	0xFE9
 34258                           wreg	equ	0xFE8
 34259                           postinc1	equ	0xFE6
 34260                           postdec1	equ	0xFE5
 34261                           plusw1	equ	0xFE3
 34262                           fsr1h	equ	0xFE2
 34263                           fsr1l	equ	0xFE1
 34264                           indf2	equ	0xFDF
 34265                           postinc2	equ	0xFDE
 34266                           postdec2	equ	0xFDD
 34267                           plusw2	equ	0xFDB
 34268                           fsr2h	equ	0xFDA
 34269                           fsr2l	equ	0xFD9
 34270                           status	equ	0xFD8
 34271                           
 34272 ;; *************** function _HALDIO5PinValue *****************
 34273 ;; Defined at:
 34274 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34275 ;; Parameters:    Size  Location     Type
 34276 ;;		None
 34277 ;; Auto vars:     Size  Location     Type
 34278 ;;		None
 34279 ;; Return value:  Size  Location     Type
 34280 ;;                  1    wreg      unsigned char 
 34281 ;; Registers used:
 34282 ;;		wreg
 34283 ;; Tracked objects:
 34284 ;;		On entry : 0/0
 34285 ;;		On exit  : 0/0
 34286 ;;		Unchanged: 0/0
 34287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34289 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34290 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34291 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34292 ;;Total ram usage:        0 bytes
 34293 ;; Hardware stack levels used:    1
 34294 ;; Hardware stack levels required when called:    7
 34295 ;; This function calls:
 34296 ;;		Nothing
 34297 ;; This function is called by:
 34298 ;;		_RADIO_WriteMode
 34299 ;; This function uses a non-reentrant model
 34300 ;;
 34301                           
 34302                           	psect	text173
 34303  007A9C                     __ptext173:
 34304                           	opt stack 0
 34305  007A9C                     _HALDIO5PinValue:
 34306                           	opt stack 19
 34307                           
 34308                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 34309                           
 34310                           ; BSR set to: 0
 34311                           ;incstack = 0
 34312  007A9C  B081               	btfsc	3969,0,c	;volatile
 34313  007A9E  0C01               	retlw	1
 34314  007AA0  0C00               	retlw	0	;funcret
 34315  007AA2                     __end_of_HALDIO5PinValue:
 34316                           	opt stack 0
 34317                           tosu	equ	0xFFF
 34318                           tosh	equ	0xFFE
 34319                           tosl	equ	0xFFD
 34320                           pclath	equ	0xFFA
 34321                           tblptru	equ	0xFF8
 34322                           tblptrh	equ	0xFF7
 34323                           tblptrl	equ	0xFF6
 34324                           tablat	equ	0xFF5
 34325                           prodh	equ	0xFF4
 34326                           prodl	equ	0xFF3
 34327                           intcon	equ	0xFF2
 34328                           intcon2	equ	0xFF1
 34329                           intcon3	equ	0xFF0
 34330                           indf0	equ	0xFEF
 34331                           postinc0	equ	0xFEE
 34332                           plusw0	equ	0xFEB
 34333                           fsr0h	equ	0xFEA
 34334                           fsr0l	equ	0xFE9
 34335                           wreg	equ	0xFE8
 34336                           postinc1	equ	0xFE6
 34337                           postdec1	equ	0xFE5
 34338                           plusw1	equ	0xFE3
 34339                           fsr1h	equ	0xFE2
 34340                           fsr1l	equ	0xFE1
 34341                           indf2	equ	0xFDF
 34342                           postinc2	equ	0xFDE
 34343                           postdec2	equ	0xFDD
 34344                           plusw2	equ	0xFDB
 34345                           fsr2h	equ	0xFDA
 34346                           fsr2l	equ	0xFD9
 34347                           status	equ	0xFD8
 34348                           
 34349 ;; *************** function _RADIO_WriteFrequency *****************
 34350 ;; Defined at:
 34351 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34352 ;; Parameters:    Size  Location     Type
 34353 ;;  frequency       4   17[BANK0 ] unsigned long 
 34354 ;; Auto vars:     Size  Location     Type
 34355 ;;  num             4   25[BANK0 ] unsigned long 
 34356 ;;  num_mod         4   21[BANK0 ] unsigned long 
 34357 ;; Return value:  Size  Location     Type
 34358 ;;                  1    wreg      void 
 34359 ;; Registers used:
 34360 ;;		wreg, status,2, status,0, cstack
 34361 ;; Tracked objects:
 34362 ;;		On entry : 0/0
 34363 ;;		On exit  : 0/0
 34364 ;;		Unchanged: 0/0
 34365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34366 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34367 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34369 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34370 ;;Total ram usage:       12 bytes
 34371 ;; Hardware stack levels used:    1
 34372 ;; Hardware stack levels required when called:   10
 34373 ;; This function calls:
 34374 ;;		_RADIO_RegisterWrite
 34375 ;;		___lldiv
 34376 ;;		___llmod
 34377 ;; This function is called by:
 34378 ;;		_RADIO_Init
 34379 ;;		_RADIO_WriteConfiguration
 34380 ;;		_RADIO_FHSSChangeChannel
 34381 ;; This function uses a non-reentrant model
 34382 ;;
 34383                           
 34384                           	psect	text174
 34385  005296                     __ptext174:
 34386                           	opt stack 0
 34387  005296                     _RADIO_WriteFrequency:
 34388                           	opt stack 16
 34389                           
 34390                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 34391                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 34392                           
 34393                           ;incstack = 0
 34394  005296  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 34395  00529A  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 34396  00529E  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 34397  0052A2  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 34398  0052A6  0E09               	movlw	9
 34399  0052A8  0100               	movlb	0	; () banked
 34400  0052AA  6F68               	movwf	___lldiv@divisor& (0+255),b
 34401  0052AC  0E3D               	movlw	61
 34402  0052AE  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 34403  0052B0  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34404  0052B2  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34405  0052B4  EC1B  F031         	call	___lldiv	;wreg free
 34406  0052B8  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 34407  0052BC  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 34408  0052C0  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 34409  0052C4  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 34410                           
 34411                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 34412  0052C8  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 34413  0052CC  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 34414  0052D0  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 34415  0052D4  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 34416  0052D8  0E09               	movlw	9
 34417  0052DA  6F68               	movwf	___llmod@divisor& (0+255),b
 34418  0052DC  0E3D               	movlw	61
 34419  0052DE  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 34420  0052E0  6B6A               	clrf	(___llmod@divisor+2)& (0+255),b
 34421  0052E2  6B6B               	clrf	(___llmod@divisor+3)& (0+255),b
 34422  0052E4  EC90  F033         	call	___llmod	;wreg free
 34423  0052E8  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 34424  0052EC  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 34425  0052F0  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 34426  0052F4  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 34427                           
 34428                           ; BSR set to: 0
 34429                           ;radio_driver_SX1276.c: 277: num <<= (8);
 34430  0052F8  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 34431  0052FC  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 34432  005300  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 34433  005304  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 34434                           
 34435                           ; BSR set to: 0
 34436                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 34437  005306  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 34438  00530A  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 34439  00530E  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 34440  005312  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 34441                           
 34442                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 34443  005314  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 34444  005318  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 34445  00531C  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 34446  005320  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 34447  005324  0E09               	movlw	9
 34448  005326  6F68               	movwf	___lldiv@divisor& (0+255),b
 34449  005328  0E3D               	movlw	61
 34450  00532A  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 34451  00532C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 34452  00532E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 34453  005330  EC1B  F031         	call	___lldiv	;wreg free
 34454  005334  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 34455  005338  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 34456  00533C  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 34457  005340  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 34458                           
 34459                           ; BSR set to: 0
 34460                           ;radio_driver_SX1276.c: 283: num += num_mod;
 34461  005344  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 34462  005346  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 34463  005348  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 34464  00534A  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 34465  00534C  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 34466  00534E  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 34467  005350  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 34468  005352  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 34469                           
 34470                           ; BSR set to: 0
 34471                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 34472  005354  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 34473  005358  0E06               	movlw	6
 34474  00535A  EC3D  F03B         	call	_RADIO_RegisterWrite
 34475                           
 34476                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 34477  00535E  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 34478  005362  0E07               	movlw	7
 34479  005364  EC3D  F03B         	call	_RADIO_RegisterWrite
 34480                           
 34481                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 34482  005368  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 34483  00536C  0E08               	movlw	8
 34484  00536E  EF3D  F03B         	goto	_RADIO_RegisterWrite
 34485  005372                     __end_of_RADIO_WriteFrequency:
 34486                           	opt stack 0
 34487                           tosu	equ	0xFFF
 34488                           tosh	equ	0xFFE
 34489                           tosl	equ	0xFFD
 34490                           pclath	equ	0xFFA
 34491                           tblptru	equ	0xFF8
 34492                           tblptrh	equ	0xFF7
 34493                           tblptrl	equ	0xFF6
 34494                           tablat	equ	0xFF5
 34495                           prodh	equ	0xFF4
 34496                           prodl	equ	0xFF3
 34497                           intcon	equ	0xFF2
 34498                           intcon2	equ	0xFF1
 34499                           intcon3	equ	0xFF0
 34500                           indf0	equ	0xFEF
 34501                           postinc0	equ	0xFEE
 34502                           plusw0	equ	0xFEB
 34503                           fsr0h	equ	0xFEA
 34504                           fsr0l	equ	0xFE9
 34505                           wreg	equ	0xFE8
 34506                           postinc1	equ	0xFE6
 34507                           postdec1	equ	0xFE5
 34508                           plusw1	equ	0xFE3
 34509                           fsr1h	equ	0xFE2
 34510                           fsr1l	equ	0xFE1
 34511                           indf2	equ	0xFDF
 34512                           postinc2	equ	0xFDE
 34513                           postdec2	equ	0xFDD
 34514                           plusw2	equ	0xFDB
 34515                           fsr2h	equ	0xFDA
 34516                           fsr2l	equ	0xFD9
 34517                           status	equ	0xFD8
 34518                           
 34519 ;; *************** function ___llmod *****************
 34520 ;; Defined at:
 34521 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 34522 ;; Parameters:    Size  Location     Type
 34523 ;;  dividend        4    4[BANK0 ] unsigned long 
 34524 ;;  divisor         4    8[BANK0 ] unsigned long 
 34525 ;; Auto vars:     Size  Location     Type
 34526 ;;  counter         1   12[BANK0 ] unsigned char 
 34527 ;; Return value:  Size  Location     Type
 34528 ;;                  4    4[BANK0 ] unsigned long 
 34529 ;; Registers used:
 34530 ;;		wreg, status,2, status,0
 34531 ;; Tracked objects:
 34532 ;;		On entry : F/0
 34533 ;;		On exit  : F/0
 34534 ;;		Unchanged: 0/0
 34535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34536 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34537 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34539 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34540 ;;Total ram usage:        9 bytes
 34541 ;; Hardware stack levels used:    1
 34542 ;; Hardware stack levels required when called:    7
 34543 ;; This function calls:
 34544 ;;		Nothing
 34545 ;; This function is called by:
 34546 ;;		_RADIO_WriteFrequency
 34547 ;; This function uses a non-reentrant model
 34548 ;;
 34549                           
 34550                           	psect	text175
 34551  006720                     __ptext175:
 34552                           	opt stack 0
 34553  006720                     ___llmod:
 34554                           	opt stack 18
 34555                           
 34556                           ; BSR set to: 0
 34557                           
 34558                           ;incstack = 0
 34559  006720  5168               	movf	___llmod@divisor& (0+255),w,b
 34560  006722  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 34561  006724  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 34562  006726  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 34563  006728  E023               	bz	l3124
 34564                           
 34565                           ; BSR set to: 0
 34566  00672A  0E01               	movlw	1
 34567  00672C  6F6C               	movwf	___llmod@counter& (0+255),b
 34568  00672E  D006               	goto	l12300
 34569  006730                     l12298:
 34570                           
 34571                           ; BSR set to: 0
 34572  006730  90D8               	bcf	status,0,c
 34573  006732  3768               	rlcf	___llmod@divisor& (0+255),f,b
 34574  006734  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 34575  006736  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 34576  006738  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 34577  00673A  2B6C               	incf	___llmod@counter& (0+255),f,b
 34578  00673C                     l12300:
 34579                           
 34580                           ; BSR set to: 0
 34581  00673C  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 34582  00673E  D7F8               	goto	l12298
 34583  006740                     l12302:
 34584                           
 34585                           ; BSR set to: 0
 34586  006740  5168               	movf	___llmod@divisor& (0+255),w,b
 34587  006742  5D64               	subwf	___llmod@dividend& (0+255),w,b
 34588  006744  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 34589  006746  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 34590  006748  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 34591  00674A  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 34592  00674C  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 34593  00674E  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 34594  006750  E308               	bnc	l12306
 34595                           
 34596                           ; BSR set to: 0
 34597  006752  5168               	movf	___llmod@divisor& (0+255),w,b
 34598  006754  5F64               	subwf	___llmod@dividend& (0+255),f,b
 34599  006756  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 34600  006758  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 34601  00675A  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 34602  00675C  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 34603  00675E  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 34604  006760  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 34605  006762                     l12306:
 34606                           
 34607                           ; BSR set to: 0
 34608  006762  90D8               	bcf	status,0,c
 34609  006764  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 34610  006766  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 34611  006768  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 34612  00676A  3368               	rrcf	___llmod@divisor& (0+255),f,b
 34613                           
 34614                           ; BSR set to: 0
 34615  00676C  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 34616  00676E  D7E8               	goto	l12302
 34617  006770                     l3124:
 34618                           
 34619                           ; BSR set to: 0
 34620  006770  C064  F064         	movff	___llmod@dividend,?___llmod
 34621  006774  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 34622  006778  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 34623  00677C  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 34624                           
 34625                           ; BSR set to: 0
 34626  006780  0012               	return		;funcret
 34627  006782                     __end_of___llmod:
 34628                           	opt stack 0
 34629                           tosu	equ	0xFFF
 34630                           tosh	equ	0xFFE
 34631                           tosl	equ	0xFFD
 34632                           pclath	equ	0xFFA
 34633                           tblptru	equ	0xFF8
 34634                           tblptrh	equ	0xFF7
 34635                           tblptrl	equ	0xFF6
 34636                           tablat	equ	0xFF5
 34637                           prodh	equ	0xFF4
 34638                           prodl	equ	0xFF3
 34639                           intcon	equ	0xFF2
 34640                           intcon2	equ	0xFF1
 34641                           intcon3	equ	0xFF0
 34642                           indf0	equ	0xFEF
 34643                           postinc0	equ	0xFEE
 34644                           plusw0	equ	0xFEB
 34645                           fsr0h	equ	0xFEA
 34646                           fsr0l	equ	0xFE9
 34647                           wreg	equ	0xFE8
 34648                           postinc1	equ	0xFE6
 34649                           postdec1	equ	0xFE5
 34650                           plusw1	equ	0xFE3
 34651                           fsr1h	equ	0xFE2
 34652                           fsr1l	equ	0xFE1
 34653                           indf2	equ	0xFDF
 34654                           postinc2	equ	0xFDE
 34655                           postdec2	equ	0xFDD
 34656                           plusw2	equ	0xFDB
 34657                           fsr2h	equ	0xFDA
 34658                           fsr2l	equ	0xFD9
 34659                           status	equ	0xFD8
 34660                           
 34661 ;; *************** function _RADIO_RegisterWrite *****************
 34662 ;; Defined at:
 34663 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 34664 ;; Parameters:    Size  Location     Type
 34665 ;;  reg             1    wreg     unsigned char 
 34666 ;;  value           1    6[BANK0 ] unsigned char 
 34667 ;; Auto vars:     Size  Location     Type
 34668 ;;  reg             1    7[BANK0 ] unsigned char 
 34669 ;; Return value:  Size  Location     Type
 34670 ;;                  1    wreg      void 
 34671 ;; Registers used:
 34672 ;;		wreg, status,2, status,0, cstack
 34673 ;; Tracked objects:
 34674 ;;		On entry : 0/0
 34675 ;;		On exit  : 0/0
 34676 ;;		Unchanged: 0/0
 34677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34678 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34679 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34682 ;;Total ram usage:        2 bytes
 34683 ;; Hardware stack levels used:    1
 34684 ;; Hardware stack levels required when called:    9
 34685 ;; This function calls:
 34686 ;;		_HALSPICSAssert
 34687 ;;		_HALSPICSDeassert
 34688 ;;		_HALSPISend
 34689 ;; This function is called by:
 34690 ;;		_RADIO_WriteMode
 34691 ;;		_RADIO_WriteFrequency
 34692 ;;		_RADIO_WriteFSKFrequencyDeviation
 34693 ;;		_RADIO_WriteFSKBitRate
 34694 ;;		_RADIO_WritePower
 34695 ;;		_RADIO_Init
 34696 ;;		_RADIO_WriteConfiguration
 34697 ;;		_RADIO_Transmit
 34698 ;;		_RADIO_ReceiveStart
 34699 ;;		_RADIO_RxDone
 34700 ;;		_RADIO_RxTimeout
 34701 ;;		_RADIO_TxDone
 34702 ;;		_RADIO_UnhandledInterrupt
 34703 ;;		_RADIO_FHSSChangeChannel
 34704 ;;		_RADIO_ReadRandom
 34705 ;; This function uses a non-reentrant model
 34706 ;;
 34707                           
 34708                           	psect	text176
 34709  00767A                     __ptext176:
 34710                           	opt stack 0
 34711  00767A                     _RADIO_RegisterWrite:
 34712                           	opt stack 17
 34713                           
 34714                           ; BSR set to: 0
 34715                           ;incstack = 0
 34716                           ;RADIO_RegisterWrite@reg stored from wreg
 34717  00767A  0100               	movlb	0	; () banked
 34718  00767C  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 34719                           
 34720                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 34721  00767E  EC5F  F03D         	call	_HALSPICSAssert	;wreg free
 34722                           
 34723                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 34724  007682  0100               	movlb	0	; () banked
 34725  007684  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 34726  007686  0980               	iorlw	128
 34727  007688  EC19  F03D         	call	_HALSPISend
 34728                           
 34729                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 34730  00768C  0100               	movlb	0	; () banked
 34731  00768E  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 34732  007690  EC19  F03D         	call	_HALSPISend
 34733                           
 34734                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 34735  007694  EF5D  F03D         	goto	_HALSPICSDeassert	;wreg free
 34736  007698                     __end_of_RADIO_RegisterWrite:
 34737                           	opt stack 0
 34738                           tosu	equ	0xFFF
 34739                           tosh	equ	0xFFE
 34740                           tosl	equ	0xFFD
 34741                           pclath	equ	0xFFA
 34742                           tblptru	equ	0xFF8
 34743                           tblptrh	equ	0xFF7
 34744                           tblptrl	equ	0xFF6
 34745                           tablat	equ	0xFF5
 34746                           prodh	equ	0xFF4
 34747                           prodl	equ	0xFF3
 34748                           intcon	equ	0xFF2
 34749                           intcon2	equ	0xFF1
 34750                           intcon3	equ	0xFF0
 34751                           indf0	equ	0xFEF
 34752                           postinc0	equ	0xFEE
 34753                           plusw0	equ	0xFEB
 34754                           fsr0h	equ	0xFEA
 34755                           fsr0l	equ	0xFE9
 34756                           wreg	equ	0xFE8
 34757                           postinc1	equ	0xFE6
 34758                           postdec1	equ	0xFE5
 34759                           plusw1	equ	0xFE3
 34760                           fsr1h	equ	0xFE2
 34761                           fsr1l	equ	0xFE1
 34762                           indf2	equ	0xFDF
 34763                           postinc2	equ	0xFDE
 34764                           postdec2	equ	0xFDD
 34765                           plusw2	equ	0xFDB
 34766                           fsr2h	equ	0xFDA
 34767                           fsr2l	equ	0xFD9
 34768                           status	equ	0xFD8
 34769                           
 34770 ;; *************** function _HALSPISend *****************
 34771 ;; Defined at:
 34772 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34773 ;; Parameters:    Size  Location     Type
 34774 ;;  data            1    wreg     unsigned char 
 34775 ;; Auto vars:     Size  Location     Type
 34776 ;;  data            1    5[BANK0 ] unsigned char 
 34777 ;; Return value:  Size  Location     Type
 34778 ;;                  1    wreg      unsigned char 
 34779 ;; Registers used:
 34780 ;;		wreg, status,2, cstack
 34781 ;; Tracked objects:
 34782 ;;		On entry : 0/1
 34783 ;;		On exit  : 0/0
 34784 ;;		Unchanged: 0/0
 34785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34787 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34789 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34790 ;;Total ram usage:        1 bytes
 34791 ;; Hardware stack levels used:    1
 34792 ;; Hardware stack levels required when called:    8
 34793 ;; This function calls:
 34794 ;;		_SPI2_Exchange8bit
 34795 ;; This function is called by:
 34796 ;;		_RADIO_RegisterWrite
 34797 ;;		_RADIO_RegisterRead
 34798 ;;		_RADIO_Transmit
 34799 ;;		_RADIO_RxDone
 34800 ;;		_RADIO_FSKPayloadReady
 34801 ;; This function uses a non-reentrant model
 34802 ;;
 34803                           
 34804                           	psect	text177
 34805  007A32                     __ptext177:
 34806                           	opt stack 0
 34807  007A32                     _HALSPISend:
 34808                           	opt stack 17
 34809                           
 34810                           ;incstack = 0
 34811                           ;HALSPISend@data stored from wreg
 34812  007A32  0100               	movlb	0	; () banked
 34813  007A34  6F65               	movwf	HALSPISend@data& (0+255),b
 34814                           
 34815                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 34816  007A36  5165               	movf	HALSPISend@data& (0+255),w,b
 34817  007A38  EF8C  F03C         	goto	_SPI2_Exchange8bit
 34818  007A3C                     __end_of_HALSPISend:
 34819                           	opt stack 0
 34820                           tosu	equ	0xFFF
 34821                           tosh	equ	0xFFE
 34822                           tosl	equ	0xFFD
 34823                           pclath	equ	0xFFA
 34824                           tblptru	equ	0xFF8
 34825                           tblptrh	equ	0xFF7
 34826                           tblptrl	equ	0xFF6
 34827                           tablat	equ	0xFF5
 34828                           prodh	equ	0xFF4
 34829                           prodl	equ	0xFF3
 34830                           intcon	equ	0xFF2
 34831                           intcon2	equ	0xFF1
 34832                           intcon3	equ	0xFF0
 34833                           indf0	equ	0xFEF
 34834                           postinc0	equ	0xFEE
 34835                           plusw0	equ	0xFEB
 34836                           fsr0h	equ	0xFEA
 34837                           fsr0l	equ	0xFE9
 34838                           wreg	equ	0xFE8
 34839                           postinc1	equ	0xFE6
 34840                           postdec1	equ	0xFE5
 34841                           plusw1	equ	0xFE3
 34842                           fsr1h	equ	0xFE2
 34843                           fsr1l	equ	0xFE1
 34844                           indf2	equ	0xFDF
 34845                           postinc2	equ	0xFDE
 34846                           postdec2	equ	0xFDD
 34847                           plusw2	equ	0xFDB
 34848                           fsr2h	equ	0xFDA
 34849                           fsr2l	equ	0xFD9
 34850                           status	equ	0xFD8
 34851                           
 34852 ;; *************** function _SPI2_Exchange8bit *****************
 34853 ;; Defined at:
 34854 ;;		line 77 in file "mcc_generated_files/spi2.c"
 34855 ;; Parameters:    Size  Location     Type
 34856 ;;  data            1    wreg     unsigned char 
 34857 ;; Auto vars:     Size  Location     Type
 34858 ;;  data            1    4[BANK0 ] unsigned char 
 34859 ;; Return value:  Size  Location     Type
 34860 ;;                  1    wreg      unsigned char 
 34861 ;; Registers used:
 34862 ;;		wreg, status,2
 34863 ;; Tracked objects:
 34864 ;;		On entry : F/0
 34865 ;;		On exit  : 0/0
 34866 ;;		Unchanged: 0/0
 34867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34869 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34871 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34872 ;;Total ram usage:        1 bytes
 34873 ;; Hardware stack levels used:    1
 34874 ;; Hardware stack levels required when called:    7
 34875 ;; This function calls:
 34876 ;;		Nothing
 34877 ;; This function is called by:
 34878 ;;		_HALSPISend
 34879 ;; This function uses a non-reentrant model
 34880 ;;
 34881                           
 34882                           	psect	text178
 34883  007918                     __ptext178:
 34884                           	opt stack 0
 34885  007918                     _SPI2_Exchange8bit:
 34886                           	opt stack 17
 34887                           
 34888                           ;incstack = 0
 34889                           ;SPI2_Exchange8bit@data stored from wreg
 34890  007918  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 34891                           
 34892                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 34893  00791A  9E6C               	bcf	3948,7,c	;volatile
 34894                           
 34895                           ;spi2.c: 82: SSP2BUF = data;
 34896  00791C  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 34897  007920                     l192:
 34898  007920  A06D               	btfss	3949,0,c	;volatile
 34899  007922  D7FE               	goto	l192
 34900                           
 34901                           ;spi2.c: 86: }
 34902                           ;spi2.c: 88: return (SSP2BUF);
 34903  007924  506F               	movf	3951,w,c	;volatile
 34904  007926  0012               	return		;funcret
 34905  007928                     __end_of_SPI2_Exchange8bit:
 34906                           	opt stack 0
 34907                           tosu	equ	0xFFF
 34908                           tosh	equ	0xFFE
 34909                           tosl	equ	0xFFD
 34910                           pclath	equ	0xFFA
 34911                           tblptru	equ	0xFF8
 34912                           tblptrh	equ	0xFF7
 34913                           tblptrl	equ	0xFF6
 34914                           tablat	equ	0xFF5
 34915                           prodh	equ	0xFF4
 34916                           prodl	equ	0xFF3
 34917                           intcon	equ	0xFF2
 34918                           intcon2	equ	0xFF1
 34919                           intcon3	equ	0xFF0
 34920                           indf0	equ	0xFEF
 34921                           postinc0	equ	0xFEE
 34922                           plusw0	equ	0xFEB
 34923                           fsr0h	equ	0xFEA
 34924                           fsr0l	equ	0xFE9
 34925                           wreg	equ	0xFE8
 34926                           postinc1	equ	0xFE6
 34927                           postdec1	equ	0xFE5
 34928                           plusw1	equ	0xFE3
 34929                           fsr1h	equ	0xFE2
 34930                           fsr1l	equ	0xFE1
 34931                           indf2	equ	0xFDF
 34932                           postinc2	equ	0xFDE
 34933                           postdec2	equ	0xFDD
 34934                           plusw2	equ	0xFDB
 34935                           fsr2h	equ	0xFDA
 34936                           fsr2l	equ	0xFD9
 34937                           status	equ	0xFD8
 34938                           
 34939 ;; *************** function _HALSPICSDeassert *****************
 34940 ;; Defined at:
 34941 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 34942 ;; Parameters:    Size  Location     Type
 34943 ;;		None
 34944 ;; Auto vars:     Size  Location     Type
 34945 ;;		None
 34946 ;; Return value:  Size  Location     Type
 34947 ;;                  1    wreg      void 
 34948 ;; Registers used:
 34949 ;;		None
 34950 ;; Tracked objects:
 34951 ;;		On entry : 0/0
 34952 ;;		On exit  : 0/0
 34953 ;;		Unchanged: 0/0
 34954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34959 ;;Total ram usage:        0 bytes
 34960 ;; Hardware stack levels used:    1
 34961 ;; Hardware stack levels required when called:    7
 34962 ;; This function calls:
 34963 ;;		Nothing
 34964 ;; This function is called by:
 34965 ;;		_RADIO_RegisterWrite
 34966 ;;		_RADIO_RegisterRead
 34967 ;;		_RADIO_Transmit
 34968 ;;		_RADIO_RxDone
 34969 ;;		_RADIO_FSKPayloadReady
 34970 ;; This function uses a non-reentrant model
 34971 ;;
 34972                           
 34973                           	psect	text179
 34974  007ABA                     __ptext179:
 34975                           	opt stack 0
 34976  007ABA                     _HALSPICSDeassert:
 34977                           	opt stack 18
 34978                           
 34979                           ;incstack = 0
 34980                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 34981  007ABA  868C               	bsf	3980,3,c	;volatile
 34982  007ABC  0012               	return		;funcret
 34983  007ABE                     __end_of_HALSPICSDeassert:
 34984                           	opt stack 0
 34985                           tosu	equ	0xFFF
 34986                           tosh	equ	0xFFE
 34987                           tosl	equ	0xFFD
 34988                           pclath	equ	0xFFA
 34989                           tblptru	equ	0xFF8
 34990                           tblptrh	equ	0xFF7
 34991                           tblptrl	equ	0xFF6
 34992                           tablat	equ	0xFF5
 34993                           prodh	equ	0xFF4
 34994                           prodl	equ	0xFF3
 34995                           intcon	equ	0xFF2
 34996                           intcon2	equ	0xFF1
 34997                           intcon3	equ	0xFF0
 34998                           indf0	equ	0xFEF
 34999                           postinc0	equ	0xFEE
 35000                           plusw0	equ	0xFEB
 35001                           fsr0h	equ	0xFEA
 35002                           fsr0l	equ	0xFE9
 35003                           wreg	equ	0xFE8
 35004                           postinc1	equ	0xFE6
 35005                           postdec1	equ	0xFE5
 35006                           plusw1	equ	0xFE3
 35007                           fsr1h	equ	0xFE2
 35008                           fsr1l	equ	0xFE1
 35009                           indf2	equ	0xFDF
 35010                           postinc2	equ	0xFDE
 35011                           postdec2	equ	0xFDD
 35012                           plusw2	equ	0xFDB
 35013                           fsr2h	equ	0xFDA
 35014                           fsr2l	equ	0xFD9
 35015                           status	equ	0xFD8
 35016                           
 35017 ;; *************** function _HALSPICSAssert *****************
 35018 ;; Defined at:
 35019 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35020 ;; Parameters:    Size  Location     Type
 35021 ;;		None
 35022 ;; Auto vars:     Size  Location     Type
 35023 ;;		None
 35024 ;; Return value:  Size  Location     Type
 35025 ;;                  1    wreg      void 
 35026 ;; Registers used:
 35027 ;;		None
 35028 ;; Tracked objects:
 35029 ;;		On entry : 0/1
 35030 ;;		On exit  : 0/0
 35031 ;;		Unchanged: 0/0
 35032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35037 ;;Total ram usage:        0 bytes
 35038 ;; Hardware stack levels used:    1
 35039 ;; Hardware stack levels required when called:    7
 35040 ;; This function calls:
 35041 ;;		Nothing
 35042 ;; This function is called by:
 35043 ;;		_RADIO_RegisterWrite
 35044 ;;		_RADIO_RegisterRead
 35045 ;;		_RADIO_Transmit
 35046 ;;		_RADIO_RxDone
 35047 ;;		_RADIO_FSKPayloadReady
 35048 ;; This function uses a non-reentrant model
 35049 ;;
 35050                           
 35051                           	psect	text180
 35052  007ABE                     __ptext180:
 35053                           	opt stack 0
 35054  007ABE                     _HALSPICSAssert:
 35055                           	opt stack 18
 35056                           
 35057                           ;incstack = 0
 35058                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 35059  007ABE  968C               	bcf	3980,3,c	;volatile
 35060  007AC0  0012               	return		;funcret
 35061  007AC2                     __end_of_HALSPICSAssert:
 35062                           	opt stack 0
 35063                           tosu	equ	0xFFF
 35064                           tosh	equ	0xFFE
 35065                           tosl	equ	0xFFD
 35066                           pclath	equ	0xFFA
 35067                           tblptru	equ	0xFF8
 35068                           tblptrh	equ	0xFF7
 35069                           tblptrl	equ	0xFF6
 35070                           tablat	equ	0xFF5
 35071                           prodh	equ	0xFF4
 35072                           prodl	equ	0xFF3
 35073                           intcon	equ	0xFF2
 35074                           intcon2	equ	0xFF1
 35075                           intcon3	equ	0xFF0
 35076                           indf0	equ	0xFEF
 35077                           postinc0	equ	0xFEE
 35078                           plusw0	equ	0xFEB
 35079                           fsr0h	equ	0xFEA
 35080                           fsr0l	equ	0xFE9
 35081                           wreg	equ	0xFE8
 35082                           postinc1	equ	0xFE6
 35083                           postdec1	equ	0xFE5
 35084                           plusw1	equ	0xFE3
 35085                           fsr1h	equ	0xFE2
 35086                           fsr1l	equ	0xFE1
 35087                           indf2	equ	0xFDF
 35088                           postinc2	equ	0xFDE
 35089                           postdec2	equ	0xFDD
 35090                           plusw2	equ	0xFDB
 35091                           fsr2h	equ	0xFDA
 35092                           fsr2l	equ	0xFD9
 35093                           status	equ	0xFD8
 35094                           
 35095 ;; *************** function _RADIO_Reset *****************
 35096 ;; Defined at:
 35097 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 35098 ;; Parameters:    Size  Location     Type
 35099 ;;		None
 35100 ;; Auto vars:     Size  Location     Type
 35101 ;;		None
 35102 ;; Return value:  Size  Location     Type
 35103 ;;                  1    wreg      void 
 35104 ;; Registers used:
 35105 ;;		wreg, status,2, status,0, cstack
 35106 ;; Tracked objects:
 35107 ;;		On entry : E/1
 35108 ;;		On exit  : E/0
 35109 ;;		Unchanged: 0/0
 35110 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35111 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35112 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35113 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35114 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35115 ;;Total ram usage:        0 bytes
 35116 ;; Hardware stack levels used:    1
 35117 ;; Hardware stack levels required when called:    8
 35118 ;; This function calls:
 35119 ;;		_HALResetPinMakeInput
 35120 ;;		_HALResetPinMakeOutput
 35121 ;;		_HALResetPinOutputValue
 35122 ;;		_SystemBlockingWaitMs
 35123 ;; This function is called by:
 35124 ;;		_RADIO_Init
 35125 ;; This function uses a non-reentrant model
 35126 ;;
 35127                           
 35128                           	psect	text181
 35129  0071B4                     __ptext181:
 35130                           	opt stack 0
 35131  0071B4                     _RADIO_Reset:
 35132                           	opt stack 20
 35133                           
 35134                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 35135                           
 35136                           ;incstack = 0
 35137  0071B4  EC61  F03D         	call	_HALResetPinMakeOutput	;wreg free
 35138                           
 35139                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 35140  0071B8  0E00               	movlw	0
 35141  0071BA  EC71  F03C         	call	_HALResetPinOutputValue
 35142                           
 35143                           ; BSR set to: 0
 35144                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 35145  0071BE  0E01               	movlw	1
 35146  0071C0  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35147  0071C2  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35148  0071C4  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35149  0071C6  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35150  0071C8  ECDC  F039         	call	_SystemBlockingWaitMs	;wreg free
 35151                           
 35152                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 35153  0071CC  EC63  F03D         	call	_HALResetPinMakeInput	;wreg free
 35154                           
 35155                           ; BSR set to: 0
 35156                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 35157  0071D0  0E0A               	movlw	10
 35158  0071D2  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 35159  0071D4  6B65               	clrf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 35160  0071D6  6B66               	clrf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 35161  0071D8  6B67               	clrf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 35162  0071DA  ECDC  F039         	call	_SystemBlockingWaitMs	;wreg free
 35163                           
 35164                           ; BSR set to: 0
 35165                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 35166  0071DE  0E01               	movlw	1
 35167  0071E0  EC71  F03C         	call	_HALResetPinOutputValue
 35168                           
 35169                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 35170  0071E4  EF61  F03D         	goto	_HALResetPinMakeOutput	;wreg free
 35171  0071E8                     __end_of_RADIO_Reset:
 35172                           	opt stack 0
 35173                           tosu	equ	0xFFF
 35174                           tosh	equ	0xFFE
 35175                           tosl	equ	0xFFD
 35176                           pclath	equ	0xFFA
 35177                           tblptru	equ	0xFF8
 35178                           tblptrh	equ	0xFF7
 35179                           tblptrl	equ	0xFF6
 35180                           tablat	equ	0xFF5
 35181                           prodh	equ	0xFF4
 35182                           prodl	equ	0xFF3
 35183                           intcon	equ	0xFF2
 35184                           intcon2	equ	0xFF1
 35185                           intcon3	equ	0xFF0
 35186                           indf0	equ	0xFEF
 35187                           postinc0	equ	0xFEE
 35188                           plusw0	equ	0xFEB
 35189                           fsr0h	equ	0xFEA
 35190                           fsr0l	equ	0xFE9
 35191                           wreg	equ	0xFE8
 35192                           postinc1	equ	0xFE6
 35193                           postdec1	equ	0xFE5
 35194                           plusw1	equ	0xFE3
 35195                           fsr1h	equ	0xFE2
 35196                           fsr1l	equ	0xFE1
 35197                           indf2	equ	0xFDF
 35198                           postinc2	equ	0xFDE
 35199                           postdec2	equ	0xFDD
 35200                           plusw2	equ	0xFDB
 35201                           fsr2h	equ	0xFDA
 35202                           fsr2l	equ	0xFD9
 35203                           status	equ	0xFD8
 35204                           
 35205 ;; *************** function _SystemBlockingWaitMs *****************
 35206 ;; Defined at:
 35207 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 35208 ;; Parameters:    Size  Location     Type
 35209 ;;  ms              4    4[BANK0 ] unsigned long 
 35210 ;; Auto vars:     Size  Location     Type
 35211 ;;		None
 35212 ;; Return value:  Size  Location     Type
 35213 ;;                  1    wreg      void 
 35214 ;; Registers used:
 35215 ;;		wreg, status,2, status,0
 35216 ;; Tracked objects:
 35217 ;;		On entry : F/0
 35218 ;;		On exit  : F/0
 35219 ;;		Unchanged: 0/0
 35220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35221 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35223 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35224 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35225 ;;Total ram usage:        5 bytes
 35226 ;; Hardware stack levels used:    1
 35227 ;; Hardware stack levels required when called:    7
 35228 ;; This function calls:
 35229 ;;		Nothing
 35230 ;; This function is called by:
 35231 ;;		_RADIO_WriteMode
 35232 ;;		_RADIO_Reset
 35233 ;;		_RADIO_ReadRandom
 35234 ;; This function uses a non-reentrant model
 35235 ;;
 35236                           
 35237                           	psect	text182
 35238  0073B8                     __ptext182:
 35239                           	opt stack 0
 35240  0073B8                     _SystemBlockingWaitMs:
 35241                           	opt stack 19
 35242                           
 35243                           ; BSR set to: 0
 35244                           ;sw_timer.c: 147: while (ms > 0)
 35245                           
 35246                           ;incstack = 0
 35247  0073B8  D00E               	goto	l12132
 35248  0073BA                     l12128:
 35249                           
 35250                           ; BSR set to: 0
 35251                           ;sw_timer.c: 148: {
 35252                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 35253  0073BA  0E06               	movlw	6
 35254  0073BC  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 35255  0073BE  0E30               	movlw	48
 35256  0073C0                     u19897:
 35257  0073C0  2EE8               	decfsz	wreg,f,c
 35258  0073C2  D7FE               	goto	u19897
 35259  0073C4  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 35260  0073C6  D7FC               	goto	u19897
 35261  0073C8  D000               	nop2	
 35262                           
 35263                           ;sw_timer.c: 150: ms--;
 35264  0073CA  0100               	movlb	0	; () banked
 35265  0073CC  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 35266  0073CE  0E00               	movlw	0
 35267  0073D0  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 35268  0073D2  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 35269  0073D4  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 35270  0073D6                     l12132:
 35271                           
 35272                           ; BSR set to: 0
 35273  0073D6  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 35274  0073D8  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 35275  0073DA  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 35276  0073DC  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 35277  0073DE  E1ED               	bnz	l12128
 35278                           
 35279                           ; BSR set to: 0
 35280  0073E0  0012               	return		;funcret
 35281  0073E2                     __end_of_SystemBlockingWaitMs:
 35282                           	opt stack 0
 35283                           tosu	equ	0xFFF
 35284                           tosh	equ	0xFFE
 35285                           tosl	equ	0xFFD
 35286                           pclath	equ	0xFFA
 35287                           tblptru	equ	0xFF8
 35288                           tblptrh	equ	0xFF7
 35289                           tblptrl	equ	0xFF6
 35290                           tablat	equ	0xFF5
 35291                           prodh	equ	0xFF4
 35292                           prodl	equ	0xFF3
 35293                           intcon	equ	0xFF2
 35294                           intcon2	equ	0xFF1
 35295                           intcon3	equ	0xFF0
 35296                           indf0	equ	0xFEF
 35297                           postinc0	equ	0xFEE
 35298                           plusw0	equ	0xFEB
 35299                           fsr0h	equ	0xFEA
 35300                           fsr0l	equ	0xFE9
 35301                           wreg	equ	0xFE8
 35302                           postinc1	equ	0xFE6
 35303                           postdec1	equ	0xFE5
 35304                           plusw1	equ	0xFE3
 35305                           fsr1h	equ	0xFE2
 35306                           fsr1l	equ	0xFE1
 35307                           indf2	equ	0xFDF
 35308                           postinc2	equ	0xFDE
 35309                           postdec2	equ	0xFDD
 35310                           plusw2	equ	0xFDB
 35311                           fsr2h	equ	0xFDA
 35312                           fsr2l	equ	0xFD9
 35313                           status	equ	0xFD8
 35314                           
 35315 ;; *************** function _HALResetPinOutputValue *****************
 35316 ;; Defined at:
 35317 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35318 ;; Parameters:    Size  Location     Type
 35319 ;;  value           1    wreg     unsigned char 
 35320 ;; Auto vars:     Size  Location     Type
 35321 ;;  value           1    4[BANK0 ] unsigned char 
 35322 ;; Return value:  Size  Location     Type
 35323 ;;                  1    wreg      void 
 35324 ;; Registers used:
 35325 ;;		wreg, status,2, status,0
 35326 ;; Tracked objects:
 35327 ;;		On entry : E/1
 35328 ;;		On exit  : F/0
 35329 ;;		Unchanged: 0/0
 35330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35332 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35334 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35335 ;;Total ram usage:        1 bytes
 35336 ;; Hardware stack levels used:    1
 35337 ;; Hardware stack levels required when called:    7
 35338 ;; This function calls:
 35339 ;;		Nothing
 35340 ;; This function is called by:
 35341 ;;		_RADIO_Reset
 35342 ;; This function uses a non-reentrant model
 35343 ;;
 35344                           
 35345                           	psect	text183
 35346  0078E2                     __ptext183:
 35347                           	opt stack 0
 35348  0078E2                     _HALResetPinOutputValue:
 35349                           	opt stack 20
 35350                           
 35351                           ; BSR set to: 0
 35352                           ;incstack = 0
 35353                           ;HALResetPinOutputValue@value stored from wreg
 35354  0078E2  0100               	movlb	0	; () banked
 35355  0078E4  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 35356                           
 35357                           ;radio_driver_hal.c: 57: if (value == 0)
 35358  0078E6  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 35359  0078E8  E102               	bnz	l9774
 35360                           
 35361                           ; BSR set to: 0
 35362                           
 35363                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 35364  0078EA  948B               	bcf	3979,2,c	;volatile
 35365  0078EC  0012               	return	
 35366  0078EE                     l9774:
 35367                           
 35368                           ; BSR set to: 0
 35369                           ;radio_driver_hal.c: 59: else if (value == 1)
 35370  0078EE  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 35371  0078F0  B4D8               	btfsc	status,2,c
 35372                           
 35373                           ; BSR set to: 0
 35374                           
 35375                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 35376  0078F2  848B               	bsf	3979,2,c	;volatile
 35377                           
 35378                           ; BSR set to: 0
 35379  0078F4  0012               	return		;funcret
 35380  0078F6                     __end_of_HALResetPinOutputValue:
 35381                           	opt stack 0
 35382                           tosu	equ	0xFFF
 35383                           tosh	equ	0xFFE
 35384                           tosl	equ	0xFFD
 35385                           pclath	equ	0xFFA
 35386                           tblptru	equ	0xFF8
 35387                           tblptrh	equ	0xFF7
 35388                           tblptrl	equ	0xFF6
 35389                           tablat	equ	0xFF5
 35390                           prodh	equ	0xFF4
 35391                           prodl	equ	0xFF3
 35392                           intcon	equ	0xFF2
 35393                           intcon2	equ	0xFF1
 35394                           intcon3	equ	0xFF0
 35395                           indf0	equ	0xFEF
 35396                           postinc0	equ	0xFEE
 35397                           plusw0	equ	0xFEB
 35398                           fsr0h	equ	0xFEA
 35399                           fsr0l	equ	0xFE9
 35400                           wreg	equ	0xFE8
 35401                           postinc1	equ	0xFE6
 35402                           postdec1	equ	0xFE5
 35403                           plusw1	equ	0xFE3
 35404                           fsr1h	equ	0xFE2
 35405                           fsr1l	equ	0xFE1
 35406                           indf2	equ	0xFDF
 35407                           postinc2	equ	0xFDE
 35408                           postdec2	equ	0xFDD
 35409                           plusw2	equ	0xFDB
 35410                           fsr2h	equ	0xFDA
 35411                           fsr2l	equ	0xFD9
 35412                           status	equ	0xFD8
 35413                           
 35414 ;; *************** function _HALResetPinMakeOutput *****************
 35415 ;; Defined at:
 35416 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35417 ;; Parameters:    Size  Location     Type
 35418 ;;		None
 35419 ;; Auto vars:     Size  Location     Type
 35420 ;;		None
 35421 ;; Return value:  Size  Location     Type
 35422 ;;                  1    wreg      void 
 35423 ;; Registers used:
 35424 ;;		None
 35425 ;; Tracked objects:
 35426 ;;		On entry : E/1
 35427 ;;		On exit  : E/0
 35428 ;;		Unchanged: E/0
 35429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35434 ;;Total ram usage:        0 bytes
 35435 ;; Hardware stack levels used:    1
 35436 ;; Hardware stack levels required when called:    7
 35437 ;; This function calls:
 35438 ;;		Nothing
 35439 ;; This function is called by:
 35440 ;;		_RADIO_Reset
 35441 ;; This function uses a non-reentrant model
 35442 ;;
 35443                           
 35444                           	psect	text184
 35445  007AC2                     __ptext184:
 35446                           	opt stack 0
 35447  007AC2                     _HALResetPinMakeOutput:
 35448                           	opt stack 20
 35449                           
 35450                           ; BSR set to: 0
 35451                           ;incstack = 0
 35452                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 35453  007AC2  9494               	bcf	3988,2,c	;volatile
 35454  007AC4  0012               	return		;funcret
 35455  007AC6                     __end_of_HALResetPinMakeOutput:
 35456                           	opt stack 0
 35457                           tosu	equ	0xFFF
 35458                           tosh	equ	0xFFE
 35459                           tosl	equ	0xFFD
 35460                           pclath	equ	0xFFA
 35461                           tblptru	equ	0xFF8
 35462                           tblptrh	equ	0xFF7
 35463                           tblptrl	equ	0xFF6
 35464                           tablat	equ	0xFF5
 35465                           prodh	equ	0xFF4
 35466                           prodl	equ	0xFF3
 35467                           intcon	equ	0xFF2
 35468                           intcon2	equ	0xFF1
 35469                           intcon3	equ	0xFF0
 35470                           indf0	equ	0xFEF
 35471                           postinc0	equ	0xFEE
 35472                           plusw0	equ	0xFEB
 35473                           fsr0h	equ	0xFEA
 35474                           fsr0l	equ	0xFE9
 35475                           wreg	equ	0xFE8
 35476                           postinc1	equ	0xFE6
 35477                           postdec1	equ	0xFE5
 35478                           plusw1	equ	0xFE3
 35479                           fsr1h	equ	0xFE2
 35480                           fsr1l	equ	0xFE1
 35481                           indf2	equ	0xFDF
 35482                           postinc2	equ	0xFDE
 35483                           postdec2	equ	0xFDD
 35484                           plusw2	equ	0xFDB
 35485                           fsr2h	equ	0xFDA
 35486                           fsr2l	equ	0xFD9
 35487                           status	equ	0xFD8
 35488                           
 35489 ;; *************** function _HALResetPinMakeInput *****************
 35490 ;; Defined at:
 35491 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 35492 ;; Parameters:    Size  Location     Type
 35493 ;;		None
 35494 ;; Auto vars:     Size  Location     Type
 35495 ;;		None
 35496 ;; Return value:  Size  Location     Type
 35497 ;;                  1    wreg      void 
 35498 ;; Registers used:
 35499 ;;		None
 35500 ;; Tracked objects:
 35501 ;;		On entry : F/0
 35502 ;;		On exit  : F/0
 35503 ;;		Unchanged: F/0
 35504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35509 ;;Total ram usage:        0 bytes
 35510 ;; Hardware stack levels used:    1
 35511 ;; Hardware stack levels required when called:    7
 35512 ;; This function calls:
 35513 ;;		Nothing
 35514 ;; This function is called by:
 35515 ;;		_RADIO_Reset
 35516 ;; This function uses a non-reentrant model
 35517 ;;
 35518                           
 35519                           	psect	text185
 35520  007AC6                     __ptext185:
 35521                           	opt stack 0
 35522  007AC6                     _HALResetPinMakeInput:
 35523                           	opt stack 20
 35524                           
 35525                           ; BSR set to: 0
 35526                           
 35527                           ;incstack = 0
 35528                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 35529  007AC6  8494               	bsf	3988,2,c	;volatile
 35530                           
 35531                           ; BSR set to: 0
 35532  007AC8  0012               	return		;funcret
 35533  007ACA                     __end_of_HALResetPinMakeInput:
 35534                           	opt stack 0
 35535                           tosu	equ	0xFFF
 35536                           tosh	equ	0xFFE
 35537                           tosl	equ	0xFFD
 35538                           pclath	equ	0xFFA
 35539                           tblptru	equ	0xFF8
 35540                           tblptrh	equ	0xFF7
 35541                           tblptrl	equ	0xFF6
 35542                           tablat	equ	0xFF5
 35543                           prodh	equ	0xFF4
 35544                           prodl	equ	0xFF3
 35545                           intcon	equ	0xFF2
 35546                           intcon2	equ	0xFF1
 35547                           intcon3	equ	0xFF0
 35548                           indf0	equ	0xFEF
 35549                           postinc0	equ	0xFEE
 35550                           plusw0	equ	0xFEB
 35551                           fsr0h	equ	0xFEA
 35552                           fsr0l	equ	0xFE9
 35553                           wreg	equ	0xFE8
 35554                           postinc1	equ	0xFE6
 35555                           postdec1	equ	0xFE5
 35556                           plusw1	equ	0xFE3
 35557                           fsr1h	equ	0xFE2
 35558                           fsr1l	equ	0xFE1
 35559                           indf2	equ	0xFDF
 35560                           postinc2	equ	0xFDE
 35561                           postdec2	equ	0xFDD
 35562                           plusw2	equ	0xFDB
 35563                           fsr2h	equ	0xFDA
 35564                           fsr2l	equ	0xFD9
 35565                           status	equ	0xFD8
 35566                           
 35567 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 35568 ;; Defined at:
 35569 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 35570 ;; Parameters:    Size  Location     Type
 35571 ;;  period          2   54[BANK0 ] unsigned int 
 35572 ;; Auto vars:     Size  Location     Type
 35573 ;;  iCtr            1   68[BANK0 ] unsigned char 
 35574 ;; Return value:  Size  Location     Type
 35575 ;;                  1    wreg      void 
 35576 ;; Registers used:
 35577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35578 ;; Tracked objects:
 35579 ;;		On entry : F/0
 35580 ;;		On exit  : D/0
 35581 ;;		Unchanged: 0/0
 35582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35583 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35584 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35585 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35586 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35587 ;;Total ram usage:       15 bytes
 35588 ;; Hardware stack levels used:    1
 35589 ;; Hardware stack levels required when called:   11
 35590 ;; This function calls:
 35591 ;;		_SwTimerSetTimeout
 35592 ;;		_SwTimerStart
 35593 ;;		_SwTimerStop
 35594 ;;		___lldiv
 35595 ;; This function is called by:
 35596 ;;		_LORAWAN_Reset
 35597 ;; This function uses a non-reentrant model
 35598 ;;
 35599                           
 35600                           	psect	text186
 35601  00372A                     __ptext186:
 35602                           	opt stack 0
 35603  00372A                     _LORAWAN_LinkCheckConfigure:
 35604                           	opt stack 17
 35605                           
 35606                           ; BSR set to: 0
 35607                           ;lorawan.c: 757: uint8_t iCtr;
 35608                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 35609                           
 35610                           ; BSR set to: 0
 35611                           ;incstack = 0
 35612  00372A  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 35613  00372C  6F98               	movwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 35614  00372E  5197               	movf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 35615  003730  6F99               	movwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 35616  003732  6B9A               	clrf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 35617  003734  6B9B               	clrf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 35618  003736  0EE8               	movlw	232
 35619  003738  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 35620  00373A  CFF3 F09C          	movff	prodl,??_LORAWAN_LinkCheckConfigure+4
 35621  00373E  CFF4 F09D          	movff	prodh,??_LORAWAN_LinkCheckConfigure+5
 35622  003742  6B9E               	clrf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),b
 35623  003744  6B9F               	clrf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),b
 35624  003746  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 35625  003748  50F3               	movf	prodl,w,c
 35626  00374A  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 35627  00374C  50F4               	movf	prodh,w,c
 35628  00374E  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 35629  003750  0E00               	movlw	0
 35630  003752  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35631  003754  0E03               	movlw	3
 35632  003756  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 35633  003758  50F3               	movf	prodl,w,c
 35634  00375A  279D               	addwf	(??_LORAWAN_LinkCheckConfigure+5)& (0+255),f,b
 35635  00375C  50F4               	movf	prodh,w,c
 35636  00375E  239E               	addwfc	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 35637  003760  0E00               	movlw	0
 35638  003762  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35639  003764  0EE8               	movlw	232
 35640  003766  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 35641  003768  50F3               	movf	prodl,w,c
 35642  00376A  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 35643  00376C  50F4               	movf	prodh,w,c
 35644  00376E  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35645  003770  0E03               	movlw	3
 35646  003772  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 35647  003774  50F3               	movf	prodl,w,c
 35648  003776  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 35649  003778  50F4               	movf	prodh,w,c
 35650  00377A  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35651  00377C  0E00               	movlw	0
 35652  00377E  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 35653  003780  50F3               	movf	prodl,w,c
 35654  003782  279E               	addwf	(??_LORAWAN_LinkCheckConfigure+6)& (0+255),f,b
 35655  003784  50F4               	movf	prodh,w,c
 35656  003786  239F               	addwfc	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35657  003788  0EE8               	movlw	232
 35658  00378A  039B               	mulwf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),b
 35659  00378C  50F3               	movf	prodl,w,c
 35660  00378E  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35661  003790  0E03               	movlw	3
 35662  003792  039A               	mulwf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),b
 35663  003794  50F3               	movf	prodl,w,c
 35664  003796  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35665  003798  0E00               	movlw	0
 35666  00379A  0399               	mulwf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),b
 35667  00379C  50F3               	movf	prodl,w,c
 35668  00379E  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35669  0037A0  0E00               	movlw	0
 35670  0037A2  0398               	mulwf	??_LORAWAN_LinkCheckConfigure& (0+255),b
 35671  0037A4  50F3               	movf	prodl,w,c
 35672  0037A6  279F               	addwf	(??_LORAWAN_LinkCheckConfigure+7)& (0+255),f,b
 35673  0037A8  C09C  F2CC         	movff	??_LORAWAN_LinkCheckConfigure+4,_loRa+204
 35674  0037AC  C09D  F2CD         	movff	??_LORAWAN_LinkCheckConfigure+5,_loRa+205
 35675  0037B0  C09E  F2CE         	movff	??_LORAWAN_LinkCheckConfigure+6,_loRa+206
 35676  0037B4  C09F  F2CF         	movff	??_LORAWAN_LinkCheckConfigure+7,_loRa+207
 35677                           
 35678                           ; BSR set to: 0
 35679                           ;lorawan.c: 761: if (period == 0)
 35680  0037B8  5196               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 35681  0037BA  1197               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 35682  0037BC  E127               	bnz	l1948
 35683                           
 35684                           ; BSR set to: 0
 35685                           ;lorawan.c: 762: {
 35686                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 35687  0037BE  0102               	movlb	2	; () banked
 35688  0037C0  51E7               	movf	(_loRa+231)& (0+255),w,b
 35689  0037C2  EC6A  F03B         	call	_SwTimerStop
 35690                           
 35691                           ; BSR set to: 0
 35692                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 35693  0037C6  0102               	movlb	2	; () banked
 35694  0037C8  9503               	bcf	(_loRa+3)& (0+255),2,b
 35695                           
 35696                           ; BSR set to: 2
 35697                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 35698  0037CA  0100               	movlb	0	; () banked
 35699  0037CC  6BA4               	clrf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 35700  0037CE  D018               	goto	l15246
 35701  0037D0                     l15238:
 35702                           
 35703                           ; BSR set to: 0
 35704                           ;lorawan.c: 766: {
 35705                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 35706  0037D0  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35707  0037D2  0D02               	mullw	2
 35708  0037D4  0EA8               	movlw	low (_loRa+168)
 35709  0037D6  24F3               	addwf	prodl,w,c
 35710  0037D8  6ED9               	movwf	fsr2l,c
 35711  0037DA  0E02               	movlw	high (_loRa+168)
 35712  0037DC  20F4               	addwfc	prodh,w,c
 35713  0037DE  6EDA               	movwf	fsr2h,c
 35714  0037E0  0E02               	movlw	2
 35715  0037E2  18DE               	xorwf	postinc2,w,c
 35716  0037E4  E10B               	bnz	l15244
 35717                           
 35718                           ; BSR set to: 0
 35719                           ;lorawan.c: 768: {
 35720                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 35721  0037E6  51A4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35722  0037E8  0D02               	mullw	2
 35723  0037EA  0EA8               	movlw	low (_loRa+168)
 35724  0037EC  24F3               	addwf	prodl,w,c
 35725  0037EE  6ED9               	movwf	fsr2l,c
 35726  0037F0  0E02               	movlw	high (_loRa+168)
 35727  0037F2  20F4               	addwfc	prodh,w,c
 35728  0037F4  6EDA               	movwf	fsr2h,c
 35729  0037F6  68DF               	setf	indf2,c
 35730                           
 35731                           ; BSR set to: 0
 35732                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 35733  0037F8  0102               	movlb	2	; () banked
 35734  0037FA  07A7               	decf	(_loRa+167)& (0+255),f,b
 35735  0037FC                     l15244:
 35736  0037FC  0100               	movlb	0	; () banked
 35737  0037FE  2BA4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 35738  003800                     l15246:
 35739                           
 35740                           ; BSR set to: 0
 35741  003800  0102               	movlb	2	; () banked
 35742  003802  51A7               	movf	(_loRa+167)& (0+255),w,b
 35743  003804  0100               	movlb	0	; () banked
 35744  003806  5DA4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 35745  003808  E3E3               	bnc	l15238
 35746  00380A  0012               	return	
 35747  00380C                     l1948:
 35748                           
 35749                           ; BSR set to: 0
 35750                           ;lorawan.c: 776: else
 35751                           ;lorawan.c: 777: {
 35752                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 35753  00380C  0102               	movlb	2	; () banked
 35754  00380E  8503               	bsf	(_loRa+3)& (0+255),2,b
 35755                           
 35756                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 35757  003810  A902               	btfss	(_loRa+2)& (0+255),4,b
 35758  003812  0012               	return	
 35759                           
 35760                           ; BSR set to: 2
 35761                           ;lorawan.c: 782: {
 35762                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 35763  003814  51CF               	movf	(_loRa+207)& (0+255),w,b
 35764  003816  E106               	bnz	u17710
 35765  003818  29CC               	incf	(_loRa+204)& (0+255),w,b
 35766  00381A  0EFF               	movlw	255
 35767  00381C  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 35768  00381E  0E0F               	movlw	15
 35769  003820  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 35770  003822  E319               	bnc	l15252
 35771  003824                     u17710:
 35772                           
 35773                           ; BSR set to: 2
 35774  003824  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 35775  003828  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 35776  00382C  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 35777  003830  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 35778  003834  0E7D               	movlw	125
 35779  003836  0100               	movlb	0	; () banked
 35780  003838  6F68               	movwf	___lldiv@divisor& (0+255),b
 35781  00383A  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 35782  00383C  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 35783  00383E  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 35784  003840  EC1B  F031         	call	___lldiv	;wreg free
 35785  003844  0E0C               	movlw	12
 35786  003846                     u17725:
 35787  003846  90D8               	bcf	status,0,c
 35788  003848  3764               	rlcf	?___lldiv& (0+255),f,b
 35789  00384A  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 35790  00384C  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 35791  00384E  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 35792  003850  2EE8               	decfsz	wreg,f,c
 35793  003852  D7F9               	goto	u17725
 35794  003854  D020               	goto	L21
 35795  003856                     l15252:
 35796                           
 35797                           ; BSR set to: 2
 35798  003856  C2CC  F098         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 35799  00385A  C2CD  F099         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 35800  00385E  C2CE  F09A         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 35801  003862  C2CF  F09B         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 35802  003866  0E0C               	movlw	12
 35803  003868                     u17735:
 35804  003868  90D8               	bcf	status,0,c
 35805  00386A  0100               	movlb	0	; () banked
 35806  00386C  3798               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 35807  00386E  3799               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 35808  003870  379A               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 35809  003872  379B               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 35810  003874  2EE8               	decfsz	wreg,f,c
 35811  003876  D7F8               	goto	u17735
 35812  003878  C098  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 35813  00387C  C099  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 35814  003880  C09A  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 35815  003884  C09B  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 35816  003888  0E7D               	movlw	125
 35817  00388A  6F68               	movwf	___lldiv@divisor& (0+255),b
 35818  00388C  6B69               	clrf	(___lldiv@divisor+1)& (0+255),b
 35819  00388E  6B6A               	clrf	(___lldiv@divisor+2)& (0+255),b
 35820  003890  6B6B               	clrf	(___lldiv@divisor+3)& (0+255),b
 35821  003892  EC1B  F031         	call	___lldiv	;wreg free
 35822  003896                     L21:
 35823  003896  C064  F0A0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3282
 35824  00389A  C065  F0A1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3282+1
 35825  00389E  C066  F0A2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3282+2
 35826  0038A2  C067  F0A3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3282+3
 35827                           
 35828                           ; BSR set to: 0
 35829  0038A6  C0A0  F071         	movff	_LORAWAN_LinkCheckConfigure$3282,SwTimerSetTimeout@timeout
 35830  0038AA  C0A1  F072         	movff	_LORAWAN_LinkCheckConfigure$3282+1,SwTimerSetTimeout@timeout+1
 35831  0038AE  C0A2  F073         	movff	_LORAWAN_LinkCheckConfigure$3282+2,SwTimerSetTimeout@timeout+2
 35832  0038B2  C0A3  F074         	movff	_LORAWAN_LinkCheckConfigure$3282+3,SwTimerSetTimeout@timeout+3
 35833  0038B6  0102               	movlb	2	; () banked
 35834  0038B8  51E7               	movf	(_loRa+231)& (0+255),w,b
 35835  0038BA  EC5E  F037         	call	_SwTimerSetTimeout
 35836                           
 35837                           ; BSR set to: 0
 35838                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 35839  0038BE  0102               	movlb	2	; () banked
 35840  0038C0  51E7               	movf	(_loRa+231)& (0+255),w,b
 35841  0038C2  EF59  F02F         	goto	_SwTimerStart
 35842  0038C6                     __end_of_LORAWAN_LinkCheckConfigure:
 35843                           	opt stack 0
 35844                           tosu	equ	0xFFF
 35845                           tosh	equ	0xFFE
 35846                           tosl	equ	0xFFD
 35847                           pclath	equ	0xFFA
 35848                           tblptru	equ	0xFF8
 35849                           tblptrh	equ	0xFF7
 35850                           tblptrl	equ	0xFF6
 35851                           tablat	equ	0xFF5
 35852                           prodh	equ	0xFF4
 35853                           prodl	equ	0xFF3
 35854                           intcon	equ	0xFF2
 35855                           intcon2	equ	0xFF1
 35856                           intcon3	equ	0xFF0
 35857                           indf0	equ	0xFEF
 35858                           postinc0	equ	0xFEE
 35859                           plusw0	equ	0xFEB
 35860                           fsr0h	equ	0xFEA
 35861                           fsr0l	equ	0xFE9
 35862                           wreg	equ	0xFE8
 35863                           postinc1	equ	0xFE6
 35864                           postdec1	equ	0xFE5
 35865                           plusw1	equ	0xFE3
 35866                           fsr1h	equ	0xFE2
 35867                           fsr1l	equ	0xFE1
 35868                           indf2	equ	0xFDF
 35869                           postinc2	equ	0xFDE
 35870                           postdec2	equ	0xFDD
 35871                           plusw2	equ	0xFDB
 35872                           fsr2h	equ	0xFDA
 35873                           fsr2l	equ	0xFD9
 35874                           status	equ	0xFD8
 35875                           
 35876 ;; *************** function ___lldiv *****************
 35877 ;; Defined at:
 35878 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 35879 ;; Parameters:    Size  Location     Type
 35880 ;;  dividend        4    4[BANK0 ] unsigned long 
 35881 ;;  divisor         4    8[BANK0 ] unsigned long 
 35882 ;; Auto vars:     Size  Location     Type
 35883 ;;  quotient        4   12[BANK0 ] unsigned long 
 35884 ;;  counter         1   16[BANK0 ] unsigned char 
 35885 ;; Return value:  Size  Location     Type
 35886 ;;                  4    4[BANK0 ] unsigned long 
 35887 ;; Registers used:
 35888 ;;		wreg, status,2, status,0
 35889 ;; Tracked objects:
 35890 ;;		On entry : F/0
 35891 ;;		On exit  : F/0
 35892 ;;		Unchanged: 0/0
 35893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35894 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35895 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35897 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35898 ;;Total ram usage:       13 bytes
 35899 ;; Hardware stack levels used:    1
 35900 ;; Hardware stack levels required when called:    7
 35901 ;; This function calls:
 35902 ;;		Nothing
 35903 ;; This function is called by:
 35904 ;;		_RADIO_WriteFrequency
 35905 ;;		_RADIO_WriteFSKFrequencyDeviation
 35906 ;;		_RADIO_WriteFSKBitRate
 35907 ;;		_RADIO_Transmit
 35908 ;;		_RADIO_ReceiveStart
 35909 ;;		_LORAWAN_TxDone
 35910 ;;		_LORAWAN_RxTimeout
 35911 ;;		_StartReTxTimer
 35912 ;;		_DutyCycleCallback
 35913 ;;		_LORAWAN_LinkCheckConfigure
 35914 ;;		_LORAWAN_LinkCheckCallback
 35915 ;;		_UpdateRetransmissionAckTimeoutState
 35916 ;;		_UpdateJoinSuccessState
 35917 ;; This function uses a non-reentrant model
 35918 ;;
 35919                           
 35920                           	psect	text187
 35921  006236                     __ptext187:
 35922                           	opt stack 0
 35923  006236                     ___lldiv:
 35924                           	opt stack 20
 35925                           
 35926                           ; BSR set to: 0
 35927                           
 35928                           ;incstack = 0
 35929  006236  6B6C               	clrf	___lldiv@quotient& (0+255),b
 35930  006238  6B6D               	clrf	(___lldiv@quotient+1)& (0+255),b
 35931  00623A  6B6E               	clrf	(___lldiv@quotient+2)& (0+255),b
 35932  00623C  6B6F               	clrf	(___lldiv@quotient+3)& (0+255),b
 35933                           
 35934                           ; BSR set to: 0
 35935  00623E  5168               	movf	___lldiv@divisor& (0+255),w,b
 35936  006240  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 35937  006242  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 35938  006244  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 35939  006246  E029               	bz	l3114
 35940                           
 35941                           ; BSR set to: 0
 35942  006248  0E01               	movlw	1
 35943  00624A  6F70               	movwf	___lldiv@counter& (0+255),b
 35944  00624C  D006               	goto	l12280
 35945  00624E                     l12278:
 35946                           
 35947                           ; BSR set to: 0
 35948  00624E  90D8               	bcf	status,0,c
 35949  006250  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 35950  006252  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 35951  006254  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 35952  006256  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 35953  006258  2B70               	incf	___lldiv@counter& (0+255),f,b
 35954  00625A                     l12280:
 35955                           
 35956                           ; BSR set to: 0
 35957  00625A  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 35958  00625C  D7F8               	goto	l12278
 35959  00625E                     l12282:
 35960                           
 35961                           ; BSR set to: 0
 35962  00625E  90D8               	bcf	status,0,c
 35963  006260  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 35964  006262  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 35965  006264  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 35966  006266  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 35967                           
 35968                           ; BSR set to: 0
 35969  006268  5168               	movf	___lldiv@divisor& (0+255),w,b
 35970  00626A  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 35971  00626C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35972  00626E  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 35973  006270  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35974  006272  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 35975  006274  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35976  006276  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 35977  006278  E309               	bnc	l12290
 35978                           
 35979                           ; BSR set to: 0
 35980  00627A  5168               	movf	___lldiv@divisor& (0+255),w,b
 35981  00627C  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 35982  00627E  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 35983  006280  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 35984  006282  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 35985  006284  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 35986  006286  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 35987  006288  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 35988                           
 35989                           ; BSR set to: 0
 35990  00628A  816C               	bsf	___lldiv@quotient& (0+255),0,b
 35991  00628C                     l12290:
 35992                           
 35993                           ; BSR set to: 0
 35994  00628C  90D8               	bcf	status,0,c
 35995  00628E  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 35996  006290  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 35997  006292  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 35998  006294  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 35999                           
 36000                           ; BSR set to: 0
 36001  006296  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 36002  006298  D7E2               	goto	l12282
 36003  00629A                     l3114:
 36004                           
 36005                           ; BSR set to: 0
 36006  00629A  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 36007  00629E  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 36008  0062A2  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 36009  0062A6  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 36010                           
 36011                           ; BSR set to: 0
 36012  0062AA  0012               	return		;funcret
 36013  0062AC                     __end_of___lldiv:
 36014                           	opt stack 0
 36015                           tosu	equ	0xFFF
 36016                           tosh	equ	0xFFE
 36017                           tosl	equ	0xFFD
 36018                           pclath	equ	0xFFA
 36019                           tblptru	equ	0xFF8
 36020                           tblptrh	equ	0xFF7
 36021                           tblptrl	equ	0xFF6
 36022                           tablat	equ	0xFF5
 36023                           prodh	equ	0xFF4
 36024                           prodl	equ	0xFF3
 36025                           intcon	equ	0xFF2
 36026                           intcon2	equ	0xFF1
 36027                           intcon3	equ	0xFF0
 36028                           indf0	equ	0xFEF
 36029                           postinc0	equ	0xFEE
 36030                           plusw0	equ	0xFEB
 36031                           fsr0h	equ	0xFEA
 36032                           fsr0l	equ	0xFE9
 36033                           wreg	equ	0xFE8
 36034                           postinc1	equ	0xFE6
 36035                           postdec1	equ	0xFE5
 36036                           plusw1	equ	0xFE3
 36037                           fsr1h	equ	0xFE2
 36038                           fsr1l	equ	0xFE1
 36039                           indf2	equ	0xFDF
 36040                           postinc2	equ	0xFDE
 36041                           postdec2	equ	0xFDD
 36042                           plusw2	equ	0xFDB
 36043                           fsr2h	equ	0xFDA
 36044                           fsr2l	equ	0xFD9
 36045                           status	equ	0xFD8
 36046                           
 36047 ;; *************** function _SwTimerStop *****************
 36048 ;; Defined at:
 36049 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36050 ;; Parameters:    Size  Location     Type
 36051 ;;  timerId         1    wreg     unsigned char 
 36052 ;; Auto vars:     Size  Location     Type
 36053 ;;  timerId         1    4[BANK0 ] unsigned char 
 36054 ;; Return value:  Size  Location     Type
 36055 ;;                  1    wreg      void 
 36056 ;; Registers used:
 36057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36058 ;; Tracked objects:
 36059 ;;		On entry : C/1
 36060 ;;		On exit  : F/0
 36061 ;;		Unchanged: 0/0
 36062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36064 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36066 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36067 ;;Total ram usage:        1 bytes
 36068 ;; Hardware stack levels used:    1
 36069 ;; Hardware stack levels required when called:    7
 36070 ;; This function calls:
 36071 ;;		Nothing
 36072 ;; This function is called by:
 36073 ;;		_RADIO_Init
 36074 ;;		_RADIO_Transmit
 36075 ;;		_RADIO_RxDone
 36076 ;;		_RADIO_FSKPayloadReady
 36077 ;;		_RADIO_RxTimeout
 36078 ;;		_RADIO_TxDone
 36079 ;;		_RADIO_FSKPacketSent
 36080 ;;		_RADIO_RxFSKTimeout
 36081 ;;		_LORAWAN_TxDone
 36082 ;;		_StopAllSoftwareTimers
 36083 ;;		_LORAWAN_LinkCheckConfigure
 36084 ;;		_LORAWAN_RxDone
 36085 ;; This function uses a non-reentrant model
 36086 ;;
 36087                           
 36088                           	psect	text188
 36089  0076D4                     __ptext188:
 36090                           	opt stack 0
 36091  0076D4                     _SwTimerStop:
 36092                           	opt stack 20
 36093                           
 36094                           ; BSR set to: 0
 36095                           ;incstack = 0
 36096                           ;SwTimerStop@timerId stored from wreg
 36097  0076D4  0100               	movlb	0	; () banked
 36098  0076D6  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 36099                           
 36100                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 36101  0076D8  9EF2               	bcf	intcon,7,c	;volatile
 36102                           
 36103                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 36104  0076DA  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 36105  0076DC  0D08               	mullw	8
 36106  0076DE  0E04               	movlw	low (_swTimers+4)
 36107  0076E0  24F3               	addwf	prodl,w,c
 36108  0076E2  6ED9               	movwf	fsr2l,c
 36109  0076E4  0E03               	movlw	high (_swTimers+4)
 36110  0076E6  20F4               	addwfc	prodh,w,c
 36111  0076E8  6EDA               	movwf	fsr2h,c
 36112  0076EA  6ADF               	clrf	indf2,c
 36113                           
 36114                           ; BSR set to: 0
 36115                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 36116  0076EC  8EF2               	bsf	intcon,7,c	;volatile
 36117                           
 36118                           ; BSR set to: 0
 36119  0076EE  0C00               	retlw	0	;funcret
 36120  0076F0                     __end_of_SwTimerStop:
 36121                           	opt stack 0
 36122                           tosu	equ	0xFFF
 36123                           tosh	equ	0xFFE
 36124                           tosl	equ	0xFFD
 36125                           pclath	equ	0xFFA
 36126                           tblptru	equ	0xFF8
 36127                           tblptrh	equ	0xFF7
 36128                           tblptrl	equ	0xFF6
 36129                           tablat	equ	0xFF5
 36130                           prodh	equ	0xFF4
 36131                           prodl	equ	0xFF3
 36132                           intcon	equ	0xFF2
 36133                           intcon2	equ	0xFF1
 36134                           intcon3	equ	0xFF0
 36135                           indf0	equ	0xFEF
 36136                           postinc0	equ	0xFEE
 36137                           plusw0	equ	0xFEB
 36138                           fsr0h	equ	0xFEA
 36139                           fsr0l	equ	0xFE9
 36140                           wreg	equ	0xFE8
 36141                           postinc1	equ	0xFE6
 36142                           postdec1	equ	0xFE5
 36143                           plusw1	equ	0xFE3
 36144                           fsr1h	equ	0xFE2
 36145                           fsr1l	equ	0xFE1
 36146                           indf2	equ	0xFDF
 36147                           postinc2	equ	0xFDE
 36148                           postdec2	equ	0xFDD
 36149                           plusw2	equ	0xFDB
 36150                           fsr2h	equ	0xFDA
 36151                           fsr2l	equ	0xFD9
 36152                           status	equ	0xFD8
 36153                           
 36154 ;; *************** function _SwTimerStart *****************
 36155 ;; Defined at:
 36156 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36157 ;; Parameters:    Size  Location     Type
 36158 ;;  timerId         1    wreg     unsigned char 
 36159 ;; Auto vars:     Size  Location     Type
 36160 ;;  timerId         1   53[BANK0 ] unsigned char 
 36161 ;;  ticksRemaini    4   49[BANK0 ] unsigned long 
 36162 ;; Return value:  Size  Location     Type
 36163 ;;                  1    wreg      void 
 36164 ;; Registers used:
 36165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36166 ;; Tracked objects:
 36167 ;;		On entry : C/2
 36168 ;;		On exit  : F/0
 36169 ;;		Unchanged: 0/0
 36170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36172 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36173 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36174 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36175 ;;Total ram usage:        9 bytes
 36176 ;; Hardware stack levels used:    1
 36177 ;; Hardware stack levels required when called:   10
 36178 ;; This function calls:
 36179 ;;		_SwTimersInterrupt
 36180 ;;		_TMR_OverrideRemaining
 36181 ;; This function is called by:
 36182 ;;		_RADIO_Transmit
 36183 ;;		_RADIO_ReceiveStart
 36184 ;;		_LORAWAN_TxDone
 36185 ;;		_LORAWAN_RxTimeout
 36186 ;;		_StartReTxTimer
 36187 ;;		_DutyCycleCallback
 36188 ;;		_LORAWAN_Join
 36189 ;;		_LORAWAN_LinkCheckConfigure
 36190 ;;		_LORAWAN_LinkCheckCallback
 36191 ;;		_UpdateRetransmissionAckTimeoutState
 36192 ;;		_UpdateJoinSuccessState
 36193 ;; This function uses a non-reentrant model
 36194 ;;
 36195                           
 36196                           	psect	text189
 36197  005EB2                     __ptext189:
 36198                           	opt stack 0
 36199  005EB2                     _SwTimerStart:
 36200                           	opt stack 17
 36201                           
 36202                           ; BSR set to: 0
 36203                           ;incstack = 0
 36204                           ;SwTimerStart@timerId stored from wreg
 36205  005EB2  0100               	movlb	0	; () banked
 36206  005EB4  6F95               	movwf	SwTimerStart@timerId& (0+255),b
 36207                           
 36208                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 36209                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 36210  005EB6  9EF2               	bcf	intcon,7,c	;volatile
 36211                           
 36212                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 36213  005EB8  EC78  F027         	call	_SwTimersInterrupt	;wreg free
 36214  005EBC  C07C  F091         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 36215  005EC0  C07D  F092         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 36216  005EC4  C07E  F093         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 36217  005EC8  C07F  F094         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 36218                           
 36219                           ; BSR set to: 0
 36220                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 36221  005ECC  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 36222  005ECE  0D08               	mullw	8
 36223  005ED0  0E00               	movlw	low _swTimers
 36224  005ED2  24F3               	addwf	prodl,w,c
 36225  005ED4  6ED9               	movwf	fsr2l,c
 36226  005ED6  0E03               	movlw	high _swTimers
 36227  005ED8  20F4               	addwfc	prodh,w,c
 36228  005EDA  6EDA               	movwf	fsr2h,c
 36229  005EDC  5191               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 36230  005EDE  5CDE               	subwf	postinc2,w,c
 36231  005EE0  5192               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 36232  005EE2  58DE               	subwfb	postinc2,w,c
 36233  005EE4  5193               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 36234  005EE6  58DE               	subwfb	postinc2,w,c
 36235  005EE8  5194               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 36236  005EEA  58DE               	subwfb	postinc2,w,c
 36237  005EEC  E210               	bc	l12620
 36238                           
 36239                           ; BSR set to: 0
 36240                           ;sw_timer.c: 225: {
 36241                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 36242  005EEE  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 36243  005EF0  0D08               	mullw	8
 36244  005EF2  0E00               	movlw	low _swTimers
 36245  005EF4  24F3               	addwf	prodl,w,c
 36246  005EF6  6ED9               	movwf	fsr2l,c
 36247  005EF8  0E03               	movlw	high _swTimers
 36248  005EFA  20F4               	addwfc	prodh,w,c
 36249  005EFC  6EDA               	movwf	fsr2h,c
 36250  005EFE  CFDE F091          	movff	postinc2,SwTimerStart@ticksRemaining
 36251  005F02  CFDE F092          	movff	postinc2,SwTimerStart@ticksRemaining+1
 36252  005F06  CFDE F093          	movff	postinc2,SwTimerStart@ticksRemaining+2
 36253  005F0A  CFDE F094          	movff	postinc2,SwTimerStart@ticksRemaining+3
 36254  005F0E                     l12620:
 36255                           
 36256                           ; BSR set to: 0
 36257                           ;sw_timer.c: 227: }
 36258                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 36259  005F0E  C091  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 36260  005F12  C092  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 36261  005F16  C093  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 36262  005F1A  C094  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 36263  005F1E  ECDD  F030         	call	_TMR_OverrideRemaining	;wreg free
 36264                           
 36265                           ; BSR set to: 0
 36266                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 36267  005F22  5195               	movf	SwTimerStart@timerId& (0+255),w,b
 36268  005F24  0D08               	mullw	8
 36269  005F26  0E04               	movlw	low (_swTimers+4)
 36270  005F28  24F3               	addwf	prodl,w,c
 36271  005F2A  6ED9               	movwf	fsr2l,c
 36272  005F2C  0E03               	movlw	high (_swTimers+4)
 36273  005F2E  20F4               	addwfc	prodh,w,c
 36274  005F30  6EDA               	movwf	fsr2h,c
 36275  005F32  0E01               	movlw	1
 36276  005F34  6EDF               	movwf	indf2,c
 36277                           
 36278                           ; BSR set to: 0
 36279                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 36280  005F36  8EF2               	bsf	intcon,7,c	;volatile
 36281                           
 36282                           ; BSR set to: 0
 36283  005F38  0C01               	retlw	1	;funcret
 36284  005F3A                     __end_of_SwTimerStart:
 36285                           	opt stack 0
 36286                           tosu	equ	0xFFF
 36287                           tosh	equ	0xFFE
 36288                           tosl	equ	0xFFD
 36289                           pclath	equ	0xFFA
 36290                           tblptru	equ	0xFF8
 36291                           tblptrh	equ	0xFF7
 36292                           tblptrl	equ	0xFF6
 36293                           tablat	equ	0xFF5
 36294                           prodh	equ	0xFF4
 36295                           prodl	equ	0xFF3
 36296                           intcon	equ	0xFF2
 36297                           intcon2	equ	0xFF1
 36298                           intcon3	equ	0xFF0
 36299                           indf0	equ	0xFEF
 36300                           postinc0	equ	0xFEE
 36301                           plusw0	equ	0xFEB
 36302                           fsr0h	equ	0xFEA
 36303                           fsr0l	equ	0xFE9
 36304                           wreg	equ	0xFE8
 36305                           postinc1	equ	0xFE6
 36306                           postdec1	equ	0xFE5
 36307                           plusw1	equ	0xFE3
 36308                           fsr1h	equ	0xFE2
 36309                           fsr1l	equ	0xFE1
 36310                           indf2	equ	0xFDF
 36311                           postinc2	equ	0xFDE
 36312                           postdec2	equ	0xFDD
 36313                           plusw2	equ	0xFDB
 36314                           fsr2h	equ	0xFDA
 36315                           fsr2l	equ	0xFD9
 36316                           status	equ	0xFD8
 36317                           
 36318 ;; *************** function _TMR_OverrideRemaining *****************
 36319 ;; Defined at:
 36320 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36321 ;; Parameters:    Size  Location     Type
 36322 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 36323 ;; Auto vars:     Size  Location     Type
 36324 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 36325 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 36326 ;; Return value:  Size  Location     Type
 36327 ;;                  1    wreg      void 
 36328 ;; Registers used:
 36329 ;;		wreg, status,2, status,0, cstack
 36330 ;; Tracked objects:
 36331 ;;		On entry : F/0
 36332 ;;		On exit  : F/0
 36333 ;;		Unchanged: 0/0
 36334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36335 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36336 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36337 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36338 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36339 ;;Total ram usage:       10 bytes
 36340 ;; Hardware stack levels used:    1
 36341 ;; Hardware stack levels required when called:    9
 36342 ;; This function calls:
 36343 ;;		_TMR_SwapTimer
 36344 ;; This function is called by:
 36345 ;;		_SwTimerStart
 36346 ;; This function uses a non-reentrant model
 36347 ;;
 36348                           
 36349                           	psect	text190
 36350  0061BA                     __ptext190:
 36351                           	opt stack 0
 36352  0061BA                     _TMR_OverrideRemaining:
 36353                           	opt stack 17
 36354                           
 36355                           ; BSR set to: 0
 36356                           ;sw_timer.c: 67: uint16_t tmrVal;
 36357                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 36358                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 36359                           
 36360                           ; BSR set to: 0
 36361                           ;incstack = 0
 36362  0061BA  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 36363  0061BC  105C               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 36364  0061BE  105B               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 36365  0061C0  E104               	bnz	u12940
 36366  0061C2  0E0B               	movlw	11
 36367  0061C4  5C5A               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 36368  0061C6  A0D8               	btfss	status,0,c
 36369  0061C8  0012               	return	
 36370  0061CA                     u12940:
 36371                           
 36372                           ; BSR set to: 0
 36373                           ;sw_timer.c: 72: {
 36374                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 36375  0061CA  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 36376  0061CC  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 36377  0061CE  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 36378  0061D0  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 36379  0061D2  505C               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 36380  0061D4  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 36381  0061D6  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 36382  0061D8  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 36383  0061DA  B0D8               	btfsc	status,0,c
 36384  0061DC  0012               	return	
 36385                           
 36386                           ; BSR set to: 0
 36387                           ;sw_timer.c: 74: {
 36388                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 36389  0061DE  C06E  F05A         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 36390  0061E2  C06F  F05B         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 36391  0061E6  C070  F05C         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 36392  0061EA  C071  F05D         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 36393                           
 36394                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 36395  0061EE  C0F0  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 36396  0061F2  C0F1  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 36397                           
 36398                           ; BSR set to: 0
 36399                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 36400  0061F6  516E               	movf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 36401  0061F8  0800               	sublw	0
 36402  0061FA  6FF0               	movwf	_reloadVal& (0+255),b	;volatile
 36403  0061FC  516F               	movf	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 36404  0061FE  A0D8               	btfss	status,0,c
 36405  006200  2AE8               	incf	wreg,f,c
 36406  006202  0800               	sublw	0
 36407  006204  6FF1               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 36408                           
 36409                           ; BSR set to: 0
 36410                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 36411  006206  C0F0  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 36412  00620A  C0F1  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 36413  00620E  ECBD  F037         	call	_TMR_SwapTimer	;wreg free
 36414  006212  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 36415  006216  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 36416                           
 36417                           ; BSR set to: 0
 36418                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 36419  00621A  5176               	movf	TMR_OverrideRemaining@oldReloadVal& (0+255),w,b
 36420  00621C  5D74               	subwf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 36421  00621E  6F72               	movwf	??_TMR_OverrideRemaining& (0+255),b
 36422  006220  5177               	movf	(TMR_OverrideRemaining@oldReloadVal+1)& (0+255),w,b
 36423  006222  5975               	subwfb	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 36424  006224  6F73               	movwf	(??_TMR_OverrideRemaining+1)& (0+255),b
 36425  006226  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 36426  006228  263A               	addwf	_ticksAdded,f,c	;volatile
 36427  00622A  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 36428  00622C  223B               	addwfc	_ticksAdded+1,f,c	;volatile
 36429  00622E  0E00               	movlw	0
 36430  006230  223C               	addwfc	_ticksAdded+2,f,c	;volatile
 36431  006232  223D               	addwfc	_ticksAdded+3,f,c	;volatile
 36432                           
 36433                           ; BSR set to: 0
 36434  006234  0C00               	retlw	0	;funcret
 36435  006236                     __end_of_TMR_OverrideRemaining:
 36436                           	opt stack 0
 36437                           tosu	equ	0xFFF
 36438                           tosh	equ	0xFFE
 36439                           tosl	equ	0xFFD
 36440                           pclath	equ	0xFFA
 36441                           tblptru	equ	0xFF8
 36442                           tblptrh	equ	0xFF7
 36443                           tblptrl	equ	0xFF6
 36444                           tablat	equ	0xFF5
 36445                           prodh	equ	0xFF4
 36446                           prodl	equ	0xFF3
 36447                           intcon	equ	0xFF2
 36448                           intcon2	equ	0xFF1
 36449                           intcon3	equ	0xFF0
 36450                           indf0	equ	0xFEF
 36451                           postinc0	equ	0xFEE
 36452                           plusw0	equ	0xFEB
 36453                           fsr0h	equ	0xFEA
 36454                           fsr0l	equ	0xFE9
 36455                           wreg	equ	0xFE8
 36456                           postinc1	equ	0xFE6
 36457                           postdec1	equ	0xFE5
 36458                           plusw1	equ	0xFE3
 36459                           fsr1h	equ	0xFE2
 36460                           fsr1l	equ	0xFE1
 36461                           indf2	equ	0xFDF
 36462                           postinc2	equ	0xFDE
 36463                           postdec2	equ	0xFDD
 36464                           plusw2	equ	0xFDB
 36465                           fsr2h	equ	0xFDA
 36466                           fsr2l	equ	0xFD9
 36467                           status	equ	0xFD8
 36468                           
 36469 ;; *************** function _TMR_SwapTimer *****************
 36470 ;; Defined at:
 36471 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36472 ;; Parameters:    Size  Location     Type
 36473 ;;  timerVal        2   12[BANK0 ] unsigned int 
 36474 ;; Auto vars:     Size  Location     Type
 36475 ;;		None
 36476 ;; Return value:  Size  Location     Type
 36477 ;;                  2   12[BANK0 ] unsigned int 
 36478 ;; Registers used:
 36479 ;;		wreg, status,2, status,0, cstack
 36480 ;; Tracked objects:
 36481 ;;		On entry : F/0
 36482 ;;		On exit  : F/0
 36483 ;;		Unchanged: 0/0
 36484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36485 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36488 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36489 ;;Total ram usage:        2 bytes
 36490 ;; Hardware stack levels used:    1
 36491 ;; Hardware stack levels required when called:    8
 36492 ;; This function calls:
 36493 ;;		_TMR1_ReadTimer
 36494 ;;		_TMR1_WriteTimer
 36495 ;; This function is called by:
 36496 ;;		_TMR_OverrideRemaining
 36497 ;; This function uses a non-reentrant model
 36498 ;;
 36499                           
 36500                           	psect	text191
 36501  006F7A                     __ptext191:
 36502                           	opt stack 0
 36503  006F7A                     _TMR_SwapTimer:
 36504                           	opt stack 17
 36505                           
 36506                           ; BSR set to: 0
 36507                           ;sw_timer.c: 114: static uint16_t oldVal;
 36508                           ;sw_timer.c: 115: static uint16_t retVal;
 36509                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 36510                           
 36511                           ; BSR set to: 0
 36512                           ;incstack = 0
 36513  006F7A  EC4C  F03B         	call	_TMR1_ReadTimer	;wreg free
 36514  006F7E  C064  F042         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 36515  006F82  C065  F043         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 36516  006F86                     l12094:
 36517                           
 36518                           ; BSR set to: 0
 36519  006F86  EC4C  F03B         	call	_TMR1_ReadTimer	;wreg free
 36520  006F8A  5042               	movf	TMR_SwapTimer@oldVal,w,c
 36521  006F8C  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 36522  006F8E  E103               	bnz	u12720
 36523  006F90  5043               	movf	TMR_SwapTimer@oldVal+1,w,c
 36524  006F92  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 36525  006F94  E0F8               	bz	l12094
 36526  006F96                     u12720:
 36527                           
 36528                           ; BSR set to: 0
 36529                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 36530  006F96  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 36531  006F9A  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 36532  006F9E  EC78  F03B         	call	_TMR1_WriteTimer	;wreg free
 36533                           
 36534                           ; BSR set to: 0
 36535                           ;sw_timer.c: 128: oldVal++;
 36536  006FA2  4A42               	infsnz	TMR_SwapTimer@oldVal,f,c
 36537  006FA4  2A43               	incf	TMR_SwapTimer@oldVal+1,f,c
 36538                           
 36539                           ; BSR set to: 0
 36540                           ;sw_timer.c: 130: retVal = oldVal;
 36541  006FA6  C042  F044         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 36542  006FAA  C043  F045         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 36543                           
 36544                           ; BSR set to: 0
 36545                           ;sw_timer.c: 132: return retVal;
 36546  006FAE  C044  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 36547  006FB2  C045  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 36548                           
 36549                           ; BSR set to: 0
 36550  006FB6  0012               	return		;funcret
 36551  006FB8                     __end_of_TMR_SwapTimer:
 36552                           	opt stack 0
 36553                           tosu	equ	0xFFF
 36554                           tosh	equ	0xFFE
 36555                           tosl	equ	0xFFD
 36556                           pclath	equ	0xFFA
 36557                           tblptru	equ	0xFF8
 36558                           tblptrh	equ	0xFF7
 36559                           tblptrl	equ	0xFF6
 36560                           tablat	equ	0xFF5
 36561                           prodh	equ	0xFF4
 36562                           prodl	equ	0xFF3
 36563                           intcon	equ	0xFF2
 36564                           intcon2	equ	0xFF1
 36565                           intcon3	equ	0xFF0
 36566                           indf0	equ	0xFEF
 36567                           postinc0	equ	0xFEE
 36568                           plusw0	equ	0xFEB
 36569                           fsr0h	equ	0xFEA
 36570                           fsr0l	equ	0xFE9
 36571                           wreg	equ	0xFE8
 36572                           postinc1	equ	0xFE6
 36573                           postdec1	equ	0xFE5
 36574                           plusw1	equ	0xFE3
 36575                           fsr1h	equ	0xFE2
 36576                           fsr1l	equ	0xFE1
 36577                           indf2	equ	0xFDF
 36578                           postinc2	equ	0xFDE
 36579                           postdec2	equ	0xFDD
 36580                           plusw2	equ	0xFDB
 36581                           fsr2h	equ	0xFDA
 36582                           fsr2l	equ	0xFD9
 36583                           status	equ	0xFD8
 36584                           
 36585 ;; *************** function _TMR1_WriteTimer *****************
 36586 ;; Defined at:
 36587 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 36588 ;; Parameters:    Size  Location     Type
 36589 ;;  timerVal        2    4[BANK0 ] unsigned int 
 36590 ;; Auto vars:     Size  Location     Type
 36591 ;;		None
 36592 ;; Return value:  Size  Location     Type
 36593 ;;                  1    wreg      void 
 36594 ;; Registers used:
 36595 ;;		None
 36596 ;; Tracked objects:
 36597 ;;		On entry : F/0
 36598 ;;		On exit  : F/0
 36599 ;;		Unchanged: F/0
 36600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36601 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36604 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36605 ;;Total ram usage:        2 bytes
 36606 ;; Hardware stack levels used:    1
 36607 ;; Hardware stack levels required when called:    7
 36608 ;; This function calls:
 36609 ;;		Nothing
 36610 ;; This function is called by:
 36611 ;;		_TMR_SwapTimer
 36612 ;; This function uses a non-reentrant model
 36613 ;;
 36614                           
 36615                           	psect	text192
 36616  0076F0                     __ptext192:
 36617                           	opt stack 0
 36618  0076F0                     _TMR1_WriteTimer:
 36619                           	opt stack 17
 36620                           
 36621                           ; BSR set to: 0
 36622                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 36623                           
 36624                           ; BSR set to: 0
 36625                           ;incstack = 0
 36626  0076F0  A4CD               	btfss	4045,2,c	;volatile
 36627  0076F2  D007               	goto	l1349
 36628                           
 36629                           ; BSR set to: 0
 36630                           ;tmr1.c: 123: {
 36631                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 36632  0076F4  90CD               	bcf	4045,0,c	;volatile
 36633                           
 36634                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 36635  0076F6  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 36636                           
 36637                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 36638  0076FA  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 36639                           
 36640                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 36641  0076FE  80CD               	bsf	4045,0,c	;volatile
 36642                           
 36643                           ;tmr1.c: 133: }
 36644  007700  0012               	return	
 36645  007702                     l1349:
 36646                           
 36647                           ; BSR set to: 0
 36648                           ;tmr1.c: 134: else
 36649                           ;tmr1.c: 135: {
 36650                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 36651  007702  C065  FFCF         	movff	TMR1_WriteTimer@timerVal+1,4047	;volatile
 36652                           
 36653                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 36654  007706  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 36655                           
 36656                           ; BSR set to: 0
 36657  00770A  0012               	return		;funcret
 36658  00770C                     __end_of_TMR1_WriteTimer:
 36659                           	opt stack 0
 36660                           tosu	equ	0xFFF
 36661                           tosh	equ	0xFFE
 36662                           tosl	equ	0xFFD
 36663                           pclath	equ	0xFFA
 36664                           tblptru	equ	0xFF8
 36665                           tblptrh	equ	0xFF7
 36666                           tblptrl	equ	0xFF6
 36667                           tablat	equ	0xFF5
 36668                           prodh	equ	0xFF4
 36669                           prodl	equ	0xFF3
 36670                           intcon	equ	0xFF2
 36671                           intcon2	equ	0xFF1
 36672                           intcon3	equ	0xFF0
 36673                           indf0	equ	0xFEF
 36674                           postinc0	equ	0xFEE
 36675                           plusw0	equ	0xFEB
 36676                           fsr0h	equ	0xFEA
 36677                           fsr0l	equ	0xFE9
 36678                           wreg	equ	0xFE8
 36679                           postinc1	equ	0xFE6
 36680                           postdec1	equ	0xFE5
 36681                           plusw1	equ	0xFE3
 36682                           fsr1h	equ	0xFE2
 36683                           fsr1l	equ	0xFE1
 36684                           indf2	equ	0xFDF
 36685                           postinc2	equ	0xFDE
 36686                           postdec2	equ	0xFDD
 36687                           plusw2	equ	0xFDB
 36688                           fsr2h	equ	0xFDA
 36689                           fsr2l	equ	0xFD9
 36690                           status	equ	0xFD8
 36691                           
 36692 ;; *************** function _SwTimersInterrupt *****************
 36693 ;; Defined at:
 36694 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36695 ;; Parameters:    Size  Location     Type
 36696 ;;		None
 36697 ;; Auto vars:     Size  Location     Type
 36698 ;;  ticksToNextT    4   40[BANK0 ] unsigned long 
 36699 ;;  timeElapsed     4   36[BANK0 ] unsigned long 
 36700 ;;  i               1   44[BANK0 ] unsigned char 
 36701 ;; Return value:  Size  Location     Type
 36702 ;;                  4   28[BANK0 ] unsigned long 
 36703 ;; Registers used:
 36704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36705 ;; Tracked objects:
 36706 ;;		On entry : 0/0
 36707 ;;		On exit  : F/0
 36708 ;;		Unchanged: 0/0
 36709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36710 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36711 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36712 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36713 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36714 ;;Total ram usage:       17 bytes
 36715 ;; Hardware stack levels used:    1
 36716 ;; Hardware stack levels required when called:    9
 36717 ;; This function calls:
 36718 ;;		_TMR_GetDeltaTime
 36719 ;; This function is called by:
 36720 ;;		_SwTimerReadValue
 36721 ;;		_SwTimerStart
 36722 ;; This function uses a non-reentrant model
 36723 ;;
 36724                           
 36725                           	psect	text193
 36726  004EF0                     __ptext193:
 36727                           	opt stack 0
 36728  004EF0                     _SwTimersInterrupt:
 36729                           	opt stack 17
 36730                           
 36731                           ;sw_timer.c: 289: uint8_t i;
 36732                           ;sw_timer.c: 290: uint32_t timeElapsed;
 36733                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 36734                           
 36735                           ; BSR set to: 0
 36736                           ;incstack = 0
 36737  004EF0  0100               	movlb	0	; () banked
 36738  004EF2  6988               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 36739  004EF4  6989               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 36740  004EF6  698A               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 36741  004EF8  698B               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 36742                           
 36743                           ; BSR set to: 0
 36744                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 36745  004EFA  ECEF  F027         	call	_TMR_GetDeltaTime	;wreg free
 36746  004EFE  C06C  F084         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 36747  004F02  C06D  F085         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 36748  004F06  C06E  F086         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 36749  004F0A  C06F  F087         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 36750                           
 36751                           ; BSR set to: 0
 36752                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 36753  004F0E  6B8C               	clrf	SwTimersInterrupt@i& (0+255),b
 36754  004F10  D05A               	goto	l12340
 36755  004F12                     l12328:
 36756                           
 36757                           ; BSR set to: 0
 36758                           ;sw_timer.c: 298: {
 36759                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 36760  004F12  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36761  004F14  0D08               	mullw	8
 36762  004F16  0E04               	movlw	low (_swTimers+4)
 36763  004F18  24F3               	addwf	prodl,w,c
 36764  004F1A  6ED9               	movwf	fsr2l,c
 36765  004F1C  0E03               	movlw	high (_swTimers+4)
 36766  004F1E  20F4               	addwfc	prodh,w,c
 36767  004F20  6EDA               	movwf	fsr2h,c
 36768  004F22  04DE               	decf	postinc2,w,c
 36769  004F24  E14F               	bnz	l12338
 36770                           
 36771                           ; BSR set to: 0
 36772                           ;sw_timer.c: 302: {
 36773                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 36774  004F26  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36775  004F28  0D08               	mullw	8
 36776  004F2A  0E00               	movlw	low _swTimers
 36777  004F2C  24F3               	addwf	prodl,w,c
 36778  004F2E  6ED9               	movwf	fsr2l,c
 36779  004F30  0E03               	movlw	high _swTimers
 36780  004F32  20F4               	addwfc	prodh,w,c
 36781  004F34  6EDA               	movwf	fsr2h,c
 36782  004F36  50DE               	movf	postinc2,w,c
 36783  004F38  5D84               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 36784  004F3A  50DE               	movf	postinc2,w,c
 36785  004F3C  5985               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 36786  004F3E  50DE               	movf	postinc2,w,c
 36787  004F40  5986               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 36788  004F42  50DE               	movf	postinc2,w,c
 36789  004F44  5987               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 36790  004F46  E30D               	bnc	l12334
 36791                           
 36792                           ; BSR set to: 0
 36793                           ;sw_timer.c: 304: {
 36794                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 36795  004F48  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36796  004F4A  0D08               	mullw	8
 36797  004F4C  0E00               	movlw	low _swTimers
 36798  004F4E  24F3               	addwf	prodl,w,c
 36799  004F50  6ED9               	movwf	fsr2l,c
 36800  004F52  0E03               	movlw	high _swTimers
 36801  004F54  20F4               	addwfc	prodh,w,c
 36802  004F56  6EDA               	movwf	fsr2h,c
 36803  004F58  6ADE               	clrf	postinc2,c
 36804  004F5A  6ADE               	clrf	postinc2,c
 36805  004F5C  6ADE               	clrf	postinc2,c
 36806  004F5E  6ADD               	clrf	postdec2,c
 36807                           
 36808                           ;sw_timer.c: 306: }
 36809  004F60  D031               	goto	l12338
 36810  004F62                     l12334:
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;sw_timer.c: 307: else
 36814                           ;sw_timer.c: 308: {
 36815                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 36816  004F62  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36817  004F64  0D08               	mullw	8
 36818  004F66  0E00               	movlw	low _swTimers
 36819  004F68  24F3               	addwf	prodl,w,c
 36820  004F6A  6ED9               	movwf	fsr2l,c
 36821  004F6C  0E03               	movlw	high _swTimers
 36822  004F6E  20F4               	addwfc	prodh,w,c
 36823  004F70  6EDA               	movwf	fsr2h,c
 36824  004F72  5184               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 36825  004F74  5EDE               	subwf	postinc2,f,c
 36826  004F76  5185               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 36827  004F78  5ADE               	subwfb	postinc2,f,c
 36828  004F7A  5186               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 36829  004F7C  5ADE               	subwfb	postinc2,f,c
 36830  004F7E  5187               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 36831  004F80  5ADE               	subwfb	postinc2,f,c
 36832                           
 36833                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 36834  004F82  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36835  004F84  0D08               	mullw	8
 36836  004F86  0E00               	movlw	low _swTimers
 36837  004F88  24F3               	addwf	prodl,w,c
 36838  004F8A  6ED9               	movwf	fsr2l,c
 36839  004F8C  0E03               	movlw	high _swTimers
 36840  004F8E  20F4               	addwfc	prodh,w,c
 36841  004F90  6EDA               	movwf	fsr2h,c
 36842  004F92  5188               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 36843  004F94  5CDE               	subwf	postinc2,w,c
 36844  004F96  5189               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 36845  004F98  58DE               	subwfb	postinc2,w,c
 36846  004F9A  518A               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 36847  004F9C  58DE               	subwfb	postinc2,w,c
 36848  004F9E  518B               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 36849  004FA0  58DE               	subwfb	postinc2,w,c
 36850  004FA2  E210               	bc	l12338
 36851                           
 36852                           ; BSR set to: 0
 36853                           ;sw_timer.c: 313: {
 36854                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 36855  004FA4  518C               	movf	SwTimersInterrupt@i& (0+255),w,b
 36856  004FA6  0D08               	mullw	8
 36857  004FA8  0E00               	movlw	low _swTimers
 36858  004FAA  24F3               	addwf	prodl,w,c
 36859  004FAC  6ED9               	movwf	fsr2l,c
 36860  004FAE  0E03               	movlw	high _swTimers
 36861  004FB0  20F4               	addwfc	prodh,w,c
 36862  004FB2  6EDA               	movwf	fsr2h,c
 36863  004FB4  CFDE F088          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 36864  004FB8  CFDE F089          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 36865  004FBC  CFDE F08A          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 36866  004FC0  CFDE F08B          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 36867  004FC4                     l12338:
 36868                           
 36869                           ; BSR set to: 0
 36870  004FC4  2B8C               	incf	SwTimersInterrupt@i& (0+255),f,b
 36871  004FC6                     l12340:
 36872                           
 36873                           ; BSR set to: 0
 36874  004FC6  51F2               	movf	_allocatedTimers& (0+255),w,b	;volatile
 36875  004FC8  5D8C               	subwf	SwTimersInterrupt@i& (0+255),w,b
 36876  004FCA  E3A3               	bnc	l12328
 36877                           
 36878                           ; BSR set to: 0
 36879                           ;sw_timer.c: 315: }
 36880                           ;sw_timer.c: 316: }
 36881                           ;sw_timer.c: 317: }
 36882                           ;sw_timer.c: 318: }
 36883                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 36884  004FCC  C088  F07C         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 36885  004FD0  C089  F07D         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 36886  004FD4  C08A  F07E         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 36887  004FD8  C08B  F07F         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 36888                           
 36889                           ; BSR set to: 0
 36890  004FDC  0012               	return		;funcret
 36891  004FDE                     __end_of_SwTimersInterrupt:
 36892                           	opt stack 0
 36893                           tosu	equ	0xFFF
 36894                           tosh	equ	0xFFE
 36895                           tosl	equ	0xFFD
 36896                           pclath	equ	0xFFA
 36897                           tblptru	equ	0xFF8
 36898                           tblptrh	equ	0xFF7
 36899                           tblptrl	equ	0xFF6
 36900                           tablat	equ	0xFF5
 36901                           prodh	equ	0xFF4
 36902                           prodl	equ	0xFF3
 36903                           intcon	equ	0xFF2
 36904                           intcon2	equ	0xFF1
 36905                           intcon3	equ	0xFF0
 36906                           indf0	equ	0xFEF
 36907                           postinc0	equ	0xFEE
 36908                           plusw0	equ	0xFEB
 36909                           fsr0h	equ	0xFEA
 36910                           fsr0l	equ	0xFE9
 36911                           wreg	equ	0xFE8
 36912                           postinc1	equ	0xFE6
 36913                           postdec1	equ	0xFE5
 36914                           plusw1	equ	0xFE3
 36915                           fsr1h	equ	0xFE2
 36916                           fsr1l	equ	0xFE1
 36917                           indf2	equ	0xFDF
 36918                           postinc2	equ	0xFDE
 36919                           postdec2	equ	0xFDD
 36920                           plusw2	equ	0xFDB
 36921                           fsr2h	equ	0xFDA
 36922                           fsr2l	equ	0xFD9
 36923                           status	equ	0xFD8
 36924                           
 36925 ;; *************** function _TMR_GetDeltaTime *****************
 36926 ;; Defined at:
 36927 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 36928 ;; Parameters:    Size  Location     Type
 36929 ;;		None
 36930 ;; Auto vars:     Size  Location     Type
 36931 ;;		None
 36932 ;; Return value:  Size  Location     Type
 36933 ;;                  4   12[BANK0 ] unsigned long 
 36934 ;; Registers used:
 36935 ;;		wreg, status,2, status,0, cstack
 36936 ;; Tracked objects:
 36937 ;;		On entry : F/0
 36938 ;;		On exit  : F/0
 36939 ;;		Unchanged: 0/0
 36940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36941 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36943 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36944 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36945 ;;Total ram usage:       16 bytes
 36946 ;; Hardware stack levels used:    1
 36947 ;; Hardware stack levels required when called:    8
 36948 ;; This function calls:
 36949 ;;		_TMR1_ReadTimer
 36950 ;; This function is called by:
 36951 ;;		_SwTimersInterrupt
 36952 ;; This function uses a non-reentrant model
 36953 ;;
 36954                           
 36955                           	psect	text194
 36956  004FDE                     __ptext194:
 36957                           	opt stack 0
 36958  004FDE                     _TMR_GetDeltaTime:
 36959                           	opt stack 17
 36960                           
 36961                           ; BSR set to: 0
 36962                           ;sw_timer.c: 90: static uint32_t retVal;
 36963                           ;sw_timer.c: 91: static uint16_t tmrVal;
 36964                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 36965                           
 36966                           ; BSR set to: 0
 36967                           ;incstack = 0
 36968  004FDE  EC4C  F03B         	call	_TMR1_ReadTimer	;wreg free
 36969  004FE2  C064  F040         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 36970  004FE6  C065  F041         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 36971                           
 36972                           ; BSR set to: 0
 36973                           ;sw_timer.c: 95: if (timerOverflow == 1)
 36974  004FEA  0449               	decf	_timerOverflow,w,c	;volatile
 36975  004FEC  E13D               	bnz	l12120
 36976                           
 36977                           ; BSR set to: 0
 36978                           ;sw_timer.c: 96: {
 36979                           ;sw_timer.c: 97: timerOverflow = 0;
 36980  004FEE  6A49               	clrf	_timerOverflow,c	;volatile
 36981                           
 36982                           ; BSR set to: 0
 36983                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 36984  004FF0  51F0               	movf	_reloadVal& (0+255),w,b	;volatile
 36985  004FF2  5C40               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 36986  004FF4  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 36987  004FF6  51F1               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 36988  004FF8  5841               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 36989  004FFA  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 36990  004FFC  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 36991  004FFE  A0D8               	btfss	status,0,c
 36992  005000  0772               	decf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 36993  005002  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 36994  005004  6F73               	movwf	(??_TMR_GetDeltaTime+3)& (0+255),b
 36995  005006  5036               	movf	_ticksAccounted,w,c	;volatile
 36996  005008  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 36997  00500A  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 36998  00500C  5037               	movf	_ticksAccounted+1,w,c	;volatile
 36999  00500E  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 37000  005010  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 37001  005012  5038               	movf	_ticksAccounted+2,w,c	;volatile
 37002  005014  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 37003  005016  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 37004  005018  5039               	movf	_ticksAccounted+3,w,c	;volatile
 37005  00501A  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 37006  00501C  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 37007  00501E  503A               	movf	_ticksAdded,w,c	;volatile
 37008  005020  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 37009  005022  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 37010  005024  503B               	movf	_ticksAdded+1,w,c	;volatile
 37011  005026  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 37012  005028  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 37013  00502A  503C               	movf	_ticksAdded+2,w,c	;volatile
 37014  00502C  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 37015  00502E  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 37016  005030  503D               	movf	_ticksAdded+3,w,c	;volatile
 37017  005032  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 37018  005034  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 37019  005036  0E00               	movlw	0
 37020  005038  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 37021  00503A  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 37022  00503C  0E00               	movlw	0
 37023  00503E  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 37024  005040  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 37025  005042  0E01               	movlw	1
 37026  005044  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 37027  005046  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 37028  005048  0E00               	movlw	0
 37029  00504A  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 37030  00504C  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 37031                           
 37032                           ; BSR set to: 0
 37033                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 37034  00504E  C040  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 37035  005052  C041  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 37036  005056  6A38               	clrf	_ticksAccounted+2,c	;volatile
 37037  005058  6A39               	clrf	_ticksAccounted+3,c	;volatile
 37038                           
 37039                           ; BSR set to: 0
 37040                           ;sw_timer.c: 100: ticksAdded = 0;
 37041  00505A  6A3A               	clrf	_ticksAdded,c	;volatile
 37042  00505C  6A3B               	clrf	_ticksAdded+1,c	;volatile
 37043  00505E  6A3C               	clrf	_ticksAdded+2,c	;volatile
 37044  005060  6A3D               	clrf	_ticksAdded+3,c	;volatile
 37045                           
 37046                           ; BSR set to: 0
 37047                           ;sw_timer.c: 101: reloadVal = 0;
 37048  005062  6BF0               	clrf	_reloadVal& (0+255),b	;volatile
 37049  005064  6BF1               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 37050                           
 37051                           ;sw_timer.c: 102: }
 37052  005066  D028               	goto	l12122
 37053  005068                     l12120:
 37054                           
 37055                           ; BSR set to: 0
 37056                           ;sw_timer.c: 103: else
 37057                           ;sw_timer.c: 104: {
 37058                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 37059  005068  51F0               	movf	_reloadVal& (0+255),w,b	;volatile
 37060  00506A  5C40               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 37061  00506C  6F70               	movwf	??_TMR_GetDeltaTime& (0+255),b
 37062  00506E  51F1               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 37063  005070  5841               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 37064  005072  6F71               	movwf	(??_TMR_GetDeltaTime+1)& (0+255),b
 37065  005074  6B72               	clrf	(??_TMR_GetDeltaTime+2)& (0+255),b
 37066  005076  6B73               	clrf	(??_TMR_GetDeltaTime+3)& (0+255),b
 37067  005078  5036               	movf	_ticksAccounted,w,c	;volatile
 37068  00507A  5D70               	subwf	??_TMR_GetDeltaTime& (0+255),w,b
 37069  00507C  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 37070  00507E  5037               	movf	_ticksAccounted+1,w,c	;volatile
 37071  005080  5971               	subwfb	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 37072  005082  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 37073  005084  5038               	movf	_ticksAccounted+2,w,c	;volatile
 37074  005086  5972               	subwfb	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 37075  005088  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 37076  00508A  5039               	movf	_ticksAccounted+3,w,c	;volatile
 37077  00508C  5973               	subwfb	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 37078  00508E  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 37079  005090  503A               	movf	_ticksAdded,w,c	;volatile
 37080  005092  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 37081  005094  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 37082  005096  503B               	movf	_ticksAdded+1,w,c	;volatile
 37083  005098  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 37084  00509A  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 37085  00509C  503C               	movf	_ticksAdded+2,w,c	;volatile
 37086  00509E  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 37087  0050A0  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 37088  0050A2  503D               	movf	_ticksAdded+3,w,c	;volatile
 37089  0050A4  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 37090  0050A6  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 37091                           
 37092                           ;sw_timer.c: 106: ticksAccounted += retVal;
 37093  0050A8  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 37094  0050AA  2636               	addwf	_ticksAccounted,f,c	;volatile
 37095  0050AC  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 37096  0050AE  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 37097  0050B0  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 37098  0050B2  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 37099  0050B4  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 37100  0050B6  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 37101  0050B8                     l12122:
 37102                           
 37103                           ; BSR set to: 0
 37104                           ;sw_timer.c: 107: }
 37105                           ;sw_timer.c: 109: return retVal;
 37106  0050B8  C032  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 37107  0050BC  C033  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 37108  0050C0  C034  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 37109  0050C4  C035  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 37110                           
 37111                           ; BSR set to: 0
 37112  0050C8  0012               	return		;funcret
 37113  0050CA                     __end_of_TMR_GetDeltaTime:
 37114                           	opt stack 0
 37115                           tosu	equ	0xFFF
 37116                           tosh	equ	0xFFE
 37117                           tosl	equ	0xFFD
 37118                           pclath	equ	0xFFA
 37119                           tblptru	equ	0xFF8
 37120                           tblptrh	equ	0xFF7
 37121                           tblptrl	equ	0xFF6
 37122                           tablat	equ	0xFF5
 37123                           prodh	equ	0xFF4
 37124                           prodl	equ	0xFF3
 37125                           intcon	equ	0xFF2
 37126                           intcon2	equ	0xFF1
 37127                           intcon3	equ	0xFF0
 37128                           indf0	equ	0xFEF
 37129                           postinc0	equ	0xFEE
 37130                           plusw0	equ	0xFEB
 37131                           fsr0h	equ	0xFEA
 37132                           fsr0l	equ	0xFE9
 37133                           wreg	equ	0xFE8
 37134                           postinc1	equ	0xFE6
 37135                           postdec1	equ	0xFE5
 37136                           plusw1	equ	0xFE3
 37137                           fsr1h	equ	0xFE2
 37138                           fsr1l	equ	0xFE1
 37139                           indf2	equ	0xFDF
 37140                           postinc2	equ	0xFDE
 37141                           postdec2	equ	0xFDD
 37142                           plusw2	equ	0xFDB
 37143                           fsr2h	equ	0xFDA
 37144                           fsr2l	equ	0xFD9
 37145                           status	equ	0xFD8
 37146                           
 37147 ;; *************** function _TMR1_ReadTimer *****************
 37148 ;; Defined at:
 37149 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 37150 ;; Parameters:    Size  Location     Type
 37151 ;;		None
 37152 ;; Auto vars:     Size  Location     Type
 37153 ;;  readVal         2    8[BANK0 ] unsigned int 
 37154 ;;  readValLow      1   11[BANK0 ] unsigned char 
 37155 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 37156 ;; Return value:  Size  Location     Type
 37157 ;;                  2    4[BANK0 ] unsigned int 
 37158 ;; Registers used:
 37159 ;;		wreg, status,2
 37160 ;; Tracked objects:
 37161 ;;		On entry : F/0
 37162 ;;		On exit  : F/0
 37163 ;;		Unchanged: 0/0
 37164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37166 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37167 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37168 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37169 ;;Total ram usage:        8 bytes
 37170 ;; Hardware stack levels used:    1
 37171 ;; Hardware stack levels required when called:    7
 37172 ;; This function calls:
 37173 ;;		Nothing
 37174 ;; This function is called by:
 37175 ;;		_TMR_GetDeltaTime
 37176 ;;		_TMR_SwapTimer
 37177 ;; This function uses a non-reentrant model
 37178 ;;
 37179                           
 37180                           	psect	text195
 37181  007698                     __ptext195:
 37182                           	opt stack 0
 37183  007698                     _TMR1_ReadTimer:
 37184                           	opt stack 17
 37185                           
 37186                           ; BSR set to: 0
 37187                           ;tmr1.c: 108: uint16_t readVal;
 37188                           ;tmr1.c: 109: uint8_t readValHigh;
 37189                           ;tmr1.c: 110: uint8_t readValLow;
 37190                           ;tmr1.c: 112: readValLow = TMR1L;
 37191                           
 37192                           ; BSR set to: 0
 37193                           ;incstack = 0
 37194  007698  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 37195                           
 37196                           ;tmr1.c: 113: readValHigh = TMR1H;
 37197  00769C  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 37198                           
 37199                           ; BSR set to: 0
 37200                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 37201  0076A0  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 37202  0076A2  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 37203  0076A4  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 37204  0076A6  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 37205  0076A8  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 37206                           
 37207                           ; BSR set to: 0
 37208                           ;tmr1.c: 117: return readVal;
 37209  0076AC  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 37210  0076B0  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 37211                           
 37212                           ; BSR set to: 0
 37213  0076B4  0012               	return		;funcret
 37214  0076B6                     __end_of_TMR1_ReadTimer:
 37215                           	opt stack 0
 37216                           tosu	equ	0xFFF
 37217                           tosh	equ	0xFFE
 37218                           tosl	equ	0xFFD
 37219                           pclath	equ	0xFFA
 37220                           tblptru	equ	0xFF8
 37221                           tblptrh	equ	0xFF7
 37222                           tblptrl	equ	0xFF6
 37223                           tablat	equ	0xFF5
 37224                           prodh	equ	0xFF4
 37225                           prodl	equ	0xFF3
 37226                           intcon	equ	0xFF2
 37227                           intcon2	equ	0xFF1
 37228                           intcon3	equ	0xFF0
 37229                           indf0	equ	0xFEF
 37230                           postinc0	equ	0xFEE
 37231                           plusw0	equ	0xFEB
 37232                           fsr0h	equ	0xFEA
 37233                           fsr0l	equ	0xFE9
 37234                           wreg	equ	0xFE8
 37235                           postinc1	equ	0xFE6
 37236                           postdec1	equ	0xFE5
 37237                           plusw1	equ	0xFE3
 37238                           fsr1h	equ	0xFE2
 37239                           fsr1l	equ	0xFE1
 37240                           indf2	equ	0xFDF
 37241                           postinc2	equ	0xFDE
 37242                           postdec2	equ	0xFDD
 37243                           plusw2	equ	0xFDB
 37244                           fsr2h	equ	0xFDA
 37245                           fsr2l	equ	0xFD9
 37246                           status	equ	0xFD8
 37247                           
 37248 ;; *************** function _SwTimerSetTimeout *****************
 37249 ;; Defined at:
 37250 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 37251 ;; Parameters:    Size  Location     Type
 37252 ;;  timerId         1    wreg     unsigned char 
 37253 ;;  timeout         4   17[BANK0 ] unsigned long 
 37254 ;; Auto vars:     Size  Location     Type
 37255 ;;  timerId         1   25[BANK0 ] unsigned char 
 37256 ;; Return value:  Size  Location     Type
 37257 ;;                  1    wreg      void 
 37258 ;; Registers used:
 37259 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37260 ;; Tracked objects:
 37261 ;;		On entry : C/2
 37262 ;;		On exit  : F/0
 37263 ;;		Unchanged: 0/0
 37264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37265 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37266 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37267 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37268 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37269 ;;Total ram usage:        9 bytes
 37270 ;; Hardware stack levels used:    1
 37271 ;; Hardware stack levels required when called:    7
 37272 ;; This function calls:
 37273 ;;		Nothing
 37274 ;; This function is called by:
 37275 ;;		_RADIO_Transmit
 37276 ;;		_RADIO_ReceiveStart
 37277 ;;		_LORAWAN_TxDone
 37278 ;;		_LORAWAN_RxTimeout
 37279 ;;		_StartReTxTimer
 37280 ;;		_DutyCycleCallback
 37281 ;;		_LORAWAN_Join
 37282 ;;		_LORAWAN_LinkCheckConfigure
 37283 ;;		_LORAWAN_LinkCheckCallback
 37284 ;;		_UpdateRetransmissionAckTimeoutState
 37285 ;;		_UpdateJoinSuccessState
 37286 ;; This function uses a non-reentrant model
 37287 ;;
 37288                           
 37289                           	psect	text196
 37290  006EBC                     __ptext196:
 37291                           	opt stack 0
 37292  006EBC                     _SwTimerSetTimeout:
 37293                           	opt stack 20
 37294                           
 37295                           ; BSR set to: 0
 37296                           ;incstack = 0
 37297                           ;SwTimerSetTimeout@timerId stored from wreg
 37298  006EBC  0100               	movlb	0	; () banked
 37299  006EBE  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 37300                           
 37301                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 37302  006EC0  9EF2               	bcf	intcon,7,c	;volatile
 37303                           
 37304                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 37305  006EC2  0EE0               	movlw	224
 37306  006EC4  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 37307  006EC6  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 37308  006EC8  0EFF               	movlw	255
 37309  006ECA  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 37310  006ECC  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 37311  006ECE  0EFF               	movlw	255
 37312  006ED0  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 37313  006ED2  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 37314  006ED4  0EFF               	movlw	255
 37315  006ED6  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 37316  006ED8  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 37317  006EDA  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 37318  006EDC  0D08               	mullw	8
 37319  006EDE  0E00               	movlw	low _swTimers
 37320  006EE0  24F3               	addwf	prodl,w,c
 37321  006EE2  6ED9               	movwf	fsr2l,c
 37322  006EE4  0E03               	movlw	high _swTimers
 37323  006EE6  20F4               	addwfc	prodh,w,c
 37324  006EE8  6EDA               	movwf	fsr2h,c
 37325  006EEA  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 37326  006EEE  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 37327  006EF2  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 37328  006EF6  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 37329                           
 37330                           ; BSR set to: 0
 37331                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 37332  006EFA  8EF2               	bsf	intcon,7,c	;volatile
 37333                           
 37334                           ; BSR set to: 0
 37335  006EFC  0012               	return		;funcret
 37336  006EFE                     __end_of_SwTimerSetTimeout:
 37337                           	opt stack 0
 37338                           tosu	equ	0xFFF
 37339                           tosh	equ	0xFFE
 37340                           tosl	equ	0xFFD
 37341                           pclath	equ	0xFFA
 37342                           tblptru	equ	0xFF8
 37343                           tblptrh	equ	0xFF7
 37344                           tblptrl	equ	0xFF6
 37345                           tablat	equ	0xFF5
 37346                           prodh	equ	0xFF4
 37347                           prodl	equ	0xFF3
 37348                           intcon	equ	0xFF2
 37349                           intcon2	equ	0xFF1
 37350                           intcon3	equ	0xFF0
 37351                           indf0	equ	0xFEF
 37352                           postinc0	equ	0xFEE
 37353                           plusw0	equ	0xFEB
 37354                           fsr0h	equ	0xFEA
 37355                           fsr0l	equ	0xFE9
 37356                           wreg	equ	0xFE8
 37357                           postinc1	equ	0xFE6
 37358                           postdec1	equ	0xFE5
 37359                           plusw1	equ	0xFE3
 37360                           fsr1h	equ	0xFE2
 37361                           fsr1l	equ	0xFE1
 37362                           indf2	equ	0xFDF
 37363                           postinc2	equ	0xFDE
 37364                           postdec2	equ	0xFDD
 37365                           plusw2	equ	0xFDB
 37366                           fsr2h	equ	0xFDA
 37367                           fsr2l	equ	0xFD9
 37368                           status	equ	0xFD8
 37369                           
 37370 ;; *************** function _InitDefault868Channels *****************
 37371 ;; Defined at:
 37372 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37373 ;; Parameters:    Size  Location     Type
 37374 ;;		None
 37375 ;; Auto vars:     Size  Location     Type
 37376 ;;  i               1   14[BANK0 ] unsigned char 
 37377 ;; Return value:  Size  Location     Type
 37378 ;;                  1    wreg      void 
 37379 ;; Registers used:
 37380 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37381 ;; Tracked objects:
 37382 ;;		On entry : F/1
 37383 ;;		On exit  : F/0
 37384 ;;		Unchanged: 0/0
 37385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37387 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37389 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37390 ;;Total ram usage:        1 bytes
 37391 ;; Hardware stack levels used:    1
 37392 ;; Hardware stack levels required when called:    8
 37393 ;; This function calls:
 37394 ;;		_memcpy
 37395 ;;		_memset
 37396 ;; This function is called by:
 37397 ;;		_LORAWAN_Reset
 37398 ;; This function uses a non-reentrant model
 37399 ;;
 37400                           
 37401                           	psect	text197
 37402  00652A                     __ptext197:
 37403                           	opt stack 0
 37404  00652A                     _InitDefault868Channels:
 37405                           	opt stack 20
 37406                           
 37407                           ; BSR set to: 1
 37408                           ;lorawan_eu.c: 981: uint8_t i;
 37409                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 37410                           
 37411                           ; BSR set to: 0
 37412                           ;incstack = 0
 37413  00652A  0E00               	movlw	low _Channels
 37414  00652C  0100               	movlb	0	; () banked
 37415  00652E  6F64               	movwf	memset@p1& (0+255),b
 37416  006530  0E04               	movlw	high _Channels
 37417  006532  6F65               	movwf	(memset@p1+1)& (0+255),b
 37418  006534  6B67               	clrf	(memset@c+1)& (0+255),b
 37419  006536  6B66               	clrf	memset@c& (0+255),b
 37420  006538  6B69               	clrf	(memset@n+1)& (0+255),b
 37421  00653A  0EE0               	movlw	224
 37422  00653C  6F68               	movwf	memset@n& (0+255),b
 37423  00653E  ECF1  F039         	call	_memset	;wreg free
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 37427  006542  0E00               	movlw	low _Channels
 37428  006544  6F64               	movwf	memcpy@d1& (0+255),b
 37429  006546  0E04               	movlw	high _Channels
 37430  006548  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 37431  00654A  0E94               	movlw	low _DefaultChannels868
 37432  00654C  6F66               	movwf	memcpy@s1& (0+255),b
 37433  00654E  0EFE               	movlw	high _DefaultChannels868
 37434  006550  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 37435  006552  6B69               	clrf	(memcpy@n+1)& (0+255),b
 37436  006554  0E2A               	movlw	42
 37437  006556  6F68               	movwf	memcpy@n& (0+255),b
 37438  006558  ECD5  F034         	call	_memcpy	;wreg free
 37439                           
 37440                           ; BSR set to: 0
 37441                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 37442  00655C  0E03               	movlw	3
 37443  00655E  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 37444  006560                     l15206:
 37445                           
 37446                           ; BSR set to: 0
 37447                           ;lorawan_eu.c: 986: {
 37448                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 37449  006560  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 37450  006562  0D0E               	mullw	14
 37451  006564  0E06               	movlw	low (_Channels+6)
 37452  006566  24F3               	addwf	prodl,w,c
 37453  006568  6ED9               	movwf	fsr2l,c
 37454  00656A  0E04               	movlw	high (_Channels+6)
 37455  00656C  20F4               	addwfc	prodh,w,c
 37456  00656E  6EDA               	movwf	fsr2h,c
 37457  006570  68DE               	setf	postinc2,c
 37458  006572  68DD               	setf	postdec2,c
 37459                           
 37460                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 37461  006574  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 37462  006576  0D0E               	mullw	14
 37463  006578  0E05               	movlw	low (_Channels+5)
 37464  00657A  24F3               	addwf	prodl,w,c
 37465  00657C  6ED9               	movwf	fsr2l,c
 37466  00657E  0E04               	movlw	high (_Channels+5)
 37467  006580  20F4               	addwfc	prodh,w,c
 37468  006582  6EDA               	movwf	fsr2h,c
 37469  006584  68DF               	setf	indf2,c
 37470                           
 37471                           ; BSR set to: 0
 37472  006586  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 37473                           
 37474                           ; BSR set to: 0
 37475  006588  0E0F               	movlw	15
 37476  00658A  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 37477  00658C  D7E9               	goto	l15206
 37478  00658E  0C0F               	retlw	15
 37479  006590                     __end_of_InitDefault868Channels:
 37480                           	opt stack 0
 37481                           tosu	equ	0xFFF
 37482                           tosh	equ	0xFFE
 37483                           tosl	equ	0xFFD
 37484                           pclath	equ	0xFFA
 37485                           tblptru	equ	0xFF8
 37486                           tblptrh	equ	0xFF7
 37487                           tblptrl	equ	0xFF6
 37488                           tablat	equ	0xFF5
 37489                           prodh	equ	0xFF4
 37490                           prodl	equ	0xFF3
 37491                           intcon	equ	0xFF2
 37492                           intcon2	equ	0xFF1
 37493                           intcon3	equ	0xFF0
 37494                           indf0	equ	0xFEF
 37495                           postinc0	equ	0xFEE
 37496                           plusw0	equ	0xFEB
 37497                           fsr0h	equ	0xFEA
 37498                           fsr0l	equ	0xFE9
 37499                           wreg	equ	0xFE8
 37500                           postinc1	equ	0xFE6
 37501                           postdec1	equ	0xFE5
 37502                           plusw1	equ	0xFE3
 37503                           fsr1h	equ	0xFE2
 37504                           fsr1l	equ	0xFE1
 37505                           indf2	equ	0xFDF
 37506                           postinc2	equ	0xFDE
 37507                           postdec2	equ	0xFDD
 37508                           plusw2	equ	0xFDB
 37509                           fsr2h	equ	0xFDA
 37510                           fsr2l	equ	0xFD9
 37511                           status	equ	0xFD8
 37512                           
 37513 ;; *************** function _InitDefault433Channels *****************
 37514 ;; Defined at:
 37515 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37516 ;; Parameters:    Size  Location     Type
 37517 ;;		None
 37518 ;; Auto vars:     Size  Location     Type
 37519 ;;  i               1   14[BANK0 ] unsigned char 
 37520 ;; Return value:  Size  Location     Type
 37521 ;;                  1    wreg      void 
 37522 ;; Registers used:
 37523 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 37524 ;; Tracked objects:
 37525 ;;		On entry : F/1
 37526 ;;		On exit  : F/0
 37527 ;;		Unchanged: 0/0
 37528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37530 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37532 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37533 ;;Total ram usage:        1 bytes
 37534 ;; Hardware stack levels used:    1
 37535 ;; Hardware stack levels required when called:    8
 37536 ;; This function calls:
 37537 ;;		_memcpy
 37538 ;;		_memset
 37539 ;; This function is called by:
 37540 ;;		_LORAWAN_Reset
 37541 ;; This function uses a non-reentrant model
 37542 ;;
 37543                           
 37544                           	psect	text198
 37545  006590                     __ptext198:
 37546                           	opt stack 0
 37547  006590                     _InitDefault433Channels:
 37548                           	opt stack 20
 37549                           
 37550                           ; BSR set to: 1
 37551                           ;lorawan_eu.c: 996: uint8_t i;
 37552                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 37553                           
 37554                           ; BSR set to: 0
 37555                           ;incstack = 0
 37556  006590  0E00               	movlw	low _Channels
 37557  006592  0100               	movlb	0	; () banked
 37558  006594  6F64               	movwf	memset@p1& (0+255),b
 37559  006596  0E04               	movlw	high _Channels
 37560  006598  6F65               	movwf	(memset@p1+1)& (0+255),b
 37561  00659A  6B67               	clrf	(memset@c+1)& (0+255),b
 37562  00659C  6B66               	clrf	memset@c& (0+255),b
 37563  00659E  6B69               	clrf	(memset@n+1)& (0+255),b
 37564  0065A0  0EE0               	movlw	224
 37565  0065A2  6F68               	movwf	memset@n& (0+255),b
 37566  0065A4  ECF1  F039         	call	_memset	;wreg free
 37567                           
 37568                           ; BSR set to: 0
 37569                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 37570  0065A8  0E00               	movlw	low _Channels
 37571  0065AA  6F64               	movwf	memcpy@d1& (0+255),b
 37572  0065AC  0E04               	movlw	high _Channels
 37573  0065AE  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 37574  0065B0  0E6A               	movlw	low _DefaultChannels433
 37575  0065B2  6F66               	movwf	memcpy@s1& (0+255),b
 37576  0065B4  0EFE               	movlw	high _DefaultChannels433
 37577  0065B6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 37578  0065B8  6B69               	clrf	(memcpy@n+1)& (0+255),b
 37579  0065BA  0E2A               	movlw	42
 37580  0065BC  6F68               	movwf	memcpy@n& (0+255),b
 37581  0065BE  ECD5  F034         	call	_memcpy	;wreg free
 37582                           
 37583                           ; BSR set to: 0
 37584                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 37585  0065C2  0E03               	movlw	3
 37586  0065C4  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 37587  0065C6                     l15222:
 37588                           
 37589                           ; BSR set to: 0
 37590                           ;lorawan_eu.c: 1001: {
 37591                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 37592  0065C6  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 37593  0065C8  0D0E               	mullw	14
 37594  0065CA  0E06               	movlw	low (_Channels+6)
 37595  0065CC  24F3               	addwf	prodl,w,c
 37596  0065CE  6ED9               	movwf	fsr2l,c
 37597  0065D0  0E04               	movlw	high (_Channels+6)
 37598  0065D2  20F4               	addwfc	prodh,w,c
 37599  0065D4  6EDA               	movwf	fsr2h,c
 37600  0065D6  68DE               	setf	postinc2,c
 37601  0065D8  68DD               	setf	postdec2,c
 37602                           
 37603                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 37604  0065DA  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 37605  0065DC  0D0E               	mullw	14
 37606  0065DE  0E05               	movlw	low (_Channels+5)
 37607  0065E0  24F3               	addwf	prodl,w,c
 37608  0065E2  6ED9               	movwf	fsr2l,c
 37609  0065E4  0E04               	movlw	high (_Channels+5)
 37610  0065E6  20F4               	addwfc	prodh,w,c
 37611  0065E8  6EDA               	movwf	fsr2h,c
 37612  0065EA  68DF               	setf	indf2,c
 37613                           
 37614                           ; BSR set to: 0
 37615  0065EC  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 37616                           
 37617                           ; BSR set to: 0
 37618  0065EE  0E0F               	movlw	15
 37619  0065F0  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 37620  0065F2  D7E9               	goto	l15222
 37621  0065F4  0C0F               	retlw	15
 37622  0065F6                     __end_of_InitDefault433Channels:
 37623                           	opt stack 0
 37624                           tosu	equ	0xFFF
 37625                           tosh	equ	0xFFE
 37626                           tosl	equ	0xFFD
 37627                           pclath	equ	0xFFA
 37628                           tblptru	equ	0xFF8
 37629                           tblptrh	equ	0xFF7
 37630                           tblptrl	equ	0xFF6
 37631                           tablat	equ	0xFF5
 37632                           prodh	equ	0xFF4
 37633                           prodl	equ	0xFF3
 37634                           intcon	equ	0xFF2
 37635                           intcon2	equ	0xFF1
 37636                           intcon3	equ	0xFF0
 37637                           indf0	equ	0xFEF
 37638                           postinc0	equ	0xFEE
 37639                           plusw0	equ	0xFEB
 37640                           fsr0h	equ	0xFEA
 37641                           fsr0l	equ	0xFE9
 37642                           wreg	equ	0xFE8
 37643                           postinc1	equ	0xFE6
 37644                           postdec1	equ	0xFE5
 37645                           plusw1	equ	0xFE3
 37646                           fsr1h	equ	0xFE2
 37647                           fsr1l	equ	0xFE1
 37648                           indf2	equ	0xFDF
 37649                           postinc2	equ	0xFDE
 37650                           postdec2	equ	0xFDD
 37651                           plusw2	equ	0xFDB
 37652                           fsr2h	equ	0xFDA
 37653                           fsr2l	equ	0xFD9
 37654                           status	equ	0xFD8
 37655                           
 37656 ;; *************** function _memset *****************
 37657 ;; Defined at:
 37658 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 37659 ;; Parameters:    Size  Location     Type
 37660 ;;  p1              2    4[BANK0 ] PTR void 
 37661 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 37662 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 37663 ;;  c               2    6[BANK0 ] int 
 37664 ;;  n               2    8[BANK0 ] unsigned int 
 37665 ;; Auto vars:     Size  Location     Type
 37666 ;;  p               2   10[BANK0 ] PTR unsigned char 
 37667 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 37668 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 37669 ;; Return value:  Size  Location     Type
 37670 ;;                  2    4[BANK0 ] PTR void 
 37671 ;; Registers used:
 37672 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 37673 ;; Tracked objects:
 37674 ;;		On entry : F/0
 37675 ;;		On exit  : F/0
 37676 ;;		Unchanged: 0/0
 37677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37678 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37679 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37681 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37682 ;;Total ram usage:        8 bytes
 37683 ;; Hardware stack levels used:    1
 37684 ;; Hardware stack levels required when called:    7
 37685 ;; This function calls:
 37686 ;;		Nothing
 37687 ;; This function is called by:
 37688 ;;		_LORAWAN_Reset
 37689 ;;		_InitDefault868Channels
 37690 ;;		_InitDefault433Channels
 37691 ;;		_AESCmac
 37692 ;;		_GenerateSubkey
 37693 ;;		_AssemblePacket
 37694 ;;		_PrepareJoinRequestFrame
 37695 ;;		_PrepareSessionKeys
 37696 ;;		_AssembleEncryptionBlock
 37697 ;; This function uses a non-reentrant model
 37698 ;;
 37699                           
 37700                           	psect	text199
 37701  0073E2                     __ptext199:
 37702                           	opt stack 0
 37703  0073E2                     _memset:
 37704                           	opt stack 20
 37705                           
 37706                           ; BSR set to: 0
 37707                           
 37708                           ; BSR set to: 0
 37709                           ;incstack = 0
 37710  0073E2  C064  F06A         	movff	memset@p1,memset@p
 37711  0073E6  C065  F06B         	movff	memset@p1+1,memset@p+1
 37712  0073EA  D008               	goto	l12538
 37713  0073EC                     l12534:
 37714                           
 37715                           ; BSR set to: 0
 37716  0073EC  C06A  FFD9         	movff	memset@p,fsr2l
 37717  0073F0  C06B  FFDA         	movff	memset@p+1,fsr2h
 37718  0073F4  C066  FFDF         	movff	memset@c,indf2
 37719                           
 37720                           ; BSR set to: 0
 37721  0073F8  4B6A               	infsnz	memset@p& (0+255),f,b
 37722  0073FA  2B6B               	incf	(memset@p+1)& (0+255),f,b
 37723  0073FC                     l12538:
 37724                           
 37725                           ; BSR set to: 0
 37726  0073FC  0768               	decf	memset@n& (0+255),f,b
 37727  0073FE  A0D8               	btfss	status,0,c
 37728  007400  0769               	decf	(memset@n+1)& (0+255),f,b
 37729  007402  2968               	incf	memset@n& (0+255),w,b
 37730  007404  E1F3               	bnz	l12534
 37731  007406  2969               	incf	(memset@n+1)& (0+255),w,b
 37732  007408  E1F1               	bnz	l12534
 37733                           
 37734                           ; BSR set to: 0
 37735  00740A  0012               	return		;funcret
 37736  00740C                     __end_of_memset:
 37737                           	opt stack 0
 37738                           tosu	equ	0xFFF
 37739                           tosh	equ	0xFFE
 37740                           tosl	equ	0xFFD
 37741                           pclath	equ	0xFFA
 37742                           tblptru	equ	0xFF8
 37743                           tblptrh	equ	0xFF7
 37744                           tblptrl	equ	0xFF6
 37745                           tablat	equ	0xFF5
 37746                           prodh	equ	0xFF4
 37747                           prodl	equ	0xFF3
 37748                           intcon	equ	0xFF2
 37749                           intcon2	equ	0xFF1
 37750                           intcon3	equ	0xFF0
 37751                           indf0	equ	0xFEF
 37752                           postinc0	equ	0xFEE
 37753                           plusw0	equ	0xFEB
 37754                           fsr0h	equ	0xFEA
 37755                           fsr0l	equ	0xFE9
 37756                           wreg	equ	0xFE8
 37757                           postinc1	equ	0xFE6
 37758                           postdec1	equ	0xFE5
 37759                           plusw1	equ	0xFE3
 37760                           fsr1h	equ	0xFE2
 37761                           fsr1l	equ	0xFE1
 37762                           indf2	equ	0xFDF
 37763                           postinc2	equ	0xFDE
 37764                           postdec2	equ	0xFDD
 37765                           plusw2	equ	0xFDB
 37766                           fsr2h	equ	0xFDA
 37767                           fsr2l	equ	0xFD9
 37768                           status	equ	0xFD8
 37769                           
 37770 ;; *************** function _memcpy *****************
 37771 ;; Defined at:
 37772 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 37773 ;; Parameters:    Size  Location     Type
 37774 ;;  d1              2    4[BANK0 ] PTR void 
 37775 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 37776 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 37777 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 37778 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 37779 ;;  s1              2    6[BANK0 ] PTR const void 
 37780 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 37781 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 37782 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 37783 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 37784 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 37785 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 37786 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 37787 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 37788 ;;		 -> NULL(0), 
 37789 ;;  n               2    8[BANK0 ] unsigned int 
 37790 ;; Auto vars:     Size  Location     Type
 37791 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 37792 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 37793 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 37794 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 37795 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 37796 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 37797 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 37798 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 37799 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 37800 ;;		 -> NULL(0), 
 37801 ;;  d               2   10[BANK0 ] PTR unsigned char 
 37802 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 37803 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 37804 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 37805 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 37806 ;; Return value:  Size  Location     Type
 37807 ;;                  2    4[BANK0 ] PTR void 
 37808 ;; Registers used:
 37809 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37810 ;; Tracked objects:
 37811 ;;		On entry : F/0
 37812 ;;		On exit  : F/0
 37813 ;;		Unchanged: 0/0
 37814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37815 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37816 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37818 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37819 ;;Total ram usage:       10 bytes
 37820 ;; Hardware stack levels used:    1
 37821 ;; Hardware stack levels required when called:    7
 37822 ;; This function calls:
 37823 ;;		Nothing
 37824 ;; This function is called by:
 37825 ;;		_RADIO_SetFSKSyncWord
 37826 ;;		_UpdateCfList
 37827 ;;		_InitDefault868Channels
 37828 ;;		_InitDefault433Channels
 37829 ;;		_AESCmac
 37830 ;;		_LORAWAN_SetNetworkSessionKey
 37831 ;;		_LORAWAN_SetApplicationSessionKey
 37832 ;;		_LORAWAN_RxDone
 37833 ;;		_AssemblePacket
 37834 ;;		_PrepareJoinRequestFrame
 37835 ;;		_PrepareSessionKeys
 37836 ;;		_AssembleEncryptionBlock
 37837 ;;		_ExtractMic
 37838 ;;		_ComputeMic
 37839 ;;		_AESEncodeLoRa
 37840 ;; This function uses a non-reentrant model
 37841 ;;
 37842                           
 37843                           	psect	text200
 37844  0069AA                     __ptext200:
 37845                           	opt stack 0
 37846  0069AA                     _memcpy:
 37847                           	opt stack 17
 37848                           
 37849                           ; BSR set to: 0
 37850                           
 37851                           ; BSR set to: 0
 37852                           ;incstack = 0
 37853  0069AA  C066  F06C         	movff	memcpy@s1,memcpy@s
 37854  0069AE  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 37855  0069B2  C064  F06A         	movff	memcpy@d1,memcpy@d
 37856  0069B6  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 37857  0069BA  D01B               	goto	l12168
 37858  0069BC                     l12162:
 37859                           
 37860                           ; BSR set to: 0
 37861  0069BC  C06C  FFF6         	movff	memcpy@s,tblptrl
 37862  0069C0  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 37863  0069C4  0E00               	movlw	low (__mediumconst shr (0+16))
 37864  0069C6  6EF8               	movwf	tblptru,c
 37865  0069C8  C06A  FFD9         	movff	memcpy@d,fsr2l
 37866  0069CC  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 37867  0069D0  0E0F               	movlw	(high __ramtop+-1)
 37868  0069D2  64F7               	cpfsgt	tblptrh,c
 37869  0069D4  D003               	bra	u12767
 37870  0069D6  0008               	tblrd		*
 37871  0069D8  50F5               	movf	tablat,w,c
 37872  0069DA  D005               	bra	u12760
 37873  0069DC                     u12767:
 37874  0069DC  CFF6 FFE9          	movff	tblptrl,fsr0l
 37875  0069E0  CFF7 FFEA          	movff	tblptrh,fsr0h
 37876  0069E4  50EF               	movf	indf0,w,c
 37877  0069E6                     u12760:
 37878  0069E6  6EDF               	movwf	indf2,c
 37879  0069E8  0100               	movlb	0	; () banked
 37880  0069EA  4B6C               	infsnz	memcpy@s& (0+255),f,b
 37881  0069EC  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 37882                           
 37883                           ; BSR set to: 0
 37884  0069EE  4B6A               	infsnz	memcpy@d& (0+255),f,b
 37885  0069F0  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 37886  0069F2                     l12168:
 37887                           
 37888                           ; BSR set to: 0
 37889  0069F2  0768               	decf	memcpy@n& (0+255),f,b
 37890  0069F4  A0D8               	btfss	status,0,c
 37891  0069F6  0769               	decf	(memcpy@n+1)& (0+255),f,b
 37892  0069F8  2968               	incf	memcpy@n& (0+255),w,b
 37893  0069FA  E1E0               	bnz	l12162
 37894  0069FC  2969               	incf	(memcpy@n+1)& (0+255),w,b
 37895  0069FE  E1DE               	bnz	l12162
 37896                           
 37897                           ; BSR set to: 0
 37898  006A00  0012               	return		;funcret
 37899  006A02                     __end_of_memcpy:
 37900                           	opt stack 0
 37901                           tosu	equ	0xFFF
 37902                           tosh	equ	0xFFE
 37903                           tosl	equ	0xFFD
 37904                           pclath	equ	0xFFA
 37905                           tblptru	equ	0xFF8
 37906                           tblptrh	equ	0xFF7
 37907                           tblptrl	equ	0xFF6
 37908                           tablat	equ	0xFF5
 37909                           prodh	equ	0xFF4
 37910                           prodl	equ	0xFF3
 37911                           intcon	equ	0xFF2
 37912                           intcon2	equ	0xFF1
 37913                           intcon3	equ	0xFF0
 37914                           indf0	equ	0xFEF
 37915                           postinc0	equ	0xFEE
 37916                           plusw0	equ	0xFEB
 37917                           fsr0h	equ	0xFEA
 37918                           fsr0l	equ	0xFE9
 37919                           wreg	equ	0xFE8
 37920                           postinc1	equ	0xFE6
 37921                           postdec1	equ	0xFE5
 37922                           plusw1	equ	0xFE3
 37923                           fsr1h	equ	0xFE2
 37924                           fsr1l	equ	0xFE1
 37925                           indf2	equ	0xFDF
 37926                           postinc2	equ	0xFDE
 37927                           postdec2	equ	0xFDD
 37928                           plusw2	equ	0xFDB
 37929                           fsr2h	equ	0xFDA
 37930                           fsr2l	equ	0xFD9
 37931                           status	equ	0xFD8
 37932                           
 37933 ;; *************** function _CreateAllSoftwareTimers *****************
 37934 ;; Defined at:
 37935 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37936 ;; Parameters:    Size  Location     Type
 37937 ;;		None
 37938 ;; Auto vars:     Size  Location     Type
 37939 ;;		None
 37940 ;; Return value:  Size  Location     Type
 37941 ;;                  1    wreg      void 
 37942 ;; Registers used:
 37943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37944 ;; Tracked objects:
 37945 ;;		On entry : F/2
 37946 ;;		On exit  : F/2
 37947 ;;		Unchanged: 0/0
 37948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37953 ;;Total ram usage:        0 bytes
 37954 ;; Hardware stack levels used:    1
 37955 ;; Hardware stack levels required when called:    8
 37956 ;; This function calls:
 37957 ;;		_SwTimerCreate
 37958 ;; This function is called by:
 37959 ;;		_LORAWAN_Init
 37960 ;; This function uses a non-reentrant model
 37961 ;;
 37962                           
 37963                           	psect	text201
 37964  006AA8                     __ptext201:
 37965                           	opt stack 0
 37966  006AA8                     _CreateAllSoftwareTimers:
 37967                           	opt stack 21
 37968                           
 37969                           ; BSR set to: 2
 37970                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 37971                           
 37972                           ; BSR set to: 0
 37973                           ;incstack = 0
 37974  006AA8  ECF9  F031         	call	_SwTimerCreate	;wreg free
 37975  006AAC  0102               	movlb	2	; () banked
 37976  006AAE  6FE2               	movwf	(_loRa+226)& (0+255),b
 37977                           
 37978                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 37979  006AB0  ECF9  F031         	call	_SwTimerCreate	;wreg free
 37980  006AB4  0102               	movlb	2	; () banked
 37981  006AB6  6FE3               	movwf	(_loRa+227)& (0+255),b
 37982                           
 37983                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 37984  006AB8  ECF9  F031         	call	_SwTimerCreate	;wreg free
 37985  006ABC  0102               	movlb	2	; () banked
 37986  006ABE  6FE4               	movwf	(_loRa+228)& (0+255),b
 37987                           
 37988                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 37989  006AC0  ECF9  F031         	call	_SwTimerCreate	;wreg free
 37990  006AC4  0102               	movlb	2	; () banked
 37991  006AC6  6FE5               	movwf	(_loRa+229)& (0+255),b
 37992                           
 37993                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 37994  006AC8  ECF9  F031         	call	_SwTimerCreate	;wreg free
 37995  006ACC  0102               	movlb	2	; () banked
 37996  006ACE  6FE7               	movwf	(_loRa+231)& (0+255),b
 37997                           
 37998                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 37999  006AD0  ECF9  F031         	call	_SwTimerCreate	;wreg free
 38000  006AD4  0102               	movlb	2	; () banked
 38001  006AD6  6FE8               	movwf	(_loRa+232)& (0+255),b
 38002                           
 38003                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 38004  006AD8  ECF9  F031         	call	_SwTimerCreate	;wreg free
 38005  006ADC  0102               	movlb	2	; () banked
 38006  006ADE  6FE6               	movwf	(_loRa+230)& (0+255),b
 38007                           
 38008                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 38009  006AE0  ECF9  F031         	call	_SwTimerCreate	;wreg free
 38010  006AE4  0102               	movlb	2	; () banked
 38011  006AE6  6FEA               	movwf	(_loRa+234)& (0+255),b
 38012                           
 38013                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 38014  006AE8  ECF9  F031         	call	_SwTimerCreate	;wreg free
 38015  006AEC  0102               	movlb	2	; () banked
 38016  006AEE  6FF3               	movwf	(_loRa+243)& (0+255),b
 38017                           
 38018                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 38019  006AF0  ECF9  F031         	call	_SwTimerCreate	;wreg free
 38020  006AF4  0102               	movlb	2	; () banked
 38021  006AF6  6FE9               	movwf	(_loRa+233)& (0+255),b
 38022                           
 38023                           ; BSR set to: 2
 38024  006AF8  0012               	return		;funcret
 38025  006AFA                     __end_of_CreateAllSoftwareTimers:
 38026                           	opt stack 0
 38027                           tosu	equ	0xFFF
 38028                           tosh	equ	0xFFE
 38029                           tosl	equ	0xFFD
 38030                           pclath	equ	0xFFA
 38031                           tblptru	equ	0xFF8
 38032                           tblptrh	equ	0xFF7
 38033                           tblptrl	equ	0xFF6
 38034                           tablat	equ	0xFF5
 38035                           prodh	equ	0xFF4
 38036                           prodl	equ	0xFF3
 38037                           intcon	equ	0xFF2
 38038                           intcon2	equ	0xFF1
 38039                           intcon3	equ	0xFF0
 38040                           indf0	equ	0xFEF
 38041                           postinc0	equ	0xFEE
 38042                           plusw0	equ	0xFEB
 38043                           fsr0h	equ	0xFEA
 38044                           fsr0l	equ	0xFE9
 38045                           wreg	equ	0xFE8
 38046                           postinc1	equ	0xFE6
 38047                           postdec1	equ	0xFE5
 38048                           plusw1	equ	0xFE3
 38049                           fsr1h	equ	0xFE2
 38050                           fsr1l	equ	0xFE1
 38051                           indf2	equ	0xFDF
 38052                           postinc2	equ	0xFDE
 38053                           postdec2	equ	0xFDD
 38054                           plusw2	equ	0xFDB
 38055                           fsr2h	equ	0xFDA
 38056                           fsr2l	equ	0xFD9
 38057                           status	equ	0xFD8
 38058                           
 38059 ;; *************** function _SwTimerCreate *****************
 38060 ;; Defined at:
 38061 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38062 ;; Parameters:    Size  Location     Type
 38063 ;;		None
 38064 ;; Auto vars:     Size  Location     Type
 38065 ;;  retVal          1    4[BANK0 ] unsigned char 
 38066 ;; Return value:  Size  Location     Type
 38067 ;;                  1    wreg      unsigned char 
 38068 ;; Registers used:
 38069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38070 ;; Tracked objects:
 38071 ;;		On entry : C/1
 38072 ;;		On exit  : F/0
 38073 ;;		Unchanged: 0/0
 38074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38075 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38076 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38078 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38079 ;;Total ram usage:        1 bytes
 38080 ;; Hardware stack levels used:    1
 38081 ;; Hardware stack levels required when called:    7
 38082 ;; This function calls:
 38083 ;;		Nothing
 38084 ;; This function is called by:
 38085 ;;		_RADIO_Init
 38086 ;;		_CreateAllSoftwareTimers
 38087 ;; This function uses a non-reentrant model
 38088 ;;
 38089                           
 38090                           	psect	text202
 38091  0063F2                     __ptext202:
 38092                           	opt stack 0
 38093  0063F2                     _SwTimerCreate:
 38094                           	opt stack 21
 38095                           
 38096                           ;sw_timer.c: 156: uint8_t retVal;
 38097                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 38098                           
 38099                           ; BSR set to: 2
 38100                           ;incstack = 0
 38101  0063F2  0E14               	movlw	20
 38102  0063F4  0100               	movlb	0	; () banked
 38103  0063F6  61F2               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 38104  0063F8  D02E               	goto	l126
 38105                           
 38106                           ; BSR set to: 0
 38107                           ;sw_timer.c: 158: {
 38108                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 38109  0063FA  9EF2               	bcf	intcon,7,c	;volatile
 38110                           
 38111                           ;sw_timer.c: 160: retVal = allocatedTimers;
 38112  0063FC  C0F2  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 38113                           
 38114                           ; BSR set to: 0
 38115                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 38116  006400  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 38117  006402  0D08               	mullw	8
 38118  006404  0E04               	movlw	low (_swTimers+4)
 38119  006406  24F3               	addwf	prodl,w,c
 38120  006408  6ED9               	movwf	fsr2l,c
 38121  00640A  0E03               	movlw	high (_swTimers+4)
 38122  00640C  20F4               	addwfc	prodh,w,c
 38123  00640E  6EDA               	movwf	fsr2h,c
 38124  006410  6ADF               	clrf	indf2,c
 38125                           
 38126                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 38127  006412  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 38128  006414  0D08               	mullw	8
 38129  006416  0E00               	movlw	low _swTimers
 38130  006418  24F3               	addwf	prodl,w,c
 38131  00641A  6ED9               	movwf	fsr2l,c
 38132  00641C  0E03               	movlw	high _swTimers
 38133  00641E  20F4               	addwfc	prodh,w,c
 38134  006420  6EDA               	movwf	fsr2h,c
 38135  006422  6ADE               	clrf	postinc2,c
 38136  006424  6ADE               	clrf	postinc2,c
 38137  006426  6ADE               	clrf	postinc2,c
 38138  006428  6ADD               	clrf	postdec2,c
 38139                           
 38140                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 38141  00642A  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 38142  00642C  0D08               	mullw	8
 38143  00642E  0E05               	movlw	low (_swTimers+5)
 38144  006430  24F3               	addwf	prodl,w,c
 38145  006432  6ED9               	movwf	fsr2l,c
 38146  006434  0E03               	movlw	high (_swTimers+5)
 38147  006436  20F4               	addwfc	prodh,w,c
 38148  006438  6EDA               	movwf	fsr2h,c
 38149  00643A  6ADF               	clrf	indf2,c
 38150                           
 38151                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 38152  00643C  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 38153  00643E  0D08               	mullw	8
 38154  006440  0E06               	movlw	low (_swTimers+6)
 38155  006442  24F3               	addwf	prodl,w,c
 38156  006444  6ED9               	movwf	fsr2l,c
 38157  006446  0E03               	movlw	high (_swTimers+6)
 38158  006448  20F4               	addwfc	prodh,w,c
 38159  00644A  6EDA               	movwf	fsr2h,c
 38160  00644C  6ADE               	clrf	postinc2,c
 38161  00644E  6ADD               	clrf	postdec2,c
 38162                           
 38163                           ; BSR set to: 0
 38164                           ;sw_timer.c: 165: allocatedTimers++;
 38165  006450  2BF2               	incf	_allocatedTimers& (0+255),f,b	;volatile
 38166                           
 38167                           ; BSR set to: 0
 38168                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 38169  006452  8EF2               	bsf	intcon,7,c	;volatile
 38170                           
 38171                           ;sw_timer.c: 167: }
 38172  006454  D001               	goto	l10142
 38173  006456                     l126:
 38174  006456  D7FF               	goto	l126
 38175  006458                     l10142:
 38176                           
 38177                           ; BSR set to: 0
 38178                           ;sw_timer.c: 175: }
 38179                           ;sw_timer.c: 176: }
 38180                           ;sw_timer.c: 177: return retVal;
 38181  006458  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 38182                           
 38183                           ; BSR set to: 0
 38184  00645A  0012               	return		;funcret
 38185  00645C                     __end_of_SwTimerCreate:
 38186                           	opt stack 0
 38187                           tosu	equ	0xFFF
 38188                           tosh	equ	0xFFE
 38189                           tosl	equ	0xFFD
 38190                           pclath	equ	0xFFA
 38191                           tblptru	equ	0xFF8
 38192                           tblptrh	equ	0xFF7
 38193                           tblptrl	equ	0xFF6
 38194                           tablat	equ	0xFF5
 38195                           prodh	equ	0xFF4
 38196                           prodl	equ	0xFF3
 38197                           intcon	equ	0xFF2
 38198                           intcon2	equ	0xFF1
 38199                           intcon3	equ	0xFF0
 38200                           indf0	equ	0xFEF
 38201                           postinc0	equ	0xFEE
 38202                           plusw0	equ	0xFEB
 38203                           fsr0h	equ	0xFEA
 38204                           fsr0l	equ	0xFE9
 38205                           wreg	equ	0xFE8
 38206                           postinc1	equ	0xFE6
 38207                           postdec1	equ	0xFE5
 38208                           plusw1	equ	0xFE3
 38209                           fsr1h	equ	0xFE2
 38210                           fsr1l	equ	0xFE1
 38211                           indf2	equ	0xFDF
 38212                           postinc2	equ	0xFDE
 38213                           postdec2	equ	0xFDD
 38214                           plusw2	equ	0xFDB
 38215                           fsr2h	equ	0xFDA
 38216                           fsr2l	equ	0xFD9
 38217                           status	equ	0xFD8
 38218                           
 38219 ;; *************** function _LORAWAN_GetState *****************
 38220 ;; Defined at:
 38221 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 38222 ;; Parameters:    Size  Location     Type
 38223 ;;		None
 38224 ;; Auto vars:     Size  Location     Type
 38225 ;;		None
 38226 ;; Return value:  Size  Location     Type
 38227 ;;                  1    wreg      unsigned char 
 38228 ;; Registers used:
 38229 ;;		wreg, status,2, status,0
 38230 ;; Tracked objects:
 38231 ;;		On entry : F/1
 38232 ;;		On exit  : F/2
 38233 ;;		Unchanged: 0/0
 38234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38239 ;;Total ram usage:        0 bytes
 38240 ;; Hardware stack levels used:    1
 38241 ;; Hardware stack levels required when called:    7
 38242 ;; This function calls:
 38243 ;;		Nothing
 38244 ;; This function is called by:
 38245 ;;		_main
 38246 ;; This function uses a non-reentrant model
 38247 ;;
 38248                           
 38249                           	psect	text203
 38250  007A7C                     __ptext203:
 38251                           	opt stack 0
 38252  007A7C                     _LORAWAN_GetState:
 38253                           	opt stack 23
 38254                           
 38255                           ; BSR set to: 1
 38256                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 38257                           
 38258                           ; BSR set to: 0
 38259                           ;incstack = 0
 38260  007A7C  0102               	movlb	2	; () banked
 38261  007A7E  5102               	movf	(_loRa+2)& (0+255),w,b
 38262  007A80  0B0F               	andlw	15
 38263                           
 38264                           ; BSR set to: 2
 38265  007A82  0012               	return		;funcret
 38266  007A84                     __end_of_LORAWAN_GetState:
 38267                           	opt stack 0
 38268                           tosu	equ	0xFFF
 38269                           tosh	equ	0xFFE
 38270                           tosl	equ	0xFFD
 38271                           pclath	equ	0xFFA
 38272                           tblptru	equ	0xFF8
 38273                           tblptrh	equ	0xFF7
 38274                           tblptrl	equ	0xFF6
 38275                           tablat	equ	0xFF5
 38276                           prodh	equ	0xFF4
 38277                           prodl	equ	0xFF3
 38278                           intcon	equ	0xFF2
 38279                           intcon2	equ	0xFF1
 38280                           intcon3	equ	0xFF0
 38281                           indf0	equ	0xFEF
 38282                           postinc0	equ	0xFEE
 38283                           plusw0	equ	0xFEB
 38284                           fsr0h	equ	0xFEA
 38285                           fsr0l	equ	0xFE9
 38286                           wreg	equ	0xFE8
 38287                           postinc1	equ	0xFE6
 38288                           postdec1	equ	0xFE5
 38289                           plusw1	equ	0xFE3
 38290                           fsr1h	equ	0xFE2
 38291                           fsr1l	equ	0xFE1
 38292                           indf2	equ	0xFDF
 38293                           postinc2	equ	0xFDE
 38294                           postdec2	equ	0xFDD
 38295                           plusw2	equ	0xFDB
 38296                           fsr2h	equ	0xFDA
 38297                           fsr2l	equ	0xFD9
 38298                           status	equ	0xFD8
 38299                           
 38300 ;; *************** function _INTERRUPT_InterruptManager *****************
 38301 ;; Defined at:
 38302 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 38303 ;; Parameters:    Size  Location     Type
 38304 ;;		None
 38305 ;; Auto vars:     Size  Location     Type
 38306 ;;		None
 38307 ;; Return value:  Size  Location     Type
 38308 ;;                  1    wreg      void 
 38309 ;; Registers used:
 38310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38311 ;; Tracked objects:
 38312 ;;		On entry : 0/0
 38313 ;;		On exit  : 0/0
 38314 ;;		Unchanged: 0/0
 38315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38318 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38319 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38320 ;;Total ram usage:        8 bytes
 38321 ;; Hardware stack levels used:    1
 38322 ;; Hardware stack levels required when called:    6
 38323 ;; This function calls:
 38324 ;;		_INT1_ISR
 38325 ;;		_INT2_ISR
 38326 ;;		_PIN_MANAGER_IOC
 38327 ;;		_TMR1_ISR
 38328 ;; This function is called by:
 38329 ;;		Interrupt level 2
 38330 ;; This function uses a non-reentrant model
 38331 ;;
 38332                           
 38333                           	psect	intcode
 38334  000008                     __pintcode:
 38335                           	opt stack 0
 38336  000008                     _INTERRUPT_InterruptManager:
 38337                           	opt stack 12
 38338                           
 38339                           ; BSR set to: 2
 38340                           ;incstack = 0
 38341  000008  CFFA F02A          	movff	pclath,??_INTERRUPT_InterruptManager
 38342  00000C  CFFB F02B          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 38343  000010  CFE1 F02C          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 38344  000014  CFE2 F02D          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 38345  000018  CFD9 F02E          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 38346  00001C  CFDA F02F          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 38347  000020  CFF3 F030          	movff	prodl,??_INTERRUPT_InterruptManager+6
 38348  000024  CFF4 F031          	movff	prodh,??_INTERRUPT_InterruptManager+7
 38349  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 38350                           
 38351                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 38352  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 38353  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 38354  000030  D003               	goto	i2l2446
 38355                           
 38356                           ;interrupt_manager.c: 61: {
 38357                           ;interrupt_manager.c: 62: INT1_ISR();
 38358  000032  EC54  F03D         	call	_INT1_ISR	;wreg free
 38359                           
 38360                           ;interrupt_manager.c: 63: }
 38361  000036  D013               	goto	i2l2454
 38362  000038                     i2l2446:
 38363                           
 38364                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 38365  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 38366  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 38367  00003C  D003               	goto	i2l2448
 38368                           
 38369                           ;interrupt_manager.c: 65: {
 38370                           ;interrupt_manager.c: 66: INT2_ISR();
 38371  00003E  EC51  F03D         	call	_INT2_ISR	;wreg free
 38372                           
 38373                           ;interrupt_manager.c: 67: }
 38374  000042  D00D               	goto	i2l2454
 38375  000044                     i2l2448:
 38376                           
 38377                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 38378  000044  BCF2               	btfsc	intcon,6,c	;volatile
 38379  000046  A09D               	btfss	3997,0,c	;volatile
 38380  000048  D005               	goto	i2l2450
 38381  00004A  A09E               	btfss	3998,0,c	;volatile
 38382  00004C  D003               	goto	i2l2450
 38383                           
 38384                           ;interrupt_manager.c: 69: {
 38385                           ;interrupt_manager.c: 70: TMR1_ISR();
 38386  00004E  EC9C  F03A         	call	_TMR1_ISR	;wreg free
 38387                           
 38388                           ;interrupt_manager.c: 71: }
 38389  000052  D005               	goto	i2l2454
 38390  000054                     i2l2450:
 38391                           
 38392                           ;interrupt_manager.c: 72: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 38393  000054  B6F2               	btfsc	intcon,3,c	;volatile
 38394  000056  A0F2               	btfss	intcon,0,c	;volatile
 38395  000058  D002               	goto	i2l2454
 38396                           
 38397                           ;interrupt_manager.c: 73: {
 38398                           ;interrupt_manager.c: 74: PIN_MANAGER_IOC();
 38399  00005A  EC94  F03C         	call	_PIN_MANAGER_IOC	;wreg free
 38400  00005E                     i2l2454:
 38401  00005E  C031  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 38402  000062  C030  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 38403  000066  C02F  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 38404  00006A  C02E  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 38405  00006E  C02D  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 38406  000072  C02C  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 38407  000076  C02B  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 38408  00007A  C02A  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 38409  00007E  0011               	retfie		f
 38410  000080                     __end_of_INTERRUPT_InterruptManager:
 38411                           	opt stack 0
 38412                           tosu	equ	0xFFF
 38413                           tosh	equ	0xFFE
 38414                           tosl	equ	0xFFD
 38415                           pclatu	equ	0xFFB
 38416                           pclath	equ	0xFFA
 38417                           tblptru	equ	0xFF8
 38418                           tblptrh	equ	0xFF7
 38419                           tblptrl	equ	0xFF6
 38420                           tablat	equ	0xFF5
 38421                           prodh	equ	0xFF4
 38422                           prodl	equ	0xFF3
 38423                           intcon	equ	0xFF2
 38424                           intcon2	equ	0xFF1
 38425                           intcon3	equ	0xFF0
 38426                           indf0	equ	0xFEF
 38427                           postinc0	equ	0xFEE
 38428                           plusw0	equ	0xFEB
 38429                           fsr0h	equ	0xFEA
 38430                           fsr0l	equ	0xFE9
 38431                           wreg	equ	0xFE8
 38432                           postinc1	equ	0xFE6
 38433                           postdec1	equ	0xFE5
 38434                           plusw1	equ	0xFE3
 38435                           fsr1h	equ	0xFE2
 38436                           fsr1l	equ	0xFE1
 38437                           indf2	equ	0xFDF
 38438                           postinc2	equ	0xFDE
 38439                           postdec2	equ	0xFDD
 38440                           plusw2	equ	0xFDB
 38441                           fsr2h	equ	0xFDA
 38442                           fsr2l	equ	0xFD9
 38443                           status	equ	0xFD8
 38444                           
 38445 ;; *************** function _TMR1_ISR *****************
 38446 ;; Defined at:
 38447 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 38448 ;; Parameters:    Size  Location     Type
 38449 ;;		None
 38450 ;; Auto vars:     Size  Location     Type
 38451 ;;		None
 38452 ;; Return value:  Size  Location     Type
 38453 ;;                  1    wreg      void 
 38454 ;; Registers used:
 38455 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38456 ;; Tracked objects:
 38457 ;;		On entry : 0/0
 38458 ;;		On exit  : 0/0
 38459 ;;		Unchanged: 0/0
 38460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38461 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38462 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38464 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38465 ;;Total ram usage:        0 bytes
 38466 ;; Hardware stack levels used:    1
 38467 ;; Hardware stack levels required when called:    5
 38468 ;; This function calls:
 38469 ;;		_TMR1_CallBack
 38470 ;; This function is called by:
 38471 ;;		_INTERRUPT_InterruptManager
 38472 ;; This function uses a non-reentrant model
 38473 ;;
 38474                           
 38475                           	psect	text205
 38476  007538                     __ptext205:
 38477                           	opt stack 0
 38478  007538                     _TMR1_ISR:
 38479                           	opt stack 12
 38480                           
 38481                           ;tmr1.c: 161: static volatile unsigned int CountCallBack = 0;
 38482                           ;tmr1.c: 164: PIR1bits.TMR1IF = 0;
 38483                           
 38484                           ;incstack = 0
 38485  007538  909E               	bcf	3998,0,c	;volatile
 38486                           
 38487                           ;tmr1.c: 167: TMR1H = (timer1ReloadVal >> 8);
 38488  00753A  C05F  FFCF         	movff	_timer1ReloadVal+1,4047	;volatile
 38489                           
 38490                           ;tmr1.c: 168: TMR1L = (uint8_t) timer1ReloadVal;
 38491  00753E  C05E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 38492                           
 38493                           ;tmr1.c: 171: if (++CountCallBack >= 16)
 38494  007542  4A3E               	infsnz	TMR1_ISR@CountCallBack,f,c	;volatile
 38495  007544  2A3F               	incf	TMR1_ISR@CountCallBack+1,f,c	;volatile
 38496  007546  503F               	movf	TMR1_ISR@CountCallBack+1,w,c	;volatile
 38497  007548  E104               	bnz	i2u1967_40
 38498  00754A  0E10               	movlw	16
 38499  00754C  5C3E               	subwf	TMR1_ISR@CountCallBack,w,c	;volatile
 38500  00754E  A0D8               	btfss	status,0,c
 38501  007550  0012               	return	
 38502  007552                     i2u1967_40:
 38503                           
 38504                           ;tmr1.c: 172: {
 38505                           ;tmr1.c: 174: TMR1_CallBack();
 38506  007552  EC86  F03B         	call	_TMR1_CallBack	;wreg free
 38507                           
 38508                           ;tmr1.c: 177: CountCallBack = 0;
 38509  007556  6A3E               	clrf	TMR1_ISR@CountCallBack,c	;volatile
 38510  007558  6A3F               	clrf	TMR1_ISR@CountCallBack+1,c	;volatile
 38511  00755A  0012               	return		;funcret
 38512  00755C                     __end_of_TMR1_ISR:
 38513                           	opt stack 0
 38514                           tosu	equ	0xFFF
 38515                           tosh	equ	0xFFE
 38516                           tosl	equ	0xFFD
 38517                           pclatu	equ	0xFFB
 38518                           pclath	equ	0xFFA
 38519                           tblptru	equ	0xFF8
 38520                           tblptrh	equ	0xFF7
 38521                           tblptrl	equ	0xFF6
 38522                           tablat	equ	0xFF5
 38523                           prodh	equ	0xFF4
 38524                           prodl	equ	0xFF3
 38525                           intcon	equ	0xFF2
 38526                           intcon2	equ	0xFF1
 38527                           intcon3	equ	0xFF0
 38528                           indf0	equ	0xFEF
 38529                           postinc0	equ	0xFEE
 38530                           plusw0	equ	0xFEB
 38531                           fsr0h	equ	0xFEA
 38532                           fsr0l	equ	0xFE9
 38533                           wreg	equ	0xFE8
 38534                           postinc1	equ	0xFE6
 38535                           postdec1	equ	0xFE5
 38536                           plusw1	equ	0xFE3
 38537                           fsr1h	equ	0xFE2
 38538                           fsr1l	equ	0xFE1
 38539                           indf2	equ	0xFDF
 38540                           postinc2	equ	0xFDE
 38541                           postdec2	equ	0xFDD
 38542                           plusw2	equ	0xFDB
 38543                           fsr2h	equ	0xFDA
 38544                           fsr2l	equ	0xFD9
 38545                           status	equ	0xFD8
 38546                           
 38547 ;; *************** function _TMR1_CallBack *****************
 38548 ;; Defined at:
 38549 ;;		line 181 in file "mcc_generated_files/tmr1.c"
 38550 ;; Parameters:    Size  Location     Type
 38551 ;;		None
 38552 ;; Auto vars:     Size  Location     Type
 38553 ;;		None
 38554 ;; Return value:  Size  Location     Type
 38555 ;;                  1    wreg      void 
 38556 ;; Registers used:
 38557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 38558 ;; Tracked objects:
 38559 ;;		On entry : 0/0
 38560 ;;		On exit  : 0/0
 38561 ;;		Unchanged: 0/0
 38562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38567 ;;Total ram usage:        0 bytes
 38568 ;; Hardware stack levels used:    1
 38569 ;; Hardware stack levels required when called:    4
 38570 ;; This function calls:
 38571 ;;		Absolute function
 38572 ;;		_TMR1_DefaultInterruptHandler
 38573 ;;		_TMR_ISR_lora
 38574 ;; This function is called by:
 38575 ;;		_TMR1_ISR
 38576 ;; This function uses a non-reentrant model
 38577 ;;
 38578                           
 38579                           	psect	text206
 38580  00770C                     __ptext206:
 38581                           	opt stack 0
 38582  00770C                     _TMR1_CallBack:
 38583                           	opt stack 12
 38584                           
 38585                           ;tmr1.c: 184: if(TMR1_InterruptHandler)
 38586                           
 38587                           ;incstack = 0
 38588  00770C  0101               	movlb	1	; () banked
 38589  00770E  51FB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38590  007710  11FC               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38591  007712  B4D8               	btfsc	status,2,c
 38592  007714  0012               	return	
 38593                           
 38594                           ; BSR set to: 1
 38595                           ;tmr1.c: 185: {
 38596                           ;tmr1.c: 186: TMR1_InterruptHandler();
 38597  007716  0005               	push	
 38598  007718  6EFA               	movwf	pclath,c
 38599  00771A  51FB               	movf	_TMR1_InterruptHandler& (0+255),w,b
 38600  00771C  6EFD               	movwf	tosl,c
 38601  00771E  51FC               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 38602  007720  6EFE               	movwf	tosh,c
 38603  007722  6AFF               	clrf	tosu,c
 38604  007724  50FA               	movf	pclath,w,c
 38605  007726  0012               	return		;indir
 38606  007728                     __end_of_TMR1_CallBack:
 38607                           	opt stack 0
 38608                           tosu	equ	0xFFF
 38609                           tosh	equ	0xFFE
 38610                           tosl	equ	0xFFD
 38611                           pclatu	equ	0xFFB
 38612                           pclath	equ	0xFFA
 38613                           tblptru	equ	0xFF8
 38614                           tblptrh	equ	0xFF7
 38615                           tblptrl	equ	0xFF6
 38616                           tablat	equ	0xFF5
 38617                           prodh	equ	0xFF4
 38618                           prodl	equ	0xFF3
 38619                           intcon	equ	0xFF2
 38620                           intcon2	equ	0xFF1
 38621                           intcon3	equ	0xFF0
 38622                           indf0	equ	0xFEF
 38623                           postinc0	equ	0xFEE
 38624                           plusw0	equ	0xFEB
 38625                           fsr0h	equ	0xFEA
 38626                           fsr0l	equ	0xFE9
 38627                           wreg	equ	0xFE8
 38628                           postinc1	equ	0xFE6
 38629                           postdec1	equ	0xFE5
 38630                           plusw1	equ	0xFE3
 38631                           fsr1h	equ	0xFE2
 38632                           fsr1l	equ	0xFE1
 38633                           indf2	equ	0xFDF
 38634                           postinc2	equ	0xFDE
 38635                           postdec2	equ	0xFDD
 38636                           plusw2	equ	0xFDB
 38637                           fsr2h	equ	0xFDA
 38638                           fsr2l	equ	0xFD9
 38639                           status	equ	0xFD8
 38640                           
 38641 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 38642 ;; Defined at:
 38643 ;;		line 194 in file "mcc_generated_files/tmr1.c"
 38644 ;; Parameters:    Size  Location     Type
 38645 ;;		None
 38646 ;; Auto vars:     Size  Location     Type
 38647 ;;		None
 38648 ;; Return value:  Size  Location     Type
 38649 ;;                  1    wreg      void 
 38650 ;; Registers used:
 38651 ;;		None
 38652 ;; Tracked objects:
 38653 ;;		On entry : F/1
 38654 ;;		On exit  : F/1
 38655 ;;		Unchanged: F/0
 38656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38660 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38661 ;;Total ram usage:        0 bytes
 38662 ;; Hardware stack levels used:    1
 38663 ;; This function calls:
 38664 ;;		Nothing
 38665 ;; This function is called by:
 38666 ;;		_TMR1_Initialize
 38667 ;;		_TMR1_CallBack
 38668 ;; This function uses a non-reentrant model
 38669 ;;
 38670                           
 38671                           	psect	text207
 38672  007ADE                     __ptext207:
 38673                           	opt stack 0
 38674  007ADE                     _TMR1_DefaultInterruptHandler:
 38675                           	opt stack 15
 38676                           
 38677                           ; BSR set to: 1
 38678                           
 38679                           ;incstack = 0
 38680  007ADE  0012               	return		;funcret
 38681  007AE0                     __end_of_TMR1_DefaultInterruptHandler:
 38682                           	opt stack 0
 38683                           tosu	equ	0xFFF
 38684                           tosh	equ	0xFFE
 38685                           tosl	equ	0xFFD
 38686                           pclatu	equ	0xFFB
 38687                           pclath	equ	0xFFA
 38688                           tblptru	equ	0xFF8
 38689                           tblptrh	equ	0xFF7
 38690                           tblptrl	equ	0xFF6
 38691                           tablat	equ	0xFF5
 38692                           prodh	equ	0xFF4
 38693                           prodl	equ	0xFF3
 38694                           intcon	equ	0xFF2
 38695                           intcon2	equ	0xFF1
 38696                           intcon3	equ	0xFF0
 38697                           indf0	equ	0xFEF
 38698                           postinc0	equ	0xFEE
 38699                           plusw0	equ	0xFEB
 38700                           fsr0h	equ	0xFEA
 38701                           fsr0l	equ	0xFE9
 38702                           wreg	equ	0xFE8
 38703                           postinc1	equ	0xFE6
 38704                           postdec1	equ	0xFE5
 38705                           plusw1	equ	0xFE3
 38706                           fsr1h	equ	0xFE2
 38707                           fsr1l	equ	0xFE1
 38708                           indf2	equ	0xFDF
 38709                           postinc2	equ	0xFDE
 38710                           postdec2	equ	0xFDD
 38711                           plusw2	equ	0xFDB
 38712                           fsr2h	equ	0xFDA
 38713                           fsr2l	equ	0xFD9
 38714                           status	equ	0xFD8
 38715                           
 38716 ;; *************** function _TMR_ISR_lora *****************
 38717 ;; Defined at:
 38718 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 38719 ;; Parameters:    Size  Location     Type
 38720 ;;		None
 38721 ;; Auto vars:     Size  Location     Type
 38722 ;;		None
 38723 ;; Return value:  Size  Location     Type
 38724 ;;                  1    wreg      void 
 38725 ;; Registers used:
 38726 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 38727 ;; Tracked objects:
 38728 ;;		On entry : F/1
 38729 ;;		On exit  : 0/0
 38730 ;;		Unchanged: 0/0
 38731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38732 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38733 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38735 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38736 ;;Total ram usage:        0 bytes
 38737 ;; Hardware stack levels used:    1
 38738 ;; Hardware stack levels required when called:    3
 38739 ;; This function calls:
 38740 ;;		i2_SwTimersInterrupt
 38741 ;;		i2_TMR_SwapTimer
 38742 ;; This function is called by:
 38743 ;;		_TMR_ISR_Lora_Init
 38744 ;;		_TMR1_CallBack
 38745 ;; This function uses a non-reentrant model
 38746 ;;
 38747                           
 38748                           	psect	text208
 38749  006C7E                     __ptext208:
 38750                           	opt stack 0
 38751  006C7E                     _TMR_ISR_lora:
 38752                           	opt stack 12
 38753                           
 38754                           ; BSR set to: 1
 38755                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 38756                           
 38757                           ; BSR set to: 1
 38758                           ;incstack = 0
 38759  006C7E  0E01               	movlw	1
 38760  006C80  6E49               	movwf	_timerOverflow,c	;volatile
 38761                           
 38762                           ; BSR set to: 1
 38763                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 38764  006C82  EC65  F028         	call	i2_SwTimersInterrupt	;wreg free
 38765  006C86  C019  F05A         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 38766  006C8A  C01A  F05B         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 38767  006C8E  C01B  F05C         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 38768  006C92  C01C  F05D         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 38769                           
 38770                           ; BSR set to: 0
 38771                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 38772  006C96  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 38773  006C98  E117               	bnz	i2l242
 38774  006C9A  045C               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 38775  006C9C  B0D8               	btfsc	status,0,c
 38776  006C9E  0012               	return	
 38777                           
 38778                           ; BSR set to: 0
 38779                           ;tmr_lora_addons.c: 66: {
 38780                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 38781  006CA0  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 38782  006CA2  0800               	sublw	0
 38783  006CA4  6FF0               	movwf	_reloadVal& (0+255),b	;volatile
 38784  006CA6  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 38785  006CA8  A0D8               	btfss	status,0,c
 38786  006CAA  2AE8               	incf	wreg,f,c
 38787  006CAC  0800               	sublw	0
 38788  006CAE  6FF1               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 38789                           
 38790                           ; BSR set to: 0
 38791                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 38792  006CB0  C0F0  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 38793  006CB4  C0F1  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 38794  006CB8  ECDC  F037         	call	i2_TMR_SwapTimer	;wreg free
 38795  006CBC  C009  F03A         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 38796  006CC0  C00A  F03B         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 38797  006CC4  6A3C               	clrf	_ticksAdded+2,c	;volatile
 38798  006CC6  6A3D               	clrf	_ticksAdded+3,c	;volatile
 38799  006CC8                     i2l242:
 38800  006CC8  0012               	return		;funcret
 38801  006CCA                     __end_of_TMR_ISR_lora:
 38802                           	opt stack 0
 38803                           tosu	equ	0xFFF
 38804                           tosh	equ	0xFFE
 38805                           tosl	equ	0xFFD
 38806                           pclatu	equ	0xFFB
 38807                           pclath	equ	0xFFA
 38808                           tblptru	equ	0xFF8
 38809                           tblptrh	equ	0xFF7
 38810                           tblptrl	equ	0xFF6
 38811                           tablat	equ	0xFF5
 38812                           prodh	equ	0xFF4
 38813                           prodl	equ	0xFF3
 38814                           intcon	equ	0xFF2
 38815                           intcon2	equ	0xFF1
 38816                           intcon3	equ	0xFF0
 38817                           indf0	equ	0xFEF
 38818                           postinc0	equ	0xFEE
 38819                           plusw0	equ	0xFEB
 38820                           fsr0h	equ	0xFEA
 38821                           fsr0l	equ	0xFE9
 38822                           wreg	equ	0xFE8
 38823                           postinc1	equ	0xFE6
 38824                           postdec1	equ	0xFE5
 38825                           plusw1	equ	0xFE3
 38826                           fsr1h	equ	0xFE2
 38827                           fsr1l	equ	0xFE1
 38828                           indf2	equ	0xFDF
 38829                           postinc2	equ	0xFDE
 38830                           postdec2	equ	0xFDD
 38831                           plusw2	equ	0xFDB
 38832                           fsr2h	equ	0xFDA
 38833                           fsr2l	equ	0xFD9
 38834                           status	equ	0xFD8
 38835                           
 38836 ;; *************** function i2_TMR_SwapTimer *****************
 38837 ;; Defined at:
 38838 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38839 ;; Parameters:    Size  Location     Type
 38840 ;;  timerVal        2    8[COMRAM] unsigned int 
 38841 ;; Auto vars:     Size  Location     Type
 38842 ;;		None
 38843 ;; Return value:  Size  Location     Type
 38844 ;;                  2    8[COMRAM] unsigned int 
 38845 ;; Registers used:
 38846 ;;		wreg, status,2, status,0, cstack
 38847 ;; Tracked objects:
 38848 ;;		On entry : F/0
 38849 ;;		On exit  : 0/0
 38850 ;;		Unchanged: 0/0
 38851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38852 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38855 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38856 ;;Total ram usage:        2 bytes
 38857 ;; Hardware stack levels used:    1
 38858 ;; Hardware stack levels required when called:    1
 38859 ;; This function calls:
 38860 ;;		i2_TMR1_ReadTimer
 38861 ;;		i2_TMR1_WriteTimer
 38862 ;; This function is called by:
 38863 ;;		_TMR_ISR_lora
 38864 ;; This function uses a non-reentrant model
 38865 ;;
 38866                           
 38867                           	psect	text209
 38868  006FB8                     __ptext209:
 38869                           	opt stack 0
 38870  006FB8                     i2_TMR_SwapTimer:
 38871                           	opt stack 13
 38872                           
 38873                           ; BSR set to: 0
 38874                           ;sw_timer.c: 114: static uint16_t oldVal;
 38875                           ;sw_timer.c: 115: static uint16_t retVal;
 38876                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 38877                           
 38878                           ;incstack = 0
 38879  006FB8  EC5B  F03B         	call	i2_TMR1_ReadTimer	;wreg free
 38880  006FBC  C001  F042         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 38881  006FC0  C002  F043         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 38882  006FC4                     i2l10782:
 38883  006FC4  EC5B  F03B         	call	i2_TMR1_ReadTimer	;wreg free
 38884  006FC8  5042               	movf	TMR_SwapTimer@oldVal,w,c
 38885  006FCA  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 38886  006FCC  E103               	bnz	i2u1115_40
 38887  006FCE  5043               	movf	TMR_SwapTimer@oldVal+1,w,c
 38888  006FD0  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 38889  006FD2  E0F8               	bz	i2l10782
 38890  006FD4                     i2u1115_40:
 38891                           
 38892                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 38893  006FD4  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 38894  006FD8  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 38895  006FDC  EC94  F03B         	call	i2_TMR1_WriteTimer	;wreg free
 38896                           
 38897                           ;sw_timer.c: 128: oldVal++;
 38898  006FE0  4A42               	infsnz	TMR_SwapTimer@oldVal,f,c
 38899  006FE2  2A43               	incf	TMR_SwapTimer@oldVal+1,f,c
 38900                           
 38901                           ;sw_timer.c: 130: retVal = oldVal;
 38902  006FE4  C042  F044         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 38903  006FE8  C043  F045         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 38904                           
 38905                           ;sw_timer.c: 132: return retVal;
 38906  006FEC  C044  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 38907  006FF0  C045  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 38908  006FF4  0012               	return		;funcret
 38909  006FF6                     __end_ofi2_TMR_SwapTimer:
 38910                           	opt stack 0
 38911                           tosu	equ	0xFFF
 38912                           tosh	equ	0xFFE
 38913                           tosl	equ	0xFFD
 38914                           pclatu	equ	0xFFB
 38915                           pclath	equ	0xFFA
 38916                           tblptru	equ	0xFF8
 38917                           tblptrh	equ	0xFF7
 38918                           tblptrl	equ	0xFF6
 38919                           tablat	equ	0xFF5
 38920                           prodh	equ	0xFF4
 38921                           prodl	equ	0xFF3
 38922                           intcon	equ	0xFF2
 38923                           intcon2	equ	0xFF1
 38924                           intcon3	equ	0xFF0
 38925                           indf0	equ	0xFEF
 38926                           postinc0	equ	0xFEE
 38927                           plusw0	equ	0xFEB
 38928                           fsr0h	equ	0xFEA
 38929                           fsr0l	equ	0xFE9
 38930                           wreg	equ	0xFE8
 38931                           postinc1	equ	0xFE6
 38932                           postdec1	equ	0xFE5
 38933                           plusw1	equ	0xFE3
 38934                           fsr1h	equ	0xFE2
 38935                           fsr1l	equ	0xFE1
 38936                           indf2	equ	0xFDF
 38937                           postinc2	equ	0xFDE
 38938                           postdec2	equ	0xFDD
 38939                           plusw2	equ	0xFDB
 38940                           fsr2h	equ	0xFDA
 38941                           fsr2l	equ	0xFD9
 38942                           status	equ	0xFD8
 38943                           
 38944 ;; *************** function i2_TMR1_WriteTimer *****************
 38945 ;; Defined at:
 38946 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 38947 ;; Parameters:    Size  Location     Type
 38948 ;;  timerVal        2    0[COMRAM] unsigned int 
 38949 ;; Auto vars:     Size  Location     Type
 38950 ;;		None
 38951 ;; Return value:  Size  Location     Type
 38952 ;;                  1    wreg      void 
 38953 ;; Registers used:
 38954 ;;		None
 38955 ;; Tracked objects:
 38956 ;;		On entry : 0/0
 38957 ;;		On exit  : 0/0
 38958 ;;		Unchanged: 0/0
 38959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38964 ;;Total ram usage:        2 bytes
 38965 ;; Hardware stack levels used:    1
 38966 ;; This function calls:
 38967 ;;		Nothing
 38968 ;; This function is called by:
 38969 ;;		i2_TMR_SwapTimer
 38970 ;; This function uses a non-reentrant model
 38971 ;;
 38972                           
 38973                           	psect	text210
 38974  007728                     __ptext210:
 38975                           	opt stack 0
 38976  007728                     i2_TMR1_WriteTimer:
 38977                           	opt stack 13
 38978                           
 38979                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 38980                           
 38981                           ;incstack = 0
 38982  007728  A4CD               	btfss	4045,2,c	;volatile
 38983  00772A  D007               	goto	i2l1349
 38984                           
 38985                           ;tmr1.c: 123: {
 38986                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 38987  00772C  90CD               	bcf	4045,0,c	;volatile
 38988                           
 38989                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 38990  00772E  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 38991                           
 38992                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 38993  007732  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 38994                           
 38995                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 38996  007736  80CD               	bsf	4045,0,c	;volatile
 38997                           
 38998                           ;tmr1.c: 133: }
 38999  007738  0012               	return	
 39000  00773A                     i2l1349:
 39001                           
 39002                           ;tmr1.c: 134: else
 39003                           ;tmr1.c: 135: {
 39004                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 39005  00773A  C002  FFCF         	movff	i2TMR1_WriteTimer@timerVal+1,4047	;volatile
 39006                           
 39007                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 39008  00773E  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 39009  007742  0012               	return		;funcret
 39010  007744                     __end_ofi2_TMR1_WriteTimer:
 39011                           	opt stack 0
 39012                           tosu	equ	0xFFF
 39013                           tosh	equ	0xFFE
 39014                           tosl	equ	0xFFD
 39015                           pclatu	equ	0xFFB
 39016                           pclath	equ	0xFFA
 39017                           tblptru	equ	0xFF8
 39018                           tblptrh	equ	0xFF7
 39019                           tblptrl	equ	0xFF6
 39020                           tablat	equ	0xFF5
 39021                           prodh	equ	0xFF4
 39022                           prodl	equ	0xFF3
 39023                           intcon	equ	0xFF2
 39024                           intcon2	equ	0xFF1
 39025                           intcon3	equ	0xFF0
 39026                           indf0	equ	0xFEF
 39027                           postinc0	equ	0xFEE
 39028                           plusw0	equ	0xFEB
 39029                           fsr0h	equ	0xFEA
 39030                           fsr0l	equ	0xFE9
 39031                           wreg	equ	0xFE8
 39032                           postinc1	equ	0xFE6
 39033                           postdec1	equ	0xFE5
 39034                           plusw1	equ	0xFE3
 39035                           fsr1h	equ	0xFE2
 39036                           fsr1l	equ	0xFE1
 39037                           indf2	equ	0xFDF
 39038                           postinc2	equ	0xFDE
 39039                           postdec2	equ	0xFDD
 39040                           plusw2	equ	0xFDB
 39041                           fsr2h	equ	0xFDA
 39042                           fsr2l	equ	0xFD9
 39043                           status	equ	0xFD8
 39044                           
 39045 ;; *************** function i2_SwTimersInterrupt *****************
 39046 ;; Defined at:
 39047 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39048 ;; Parameters:    Size  Location     Type
 39049 ;;		None
 39050 ;; Auto vars:     Size  Location     Type
 39051 ;;  SwTimersInte    4   36[COMRAM] unsigned long 
 39052 ;;  SwTimersInte    4   32[COMRAM] unsigned long 
 39053 ;;  SwTimersInte    1   40[COMRAM] unsigned char 
 39054 ;; Return value:  Size  Location     Type
 39055 ;;                  4   24[COMRAM] unsigned long 
 39056 ;; Registers used:
 39057 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39058 ;; Tracked objects:
 39059 ;;		On entry : F/1
 39060 ;;		On exit  : F/0
 39061 ;;		Unchanged: 0/0
 39062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39063 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39064 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39065 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39066 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39067 ;;Total ram usage:       17 bytes
 39068 ;; Hardware stack levels used:    1
 39069 ;; Hardware stack levels required when called:    2
 39070 ;; This function calls:
 39071 ;;		i2_TMR_GetDeltaTime
 39072 ;; This function is called by:
 39073 ;;		_TMR_ISR_lora
 39074 ;; This function uses a non-reentrant model
 39075 ;;
 39076                           
 39077                           	psect	text211
 39078  0050CA                     __ptext211:
 39079                           	opt stack 0
 39080  0050CA                     i2_SwTimersInterrupt:
 39081                           	opt stack 12
 39082                           
 39083                           ; BSR set to: 1
 39084                           ;sw_timer.c: 289: uint8_t i;
 39085                           ;sw_timer.c: 290: uint32_t timeElapsed;
 39086                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 39087                           
 39088                           ;incstack = 0
 39089  0050CA  6825               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 39090  0050CC  6826               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 39091  0050CE  6827               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 39092  0050D0  6828               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 39093                           
 39094                           ; BSR set to: 1
 39095                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 39096  0050D2  EC00  F027         	call	i2_TMR_GetDeltaTime	;wreg free
 39097  0050D6  C009  F021         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 39098  0050DA  C00A  F022         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 39099  0050DE  C00B  F023         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 39100  0050E2  C00C  F024         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 39101                           
 39102                           ; BSR set to: 0
 39103                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 39104  0050E6  6A29               	clrf	i2SwTimersInterrupt@i,c
 39105  0050E8  D05A               	goto	i2l10812
 39106  0050EA                     i2l10800:
 39107                           
 39108                           ; BSR set to: 0
 39109                           ;sw_timer.c: 298: {
 39110                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 39111  0050EA  5029               	movf	i2SwTimersInterrupt@i,w,c
 39112  0050EC  0D08               	mullw	8
 39113  0050EE  0E04               	movlw	low (_swTimers+4)
 39114  0050F0  24F3               	addwf	prodl,w,c
 39115  0050F2  6ED9               	movwf	fsr2l,c
 39116  0050F4  0E03               	movlw	high (_swTimers+4)
 39117  0050F6  20F4               	addwfc	prodh,w,c
 39118  0050F8  6EDA               	movwf	fsr2h,c
 39119  0050FA  04DE               	decf	postinc2,w,c
 39120  0050FC  E14F               	bnz	i2l10810
 39121                           
 39122                           ; BSR set to: 0
 39123                           ;sw_timer.c: 302: {
 39124                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 39125  0050FE  5029               	movf	i2SwTimersInterrupt@i,w,c
 39126  005100  0D08               	mullw	8
 39127  005102  0E00               	movlw	low _swTimers
 39128  005104  24F3               	addwf	prodl,w,c
 39129  005106  6ED9               	movwf	fsr2l,c
 39130  005108  0E03               	movlw	high _swTimers
 39131  00510A  20F4               	addwfc	prodh,w,c
 39132  00510C  6EDA               	movwf	fsr2h,c
 39133  00510E  50DE               	movf	postinc2,w,c
 39134  005110  5C21               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 39135  005112  50DE               	movf	postinc2,w,c
 39136  005114  5822               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 39137  005116  50DE               	movf	postinc2,w,c
 39138  005118  5823               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 39139  00511A  50DE               	movf	postinc2,w,c
 39140  00511C  5824               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 39141  00511E  E30D               	bnc	i2l10806
 39142                           
 39143                           ; BSR set to: 0
 39144                           ;sw_timer.c: 304: {
 39145                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 39146  005120  5029               	movf	i2SwTimersInterrupt@i,w,c
 39147  005122  0D08               	mullw	8
 39148  005124  0E00               	movlw	low _swTimers
 39149  005126  24F3               	addwf	prodl,w,c
 39150  005128  6ED9               	movwf	fsr2l,c
 39151  00512A  0E03               	movlw	high _swTimers
 39152  00512C  20F4               	addwfc	prodh,w,c
 39153  00512E  6EDA               	movwf	fsr2h,c
 39154  005130  6ADE               	clrf	postinc2,c
 39155  005132  6ADE               	clrf	postinc2,c
 39156  005134  6ADE               	clrf	postinc2,c
 39157  005136  6ADD               	clrf	postdec2,c
 39158                           
 39159                           ;sw_timer.c: 306: }
 39160  005138  D031               	goto	i2l10810
 39161  00513A                     i2l10806:
 39162                           
 39163                           ; BSR set to: 0
 39164                           ;sw_timer.c: 307: else
 39165                           ;sw_timer.c: 308: {
 39166                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 39167  00513A  5029               	movf	i2SwTimersInterrupt@i,w,c
 39168  00513C  0D08               	mullw	8
 39169  00513E  0E00               	movlw	low _swTimers
 39170  005140  24F3               	addwf	prodl,w,c
 39171  005142  6ED9               	movwf	fsr2l,c
 39172  005144  0E03               	movlw	high _swTimers
 39173  005146  20F4               	addwfc	prodh,w,c
 39174  005148  6EDA               	movwf	fsr2h,c
 39175  00514A  5021               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 39176  00514C  5EDE               	subwf	postinc2,f,c
 39177  00514E  5022               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 39178  005150  5ADE               	subwfb	postinc2,f,c
 39179  005152  5023               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 39180  005154  5ADE               	subwfb	postinc2,f,c
 39181  005156  5024               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 39182  005158  5ADE               	subwfb	postinc2,f,c
 39183                           
 39184                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 39185  00515A  5029               	movf	i2SwTimersInterrupt@i,w,c
 39186  00515C  0D08               	mullw	8
 39187  00515E  0E00               	movlw	low _swTimers
 39188  005160  24F3               	addwf	prodl,w,c
 39189  005162  6ED9               	movwf	fsr2l,c
 39190  005164  0E03               	movlw	high _swTimers
 39191  005166  20F4               	addwfc	prodh,w,c
 39192  005168  6EDA               	movwf	fsr2h,c
 39193  00516A  5025               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 39194  00516C  5CDE               	subwf	postinc2,w,c
 39195  00516E  5026               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 39196  005170  58DE               	subwfb	postinc2,w,c
 39197  005172  5027               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 39198  005174  58DE               	subwfb	postinc2,w,c
 39199  005176  5028               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 39200  005178  58DE               	subwfb	postinc2,w,c
 39201  00517A  E210               	bc	i2l10810
 39202                           
 39203                           ; BSR set to: 0
 39204                           ;sw_timer.c: 313: {
 39205                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 39206  00517C  5029               	movf	i2SwTimersInterrupt@i,w,c
 39207  00517E  0D08               	mullw	8
 39208  005180  0E00               	movlw	low _swTimers
 39209  005182  24F3               	addwf	prodl,w,c
 39210  005184  6ED9               	movwf	fsr2l,c
 39211  005186  0E03               	movlw	high _swTimers
 39212  005188  20F4               	addwfc	prodh,w,c
 39213  00518A  6EDA               	movwf	fsr2h,c
 39214  00518C  CFDE F025          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 39215  005190  CFDE F026          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 39216  005194  CFDE F027          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 39217  005198  CFDE F028          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 39218  00519C                     i2l10810:
 39219                           
 39220                           ; BSR set to: 0
 39221  00519C  2A29               	incf	i2SwTimersInterrupt@i,f,c
 39222  00519E                     i2l10812:
 39223                           
 39224                           ; BSR set to: 0
 39225  00519E  51F2               	movf	_allocatedTimers& (0+255),w,b	;volatile
 39226  0051A0  5C29               	subwf	i2SwTimersInterrupt@i,w,c
 39227  0051A2  E3A3               	bnc	i2l10800
 39228                           
 39229                           ; BSR set to: 0
 39230                           ;sw_timer.c: 315: }
 39231                           ;sw_timer.c: 316: }
 39232                           ;sw_timer.c: 317: }
 39233                           ;sw_timer.c: 318: }
 39234                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 39235  0051A4  C025  F019         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 39236  0051A8  C026  F01A         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 39237  0051AC  C027  F01B         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 39238  0051B0  C028  F01C         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 39239                           
 39240                           ; BSR set to: 0
 39241  0051B4  0012               	return		;funcret
 39242  0051B6                     __end_ofi2_SwTimersInterrupt:
 39243                           	opt stack 0
 39244                           tosu	equ	0xFFF
 39245                           tosh	equ	0xFFE
 39246                           tosl	equ	0xFFD
 39247                           pclatu	equ	0xFFB
 39248                           pclath	equ	0xFFA
 39249                           tblptru	equ	0xFF8
 39250                           tblptrh	equ	0xFF7
 39251                           tblptrl	equ	0xFF6
 39252                           tablat	equ	0xFF5
 39253                           prodh	equ	0xFF4
 39254                           prodl	equ	0xFF3
 39255                           intcon	equ	0xFF2
 39256                           intcon2	equ	0xFF1
 39257                           intcon3	equ	0xFF0
 39258                           indf0	equ	0xFEF
 39259                           postinc0	equ	0xFEE
 39260                           plusw0	equ	0xFEB
 39261                           fsr0h	equ	0xFEA
 39262                           fsr0l	equ	0xFE9
 39263                           wreg	equ	0xFE8
 39264                           postinc1	equ	0xFE6
 39265                           postdec1	equ	0xFE5
 39266                           plusw1	equ	0xFE3
 39267                           fsr1h	equ	0xFE2
 39268                           fsr1l	equ	0xFE1
 39269                           indf2	equ	0xFDF
 39270                           postinc2	equ	0xFDE
 39271                           postdec2	equ	0xFDD
 39272                           plusw2	equ	0xFDB
 39273                           fsr2h	equ	0xFDA
 39274                           fsr2l	equ	0xFD9
 39275                           status	equ	0xFD8
 39276                           
 39277 ;; *************** function i2_TMR_GetDeltaTime *****************
 39278 ;; Defined at:
 39279 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39280 ;; Parameters:    Size  Location     Type
 39281 ;;		None
 39282 ;; Auto vars:     Size  Location     Type
 39283 ;;		None
 39284 ;; Return value:  Size  Location     Type
 39285 ;;                  4    8[COMRAM] unsigned long 
 39286 ;; Registers used:
 39287 ;;		wreg, status,2, status,0, cstack
 39288 ;; Tracked objects:
 39289 ;;		On entry : F/1
 39290 ;;		On exit  : F/0
 39291 ;;		Unchanged: 0/0
 39292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39293 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39295 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39296 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39297 ;;Total ram usage:       16 bytes
 39298 ;; Hardware stack levels used:    1
 39299 ;; Hardware stack levels required when called:    1
 39300 ;; This function calls:
 39301 ;;		i2_TMR1_ReadTimer
 39302 ;; This function is called by:
 39303 ;;		i2_SwTimersInterrupt
 39304 ;; This function uses a non-reentrant model
 39305 ;;
 39306                           
 39307                           	psect	text212
 39308  004E00                     __ptext212:
 39309                           	opt stack 0
 39310  004E00                     i2_TMR_GetDeltaTime:
 39311                           	opt stack 12
 39312                           
 39313                           ; BSR set to: 1
 39314                           ;sw_timer.c: 90: static uint32_t retVal;
 39315                           ;sw_timer.c: 91: static uint16_t tmrVal;
 39316                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 39317                           
 39318                           ; BSR set to: 0
 39319                           ;incstack = 0
 39320  004E00  EC5B  F03B         	call	i2_TMR1_ReadTimer	;wreg free
 39321  004E04  C001  F040         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 39322  004E08  C002  F041         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 39323                           
 39324                           ;sw_timer.c: 95: if (timerOverflow == 1)
 39325  004E0C  0449               	decf	_timerOverflow,w,c	;volatile
 39326  004E0E  E13E               	bnz	i2l10118
 39327                           
 39328                           ;sw_timer.c: 96: {
 39329                           ;sw_timer.c: 97: timerOverflow = 0;
 39330  004E10  6A49               	clrf	_timerOverflow,c	;volatile
 39331                           
 39332                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 39333  004E12  0100               	movlb	0	; () banked
 39334  004E14  51F0               	movf	_reloadVal& (0+255),w,b	;volatile
 39335  004E16  5C40               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39336  004E18  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39337  004E1A  51F1               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39338  004E1C  5841               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39339  004E1E  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39340  004E20  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39341  004E22  A0D8               	btfss	status,0,c
 39342  004E24  060F               	decf	(??i2_TMR_GetDeltaTime+2)& (0+255),f,c
 39343  004E26  500F               	movf	(??i2_TMR_GetDeltaTime+2)& (0+255),w,c
 39344  004E28  6E10               	movwf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39345  004E2A  5036               	movf	_ticksAccounted,w,c	;volatile
 39346  004E2C  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39347  004E2E  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39348  004E30  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39349  004E32  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39350  004E34  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39351  004E36  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39352  004E38  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39353  004E3A  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39354  004E3C  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39355  004E3E  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39356  004E40  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39357  004E42  503A               	movf	_ticksAdded,w,c	;volatile
 39358  004E44  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39359  004E46  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 39360  004E48  503B               	movf	_ticksAdded+1,w,c	;volatile
 39361  004E4A  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39362  004E4C  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 39363  004E4E  503C               	movf	_ticksAdded+2,w,c	;volatile
 39364  004E50  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39365  004E52  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 39366  004E54  503D               	movf	_ticksAdded+3,w,c	;volatile
 39367  004E56  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39368  004E58  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 39369  004E5A  0E00               	movlw	0
 39370  004E5C  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 39371  004E5E  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39372  004E60  0E00               	movlw	0
 39373  004E62  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 39374  004E64  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39375  004E66  0E01               	movlw	1
 39376  004E68  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 39377  004E6A  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39378  004E6C  0E00               	movlw	0
 39379  004E6E  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 39380  004E70  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39381                           
 39382                           ; BSR set to: 0
 39383                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 39384  004E72  C040  F036         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 39385  004E76  C041  F037         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 39386  004E7A  6A38               	clrf	_ticksAccounted+2,c	;volatile
 39387  004E7C  6A39               	clrf	_ticksAccounted+3,c	;volatile
 39388                           
 39389                           ; BSR set to: 0
 39390                           ;sw_timer.c: 100: ticksAdded = 0;
 39391  004E7E  6A3A               	clrf	_ticksAdded,c	;volatile
 39392  004E80  6A3B               	clrf	_ticksAdded+1,c	;volatile
 39393  004E82  6A3C               	clrf	_ticksAdded+2,c	;volatile
 39394  004E84  6A3D               	clrf	_ticksAdded+3,c	;volatile
 39395                           
 39396                           ; BSR set to: 0
 39397                           ;sw_timer.c: 101: reloadVal = 0;
 39398  004E86  6BF0               	clrf	_reloadVal& (0+255),b	;volatile
 39399  004E88  6BF1               	clrf	(_reloadVal+1)& (0+255),b	;volatile
 39400                           
 39401                           ;sw_timer.c: 102: }
 39402  004E8A  D029               	goto	i2l10120
 39403  004E8C                     i2l10118:
 39404                           
 39405                           ;sw_timer.c: 103: else
 39406                           ;sw_timer.c: 104: {
 39407                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 39408  004E8C  0100               	movlb	0	; () banked
 39409  004E8E  51F0               	movf	_reloadVal& (0+255),w,b	;volatile
 39410  004E90  5C40               	subwf	TMR_GetDeltaTime@tmrVal,w,c
 39411  004E92  6E0D               	movwf	??i2_TMR_GetDeltaTime& (0+255),c
 39412  004E94  51F1               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 39413  004E96  5841               	subwfb	TMR_GetDeltaTime@tmrVal+1,w,c
 39414  004E98  6E0E               	movwf	(??i2_TMR_GetDeltaTime+1)& (0+255),c
 39415  004E9A  6A0F               	clrf	(??i2_TMR_GetDeltaTime+2)& (0+255),c
 39416  004E9C  6A10               	clrf	(??i2_TMR_GetDeltaTime+3)& (0+255),c
 39417  004E9E  5036               	movf	_ticksAccounted,w,c	;volatile
 39418  004EA0  5C0D               	subwf	??i2_TMR_GetDeltaTime,w,c
 39419  004EA2  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 39420  004EA4  5037               	movf	_ticksAccounted+1,w,c	;volatile
 39421  004EA6  580E               	subwfb	??i2_TMR_GetDeltaTime+1,w,c
 39422  004EA8  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 39423  004EAA  5038               	movf	_ticksAccounted+2,w,c	;volatile
 39424  004EAC  580F               	subwfb	??i2_TMR_GetDeltaTime+2,w,c
 39425  004EAE  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 39426  004EB0  5039               	movf	_ticksAccounted+3,w,c	;volatile
 39427  004EB2  5810               	subwfb	??i2_TMR_GetDeltaTime+3,w,c
 39428  004EB4  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 39429  004EB6  503A               	movf	_ticksAdded,w,c	;volatile
 39430  004EB8  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 39431  004EBA  6E32               	movwf	TMR_GetDeltaTime@retVal,c
 39432  004EBC  503B               	movf	_ticksAdded+1,w,c	;volatile
 39433  004EBE  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 39434  004EC0  6E33               	movwf	TMR_GetDeltaTime@retVal+1,c
 39435  004EC2  503C               	movf	_ticksAdded+2,w,c	;volatile
 39436  004EC4  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 39437  004EC6  6E34               	movwf	TMR_GetDeltaTime@retVal+2,c
 39438  004EC8  503D               	movf	_ticksAdded+3,w,c	;volatile
 39439  004ECA  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 39440  004ECC  6E35               	movwf	TMR_GetDeltaTime@retVal+3,c
 39441                           
 39442                           ;sw_timer.c: 106: ticksAccounted += retVal;
 39443  004ECE  5032               	movf	TMR_GetDeltaTime@retVal,w,c
 39444  004ED0  2636               	addwf	_ticksAccounted,f,c	;volatile
 39445  004ED2  5033               	movf	TMR_GetDeltaTime@retVal+1,w,c
 39446  004ED4  2237               	addwfc	_ticksAccounted+1,f,c	;volatile
 39447  004ED6  5034               	movf	TMR_GetDeltaTime@retVal+2,w,c
 39448  004ED8  2238               	addwfc	_ticksAccounted+2,f,c	;volatile
 39449  004EDA  5035               	movf	TMR_GetDeltaTime@retVal+3,w,c
 39450  004EDC  2239               	addwfc	_ticksAccounted+3,f,c	;volatile
 39451  004EDE                     i2l10120:
 39452                           
 39453                           ; BSR set to: 0
 39454                           ;sw_timer.c: 107: }
 39455                           ;sw_timer.c: 109: return retVal;
 39456  004EDE  C032  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 39457  004EE2  C033  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 39458  004EE6  C034  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 39459  004EEA  C035  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 39460                           
 39461                           ; BSR set to: 0
 39462  004EEE  0012               	return		;funcret
 39463  004EF0                     __end_ofi2_TMR_GetDeltaTime:
 39464                           	opt stack 0
 39465                           tosu	equ	0xFFF
 39466                           tosh	equ	0xFFE
 39467                           tosl	equ	0xFFD
 39468                           pclatu	equ	0xFFB
 39469                           pclath	equ	0xFFA
 39470                           tblptru	equ	0xFF8
 39471                           tblptrh	equ	0xFF7
 39472                           tblptrl	equ	0xFF6
 39473                           tablat	equ	0xFF5
 39474                           prodh	equ	0xFF4
 39475                           prodl	equ	0xFF3
 39476                           intcon	equ	0xFF2
 39477                           intcon2	equ	0xFF1
 39478                           intcon3	equ	0xFF0
 39479                           indf0	equ	0xFEF
 39480                           postinc0	equ	0xFEE
 39481                           plusw0	equ	0xFEB
 39482                           fsr0h	equ	0xFEA
 39483                           fsr0l	equ	0xFE9
 39484                           wreg	equ	0xFE8
 39485                           postinc1	equ	0xFE6
 39486                           postdec1	equ	0xFE5
 39487                           plusw1	equ	0xFE3
 39488                           fsr1h	equ	0xFE2
 39489                           fsr1l	equ	0xFE1
 39490                           indf2	equ	0xFDF
 39491                           postinc2	equ	0xFDE
 39492                           postdec2	equ	0xFDD
 39493                           plusw2	equ	0xFDB
 39494                           fsr2h	equ	0xFDA
 39495                           fsr2l	equ	0xFD9
 39496                           status	equ	0xFD8
 39497                           
 39498 ;; *************** function i2_TMR1_ReadTimer *****************
 39499 ;; Defined at:
 39500 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 39501 ;; Parameters:    Size  Location     Type
 39502 ;;		None
 39503 ;; Auto vars:     Size  Location     Type
 39504 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 39505 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 39506 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 39507 ;; Return value:  Size  Location     Type
 39508 ;;                  2    0[COMRAM] unsigned int 
 39509 ;; Registers used:
 39510 ;;		wreg, status,2
 39511 ;; Tracked objects:
 39512 ;;		On entry : 0/0
 39513 ;;		On exit  : 0/0
 39514 ;;		Unchanged: 0/0
 39515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39517 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39518 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39519 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39520 ;;Total ram usage:        8 bytes
 39521 ;; Hardware stack levels used:    1
 39522 ;; This function calls:
 39523 ;;		Nothing
 39524 ;; This function is called by:
 39525 ;;		i2_TMR_GetDeltaTime
 39526 ;;		i2_TMR_SwapTimer
 39527 ;; This function uses a non-reentrant model
 39528 ;;
 39529                           
 39530                           	psect	text213
 39531  0076B6                     __ptext213:
 39532                           	opt stack 0
 39533  0076B6                     i2_TMR1_ReadTimer:
 39534                           	opt stack 13
 39535                           
 39536                           ;tmr1.c: 108: uint16_t readVal;
 39537                           ;tmr1.c: 109: uint8_t readValHigh;
 39538                           ;tmr1.c: 110: uint8_t readValLow;
 39539                           ;tmr1.c: 112: readValLow = TMR1L;
 39540                           
 39541                           ; BSR set to: 0
 39542                           ;incstack = 0
 39543  0076B6  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 39544                           
 39545                           ;tmr1.c: 113: readValHigh = TMR1H;
 39546  0076BA  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 39547                           
 39548                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 39549  0076BE  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 39550  0076C0  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 39551  0076C2  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 39552  0076C4  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 39553  0076C6  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 39554                           
 39555                           ;tmr1.c: 117: return readVal;
 39556  0076CA  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 39557  0076CE  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 39558  0076D2  0012               	return		;funcret
 39559  0076D4                     __end_ofi2_TMR1_ReadTimer:
 39560                           	opt stack 0
 39561                           tosu	equ	0xFFF
 39562                           tosh	equ	0xFFE
 39563                           tosl	equ	0xFFD
 39564                           pclatu	equ	0xFFB
 39565                           pclath	equ	0xFFA
 39566                           tblptru	equ	0xFF8
 39567                           tblptrh	equ	0xFF7
 39568                           tblptrl	equ	0xFF6
 39569                           tablat	equ	0xFF5
 39570                           prodh	equ	0xFF4
 39571                           prodl	equ	0xFF3
 39572                           intcon	equ	0xFF2
 39573                           intcon2	equ	0xFF1
 39574                           intcon3	equ	0xFF0
 39575                           indf0	equ	0xFEF
 39576                           postinc0	equ	0xFEE
 39577                           plusw0	equ	0xFEB
 39578                           fsr0h	equ	0xFEA
 39579                           fsr0l	equ	0xFE9
 39580                           wreg	equ	0xFE8
 39581                           postinc1	equ	0xFE6
 39582                           postdec1	equ	0xFE5
 39583                           plusw1	equ	0xFE3
 39584                           fsr1h	equ	0xFE2
 39585                           fsr1l	equ	0xFE1
 39586                           indf2	equ	0xFDF
 39587                           postinc2	equ	0xFDE
 39588                           postdec2	equ	0xFDD
 39589                           plusw2	equ	0xFDB
 39590                           fsr2h	equ	0xFDA
 39591                           fsr2l	equ	0xFD9
 39592                           status	equ	0xFD8
 39593                           
 39594 ;; *************** function _PIN_MANAGER_IOC *****************
 39595 ;; Defined at:
 39596 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
 39597 ;; Parameters:    Size  Location     Type
 39598 ;;		None
 39599 ;; Auto vars:     Size  Location     Type
 39600 ;;		None
 39601 ;; Return value:  Size  Location     Type
 39602 ;;                  1    wreg      void 
 39603 ;; Registers used:
 39604 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39605 ;; Tracked objects:
 39606 ;;		On entry : 0/0
 39607 ;;		On exit  : 0/0
 39608 ;;		Unchanged: 0/0
 39609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39610 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39611 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39613 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39614 ;;Total ram usage:        0 bytes
 39615 ;; Hardware stack levels used:    1
 39616 ;; Hardware stack levels required when called:    2
 39617 ;; This function calls:
 39618 ;;		_IOCB4_ISR
 39619 ;;		_IOCB5_ISR
 39620 ;; This function is called by:
 39621 ;;		_INTERRUPT_InterruptManager
 39622 ;; This function uses a non-reentrant model
 39623 ;;
 39624                           
 39625                           	psect	text214
 39626  007928                     __ptext214:
 39627                           	opt stack 0
 39628  007928                     _PIN_MANAGER_IOC:
 39629                           	opt stack 15
 39630                           
 39631                           ;pin_manager.c: 109: if(IOCBbits.IOCB4 == 1)
 39632                           
 39633                           ;incstack = 0
 39634  007928  B862               	btfsc	3938,4,c	;volatile
 39635                           
 39636                           ;pin_manager.c: 110: {
 39637                           ;pin_manager.c: 111: IOCB4_ISR();
 39638  00792A  ECB0  F03B         	call	_IOCB4_ISR	;wreg free
 39639                           
 39640                           ;pin_manager.c: 112: }
 39641                           ;pin_manager.c: 114: if(IOCBbits.IOCB5 == 1)
 39642  00792E  BA62               	btfsc	3938,5,c	;volatile
 39643                           
 39644                           ;pin_manager.c: 115: {
 39645                           ;pin_manager.c: 116: IOCB5_ISR();
 39646  007930  ECA2  F03B         	call	_IOCB5_ISR	;wreg free
 39647                           
 39648                           ;pin_manager.c: 117: }
 39649                           ;pin_manager.c: 120: INTCONbits.RBIF = 0;
 39650  007934  90F2               	bcf	intcon,0,c	;volatile
 39651  007936  0012               	return		;funcret
 39652  007938                     __end_of_PIN_MANAGER_IOC:
 39653                           	opt stack 0
 39654                           tosu	equ	0xFFF
 39655                           tosh	equ	0xFFE
 39656                           tosl	equ	0xFFD
 39657                           pclatu	equ	0xFFB
 39658                           pclath	equ	0xFFA
 39659                           tblptru	equ	0xFF8
 39660                           tblptrh	equ	0xFF7
 39661                           tblptrl	equ	0xFF6
 39662                           tablat	equ	0xFF5
 39663                           prodh	equ	0xFF4
 39664                           prodl	equ	0xFF3
 39665                           intcon	equ	0xFF2
 39666                           intcon2	equ	0xFF1
 39667                           intcon3	equ	0xFF0
 39668                           indf0	equ	0xFEF
 39669                           postinc0	equ	0xFEE
 39670                           plusw0	equ	0xFEB
 39671                           fsr0h	equ	0xFEA
 39672                           fsr0l	equ	0xFE9
 39673                           wreg	equ	0xFE8
 39674                           postinc1	equ	0xFE6
 39675                           postdec1	equ	0xFE5
 39676                           plusw1	equ	0xFE3
 39677                           fsr1h	equ	0xFE2
 39678                           fsr1l	equ	0xFE1
 39679                           indf2	equ	0xFDF
 39680                           postinc2	equ	0xFDE
 39681                           postdec2	equ	0xFDD
 39682                           plusw2	equ	0xFDB
 39683                           fsr2h	equ	0xFDA
 39684                           fsr2l	equ	0xFD9
 39685                           status	equ	0xFD8
 39686                           
 39687 ;; *************** function _IOCB5_ISR *****************
 39688 ;; Defined at:
 39689 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
 39690 ;; Parameters:    Size  Location     Type
 39691 ;;		None
 39692 ;; Auto vars:     Size  Location     Type
 39693 ;;		None
 39694 ;; Return value:  Size  Location     Type
 39695 ;;                  1    wreg      void 
 39696 ;; Registers used:
 39697 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39698 ;; Tracked objects:
 39699 ;;		On entry : 0/0
 39700 ;;		On exit  : 0/0
 39701 ;;		Unchanged: 0/0
 39702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39703 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39704 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39705 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39706 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39707 ;;Total ram usage:        0 bytes
 39708 ;; Hardware stack levels used:    1
 39709 ;; Hardware stack levels required when called:    1
 39710 ;; This function calls:
 39711 ;;		Absolute function
 39712 ;;		_IOCB5_DefaultInterruptHandler
 39713 ;; This function is called by:
 39714 ;;		_PIN_MANAGER_IOC
 39715 ;; This function uses a non-reentrant model
 39716 ;;
 39717                           
 39718                           	psect	text215
 39719  007744                     __ptext215:
 39720                           	opt stack 0
 39721  007744                     _IOCB5_ISR:
 39722                           	opt stack 15
 39723                           
 39724                           ;pin_manager.c: 161: if(IOCB5_InterruptHandler)
 39725                           
 39726                           ;incstack = 0
 39727  007744  0101               	movlb	1	; () banked
 39728  007746  51F9               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 39729  007748  11FA               	iorwf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 39730  00774A  B4D8               	btfsc	status,2,c
 39731  00774C  0012               	return	
 39732                           
 39733                           ; BSR set to: 1
 39734                           ;pin_manager.c: 162: {
 39735                           ;pin_manager.c: 163: IOCB5_InterruptHandler();
 39736  00774E  0005               	push	
 39737  007750  6EFA               	movwf	pclath,c
 39738  007752  51F9               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 39739  007754  6EFD               	movwf	tosl,c
 39740  007756  51FA               	movf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 39741  007758  6EFE               	movwf	tosh,c
 39742  00775A  6AFF               	clrf	tosu,c
 39743  00775C  50FA               	movf	pclath,w,c
 39744  00775E  0012               	return		;indir
 39745  007760                     __end_of_IOCB5_ISR:
 39746                           	opt stack 0
 39747                           tosu	equ	0xFFF
 39748                           tosh	equ	0xFFE
 39749                           tosl	equ	0xFFD
 39750                           pclatu	equ	0xFFB
 39751                           pclath	equ	0xFFA
 39752                           tblptru	equ	0xFF8
 39753                           tblptrh	equ	0xFF7
 39754                           tblptrl	equ	0xFF6
 39755                           tablat	equ	0xFF5
 39756                           prodh	equ	0xFF4
 39757                           prodl	equ	0xFF3
 39758                           intcon	equ	0xFF2
 39759                           intcon2	equ	0xFF1
 39760                           intcon3	equ	0xFF0
 39761                           indf0	equ	0xFEF
 39762                           postinc0	equ	0xFEE
 39763                           plusw0	equ	0xFEB
 39764                           fsr0h	equ	0xFEA
 39765                           fsr0l	equ	0xFE9
 39766                           wreg	equ	0xFE8
 39767                           postinc1	equ	0xFE6
 39768                           postdec1	equ	0xFE5
 39769                           plusw1	equ	0xFE3
 39770                           fsr1h	equ	0xFE2
 39771                           fsr1l	equ	0xFE1
 39772                           indf2	equ	0xFDF
 39773                           postinc2	equ	0xFDE
 39774                           postdec2	equ	0xFDD
 39775                           plusw2	equ	0xFDB
 39776                           fsr2h	equ	0xFDA
 39777                           fsr2l	equ	0xFD9
 39778                           status	equ	0xFD8
 39779                           
 39780 ;; *************** function _IOCB5_DefaultInterruptHandler *****************
 39781 ;; Defined at:
 39782 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
 39783 ;; Parameters:    Size  Location     Type
 39784 ;;		None
 39785 ;; Auto vars:     Size  Location     Type
 39786 ;;		None
 39787 ;; Return value:  Size  Location     Type
 39788 ;;                  1    wreg      void 
 39789 ;; Registers used:
 39790 ;;		None
 39791 ;; Tracked objects:
 39792 ;;		On entry : F/1
 39793 ;;		On exit  : F/1
 39794 ;;		Unchanged: F/0
 39795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39800 ;;Total ram usage:        0 bytes
 39801 ;; Hardware stack levels used:    1
 39802 ;; This function calls:
 39803 ;;		Nothing
 39804 ;; This function is called by:
 39805 ;;		_PIN_MANAGER_Initialize
 39806 ;;		_IOCB5_ISR
 39807 ;; This function uses a non-reentrant model
 39808 ;;
 39809                           
 39810                           	psect	text216
 39811  007AE0                     __ptext216:
 39812                           	opt stack 0
 39813  007AE0                     _IOCB5_DefaultInterruptHandler:
 39814                           	opt stack 15
 39815                           
 39816                           ; BSR set to: 1
 39817                           
 39818                           ;incstack = 0
 39819  007AE0  0012               	return		;funcret
 39820  007AE2                     __end_of_IOCB5_DefaultInterruptHandler:
 39821                           	opt stack 0
 39822                           tosu	equ	0xFFF
 39823                           tosh	equ	0xFFE
 39824                           tosl	equ	0xFFD
 39825                           pclatu	equ	0xFFB
 39826                           pclath	equ	0xFFA
 39827                           tblptru	equ	0xFF8
 39828                           tblptrh	equ	0xFF7
 39829                           tblptrl	equ	0xFF6
 39830                           tablat	equ	0xFF5
 39831                           prodh	equ	0xFF4
 39832                           prodl	equ	0xFF3
 39833                           intcon	equ	0xFF2
 39834                           intcon2	equ	0xFF1
 39835                           intcon3	equ	0xFF0
 39836                           indf0	equ	0xFEF
 39837                           postinc0	equ	0xFEE
 39838                           plusw0	equ	0xFEB
 39839                           fsr0h	equ	0xFEA
 39840                           fsr0l	equ	0xFE9
 39841                           wreg	equ	0xFE8
 39842                           postinc1	equ	0xFE6
 39843                           postdec1	equ	0xFE5
 39844                           plusw1	equ	0xFE3
 39845                           fsr1h	equ	0xFE2
 39846                           fsr1l	equ	0xFE1
 39847                           indf2	equ	0xFDF
 39848                           postinc2	equ	0xFDE
 39849                           postdec2	equ	0xFDD
 39850                           plusw2	equ	0xFDB
 39851                           fsr2h	equ	0xFDA
 39852                           fsr2l	equ	0xFD9
 39853                           status	equ	0xFD8
 39854                           
 39855 ;; *************** function _IOCB4_ISR *****************
 39856 ;; Defined at:
 39857 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 39858 ;; Parameters:    Size  Location     Type
 39859 ;;		None
 39860 ;; Auto vars:     Size  Location     Type
 39861 ;;		None
 39862 ;; Return value:  Size  Location     Type
 39863 ;;                  1    wreg      void 
 39864 ;; Registers used:
 39865 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 39866 ;; Tracked objects:
 39867 ;;		On entry : 0/0
 39868 ;;		On exit  : 0/0
 39869 ;;		Unchanged: 0/0
 39870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39875 ;;Total ram usage:        0 bytes
 39876 ;; Hardware stack levels used:    1
 39877 ;; Hardware stack levels required when called:    1
 39878 ;; This function calls:
 39879 ;;		Absolute function
 39880 ;;		_DIO2_ISR_Lora
 39881 ;;		_IOCB4_DefaultInterruptHandler
 39882 ;; This function is called by:
 39883 ;;		_PIN_MANAGER_IOC
 39884 ;; This function uses a non-reentrant model
 39885 ;;
 39886                           
 39887                           	psect	text217
 39888  007760                     __ptext217:
 39889                           	opt stack 0
 39890  007760                     _IOCB4_ISR:
 39891                           	opt stack 15
 39892                           
 39893                           ;pin_manager.c: 132: if(IOCB4_InterruptHandler)
 39894                           
 39895                           ; BSR set to: 1
 39896                           ;incstack = 0
 39897  007760  0101               	movlb	1	; () banked
 39898  007762  51F7               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39899  007764  11F8               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39900  007766  B4D8               	btfsc	status,2,c
 39901  007768  0012               	return	
 39902                           
 39903                           ; BSR set to: 1
 39904                           ;pin_manager.c: 133: {
 39905                           ;pin_manager.c: 134: IOCB4_InterruptHandler();
 39906  00776A  0005               	push	
 39907  00776C  6EFA               	movwf	pclath,c
 39908  00776E  51F7               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 39909  007770  6EFD               	movwf	tosl,c
 39910  007772  51F8               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 39911  007774  6EFE               	movwf	tosh,c
 39912  007776  6AFF               	clrf	tosu,c
 39913  007778  50FA               	movf	pclath,w,c
 39914  00777A  0012               	return		;indir
 39915  00777C                     __end_of_IOCB4_ISR:
 39916                           	opt stack 0
 39917                           tosu	equ	0xFFF
 39918                           tosh	equ	0xFFE
 39919                           tosl	equ	0xFFD
 39920                           pclatu	equ	0xFFB
 39921                           pclath	equ	0xFFA
 39922                           tblptru	equ	0xFF8
 39923                           tblptrh	equ	0xFF7
 39924                           tblptrl	equ	0xFF6
 39925                           tablat	equ	0xFF5
 39926                           prodh	equ	0xFF4
 39927                           prodl	equ	0xFF3
 39928                           intcon	equ	0xFF2
 39929                           intcon2	equ	0xFF1
 39930                           intcon3	equ	0xFF0
 39931                           indf0	equ	0xFEF
 39932                           postinc0	equ	0xFEE
 39933                           plusw0	equ	0xFEB
 39934                           fsr0h	equ	0xFEA
 39935                           fsr0l	equ	0xFE9
 39936                           wreg	equ	0xFE8
 39937                           postinc1	equ	0xFE6
 39938                           postdec1	equ	0xFE5
 39939                           plusw1	equ	0xFE3
 39940                           fsr1h	equ	0xFE2
 39941                           fsr1l	equ	0xFE1
 39942                           indf2	equ	0xFDF
 39943                           postinc2	equ	0xFDE
 39944                           postdec2	equ	0xFDD
 39945                           plusw2	equ	0xFDB
 39946                           fsr2h	equ	0xFDA
 39947                           fsr2l	equ	0xFD9
 39948                           status	equ	0xFD8
 39949                           
 39950 ;; *************** function _DIO2_ISR_Lora *****************
 39951 ;; Defined at:
 39952 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 39953 ;; Parameters:    Size  Location     Type
 39954 ;;		None
 39955 ;; Auto vars:     Size  Location     Type
 39956 ;;		None
 39957 ;; Return value:  Size  Location     Type
 39958 ;;                  1    wreg      void 
 39959 ;; Registers used:
 39960 ;;		status,2, status,0
 39961 ;; Tracked objects:
 39962 ;;		On entry : F/1
 39963 ;;		On exit  : F/1
 39964 ;;		Unchanged: F/0
 39965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39970 ;;Total ram usage:        0 bytes
 39971 ;; Hardware stack levels used:    1
 39972 ;; This function calls:
 39973 ;;		Nothing
 39974 ;; This function is called by:
 39975 ;;		_DIO2_ISR_Lora_Init
 39976 ;;		_IOCB4_ISR
 39977 ;; This function uses a non-reentrant model
 39978 ;;
 39979                           
 39980                           	psect	text218
 39981  007ACA                     __ptext218:
 39982                           	opt stack 0
 39983  007ACA                     _DIO2_ISR_Lora:
 39984                           	opt stack 15
 39985                           
 39986                           ; BSR set to: 1
 39987                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 39988                           
 39989                           ;incstack = 0
 39990  007ACA  8448               	bsf	_dioStatus,2,c	;volatile
 39991                           
 39992                           ; BSR set to: 1
 39993  007ACC  0012               	return		;funcret
 39994  007ACE                     __end_of_DIO2_ISR_Lora:
 39995                           	opt stack 0
 39996                           tosu	equ	0xFFF
 39997                           tosh	equ	0xFFE
 39998                           tosl	equ	0xFFD
 39999                           pclatu	equ	0xFFB
 40000                           pclath	equ	0xFFA
 40001                           tblptru	equ	0xFF8
 40002                           tblptrh	equ	0xFF7
 40003                           tblptrl	equ	0xFF6
 40004                           tablat	equ	0xFF5
 40005                           prodh	equ	0xFF4
 40006                           prodl	equ	0xFF3
 40007                           intcon	equ	0xFF2
 40008                           intcon2	equ	0xFF1
 40009                           intcon3	equ	0xFF0
 40010                           indf0	equ	0xFEF
 40011                           postinc0	equ	0xFEE
 40012                           plusw0	equ	0xFEB
 40013                           fsr0h	equ	0xFEA
 40014                           fsr0l	equ	0xFE9
 40015                           wreg	equ	0xFE8
 40016                           postinc1	equ	0xFE6
 40017                           postdec1	equ	0xFE5
 40018                           plusw1	equ	0xFE3
 40019                           fsr1h	equ	0xFE2
 40020                           fsr1l	equ	0xFE1
 40021                           indf2	equ	0xFDF
 40022                           postinc2	equ	0xFDE
 40023                           postdec2	equ	0xFDD
 40024                           plusw2	equ	0xFDB
 40025                           fsr2h	equ	0xFDA
 40026                           fsr2l	equ	0xFD9
 40027                           status	equ	0xFD8
 40028                           
 40029 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 40030 ;; Defined at:
 40031 ;;		line 148 in file "mcc_generated_files/pin_manager.c"
 40032 ;; Parameters:    Size  Location     Type
 40033 ;;		None
 40034 ;; Auto vars:     Size  Location     Type
 40035 ;;		None
 40036 ;; Return value:  Size  Location     Type
 40037 ;;                  1    wreg      void 
 40038 ;; Registers used:
 40039 ;;		None
 40040 ;; Tracked objects:
 40041 ;;		On entry : F/1
 40042 ;;		On exit  : F/1
 40043 ;;		Unchanged: F/0
 40044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40048 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40049 ;;Total ram usage:        0 bytes
 40050 ;; Hardware stack levels used:    1
 40051 ;; This function calls:
 40052 ;;		Nothing
 40053 ;; This function is called by:
 40054 ;;		_PIN_MANAGER_Initialize
 40055 ;;		_IOCB4_ISR
 40056 ;; This function uses a non-reentrant model
 40057 ;;
 40058                           
 40059                           	psect	text219
 40060  007AE2                     __ptext219:
 40061                           	opt stack 0
 40062  007AE2                     _IOCB4_DefaultInterruptHandler:
 40063                           	opt stack 15
 40064                           
 40065                           ; BSR set to: 1
 40066                           
 40067                           ; BSR set to: 1
 40068                           ;incstack = 0
 40069  007AE2  0012               	return		;funcret
 40070  007AE4                     __end_of_IOCB4_DefaultInterruptHandler:
 40071                           	opt stack 0
 40072                           tosu	equ	0xFFF
 40073                           tosh	equ	0xFFE
 40074                           tosl	equ	0xFFD
 40075                           pclatu	equ	0xFFB
 40076                           pclath	equ	0xFFA
 40077                           tblptru	equ	0xFF8
 40078                           tblptrh	equ	0xFF7
 40079                           tblptrl	equ	0xFF6
 40080                           tablat	equ	0xFF5
 40081                           prodh	equ	0xFF4
 40082                           prodl	equ	0xFF3
 40083                           intcon	equ	0xFF2
 40084                           intcon2	equ	0xFF1
 40085                           intcon3	equ	0xFF0
 40086                           indf0	equ	0xFEF
 40087                           postinc0	equ	0xFEE
 40088                           plusw0	equ	0xFEB
 40089                           fsr0h	equ	0xFEA
 40090                           fsr0l	equ	0xFE9
 40091                           wreg	equ	0xFE8
 40092                           postinc1	equ	0xFE6
 40093                           postdec1	equ	0xFE5
 40094                           plusw1	equ	0xFE3
 40095                           fsr1h	equ	0xFE2
 40096                           fsr1l	equ	0xFE1
 40097                           indf2	equ	0xFDF
 40098                           postinc2	equ	0xFDE
 40099                           postdec2	equ	0xFDD
 40100                           plusw2	equ	0xFDB
 40101                           fsr2h	equ	0xFDA
 40102                           fsr2l	equ	0xFD9
 40103                           status	equ	0xFD8
 40104                           
 40105 ;; *************** function _INT2_ISR *****************
 40106 ;; Defined at:
 40107 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 40108 ;; Parameters:    Size  Location     Type
 40109 ;;		None
 40110 ;; Auto vars:     Size  Location     Type
 40111 ;;		None
 40112 ;; Return value:  Size  Location     Type
 40113 ;;                  1    wreg      void 
 40114 ;; Registers used:
 40115 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 40116 ;; Tracked objects:
 40117 ;;		On entry : 0/0
 40118 ;;		On exit  : 0/0
 40119 ;;		Unchanged: 0/0
 40120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40121 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40122 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40123 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40124 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40125 ;;Total ram usage:        0 bytes
 40126 ;; Hardware stack levels used:    1
 40127 ;; Hardware stack levels required when called:    2
 40128 ;; This function calls:
 40129 ;;		_INT2_CallBack
 40130 ;; This function is called by:
 40131 ;;		_INTERRUPT_InterruptManager
 40132 ;; This function uses a non-reentrant model
 40133 ;;
 40134                           
 40135                           	psect	text220
 40136  007AA2                     __ptext220:
 40137                           	opt stack 0
 40138  007AA2                     _INT2_ISR:
 40139                           	opt stack 15
 40140                           
 40141                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 40142                           
 40143                           ; BSR set to: 1
 40144                           ;incstack = 0
 40145  007AA2  92F0               	bcf	intcon3,1,c	;volatile
 40146                           
 40147                           ;ext_int.c: 95: INT2_CallBack();
 40148  007AA4  EFBE  F03B         	goto	_INT2_CallBack	;wreg free
 40149  007AA8                     __end_of_INT2_ISR:
 40150                           	opt stack 0
 40151                           tosu	equ	0xFFF
 40152                           tosh	equ	0xFFE
 40153                           tosl	equ	0xFFD
 40154                           pclatu	equ	0xFFB
 40155                           pclath	equ	0xFFA
 40156                           tblptru	equ	0xFF8
 40157                           tblptrh	equ	0xFF7
 40158                           tblptrl	equ	0xFF6
 40159                           tablat	equ	0xFF5
 40160                           prodh	equ	0xFF4
 40161                           prodl	equ	0xFF3
 40162                           intcon	equ	0xFF2
 40163                           intcon2	equ	0xFF1
 40164                           intcon3	equ	0xFF0
 40165                           indf0	equ	0xFEF
 40166                           postinc0	equ	0xFEE
 40167                           plusw0	equ	0xFEB
 40168                           fsr0h	equ	0xFEA
 40169                           fsr0l	equ	0xFE9
 40170                           wreg	equ	0xFE8
 40171                           postinc1	equ	0xFE6
 40172                           postdec1	equ	0xFE5
 40173                           plusw1	equ	0xFE3
 40174                           fsr1h	equ	0xFE2
 40175                           fsr1l	equ	0xFE1
 40176                           indf2	equ	0xFDF
 40177                           postinc2	equ	0xFDE
 40178                           postdec2	equ	0xFDD
 40179                           plusw2	equ	0xFDB
 40180                           fsr2h	equ	0xFDA
 40181                           fsr2l	equ	0xFD9
 40182                           status	equ	0xFD8
 40183                           
 40184 ;; *************** function _INT2_CallBack *****************
 40185 ;; Defined at:
 40186 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 40187 ;; Parameters:    Size  Location     Type
 40188 ;;		None
 40189 ;; Auto vars:     Size  Location     Type
 40190 ;;		None
 40191 ;; Return value:  Size  Location     Type
 40192 ;;                  1    wreg      void 
 40193 ;; Registers used:
 40194 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 40195 ;; Tracked objects:
 40196 ;;		On entry : 0/0
 40197 ;;		On exit  : 0/0
 40198 ;;		Unchanged: 0/0
 40199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40200 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40203 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40204 ;;Total ram usage:        0 bytes
 40205 ;; Hardware stack levels used:    1
 40206 ;; Hardware stack levels required when called:    1
 40207 ;; This function calls:
 40208 ;;		Absolute function
 40209 ;;		_DIO1_ISR_Lora
 40210 ;;		_INT2_DefaultInterruptHandler
 40211 ;; This function is called by:
 40212 ;;		_INT2_ISR
 40213 ;; This function uses a non-reentrant model
 40214 ;;
 40215                           
 40216                           	psect	text221
 40217  00777C                     __ptext221:
 40218                           	opt stack 0
 40219  00777C                     _INT2_CallBack:
 40220                           	opt stack 15
 40221                           
 40222                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 40223                           
 40224                           ;incstack = 0
 40225  00777C  0101               	movlb	1	; () banked
 40226  00777E  51F5               	movf	_INT2_InterruptHandler& (0+255),w,b
 40227  007780  11F6               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 40228  007782  B4D8               	btfsc	status,2,c
 40229  007784  0012               	return	
 40230                           
 40231                           ; BSR set to: 1
 40232                           ;ext_int.c: 105: {
 40233                           ;ext_int.c: 106: INT2_InterruptHandler();
 40234  007786  0005               	push	
 40235  007788  6EFA               	movwf	pclath,c
 40236  00778A  51F5               	movf	_INT2_InterruptHandler& (0+255),w,b
 40237  00778C  6EFD               	movwf	tosl,c
 40238  00778E  51F6               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 40239  007790  6EFE               	movwf	tosh,c
 40240  007792  6AFF               	clrf	tosu,c
 40241  007794  50FA               	movf	pclath,w,c
 40242  007796  0012               	return		;indir
 40243  007798                     __end_of_INT2_CallBack:
 40244                           	opt stack 0
 40245                           tosu	equ	0xFFF
 40246                           tosh	equ	0xFFE
 40247                           tosl	equ	0xFFD
 40248                           pclatu	equ	0xFFB
 40249                           pclath	equ	0xFFA
 40250                           tblptru	equ	0xFF8
 40251                           tblptrh	equ	0xFF7
 40252                           tblptrl	equ	0xFF6
 40253                           tablat	equ	0xFF5
 40254                           prodh	equ	0xFF4
 40255                           prodl	equ	0xFF3
 40256                           intcon	equ	0xFF2
 40257                           intcon2	equ	0xFF1
 40258                           intcon3	equ	0xFF0
 40259                           indf0	equ	0xFEF
 40260                           postinc0	equ	0xFEE
 40261                           plusw0	equ	0xFEB
 40262                           fsr0h	equ	0xFEA
 40263                           fsr0l	equ	0xFE9
 40264                           wreg	equ	0xFE8
 40265                           postinc1	equ	0xFE6
 40266                           postdec1	equ	0xFE5
 40267                           plusw1	equ	0xFE3
 40268                           fsr1h	equ	0xFE2
 40269                           fsr1l	equ	0xFE1
 40270                           indf2	equ	0xFDF
 40271                           postinc2	equ	0xFDE
 40272                           postdec2	equ	0xFDD
 40273                           plusw2	equ	0xFDB
 40274                           fsr2h	equ	0xFDA
 40275                           fsr2l	equ	0xFD9
 40276                           status	equ	0xFD8
 40277                           
 40278 ;; *************** function _DIO1_ISR_Lora *****************
 40279 ;; Defined at:
 40280 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 40281 ;; Parameters:    Size  Location     Type
 40282 ;;		None
 40283 ;; Auto vars:     Size  Location     Type
 40284 ;;		None
 40285 ;; Return value:  Size  Location     Type
 40286 ;;                  1    wreg      void 
 40287 ;; Registers used:
 40288 ;;		status,2, status,0
 40289 ;; Tracked objects:
 40290 ;;		On entry : F/1
 40291 ;;		On exit  : F/1
 40292 ;;		Unchanged: F/0
 40293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40298 ;;Total ram usage:        0 bytes
 40299 ;; Hardware stack levels used:    1
 40300 ;; This function calls:
 40301 ;;		Nothing
 40302 ;; This function is called by:
 40303 ;;		_DIO1_ISR_Lora_Init
 40304 ;;		_INT2_CallBack
 40305 ;; This function uses a non-reentrant model
 40306 ;;
 40307                           
 40308                           	psect	text222
 40309  007ACE                     __ptext222:
 40310                           	opt stack 0
 40311  007ACE                     _DIO1_ISR_Lora:
 40312                           	opt stack 15
 40313                           
 40314                           ; BSR set to: 1
 40315                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 40316                           
 40317                           ;incstack = 0
 40318  007ACE  8248               	bsf	_dioStatus,1,c	;volatile
 40319                           
 40320                           ; BSR set to: 1
 40321  007AD0  0012               	return		;funcret
 40322  007AD2                     __end_of_DIO1_ISR_Lora:
 40323                           	opt stack 0
 40324                           tosu	equ	0xFFF
 40325                           tosh	equ	0xFFE
 40326                           tosl	equ	0xFFD
 40327                           pclatu	equ	0xFFB
 40328                           pclath	equ	0xFFA
 40329                           tblptru	equ	0xFF8
 40330                           tblptrh	equ	0xFF7
 40331                           tblptrl	equ	0xFF6
 40332                           tablat	equ	0xFF5
 40333                           prodh	equ	0xFF4
 40334                           prodl	equ	0xFF3
 40335                           intcon	equ	0xFF2
 40336                           intcon2	equ	0xFF1
 40337                           intcon3	equ	0xFF0
 40338                           indf0	equ	0xFEF
 40339                           postinc0	equ	0xFEE
 40340                           plusw0	equ	0xFEB
 40341                           fsr0h	equ	0xFEA
 40342                           fsr0l	equ	0xFE9
 40343                           wreg	equ	0xFE8
 40344                           postinc1	equ	0xFE6
 40345                           postdec1	equ	0xFE5
 40346                           plusw1	equ	0xFE3
 40347                           fsr1h	equ	0xFE2
 40348                           fsr1l	equ	0xFE1
 40349                           indf2	equ	0xFDF
 40350                           postinc2	equ	0xFDE
 40351                           postdec2	equ	0xFDD
 40352                           plusw2	equ	0xFDB
 40353                           fsr2h	equ	0xFDA
 40354                           fsr2l	equ	0xFD9
 40355                           status	equ	0xFD8
 40356                           
 40357 ;; *************** function _INT2_DefaultInterruptHandler *****************
 40358 ;; Defined at:
 40359 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 40360 ;; Parameters:    Size  Location     Type
 40361 ;;		None
 40362 ;; Auto vars:     Size  Location     Type
 40363 ;;		None
 40364 ;; Return value:  Size  Location     Type
 40365 ;;                  1    wreg      void 
 40366 ;; Registers used:
 40367 ;;		None
 40368 ;; Tracked objects:
 40369 ;;		On entry : F/1
 40370 ;;		On exit  : F/1
 40371 ;;		Unchanged: F/0
 40372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40377 ;;Total ram usage:        0 bytes
 40378 ;; Hardware stack levels used:    1
 40379 ;; This function calls:
 40380 ;;		Nothing
 40381 ;; This function is called by:
 40382 ;;		_EXT_INT_Initialize
 40383 ;;		_INT2_CallBack
 40384 ;; This function uses a non-reentrant model
 40385 ;;
 40386                           
 40387                           	psect	text223
 40388  007AE4                     __ptext223:
 40389                           	opt stack 0
 40390  007AE4                     _INT2_DefaultInterruptHandler:
 40391                           	opt stack 15
 40392                           
 40393                           ; BSR set to: 1
 40394                           
 40395                           ; BSR set to: 1
 40396                           ;incstack = 0
 40397  007AE4  0012               	return		;funcret
 40398  007AE6                     __end_of_INT2_DefaultInterruptHandler:
 40399                           	opt stack 0
 40400                           tosu	equ	0xFFF
 40401                           tosh	equ	0xFFE
 40402                           tosl	equ	0xFFD
 40403                           pclatu	equ	0xFFB
 40404                           pclath	equ	0xFFA
 40405                           tblptru	equ	0xFF8
 40406                           tblptrh	equ	0xFF7
 40407                           tblptrl	equ	0xFF6
 40408                           tablat	equ	0xFF5
 40409                           prodh	equ	0xFF4
 40410                           prodl	equ	0xFF3
 40411                           intcon	equ	0xFF2
 40412                           intcon2	equ	0xFF1
 40413                           intcon3	equ	0xFF0
 40414                           indf0	equ	0xFEF
 40415                           postinc0	equ	0xFEE
 40416                           plusw0	equ	0xFEB
 40417                           fsr0h	equ	0xFEA
 40418                           fsr0l	equ	0xFE9
 40419                           wreg	equ	0xFE8
 40420                           postinc1	equ	0xFE6
 40421                           postdec1	equ	0xFE5
 40422                           plusw1	equ	0xFE3
 40423                           fsr1h	equ	0xFE2
 40424                           fsr1l	equ	0xFE1
 40425                           indf2	equ	0xFDF
 40426                           postinc2	equ	0xFDE
 40427                           postdec2	equ	0xFDD
 40428                           plusw2	equ	0xFDB
 40429                           fsr2h	equ	0xFDA
 40430                           fsr2l	equ	0xFD9
 40431                           status	equ	0xFD8
 40432                           
 40433 ;; *************** function _INT1_ISR *****************
 40434 ;; Defined at:
 40435 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 40436 ;; Parameters:    Size  Location     Type
 40437 ;;		None
 40438 ;; Auto vars:     Size  Location     Type
 40439 ;;		None
 40440 ;; Return value:  Size  Location     Type
 40441 ;;                  1    wreg      void 
 40442 ;; Registers used:
 40443 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 40444 ;; Tracked objects:
 40445 ;;		On entry : 0/0
 40446 ;;		On exit  : 0/0
 40447 ;;		Unchanged: 0/0
 40448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40453 ;;Total ram usage:        0 bytes
 40454 ;; Hardware stack levels used:    1
 40455 ;; Hardware stack levels required when called:    2
 40456 ;; This function calls:
 40457 ;;		_INT1_CallBack
 40458 ;; This function is called by:
 40459 ;;		_INTERRUPT_InterruptManager
 40460 ;; This function uses a non-reentrant model
 40461 ;;
 40462                           
 40463                           	psect	text224
 40464  007AA8                     __ptext224:
 40465                           	opt stack 0
 40466  007AA8                     _INT1_ISR:
 40467                           	opt stack 15
 40468                           
 40469                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 40470                           
 40471                           ; BSR set to: 1
 40472                           ;incstack = 0
 40473  007AA8  90F0               	bcf	intcon3,0,c	;volatile
 40474                           
 40475                           ;ext_int.c: 54: INT1_CallBack();
 40476  007AAA  EFCC  F03B         	goto	_INT1_CallBack	;wreg free
 40477  007AAE                     __end_of_INT1_ISR:
 40478                           	opt stack 0
 40479                           tosu	equ	0xFFF
 40480                           tosh	equ	0xFFE
 40481                           tosl	equ	0xFFD
 40482                           pclatu	equ	0xFFB
 40483                           pclath	equ	0xFFA
 40484                           tblptru	equ	0xFF8
 40485                           tblptrh	equ	0xFF7
 40486                           tblptrl	equ	0xFF6
 40487                           tablat	equ	0xFF5
 40488                           prodh	equ	0xFF4
 40489                           prodl	equ	0xFF3
 40490                           intcon	equ	0xFF2
 40491                           intcon2	equ	0xFF1
 40492                           intcon3	equ	0xFF0
 40493                           indf0	equ	0xFEF
 40494                           postinc0	equ	0xFEE
 40495                           plusw0	equ	0xFEB
 40496                           fsr0h	equ	0xFEA
 40497                           fsr0l	equ	0xFE9
 40498                           wreg	equ	0xFE8
 40499                           postinc1	equ	0xFE6
 40500                           postdec1	equ	0xFE5
 40501                           plusw1	equ	0xFE3
 40502                           fsr1h	equ	0xFE2
 40503                           fsr1l	equ	0xFE1
 40504                           indf2	equ	0xFDF
 40505                           postinc2	equ	0xFDE
 40506                           postdec2	equ	0xFDD
 40507                           plusw2	equ	0xFDB
 40508                           fsr2h	equ	0xFDA
 40509                           fsr2l	equ	0xFD9
 40510                           status	equ	0xFD8
 40511                           
 40512 ;; *************** function _INT1_CallBack *****************
 40513 ;; Defined at:
 40514 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 40515 ;; Parameters:    Size  Location     Type
 40516 ;;		None
 40517 ;; Auto vars:     Size  Location     Type
 40518 ;;		None
 40519 ;; Return value:  Size  Location     Type
 40520 ;;                  1    wreg      void 
 40521 ;; Registers used:
 40522 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 40523 ;; Tracked objects:
 40524 ;;		On entry : 0/0
 40525 ;;		On exit  : 0/0
 40526 ;;		Unchanged: 0/0
 40527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40528 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40530 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40531 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40532 ;;Total ram usage:        0 bytes
 40533 ;; Hardware stack levels used:    1
 40534 ;; Hardware stack levels required when called:    1
 40535 ;; This function calls:
 40536 ;;		Absolute function
 40537 ;;		_DIO0_ISR_Lora
 40538 ;;		_INT1_DefaultInterruptHandler
 40539 ;; This function is called by:
 40540 ;;		_INT1_ISR
 40541 ;; This function uses a non-reentrant model
 40542 ;;
 40543                           
 40544                           	psect	text225
 40545  007798                     __ptext225:
 40546                           	opt stack 0
 40547  007798                     _INT1_CallBack:
 40548                           	opt stack 15
 40549                           
 40550                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 40551                           
 40552                           ;incstack = 0
 40553  007798  0101               	movlb	1	; () banked
 40554  00779A  51F3               	movf	_INT1_InterruptHandler& (0+255),w,b
 40555  00779C  11F4               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40556  00779E  B4D8               	btfsc	status,2,c
 40557  0077A0  0012               	return	
 40558                           
 40559                           ; BSR set to: 1
 40560                           ;ext_int.c: 64: {
 40561                           ;ext_int.c: 65: INT1_InterruptHandler();
 40562  0077A2  0005               	push	
 40563  0077A4  6EFA               	movwf	pclath,c
 40564  0077A6  51F3               	movf	_INT1_InterruptHandler& (0+255),w,b
 40565  0077A8  6EFD               	movwf	tosl,c
 40566  0077AA  51F4               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 40567  0077AC  6EFE               	movwf	tosh,c
 40568  0077AE  6AFF               	clrf	tosu,c
 40569  0077B0  50FA               	movf	pclath,w,c
 40570  0077B2  0012               	return		;indir
 40571  0077B4                     __end_of_INT1_CallBack:
 40572                           	opt stack 0
 40573                           tosu	equ	0xFFF
 40574                           tosh	equ	0xFFE
 40575                           tosl	equ	0xFFD
 40576                           pclatu	equ	0xFFB
 40577                           pclath	equ	0xFFA
 40578                           tblptru	equ	0xFF8
 40579                           tblptrh	equ	0xFF7
 40580                           tblptrl	equ	0xFF6
 40581                           tablat	equ	0xFF5
 40582                           prodh	equ	0xFF4
 40583                           prodl	equ	0xFF3
 40584                           intcon	equ	0xFF2
 40585                           intcon2	equ	0xFF1
 40586                           intcon3	equ	0xFF0
 40587                           indf0	equ	0xFEF
 40588                           postinc0	equ	0xFEE
 40589                           plusw0	equ	0xFEB
 40590                           fsr0h	equ	0xFEA
 40591                           fsr0l	equ	0xFE9
 40592                           wreg	equ	0xFE8
 40593                           postinc1	equ	0xFE6
 40594                           postdec1	equ	0xFE5
 40595                           plusw1	equ	0xFE3
 40596                           fsr1h	equ	0xFE2
 40597                           fsr1l	equ	0xFE1
 40598                           indf2	equ	0xFDF
 40599                           postinc2	equ	0xFDE
 40600                           postdec2	equ	0xFDD
 40601                           plusw2	equ	0xFDB
 40602                           fsr2h	equ	0xFDA
 40603                           fsr2l	equ	0xFD9
 40604                           status	equ	0xFD8
 40605                           
 40606 ;; *************** function _DIO0_ISR_Lora *****************
 40607 ;; Defined at:
 40608 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 40609 ;; Parameters:    Size  Location     Type
 40610 ;;		None
 40611 ;; Auto vars:     Size  Location     Type
 40612 ;;		None
 40613 ;; Return value:  Size  Location     Type
 40614 ;;                  1    wreg      void 
 40615 ;; Registers used:
 40616 ;;		status,2, status,0
 40617 ;; Tracked objects:
 40618 ;;		On entry : F/1
 40619 ;;		On exit  : F/1
 40620 ;;		Unchanged: F/0
 40621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40626 ;;Total ram usage:        0 bytes
 40627 ;; Hardware stack levels used:    1
 40628 ;; This function calls:
 40629 ;;		Nothing
 40630 ;; This function is called by:
 40631 ;;		_DIO0_ISR_Lora_Init
 40632 ;;		_INT1_CallBack
 40633 ;; This function uses a non-reentrant model
 40634 ;;
 40635                           
 40636                           	psect	text226
 40637  007AD2                     __ptext226:
 40638                           	opt stack 0
 40639  007AD2                     _DIO0_ISR_Lora:
 40640                           	opt stack 15
 40641                           
 40642                           ; BSR set to: 1
 40643                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 40644                           
 40645                           ;incstack = 0
 40646  007AD2  8048               	bsf	_dioStatus,0,c	;volatile
 40647                           
 40648                           ; BSR set to: 1
 40649  007AD4  0012               	return		;funcret
 40650  007AD6                     __end_of_DIO0_ISR_Lora:
 40651                           	opt stack 0
 40652                           tosu	equ	0xFFF
 40653                           tosh	equ	0xFFE
 40654                           tosl	equ	0xFFD
 40655                           pclatu	equ	0xFFB
 40656                           pclath	equ	0xFFA
 40657                           tblptru	equ	0xFF8
 40658                           tblptrh	equ	0xFF7
 40659                           tblptrl	equ	0xFF6
 40660                           tablat	equ	0xFF5
 40661                           prodh	equ	0xFF4
 40662                           prodl	equ	0xFF3
 40663                           intcon	equ	0xFF2
 40664                           intcon2	equ	0xFF1
 40665                           intcon3	equ	0xFF0
 40666                           indf0	equ	0xFEF
 40667                           postinc0	equ	0xFEE
 40668                           plusw0	equ	0xFEB
 40669                           fsr0h	equ	0xFEA
 40670                           fsr0l	equ	0xFE9
 40671                           wreg	equ	0xFE8
 40672                           postinc1	equ	0xFE6
 40673                           postdec1	equ	0xFE5
 40674                           plusw1	equ	0xFE3
 40675                           fsr1h	equ	0xFE2
 40676                           fsr1l	equ	0xFE1
 40677                           indf2	equ	0xFDF
 40678                           postinc2	equ	0xFDE
 40679                           postdec2	equ	0xFDD
 40680                           plusw2	equ	0xFDB
 40681                           fsr2h	equ	0xFDA
 40682                           fsr2l	equ	0xFD9
 40683                           status	equ	0xFD8
 40684                           
 40685 ;; *************** function _INT1_DefaultInterruptHandler *****************
 40686 ;; Defined at:
 40687 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 40688 ;; Parameters:    Size  Location     Type
 40689 ;;		None
 40690 ;; Auto vars:     Size  Location     Type
 40691 ;;		None
 40692 ;; Return value:  Size  Location     Type
 40693 ;;                  1    wreg      void 
 40694 ;; Registers used:
 40695 ;;		None
 40696 ;; Tracked objects:
 40697 ;;		On entry : F/1
 40698 ;;		On exit  : F/1
 40699 ;;		Unchanged: F/0
 40700 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40701 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40702 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40703 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40704 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40705 ;;Total ram usage:        0 bytes
 40706 ;; Hardware stack levels used:    1
 40707 ;; This function calls:
 40708 ;;		Nothing
 40709 ;; This function is called by:
 40710 ;;		_EXT_INT_Initialize
 40711 ;;		_INT1_CallBack
 40712 ;; This function uses a non-reentrant model
 40713 ;;
 40714                           
 40715                           	psect	text227
 40716  007AE6                     __ptext227:
 40717                           	opt stack 0
 40718  007AE6                     _INT1_DefaultInterruptHandler:
 40719                           	opt stack 15
 40720                           
 40721                           ; BSR set to: 1
 40722                           
 40723                           ; BSR set to: 1
 40724                           ;incstack = 0
 40725  007AE6  0012               	return		;funcret
 40726  007AE8                     __end_of_INT1_DefaultInterruptHandler:
 40727                           	opt stack 0
 40728                           tosu	equ	0xFFF
 40729                           tosh	equ	0xFFE
 40730                           tosl	equ	0xFFD
 40731                           pclatu	equ	0xFFB
 40732                           pclath	equ	0xFFA
 40733                           tblptru	equ	0xFF8
 40734                           tblptrh	equ	0xFF7
 40735                           tblptrl	equ	0xFF6
 40736                           tablat	equ	0xFF5
 40737                           prodh	equ	0xFF4
 40738                           prodl	equ	0xFF3
 40739                           intcon	equ	0xFF2
 40740                           intcon2	equ	0xFF1
 40741                           intcon3	equ	0xFF0
 40742                           indf0	equ	0xFEF
 40743                           postinc0	equ	0xFEE
 40744                           plusw0	equ	0xFEB
 40745                           fsr0h	equ	0xFEA
 40746                           fsr0l	equ	0xFE9
 40747                           wreg	equ	0xFE8
 40748                           postinc1	equ	0xFE6
 40749                           postdec1	equ	0xFE5
 40750                           plusw1	equ	0xFE3
 40751                           fsr1h	equ	0xFE2
 40752                           fsr1l	equ	0xFE1
 40753                           indf2	equ	0xFDF
 40754                           postinc2	equ	0xFDE
 40755                           postdec2	equ	0xFDD
 40756                           plusw2	equ	0xFDB
 40757                           fsr2h	equ	0xFDA
 40758                           fsr2l	equ	0xFD9
 40759                           status	equ	0xFD8
 40760                           tosu	equ	0xFFF
 40761                           tosh	equ	0xFFE
 40762                           tosl	equ	0xFFD
 40763                           pclatu	equ	0xFFB
 40764                           pclath	equ	0xFFA
 40765                           tblptru	equ	0xFF8
 40766                           tblptrh	equ	0xFF7
 40767                           tblptrl	equ	0xFF6
 40768                           tablat	equ	0xFF5
 40769                           prodh	equ	0xFF4
 40770                           prodl	equ	0xFF3
 40771                           intcon	equ	0xFF2
 40772                           intcon2	equ	0xFF1
 40773                           intcon3	equ	0xFF0
 40774                           indf0	equ	0xFEF
 40775                           postinc0	equ	0xFEE
 40776                           plusw0	equ	0xFEB
 40777                           fsr0h	equ	0xFEA
 40778                           fsr0l	equ	0xFE9
 40779                           wreg	equ	0xFE8
 40780                           postinc1	equ	0xFE6
 40781                           postdec1	equ	0xFE5
 40782                           plusw1	equ	0xFE3
 40783                           fsr1h	equ	0xFE2
 40784                           fsr1l	equ	0xFE1
 40785                           indf2	equ	0xFDF
 40786                           postinc2	equ	0xFDE
 40787                           postdec2	equ	0xFDD
 40788                           plusw2	equ	0xFDB
 40789                           fsr2h	equ	0xFDA
 40790                           fsr2l	equ	0xFD9
 40791                           status	equ	0xFD8
 40792                           
 40793                           	psect	text228
 40794  000000                     __ptext228:
 40795                           	opt stack 0
 40796                           tosu	equ	0xFFF
 40797                           tosh	equ	0xFFE
 40798                           tosl	equ	0xFFD
 40799                           pclatu	equ	0xFFB
 40800                           pclath	equ	0xFFA
 40801                           tblptru	equ	0xFF8
 40802                           tblptrh	equ	0xFF7
 40803                           tblptrl	equ	0xFF6
 40804                           tablat	equ	0xFF5
 40805                           prodh	equ	0xFF4
 40806                           prodl	equ	0xFF3
 40807                           intcon	equ	0xFF2
 40808                           intcon2	equ	0xFF1
 40809                           intcon3	equ	0xFF0
 40810                           indf0	equ	0xFEF
 40811                           postinc0	equ	0xFEE
 40812                           plusw0	equ	0xFEB
 40813                           fsr0h	equ	0xFEA
 40814                           fsr0l	equ	0xFE9
 40815                           wreg	equ	0xFE8
 40816                           postinc1	equ	0xFE6
 40817                           postdec1	equ	0xFE5
 40818                           plusw1	equ	0xFE3
 40819                           fsr1h	equ	0xFE2
 40820                           fsr1l	equ	0xFE1
 40821                           indf2	equ	0xFDF
 40822                           postinc2	equ	0xFDE
 40823                           postdec2	equ	0xFDD
 40824                           plusw2	equ	0xFDB
 40825                           fsr2h	equ	0xFDA
 40826                           fsr2l	equ	0xFD9
 40827                           status	equ	0xFD8
 40828                           
 40829                           	psect	rparam
 40830  0000                     tosu	equ	0xFFF
 40831                           tosh	equ	0xFFE
 40832                           tosl	equ	0xFFD
 40833                           pclatu	equ	0xFFB
 40834                           pclath	equ	0xFFA
 40835                           tblptru	equ	0xFF8
 40836                           tblptrh	equ	0xFF7
 40837                           tblptrl	equ	0xFF6
 40838                           tablat	equ	0xFF5
 40839                           prodh	equ	0xFF4
 40840                           prodl	equ	0xFF3
 40841                           intcon	equ	0xFF2
 40842                           intcon2	equ	0xFF1
 40843                           intcon3	equ	0xFF0
 40844                           indf0	equ	0xFEF
 40845                           postinc0	equ	0xFEE
 40846                           plusw0	equ	0xFEB
 40847                           fsr0h	equ	0xFEA
 40848                           fsr0l	equ	0xFE9
 40849                           wreg	equ	0xFE8
 40850                           postinc1	equ	0xFE6
 40851                           postdec1	equ	0xFE5
 40852                           plusw1	equ	0xFE3
 40853                           fsr1h	equ	0xFE2
 40854                           fsr1l	equ	0xFE1
 40855                           indf2	equ	0xFDF
 40856                           postinc2	equ	0xFDE
 40857                           postdec2	equ	0xFDD
 40858                           plusw2	equ	0xFDB
 40859                           fsr2h	equ	0xFDA
 40860                           fsr2l	equ	0xFD9
 40861                           status	equ	0xFD8
 40862                           
 40863                           	psect	temp
 40864  00004A                     btemp:
 40865                           	opt stack 0
 40866  00004A                     	ds	12
 40867                           tosu	equ	0xFFF
 40868                           tosh	equ	0xFFE
 40869                           tosl	equ	0xFFD
 40870                           pclatu	equ	0xFFB
 40871                           pclath	equ	0xFFA
 40872                           tblptru	equ	0xFF8
 40873                           tblptrh	equ	0xFF7
 40874                           tblptrl	equ	0xFF6
 40875                           tablat	equ	0xFF5
 40876                           prodh	equ	0xFF4
 40877                           prodl	equ	0xFF3
 40878                           intcon	equ	0xFF2
 40879                           intcon2	equ	0xFF1
 40880                           intcon3	equ	0xFF0
 40881                           indf0	equ	0xFEF
 40882                           postinc0	equ	0xFEE
 40883                           plusw0	equ	0xFEB
 40884                           fsr0h	equ	0xFEA
 40885                           fsr0l	equ	0xFE9
 40886                           wreg	equ	0xFE8
 40887                           postinc1	equ	0xFE6
 40888                           postdec1	equ	0xFE5
 40889                           plusw1	equ	0xFE3
 40890                           fsr1h	equ	0xFE2
 40891                           fsr1l	equ	0xFE1
 40892                           indf2	equ	0xFDF
 40893                           postinc2	equ	0xFDE
 40894                           postdec2	equ	0xFDD
 40895                           plusw2	equ	0xFDB
 40896                           fsr2h	equ	0xFDA
 40897                           fsr2l	equ	0xFD9
 40898                           status	equ	0xFD8


Data Sizes:
    Strings     318
    Constant    412
    Data        58
    BSS         1277
    Persistent  12
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     49      83
    BANK0           160    144     147
    BANK1           256    114     253
    BANK2           256      0     245
    BANK3           256     20     180
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1662$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK1[16]), 
		 -> nwkSKey(BANK1[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 54
		 -> STR_12(CODE[41]), STR_11(CODE[54]), STR_10(CODE[28]), STR_9(CODE[13]), 
		 -> STR_8(CODE[18]), STR_7(CODE[29]), STR_6(CODE[21]), STR_5(CODE[32]), 
		 -> STR_4(CODE[28]), STR_3(CODE[29]), STR_2(CODE[30]), STR_1(CODE[23]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncode@masterKey	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(1) Largest target is 16
		 -> AESEncode@key(BANK0[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK3[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 1
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(1) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK1[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK1[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK3[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK3[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1662$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1662$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK3[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S987$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S987$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _LORAWAN_Mainloop->_RADIO_DIO0
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _RxJoinResponse->_printf
    _printf->___lwmod
    _putch->_EUSART1_Write
    _MacExecuteCommands->_ExecuteLinkAdr
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_SwTimerStart
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_SwTimerStart
    _RADIO_WriteConfiguration->_RADIO_WriteFrequency
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->_SwTimerStart
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _readAndSend->_LORAWAN_Send
    _AutomaticReplyCallback->_LORAWAN_Send
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_LORAWAN_Send
    _LORAWAN_Send->_AssemblePacket
    _AssemblePacket->_AESCmac
    _PrepareJoinRequestFrame->_ComputeMic
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0 6601003
                                            143 BANK0      1     1      0
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
                             _printf
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          0     0      0  315588
                  _ADC_GetConversion
                       _LORAWAN_Send
                             _printf
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    5     3      2      22
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2089
                     _ADC_Initialize
                 _EUSART1_Initialize
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     200
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     311
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2     111
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0     989
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     200
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     189
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     200
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     200
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     200
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     589
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     200
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     189
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _EUSART1_Initialize                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     111
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   13228
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 5837361
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2278931
                                            132 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  148230
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  666309
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  492563
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  153169
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9360
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9803
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  312596
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  158181
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9877
                                              9 BANK0      1     1      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36323
                                             29 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  538469
                                             80 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  502115
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26412
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 2953984
                                            139 BANK0      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9747
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  199966
                                            114 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1043509
                                            137 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              5     4      1     389
                                              4 BANK0      5     4      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1510054
                                            137 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  476684
                                             71 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  315972
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1017330
                                            132 BANK0      5     5      0
                                            111 BANK1      3     0      3
                                              0 BANK3     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9221
                                             54 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1   12228
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                        11     9      2   19594
                                             16 BANK0     11     9      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9512
                                             54 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  162837
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0    2970
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0    2970
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              22    16      6    2970
                                             23 BANK0     13     7      6
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      62
                                              5 BANK0      1     1      0
                      _EUSART1_Write
 ---------------------------------------------------------------------------------
 (4) _EUSART1_Write                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     449
                                              4 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   19487
                                             26 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2     265
                                              9 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  5     5      0      62
                                              4 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               7     5      2    4297
                                             16 BANK0      7     5      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     438
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                    8     6      2   10051
                                             16 BANK0      8     6      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     644
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     385
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     385
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     608
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2369
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     842
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                       9     7      2    3295
                                             17 BANK0      9     7      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  3     1      2     271
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2044
                                             14 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      6     1      5    1774
                                              8 BANK0      6     1      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  312596
                                            129 BANK0      3     3      0
                                            107 BANK1      4     0      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  151724
                                            122 BANK0      7     7      0
                                            102 BANK1      5     0      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          12     8      4    2532
                                              4 BANK0     12     8      4
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     424
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   44159
                                             68 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   19076
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          10     6      4   13819
                                             14 BANK0     10     6      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   37765
                                             68 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   17577
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  190414
                                            114 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      50    48      2  173941
                                             64 BANK0     50    48      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             45 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      45
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  157986
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           4     0      4    4851
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15684
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  122779
                                             54 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   14672
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      23
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  248880
                                            135 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      22
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   19473
                                             37 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    4743
                                             25 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   14532
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   14236
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   13293
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  123906
                                             54 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            10     8      2   87685
                                             29 BANK0     10     8      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10303
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15813
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15810
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                              9     9      0  101978
                                            126 BANK0      9     9      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    3534
                                             23 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    2647
                                             16 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    2647
                                              4 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     648
                                             18 BANK0      5     1      4
                            ___lwdiv (ARG)
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   81241
                                            122 BANK0      4     4      0
                                            102 BANK1      5     0      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   67391
                                            108 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   26439
                                             68 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   19957
                                             48 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           38    35      3    5098
                                             10 BANK0     38    35      3
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     5      1    1164
                                              4 BANK0      6     5      1
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  167548
                                             70 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     111
                                             21 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2224
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     5     3      2   26256
                                             16 BANK0      5     3      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0   92735
                                             69 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     156
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   45810
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2224
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15684
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16566
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9716
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     662
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     618
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      44
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          15    13      2    9554
                                             54 BANK0     15    13      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1430
                                             45 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     811
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     546
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     240
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             28 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    16    12      4     102
                                             12 BANK0     16    12      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   16761
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13062
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     111
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     111
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             41 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        0     0      0     547
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             24 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 16    12      4      69
                                              8 COMRAM    16    12      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
                          _IOCB5_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB5_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           ___lwdiv (ARG)
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             ___lwdiv (ARG)
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     ___lwdiv (ARG)
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 ___lwdiv (ARG)
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     ___lwdiv (ARG)
                     _rand (ARG)
                       ___lmul
                   _rand
                     ___lmul
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 ___lwdiv (ARG)
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RxDataDone *
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 ___lwdiv (ARG)
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _rand
                   ___lmul
           _SetJoinFailState *
             _RxJoinResponse *
               _printf
                 ___lwdiv
                 ___lwmod
                   ___lwdiv (ARG)
                   _rand (ARG)
                     ___lmul
                 _putch
                   _EUSART1_Write
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
           _RADIO_GetStatus
           _RxDataDone *
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 ___lwdiv (ARG)
                 _rand (ARG)
                   ___lmul
               _rand
                 ___lmul
       _UpdateJoinSuccessState *
         _RxJoinResponse *
           _printf
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
               _rand (ARG)
                 ___lmul
             _putch
               _EUSART1_Write
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _ADC_Initialize
     _EUSART1_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _SysConfigSleep
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
       _rand (ARG)
         ___lmul
     _putch
       _EUSART1_Write
   _readAndSend
     _ADC_GetConversion
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               ___lwdiv (ARG)
               _rand (ARG)
                 ___lmul
             _rand
               ___lmul
     _printf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
         _rand (ARG)
           ___lmul
       _putch
         _EUSART1_Write

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
     _IOCB5_ISR
       Absolute function(Fake) *
       _IOCB5_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100     14      B4      11       70.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     72      FD       7       98.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     90      93       5       91.9%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     31      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     46C      12        0.0%
DATA                 0      0     68C       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Sep 27 23:40:16 2022

                                        ??_LORAWAN_TxDone 00A2  
                              __end_of_DIO3_ISR_Lora_Init 7ADA  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 002E  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 7878  
                         __size_of_UpdateJoinSuccessState 012C  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 6C7E  
                                   __end_of_AESEncodeLoRa 745C  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00A7  
                                                     l126 6456  
                                                     l192 7920  
                                                     l462 1550  
                                                     l455 14C8  
                                                     l384 53A2  
                                                     l481 180C  
                                                     l449 1500  
                                                     l468 173A  
                                             ?_RADIO_Init 007D  
                                                     l672 7146  
                                                     l594 7300  
                                                     l675 6E64  
                                                     l692 6030  
                                                     l678 6E76  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 67E2  
                   __size_of_SelectChannelForTransmission 0060  
                            _SelectChannelForTransmission 6782  
                                  _ExecuteRxParamSetupReq 42E4  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init 7988  
                                      __size_of_AESEncode 02F8  
                                         _timer1ReloadVal 005E  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 74A8  
                                   _RADIO_SetLoRaSyncWord 7A28  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 1B3C  
                                 __end_of_SwTimersExecute 5B04  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00E7  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 007C  
                            __end_of_FindSmallestDataRate 5C5C  
                     __end_of_RADIO_SetFrequencyHopPeriod 7A28  
                             _RADIO_SetFrequencyHopPeriod 7A1E  
                                              _CheckFlags 67E2  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 7798  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 001C  
                                      __size_of_IOCB5_ISR 001C  
                                                    l1101 3650  
                                                    l1112 348E  
                                                    l1033 1212  
                                                    l1051 2746  
                                                    l1206 4D90  
                                                    l1135 51D0  
                                                    l1240 71B0  
                                                    l2024 6384  
                                                    l1217 4AA0  
                                                    l1081 78DE  
                                                    l1233 68F6  
                                                    l1225 78CA  
                                                    l1129 43BA  
                                                    l1153 3200  
                                                    l2105 0538  
                                                    l1065 283A  
                                                    l2050 59F8  
                                                    l1138 525E  
                                                    l2106 0540  
                                                    l2018 4D04  
                                                    l1148 5292  
                                                    l1252 7874  
                                                    l1405 19F4  
                                                    l1093 6B82  
                                                    l1085 759C  
                                                    l2045 48EE  
                                                    l1246 7658  
                                                    l2126 098A  
                                                    l1281 6980  
                                                    l3114 629A  
                                                    l1266 70E8  
                                                    l3124 6770  
                                                    l2076 00FE  
                                                    l1349 7702  
                                                    l1701 576A  
                                                    l1390 188C  
                                                    l2238 20BA  
                                                    l2262 6472  
                                                    l2247 5BCA  
                                                    l2191 1C42  
                                                    l2088 0252  
                                                    l2186 1BA2  
                                                    l2187 1C48  
                                                    l1299 2708  
                                                    l2196 1C56  
                                                    l2188 1C46  
                   RADIO_WriteConfiguration@symbolTimeout 007D  
                                                    l3167 6D0A  
                                                    l1672 5E3A  
                                                    l3177 6F70  
                                                    l1673 5E82  
                                                    l2529 79BA  
                                                    l2707 44CE  
                                                    l2477 217E  
                                                    l2568 7166  
                                                    l2753 490C  
                                                    l1948 380C  
                                                    l1972 56A0  
                                                    l1981 56B0  
                                                    l1967 5912  
                                                    l1969 5994  
                                                    l1996 4186  
                                                    l9774 78EE  
                                                    STR_1 FFB4  
                                                    STR_2 FF40  
                                                    STR_3 FF7B  
                                                    STR_4 FF98  
                                                    STR_5 FF20  
                                        _RADIO_WritePower 551A  
                                                    STR_6 FFCB  
                                                    STR_7 FF5E  
                                                    STR_8 FFE0  
                                                    STR_9 FFF2  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                     _RADIO_Transmit$1200 00A1  
                                 _PrepareJoinRequestFrame 469E  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 001E  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 777C  
                                           _EUSART1_Write 79B8  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 0072  
                                      _PrepareSessionKeys 613E  
                                                    _loRa 0200  
                                                    _main 442C  
                                                    _rand 6B96  
                          __end_of_UpdateMinMaxChDataRate 5A52  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 01EE  
                                                    btemp 004A  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 004E  
                                           ComputeMic@mic 00DA  
                                           ComputeMic@key 0166  
                               __end_of_LORAWAN_RxTimeout 29BC  
                               __size_of_ConfigureRadioRx 0026  
                               __size_of_ConfigureRadioTx 0048  
                       __size_of_INT2_SetInterruptHandler 000A  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 6C32  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0080  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 5834  
                                   ExecuteLinkAdr@txPower 0076  
                                     __size_of_HALSPISend 000A  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00DA  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 003E  
                              __end_of_RADIO_GetPacketSnr 7A90  
                                            ___param_bank 000010  
                                              _GetRx1Freq 78F6  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 6AFA  
                  SearchAvailableChannel@transmissionType 0079  
                         __size_of_HALResetPinOutputValue 0014  
                                   MacExecuteCommands@ptr 0080  
                                   _RADIO_WriteFSKBitRate 66BE  
                                __size_of_SystemTimerInit 0004  
                                        __end_of_INT1_ISR 7AAE  
                                        __end_of_INT2_ISR 7AA8  
                          __size_of_OSCILLATOR_Initialize 000C  
                                  ExecuteLinkAdr@dataRate 0079  
                           __end_of_OSCILLATOR_Initialize 797C  
                      __size_of_LORAWAN_LinkCheckCallback 0158  
                                                   l11100 59AA  
                                                   l10142 6458  
                                                   l11110 5A42  
                                                   l11112 5A46  
                                                   l12120 5068  
                                                   l12040 2AC0  
                                                   l12200 2180  
                                                   l12122 50B8  
                                                   l13002 2D98  
                                                   l12132 73D6  
                                                   l12300 673C  
                                                   l12302 6740  
                                                   l12038 2AB6  
                                                   l12230 22BE  
                                                   l13030 68D2  
                                                   l12128 73BA  
                                                   l12400 543C  
                                                   l12232 22C8  
                                                   l12224 2292  
                                                   l12216 21D2  
                                                   l13008 2E08  
                                                   l13120 7598  
                                                   l12162 69BC  
                                                   l12306 6762  
                                                   l12226 229C  
                                                   l13202 5262  
                                                   l13210 5278  
                                                   l13050 71AC  
                                         __end_of___abdiv 6AA8  
                                                   l12340 4FC6  
                                                   l12236 22EA  
                                                   l13212 527C  
                                                   l13028 68CC  
                                                   l12334 4F62  
                                                   l12094 6F86  
                                                   l12238 22F4  
                                                   l12190 215A  
                                                   l13206 526C  
                                                   l13118 7590  
                                                   l10750 6A70  
                                                   l12168 69F2  
                                                   l12328 4F12  
                                                   l12280 625A  
                                                   l15000 39B6  
                                                   l12256 23FC  
                                                   l12248 23F2  
                                                   l12176 2134  
                                                   l12512 600A  
                                                   l13216 528E  
                                                   l13152 7106  
                                                   l13064 4D42  
                                                   l10760 6A82  
                                                   l10744 6A66  
                                                   l12338 4FC4  
                                                   l12290 628C  
                                                   l12282 625E  
                                                   l12370 53D6  
                                                   l13314 1ACE  
                                                   l12602 6F66  
                                                   l12442 5532  
                                                   l13410 42D4  
                                                   l13082 4DF4  
                                                   l13074 4DDA  
                                                   l10762 6A86  
                                                   l12620 5F0E  
                                                   l12364 53C4  
                                                   l12372 53E0  
                                                   l12356 53A4  
                                                   l12348 538A  
                                                   l13308 1A96  
                                                   l13252 189E  
                                                   l13260 1912  
                                                   l12460 5566  
                                                   l12700 15DC  
                                                   l12508 5FE6  
                                                   l13420 5824  
                                                   l13404 428E  
                                                   l13500 204C  
                                                   l13092 70BA  
                                                   l13076 4DDE  
                                                   l14132 4578  
                                                   l14116 339C  
                                                   l10756 6A7C  
                                                   l10772 6A9E  
                                                   l12534 73EC  
                                                   l12278 624E  
                                                   l13270 1962  
                                                   l13246 1878  
                                                   l12470 558C  
                                                   l12446 553E  
                                                   l12462 5572  
                                                   l13414 5780  
                                                   l13422 5826  
                                                   l13342 5C22  
                                                   l13334 5BCE  
                                                   l13510 2092  
                                                   l14310 64B0  
                                                   l14118 33A6  
                                                   l14126 77C2  
                                                   l14230 48D0  
                                                   l12384 5404  
                                                   l12368 53CE  
                                                   l15008 39E8  
                                                   l12640 1494  
                                                   l12528 7344  
                                                   l14320 67F8  
                                                   l13424 5830  
                                                   l13344 5C24  
                                                   l13352 5C3E  
                                                   l13360 5C56  
                                                   l12544 4A4E  
                                                   l14144 462A  
                                                   l10776 6AA4  
                                                   l10768 6A96  
                                                   l14224 483A  
                                                   l12538 73FC  
                                                   l12298 6730  
                                                   l12386 5408  
                                                   l13274 1980  
                                                   l13266 1938  
                                                   l13290 19D6  
                                                   l13258 18DA  
                                                   l12474 5598  
                                                   l12466 5580  
                                                   l13602 3040  
                                                   l13186 51D4  
                                                   l13418 57E8  
                                                   l13346 5C2E  
                                                   l13442 1ECC  
                                                   l13434 1E48  
                                                   l13530 211A  
                                                   l12546 4A52  
                                                   l13370 6D4E  
                                                   l14146 462E  
                                                   l14402 00C0  
                                                   l15050 54F8  
                                                   l15034 54AA  
                                                   l15026 5486  
                                                   l14082 56A8  
                                                   l14074 568A  
                                                   l12388 5412  
                                                   l12572 6D68  
                                                   l13284 1998  
                                                   l13276 198E  
                                                   l12660 1546  
                                                   l12636 1450  
                                                   l12644 14D4  
                                                   l13620 30A0  
                                                   l14324 680E  
                                                   l13356 5C4E  
                                                   l13516 20C0  
                                                   l13460 1F60  
                                                   l13452 1F12  
                                                   l13532 2126  
                                                   l14172 56E2  
                                                   l12564 4B04  
                                                   l12556 4AEA  
                                                   l14340 2ECC  
                                                   l14308 64AC  
                                                   l15124 3CBA  
                                                   l15222 65C6  
                                                   l15206 6560  
                                                   l12398 5432  
                                                   l12494 55C6  
                                                   l12750 1722  
                                                   l12742 16F0  
                                                   l12734 16AC  
                                                   l12662 154C  
                                                   l12638 1472  
                                                   l12646 14E6  
                                                   l13622 30B4  
                                                   l13198 525C  
                                                   l13462 1F66  
                                                   l13526 20E4  
                                                   l14190 5712  
                                                   l14182 5704  
                                                   l12558 4AEE  
                                                   l12806 7654  
                                                   l14350 2F38  
                                                   l14342 2EE0  
                                                   l14502 040E  
                                                   l14430 019C  
                                                   l15070 5D30  
                                                   l15038 54C4  
                                                   l14078 5698  
                                                   l15310 5902  
                                                   l12576 6DA0  
                                                   l12488 55BE  
                                                   l12744 16FC  
                                                   l12656 153A  
                                                   l12648 150A  
                                                   l12752 1744  
                                                   l13632 30D4  
                                                   l13704 67DC  
                                                   l14328 6824  
                                                   l14280 62F6  
                                                   l14272 62E2  
                                                   l12912 5B5C  
                                                   l13472 1FAC  
                                                   l13528 2118  
                                                   l13456 1F38  
                                                   l14176 56F8  
                                                   l14168 56D0  
                                                   l13720 6B8C  
                                                   l12832 695E  
                                                   l14352 2F4E  
                                                   l14344 2EF6  
                                                   l14336 2E1C  
                                                   l13560 4956  
                                                   l13544 4930  
                                                   l13536 48FE  
                                                   l14504 0426  
                                                   l14408 0100  
                                                   l15048 54F4  
                                                   l13298 19F8  
                                                   l12594 6F48  
                                                   l12682 1596  
                                                   l13626 30C4  
                                                   l12826 5E18  
                                                   l15146 3B28  
                                                   l12914 5B62  
                                                   l13386 41D8  
                                                   l13378 41A0  
                                                   l13482 1FEA  
                                                   l13458 1F4E  
                                                   l14194 571E  
                                                   l12850 69A2  
                                                   l13810 346E  
                                                   l14354 2F64  
                                                   l14346 2F0C  
                                                   l13554 4952  
                                                   l14602 06AC  
                                                   l14522 044C  
                                                   l14426 018C  
                                                   l15090 5D7E  
                                                   l15074 5D4A  
                                                   l15314 5914  
                                                   l15252 3856  
                                                   l15244 37FC  
                                                   l12596 6F50  
                                                   l12772 17E2  
                                                   l12764 17B6  
                                                   l12692 15C0  
                                                   l13660 3176  
                                                   l13636 30EA  
                                                   l13396 4242  
                                                   l13492 2022  
                                                   l13476 1FD2  
                                                   l12844 6990  
                                                   l12836 696C  
                                                   l14356 2F7A  
                                                   l14348 2F22  
                                                   l14364 2F8C  
                                                   l14372 2FD8  
                                                   l12932 6CDA  
                                                   l13572 4992  
                                                   l13580 49EC  
                                                   l14452 0238  
                                                   l15500 7068  
                                                   l15340 4076  
                                                   l15332 404E  
                                                   l15404 4D00  
                                                   l15238 37D0  
                                                   l15246 3800  
                                                   l12598 6F54  
                                                   l14286 6308  
                                                   l12918 5B82  
                                                   l12846 6998  
                                                   l12838 6974  
                                                   l13830 356A  
                                                   l13822 3506  
                                                   l14366 2FBA  
                                                   l12934 6CE2  
                                                   l13574 4998  
                                                   l14702 0992  
                                                   l14630 0736  
                                                   l14542 0486  
                                                   l14534 0460  
                                                   l14470 02B2  
                                                   l15094 5D82  
                                                   l15158 756C  
                                                   l15414 6354  
                                                   l12872 4B7C  
                                                   l12864 4B64  
                                                   l12768 17C6  
                                                   l12960 2C22  
                                                   l13496 2034  
                                                   l13904 1B9A  
                                                   l13752 3630  
                                                   l13744 3600  
                                                   l13824 3510  
                                                   l13832 356E  
                                                   l13808 345A  
                                                   l14376 2FF6  
                                                   l12944 6D00  
                                                   l12936 6CE6  
                                                   l13568 4982  
                                                   l14640 078A  
                                                   l14616 0730  
                                                   l14632 074E  
                                                   l14464 02A4  
                                                   l15088 5D78  
                                                   l15512 6DD6  
                                                   l12890 4BDE  
                                                   l12882 4BC4  
                                                   l12778 1802  
                                                   l13666 31E6  
                                                   l13594 3028  
                                                   l12970 2C4C  
                                                   l13930 1C0C  
                                                   l13578 49E4  
                                                   l14650 0790  
                                                   l14538 0478  
                                                   l14490 03F2  
                                                   l14570 057C  
                                                   l15354 40F0  
                                                   l15338 406A  
                                                   l15700 46D2  
                                                   l13588 3012  
                                                   l12972 2C58  
                                                   l13772 36D2  
                                                   l13828 3560  
                                                   l13852 4376  
                                                   l14740 0A32  
                                                   l14652 07A2  
                                                   l14820 27EE  
                                                   l15508 6DD0  
                                                   l15348 409A  
                                                   l15276 2514  
                                                   l15268 245A  
                                                   l15630 3F98  
                                                   l12878 4BA0  
                                                   l12990 2CE0  
                                                   l12966 2C38  
                                                   l14902 1076  
                                                   l13950 1C70  
                                                   l13774 36E6  
                                                   l13870 4422  
                                                   l14742 0A38  
                                                   l14726 09F6  
                                                   l14662 07A8  
                                                   l14574 05A8  
                                                   l14582 05B4  
                                                   l14814 27C2  
                                                   l15462 661E  
                                                   l15278 252E  
                                                   l15286 25C6  
                                                   l16502 44EE  
                                                   l15712 4710  
                                                   l12976 2C80  
                                                   l14912 1142  
                                                   l13952 1C7E  
                                                   l13776 36EA  
                                                   l13856 4398  
                                                   l14736 0A08  
                                                   l14744 0A3E  
                                                   l14832 282C  
                                                   l15472 6644  
                                                   l15384 4CA2  
                                                   l12986 2CC8  
                                                   l12978 2CA8  
                                                   l14922 11FA  
                                                   l14930 1274  
                                                   l14906 1140  
                                                   l13882 6C58  
                                                   l13778 3720  
                                                   l14762 0A8E  
                                                   l14754 0A7E  
                                                   l14746 0A44  
                                                   l14674 0812  
                                                   l14666 07B6  
                                                   l14850 28F0  
                                                   l14818 27D0  
                                                   l15466 6624  
                                                   l15482 6654  
                                                   l15394 4CC6  
                                                   l15298 266A  
                                                   l16354 5A5A  
                                                   l15548 60EE  
                                                   l12996 2D4A  
                                                   l13948 1C68  
                                                   l13884 6C78  
                                                   l14692 08F4  
                                                   l14676 081C  
                                                   l14780 0ABA  
                                                   l14852 28F4  
                                                   l15468 6636  
                                                   l15492 7050  
                                                   l15388 4CA8  
                                                   l16364 5AF4  
                                                   l15750 6856  
                                                   l14942 12D0  
                                                   l13966 1CD6  
                                                   l14838 283E  
                                                   l14862 2992  
                                                   l15478 664E  
                                                   l16366 5AF6  
                                  __end_of_SysConfigSleep 74CC  
                                                   l15568 3EE8  
                                                   l15752 685A  
                                                   l13984 1DAA  
                                                   l14856 2964  
                                                   l15496 7056  
                                                   l16368 5AFA  
                                                   l14954 1354  
                                                   l13978 1D54  
                                                   l14786 0AF4  
                                                   l16490 44C8  
                                                   l14948 133E  
                                                   l14892 0E6E  
                                                   l14884 0D68  
                                                   l14958 137E  
                                                   l14894 0FA2  
                                                   l14798 2738  
                                                   l16488 44C4  
                                                   l14998 39A0  
                                                   ?_main 0001  
                                                   ?_rand 0070  
                                                   STR_10 FF42  
                                                   STR_11 FEC1  
                                                   STR_12 FEF7  
                                              _FillSubKey 6D5E  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer 7AAE  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler 79E2  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 62AC  
                                         RADIO_Transmit@i 00A6  
                                                   _IDLEN 007E9F  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 6782  
                                                   u14005 2DAA  
                                                   u15000 3144  
                                       ??_EnableChannels1 006D  
                                                   u15015 3166  
                                                   u12720 6F96  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   u15025 3188  
                                                   _LATD1 007C61  
                                    RxJoinResponse@status 0001  
                                                   _LATD3 007C63  
                                                   _LATD4 007C64  
                                                   u14405 185C  
                                                   u12760 69E6  
                                                   u13480 14FA  
                       __end_of_AckRetransmissionCallback 4D0A  
                  SearchAvailableChannel@randomNumberCopy 0080  
                                                   u13811 4B1A  
                                                   u12940 61CA  
                                                   u15084 6B72  
                                                   u13485 14F0  
                                                   u15085 6B6C  
                                                   u12767 69DC  
                                                   u17200 1000  
                                                   u16048 6498  
                                                   u13585 15F4  
                                                   u17210 1104  
                                                   u14730 1ECA  
                                                   u17300 12A0  
                                                   u16420 04C4  
                                                   u17205 0FF6  
                                                   u16190 016A  
                                                   u17215 10FA  
                                                   u17135 0B7C  
                                                   u16271 028E  
                                                   u18040 4C9C  
                                                   u17145 0BF6  
                                                   u17065 290E  
                                                   u16610 0854  
                                                   u16450 05A4  
                                                   u17315 12C0  
                                                   u17155 0D9C  
                                                   u13980 2D66  
                                                   u16348 040C  
                                                   u18108 4CEC  
                                                   u13965 2CFE  
                                                   u17325 12E2  
                                                   u17165 0E16  
                                                   u15725 4650  
                                                   u17190 0FE2  
                                                   u16470 06A6  
                                                   u17510 3C2E  
                                          __CFG_DEBUG$OFF 000000  
                                                   u16528 071C  
                                                   u16448 0568  
                                                   u17520 3C44  
                                                   u15568 5676  
                                                   u15905 484C  
                                                   u17530 3D40  
                                                   u13995 2D88  
                                                   u18148 6370  
                                                   u18068 4CC4  
                                                   u17525 3C3A  
                                                   u18245 6602  
                                                   u17710 3824  
                                                   u17535 3D36  
                                                   u17560 3A9C  
                                                   u15928 48DC  
                                                   u15880 47F8  
                                                   u15865 63A6  
                                                   u17570 3AB2  
                                                   u17810 261A  
                                         __end_of___lwdiv 6D14  
                                                   u17580 3BAE  
                                                   u16748 0A6A  
                                                   u17725 3846  
                                                   u16678 09E2  
                                                   u17735 3868  
                                                   u17575 3AA8  
                                                   u16935 2776  
                                                   u15895 482A  
                                                   u17585 3BA4  
                                                   u17825 265A  
                                                   u17835 2684  
                                                   u17940 40AE  
                                                   u17955 40E0  
                                                   u17965 4102  
                                                   u19598 5AE2  
                                         __end_of___lwmod 6F7A  
                                                   u19887 451A  
                                                   u19897 73C0  
                                                   i2l242 6CC8  
                                           ?_RADIO_RxDone 0001  
                             __size_of_RADIO_ReceiveStart 0200  
                     __size_of_LORAWAN_SetChannelIdStatus 0038  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 0028  
                                              _LoRaWakeUp 7A44  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 0068  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse 7848  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR 755C  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00AB  
                             __size_of_RADIO_SetBandwidth 0008  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 0042  
                                                   __rcon 0046  
                                 __end_of_PIN_MANAGER_IOC 7938  
                            ??_IncludeMacCommandsResponse 0068  
                                         __end_of_dpowers FE2F  
                           __end_of_RADIO_WatchdogTimeout 6E7A  
                                                   _count 01D1  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 0014  
                                                   _randx 0056  
                          LORAWAN_RxDone@frmPayloadLength 03B1  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand 7962  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 03AF  
                                                   _putch 79F6  
                                  _UpdateJoinSuccessState 47CC  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler 79EC  
                                          ?_EUSART1_Write 0001  
                                              _ComputeMic 6A02  
                                 __end_of_TMR1_Initialize 7338  
                                  UpdateCfList@joinAccept 0070  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 0008  
                          __size_of_UpdateChannelIdStatus 0106  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate 7A5C  
                            __size_of_RADIO_FSKPacketSent 0192  
                           __end_of_UpdateChannelIdStatus 4B10  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 2E10  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 0079  
                                     __size_of_RADIO_DIO0 0064  
                                     __size_of_RADIO_DIO1 003A  
                                     __size_of_RADIO_DIO2 0048  
                                     __size_of_RADIO_DIO3 0018  
                                     __size_of_RADIO_DIO4 0018  
                                     __size_of_RADIO_DIO5 0018  
                      PrepareJoinRequestFrame@bufferIndex 00E5  
                                         _TMR1_WriteTimer 76F0  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 03A0  
                                __size_of_RADIO_WriteMode 00D8  
                                       __end_of_AESEncode 242A  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0196  
                        __end_of_RADIO_WriteConfiguration 1820  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 5C5C  
                            __size_ofi2_SwTimersInterrupt 00EC  
                                        LORAWAN_Send@port 016B  
                             __size_of_DIO1_ISR_Lora_Init 000C  
                                     ?_MacExecuteCommands 007A  
                                       _SPI2_Exchange8bit 7918  
                              __end_of_EUSART1_Initialize 788E  
                                            __end_of_main 456A  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 6BE4  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 613E  
                                        _SetJoinFailState 74F0  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress 77CE  
                                    _ExecuteRxTimingSetup 7514  
                                       __end_of_IOCB4_ISR 777C  
                                       __end_of_IOCB5_ISR 7760  
                               __size_of_UpdateDLSettings 001A  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 0014  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00CE  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower 7A64  
                                               ??_AESCmac 00D3  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 007F  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00EF  
                                                  ??_rand 0072  
                                          ??_RADIO_RxDone 00E9  
                                          ??_RADIO_TxDone 00D2  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse 7860  
                       __end_of_LORAWAN_LinkCheckCallback 4190  
                          __end_of_SetReceptionNotOkState 64C4  
                             __end_of_UpdateReceiveDelays 6D5E  
                         __end_of_AssembleEncryptionBlock 5BB6  
                                __size_of_SPI2_Initialize 000C  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 0096  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0026  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 6F7A  
                                              _RxDataDone 7ADC  
                                          _EnableChannels 78A4  
                                      __size_of_LoRaSleep 001E  
                               ??_PrepareJoinRequestFrame 00DE  
                                          _HALSPICSAssert 7ABE  
                                    ??_MacExecuteCommands 007D  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00A0  
                                              _ExtractMic 6E7A  
                         __size_of_SearchAvailableChannel 00E0  
                                                  _ADCON0 000FC2  
                                                  _ADCON1 000FC1  
                                                  _ADCON2 000FC0  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue 78E2  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0075  
                  __end_of_LORAWAN_ReceiveWindow1Callback 599E  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00B4  
                          _LORAWAN_ReceiveWindow1Callback 58EA  
                                _RADIO_FSKPacketSent$1219 00DA  
                                                  _ANSELA 000F38  
                                                  ?_putch 0001  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 757E  
                          ?_IOCB5_DefaultInterruptHandler 0001  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 0095  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 3578  
                  __end_of_LORAWAN_ReceiveWindow2Callback 56B4  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00CC  
                          _LORAWAN_ReceiveWindow2Callback 55E8  
                                                  i2l1349 773A  
                                                  i2l2450 0054  
                                                  i2l2454 005E  
                                                  i2l2446 0038  
                                                  i2l2448 0044  
                           __size_of_RADIO_SetFSKSyncWord 002C  
                                                  _RCSTA1 000FAB  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                                                  _SPBRG1 000FAF  
                        __size_of_ValidateChannelMaskCntl 0018  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 0066  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00A6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 016B  
                         __size_of_AutomaticReplyCallback 001E  
                                                  _TXREG1 000FAD  
                              __size_of_LORAWAN_RxTimeout 02AA  
                                                  _TXSTA1 000FAC  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init 79AC  
                                __size_ofi2_TMR_SwapTimer 003E  
                                       ExecuteLinkAdr@ptr 0071  
                           __size_of_RADIO_WriteFrequency 00DC  
                                                  _STable FD25  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00C5  
                             __size_of_ComputeSessionKeys 007E  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit 7928  
                                     LORAWAN_TxDone@found 00C4  
                                         _CheckMcastFlags 62AC  
                                     LORAWAN_TxDone@minim 00CD  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random 75A0  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00C9  
                                              _TimeToSend 0177  
                      SearchAvailableChannel@randomNumber 0083  
                    __end_of_TMR1_DefaultInterruptHandler 7AE0  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler 7ADE  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 72DE  
                                               ??___abdiv 0065  
                                                  ___lmul 5F3A  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer 7AB2  
                                   ?_UpdateJoinInProgress 0001  
                             ?_LORAWAN_LinkCheckConfigure 0096  
                                   ?_ExecuteRxTimingSetup 0069  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 5BB6  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwdiv 0068  
                                               ??___lwmod 0076  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 009E  
                               ExecuteRxParamSetupReq@ptr 0070  
                                  __size_of_LORAWAN_Reset 015E  
                                                  _memcpy 69AA  
                                                  _memset 73E2  
                                                  clear_0 5CA4  
                                                  clear_1 5CB6  
                                                  clear_2 5CC2  
                                                  clear_3 5CCE  
                                                  clear_4 5CDA  
                                                  clear_5 5CEE  
                                 SwTimerIsRunning@timerId 0064  
                                                  _printf 48F8  
                             __size_of_DIO5_ISR_Lora_Init 0006  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 0162  
                                  __end_of_EnableChannels 78BA  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler 7AE6  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler 7AE4  
                                            __pdataCOMRAM 0056  
                                  __end_of_HALSPICSAssert 7AC2  
                       __size_of_RADIO_SetSpreadingFactor 0008  
                            __size_of_ValidateChannelMask 0038  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                       ?_SwTimerReadValue 008D  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FD24  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0075  
                                ADC_GetConversion@channel 0068  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0091  
                                         _UpdateDataRange 4D0A  
                                         ??_EUSART1_Write 0064  
                                  __end_of_ExecuteLinkAdr 372A  
                                      ??_ExecuteDutyCycle 0066  
               IOCB5_SetInterruptHandler@InterruptHandler 0064  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 70DE  
                              _LORAWAN_SetChannelIdStatus 70A6  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 008D  
                                           AESEncode@aux2 008C  
                                           AESEncode@aux3 008E  
                                 __end_of_TMR1_WriteTimer 770C  
                                   __end_of_SwTimerCreate 645C  
                          ??_SelectChannelForTransmission 0085  
                                             ?_ComputeMic 0166  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 7728  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00B0  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize 74CC  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0102  
                                          ??_LORAWAN_Init 00AA  
                                          ??_LORAWAN_Join 00E7  
                                          ??_LORAWAN_Send 00E1  
                          __size_of_RADIO_FSKPayloadReady 009E  
                                              __accesstop 0060  
                                 __end_of__initialization 5CF4  
                           __end_of_RADIO_FSKPayloadReady 5D98  
                                          _RADIO_Transmit 3000  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 016F  
                                  RADIO_ReadRandom@retVal 0072  
                                        _ConfigureRadioRx 745C  
                                    __size_of_RADIO_Reset 0034  
                                        _ConfigureRadioTx 6DF0  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 03A9  
                                          _maxPayloadSize FE2F  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                               ExecuteLinkAdr@channelMask 0074  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend 7A3C  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 7620  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 51B6  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 71E8  
                                     ??_SYSTEM_Initialize 0066  
                              __end_of_DIO4_ISR_Lora_Init 7AD8  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 005E  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 13A8  
                                    __size_of_readAndSend 004E  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FE5D  
                               __size_of_LORAWAN_Mainloop 003C  
                                        ??_EncKeySchedule 0065  
                   __end_of_IOCB4_DefaultInterruptHandler 7AE4  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler 7AE2  
                                __end_of_RADIO_WritePower 55E8  
                                 ?_ExecuteRxParamSetupReq 0070  
                                           __end_of_srand 7970  
                                           __end_of_putch 7A00  
                                       LORAWAN_RxDone@hdr 03B2  
                                            ??_RADIO_DIO0 00EB  
                                            ??_RADIO_DIO1 00B0  
                                            ??_RADIO_DIO2 007D  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 6590  
                                         _UpdateFrequency 706C  
                                  _AutomaticReplyCallback 7620  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 03A1  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 002E  
                                         _UpdateDutyCycle 721A  
                                         ?_EnableChannels 006E  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 75A0  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init 7AD8  
                            __end_of_HALResetPinMakeInput 7ACA  
                                 __size_of_TMR1_ReadTimer 001E  
                        __end_of_INT2_SetInterruptHandler 79EC  
                                        RADIO_DIO0@opMode 00EE  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0064  
                      __end_of_IncludeMacCommandsResponse 2132  
                              _IncludeMacCommandsResponse 1E3A  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 0066  
                                UpdateCfList@bufferLength 0074  
                                   LORAWAN_Send@confirmed 00E3  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0071  
                                        _ValidateDataRate 78CE  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize 74F0  
                      __size_of_RADIO_SetChannelFrequency 0082  
                                                 ??_srand 0077  
                                                 ??_putch 0065  
                                  __end_of_RADIO_Transmit 31EE  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 3EDA  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00F0  
                                              __pbssBANK1 0172  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 76F0  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 631E  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FE37  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 008C  
                                    _RADIO_SetOutputPower 7A5C  
                                              __pnvCOMRAM 005E  
                                    __end_of_RADIO_SetCRC 7A1E  
                                  __size_of_DIO0_ISR_Lora 0004  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 551A  
                              __end_of_RADIO_RxFSKTimeout 714C  
                                    __end_of_RADIO_TxDone 3D78  
                                     __size_of_FillSubKey 004A  
                                      __end_of_RADIO_DIO0 665A  
                                      __end_of_RADIO_DIO1 706C  
                                      __end_of_RADIO_DIO2 6DF0  
                                      __end_of_RADIO_DIO3 7848  
                                      __end_of_RADIO_DIO4 7830  
                                      __end_of_RADIO_DIO5 7818  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0032  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0010  
                                      __end_of_RADIO_Init 3A5C  
                       __size_of_LORAWAN_SetDeviceAddress 0018  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00A0  
                                                 ?_Random 0077  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0004  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer 76B6  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 6952  
                                __size_of_HALDIO5PinValue 0006  
                            __size_of_RADIO_RegisterWrite 001E  
                                     __size_of_LoRaWakeUp 0008  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 00B2  
                                  ??_ExecuteRxTimingSetup 006B  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 0085  
                                                 ?___lmul 0064  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 442C  
                                      ??_CountfOptsLength 0064  
                                  __size_of_DIO2_ISR_Lora 0004  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00B8  
                                      EncryptFRMPayload@j 00B9  
                                      EncryptFRMPayload@k 00B7  
                                              ??_TMR1_ISR 002A  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings 77B4  
                                        _ValidateRxOffset 78BA  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 006C  
                                       _TMR_ISR_Lora_Init 797C  
                      __size_of_IOCB5_SetInterruptHandler 000A  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 0054  
                                  RADIO_Transmit@regValue 00A5  
                            __size_of_RADIO_SetModulation 0008  
                                     _RADIO_FSKPacketSent 3A5C  
                                                 _AESCmac 1820  
                              ?_IOCB5_SetInterruptHandler 0064  
                                                 ?_printf 0077  
                                  ComputeMic@bufferLength 016A  
                                 __size_of_ADC_Initialize 0010  
                                 __end_of_UpdateDataRange 4E00  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l10120 4EDE  
                                                 i2l10118 4E8C  
                                                 i2l10800 50EA  
                                                 i2l10810 519C  
                                                 i2l10812 519E  
                                                 i2l10806 513A  
                                                 i2l10782 6FC4  
                                    EncryptFRMPayload@dir 00A7  
                                      _RADIO_GetPacketSnr 7A8A  
                                    EncryptFRMPayload@key 00AC  
                                   __end_of_UpdateTxPower 7A54  
                                     _RADIO_SetIQInverted 7A0A  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 008E  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 00F0  
                                                 _SPBRGH1 000FB0  
                                     i2_SwTimersInterrupt 50CA  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FE56  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 7514  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 0096  
                                 _ValidateChannelMaskCntl 7860  
                                         ___abdiv@counter 0065  
                                     StartReTxTimer@minim 009A  
                              AssemblePacket@bufferLength 0169  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 6042  
                             PrepareJoinRequestFrame@iCtr 00E6  
                               _IOCB4_SetInterruptHandler 79D8  
                       __end_of_SetCallbackSoftwareTimers 58EA  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 4C12  
                             PrepareJoinRequestFrame@mhdr 00E4  
                                  __size_of_AESEncodeLoRa 0028  
                       __size_of_INT0_SetInterruptHandler 0002  
                           __size_of_LORAWAN_PlatformInit 0020  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 0036  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00CC  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FE64  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00E0  
                                  _InitDefault868Channels 652A  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 016E  
                                   _StopAllSoftwareTimers 6BE4  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0019  
                                 __end_of_UpdateFrequency 70A6  
                                     AssemblePacket@fCtrl 00DE  
                                                 ___abdiv 6A56  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 0002  
                                              AESEncode@i 008F  
                                               _AESEncode 2132  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init 7988  
                                         __size_of___lmul 0086  
                             __size_of_DIO2_ISR_Lora_Init 000C  
                                 __end_of_UpdateDutyCycle 724C  
                                                 ___lldiv 6236  
                                     __size_of_ExtractMic 0042  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 6720  
                                                 ___lwdiv 6CCA  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 6F3C  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                    ValidateChannelMask@i 0066  
                                                 __pcinit 5C5C  
                      __size_of_LORAWAN_GetMaxPayloadSize 004C  
                                                 _appSKey 01D3  
                                         __size_of_memcpy 0058  
                              __end_of_RADIO_ReceiveStart 2E10  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 002A  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00B1  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 442C  
                                                 __ptext1 6AFA  
                                                 __ptext2 714C  
                                                 __ptext3 74A8  
                                                 __ptext4 74CC  
                                                 __ptext5 730C  
                                                 __ptext6 7AAE  
                                                 __ptext7 68FA  
                                                 __ptext8 79C4  
                                                 __ptext9 7970  
                                    __end_of_LORAWAN_Init 689E  
                                    __end_of_LORAWAN_Join 5EB2  
                                    __end_of_LORAWAN_Send 5778  
                                         __size_of_printf 0112  
                                           _DIO0_ISR_Lora 7AD2  
                          ??_TMR1_DefaultInterruptHandler 0001  
                       __end_of_IOCB5_SetInterruptHandler 79CE  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 3D78  
                                               _IOCB4_ISR 7760  
                              ExecuteNewChannel@frequency 0073  
                                               _IOCB5_ISR 7744  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 000E  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 0086  
                                                 _dpowers FE25  
                                 __size_of_LORAWAN_RxDone 0A90  
                                   _OSCILLATOR_Initialize 7970  
                          __end_of_UpdateJoinSuccessState 48F8  
                                 __size_of_LORAWAN_TxDone 0890  
                              __end_of_RADIO_SetBandwidth 7A7C  
                                         _RADIO_GetStatus 7A90  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FE5D  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora 7ACE  
                                      _EUSART1_Initialize 7878  
                                             _SwTimerStop 76D4  
                                                 _payload 01BF  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 01E3  
                             IncludeMacCommandsResponse@i 006E  
                                           ?_UpdateCfList 0070  
                                       _ExecuteNewChannel 33B6  
                             __size_of_PrepareSessionKeys 007C  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 00EC  
                                           _DIO2_ISR_Lora 7ACA  
                              __size_of_SYSTEM_Initialize 0024  
                    __end_of_LORAWAN_SetNetworkSessionKey 738E  
                   __size_of_LORAWAN_SetNetworkSessionKey 002A  
                            _LORAWAN_SetNetworkSessionKey 7364  
                                      ?_ExecuteNewChannel 0070  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 0168  
                                    end_of_initialization 5CF4  
                                 _CreateAllSoftwareTimers 6AA8  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler 79E2  
                                   ??_RADIO_FSKPacketSent 00D2  
                                     ?_EUSART1_Initialize 0001  
                                          _GenerateSubkey 4B10  
                                   _RADIO_WatchdogTimeout 6E38  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FE37  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 69AA  
                                        __CFG_BOREN$NOSLP 000000  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 4038  
                                          ??_SwTimerStart 008D  
                                               i2u1115_40 6FD4  
                                     ??_ExecuteNewChannel 0072  
                                   _UpdateCurrentDataRate 7A54  
                                   _UpdateChannelIdStatus 4A0A  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init 79A0  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 70DE  
                                              _ticksAdded 003A  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                                               i2u1967_40 7552  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 001D  
                                ExecuteLinkAdr@redundancy 0077  
                                       GenerateSubkey@key 00A4  
                                        _LORAWAN_GetState 7A7C  
                                    _HALResetPinMakeInput 7AC6  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00A8  
                              LORAWAN_RxDone@bufferLength 0171  
                        __end_of_RADIO_SetSpreadingFactor 7A6C  
                                                 printf@c 0083  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 printf@f 0077  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                         ??_IOCB5_DefaultInterruptHandler 0001  
                                         _SystemTimerInit 7AB2  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0084  
                                        _LORAWAN_Mainloop 6FF6  
                            __end_of_RADIO_SetFSKSyncWord 7364  
                                      LORAWAN_Join@result 00E8  
                                      __end_of_CheckFlags 6840  
                                    ??_EUSART1_Initialize 0064  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 0082  
                                  __end_of_EncodeShiftRow 3EDA  
                                      _DIO0_ISR_Lora_Init 79A0  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                               _PORTAbits 000F80  
                                   _INT1_InterruptHandler 01F3  
                                               _PORTBbits 000F81  
                                            ??_FillSubKey 0069  
                                        RxDataDone@status 0067  
                            SwTimersInterrupt@timeElapsed 0084  
                                           _AESEncodeLoRa 7434  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 5372  
                              __end_of_RADIO_RegisterRead 74A8  
                       __end_of_LORAWAN_GetMaxPayloadSize 6C7E  
                          __end_of_HALResetPinOutputValue 78F6  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 7482  
                                __end_of_ConfigureRadioTx 6E38  
                                              ?_IOCB5_ISR 0001  
                                         _RADIO_RxTimeout 740C  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 3578  
                                        EnableChannels1@i 006D  
                                 __size_of_AssemblePacket 02FE  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 6EBC  
                                          _TMR1_ReadTimer 7698  
                                          ??_UpdateCfList 0072  
                                              _txPower868 FE64  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                         ??_LORAWAN_Reset 00A5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 002A  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                             __size_of_MacExecuteCommands 01F0  
                                    ExecuteNewChannel@ptr 0070  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 4C12  
                                           RADIO_RxDone@i 00EA  
                                     EUSART1_Write@txData 0064  
                                   __size_of_RADIO_SetCRC 000A  
                                 AssemblePacket@macCmdIdx 00DF  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 0178  
                                      __end_of_GetRx1Freq 7908  
                                   __size_of_RADIO_RxDone 00D0  
                                            ??_ComputeMic 00DA  
                            __size_of_UpdateReceiveDelays 004A  
                                   __size_of_RADIO_TxDone 018A  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 00AE  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00A5  
                               __size_of_SwTimerIsRunning 0020  
                              __end_of_ComputeSessionKeys 60C0  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00B2  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus 7954  
                                         _RADIO_WriteMode 5372  
                              ??_RADIO_WriteConfiguration 007F  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 0079  
                               __size_of_SwTimerReadValue 003E  
                             RADIO_FSKPacketSent@irqFlags 00DE  
                               __size_of_ExecuteDutyCycle 004E  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00DC  
                                      __end_of_FillSubKey 6DA8  
                                 _AssembleEncryptionBlock 5B04  
                                       __size_of_INT1_ISR 0006  
                                       __size_of_INT2_ISR 0006  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FE25  
                                     AESEncodeLoRa@useKey 0094  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp 7A4C  
                                      LORAWAN_Send@buffer 016C  
                                          __end_of_Random 75C2  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 000C  
                                __end_of_ValidateDataRate 78E2  
                            __end_of_INTERRUPT_Initialize 7ABA  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init 7A8A  
                                 __end_of_RADIO_GetStatus 7A96  
                                          __end_of___lmul 5FC0  
                                      LORAWAN_Send@result 00E2  
                                        ??_EnableChannels 0071  
                               i2TMR1_WriteTimer@timerVal 0001  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 7602  
                                           __pidataCOMRAM 7A3C  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0090  
                                       __size_of_TMR1_ISR 0024  
                                          _ADC_Initialize 7908  
                                      __end_of_ComputeMic 6A56  
                                               Random@max 0077  
                                          __end_of_memcpy 6A02  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 6EFE  
                                  __end_of_TMR1_ReadTimer 76B6  
                                          __end_of_memset 740C  
                                         _SPI2_Initialize 79AC  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC 7A14  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0073  
                                   UpdateCfList@frequency 0075  
                                          __end_of_printf 4A0A  
                                            _RADIO_RxDone 544A  
                                            _RADIO_TxDone 3BEE  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 5C5C  
                                          _ConfigureRadio 5D98  
                                      LORAWAN_RxDone@mhdr 03A2  
                                      LORAWAN_RxDone@temp 03A8  
                                            ??_RxDataDone 0068  
                                      _DIO4_ISR_Lora_Init 7AD6  
                                __end_ofi2_TMR1_ReadTimer 76D4  
                          __size_of_TMR_OverrideRemaining 007C  
                                     _RADIO_RegisterWrite 767A  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0066  
                         __size_of_PIN_MANAGER_Initialize 0058  
                           __end_of_TMR_OverrideRemaining 6236  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 77B4  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 00AF  
                                            AESCmac@input 00D0  
                        __end_of_LORAWAN_SetDeviceAddress 7800  
                                         ?_GenerateSubkey 00A4  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00D1  
                                   LORAWAN_Init@RxPayload 00A6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                             putch@txData 0065  
                                   __end_of_INT2_CallBack 7798  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings 77CE  
                                   __end_of_EUSART1_Write 79C4  
                              SwTimerStart@ticksRemaining 0091  
                                  RADIO_WriteMode@newMode 006E  
                                __end_of_ValidateRxOffset 78CE  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation 7A6C  
                           ExecuteNewChannel@channelIndex 0077  
                          __end_of_SearchAvailableChannel 5296  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 6FB8  
                                 __size_of_StartReTxTimer 0134  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 007C  
                                 __end_of_SystemTimerInit 7AB6  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0022  
                                         ___llmod@counter 006C  
                                            _JoinedServer 0176  
                                     TMR_SwapTimer@oldVal 0042  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 0010  
                                     TMR_SwapTimer@retVal 0044  
                                   _RADIO_FSKPayloadReady 5CFA  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput 7AC6  
                                                ??_Random 0079  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00E4  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0091  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 65F6  
                          __end_of_AutomaticReplyCallback 763E  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 002C  
                                    _macEndDevCmdReplyLen FE56  
                                                ??___lmul 006C  
                                             ??_AESEncode 006D  
                       RADIO_WriteConfiguration@tempValue 0082  
                                   __size_of_LORAWAN_Init 005E  
                      __size_of_AckRetransmissionCallback 00F8  
                                   __size_of_LORAWAN_Join 008C  
                                   __size_of_LORAWAN_Send 00C4  
                                 __end_of_RADIO_RxTimeout 7434  
                                MacExecuteCommands@buffer 007A  
                                      __end_of_RxDataDone 7ADE  
                                ??_SetReceptionNotOkState 00A0  
                                  __end_of_ADC_Initialize 7918  
                                          ??_TMR_ISR_lora 002A  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01C1  
                                       _ValidateDataRange 7180  
                                      __end_of_ExtractMic 6EBC  
                i2SwTimersInterrupt@ticksToNextTimerEvent 0025  
                  SwTimersInterrupt@ticksToNextTimerEvent 0088  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 006A  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 72DE  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 763E  
                                    ?_RADIO_SetModulation 0001  
                                _RADIO_SetSpreadingFactor 7A64  
                                      _RADIO_RxFSKTimeout 7116  
                                                ?_AESCmac 00CC  
                                  __size_of_TMR1_CallBack 001C  
                                                ??_printf 007D  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                   __end_of_IOCB5_DefaultInterruptHandler 7AE2  
                  __size_of_IOCB5_DefaultInterruptHandler 0002  
                           _IOCB5_DefaultInterruptHandler 7AE0  
                             ??_IOCB5_SetInterruptHandler 0066  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 008B  
                                            AESEncode@key 0075  
                                  TMR_GetDeltaTime@retVal 0032  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                             ??_IOCB5_ISR 0001  
                                  __end_of_ConfigureRadio 5E26  
                                          _LORAWAN_RxDone 0088  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 0040  
                                          _LORAWAN_TxDone 0B18  
                              __size_of_ExecuteNewChannel 01C2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 5F3A  
                  __end_of_LORAWAN_EnterContinuousReceive 652A  
                 __size_of_LORAWAN_EnterContinuousReceive 0066  
                          _LORAWAN_EnterContinuousReceive 64C4  
                                             __pbssBIGRAM 04E0  
                                   TMR1_ISR@CountCallBack 003E  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 00BC  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 0032  
                              __end_of_DefaultChannels433 FE94  
                              __end_of_DefaultChannels868 FEBE  
                                        ??_RADIO_Transmit 0099  
                        __end_of_INT0_SetInterruptHandler 7ADC  
                                      LORAWAN_RxTimeout@i 00AF  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                           __pcstackBANK3 03A0  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 4FDE  
                           EnableChannels@channelMaskCntl 0070  
                                 __end_of_RADIO_WriteMode 544A  
                 __end_of_UnconfirmedTransmissionCallback 6388  
                __size_of_UnconfirmedTransmissionCallback 006A  
                         _UnconfirmedTransmissionCallback 631E  
                                 SearchAvailableChannel@i 0084  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                                 _RADIO_ReceiveStart$1203 009C  
                         __size_of_UpdateMinMaxChDataRate 00B4  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01AF  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 0095  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 7338  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 72B0  
       __end_of_ResetParametersForUnconfirmedTransmission 7946  
      __size_of_ResetParametersForUnconfirmedTransmission 000E  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission 7938  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01F5  
                                               _bandwidth FE4F  
                                      ??_SetJoinFailState 0084  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 6840  
                                            _LORAWAN_Join 5E26  
                                            _LORAWAN_Send 56B4  
                                  RADIO_FSKPayloadReady@i 00EA  
                                       _ValidateFrequency 689E  
                                               __pnvBANK1 01F3  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 5296  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert 7ABA  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 71E8  
                                   ??_RADIO_RegisterWrite 0067  
                                        ___lwdiv@dividend 0064  
                                  _PIN_MANAGER_Initialize 68FA  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 33B6  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 006E  
                                               _macBuffer 04E0  
                                               _dioStatus 0048  
                               __end_of_ValidateDataRange 71B4  
                           RADIO_FSKPayloadReady@irqFlags 00E9  
                                       _SwTimersInterrupt 4EF0  
                                       ??_SwTimersExecute 00E4  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler 79D8  
                                           __pmediumconst FD24  
                                 RADIO_Transmit@bufferLen 0098  
                                 __end_of_SPI2_Initialize 79B8  
                                               __ptext100 56B4  
                                               __ptext101 6C32  
                                               __ptext110 6042  
                                               __ptext102 1B3C  
                               __end_of_ValidateChannelId 765C  
                                               __ptext111 613E  
                                               __ptext103 1E3A  
                                               __ptext200 69AA  
                                               __ptext120 7ADC  
                                               __ptext112 62AC  
                                               __ptext104 7A8A  
                                               __ptext201 6AA8  
                                               __ptext121 7938  
                                               __ptext113 67E2  
                                               __ptext105 5BB6  
                                               __ptext210 7728  
                                               __ptext202 63F2  
                                               __ptext130 6782  
                                               __ptext122 7946  
                                               __ptext114 3A5C  
                                               __ptext106 4190  
                                               __ptext211 50CA  
                                               __ptext203 7A7C  
                                               __ptext131 51B6  
                                               __ptext123 7A96  
                                               __ptext115 0B18  
                                               __ptext107 5B04  
                                               __ptext220 7AA2  
                                               __ptext212 4E00  
                                               __ptext140 7338  
                                               __ptext132 6DF0  
                                               __ptext124 765C  
                                               __ptext116 6EFE  
                                               __ptext108 5778  
                                               __ptext221 777C  
                                               __ptext213 76B6  
                                               __ptext205 7538  
                                               __ptext141 5FC0  
                                               __ptext133 7A5C  
                                               __ptext125 2C10  
                                               __ptext117 75E2  
                                               __ptext109 6E7A  
                                               __ptext222 7ACE  
                                               __ptext214 7928  
                                               __ptext206 770C  
                                               __ptext150 6B96  
                                               __ptext142 7A74  
                                               __ptext134 7A0A  
                                               __ptext126 745C  
                                               __ptext118 7A90  
                                               __ptext223 7AE4  
                                               __ptext215 7744  
                                               __ptext207 7ADE  
                                               __ptext151 5F3A  
                                               __ptext143 3000  
                                               __ptext135 7A14  
                                               __ptext127 7954  
                                               __ptext119 64C4  
                                               __ptext224 7AA8  
                                               __ptext216 7AE0  
                                               __ptext208 6C7E  
                                               __ptext160 29BC  
                                               __ptext152 6F3C  
                                               __ptext144 13A8  
                                               __ptext136 5D98  
                                               __ptext128 5E26  
                                               __ptext225 7798  
                                               __ptext217 7760  
                                               __ptext209 6FB8  
                                               __ptext161 6840  
                                               __ptext153 6A02  
                                               __ptext145 551A  
                                               __ptext137 7A64  
                                               __ptext129 77CE  
                                               __ptext226 7AD2  
                                               __ptext218 7ACA  
                                               __ptext170 727E  
                                               __ptext162 7962  
                                               __ptext154 1820  
                                               __ptext146 665A  
                                               __ptext138 7A6C  
                                               __ptext227 7AE6  
                                               __ptext219 7AE2  
                                               __ptext171 5372  
                                               __ptext163 5834  
                                               __ptext155 4B10  
                                               __ptext147 66BE  
                                               __ptext139 7A1E  
                                               __ptext228 0000  
                                               __ptext180 7ABE  
                                               __ptext172 7482  
                                               __ptext164 60C0  
                                               __ptext156 6D5E  
                                               __ptext148 469E  
                                               __ptext181 71B4  
                                               __ptext173 7A9C  
                                               __ptext165 3EDA  
                                               __ptext157 7434  
                                               __ptext149 75A0  
                                               __ptext190 61BA  
                                               __ptext182 73B8  
                                               __ptext174 5296  
                                               __ptext166 599E  
                                               __ptext158 2132  
                                               __ptext191 6F7A  
                                               __ptext183 78E2  
                                               __ptext175 6720  
                                               __ptext167 6BE4  
                                               __ptext159 3D78  
                                               __ptext192 76F0  
                                               __ptext184 7AC2  
                                               __ptext176 767A  
                                               __ptext168 7A28  
                                               __ptext193 4EF0  
                                               __ptext185 7AC6  
                                               __ptext177 7A32  
                                               __ptext169 38C6  
                                               __ptext194 4FDE  
                                               __ptext186 372A  
                                               __ptext178 7918  
                                               __ptext195 7698  
                                               __ptext187 6236  
                                               __ptext179 7ABA  
                                               __ptext196 6EBC  
                                               __ptext188 76D4  
                                               __ptext197 652A  
                                               __ptext189 5EB2  
                                               __ptext198 6590  
                                               __ptext199 73E2  
                                       _EncryptFRMPayload 4190  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00D6  
                           __size_of_UpdateJoinInProgress 001A  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 0024  
                                         ??_AESEncodeLoRa 0094  
                SelectChannelForTransmission@channelIndex 0087  
                         __end_of_PrepareJoinRequestFrame 47CC  
                                                ?___lwdiv 0064  
                                                ?___lwmod 0072  
                                         ?_ADC_Initialize 0001  
                                      ?_SwTimersInterrupt 007C  
                               _RADIO_SetChannelFrequency 5FC0  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 006F  
                               _SetCallbackSoftwareTimers 5834  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0B18  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 13A8  
                                      ?_EncryptFRMPayload 00A4  
                                     __end_of_readAndSend 6B48  
                            ??_INTERRUPT_InterruptManager 002A  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit 75E2  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus 7A00  
                           __end_of_RADIO_SetLoRaSyncWord 7A32  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0042  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00A4  
                        ExecuteRxParamSetupReq@dlSettings 0076  
                                          _AssemblePacket 1B3C  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00E0  
                              ??_INT2_SetInterruptHandler 0066  
                                                _BAUDCON1 000FB8  
                              __end_ofi2_TMR_GetDeltaTime 4EF0  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0080  
                                    RADIO_DIO0@dioMapping 00ED  
                                       _DutyCycleCallback 242A  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 6FB8  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00B2  
                                __end_of_LORAWAN_GetState 7A84  
                                 __end_ofi2_TMR_SwapTimer 6FF6  
                                 __size_of_EncKeySchedule 0254  
                                      AssemblePacket@mhdr 00DD  
                                        ___lwdiv@quotient 0069  
                                      AssemblePacket@port 0166  
                               __size_of_RADIO_ReadRandom 007E  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 2C10  
                                          __size_of_srand 000E  
                                __end_of_LORAWAN_Mainloop 7032  
                                          __size_of_putch 000A  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize 7AB6  
                                           _SwTimerCreate 63F2  
                          __end_of_InitDefault868Channels 6590  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 770C  
                               __end_of_ValidateFrequency 68FA  
                               _IOCB5_SetInterruptHandler 79C4  
                                        _SwTimerIsRunning 75E2  
                                        _ExecuteLinkCheck 724C  
                                    i2SwTimersInterrupt@i 0029  
                                                _INT1_ISR 7AA8  
                                _LORAWAN_SetDeviceAddress 77E8  
                                                _INT2_ISR 7AA2  
                                       EncKeySchedule@key 0064  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth 7A74  
                                                _LATAbits 000F89  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                  ?_RADIO_FSKPayloadReady 0001  
                                        __CFG_WDTEN$NOSLP 000000  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FE4F  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F0  
                                     ?_RADIO_ReceiveStart 0096  
                                        _SwTimerReadValue 6EFE  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 6B48  
                                         _HALDIO5PinValue 7A9C  
                                    RADIO_DIO1@dioMapping 00B1  
                               __end_of_SwTimersInterrupt 4FDE  
                                __size_of_TMR1_WriteTimer 001C  
                                      AESEncode@masterKey 006C  
                     __size_of_INTERRUPT_InterruptManager 0078  
                              __end_of_DIO2_ISR_Lora_Init 7994  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 00A6  
                                        GenerateSubkey@k2 00A8  
                                    ConfigureRadioRx@freq 0076  
                               __end_of_EncryptFRMPayload 42E4  
                          __size_of_RADIO_WriteFSKBitRate 0062  
                                UpdateReceiveDelays@delay 0068  
                               LORAWAN_RxDone@bufferIndex 03A7  
                                  __size_of_UpdateTxPower 0008  
                           __end_of_RADIO_WriteFSKBitRate 6720  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0064  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 007A  
                                               _rxPayload 0172  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 599E  
                           EncryptFRMPayload@bufferLength 00A6  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 00A6  
                                                _TMR1_ISR 7538  
                                ConfigureRadioTx@dataRate 007A  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 02F8  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 0098  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 6D14  
                         __size_of_SetReceptionNotOkState 0068  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 1E3A  
                                         ?_LORAWAN_RxDone 016F  
                                         ?_LORAWAN_TxDone 00A0  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 0068  
                                      _DIO1_ISR_Lora_Init 7994  
                               __end_of_DutyCycleCallback 2712  
                                        __size_of_AESCmac 031C  
                                    ??_RADIO_ReceiveStart 0098  
                                 ValidateFrequency@result 0068  
                                              printf@flag 007F  
                              __end_of_PrepareSessionKeys 61BA  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                              printf@prec 0080  
                                    RADIO_DIO2@dioMapping 007E  
                                      AESEncodeLoRa@block 0090  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 3BEE  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 03AB  
                                       ___lmul@multiplier 0064  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 5C70  
                                               copy_data1 5C90  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                     _EncKeySchedule$3862 0068  
                                _INT0_SetInterruptHandler 7ADA  
                             __end_of_RADIO_SetIQInverted 7A14  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 6CCA  
                                             _RADIO_Reset 71B4  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0021  
                                      _RADIO_RegisterRead 7482  
                                __size_of_ValidateTxPower 0022  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 456A  
                             __end_ofi2_SwTimersInterrupt 51B6  
                               _LORAWAN_GetMaxPayloadSize 6C32  
                              LORAWAN_RxDone@extractedMic 03A3  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 00A8  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00D2  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 0072  
                     __size_of_LORAWAN_LinkCheckConfigure 019C  
                                        ___abdiv@quotient 0067  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 73E2  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer 7728  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 6AFA  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                       _ADC_GetConversion 714C  
                                __size_of_CheckMcastFlags 0072  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0034  
                               _ticksToScheduledInterrupt 005A  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 001E  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 0052  
                                 ??_OSCILLATOR_Initialize 0064  
                                      ?_ADC_GetConversion 0064  
                                       ?_ValidateDataRate 0001  
                                      _ComputeSessionKeys 6042  
                                   __size_of_SwTimerStart 0088  
                                        __size_of___lldiv 0076  
                                        __size_of___llmod 0062  
                             __size_of_EUSART1_Initialize 0016  
                                        __size_of___lwdiv 004A  
                                        __size_of___lwmod 003E  
                                         ?_AssemblePacket 0166  
                                    AssemblePacket@buffer 0167  
                                        SwTimersExecute@i 00E8  
                                      ??_ValidateDataRate 0064  
                                _TMR1_SetInterruptHandler 79CE  
                                  _IOCB4_InterruptHandler 01F7  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission 7954  
        __size_of_ResetParametersForConfirmedTransmission 000E  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission 7946  
                                   _TMR1_InterruptHandler 01FB  
                                        ??_GenerateSubkey 00AA  
                                     ??_ADC_GetConversion 0066  
                                        _CountfOptsLength 5778  
                                              _HALSPISend 7A32  
                                     ?_ComputeSessionKeys 00A4  
                                          _rxWindowOffset FE3F  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 3000  
                                 __size_of_SysConfigSleep 0024  
                                    ??_RADIO_RegisterRead 0066  
                        __end_of_RADIO_UnhandledInterrupt 757E  
                                           _UpdateTxPower 7A4C  
                                         ___lwdiv@divisor 0066  
                                    RADIO_Transmit@buffer 0096  
                         __end_of_RADIO_FHSSChangeChannel 730C  
                                         _allocatedTimers 00F2  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                                         ___lwdiv@counter 0068  
                          __end_of_INTERRUPT_GetDioStatus 7962  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init 7A84  
                                                __ptext10 75C2  
                                                __ptext11 797C  
                                                __ptext20 79A0  
                                                __ptext12 79CE  
                                                __ptext21 7AB6  
                                                __ptext13 7AB2  
                                                __ptext30 7602  
                                                __ptext22 72B0  
                                                __ptext14 7A84  
                                                __ptext31 7364  
                                                __ptext23 79E2  
                                                __ptext15 7AD6  
                                                __ptext40 4038  
                                                __ptext32 77E8  
                                                __ptext24 79EC  
                                                __ptext16 7AD8  
                                                __ptext41 58EA  
                                                __ptext33 738E  
                                                __ptext25 7ADA  
                                                __ptext17 7988  
                                                __ptext50 6DA8  
                                                __ptext42 55E8  
                                                __ptext34 6FF6  
                                                __ptext26 7878  
                                                __ptext18 79D8  
                                                __ptext51 7032  
                                                __ptext43 6E38  
                                                __ptext35 5A52  
                                                __ptext27 7908  
                                                __ptext19 7994  
                                                __ptext60 2712  
                                                __ptext52 740C  
                                                __ptext44 7116  
                                                __ptext36 242A  
                                                __ptext28 7A44  
                                                __ptext61 0088  
                                                __ptext53 72DE  
                                                __ptext45 631E  
                                                __ptext37 47CC  
                                                __ptext29 79AC  
                                                __ptext70 79F6  
                                                __ptext62 6388  
                                                __ptext54 65F6  
                                                __ptext46 78F6  
                                                __ptext38 7620  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 79B8  
                                                __ptext63 77B4  
                                                __ptext55 755C  
                                                __ptext47 7800  
                                                __ptext39 4C12  
                                                __ptext80 689E  
                                                __ptext72 6CCA  
                                                __ptext64 31EE  
                                                __ptext56 3BEE  
                                                __ptext48 7818  
                                                __ptext81 7180  
                                                __ptext73 2E10  
                                                __ptext65 456A  
                                                __ptext57 544A  
                                                __ptext49 7830  
                                                __ptext90 78CE  
                                                __ptext82 706C  
                                                __ptext74 7514  
                                                __ptext66 645C  
                                                __ptext58 6A56  
                                                __ptext91 7860  
                                                __ptext83 721A  
                                                __ptext75 6D14  
                                                __ptext67 74F0  
                                                __ptext59 5CFA  
                                                __ptext92 70DE  
                                                __ptext84 4D0A  
                                                __ptext76 42E4  
                                                __ptext68 7848  
                                                __ptext93 7A4C  
                                                __ptext85 70A6  
                                                __ptext77 78BA  
                                                __ptext69 48F8  
                                                __ptext94 7A54  
                                                __ptext86 763E  
                                                __ptext78 788E  
                                                __ptext95 78A4  
                                                __ptext87 724C  
                                                __ptext79 33B6  
                                                __ptext96 6952  
                                                __ptext88 3578  
                                                __ptext97 4A0A  
                                                __ptext89 757E  
                                                __ptext98 6B48  
                                                __ptext99 7A00  
                                 ExecuteRxTimingSetup@ptr 0069  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 0064  
                                   __end_of_LORAWAN_Reset 4038  
                                  __end_of_StartReTxTimer 469E  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 00F6  
                                  _SetReceptionNotOkState 645C  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01C1  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 00CE  
                                 __end_of_HALDIO5PinValue 7AA2  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 005C  
                        __size_of_PrepareJoinRequestFrame 012E  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 01C8  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 0008  
                                           __size_of_main 013E  
                                           __size_of_rand 004E  
                                       _RADIO_ReceiveStop 765C  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 75C2  
                                         _FskSyncWordBuff FEBE  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer 7744  
               IncludeMacCommandsResponse@bIncludeInFopts 0067  
                                    ??_ComputeSessionKeys 00A6  
                               __end_of_ADC_GetConversion 7180  
                                           _timerOverflow 0049  
                                            _SwTimerStart 5EB2  
                              __size_of_SwTimersInterrupt 00EE  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                   RADIO_TxDone@timeOnAir 00D6  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 000C  
                              __size_of_EncryptFRMPayload 0154  
                                         GenerateSubkey@i 00CB  
                                         GenerateSubkey@l 00BB  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 50CA  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00E9  
                             __end_of_ValidateChannelMask 7116  
                                           UpdateCfList@i 007A  
                      __end_of_INTERRUPT_InterruptManager 0080  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData 7A96  
                                               printf@val 0081  
                                       ??_TMR1_WriteTimer 0066  
                                              _RADIO_DIO0 65F6  
                                              _RADIO_DIO1 7032  
                                              _RADIO_DIO2 6DA8  
                                              _RADIO_DIO3 7830  
                                              _RADIO_DIO4 7818  
                                              _RADIO_DIO5 7800  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler 7AE8  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler 7AE6  
                       __size_of_RADIO_WriteConfiguration 0478  
                                  __end_of_rxWindowOffset FE47  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 02E8  
                                 EncryptFRMPayload@buffer 00A4  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 007D  
                                      __end_of_modulation FE3F  
                                              _RADIO_Init 38C6  
                         ExecuteRxParamSetupReq@frequency 0072  
                                __size_of_UpdateFrequency 003A  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 0047  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert 7ABE  
                                __size_of_UpdateDutyCycle 0032  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 29BC  
                      __size_of_SetCallbackSoftwareTimers 00B6  
                                 __size_of_RxJoinResponse 0018  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 31EE  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 002A  
                                    __size_of_SwTimerStop 001C  
                                        _RADIO_ReadRandom 60C0  
                                       _RADIO_TxDone$1215 00DA  
                                      _EXT_INT_Initialize 72B0  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 61BA  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 0096  
                               __end_of_RADIO_ReceiveStop 767A  
                                         _SwTimersExecute 5A52  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 0072  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus 7A0A  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FE6A  
                                      _DefaultChannels868 FE94  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0066  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 00AB  
                         __size_of_ExecuteRxParamSetupReq 0148  
                                        ??_ADC_Initialize 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2096 00BC  
                                     _LORAWAN_TxDone$2097 00C0  
                      __end_of_LORAWAN_LinkCheckConfigure 38C6  
                               __end_of_RADIO_ReleaseData 7A9C  
                              _LORAWAN_LinkCheckConfigure 372A  
                                __size_of_EnableChannels1 0058  
                                      __end_of_txPower868 FE6A  
                                                printf@ap 007E  
                                   _HALResetPinMakeOutput 7AC2  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 001C  
                               RADIO_WriteConfiguration@i 0081  
                               ExecuteRxTimingSetup@delay 006B  
                                        AESEncodeLoRa@key 0092  
                               __size_of_SetJoinFailState 0024  
                        LORAWAN_LinkCheckConfigure@period 0096  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 727E  
             __end_of_UpdateRetransmissionAckTimeoutState 63F2  
            __size_of_UpdateRetransmissionAckTimeoutState 006A  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 0096  
                     _UpdateRetransmissionAckTimeoutState 6388  
                                       RADIO_ReadRandom@i 0074  
                            SearchAvailableChannel@result 0081  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 001C  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                  __size_of_EUSART1_Write 000C  
                                          _AESEncode$3876 0085  
                                          _AESEncode$3877 0087  
                                          _AESEncode$3878 0089  
                                   __end_of_DIO0_ISR_Lora 7AD6  
                                __end_of_SwTimerIsRunning 7602  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 727E  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                                            _rxWindowSize FE47  
                                  __end_of_EncKeySchedule 2C10  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora 7AD2  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 6F3C  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 6B96  
                                         ___lwmod@divisor 0074  
                  __end_of_UpdateReceiveWindow2Parameters 78A4  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters 788E  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 0076  
                         _LORAWAN_LinkCheckConfigure$3282 00A0  
                        __end_of_INT1_SetInterruptHandler 79F6  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00E9  
                                   __size_of_TMR_ISR_lora 004C  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora 7ACE  
                                    _SystemBlockingWaitMs 73B8  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 00A4  
                                 __size_of_EnableChannels 0016  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress 77E8  
                            __end_of_ExecuteRxTimingSetup 7538  
                                 __size_of_HALSPICSAssert 0004  
                                 __end_of_FskSyncWordBuff FEC1  
                __end_of_RADIO_WriteFSKFrequencyDeviation 66BE  
               __size_of_RADIO_WriteFSKFrequencyDeviation 0064  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 665A  
                __end_of_LORAWAN_SetApplicationSessionKey 73B8  
               __size_of_LORAWAN_SetApplicationSessionKey 002A  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 738E  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00E9  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 755C  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 6952  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite 7698  
                                 __size_of_ExecuteLinkAdr 01B2  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 4E00  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                  _IOCB5_InterruptHandler 01F9  
                                         _PIN_MANAGER_IOC 7928  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00EF  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                              __size_of_ADC_GetConversion 0034  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 730C  
                        RADIO_WriteConfiguration@regValue 0086  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 0179  
                                           ExtractMic@mic 0074  
                                       _LORAWAN_RxTimeout 2712  
                             __end_of_RADIO_SetModulation 7A74  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 0036  
                                        ??_LORAWAN_RxDone 00E4  
                                     ?i2_TMR_GetDeltaTime 0009  
