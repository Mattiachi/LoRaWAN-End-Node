

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Sep 22 10:46:00 2022

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18LF46K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	idataBANK3,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	nvBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    19                           	psect	dataBANK3,global,class=BANK3,space=1,delta=1
    20                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    21                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    22                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    23                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    24                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    25                           	psect	text0,global,reloc=2,class=CODE,delta=1
    26                           	psect	text1,global,reloc=2,class=CODE,delta=1
    27                           	psect	text2,global,reloc=2,class=CODE,delta=1
    28                           	psect	text3,global,reloc=2,class=CODE,delta=1
    29                           	psect	text4,global,reloc=2,class=CODE,delta=1
    30                           	psect	text5,global,reloc=2,class=CODE,delta=1
    31                           	psect	text6,global,reloc=2,class=CODE,delta=1
    32                           	psect	text7,global,reloc=2,class=CODE,delta=1
    33                           	psect	text8,global,reloc=2,class=CODE,delta=1
    34                           	psect	text9,global,reloc=2,class=CODE,delta=1
    35                           	psect	text10,global,reloc=2,class=CODE,delta=1
    36                           	psect	text11,global,reloc=2,class=CODE,delta=1
    37                           	psect	text12,global,reloc=2,class=CODE,delta=1
    38                           	psect	text13,global,reloc=2,class=CODE,delta=1
    39                           	psect	text14,global,reloc=2,class=CODE,delta=1
    40                           	psect	text15,global,reloc=2,class=CODE,delta=1
    41                           	psect	text16,global,reloc=2,class=CODE,delta=1
    42                           	psect	text17,global,reloc=2,class=CODE,delta=1
    43                           	psect	text18,global,reloc=2,class=CODE,delta=1
    44                           	psect	text19,global,reloc=2,class=CODE,delta=1
    45                           	psect	text20,global,reloc=2,class=CODE,delta=1
    46                           	psect	text21,global,reloc=2,class=CODE,delta=1
    47                           	psect	text22,global,reloc=2,class=CODE,delta=1
    48                           	psect	text23,global,reloc=2,class=CODE,delta=1
    49                           	psect	text24,global,reloc=2,class=CODE,delta=1
    50                           	psect	text25,global,reloc=2,class=CODE,delta=1
    51                           	psect	text26,global,reloc=2,class=CODE,delta=1
    52                           	psect	text27,global,reloc=2,class=CODE,delta=1
    53                           	psect	text28,global,reloc=2,class=CODE,delta=1
    54                           	psect	text29,global,reloc=2,class=CODE,delta=1
    55                           	psect	text30,global,reloc=2,class=CODE,delta=1
    56                           	psect	text31,global,reloc=2,class=CODE,delta=1
    57                           	psect	text32,global,reloc=2,class=CODE,delta=1
    58                           	psect	text33,global,reloc=2,class=CODE,delta=1
    59                           	psect	text34,global,reloc=2,class=CODE,delta=1
    60                           	psect	text35,global,reloc=2,class=CODE,delta=1
    61                           	psect	text36,global,reloc=2,class=CODE,delta=1
    62                           	psect	text37,global,reloc=2,class=CODE,delta=1
    63                           	psect	text38,global,reloc=2,class=CODE,delta=1
    64                           	psect	text39,global,reloc=2,class=CODE,delta=1
    65                           	psect	text40,global,reloc=2,class=CODE,delta=1
    66                           	psect	text41,global,reloc=2,class=CODE,delta=1
    67                           	psect	text42,global,reloc=2,class=CODE,delta=1
    68                           	psect	text43,global,reloc=2,class=CODE,delta=1
    69                           	psect	text44,global,reloc=2,class=CODE,delta=1
    70                           	psect	text45,global,reloc=2,class=CODE,delta=1
    71                           	psect	text46,global,reloc=2,class=CODE,delta=1
    72                           	psect	text47,global,reloc=2,class=CODE,delta=1
    73                           	psect	text48,global,reloc=2,class=CODE,delta=1
    74                           	psect	text49,global,reloc=2,class=CODE,delta=1
    75                           	psect	text50,global,reloc=2,class=CODE,delta=1
    76                           	psect	text51,global,reloc=2,class=CODE,delta=1
    77                           	psect	text52,global,reloc=2,class=CODE,delta=1
    78                           	psect	text53,global,reloc=2,class=CODE,delta=1
    79                           	psect	text54,global,reloc=2,class=CODE,delta=1
    80                           	psect	text55,global,reloc=2,class=CODE,delta=1
    81                           	psect	text56,global,reloc=2,class=CODE,delta=1
    82                           	psect	text57,global,reloc=2,class=CODE,delta=1
    83                           	psect	text58,global,reloc=2,class=CODE,delta=1
    84                           	psect	text59,global,reloc=2,class=CODE,delta=1
    85                           	psect	text60,global,reloc=2,class=CODE,delta=1
    86                           	psect	text61,global,reloc=2,class=CODE,delta=1
    87                           	psect	text62,global,reloc=2,class=CODE,delta=1
    88                           	psect	text63,global,reloc=2,class=CODE,delta=1
    89                           	psect	text64,global,reloc=2,class=CODE,delta=1
    90                           	psect	text65,global,reloc=2,class=CODE,delta=1
    91                           	psect	text66,global,reloc=2,class=CODE,delta=1
    92                           	psect	text67,global,reloc=2,class=CODE,delta=1
    93                           	psect	text68,global,reloc=2,class=CODE,delta=1
    94                           	psect	text69,global,reloc=2,class=CODE,delta=1
    95                           	psect	text70,global,reloc=2,class=CODE,delta=1
    96                           	psect	text71,global,reloc=2,class=CODE,delta=1
    97                           	psect	text72,global,reloc=2,class=CODE,delta=1
    98                           	psect	text73,global,reloc=2,class=CODE,delta=1
    99                           	psect	text74,global,reloc=2,class=CODE,delta=1
   100                           	psect	text75,global,reloc=2,class=CODE,delta=1
   101                           	psect	text76,global,reloc=2,class=CODE,delta=1
   102                           	psect	text77,global,reloc=2,class=CODE,delta=1
   103                           	psect	text78,global,reloc=2,class=CODE,delta=1
   104                           	psect	text79,global,reloc=2,class=CODE,delta=1
   105                           	psect	text80,global,reloc=2,class=CODE,delta=1
   106                           	psect	text81,global,reloc=2,class=CODE,delta=1
   107                           	psect	text82,global,reloc=2,class=CODE,delta=1
   108                           	psect	text83,global,reloc=2,class=CODE,delta=1
   109                           	psect	text84,global,reloc=2,class=CODE,delta=1
   110                           	psect	text85,global,reloc=2,class=CODE,delta=1
   111                           	psect	text86,global,reloc=2,class=CODE,delta=1
   112                           	psect	text87,global,reloc=2,class=CODE,delta=1
   113                           	psect	text88,global,reloc=2,class=CODE,delta=1
   114                           	psect	text89,global,reloc=2,class=CODE,delta=1
   115                           	psect	text90,global,reloc=2,class=CODE,delta=1
   116                           	psect	text91,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	text99,global,reloc=2,class=CODE,delta=1
   125                           	psect	text100,global,reloc=2,class=CODE,delta=1
   126                           	psect	text101,global,reloc=2,class=CODE,delta=1
   127                           	psect	text102,global,reloc=2,class=CODE,delta=1
   128                           	psect	text103,global,reloc=2,class=CODE,delta=1
   129                           	psect	text104,global,reloc=2,class=CODE,delta=1
   130                           	psect	text105,global,reloc=2,class=CODE,delta=1
   131                           	psect	text106,global,reloc=2,class=CODE,delta=1
   132                           	psect	text107,global,reloc=2,class=CODE,delta=1
   133                           	psect	text108,global,reloc=2,class=CODE,delta=1
   134                           	psect	text109,global,reloc=2,class=CODE,delta=1
   135                           	psect	text110,global,reloc=2,class=CODE,delta=1
   136                           	psect	text111,global,reloc=2,class=CODE,delta=1
   137                           	psect	text112,global,reloc=2,class=CODE,delta=1
   138                           	psect	text113,global,reloc=2,class=CODE,delta=1
   139                           	psect	text114,global,reloc=2,class=CODE,delta=1
   140                           	psect	text115,global,reloc=2,class=CODE,delta=1
   141                           	psect	text116,global,reloc=2,class=CODE,delta=1
   142                           	psect	text117,global,reloc=2,class=CODE,delta=1
   143                           	psect	text118,global,reloc=2,class=CODE,delta=1
   144                           	psect	text119,global,reloc=2,class=CODE,delta=1
   145                           	psect	text120,global,reloc=2,class=CODE,delta=1
   146                           	psect	text121,global,reloc=2,class=CODE,delta=1
   147                           	psect	text122,global,reloc=2,class=CODE,delta=1
   148                           	psect	text123,global,reloc=2,class=CODE,delta=1
   149                           	psect	text124,global,reloc=2,class=CODE,delta=1
   150                           	psect	text125,global,reloc=2,class=CODE,delta=1
   151                           	psect	text126,global,reloc=2,class=CODE,delta=1
   152                           	psect	text127,global,reloc=2,class=CODE,delta=1
   153                           	psect	text128,global,reloc=2,class=CODE,delta=1
   154                           	psect	text129,global,reloc=2,class=CODE,delta=1
   155                           	psect	text130,global,reloc=2,class=CODE,delta=1
   156                           	psect	text131,global,reloc=2,class=CODE,delta=1
   157                           	psect	text132,global,reloc=2,class=CODE,delta=1
   158                           	psect	text133,global,reloc=2,class=CODE,delta=1
   159                           	psect	text134,global,reloc=2,class=CODE,delta=1
   160                           	psect	text135,global,reloc=2,class=CODE,delta=1
   161                           	psect	text136,global,reloc=2,class=CODE,delta=1
   162                           	psect	text137,global,reloc=2,class=CODE,delta=1
   163                           	psect	text138,global,reloc=2,class=CODE,delta=1
   164                           	psect	text139,global,reloc=2,class=CODE,delta=1
   165                           	psect	text140,global,reloc=2,class=CODE,delta=1
   166                           	psect	text141,global,reloc=2,class=CODE,delta=1
   167                           	psect	text142,global,reloc=2,class=CODE,delta=1
   168                           	psect	text143,global,reloc=2,class=CODE,delta=1
   169                           	psect	text144,global,reloc=2,class=CODE,delta=1
   170                           	psect	text145,global,reloc=2,class=CODE,delta=1
   171                           	psect	text146,global,reloc=2,class=CODE,delta=1
   172                           	psect	text147,global,reloc=2,class=CODE,delta=1
   173                           	psect	text148,global,reloc=2,class=CODE,delta=1
   174                           	psect	text149,global,reloc=2,class=CODE,delta=1
   175                           	psect	text150,global,reloc=2,class=CODE,delta=1
   176                           	psect	text151,global,reloc=2,class=CODE,delta=1
   177                           	psect	text152,global,reloc=2,class=CODE,delta=1
   178                           	psect	text153,global,reloc=2,class=CODE,delta=1
   179                           	psect	text154,global,reloc=2,class=CODE,delta=1
   180                           	psect	text155,global,reloc=2,class=CODE,delta=1
   181                           	psect	text156,global,reloc=2,class=CODE,delta=1
   182                           	psect	text157,global,reloc=2,class=CODE,delta=1
   183                           	psect	text158,global,reloc=2,class=CODE,delta=1
   184                           	psect	text159,global,reloc=2,class=CODE,delta=1
   185                           	psect	text160,global,reloc=2,class=CODE,delta=1
   186                           	psect	text161,global,reloc=2,class=CODE,delta=1
   187                           	psect	text162,global,reloc=2,class=CODE,delta=1
   188                           	psect	text163,global,reloc=2,class=CODE,delta=1
   189                           	psect	text164,global,reloc=2,class=CODE,delta=1
   190                           	psect	text165,global,reloc=2,class=CODE,delta=1
   191                           	psect	text166,global,reloc=2,class=CODE,delta=1
   192                           	psect	text167,global,reloc=2,class=CODE,delta=1
   193                           	psect	text168,global,reloc=2,class=CODE,delta=1
   194                           	psect	text169,global,reloc=2,class=CODE,delta=1
   195                           	psect	text170,global,reloc=2,class=CODE,delta=1
   196                           	psect	text171,global,reloc=2,class=CODE,delta=1
   197                           	psect	text172,global,reloc=2,class=CODE,delta=1
   198                           	psect	text173,global,reloc=2,class=CODE,delta=1
   199                           	psect	text174,global,reloc=2,class=CODE,delta=1
   200                           	psect	text175,global,reloc=2,class=CODE,delta=1
   201                           	psect	text176,global,reloc=2,class=CODE,delta=1
   202                           	psect	text177,global,reloc=2,class=CODE,delta=1
   203                           	psect	text178,global,reloc=2,class=CODE,delta=1
   204                           	psect	text179,global,reloc=2,class=CODE,delta=1
   205                           	psect	text180,global,reloc=2,class=CODE,delta=1
   206                           	psect	text181,global,reloc=2,class=CODE,delta=1
   207                           	psect	text182,global,reloc=2,class=CODE,delta=1
   208                           	psect	text183,global,reloc=2,class=CODE,delta=1
   209                           	psect	text184,global,reloc=2,class=CODE,delta=1
   210                           	psect	text185,global,reloc=2,class=CODE,delta=1
   211                           	psect	text186,global,reloc=2,class=CODE,delta=1
   212                           	psect	text187,global,reloc=2,class=CODE,delta=1
   213                           	psect	text188,global,reloc=2,class=CODE,delta=1
   214                           	psect	text189,global,reloc=2,class=CODE,delta=1
   215                           	psect	text190,global,reloc=2,class=CODE,delta=1
   216                           	psect	text191,global,reloc=2,class=CODE,delta=1
   217                           	psect	text192,global,reloc=2,class=CODE,delta=1
   218                           	psect	text193,global,reloc=2,class=CODE,delta=1
   219                           	psect	text194,global,reloc=2,class=CODE,delta=1
   220                           	psect	text195,global,reloc=2,class=CODE,delta=1
   221                           	psect	text196,global,reloc=2,class=CODE,delta=1
   222                           	psect	text197,global,reloc=2,class=CODE,delta=1
   223                           	psect	text198,global,reloc=2,class=CODE,delta=1
   224                           	psect	text199,global,reloc=2,class=CODE,delta=1
   225                           	psect	text200,global,reloc=2,class=CODE,delta=1
   226                           	psect	text201,global,reloc=2,class=CODE,delta=1
   227                           	psect	text202,global,reloc=2,class=CODE,delta=1
   228                           	psect	text203,global,reloc=2,class=CODE,delta=1
   229                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   230                           	psect	text205,global,reloc=2,class=CODE,delta=1
   231                           	psect	text206,global,reloc=2,class=CODE,delta=1
   232                           	psect	text207,global,reloc=2,class=CODE,delta=1
   233                           	psect	text208,global,reloc=2,class=CODE,delta=1
   234                           	psect	text209,global,reloc=2,class=CODE,delta=1
   235                           	psect	text210,global,reloc=2,class=CODE,delta=1
   236                           	psect	text211,global,reloc=2,class=CODE,delta=1
   237                           	psect	text212,global,reloc=2,class=CODE,delta=1
   238                           	psect	text213,global,reloc=2,class=CODE,delta=1
   239                           	psect	text214,global,reloc=2,class=CODE,delta=1
   240                           	psect	text215,global,reloc=2,class=CODE,delta=1
   241                           	psect	text216,global,reloc=2,class=CODE,delta=1
   242                           	psect	text217,global,reloc=2,class=CODE,delta=1
   243                           	psect	text218,global,reloc=2,class=CODE,delta=1
   244                           	psect	text219,global,reloc=2,class=CODE,delta=1
   245                           	psect	text220,global,reloc=2,class=CODE,delta=1
   246                           	psect	text221,global,reloc=2,class=CODE,delta=1
   247                           	psect	text222,global,reloc=2,class=CODE,delta=1
   248                           	psect	text223,global,reloc=2,class=CODE,delta=1
   249                           	psect	text224,global,reloc=2,class=CODE,delta=1
   250                           	psect	text225,global,reloc=2,class=CODE,delta=1
   251                           	psect	text226,global,reloc=2,class=CODE,delta=1
   252                           	psect	text227,global,reloc=2,class=CODE,delta=1
   253                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   254                           	psect	text228,global,reloc=2,class=CODE,delta=1
   255                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   256                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   257  0000                     
   258 ;; Function _INT0_DefaultInterruptHandler is unused but had its address taken
   259  0000                     
   260 ;; Function _DIO5_ISR_Lora is unused but had its address taken
   261  0000                     
   262 ;;UnconfirmedTransmissionCallback@param	offset=-1 (param)
   263 ;;RADIO_WatchdogTimeout@param	offset=-1 (param)
   264 ;;RADIO_RxFSKTimeout@irqFlags	offset	0
   265 ;;RADIO_RxFSKTimeout@param	offset=-1 (param)
   266 ;;LORAWAN_ReceiveWindow1Callback@freq	offset	0
   267 ;;LORAWAN_ReceiveWindow1Callback@param	offset=-1 (param)
   268 ;;_LORAWAN_LinkCheckCallback$3287	offset	0
   269 ;;LORAWAN_LinkCheckCallback@iCtr	offset	4
   270 ;;LORAWAN_LinkCheckCallback@param	offset=-1 (param)
   271 ;;_DutyCycleCallback$2264	offset	0
   272 ;;DutyCycleCallback@minim	offset	4
   273 ;;DutyCycleCallback@i	offset	8
   274 ;;DutyCycleCallback@found	offset	9
   275 ;;DutyCycleCallback@param	offset=-1 (param)
   276 ;;AutomaticReplyCallback@param	offset=-1 (param)
   277 ;;AckRetransmissionCallback@maximumPacketSize	offset	0
   278 ;;AckRetransmissionCallback@param	offset=-1 (param)
   279 ;;_param	offset=-1 (param)
   280 ;;_UpdateJoinSuccessState$3304	offset	0
   281 ;;UpdateJoinSuccessState@param	offset=-1 (param)
   282                           
   283                           	psect	idataCOMRAM
   284  00A44E                     __pidataCOMRAM:
   285                           	opt stack 0
   286                           
   287                           ;initializer for _ticksToScheduledInterrupt
   288  00A44E  FFFF               	dw	65535
   289  00A450  FFFF               	dw	65535
   290                           
   291                           	psect	idataBANK1
   292  00A1EE                     __pidataBANK1:
   293                           	opt stack 0
   294                           
   295                           ;initializer for GenerateSubkey@F7870
   296  00A1EE  00                 	db	0
   297  00A1EF  00                 	db	0
   298  00A1F0  00                 	db	0
   299  00A1F1  00                 	db	0
   300  00A1F2  00                 	db	0
   301  00A1F3  00                 	db	0
   302  00A1F4  00                 	db	0
   303  00A1F5  00                 	db	0
   304  00A1F6  00                 	db	0
   305  00A1F7  00                 	db	0
   306  00A1F8  00                 	db	0
   307  00A1F9  00                 	db	0
   308  00A1FA  00                 	db	0
   309  00A1FB  00                 	db	0
   310  00A1FC  00                 	db	0
   311  00A1FD  87                 	db	135
   312                           
   313                           ;initializer for _devAddr
   314  00A1FE  5678               	dw	22136
   315  00A200  1234               	dw	4660
   316                           
   317                           ;initializer for _randx
   318  00A202  0001               	dw	1
   319  00A204  0000               	dw	0
   320                           
   321                           ;initializer for _portNumber
   322  00A206  02                 	db	2
   323                           
   324                           	psect	idataBANK3
   325  00A02C                     __pidataBANK3:
   326                           	opt stack 0
   327                           
   328                           ;initializer for _appSKey
   329  00A02C  DD                 	db	221
   330  00A02D  32                 	db	50
   331  00A02E  54                 	db	84
   332  00A02F  F0                 	db	240
   333  00A030  8D                 	db	141
   334  00A031  55                 	db	85
   335  00A032  D6                 	db	214
   336  00A033  52                 	db	82
   337  00A034  E7                 	db	231
   338  00A035  73                 	db	115
   339  00A036  0B                 	db	11
   340  00A037  BC                 	db	188
   341  00A038  26                 	db	38
   342  00A039  3E                 	db	62
   343  00A03A  0A                 	db	10
   344  00A03B  DA                 	db	218
   345                           
   346                           ;initializer for _nwkSKey
   347  00A03C  75                 	db	117
   348  00A03D  E0                 	db	224
   349  00A03E  66                 	db	102
   350  00A03F  1A                 	db	26
   351  00A040  A0                 	db	160
   352  00A041  BC                 	db	188
   353  00A042  21                 	db	33
   354  00A043  E4                 	db	228
   355  00A044  4B                 	db	75
   356  00A045  57                 	db	87
   357  00A046  21                 	db	33
   358  00A047  B0                 	db	176
   359  00A048  D6                 	db	214
   360  00A049  30                 	db	48
   361  00A04A  F7                 	db	247
   362  00A04B  B2                 	db	178
   363                           
   364                           	psect	mediumconst
   365  00FE66                     __pmediumconst:
   366                           	opt stack 0
   367  00FE66  00                 	db	0
   368  00FE67                     _STable:
   369                           	opt stack 0
   370  00FE67  63                 	db	99
   371  00FE68  7C                 	db	124
   372  00FE69  77                 	db	119
   373  00FE6A  7B                 	db	123
   374  00FE6B  F2                 	db	242
   375  00FE6C  6B                 	db	107
   376  00FE6D  6F                 	db	111
   377  00FE6E  C5                 	db	197
   378  00FE6F  30                 	db	48
   379  00FE70  01                 	db	1
   380  00FE71  67                 	db	103
   381  00FE72  2B                 	db	43
   382  00FE73  FE                 	db	254
   383  00FE74  D7                 	db	215
   384  00FE75  AB                 	db	171
   385  00FE76  76                 	db	118
   386  00FE77  CA                 	db	202
   387  00FE78  82                 	db	130
   388  00FE79  C9                 	db	201
   389  00FE7A  7D                 	db	125
   390  00FE7B  FA                 	db	250
   391  00FE7C  59                 	db	89
   392  00FE7D  47                 	db	71
   393  00FE7E  F0                 	db	240
   394  00FE7F  AD                 	db	173
   395  00FE80  D4                 	db	212
   396  00FE81  A2                 	db	162
   397  00FE82  AF                 	db	175
   398  00FE83  9C                 	db	156
   399  00FE84  A4                 	db	164
   400  00FE85  72                 	db	114
   401  00FE86  C0                 	db	192
   402  00FE87  B7                 	db	183
   403  00FE88  FD                 	db	253
   404  00FE89  93                 	db	147
   405  00FE8A  26                 	db	38
   406  00FE8B  36                 	db	54
   407  00FE8C  3F                 	db	63
   408  00FE8D  F7                 	db	247
   409  00FE8E  CC                 	db	204
   410  00FE8F  34                 	db	52
   411  00FE90  A5                 	db	165
   412  00FE91  E5                 	db	229
   413  00FE92  F1                 	db	241
   414  00FE93  71                 	db	113
   415  00FE94  D8                 	db	216
   416  00FE95  31                 	db	49
   417  00FE96  15                 	db	21
   418  00FE97  04                 	db	4
   419  00FE98  C7                 	db	199
   420  00FE99  23                 	db	35
   421  00FE9A  C3                 	db	195
   422  00FE9B  18                 	db	24
   423  00FE9C  96                 	db	150
   424  00FE9D  05                 	db	5
   425  00FE9E  9A                 	db	154
   426  00FE9F  07                 	db	7
   427  00FEA0  12                 	db	18
   428  00FEA1  80                 	db	128
   429  00FEA2  E2                 	db	226
   430  00FEA3  EB                 	db	235
   431  00FEA4  27                 	db	39
   432  00FEA5  B2                 	db	178
   433  00FEA6  75                 	db	117
   434  00FEA7  09                 	db	9
   435  00FEA8  83                 	db	131
   436  00FEA9  2C                 	db	44
   437  00FEAA  1A                 	db	26
   438  00FEAB  1B                 	db	27
   439  00FEAC  6E                 	db	110
   440  00FEAD  5A                 	db	90
   441  00FEAE  A0                 	db	160
   442  00FEAF  52                 	db	82
   443  00FEB0  3B                 	db	59
   444  00FEB1  D6                 	db	214
   445  00FEB2  B3                 	db	179
   446  00FEB3  29                 	db	41
   447  00FEB4  E3                 	db	227
   448  00FEB5  2F                 	db	47
   449  00FEB6  84                 	db	132
   450  00FEB7  53                 	db	83
   451  00FEB8  D1                 	db	209
   452  00FEB9  00                 	db	0
   453  00FEBA  ED                 	db	237
   454  00FEBB  20                 	db	32
   455  00FEBC  FC                 	db	252
   456  00FEBD  B1                 	db	177
   457  00FEBE  5B                 	db	91
   458  00FEBF  6A                 	db	106
   459  00FEC0  CB                 	db	203
   460  00FEC1  BE                 	db	190
   461  00FEC2  39                 	db	57
   462  00FEC3  4A                 	db	74
   463  00FEC4  4C                 	db	76
   464  00FEC5  58                 	db	88
   465  00FEC6  CF                 	db	207
   466  00FEC7  D0                 	db	208
   467  00FEC8  EF                 	db	239
   468  00FEC9  AA                 	db	170
   469  00FECA  FB                 	db	251
   470  00FECB  43                 	db	67
   471  00FECC  4D                 	db	77
   472  00FECD  33                 	db	51
   473  00FECE  85                 	db	133
   474  00FECF  45                 	db	69
   475  00FED0  F9                 	db	249
   476  00FED1  02                 	db	2
   477  00FED2  7F                 	db	127
   478  00FED3  50                 	db	80
   479  00FED4  3C                 	db	60
   480  00FED5  9F                 	db	159
   481  00FED6  A8                 	db	168
   482  00FED7  51                 	db	81
   483  00FED8  A3                 	db	163
   484  00FED9  40                 	db	64
   485  00FEDA  8F                 	db	143
   486  00FEDB  92                 	db	146
   487  00FEDC  9D                 	db	157
   488  00FEDD  38                 	db	56
   489  00FEDE  F5                 	db	245
   490  00FEDF  BC                 	db	188
   491  00FEE0  B6                 	db	182
   492  00FEE1  DA                 	db	218
   493  00FEE2  21                 	db	33
   494  00FEE3  10                 	db	16
   495  00FEE4  FF                 	db	255
   496  00FEE5  F3                 	db	243
   497  00FEE6  D2                 	db	210
   498  00FEE7  CD                 	db	205
   499  00FEE8  0C                 	db	12
   500  00FEE9  13                 	db	19
   501  00FEEA  EC                 	db	236
   502  00FEEB  5F                 	db	95
   503  00FEEC  97                 	db	151
   504  00FEED  44                 	db	68
   505  00FEEE  17                 	db	23
   506  00FEEF  C4                 	db	196
   507  00FEF0  A7                 	db	167
   508  00FEF1  7E                 	db	126
   509  00FEF2  3D                 	db	61
   510  00FEF3  64                 	db	100
   511  00FEF4  5D                 	db	93
   512  00FEF5  19                 	db	25
   513  00FEF6  73                 	db	115
   514  00FEF7  60                 	db	96
   515  00FEF8  81                 	db	129
   516  00FEF9  4F                 	db	79
   517  00FEFA  DC                 	db	220
   518  00FEFB  22                 	db	34
   519  00FEFC  2A                 	db	42
   520  00FEFD  90                 	db	144
   521  00FEFE  88                 	db	136
   522  00FEFF  46                 	db	70
   523  00FF00  EE                 	db	238
   524  00FF01  B8                 	db	184
   525  00FF02  14                 	db	20
   526  00FF03  DE                 	db	222
   527  00FF04  5E                 	db	94
   528  00FF05  0B                 	db	11
   529  00FF06  DB                 	db	219
   530  00FF07  E0                 	db	224
   531  00FF08  32                 	db	50
   532  00FF09  3A                 	db	58
   533  00FF0A  0A                 	db	10
   534  00FF0B  49                 	db	73
   535  00FF0C  06                 	db	6
   536  00FF0D  24                 	db	36
   537  00FF0E  5C                 	db	92
   538  00FF0F  C2                 	db	194
   539  00FF10  D3                 	db	211
   540  00FF11  AC                 	db	172
   541  00FF12  62                 	db	98
   542  00FF13  91                 	db	145
   543  00FF14  95                 	db	149
   544  00FF15  E4                 	db	228
   545  00FF16  79                 	db	121
   546  00FF17  E7                 	db	231
   547  00FF18  C8                 	db	200
   548  00FF19  37                 	db	55
   549  00FF1A  6D                 	db	109
   550  00FF1B  8D                 	db	141
   551  00FF1C  D5                 	db	213
   552  00FF1D  4E                 	db	78
   553  00FF1E  A9                 	db	169
   554  00FF1F  6C                 	db	108
   555  00FF20  56                 	db	86
   556  00FF21  F4                 	db	244
   557  00FF22  EA                 	db	234
   558  00FF23  65                 	db	101
   559  00FF24  7A                 	db	122
   560  00FF25  AE                 	db	174
   561  00FF26  08                 	db	8
   562  00FF27  BA                 	db	186
   563  00FF28  78                 	db	120
   564  00FF29  25                 	db	37
   565  00FF2A  2E                 	db	46
   566  00FF2B  1C                 	db	28
   567  00FF2C  A6                 	db	166
   568  00FF2D  B4                 	db	180
   569  00FF2E  C6                 	db	198
   570  00FF2F  E8                 	db	232
   571  00FF30  DD                 	db	221
   572  00FF31  74                 	db	116
   573  00FF32  1F                 	db	31
   574  00FF33  4B                 	db	75
   575  00FF34  BD                 	db	189
   576  00FF35  8B                 	db	139
   577  00FF36  8A                 	db	138
   578  00FF37  70                 	db	112
   579  00FF38  3E                 	db	62
   580  00FF39  B5                 	db	181
   581  00FF3A  66                 	db	102
   582  00FF3B  48                 	db	72
   583  00FF3C  03                 	db	3
   584  00FF3D  F6                 	db	246
   585  00FF3E  0E                 	db	14
   586  00FF3F  61                 	db	97
   587  00FF40  35                 	db	53
   588  00FF41  57                 	db	87
   589  00FF42  B9                 	db	185
   590  00FF43  86                 	db	134
   591  00FF44  C1                 	db	193
   592  00FF45  1D                 	db	29
   593  00FF46  9E                 	db	158
   594  00FF47  E1                 	db	225
   595  00FF48  F8                 	db	248
   596  00FF49  98                 	db	152
   597  00FF4A  11                 	db	17
   598  00FF4B  69                 	db	105
   599  00FF4C  D9                 	db	217
   600  00FF4D  8E                 	db	142
   601  00FF4E  94                 	db	148
   602  00FF4F  9B                 	db	155
   603  00FF50  1E                 	db	30
   604  00FF51  87                 	db	135
   605  00FF52  E9                 	db	233
   606  00FF53  CE                 	db	206
   607  00FF54  55                 	db	85
   608  00FF55  28                 	db	40
   609  00FF56  DF                 	db	223
   610  00FF57  8C                 	db	140
   611  00FF58  A1                 	db	161
   612  00FF59  89                 	db	137
   613  00FF5A  0D                 	db	13
   614  00FF5B  BF                 	db	191
   615  00FF5C  E6                 	db	230
   616  00FF5D  42                 	db	66
   617  00FF5E  68                 	db	104
   618  00FF5F  41                 	db	65
   619  00FF60  99                 	db	153
   620  00FF61  2D                 	db	45
   621  00FF62  0F                 	db	15
   622  00FF63  B0                 	db	176
   623  00FF64  54                 	db	84
   624  00FF65  BB                 	db	187
   625  00FF66  16                 	db	22
   626  00FF67                     __end_of_STable:
   627                           	opt stack 0
   628  00FF67                     _maxPayloadSize:
   629                           	opt stack 0
   630  00FF67  33                 	db	51
   631  00FF68  33                 	db	51
   632  00FF69  33                 	db	51
   633  00FF6A  73                 	db	115
   634  00FF6B  F2                 	db	242
   635  00FF6C  F2                 	db	242
   636  00FF6D  F2                 	db	242
   637  00FF6E  38                 	db	56
   638  00FF6F                     __end_of_maxPayloadSize:
   639                           	opt stack 0
   640  00FF6F                     _modulation:
   641                           	opt stack 0
   642  00FF6F  01                 	db	1
   643  00FF70  01                 	db	1
   644  00FF71  01                 	db	1
   645  00FF72  01                 	db	1
   646  00FF73  01                 	db	1
   647  00FF74  01                 	db	1
   648  00FF75  01                 	db	1
   649  00FF76  00                 	db	0
   650  00FF77                     __end_of_modulation:
   651                           	opt stack 0
   652  00FF77                     _rxWindowOffset:
   653                           	opt stack 0
   654  00FF77  DF                 	db	223
   655  00FF78  CE                 	db	206
   656  00FF79  C6                 	db	198
   657  00FF7A  C2                 	db	194
   658  00FF7B  BE                 	db	190
   659  00FF7C  BC                 	db	188
   660  00FF7D  F1                 	db	241
   661  00FF7E  FE                 	db	254
   662  00FF7F                     __end_of_rxWindowOffset:
   663                           	opt stack 0
   664  00FF7F                     _rxWindowSize:
   665                           	opt stack 0
   666  00FF7F  08                 	db	8
   667  00FF80  0A                 	db	10
   668  00FF81  0E                 	db	14
   669  00FF82  1A                 	db	26
   670  00FF83  31                 	db	49
   671  00FF84  58                 	db	88
   672  00FF85  3C                 	db	60
   673  00FF86  08                 	db	8
   674  00FF87                     __end_of_rxWindowSize:
   675                           	opt stack 0
   676  00FF87                     _bandwidth:
   677                           	opt stack 0
   678  00FF87  07                 	db	7
   679  00FF88  07                 	db	7
   680  00FF89  07                 	db	7
   681  00FF8A  07                 	db	7
   682  00FF8B  07                 	db	7
   683  00FF8C  07                 	db	7
   684  00FF8D  08                 	db	8
   685  00FF8E                     __end_of_bandwidth:
   686                           	opt stack 0
   687  00FF8E                     _macEndDevCmdReplyLen:
   688                           	opt stack 0
   689  00FF8E  01                 	db	1
   690  00FF8F  02                 	db	2
   691  00FF90  01                 	db	1
   692  00FF91  02                 	db	2
   693  00FF92  03                 	db	3
   694  00FF93  02                 	db	2
   695  00FF94  01                 	db	1
   696  00FF95                     __end_of_macEndDevCmdReplyLen:
   697                           	opt stack 0
   698  00FF95                     _spreadingFactor:
   699                           	opt stack 0
   700  00FF95  0C                 	db	12
   701  00FF96  0B                 	db	11
   702  00FF97  0A                 	db	10
   703  00FF98  09                 	db	9
   704  00FF99  08                 	db	8
   705  00FF9A  07                 	db	7
   706  00FF9B  07                 	db	7
   707  00FF9C                     __end_of_spreadingFactor:
   708                           	opt stack 0
   709  00FF9C  0A                 	db	10
   710  00FF9D  07                 	db	7
   711  00FF9E  04                 	db	4
   712  00FF9F  01                 	db	1
   713  00FFA0  FE                 	db	254
   714  00FFA1  FB                 	db	251
   715  00FFA2                     __end_of_txPower433:
   716                           	opt stack 0
   717  00FFA2                     _txPower868:
   718                           	opt stack 0
   719  00FFA2  14                 	db	20
   720  00FFA3  0E                 	db	14
   721  00FFA4  0B                 	db	11
   722  00FFA5  08                 	db	8
   723  00FFA6  05                 	db	5
   724  00FFA7  02                 	db	2
   725  00FFA8                     __end_of_txPower868:
   726                           	opt stack 0
   727  00FFA8                     _DefaultChannels433:
   728                           	opt stack 0
   729  00FFA8  B9D8               	dw	47576
   730  00FFAA  19D1               	dw	6609
   731  00FFAC  01                 	db	1
   732  00FFAD  50                 	db	80
   733  00FFAE  012E               	dw	302
   734  00FFB0  0000               	dw	0
   735  00FFB2  0000               	dw	0
   736  00FFB4  01                 	db	1
   737  00FFB5  FF                 	db	255
   738  00FFB6  C718               	dw	50968
   739  00FFB8  19D4               	dw	6612
   740  00FFBA  01                 	db	1
   741  00FFBB  50                 	db	80
   742  00FFBC  012E               	dw	302
   743  00FFBE  0000               	dw	0
   744  00FFC0  0000               	dw	0
   745  00FFC2  01                 	db	1
   746  00FFC3  FF                 	db	255
   747  00FFC4  D458               	dw	54360
   748  00FFC6  19D7               	dw	6615
   749  00FFC8  01                 	db	1
   750  00FFC9  50                 	db	80
   751  00FFCA  012E               	dw	302
   752  00FFCC  0000               	dw	0
   753  00FFCE  0000               	dw	0
   754  00FFD0  01                 	db	1
   755  00FFD1  FF                 	db	255
   756  00FFD2                     __end_of_DefaultChannels433:
   757                           	opt stack 0
   758  00FFD2                     _DefaultChannels868:
   759                           	opt stack 0
   760  00FFD2  27A0               	dw	10144
   761  00FFD4  33BE               	dw	13246
   762  00FFD6  01                 	db	1
   763  00FFD7  50                 	db	80
   764  00FFD8  012E               	dw	302
   765  00FFDA  0000               	dw	0
   766  00FFDC  0000               	dw	0
   767  00FFDE  01                 	db	1
   768  00FFDF  FF                 	db	255
   769  00FFE0  34E0               	dw	13536
   770  00FFE2  33C1               	dw	13249
   771  00FFE4  01                 	db	1
   772  00FFE5  50                 	db	80
   773  00FFE6  012E               	dw	302
   774  00FFE8  0000               	dw	0
   775  00FFEA  0000               	dw	0
   776  00FFEC  01                 	db	1
   777  00FFED  FF                 	db	255
   778  00FFEE  4220               	dw	16928
   779  00FFF0  33C4               	dw	13252
   780  00FFF2  01                 	db	1
   781  00FFF3  50                 	db	80
   782  00FFF4  012E               	dw	302
   783  00FFF6  0000               	dw	0
   784  00FFF8  0000               	dw	0
   785  00FFFA  01                 	db	1
   786  00FFFB  FF                 	db	255
   787  00FFFC                     __end_of_DefaultChannels868:
   788                           	opt stack 0
   789  00FFFC                     _FskSyncWordBuff:
   790                           	opt stack 0
   791  00FFFC  C1                 	db	193
   792  00FFFD  94                 	db	148
   793  00FFFE  C1                 	db	193
   794  00FFFF                     __end_of_FskSyncWordBuff:
   795                           	opt stack 0
   796  00FFFF  00                 	db	0	; dummy byte at the end
   797  0000                     
   798                           	psect	nvCOMRAM
   799  00005E                     __pnvCOMRAM:
   800                           	opt stack 0
   801  00005E                     _timer1ReloadVal:
   802                           	opt stack 0
   803  00005E                     	ds	2
   804                           
   805                           	psect	nvBANK1
   806  0001ED                     __pnvBANK1:
   807                           	opt stack 0
   808  0001ED                     _INT0_InterruptHandler:
   809                           	opt stack 0
   810  0001ED                     	ds	2
   811  0001EF                     _INT1_InterruptHandler:
   812                           	opt stack 0
   813  0001EF                     	ds	2
   814  0001F1                     _INT2_InterruptHandler:
   815                           	opt stack 0
   816  0001F1                     	ds	2
   817  0001F3                     _IOCB4_InterruptHandler:
   818                           	opt stack 0
   819  0001F3                     	ds	2
   820  0001F5                     _IOCB5_InterruptHandler:
   821                           	opt stack 0
   822  0001F5                     	ds	2
   823  0001F7                     _TMR1_InterruptHandler:
   824                           	opt stack 0
   825  0001F7                     	ds	2
   826  0000                     _ANSELA	set	3896
   827  0000                     _ANSELB	set	3897
   828  0000                     _ANSELBbits	set	3897
   829  0000                     _ANSELC	set	3898
   830  0000                     _ANSELCbits	set	3898
   831  0000                     _ANSELD	set	3899
   832  0000                     _ANSELDbits	set	3899
   833  0000                     _ANSELE	set	3900
   834  0000                     _ANSD0	set	31192
   835  0000                     _ANSD1	set	31193
   836  0000                     _ANSD3	set	31195
   837  0000                     _ANSD4	set	31196
   838  0000                     _CCP1MD	set	31216
   839  0000                     _CCP2MD	set	31217
   840  0000                     _CCP3MD	set	31218
   841  0000                     _CCP4MD	set	31219
   842  0000                     _CCP5MD	set	31220
   843  0000                     _CMP1MD	set	31209
   844  0000                     _CMP2MD	set	31210
   845  0000                     _CTMUMD	set	31211
   846  0000                     _MSSP1MD	set	31222
   847  0000                     _MSSP2MD	set	31223
   848  0000                     _TMR2MD	set	31225
   849  0000                     _TMR4MD	set	31227
   850  0000                     _TMR5MD	set	31228
   851  0000                     _TMR6MD	set	31229
   852  0000                     _UART1MD	set	31230
   853  0000                     _UART2MD	set	31231
   854  0000                     _TMR1	set	4046
   855  0000                     _ADCON0bits	set	4034
   856  0000                     _ADCON2bits	set	4032
   857  0000                     _ADRESH	set	4036
   858  0000                     _ADRESL	set	4035
   859  0000                     _INTCON2bits	set	4081
   860  0000                     _INTCON3bits	set	4080
   861  0000                     _INTCONbits	set	4082
   862  0000                     _IOCBbits	set	3938
   863  0000                     _LATA	set	3977
   864  0000                     _LATB	set	3978
   865  0000                     _LATBbits	set	3978
   866  0000                     _LATC	set	3979
   867  0000                     _LATCbits	set	3979
   868  0000                     _LATD	set	3980
   869  0000                     _LATDbits	set	3980
   870  0000                     _LATE	set	3981
   871  0000                     _LATEbits	set	3981
   872  0000                     _OSCCON	set	4051
   873  0000                     _OSCCON2	set	4050
   874  0000                     _OSCTUNE	set	3995
   875  0000                     _PIE1bits	set	3997
   876  0000                     _PIR1bits	set	3998
   877  0000                     _PORTAbits	set	3968
   878  0000                     _PORTBbits	set	3969
   879  0000                     _PORTCbits	set	3970
   880  0000                     _PORTDbits	set	3971
   881  0000                     _RCONbits	set	4048
   882  0000                     _SSP2ADD	set	3950
   883  0000                     _SSP2BUF	set	3951
   884  0000                     _SSP2CON1	set	3948
   885  0000                     _SSP2CON1bits	set	3948
   886  0000                     _SSP2STAT	set	3949
   887  0000                     _SSP2STATbits	set	3949
   888  0000                     _T1CON	set	4045
   889  0000                     _T1CONbits	set	4045
   890  0000                     _T1GCON	set	4044
   891  0000                     _T1GCONbits	set	4044
   892  0000                     _TMR1H	set	4047
   893  0000                     _TMR1L	set	4046
   894  0000                     _TRISA	set	3986
   895  0000                     _TRISAbits	set	3986
   896  0000                     _TRISB	set	3987
   897  0000                     _TRISBbits	set	3987
   898  0000                     _TRISC	set	3988
   899  0000                     _TRISCbits	set	3988
   900  0000                     _TRISD	set	3989
   901  0000                     _TRISDbits	set	3989
   902  0000                     _TRISE	set	3990
   903  0000                     _TRISEbits	set	3990
   904  0000                     _WPUB	set	3937
   905  0000                     _IDLEN	set	32415
   906  0000                     _LATC2	set	31834
   907  0000                     _LATD0	set	31840
   908  0000                     _LATD1	set	31841
   909  0000                     _LATD3	set	31843
   910  0000                     _LATD4	set	31844
   911  0000                     _TMR1ON	set	32360
   912  0000                     _TRISC2	set	31906
   913  0000                     _TRISD0	set	31912
   914  0000                     _TRISD1	set	31913
   915  0000                     _TRISD3	set	31915
   916  0000                     _TRISD4	set	31916
   917                           
   918                           ; #config settings
   919  0000                     
   920                           	psect	cinit
   921  007C3C                     __pcinit:
   922                           	opt stack 0
   923  007C3C                     start_initialization:
   924                           	opt stack 0
   925  007C3C                     __initialization:
   926                           	opt stack 0
   927                           
   928                           ; Initialize objects allocated to BANK3 (32 bytes)
   929                           ; load TBLPTR registers with __pidataBANK3
   930  007C3C  0E2C               	movlw	low __pidataBANK3
   931  007C3E  6EF6               	movwf	tblptrl,c
   932  007C40  0EA0               	movlw	high __pidataBANK3
   933  007C42  6EF7               	movwf	tblptrh,c
   934  007C44  0E00               	movlw	low (__pidataBANK3 shr (0+16))
   935  007C46  6EF8               	movwf	tblptru,c
   936  007C48  EE03  F0A0         	lfsr	0,__pdataBANK3
   937  007C4C  EE20 F020          	lfsr	2,32
   938  007C50                     copy_data0:
   939  007C50  0009               	tblrd		*+
   940  007C52  CFF5 FFEE          	movff	tablat,postinc0
   941  007C56  50DD               	movf	postdec2,w,c
   942  007C58  50D9               	movf	fsr2l,w,c
   943  007C5A  E1FA               	bnz	copy_data0
   944                           
   945                           ; Initialize objects allocated to BANK1 (25 bytes)
   946                           ; load TBLPTR registers with __pidataBANK1
   947  007C5C  0EEE               	movlw	low __pidataBANK1
   948  007C5E  6EF6               	movwf	tblptrl,c
   949  007C60  0EA1               	movlw	high __pidataBANK1
   950  007C62  6EF7               	movwf	tblptrh,c
   951  007C64  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   952  007C66  6EF8               	movwf	tblptru,c
   953  007C68  EE01  F0D4         	lfsr	0,__pdataBANK1
   954  007C6C  EE20 F019          	lfsr	2,25
   955  007C70                     copy_data1:
   956  007C70  0009               	tblrd		*+
   957  007C72  CFF5 FFEE          	movff	tablat,postinc0
   958  007C76  50DD               	movf	postdec2,w,c
   959  007C78  50D9               	movf	fsr2l,w,c
   960  007C7A  E1FA               	bnz	copy_data1
   961                           
   962                           ; Initialize objects allocated to COMRAM (4 bytes)
   963                           ; load TBLPTR registers with __pidataCOMRAM
   964  007C7C  0E4E               	movlw	low __pidataCOMRAM
   965  007C7E  6EF6               	movwf	tblptrl,c
   966  007C80  0EA4               	movlw	high __pidataCOMRAM
   967  007C82  6EF7               	movwf	tblptrh,c
   968  007C84  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   969  007C86  6EF8               	movwf	tblptru,c
   970  007C88  EE00  F05A         	lfsr	0,__pdataCOMRAM
   971  007C8C  EE20 F004          	lfsr	2,4
   972  007C90                     copy_data2:
   973  007C90  0009               	tblrd		*+
   974  007C92  CFF5 FFEE          	movff	tablat,postinc0
   975  007C96  50DD               	movf	postdec2,w,c
   976  007C98  50D9               	movf	fsr2l,w,c
   977  007C9A  E1FA               	bnz	copy_data2
   978                           
   979                           ; Clear objects allocated to BIGRAM (542 bytes)
   980  007C9C  EE04  F0E0         	lfsr	0,__pbssBIGRAM
   981  007CA0  EE22 F01E          	lfsr	2,542
   982  007CA4                     clear_0:
   983  007CA4  6AEE               	clrf	postinc0,c
   984  007CA6  50DD               	movf	postdec2,w,c
   985  007CA8  50D9               	movf	fsr2l,w,c
   986  007CAA  E1FC               	bnz	clear_0
   987  007CAC  50DA               	movf	fsr2h,w,c
   988  007CAE  E1FA               	bnz	clear_0
   989                           
   990                           ; Clear objects allocated to BANK4 (224 bytes)
   991  007CB0  EE04  F000         	lfsr	0,__pbssBANK4
   992  007CB4  0EE0               	movlw	224
   993  007CB6                     clear_1:
   994  007CB6  6AEE               	clrf	postinc0,c
   995  007CB8  06E8               	decf	wreg,f,c
   996  007CBA  E1FD               	bnz	clear_1
   997                           
   998                           ; Clear objects allocated to BANK3 (160 bytes)
   999  007CBC  EE03  F000         	lfsr	0,__pbssBANK3
  1000  007CC0  0EA0               	movlw	160
  1001  007CC2                     clear_2:
  1002  007CC2  6AEE               	clrf	postinc0,c
  1003  007CC4  06E8               	decf	wreg,f,c
  1004  007CC6  E1FD               	bnz	clear_2
  1005                           
  1006                           ; Clear objects allocated to BANK2 (245 bytes)
  1007  007CC8  EE02  F000         	lfsr	0,__pbssBANK2
  1008  007CCC  0EF5               	movlw	245
  1009  007CCE                     clear_3:
  1010  007CCE  6AEE               	clrf	postinc0,c
  1011  007CD0  06E8               	decf	wreg,f,c
  1012  007CD2  E1FD               	bnz	clear_3
  1013                           
  1014                           ; Clear objects allocated to BANK1 (82 bytes)
  1015  007CD4  EE01  F082         	lfsr	0,__pbssBANK1
  1016  007CD8  0E52               	movlw	82
  1017  007CDA                     clear_4:
  1018  007CDA  6AEE               	clrf	postinc0,c
  1019  007CDC  06E8               	decf	wreg,f,c
  1020  007CDE  E1FD               	bnz	clear_4
  1021                           
  1022                           ; Clear objects allocated to BANK0 (3 bytes)
  1023  007CE0  0100               	movlb	0
  1024  007CE2  6BFB               	clrf	(__pbssBANK0+2)& (0+255),b
  1025  007CE4  6BFA               	clrf	(__pbssBANK0+1)& (0+255),b
  1026  007CE6  6BF9               	clrf	__pbssBANK0& (0+255),b
  1027                           
  1028                           ; Clear objects allocated to COMRAM (18 bytes)
  1029  007CE8  EE00  F03C         	lfsr	0,__pbssCOMRAM
  1030  007CEC  0E12               	movlw	18
  1031  007CEE                     clear_5:
  1032  007CEE  6AEE               	clrf	postinc0,c
  1033  007CF0  06E8               	decf	wreg,f,c
  1034  007CF2  E1FD               	bnz	clear_5
  1035  007CF4                     end_of_initialization:
  1036                           	opt stack 0
  1037  007CF4                     __end_of__initialization:
  1038                           	opt stack 0
  1039  007CF4  0100               	movlb	0
  1040  007CF6  EFA9  F036         	goto	_main	;jump to C main() function
  1041                           tblptru	equ	0xFF8
  1042                           tblptrh	equ	0xFF7
  1043                           tblptrl	equ	0xFF6
  1044                           tablat	equ	0xFF5
  1045                           postinc0	equ	0xFEE
  1046                           wreg	equ	0xFE8
  1047                           postdec2	equ	0xFDD
  1048                           fsr2h	equ	0xFDA
  1049                           fsr2l	equ	0xFD9
  1050                           
  1051                           	psect	bssCOMRAM
  1052  00003C                     __pbssCOMRAM:
  1053                           	opt stack 0
  1054  00003C                     _ticksAccounted:
  1055                           	opt stack 0
  1056  00003C                     	ds	4
  1057  000040                     _ticksAdded:
  1058                           	opt stack 0
  1059  000040                     	ds	4
  1060  000044                     TMR_GetDeltaTime@tmrVal:
  1061                           	opt stack 0
  1062  000044                     	ds	2
  1063  000046                     TMR_SwapTimer@oldVal:
  1064                           	opt stack 0
  1065  000046                     	ds	2
  1066  000048                     TMR_SwapTimer@retVal:
  1067                           	opt stack 0
  1068  000048                     	ds	2
  1069  00004A                     __rcon:
  1070                           	opt stack 0
  1071  00004A                     	ds	1
  1072  00004B                     __roundCounter:
  1073                           	opt stack 0
  1074  00004B                     	ds	1
  1075  00004C                     _dioStatus:
  1076                           	opt stack 0
  1077  00004C                     	ds	1
  1078  00004D                     _timerOverflow:
  1079                           	opt stack 0
  1080  00004D                     	ds	1
  1081                           tblptru	equ	0xFF8
  1082                           tblptrh	equ	0xFF7
  1083                           tblptrl	equ	0xFF6
  1084                           tablat	equ	0xFF5
  1085                           postinc0	equ	0xFEE
  1086                           wreg	equ	0xFE8
  1087                           postdec2	equ	0xFDD
  1088                           fsr2h	equ	0xFDA
  1089                           fsr2l	equ	0xFD9
  1090                           
  1091                           	psect	dataCOMRAM
  1092  00005A                     __pdataCOMRAM:
  1093                           	opt stack 0
  1094  00005A                     _ticksToScheduledInterrupt:
  1095                           	opt stack 0
  1096  00005A                     	ds	4
  1097                           tblptru	equ	0xFF8
  1098                           tblptrh	equ	0xFF7
  1099                           tblptrl	equ	0xFF6
  1100                           tablat	equ	0xFF5
  1101                           postinc0	equ	0xFEE
  1102                           wreg	equ	0xFE8
  1103                           postdec2	equ	0xFDD
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           
  1107                           	psect	bssBANK0
  1108  0000F9                     __pbssBANK0:
  1109                           	opt stack 0
  1110  0000F9                     _reloadVal:
  1111                           	opt stack 0
  1112  0000F9                     	ds	2
  1113  0000FB                     _allocatedTimers:
  1114                           	opt stack 0
  1115  0000FB                     	ds	1
  1116                           tblptru	equ	0xFF8
  1117                           tblptrh	equ	0xFF7
  1118                           tblptrl	equ	0xFF6
  1119                           tablat	equ	0xFF5
  1120                           postinc0	equ	0xFEE
  1121                           wreg	equ	0xFE8
  1122                           postdec2	equ	0xFDD
  1123                           fsr2h	equ	0xFDA
  1124                           fsr2l	equ	0xFD9
  1125                           
  1126                           	psect	bssBANK1
  1127  000182                     __pbssBANK1:
  1128                           	opt stack 0
  1129  000182                     TMR_GetDeltaTime@retVal:
  1130                           	opt stack 0
  1131  000182                     	ds	4
  1132  000186                     _rxPayload:
  1133                           	opt stack 0
  1134  000186                     	ds	4
  1135  00018A                     _TimeToSend:
  1136                           	opt stack 0
  1137  00018A                     	ds	1
  1138  00018B                     _localDioStatus:
  1139                           	opt stack 0
  1140  00018B                     	ds	1
  1141  00018C                     _RadioConfiguration:
  1142                           	opt stack 0
  1143  00018C                     	ds	54
  1144  0001C2                     _aesBuffer:
  1145                           	opt stack 0
  1146  0001C2                     	ds	16
  1147  0001D2                     _payload:
  1148                           	opt stack 0
  1149  0001D2                     	ds	2
  1150                           tblptru	equ	0xFF8
  1151                           tblptrh	equ	0xFF7
  1152                           tblptrl	equ	0xFF6
  1153                           tablat	equ	0xFF5
  1154                           postinc0	equ	0xFEE
  1155                           wreg	equ	0xFE8
  1156                           postdec2	equ	0xFDD
  1157                           fsr2h	equ	0xFDA
  1158                           fsr2l	equ	0xFD9
  1159                           
  1160                           	psect	dataBANK1
  1161  0001D4                     __pdataBANK1:
  1162                           	opt stack 0
  1163  0001D4                     GenerateSubkey@F7870:
  1164                           	opt stack 0
  1165  0001D4                     	ds	16
  1166  0001E4                     _devAddr:
  1167                           	opt stack 0
  1168  0001E4                     	ds	4
  1169  0001E8                     _randx:
  1170                           	opt stack 0
  1171  0001E8                     	ds	4
  1172  0001EC                     _portNumber:
  1173                           	opt stack 0
  1174  0001EC                     	ds	1
  1175                           tblptru	equ	0xFF8
  1176                           tblptrh	equ	0xFF7
  1177                           tblptrl	equ	0xFF6
  1178                           tablat	equ	0xFF5
  1179                           postinc0	equ	0xFEE
  1180                           wreg	equ	0xFE8
  1181                           postdec2	equ	0xFDD
  1182                           fsr2h	equ	0xFDA
  1183                           fsr2l	equ	0xFD9
  1184                           
  1185                           	psect	bssBANK2
  1186  000200                     __pbssBANK2:
  1187                           	opt stack 0
  1188  000200                     _loRa:
  1189                           	opt stack 0
  1190  000200                     	ds	245
  1191                           tblptru	equ	0xFF8
  1192                           tblptrh	equ	0xFF7
  1193                           tblptrl	equ	0xFF6
  1194                           tablat	equ	0xFF5
  1195                           postinc0	equ	0xFEE
  1196                           wreg	equ	0xFE8
  1197                           postdec2	equ	0xFDD
  1198                           fsr2h	equ	0xFDA
  1199                           fsr2l	equ	0xFD9
  1200                           
  1201                           	psect	bssBANK3
  1202  000300                     __pbssBANK3:
  1203                           	opt stack 0
  1204  000300                     _swTimers:
  1205                           	opt stack 0
  1206  000300                     	ds	160
  1207                           tblptru	equ	0xFF8
  1208                           tblptrh	equ	0xFF7
  1209                           tblptrl	equ	0xFF6
  1210                           tablat	equ	0xFF5
  1211                           postinc0	equ	0xFEE
  1212                           wreg	equ	0xFE8
  1213                           postdec2	equ	0xFDD
  1214                           fsr2h	equ	0xFDA
  1215                           fsr2l	equ	0xFD9
  1216                           
  1217                           	psect	dataBANK3
  1218  0003A0                     __pdataBANK3:
  1219                           	opt stack 0
  1220  0003A0                     _appSKey:
  1221                           	opt stack 0
  1222  0003A0                     	ds	16
  1223  0003B0                     _nwkSKey:
  1224                           	opt stack 0
  1225  0003B0                     	ds	16
  1226                           tblptru	equ	0xFF8
  1227                           tblptrh	equ	0xFF7
  1228                           tblptrl	equ	0xFF6
  1229                           tablat	equ	0xFF5
  1230                           postinc0	equ	0xFEE
  1231                           wreg	equ	0xFE8
  1232                           postdec2	equ	0xFDD
  1233                           fsr2h	equ	0xFDA
  1234                           fsr2l	equ	0xFD9
  1235                           
  1236                           	psect	bssBANK4
  1237  000400                     __pbssBANK4:
  1238                           	opt stack 0
  1239  000400                     _Channels:
  1240                           	opt stack 0
  1241  000400                     	ds	224
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           postinc0	equ	0xFEE
  1247                           wreg	equ	0xFE8
  1248                           postdec2	equ	0xFDD
  1249                           fsr2h	equ	0xFDA
  1250                           fsr2l	equ	0xFD9
  1251                           
  1252                           	psect	bssBIGRAM
  1253  0004E0                     __pbssBIGRAM:
  1254                           	opt stack 0
  1255  0004E0                     _macBuffer:
  1256                           	opt stack 0
  1257  0004E0                     	ds	271
  1258  0005EF                     _radioBuffer:
  1259                           	opt stack 0
  1260  0005EF                     	ds	271
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           postinc0	equ	0xFEE
  1266                           wreg	equ	0xFE8
  1267                           postdec2	equ	0xFDD
  1268                           fsr2h	equ	0xFDA
  1269                           fsr2l	equ	0xFD9
  1270                           
  1271                           	psect	cstackBANK1
  1272  000100                     __pcstackBANK1:
  1273                           	opt stack 0
  1274  000100                     AESCmac@k2:
  1275                           	opt stack 0
  1276                           
  1277                           ; 16 bytes @ 0x0
  1278  000100                     	ds	16
  1279  000110                     AESCmac@k1:
  1280                           	opt stack 0
  1281                           
  1282                           ; 16 bytes @ 0x10
  1283  000110                     	ds	16
  1284  000120                     AESCmac@mLast:
  1285                           	opt stack 0
  1286                           
  1287                           ; 16 bytes @ 0x20
  1288  000120                     	ds	16
  1289  000130                     AESCmac@padded:
  1290                           	opt stack 0
  1291                           
  1292                           ; 16 bytes @ 0x30
  1293  000130                     	ds	16
  1294  000140                     AESCmac@y:
  1295                           	opt stack 0
  1296                           
  1297                           ; 16 bytes @ 0x40
  1298  000140                     	ds	16
  1299  000150                     AESCmac@x:
  1300                           	opt stack 0
  1301                           
  1302                           ; 16 bytes @ 0x50
  1303  000150                     	ds	16
  1304  000160                     AESCmac@ptr:
  1305                           	opt stack 0
  1306                           
  1307                           ; 2 bytes @ 0x60
  1308  000160                     	ds	2
  1309  000162                     AESCmac@flag:
  1310                           	opt stack 0
  1311                           
  1312                           ; 1 bytes @ 0x62
  1313  000162                     	ds	1
  1314  000163                     AESCmac@n:
  1315                           	opt stack 0
  1316                           
  1317                           ; 1 bytes @ 0x63
  1318  000163                     	ds	1
  1319  000164                     AESCmac@j:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x64
  1323  000164                     	ds	1
  1324  000165                     AESCmac@i:
  1325                           	opt stack 0
  1326                           
  1327                           ; 1 bytes @ 0x65
  1328  000165                     	ds	1
  1329  000166                     LORAWAN_RxDone@fPort:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x66
  1333  000166                     	ds	1
  1334  000167                     LORAWAN_RxDone@channelIndex:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x67
  1338  000167                     	ds	1
  1339  000168                     LORAWAN_RxDone@mhdr:
  1340                           	opt stack 0
  1341                           
  1342                           ; 1 bytes @ 0x68
  1343  000168                     	ds	1
  1344  000169                     LORAWAN_RxDone@extractedMic:
  1345                           	opt stack 0
  1346                           
  1347                           ; 4 bytes @ 0x69
  1348  000169                     	ds	4
  1349  00016D                     LORAWAN_RxDone@bufferIndex:
  1350                           	opt stack 0
  1351                           
  1352                           ; 1 bytes @ 0x6D
  1353  00016D                     	ds	1
  1354  00016E                     LORAWAN_RxDone@temp:
  1355                           	opt stack 0
  1356                           
  1357                           ; 1 bytes @ 0x6E
  1358  00016E                     	ds	1
  1359  00016F                     LORAWAN_RxDone@packet:
  1360                           	opt stack 0
  1361                           
  1362                           ; 2 bytes @ 0x6F
  1363  00016F                     	ds	2
  1364  000171                     LORAWAN_RxDone@computedMic:
  1365                           	opt stack 0
  1366                           
  1367                           ; 4 bytes @ 0x71
  1368  000171                     	ds	4
  1369  000175                     LORAWAN_RxDone@joinAccept:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x75
  1373  000175                     	ds	2
  1374  000177                     LORAWAN_RxDone@frmPayloadLength:
  1375                           	opt stack 0
  1376                           
  1377                           ; 1 bytes @ 0x77
  1378  000177                     	ds	1
  1379  000178                     LORAWAN_RxDone@hdr:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x78
  1383  000178                     	ds	2
  1384  00017A                     ??_RADIO_DIO0:
  1385                           
  1386                           ; 1 bytes @ 0x7A
  1387  00017A                     	ds	2
  1388  00017C                     RADIO_DIO0@dioMapping:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x7C
  1392  00017C                     	ds	1
  1393  00017D                     RADIO_DIO0@opMode:
  1394                           	opt stack 0
  1395                           
  1396                           ; 1 bytes @ 0x7D
  1397  00017D                     	ds	1
  1398  00017E                     main@i:
  1399                           	opt stack 0
  1400                           
  1401                           ; 2 bytes @ 0x7E
  1402  00017E                     	ds	2
  1403  000180                     main@j:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x80
  1407  000180                     	ds	2
  1408                           tblptru	equ	0xFF8
  1409                           tblptrh	equ	0xFF7
  1410                           tblptrl	equ	0xFF6
  1411                           tablat	equ	0xFF5
  1412                           postinc0	equ	0xFEE
  1413                           wreg	equ	0xFE8
  1414                           postdec2	equ	0xFDD
  1415                           fsr2h	equ	0xFDA
  1416                           fsr2l	equ	0xFD9
  1417                           
  1418                           	psect	cstackBANK0
  1419  000060                     __pcstackBANK0:
  1420                           	opt stack 0
  1421  000060                     	ds	4
  1422  000064                     ??_UpdateMinMaxChDataRate:
  1423  000064                     ??_FindSmallestDataRate:
  1424  000064                     ??_CountfOptsLength:
  1425  000064                     ??_ADC_SelChannel:
  1426  000064                     ?_TMR1_ReadTimer:
  1427                           	opt stack 0
  1428  000064                     ?_ExecuteLinkCheck:
  1429                           	opt stack 0
  1430  000064                     ?_ExecuteDutyCycle:
  1431                           	opt stack 0
  1432  000064                     ?_ExecuteDevStatus:
  1433                           	opt stack 0
  1434  000064                     ?___wmul:
  1435                           	opt stack 0
  1436  000064                     ?___awdiv:
  1437                           	opt stack 0
  1438  000064                     ?_GetRx1Freq:
  1439                           	opt stack 0
  1440  000064                     ?___lldiv:
  1441                           	opt stack 0
  1442  000064                     ?___llmod:
  1443                           	opt stack 0
  1444  000064                     SwTimerCreate@retVal:
  1445                           	opt stack 0
  1446  000064                     SwTimerIsRunning@timerId:
  1447                           	opt stack 0
  1448  000064                     SwTimerStop@timerId:
  1449                           	opt stack 0
  1450  000064                     SPI2_Exchange8bit@data:
  1451                           	opt stack 0
  1452  000064                     HALResetPinOutputValue@value:
  1453                           	opt stack 0
  1454  000064                     RADIO_SetLoRaSyncWord@syncWord:
  1455                           	opt stack 0
  1456  000064                     RADIO_SetSpreadingFactor@spreadingFactor:
  1457                           	opt stack 0
  1458  000064                     RADIO_SetOutputPower@power:
  1459                           	opt stack 0
  1460  000064                     RADIO_SetCRC@crc:
  1461                           	opt stack 0
  1462  000064                     RADIO_SetIQInverted@iqInverted:
  1463                           	opt stack 0
  1464  000064                     RADIO_SetBandwidth@bandwidth:
  1465                           	opt stack 0
  1466  000064                     RADIO_SetModulation@modulation:
  1467                           	opt stack 0
  1468  000064                     ValidateDataRate@dataRate:
  1469                           	opt stack 0
  1470  000064                     ValidateTxPower@result:
  1471                           	opt stack 0
  1472  000064                     UpdateDLSettings@dlRx1DrOffset:
  1473                           	opt stack 0
  1474  000064                     UpdateDataRange@dataRangeNew:
  1475                           	opt stack 0
  1476  000064                     UpdateChannelIdStatus@statusNew:
  1477                           	opt stack 0
  1478  000064                     ValidateRxOffset@rxOffset:
  1479                           	opt stack 0
  1480  000064                     ValidateChannelId@allowedForDefaultChannels:
  1481                           	opt stack 0
  1482  000064                     ValidateChannelMaskCntl@result:
  1483                           	opt stack 0
  1484  000064                     UpdateCurrentDataRate@valueNew:
  1485                           	opt stack 0
  1486  000064                     UpdateTxPower@txPowerNew:
  1487                           	opt stack 0
  1488  000064                     UpdateJoinInProgress@state:
  1489                           	opt stack 0
  1490  000064                     INTERRUPT_GetDioStatus@a:
  1491                           	opt stack 0
  1492  000064                     ___abdiv@divisor:
  1493                           	opt stack 0
  1494  000064                     INT1_SetInterruptHandler@InterruptHandler:
  1495                           	opt stack 0
  1496  000064                     INT2_SetInterruptHandler@InterruptHandler:
  1497                           	opt stack 0
  1498  000064                     INT0_SetInterruptHandler@InterruptHandler:
  1499                           	opt stack 0
  1500  000064                     SwTimerSetCallback@callback:
  1501                           	opt stack 0
  1502  000064                     RADIO_SetFrequencyHopPeriod@frequencyHopPeriod:
  1503                           	opt stack 0
  1504  000064                     ExecuteDutyCycle@ptr:
  1505                           	opt stack 0
  1506  000064                     ExecuteDevStatus@ptr:
  1507                           	opt stack 0
  1508  000064                     UpdateDutyCycle@dutyCycleNew:
  1509                           	opt stack 0
  1510  000064                     ValidateChannelMask@channelMask:
  1511                           	opt stack 0
  1512  000064                     TMR1_WriteTimer@timerVal:
  1513                           	opt stack 0
  1514  000064                     TMR1_SetInterruptHandler@InterruptHandler:
  1515                           	opt stack 0
  1516  000064                     FillSubKey@source:
  1517                           	opt stack 0
  1518  000064                     IOCB4_SetInterruptHandler@InterruptHandler:
  1519                           	opt stack 0
  1520  000064                     IOCB5_SetInterruptHandler@InterruptHandler:
  1521                           	opt stack 0
  1522  000064                     ExecuteLinkCheck@ptr:
  1523                           	opt stack 0
  1524  000064                     IncludeMacCommandsResponse@macBuffer:
  1525                           	opt stack 0
  1526  000064                     CheckFlags@hdr:
  1527                           	opt stack 0
  1528  000064                     CheckMcastFlags@hdr:
  1529                           	opt stack 0
  1530  000064                     EncKeySchedule@key:
  1531                           	opt stack 0
  1532  000064                     EncodeShiftRow@stateTable:
  1533                           	opt stack 0
  1534  000064                     ___wmul@multiplier:
  1535                           	opt stack 0
  1536  000064                     ___awdiv@dividend:
  1537                           	opt stack 0
  1538  000064                     memcpy@d1:
  1539                           	opt stack 0
  1540  000064                     memset@p1:
  1541                           	opt stack 0
  1542  000064                     SystemBlockingWaitMs@ms:
  1543                           	opt stack 0
  1544  000064                     RADIO_SetChannelFrequency@frequency:
  1545                           	opt stack 0
  1546  000064                     ValidateFrequency@frequencyNew:
  1547                           	opt stack 0
  1548  000064                     UpdateFrequency@frequencyNew:
  1549                           	opt stack 0
  1550  000064                     LORAWAN_SetDeviceAddress@deviceAddressNew:
  1551                           	opt stack 0
  1552  000064                     UpdateReceiveWindow2Parameters@frequency:
  1553                           	opt stack 0
  1554  000064                     ___lldiv@dividend:
  1555                           	opt stack 0
  1556  000064                     ___llmod@dividend:
  1557                           	opt stack 0
  1558                           
  1559                           ; 4 bytes @ 0x4
  1560  000064                     	ds	1
  1561  000065                     ??_UpdateDataRange:
  1562  000065                     ??_UpdateChannelIdStatus:
  1563  000065                     ??___abdiv:
  1564  000065                     SwTimerIsRunning@isRunning:
  1565                           	opt stack 0
  1566  000065                     HALSPISend@data:
  1567                           	opt stack 0
  1568  000065                     ValidateDataRate@result:
  1569                           	opt stack 0
  1570  000065                     ValidateTxPower@txPowerNew:
  1571                           	opt stack 0
  1572  000065                     UpdateDLSettings@dlRx2Dr:
  1573                           	opt stack 0
  1574  000065                     ValidateRxOffset@result:
  1575                           	opt stack 0
  1576  000065                     ValidateChannelId@result:
  1577                           	opt stack 0
  1578  000065                     ValidateChannelMaskCntl@channelMaskCntl:
  1579                           	opt stack 0
  1580  000065                     UpdateMinMaxChDataRate@i:
  1581                           	opt stack 0
  1582  000065                     FindSmallestDataRate@found:
  1583                           	opt stack 0
  1584  000065                     ADC_SelChannel@c:
  1585                           	opt stack 0
  1586                           
  1587                           ; 1 bytes @ 0x5
  1588  000065                     	ds	1
  1589  000066                     ??_TMR1_ReadTimer:
  1590  000066                     ??_ValidateChannelMask:
  1591  000066                     ??_ExecuteDutyCycle:
  1592  000066                     ??_EncKeySchedule:
  1593  000066                     ?_ADC_Read:
  1594                           	opt stack 0
  1595  000066                     SwTimerSetCallback@callbackParameter:
  1596                           	opt stack 0
  1597  000066                     RADIO_RegisterWrite@value:
  1598                           	opt stack 0
  1599  000066                     RADIO_RegisterRead@reg:
  1600                           	opt stack 0
  1601  000066                     UpdateDataRange@channelId:
  1602                           	opt stack 0
  1603  000066                     UpdateChannelIdStatus@channelId:
  1604                           	opt stack 0
  1605  000066                     ValidateDataRange@result:
  1606                           	opt stack 0
  1607  000066                     ValidateChannelId@channelId:
  1608                           	opt stack 0
  1609  000066                     UpdateDutyCycle@channelId:
  1610                           	opt stack 0
  1611  000066                     LORAWAN_SetCurrentDataRate@valueNew:
  1612                           	opt stack 0
  1613  000066                     FindSmallestDataRate@i:
  1614                           	opt stack 0
  1615  000066                     EncodeShiftRow@temp:
  1616                           	opt stack 0
  1617  000066                     FillSubKey@key:
  1618                           	opt stack 0
  1619  000066                     IncludeMacCommandsResponse@pBufferIndex:
  1620                           	opt stack 0
  1621  000066                     ___wmul@multiplicand:
  1622                           	opt stack 0
  1623  000066                     ___awdiv@divisor:
  1624                           	opt stack 0
  1625  000066                     memcpy@s1:
  1626                           	opt stack 0
  1627  000066                     memset@c:
  1628                           	opt stack 0
  1629                           
  1630                           ; 2 bytes @ 0x6
  1631  000066                     	ds	1
  1632  000067                     SwTimerSetCallback@timerId:
  1633                           	opt stack 0
  1634  000067                     RADIO_RegisterWrite@reg:
  1635                           	opt stack 0
  1636  000067                     RADIO_RegisterRead@readValue:
  1637                           	opt stack 0
  1638  000067                     UpdateDataRange@i:
  1639                           	opt stack 0
  1640  000067                     UpdateChannelIdStatus@i:
  1641                           	opt stack 0
  1642  000067                     ValidateDataRange@dataRangeNew:
  1643                           	opt stack 0
  1644  000067                     FindSmallestDataRate@dataRate:
  1645                           	opt stack 0
  1646  000067                     ___abdiv@counter:
  1647                           	opt stack 0
  1648  000067                     RxDataDone@pData:
  1649                           	opt stack 0
  1650                           
  1651                           ; 2 bytes @ 0x7
  1652  000067                     	ds	1
  1653  000068                     ??_ADC_Read:
  1654  000068                     ??_SystemBlockingWaitMs:
  1655  000068                     RADIO_WritePower@ocp:
  1656                           	opt stack 0
  1657  000068                     RADIO_UnhandledInterrupt@modulation:
  1658                           	opt stack 0
  1659  000068                     LORAWAN_SetChannelIdStatus@statusNew:
  1660                           	opt stack 0
  1661  000068                     ValidateFrequency@result:
  1662                           	opt stack 0
  1663  000068                     ValidateDataRange@dataRateMax:
  1664                           	opt stack 0
  1665  000068                     UpdateFrequency@channelId:
  1666                           	opt stack 0
  1667  000068                     ValidateChannelMask@i:
  1668                           	opt stack 0
  1669  000068                     FillSubKey@size:
  1670                           	opt stack 0
  1671  000068                     UpdateReceiveWindow2Parameters@dataRate:
  1672                           	opt stack 0
  1673  000068                     IncludeMacCommandsResponse@bIncludeInFopts:
  1674                           	opt stack 0
  1675  000068                     ___abdiv@sign:
  1676                           	opt stack 0
  1677  000068                     ___awdiv@counter:
  1678                           	opt stack 0
  1679  000068                     EnableChannels1@channelMask:
  1680                           	opt stack 0
  1681  000068                     TMR1_ReadTimer@readVal:
  1682                           	opt stack 0
  1683  000068                     _EncKeySchedule$3853:
  1684                           	opt stack 0
  1685  000068                     ___wmul@product:
  1686                           	opt stack 0
  1687  000068                     memcpy@n:
  1688                           	opt stack 0
  1689  000068                     memset@n:
  1690                           	opt stack 0
  1691  000068                     ___lldiv@divisor:
  1692                           	opt stack 0
  1693  000068                     ___llmod@divisor:
  1694                           	opt stack 0
  1695                           
  1696                           ; 4 bytes @ 0x8
  1697  000068                     	ds	1
  1698  000069                     ??_FillSubKey:
  1699  000069                     ??_IncludeMacCommandsResponse:
  1700  000069                     ??_RADIO_DIO3:
  1701  000069                     ??_RADIO_DIO4:
  1702  000069                     ??_RADIO_DIO5:
  1703  000069                     RADIO_WriteMode@newModulation:
  1704                           	opt stack 0
  1705  000069                     RADIO_WritePower@paDac:
  1706                           	opt stack 0
  1707  000069                     LORAWAN_SetChannelIdStatus@result:
  1708                           	opt stack 0
  1709  000069                     ExecuteDutyCycle@maxDCycle:
  1710                           	opt stack 0
  1711  000069                     ValidateDataRange@dataRateMin:
  1712                           	opt stack 0
  1713  000069                     RxDataDone@dataLength:
  1714                           	opt stack 0
  1715  000069                     ___abdiv@quotient:
  1716                           	opt stack 0
  1717  000069                     ___awdiv@sign:
  1718                           	opt stack 0
  1719                           
  1720                           ; 1 bytes @ 0x9
  1721  000069                     	ds	1
  1722  00006A                     RADIO_WriteMode@blocking:
  1723                           	opt stack 0
  1724  00006A                     RADIO_WritePower@power:
  1725                           	opt stack 0
  1726  00006A                     RADIO_DIO3@dioMapping:
  1727                           	opt stack 0
  1728  00006A                     RADIO_DIO5@dioMapping:
  1729                           	opt stack 0
  1730  00006A                     LORAWAN_SetChannelIdStatus@channelId:
  1731                           	opt stack 0
  1732  00006A                     EnableChannels1@channelMaskCntl:
  1733                           	opt stack 0
  1734  00006A                     TMR1_ReadTimer@readValHigh:
  1735                           	opt stack 0
  1736  00006A                     FillSubKey@carry:
  1737                           	opt stack 0
  1738  00006A                     UpdateReceiveDelays@delay:
  1739                           	opt stack 0
  1740  00006A                     CountfOptsLength@macCommandLength:
  1741                           	opt stack 0
  1742  00006A                     RxDataDone@status:
  1743                           	opt stack 0
  1744  00006A                     ADC_Read@channel:
  1745                           	opt stack 0
  1746  00006A                     ___abdiv@dividend:
  1747                           	opt stack 0
  1748  00006A                     AESEncode@block:
  1749                           	opt stack 0
  1750  00006A                     ___awdiv@quotient:
  1751                           	opt stack 0
  1752  00006A                     memcpy@d:
  1753                           	opt stack 0
  1754  00006A                     memset@p:
  1755                           	opt stack 0
  1756                           
  1757                           ; 2 bytes @ 0xA
  1758  00006A                     	ds	1
  1759  00006B                     ??_RxDataDone:
  1760  00006B                     ?_ExecuteRxTimingSetup:
  1761                           	opt stack 0
  1762  00006B                     RADIO_WriteMode@currentModulation:
  1763                           	opt stack 0
  1764  00006B                     RADIO_DIO4@dioMapping:
  1765                           	opt stack 0
  1766  00006B                     EnableChannels1@channelIndexMin:
  1767                           	opt stack 0
  1768  00006B                     TMR1_ReadTimer@readValLow:
  1769                           	opt stack 0
  1770  00006B                     FillSubKey@i:
  1771                           	opt stack 0
  1772  00006B                     CountfOptsLength@i:
  1773                           	opt stack 0
  1774  00006B                     ExecuteRxTimingSetup@ptr:
  1775                           	opt stack 0
  1776  00006B                     ADC_Read@result:
  1777                           	opt stack 0
  1778                           
  1779                           ; 2 bytes @ 0xB
  1780  00006B                     	ds	1
  1781  00006C                     ??_LORAWAN_GetMaxPayloadSize:
  1782  00006C                     ?_TMR_SwapTimer:
  1783                           	opt stack 0
  1784  00006C                     ?_TMR_GetDeltaTime:
  1785                           	opt stack 0
  1786  00006C                     RADIO_WriteMode@dioMapping:
  1787                           	opt stack 0
  1788  00006C                     EnableChannels1@channelIndexMax:
  1789                           	opt stack 0
  1790  00006C                     ___llmod@counter:
  1791                           	opt stack 0
  1792  00006C                     TMR_SwapTimer@timerVal:
  1793                           	opt stack 0
  1794  00006C                     AESEncode@masterKey:
  1795                           	opt stack 0
  1796  00006C                     memcpy@s:
  1797                           	opt stack 0
  1798  00006C                     ___lldiv@quotient:
  1799                           	opt stack 0
  1800                           
  1801                           ; 4 bytes @ 0xC
  1802  00006C                     	ds	1
  1803  00006D                     ??_EnableChannels1:
  1804  00006D                     RADIO_WriteMode@currentMode:
  1805                           	opt stack 0
  1806  00006D                     LORAWAN_GetMaxPayloadSize@macCommandsLength:
  1807                           	opt stack 0
  1808  00006D                     ExecuteRxTimingSetup@delay:
  1809                           	opt stack 0
  1810                           
  1811                           ; 1 bytes @ 0xD
  1812  00006D                     	ds	1
  1813  00006E                     ??_AESEncode:
  1814  00006E                     ?_ExtractMic:
  1815                           	opt stack 0
  1816  00006E                     RADIO_WriteMode@newMode:
  1817                           	opt stack 0
  1818  00006E                     InitDefault868Channels@i:
  1819                           	opt stack 0
  1820  00006E                     InitDefault433Channels@i:
  1821                           	opt stack 0
  1822  00006E                     LORAWAN_GetMaxPayloadSize@result:
  1823                           	opt stack 0
  1824  00006E                     RADIO_SetFSKSyncWord@syncWord:
  1825                           	opt stack 0
  1826  00006E                     LORAWAN_SetNetworkSessionKey@networkSessionKeyNew:
  1827                           	opt stack 0
  1828  00006E                     LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew:
  1829                           	opt stack 0
  1830  00006E                     PrepareSessionKeys@sessionKey:
  1831                           	opt stack 0
  1832  00006E                     ExtractMic@buffer:
  1833                           	opt stack 0
  1834  00006E                     TMR_OverrideRemaining@ticksRemaining:
  1835                           	opt stack 0
  1836  00006E                     AssembleEncryptionBlock@frameCounter:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0xE
  1840  00006E                     	ds	1
  1841  00006F                     RADIO_WriteMode@opMode:
  1842                           	opt stack 0
  1843  00006F                     EnableChannels1@i:
  1844                           	opt stack 0
  1845                           
  1846                           ; 1 bytes @ 0xF
  1847  00006F                     	ds	1
  1848  000070                     ??_TMR_GetDeltaTime:
  1849  000070                     ?_RADIO_ReadRandom:
  1850                           	opt stack 0
  1851  000070                     RADIO_SetFSKSyncWord@syncWordLen:
  1852                           	opt stack 0
  1853  000070                     ExtractMic@bufferLength:
  1854                           	opt stack 0
  1855  000070                     ___lldiv@counter:
  1856                           	opt stack 0
  1857  000070                     EnableChannels@channelMask:
  1858                           	opt stack 0
  1859  000070                     PrepareSessionKeys@appNonce:
  1860                           	opt stack 0
  1861                           
  1862                           ; 2 bytes @ 0x10
  1863  000070                     	ds	1
  1864  000071                     IncludeMacCommandsResponse@i:
  1865                           	opt stack 0
  1866  000071                     SwTimerSetTimeout@timeout:
  1867                           	opt stack 0
  1868  000071                     RADIO_WriteFrequency@frequency:
  1869                           	opt stack 0
  1870  000071                     RADIO_WriteFSKFrequencyDeviation@frequencyDeviation:
  1871                           	opt stack 0
  1872  000071                     RADIO_WriteFSKBitRate@bitRate:
  1873                           	opt stack 0
  1874  000071                     ConfigureRadio@freq:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x11
  1878  000071                     	ds	1
  1879  000072                     ??_ExtractMic:
  1880  000072                     ??_TMR_OverrideRemaining:
  1881  000072                     ??_RADIO_ReadRandom:
  1882  000072                     EnableChannels@channelMaskCntl:
  1883                           	opt stack 0
  1884  000072                     IncludeMacCommandsResponse@bufferIndex:
  1885                           	opt stack 0
  1886  000072                     AssembleEncryptionBlock@blockId:
  1887                           	opt stack 0
  1888  000072                     PrepareSessionKeys@networkId:
  1889                           	opt stack 0
  1890                           
  1891                           ; 2 bytes @ 0x12
  1892  000072                     	ds	1
  1893  000073                     ?_ExecuteLinkAdr:
  1894                           	opt stack 0
  1895  000073                     AssembleEncryptionBlock@firstByte:
  1896                           	opt stack 0
  1897  000073                     RADIO_ReadRandom@retVal:
  1898                           	opt stack 0
  1899  000073                     ExecuteLinkAdr@ptr:
  1900                           	opt stack 0
  1901                           
  1902                           ; 2 bytes @ 0x13
  1903  000073                     	ds	1
  1904  000074                     PrepareSessionKeys@index:
  1905                           	opt stack 0
  1906  000074                     AssembleEncryptionBlock@multicastStatus:
  1907                           	opt stack 0
  1908  000074                     TMR_OverrideRemaining@tmrVal:
  1909                           	opt stack 0
  1910                           
  1911                           ; 2 bytes @ 0x14
  1912  000074                     	ds	1
  1913  000075                     ??_SwTimerSetTimeout:
  1914  000075                     ??_ExecuteLinkAdr:
  1915  000075                     RADIO_ReadRandom@i:
  1916                           	opt stack 0
  1917  000075                     ConfigureRadio@dataRate:
  1918                           	opt stack 0
  1919  000075                     AssembleEncryptionBlock@dir:
  1920                           	opt stack 0
  1921  000075                     RADIO_WriteFrequency@num_mod:
  1922                           	opt stack 0
  1923  000075                     RADIO_WriteFSKFrequencyDeviation@num:
  1924                           	opt stack 0
  1925  000075                     RADIO_WriteFSKBitRate@num:
  1926                           	opt stack 0
  1927                           
  1928                           ; 4 bytes @ 0x15
  1929  000075                     	ds	1
  1930  000076                     AssembleEncryptionBlock@bufferIndex:
  1931                           	opt stack 0
  1932  000076                     TMR_OverrideRemaining@oldReloadVal:
  1933                           	opt stack 0
  1934  000076                     srand@x:
  1935                           	opt stack 0
  1936  000076                     ConfigureRadioTx@freq:
  1937                           	opt stack 0
  1938  000076                     ConfigureRadioRx@freq:
  1939                           	opt stack 0
  1940  000076                     ExtractMic@mic:
  1941                           	opt stack 0
  1942  000076                     AESEncode@key:
  1943                           	opt stack 0
  1944                           
  1945                           ; 16 bytes @ 0x16
  1946  000076                     	ds	1
  1947  000077                     ExecuteLinkAdr@channelMask:
  1948                           	opt stack 0
  1949                           
  1950                           ; 2 bytes @ 0x17
  1951  000077                     	ds	1
  1952  000078                     
  1953                           ; 1 bytes @ 0x18
  1954  000078                     	ds	1
  1955  000079                     SwTimerSetTimeout@timerId:
  1956                           	opt stack 0
  1957  000079                     ExecuteLinkAdr@txPower:
  1958                           	opt stack 0
  1959  000079                     RADIO_WriteFrequency@num:
  1960                           	opt stack 0
  1961                           
  1962                           ; 4 bytes @ 0x19
  1963  000079                     	ds	1
  1964  00007A                     ConfigureRadioTx@dataRate:
  1965                           	opt stack 0
  1966  00007A                     ConfigureRadioRx@dataRate:
  1967                           	opt stack 0
  1968  00007A                     ExecuteLinkAdr@redundancy:
  1969                           	opt stack 0
  1970                           
  1971                           ; 2 bytes @ 0x1A
  1972  00007A                     	ds	1
  1973  00007B                     ConfigureRadioTx@txPower:
  1974                           	opt stack 0
  1975                           
  1976                           ; 1 bytes @ 0x1B
  1977  00007B                     	ds	1
  1978  00007C                     ExecuteLinkAdr@dataRate:
  1979                           	opt stack 0
  1980                           
  1981                           ; 1 bytes @ 0x1C
  1982  00007C                     	ds	1
  1983  00007D                     RADIO_FHSSChangeChannel@irqFlags:
  1984                           	opt stack 0
  1985  00007D                     RADIO_Init@radioBuffer:
  1986                           	opt stack 0
  1987                           
  1988                           ; 2 bytes @ 0x1D
  1989  00007D                     	ds	1
  1990  00007E                     ??_RADIO_DIO2:
  1991                           
  1992                           ; 1 bytes @ 0x1E
  1993  00007E                     	ds	1
  1994  00007F                     RADIO_DIO2@opMode:
  1995                           	opt stack 0
  1996  00007F                     RADIO_Init@frequency:
  1997                           	opt stack 0
  1998                           
  1999                           ; 4 bytes @ 0x1F
  2000  00007F                     	ds	1
  2001  000080                     RADIO_DIO2@dioMapping:
  2002                           	opt stack 0
  2003                           
  2004                           ; 1 bytes @ 0x20
  2005  000080                     	ds	3
  2006  000083                     ??_RADIO_Init:
  2007                           
  2008                           ; 1 bytes @ 0x23
  2009  000083                     	ds	1
  2010  000084                     ?_SwTimersInterrupt:
  2011                           	opt stack 0
  2012                           
  2013                           ; 4 bytes @ 0x24
  2014  000084                     	ds	2
  2015  000086                     _AESEncode$3867:
  2016                           	opt stack 0
  2017                           
  2018                           ; 2 bytes @ 0x26
  2019  000086                     	ds	2
  2020  000088                     _AESEncode$3868:
  2021                           	opt stack 0
  2022                           
  2023                           ; 2 bytes @ 0x28
  2024  000088                     	ds	2
  2025  00008A                     _AESEncode$3869:
  2026                           	opt stack 0
  2027                           
  2028                           ; 2 bytes @ 0x2A
  2029  00008A                     	ds	2
  2030  00008C                     AESEncode@aux:
  2031                           	opt stack 0
  2032  00008C                     SwTimersInterrupt@timeElapsed:
  2033                           	opt stack 0
  2034                           
  2035                           ; 4 bytes @ 0x2C
  2036  00008C                     	ds	1
  2037  00008D                     AESEncode@aux2:
  2038                           	opt stack 0
  2039                           
  2040                           ; 1 bytes @ 0x2D
  2041  00008D                     	ds	1
  2042  00008E                     AESEncode@aux1:
  2043                           	opt stack 0
  2044                           
  2045                           ; 1 bytes @ 0x2E
  2046  00008E                     	ds	1
  2047  00008F                     AESEncode@aux3:
  2048                           	opt stack 0
  2049                           
  2050                           ; 1 bytes @ 0x2F
  2051  00008F                     	ds	1
  2052  000090                     AESEncode@i:
  2053                           	opt stack 0
  2054  000090                     SwTimersInterrupt@ticksToNextTimerEvent:
  2055                           	opt stack 0
  2056                           
  2057                           ; 4 bytes @ 0x30
  2058  000090                     	ds	1
  2059  000091                     AESEncodeLoRa@block:
  2060                           	opt stack 0
  2061                           
  2062                           ; 2 bytes @ 0x31
  2063  000091                     	ds	2
  2064  000093                     AESEncodeLoRa@key:
  2065                           	opt stack 0
  2066                           
  2067                           ; 2 bytes @ 0x33
  2068  000093                     	ds	1
  2069  000094                     SwTimersInterrupt@i:
  2070                           	opt stack 0
  2071                           
  2072                           ; 1 bytes @ 0x34
  2073  000094                     	ds	1
  2074  000095                     ?_SwTimerReadValue:
  2075                           	opt stack 0
  2076  000095                     AESEncodeLoRa@useKey:
  2077                           	opt stack 0
  2078                           
  2079                           ; 16 bytes @ 0x35
  2080  000095                     	ds	4
  2081  000099                     SwTimerReadValue@ticksCount:
  2082                           	opt stack 0
  2083  000099                     SwTimerStart@ticksRemaining:
  2084                           	opt stack 0
  2085                           
  2086                           ; 4 bytes @ 0x39
  2087  000099                     	ds	4
  2088  00009D                     SwTimerReadValue@timerId:
  2089                           	opt stack 0
  2090  00009D                     SwTimerStart@timerId:
  2091                           	opt stack 0
  2092                           
  2093                           ; 1 bytes @ 0x3D
  2094  00009D                     	ds	1
  2095  00009E                     ??_UpdateRetransmissionAckTimeoutState:
  2096  00009E                     ??_StartReTxTimer:
  2097  00009E                     ?___lmul:
  2098                           	opt stack 0
  2099  00009E                     ___lmul@multiplier:
  2100                           	opt stack 0
  2101                           
  2102                           ; 4 bytes @ 0x3E
  2103  00009E                     	ds	4
  2104  0000A2                     StartReTxTimer@minim:
  2105                           	opt stack 0
  2106  0000A2                     ___lmul@multiplicand:
  2107                           	opt stack 0
  2108                           
  2109                           ; 4 bytes @ 0x42
  2110  0000A2                     	ds	3
  2111  0000A5                     GenerateSubkey@key:
  2112                           	opt stack 0
  2113  0000A5                     ComputeSessionKeys@joinAcceptBuffer:
  2114                           	opt stack 0
  2115  0000A5                     EncryptFRMPayload@buffer:
  2116                           	opt stack 0
  2117                           
  2118                           ; 2 bytes @ 0x45
  2119  0000A5                     	ds	1
  2120  0000A6                     StartReTxTimer@i:
  2121                           	opt stack 0
  2122  0000A6                     ___lmul@product:
  2123                           	opt stack 0
  2124                           
  2125                           ; 4 bytes @ 0x46
  2126  0000A6                     	ds	1
  2127  0000A7                     EncryptFRMPayload@bufferLength:
  2128                           	opt stack 0
  2129  0000A7                     GenerateSubkey@k1:
  2130                           	opt stack 0
  2131                           
  2132                           ; 2 bytes @ 0x47
  2133  0000A7                     	ds	1
  2134  0000A8                     EncryptFRMPayload@dir:
  2135                           	opt stack 0
  2136                           
  2137                           ; 1 bytes @ 0x48
  2138  0000A8                     	ds	1
  2139  0000A9                     GenerateSubkey@k2:
  2140                           	opt stack 0
  2141  0000A9                     EncryptFRMPayload@frameCounter:
  2142                           	opt stack 0
  2143                           
  2144                           ; 4 bytes @ 0x49
  2145  0000A9                     	ds	1
  2146  0000AA                     ?_rand:
  2147                           	opt stack 0
  2148  0000AA                     ?_ExecuteNewChannel:
  2149                           	opt stack 0
  2150  0000AA                     ?_ExecuteRxParamSetupReq:
  2151                           	opt stack 0
  2152  0000AA                     RADIO_WriteConfiguration@symbolTimeout:
  2153                           	opt stack 0
  2154  0000AA                     ExecuteNewChannel@ptr:
  2155                           	opt stack 0
  2156  0000AA                     ExecuteRxParamSetupReq@ptr:
  2157                           	opt stack 0
  2158  0000AA                     UpdateCfList@joinAccept:
  2159                           	opt stack 0
  2160  0000AA                     LORAWAN_LinkCheckConfigure@period:
  2161                           	opt stack 0
  2162                           
  2163                           ; 2 bytes @ 0x4A
  2164  0000AA                     	ds	1
  2165  0000AB                     ??_GenerateSubkey:
  2166                           
  2167                           ; 1 bytes @ 0x4B
  2168  0000AB                     	ds	1
  2169  0000AC                     ??_LORAWAN_LinkCheckConfigure:
  2170  0000AC                     ??_RADIO_WriteConfiguration:
  2171  0000AC                     ??_ExecuteNewChannel:
  2172  0000AC                     ??_ExecuteRxParamSetupReq:
  2173  0000AC                     ?___lwmod:
  2174                           	opt stack 0
  2175  0000AC                     UpdateCfList@bufferLength:
  2176                           	opt stack 0
  2177  0000AC                     ___lwmod@dividend:
  2178                           	opt stack 0
  2179  0000AC                     GenerateSubkey@const_Rb:
  2180                           	opt stack 0
  2181                           
  2182                           ; 16 bytes @ 0x4C
  2183  0000AC                     	ds	1
  2184  0000AD                     EncryptFRMPayload@key:
  2185                           	opt stack 0
  2186  0000AD                     UpdateCfList@frequency:
  2187                           	opt stack 0
  2188                           
  2189                           ; 4 bytes @ 0x4D
  2190  0000AD                     	ds	1
  2191  0000AE                     ExecuteNewChannel@drRange:
  2192                           	opt stack 0
  2193  0000AE                     ___lwmod@divisor:
  2194                           	opt stack 0
  2195  0000AE                     ExecuteRxParamSetupReq@frequency:
  2196                           	opt stack 0
  2197                           
  2198                           ; 4 bytes @ 0x4E
  2199  0000AE                     	ds	1
  2200  0000AF                     RADIO_WriteConfiguration@i:
  2201                           	opt stack 0
  2202  0000AF                     EncryptFRMPayload@macBufferIndex:
  2203                           	opt stack 0
  2204  0000AF                     ExecuteNewChannel@frequency:
  2205                           	opt stack 0
  2206                           
  2207                           ; 4 bytes @ 0x4F
  2208  0000AF                     	ds	1
  2209  0000B0                     ___lwmod@counter:
  2210                           	opt stack 0
  2211  0000B0                     EncryptFRMPayload@bufferToBeEncrypted:
  2212                           	opt stack 0
  2213  0000B0                     RADIO_WriteConfiguration@tempValue:
  2214                           	opt stack 0
  2215  0000B0                     _LORAWAN_LinkCheckConfigure$3273:
  2216                           	opt stack 0
  2217                           
  2218                           ; 4 bytes @ 0x50
  2219  0000B0                     	ds	1
  2220  0000B1                     ?_Random:
  2221                           	opt stack 0
  2222  0000B1                     UpdateCfList@channelIndex:
  2223                           	opt stack 0
  2224  0000B1                     Random@max:
  2225                           	opt stack 0
  2226                           
  2227                           ; 2 bytes @ 0x51
  2228  0000B1                     	ds	1
  2229  0000B2                     ExecuteRxParamSetupReq@dlSettings:
  2230                           	opt stack 0
  2231  0000B2                     UpdateCfList@i:
  2232                           	opt stack 0
  2233  0000B2                     EncryptFRMPayload@multicastStatus:
  2234                           	opt stack 0
  2235                           
  2236                           ; 1 bytes @ 0x52
  2237  0000B2                     	ds	1
  2238  0000B3                     ??_EncryptFRMPayload:
  2239  0000B3                     ExecuteNewChannel@channelIndex:
  2240                           	opt stack 0
  2241  0000B3                     SearchAvailableChannel@transmissionType:
  2242                           	opt stack 0
  2243                           
  2244                           ; 1 bytes @ 0x53
  2245  0000B3                     	ds	1
  2246  0000B4                     ?_MacExecuteCommands:
  2247                           	opt stack 0
  2248  0000B4                     RADIO_WriteConfiguration@regValue:
  2249                           	opt stack 0
  2250  0000B4                     LORAWAN_LinkCheckConfigure@iCtr:
  2251                           	opt stack 0
  2252  0000B4                     SearchAvailableChannel@channelIndex:
  2253                           	opt stack 0
  2254  0000B4                     MacExecuteCommands@buffer:
  2255                           	opt stack 0
  2256                           
  2257                           ; 2 bytes @ 0x54
  2258  0000B4                     	ds	1
  2259  0000B5                     ?_RADIO_Transmit:
  2260                           	opt stack 0
  2261  0000B5                     ?_RADIO_ReceiveStart:
  2262                           	opt stack 0
  2263  0000B5                     LORAWAN_Reset@ismBandNew:
  2264                           	opt stack 0
  2265  0000B5                     RADIO_Transmit@buffer:
  2266                           	opt stack 0
  2267  0000B5                     RADIO_ReceiveStart@rxWindowSize:
  2268                           	opt stack 0
  2269                           
  2270                           ; 2 bytes @ 0x55
  2271  0000B5                     	ds	1
  2272  0000B6                     ??_SearchAvailableChannel:
  2273  0000B6                     MacExecuteCommands@fOptsLen:
  2274                           	opt stack 0
  2275  0000B6                     LORAWAN_Init@RxPayload:
  2276                           	opt stack 0
  2277                           
  2278                           ; 2 bytes @ 0x56
  2279  0000B6                     	ds	1
  2280  0000B7                     ??_MacExecuteCommands:
  2281  0000B7                     ??_RADIO_ReceiveStart:
  2282  0000B7                     RADIO_Transmit@bufferLen:
  2283                           	opt stack 0
  2284                           
  2285                           ; 1 bytes @ 0x57
  2286  0000B7                     	ds	1
  2287  0000B8                     ??_RADIO_Transmit:
  2288  0000B8                     EncryptFRMPayload@k:
  2289                           	opt stack 0
  2290  0000B8                     LORAWAN_Init@RxJoinResponse:
  2291                           	opt stack 0
  2292                           
  2293                           ; 2 bytes @ 0x58
  2294  0000B8                     	ds	1
  2295  0000B9                     MacExecuteCommands@done:
  2296                           	opt stack 0
  2297  0000B9                     EncryptFRMPayload@i:
  2298                           	opt stack 0
  2299                           
  2300                           ; 1 bytes @ 0x59
  2301  0000B9                     	ds	1
  2302  0000BA                     SearchAvailableChannel@randomNumberCopy:
  2303                           	opt stack 0
  2304  0000BA                     EncryptFRMPayload@j:
  2305                           	opt stack 0
  2306  0000BA                     MacExecuteCommands@ptr:
  2307                           	opt stack 0
  2308                           
  2309                           ; 2 bytes @ 0x5A
  2310  0000BA                     	ds	1
  2311  0000BB                     SearchAvailableChannel@result:
  2312                           	opt stack 0
  2313  0000BB                     _RADIO_ReceiveStart$1195:
  2314                           	opt stack 0
  2315                           
  2316                           ; 4 bytes @ 0x5B
  2317  0000BB                     	ds	1
  2318  0000BC                     SearchAvailableChannel@maxChannels:
  2319                           	opt stack 0
  2320  0000BC                     _RADIO_Transmit$1190:
  2321                           	opt stack 0
  2322  0000BC                     GenerateSubkey@l:
  2323                           	opt stack 0
  2324                           
  2325                           ; 16 bytes @ 0x5C
  2326  0000BC                     	ds	1
  2327  0000BD                     SearchAvailableChannel@randomNumber:
  2328                           	opt stack 0
  2329                           
  2330                           ; 1 bytes @ 0x5D
  2331  0000BD                     	ds	1
  2332  0000BE                     SearchAvailableChannel@i:
  2333                           	opt stack 0
  2334                           
  2335                           ; 1 bytes @ 0x5E
  2336  0000BE                     	ds	1
  2337  0000BF                     SelectChannelForTransmission@transmissionType:
  2338                           	opt stack 0
  2339  0000BF                     LORAWAN_TxDone@timeOnAir:
  2340                           	opt stack 0
  2341                           
  2342                           ; 2 bytes @ 0x5F
  2343  0000BF                     	ds	1
  2344  0000C0                     SelectChannelForTransmission@result:
  2345                           	opt stack 0
  2346  0000C0                     _RADIO_Transmit$1192:
  2347                           	opt stack 0
  2348                           
  2349                           ; 4 bytes @ 0x60
  2350  0000C0                     	ds	1
  2351  0000C1                     ??_LORAWAN_TxDone:
  2352  0000C1                     SelectChannelForTransmission@channelIndex:
  2353                           	opt stack 0
  2354                           
  2355                           ; 1 bytes @ 0x61
  2356  0000C1                     	ds	3
  2357  0000C4                     RADIO_Transmit@regValue:
  2358                           	opt stack 0
  2359                           
  2360                           ; 1 bytes @ 0x64
  2361  0000C4                     	ds	1
  2362  0000C5                     RADIO_Transmit@i:
  2363                           	opt stack 0
  2364                           
  2365                           ; 1 bytes @ 0x65
  2366  0000C5                     	ds	1
  2367  0000C6                     ??_LORAWAN_RxTimeout:
  2368                           
  2369                           ; 1 bytes @ 0x66
  2370  0000C6                     	ds	4
  2371  0000CA                     LORAWAN_RxTimeout@minim:
  2372                           	opt stack 0
  2373                           
  2374                           ; 4 bytes @ 0x6A
  2375  0000CA                     	ds	2
  2376  0000CC                     GenerateSubkey@i:
  2377                           	opt stack 0
  2378                           
  2379                           ; 1 bytes @ 0x6C
  2380  0000CC                     	ds	1
  2381  0000CD                     AESCmac@key:
  2382                           	opt stack 0
  2383  0000CD                     _LORAWAN_TxDone$2088:
  2384                           	opt stack 0
  2385                           
  2386                           ; 4 bytes @ 0x6D
  2387  0000CD                     	ds	1
  2388  0000CE                     LORAWAN_RxTimeout@i:
  2389                           	opt stack 0
  2390                           
  2391                           ; 1 bytes @ 0x6E
  2392  0000CE                     	ds	1
  2393  0000CF                     ??_RADIO_DIO1:
  2394  0000CF                     AESCmac@output:
  2395                           	opt stack 0
  2396                           
  2397                           ; 2 bytes @ 0x6F
  2398  0000CF                     	ds	1
  2399  0000D0                     RADIO_DIO1@dioMapping:
  2400                           	opt stack 0
  2401                           
  2402                           ; 1 bytes @ 0x70
  2403  0000D0                     	ds	1
  2404  0000D1                     AESCmac@input:
  2405                           	opt stack 0
  2406  0000D1                     _LORAWAN_TxDone$2089:
  2407                           	opt stack 0
  2408                           
  2409                           ; 4 bytes @ 0x71
  2410  0000D1                     	ds	2
  2411  0000D3                     AESCmac@size:
  2412                           	opt stack 0
  2413                           
  2414                           ; 1 bytes @ 0x73
  2415  0000D3                     	ds	1
  2416  0000D4                     ??_AESCmac:
  2417                           
  2418                           ; 1 bytes @ 0x74
  2419  0000D4                     	ds	1
  2420  0000D5                     LORAWAN_TxDone@found:
  2421                           	opt stack 0
  2422                           
  2423                           ; 1 bytes @ 0x75
  2424  0000D5                     	ds	1
  2425  0000D6                     LORAWAN_TxDone@delta:
  2426                           	opt stack 0
  2427                           
  2428                           ; 4 bytes @ 0x76
  2429  0000D6                     	ds	4
  2430  0000DA                     _LORAWAN_TxDone$6297:
  2431                           	opt stack 0
  2432                           
  2433                           ; 4 bytes @ 0x7A
  2434  0000DA                     	ds	1
  2435  0000DB                     ?_ComputeMic:
  2436                           	opt stack 0
  2437  0000DB                     AssemblePacket@port:
  2438                           	opt stack 0
  2439  0000DB                     ComputeMic@key:
  2440                           	opt stack 0
  2441                           
  2442                           ; 2 bytes @ 0x7B
  2443  0000DB                     	ds	1
  2444  0000DC                     AssemblePacket@buffer:
  2445                           	opt stack 0
  2446                           
  2447                           ; 2 bytes @ 0x7C
  2448  0000DC                     	ds	1
  2449  0000DD                     ComputeMic@buffer:
  2450                           	opt stack 0
  2451                           
  2452                           ; 2 bytes @ 0x7D
  2453  0000DD                     	ds	1
  2454  0000DE                     AssemblePacket@bufferLength:
  2455                           	opt stack 0
  2456  0000DE                     LORAWAN_TxDone@ticks:
  2457                           	opt stack 0
  2458                           
  2459                           ; 4 bytes @ 0x7E
  2460  0000DE                     	ds	1
  2461  0000DF                     ComputeMic@bufferLength:
  2462                           	opt stack 0
  2463                           
  2464                           ; 1 bytes @ 0x7F
  2465  0000DF                     	ds	1
  2466  0000E0                     ??_AssemblePacket:
  2467  0000E0                     ComputeMic@mic:
  2468                           	opt stack 0
  2469                           
  2470                           ; 4 bytes @ 0x80
  2471  0000E0                     	ds	2
  2472  0000E2                     AssemblePacket@confirmed:
  2473                           	opt stack 0
  2474  0000E2                     LORAWAN_TxDone@minim:
  2475                           	opt stack 0
  2476                           
  2477                           ; 4 bytes @ 0x82
  2478  0000E2                     	ds	1
  2479  0000E3                     AssemblePacket@mhdr:
  2480                           	opt stack 0
  2481                           
  2482                           ; 1 bytes @ 0x83
  2483  0000E3                     	ds	1
  2484  0000E4                     ??_PrepareJoinRequestFrame:
  2485  0000E4                     AssemblePacket@fCtrl:
  2486                           	opt stack 0
  2487                           
  2488                           ; 1 bytes @ 0x84
  2489  0000E4                     	ds	1
  2490  0000E5                     AssemblePacket@macCmdIdx:
  2491                           	opt stack 0
  2492                           
  2493                           ; 1 bytes @ 0x85
  2494  0000E5                     	ds	1
  2495  0000E6                     LORAWAN_TxDone@i:
  2496                           	opt stack 0
  2497  0000E6                     AssemblePacket@bufferIndex:
  2498                           	opt stack 0
  2499                           
  2500                           ; 1 bytes @ 0x86
  2501  0000E6                     	ds	1
  2502  0000E7                     ??_RADIO_TxDone:
  2503  0000E7                     ??_RADIO_FSKPacketSent:
  2504  0000E7                     LORAWAN_Send@port:
  2505                           	opt stack 0
  2506                           
  2507                           ; 1 bytes @ 0x87
  2508  0000E7                     	ds	1
  2509  0000E8                     LORAWAN_Send@buffer:
  2510                           	opt stack 0
  2511  0000E8                     PrepareJoinRequestFrame@mic:
  2512                           	opt stack 0
  2513                           
  2514                           ; 4 bytes @ 0x88
  2515  0000E8                     	ds	2
  2516  0000EA                     LORAWAN_Send@bufferLength:
  2517                           	opt stack 0
  2518                           
  2519                           ; 1 bytes @ 0x8A
  2520  0000EA                     	ds	1
  2521  0000EB                     ??_LORAWAN_Send:
  2522  0000EB                     RADIO_TxDone@timeOnAir:
  2523                           	opt stack 0
  2524  0000EB                     RADIO_FSKPacketSent@timeOnAir:
  2525                           	opt stack 0
  2526                           
  2527                           ; 4 bytes @ 0x8B
  2528  0000EB                     	ds	1
  2529  0000EC                     LORAWAN_Send@result:
  2530                           	opt stack 0
  2531  0000EC                     PrepareJoinRequestFrame@mhdr:
  2532                           	opt stack 0
  2533                           
  2534                           ; 1 bytes @ 0x8C
  2535  0000EC                     	ds	1
  2536  0000ED                     LORAWAN_Send@confirmed:
  2537                           	opt stack 0
  2538  0000ED                     PrepareJoinRequestFrame@iCtr:
  2539                           	opt stack 0
  2540                           
  2541                           ; 1 bytes @ 0x8D
  2542  0000ED                     	ds	1
  2543  0000EE                     ??_SwTimersExecute:
  2544  0000EE                     PrepareJoinRequestFrame@bufferIndex:
  2545                           	opt stack 0
  2546  0000EE                     LORAWAN_RxDone@buffer:
  2547                           	opt stack 0
  2548                           
  2549                           ; 2 bytes @ 0x8E
  2550  0000EE                     	ds	1
  2551  0000EF                     LORAWAN_Join@bufferIndex:
  2552                           	opt stack 0
  2553  0000EF                     _RADIO_TxDone$1207:
  2554                           	opt stack 0
  2555  0000EF                     _RADIO_FSKPacketSent$1211:
  2556                           	opt stack 0
  2557                           
  2558                           ; 4 bytes @ 0x8F
  2559  0000EF                     	ds	1
  2560  0000F0                     LORAWAN_Join@result:
  2561                           	opt stack 0
  2562  0000F0                     LORAWAN_RxDone@bufferLength:
  2563                           	opt stack 0
  2564                           
  2565                           ; 1 bytes @ 0x90
  2566  0000F0                     	ds	1
  2567  0000F1                     ??_LORAWAN_RxDone:
  2568  0000F1                     LORAWAN_Join@activationTypeNew:
  2569                           	opt stack 0
  2570                           
  2571                           ; 1 bytes @ 0x91
  2572  0000F1                     	ds	1
  2573  0000F2                     SwTimersExecute@i:
  2574                           	opt stack 0
  2575                           
  2576                           ; 1 bytes @ 0x92
  2577  0000F2                     	ds	1
  2578  0000F3                     RADIO_FSKPacketSent@irqFlags:
  2579                           	opt stack 0
  2580                           
  2581                           ; 1 bytes @ 0x93
  2582  0000F3                     	ds	3
  2583  0000F6                     RADIO_RxDone@irqFlags:
  2584                           	opt stack 0
  2585  0000F6                     RADIO_FSKPayloadReady@irqFlags:
  2586                           	opt stack 0
  2587                           
  2588                           ; 1 bytes @ 0x96
  2589  0000F6                     	ds	1
  2590  0000F7                     RADIO_RxDone@i:
  2591                           	opt stack 0
  2592  0000F7                     RADIO_FSKPayloadReady@i:
  2593                           	opt stack 0
  2594                           
  2595                           ; 1 bytes @ 0x97
  2596  0000F7                     	ds	1
  2597  0000F8                     ??_main:
  2598                           
  2599                           ; 1 bytes @ 0x98
  2600  0000F8                     	ds	1
  2601                           tblptru	equ	0xFF8
  2602                           tblptrh	equ	0xFF7
  2603                           tblptrl	equ	0xFF6
  2604                           tablat	equ	0xFF5
  2605                           postinc0	equ	0xFEE
  2606                           wreg	equ	0xFE8
  2607                           postdec2	equ	0xFDD
  2608                           fsr2h	equ	0xFDA
  2609                           fsr2l	equ	0xFD9
  2610                           
  2611                           	psect	cstackCOMRAM
  2612  000001                     __pcstackCOMRAM:
  2613                           	opt stack 0
  2614  000001                     ?i2_TMR1_ReadTimer:
  2615                           	opt stack 0
  2616  000001                     i2TMR1_WriteTimer@timerVal:
  2617                           	opt stack 0
  2618                           
  2619                           ; 2 bytes @ 0x0
  2620  000001                     	ds	2
  2621  000003                     ??i2_TMR1_ReadTimer:
  2622  000003                     
  2623                           ; 1 bytes @ 0x2
  2624  000003                     	ds	2
  2625  000005                     i2TMR1_ReadTimer@readVal:
  2626                           	opt stack 0
  2627                           
  2628                           ; 2 bytes @ 0x4
  2629  000005                     	ds	2
  2630  000007                     i2TMR1_ReadTimer@readValHigh:
  2631                           	opt stack 0
  2632                           
  2633                           ; 1 bytes @ 0x6
  2634  000007                     	ds	1
  2635  000008                     i2TMR1_ReadTimer@readValLow:
  2636                           	opt stack 0
  2637                           
  2638                           ; 1 bytes @ 0x7
  2639  000008                     	ds	1
  2640  000009                     ?i2_TMR_SwapTimer:
  2641                           	opt stack 0
  2642  000009                     ?i2_TMR_GetDeltaTime:
  2643                           	opt stack 0
  2644  000009                     i2TMR_SwapTimer@timerVal:
  2645                           	opt stack 0
  2646                           
  2647                           ; 2 bytes @ 0x8
  2648  000009                     	ds	2
  2649  00000B                     
  2650                           ; 1 bytes @ 0xA
  2651  00000B                     	ds	2
  2652  00000D                     ??i2_TMR_GetDeltaTime:
  2653                           
  2654                           ; 1 bytes @ 0xC
  2655  00000D                     	ds	20
  2656  000021                     ?i2_SwTimersInterrupt:
  2657                           	opt stack 0
  2658                           
  2659                           ; 4 bytes @ 0x20
  2660  000021                     	ds	4
  2661  000025                     
  2662                           ; 1 bytes @ 0x24
  2663  000025                     	ds	4
  2664  000029                     i2SwTimersInterrupt@timeElapsed:
  2665                           	opt stack 0
  2666                           
  2667                           ; 4 bytes @ 0x28
  2668  000029                     	ds	4
  2669  00002D                     i2SwTimersInterrupt@ticksToNextTimerEvent:
  2670                           	opt stack 0
  2671                           
  2672                           ; 4 bytes @ 0x2C
  2673  00002D                     	ds	4
  2674  000031                     i2SwTimersInterrupt@i:
  2675                           	opt stack 0
  2676                           
  2677                           ; 1 bytes @ 0x30
  2678  000031                     	ds	1
  2679  000032                     ??_TMR_ISR_lora:
  2680                           
  2681                           ; 1 bytes @ 0x31
  2682  000032                     	ds	2
  2683  000034                     ??_INTERRUPT_InterruptManager:
  2684                           
  2685                           ; 1 bytes @ 0x33
  2686  000034                     	ds	8
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           postinc0	equ	0xFEE
  2692                           wreg	equ	0xFE8
  2693                           postdec2	equ	0xFDD
  2694                           fsr2h	equ	0xFDA
  2695                           fsr2l	equ	0xFD9
  2696                           
  2697 ;;
  2698 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  2699 ;;
  2700 ;; *************** function _main *****************
  2701 ;; Defined at:
  2702 ;;		line 48 in file "main.c"
  2703 ;; Parameters:    Size  Location     Type
  2704 ;;		None
  2705 ;; Auto vars:     Size  Location     Type
  2706 ;;  j               2  128[BANK1 ] int 
  2707 ;;  i               2  126[BANK1 ] int 
  2708 ;; Return value:  Size  Location     Type
  2709 ;;                  1    wreg      void 
  2710 ;; Registers used:
  2711 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2712 ;; Tracked objects:
  2713 ;;		On entry : 0/0
  2714 ;;		On exit  : 0/0
  2715 ;;		Unchanged: 0/0
  2716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2718 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2719 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2720 ;;      Totals:         0       1       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2721 ;;Total ram usage:        5 bytes
  2722 ;; Hardware stack levels required when called:   19
  2723 ;; This function calls:
  2724 ;;		_ADC_Init
  2725 ;;		_IO_pins_init
  2726 ;;		_LORAWAN_GetState
  2727 ;;		_LORAWAN_Init
  2728 ;;		_LORAWAN_Join
  2729 ;;		_LORAWAN_Mainloop
  2730 ;;		_LORAWAN_SetApplicationSessionKey
  2731 ;;		_LORAWAN_SetDeviceAddress
  2732 ;;		_LORAWAN_SetNetworkSessionKey
  2733 ;;		_LoRaSleep
  2734 ;;		_LoRaWakeUp
  2735 ;;		_SYSTEM_Initialize
  2736 ;;		_SysConfigSleep
  2737 ;;		_readAndSend
  2738 ;; This function is called by:
  2739 ;;		Startup code after reset
  2740 ;; This function uses a non-reentrant model
  2741 ;;
  2742                           
  2743                           	psect	text0
  2744  006D52                     __ptext0:
  2745                           	opt stack 0
  2746  006D52                     _main:
  2747                           	opt stack 12
  2748                           
  2749                           ;main.c: 50: SYSTEM_Initialize();
  2750                           
  2751                           ;incstack = 0
  2752  006D52  EC56  F050         	call	_SYSTEM_Initialize	;wreg free
  2753                           
  2754                           ;main.c: 51: SysConfigSleep();
  2755  006D56  ECDC  F043         	call	_SysConfigSleep	;wreg free
  2756                           
  2757                           ;main.c: 52: IO_pins_init();
  2758  006D5A  EC10  F051         	call	_IO_pins_init	;wreg free
  2759                           
  2760                           ;main.c: 53: ADC_Init();
  2761  006D5E  ECA7  F051         	call	_ADC_Init	;wreg free
  2762                           
  2763                           ;main.c: 55: PORTDbits.RD2 = 1;
  2764  006D62  8483               	bsf	3971,2,c	;volatile
  2765                           
  2766                           ;main.c: 57: (INTCONbits.GIE = 1);
  2767  006D64  8EF2               	bsf	intcon,7,c	;volatile
  2768                           
  2769                           ;main.c: 58: (INTCONbits.PEIE = 1);
  2770  006D66  8CF2               	bsf	intcon,6,c	;volatile
  2771                           
  2772                           ;main.c: 60: PORTAbits.RA4 = 1;
  2773  006D68  8880               	bsf	3968,4,c	;volatile
  2774                           
  2775                           ;main.c: 62: for(int i = 0; i < 5; i++){
  2776  006D6A  0E00               	movlw	0
  2777  006D6C  0101               	movlb	1	; () banked
  2778  006D6E  6F7F               	movwf	(main@i+1)& (0+255),b
  2779  006D70  0E00               	movlw	0
  2780  006D72  6F7E               	movwf	main@i& (0+255),b
  2781  006D74                     l18329:
  2782                           
  2783                           ; BSR set to: 1
  2784  006D74  0101               	movlb	1	; () banked
  2785  006D76  BF7F               	btfsc	(main@i+1)& (0+255),7,b
  2786  006D78  D008               	goto	l18333
  2787  006D7A  0101               	movlb	1	; () banked
  2788  006D7C  517F               	movf	(main@i+1)& (0+255),w,b
  2789  006D7E  E128               	bnz	l18349
  2790  006D80  0E05               	movlw	5
  2791  006D82  0101               	movlb	1	; () banked
  2792  006D84  5D7E               	subwf	main@i& (0+255),w,b
  2793  006D86  B0D8               	btfsc	status,0,c
  2794  006D88  D023               	goto	l18349
  2795  006D8A                     l18333:
  2796                           
  2797                           ; BSR set to: 1
  2798                           ;main.c: 63: PORTAbits.RA4 != PORTAbits.RA4;
  2799  006D8A  5080               	movf	3968,w,c	;volatile
  2800  006D8C  5080               	movf	3968,w,c	;volatile
  2801                           
  2802                           ; BSR set to: 1
  2803                           ;main.c: 64: for(int j = 0; j < 1000; j++)_delay((unsigned long)((1)*(16000000/4000.0)))
      +                          ;
  2804  006D8E  0E00               	movlw	0
  2805  006D90  0101               	movlb	1	; () banked
  2806  006D92  6F81               	movwf	(main@j+1)& (0+255),b
  2807  006D94  0E00               	movlw	0
  2808  006D96  6F80               	movwf	main@j& (0+255),b
  2809  006D98                     l18337:
  2810                           
  2811                           ; BSR set to: 1
  2812  006D98  0101               	movlb	1	; () banked
  2813  006D9A  BF81               	btfsc	(main@j+1)& (0+255),7,b
  2814  006D9C  D008               	goto	l18341
  2815  006D9E  0EE8               	movlw	232
  2816  006DA0  0101               	movlb	1	; () banked
  2817  006DA2  5D80               	subwf	main@j& (0+255),w,b
  2818  006DA4  0E03               	movlw	3
  2819  006DA6  0101               	movlb	1	; () banked
  2820  006DA8  5981               	subwfb	(main@j+1)& (0+255),w,b
  2821  006DAA  B0D8               	btfsc	status,0,c
  2822  006DAC  D00D               	goto	l18345
  2823  006DAE                     l18341:
  2824                           
  2825                           ; BSR set to: 1
  2826  006DAE  0E06               	movlw	6
  2827  006DB0  0100               	movlb	0	; () banked
  2828  006DB2  6FF8               	movwf	??_main& (0+255),b
  2829  006DB4  0E30               	movlw	48
  2830  006DB6                     u22597:
  2831  006DB6  2EE8               	decfsz	wreg,f,c
  2832  006DB8  D7FE               	goto	u22597
  2833  006DBA  2FF8               	decfsz	??_main& (0+255),f,b
  2834  006DBC  D7FC               	goto	u22597
  2835  006DBE  D000               	nop2	
  2836  006DC0  0101               	movlb	1	; () banked
  2837  006DC2  4B80               	infsnz	main@j& (0+255),f,b
  2838  006DC4  2B81               	incf	(main@j+1)& (0+255),f,b
  2839  006DC6  D7E8               	goto	l18337
  2840  006DC8                     l18345:
  2841                           
  2842                           ; BSR set to: 1
  2843  006DC8  0101               	movlb	1	; () banked
  2844  006DCA  4B7E               	infsnz	main@i& (0+255),f,b
  2845  006DCC  2B7F               	incf	(main@i+1)& (0+255),f,b
  2846  006DCE  D7D2               	goto	l18329
  2847  006DD0                     l18349:
  2848                           
  2849                           ; BSR set to: 1
  2850                           ;main.c: 65: }
  2851                           ;main.c: 69: LORAWAN_Init(RxDataDone, RxJoinResponse);
  2852  006DD0  0EBE               	movlw	low _RxDataDone
  2853  006DD2  0100               	movlb	0	; () banked
  2854  006DD4  6FB6               	movwf	LORAWAN_Init@RxPayload& (0+255),b
  2855  006DD6  0E96               	movlw	high _RxDataDone
  2856  006DD8  0100               	movlb	0	; () banked
  2857  006DDA  6FB7               	movwf	(LORAWAN_Init@RxPayload+1)& (0+255),b
  2858  006DDC  0E5A               	movlw	low _RxJoinResponse
  2859  006DDE  0100               	movlb	0	; () banked
  2860  006DE0  6FB8               	movwf	LORAWAN_Init@RxJoinResponse& (0+255),b
  2861  006DE2  0EA4               	movlw	high _RxJoinResponse
  2862  006DE4  0100               	movlb	0	; () banked
  2863  006DE6  6FB9               	movwf	(LORAWAN_Init@RxJoinResponse+1)& (0+255),b
  2864  006DE8  EC40  F048         	call	_LORAWAN_Init	;wreg free
  2865                           
  2866                           ;main.c: 70: LORAWAN_SetNetworkSessionKey(nwkSKey);
  2867  006DEC  0EB0               	movlw	low _nwkSKey
  2868  006DEE  0100               	movlb	0	; () banked
  2869  006DF0  6F6E               	movwf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),b
  2870  006DF2  0E03               	movlw	high _nwkSKey
  2871  006DF4  0100               	movlb	0	; () banked
  2872  006DF6  6F6F               	movwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),b
  2873  006DF8  EC31  F04D         	call	_LORAWAN_SetNetworkSessionKey	;wreg free
  2874                           
  2875                           ;main.c: 71: LORAWAN_SetApplicationSessionKey(appSKey);
  2876  006DFC  0EA0               	movlw	low _appSKey
  2877  006DFE  0100               	movlb	0	; () banked
  2878  006E00  6F6E               	movwf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),b
  2879  006E02  0E03               	movlw	high _appSKey
  2880  006E04  0100               	movlb	0	; () banked
  2881  006E06  6F6F               	movwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),b
  2882  006E08  EC4D  F04D         	call	_LORAWAN_SetApplicationSessionKey	;wreg free
  2883                           
  2884                           ;main.c: 72: LORAWAN_SetDeviceAddress(devAddr);
  2885  006E0C  C1E4  F064         	movff	_devAddr,LORAWAN_SetDeviceAddress@deviceAddressNew
  2886  006E10  C1E5  F065         	movff	_devAddr+1,LORAWAN_SetDeviceAddress@deviceAddressNew+1
  2887  006E14  C1E6  F066         	movff	_devAddr+2,LORAWAN_SetDeviceAddress@deviceAddressNew+2
  2888  006E18  C1E7  F067         	movff	_devAddr+3,LORAWAN_SetDeviceAddress@deviceAddressNew+3
  2889  006E1C  ECEA  F050         	call	_LORAWAN_SetDeviceAddress	;wreg free
  2890                           
  2891                           ;main.c: 73: LORAWAN_Join(ABP);
  2892  006E20  0E01               	movlw	1
  2893  006E22  EC3B  F03F         	call	_LORAWAN_Join
  2894                           
  2895                           ;main.c: 76: TimeToSend = 1;
  2896  006E26  0E01               	movlw	1
  2897  006E28  0101               	movlb	1	; () banked
  2898  006E2A  6F8A               	movwf	_TimeToSend& (0+255),b
  2899  006E2C  D023               	goto	l18399
  2900  006E2E                     l18363:
  2901                           
  2902                           ;main.c: 80: {
  2903                           ;main.c: 81: LORAWAN_Mainloop();
  2904  006E2E  EC76  F04C         	call	_LORAWAN_Mainloop	;wreg free
  2905                           
  2906                           ;main.c: 83: if(TimeToSend){
  2907  006E32  0101               	movlb	1	; () banked
  2908  006E34  518A               	movf	_TimeToSend& (0+255),w,b
  2909  006E36  0101               	movlb	1	; () banked
  2910  006E38  B4D8               	btfsc	status,2,c
  2911  006E3A  D007               	goto	l18373
  2912                           
  2913                           ; BSR set to: 1
  2914                           ;main.c: 84: LoRaWakeUp();
  2915  006E3C  ECD2  F051         	call	_LoRaWakeUp	;wreg free
  2916                           
  2917                           ;main.c: 85: readAndSend();
  2918  006E40  ECCC  F04E         	call	_readAndSend	;wreg free
  2919                           
  2920                           ;main.c: 86: TimeToSend = 0;
  2921  006E44  0E00               	movlw	0
  2922  006E46  0101               	movlb	1	; () banked
  2923  006E48  6F8A               	movwf	_TimeToSend& (0+255),b
  2924  006E4A                     l18373:
  2925                           
  2926                           ; BSR set to: 1
  2927                           ;main.c: 87: }
  2928                           ;main.c: 89: if(LORAWAN_GetState() == IDLE){
  2929  006E4A  EC12  F052         	call	_LORAWAN_GetState	;wreg free
  2930  006E4E  0900               	iorlw	0
  2931  006E50  A4D8               	btfss	status,2,c
  2932  006E52  D7ED               	goto	l18363
  2933                           
  2934                           ;main.c: 90: PORTCbits.RC0 = 1;
  2935  006E54  8082               	bsf	3970,0,c	;volatile
  2936                           
  2937                           ;main.c: 91: LoRaSleep();
  2938  006E56  EC0E  F04F         	call	_LoRaSleep	;wreg free
  2939                           
  2940                           ;main.c: 92: PORTDbits.RD2 = 0;
  2941  006E5A  9483               	bcf	3971,2,c	;volatile
  2942                           
  2943                           ;main.c: 93: PORTAbits.RA4 = 0;
  2944  006E5C  9880               	bcf	3968,4,c	;volatile
  2945                           
  2946                           ;main.c: 94: PORTCbits.RC0 = 0;
  2947  006E5E  9082               	bcf	3970,0,c	;volatile
  2948                           
  2949                           ;main.c: 95: TMR1ON = 0;
  2950  006E60  90CD               	bcf	4045,0,c	;volatile
  2951                           
  2952                           ;main.c: 96: TRISCbits.TRISC3 = 0;
  2953  006E62  9694               	bcf	3988,3,c	;volatile
  2954                           
  2955                           ;main.c: 97: ANSELCbits.ANSC3 = 0;
  2956  006E64  010F               	movlb	15	; () banked
  2957  006E66  973A               	bcf	58,3,b	;volatile
  2958  006E68  0003               	sleep		;# 
  2959                           
  2960                           ;main.c: 103: TMR1ON = 1;
  2961  006E6A  80CD               	bsf	4045,0,c	;volatile
  2962                           
  2963                           ;main.c: 104: PORTDbits.RD2 = 1;
  2964  006E6C  8483               	bsf	3971,2,c	;volatile
  2965                           
  2966                           ;main.c: 105: TRISCbits.TRISC3 = 1;
  2967  006E6E  8694               	bsf	3988,3,c	;volatile
  2968                           
  2969                           ;main.c: 106: ANSELCbits.ANSC3 = 1;
  2970  006E70  010F               	movlb	15	; () banked
  2971  006E72  873A               	bsf	58,3,b	;volatile
  2972  006E74                     l18399:
  2973                           
  2974                           ; BSR set to: 15
  2975                           ;main.c: 107: PORTAbits.RA4 = 1;
  2976  006E74  8880               	bsf	3968,4,c	;volatile
  2977                           
  2978                           ; BSR set to: 15
  2979                           
  2980                           ; BSR set to: 15
  2981  006E76  D7DB               	goto	l18363
  2982  006E78                     __end_of_main:
  2983                           	opt stack 0
  2984                           tblptru	equ	0xFF8
  2985                           tblptrh	equ	0xFF7
  2986                           tblptrl	equ	0xFF6
  2987                           tablat	equ	0xFF5
  2988                           intcon	equ	0xFF2
  2989                           postinc0	equ	0xFEE
  2990                           wreg	equ	0xFE8
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function _readAndSend *****************
  2997 ;; Defined at:
  2998 ;;		line 132 in file "main.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;		None
  3001 ;; Auto vars:     Size  Location     Type
  3002 ;;		None
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  1    wreg      void 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3016 ;;Total ram usage:        0 bytes
  3017 ;; Hardware stack levels used:    1
  3018 ;; Hardware stack levels required when called:   14
  3019 ;; This function calls:
  3020 ;;		_ADC_Read
  3021 ;;		_LORAWAN_Send
  3022 ;; This function is called by:
  3023 ;;		_main
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text1
  3028  009D98                     __ptext1:
  3029                           	opt stack 0
  3030  009D98                     _readAndSend:
  3031                           	opt stack 16
  3032                           
  3033                           ;main.c: 133: payload[0] = ADC_Read(37);
  3034                           
  3035                           ; BSR set to: 15
  3036                           ;incstack = 0
  3037  009D98  0E25               	movlw	37
  3038  009D9A  EC13  F04B         	call	_ADC_Read
  3039  009D9E  C066  F1D2         	movff	?_ADC_Read,_payload
  3040  009DA2  C067  F1D3         	movff	?_ADC_Read+1,_payload+1
  3041                           
  3042                           ;main.c: 134: LORAWAN_Send(UNCNF, portNumber, &payload, sizeof(payload));
  3043  009DA6  C1EC  F0E7         	movff	_portNumber,LORAWAN_Send@port
  3044  009DAA  0ED2               	movlw	low _payload
  3045  009DAC  0100               	movlb	0	; () banked
  3046  009DAE  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
  3047  009DB0  0E01               	movlw	high _payload
  3048  009DB2  0100               	movlb	0	; () banked
  3049  009DB4  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  3050  009DB6  0E02               	movlw	2
  3051  009DB8  0100               	movlb	0	; () banked
  3052  009DBA  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  3053  009DBC  0E00               	movlw	0
  3054  009DBE  ECE1  F03B         	call	_LORAWAN_Send
  3055  009DC2  0012               	return		;funcret
  3056  009DC4                     __end_of_readAndSend:
  3057                           	opt stack 0
  3058                           tblptru	equ	0xFF8
  3059                           tblptrh	equ	0xFF7
  3060                           tblptrl	equ	0xFF6
  3061                           tablat	equ	0xFF5
  3062                           intcon	equ	0xFF2
  3063                           postinc0	equ	0xFEE
  3064                           wreg	equ	0xFE8
  3065                           postdec2	equ	0xFDD
  3066                           fsr2h	equ	0xFDA
  3067                           fsr2l	equ	0xFD9
  3068                           status	equ	0xFD8
  3069                           
  3070 ;; *************** function _ADC_Read *****************
  3071 ;; Defined at:
  3072 ;;		line 154 in file "main.c"
  3073 ;; Parameters:    Size  Location     Type
  3074 ;;  channel         1    wreg     unsigned char 
  3075 ;; Auto vars:     Size  Location     Type
  3076 ;;  channel         1   10[BANK0 ] unsigned char 
  3077 ;;  result          2   11[BANK0 ] unsigned int 
  3078 ;; Return value:  Size  Location     Type
  3079 ;;                  2    6[BANK0 ] unsigned int 
  3080 ;; Registers used:
  3081 ;;		wreg, status,2, status,0, cstack
  3082 ;; Tracked objects:
  3083 ;;		On entry : 0/0
  3084 ;;		On exit  : 0/0
  3085 ;;		Unchanged: 0/0
  3086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3087 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3088 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3089 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3090 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3091 ;;Total ram usage:        7 bytes
  3092 ;; Hardware stack levels used:    1
  3093 ;; Hardware stack levels required when called:    8
  3094 ;; This function calls:
  3095 ;;		_ADC_SelChannel
  3096 ;; This function is called by:
  3097 ;;		_readAndSend
  3098 ;; This function uses a non-reentrant model
  3099 ;;
  3100                           
  3101                           	psect	text2
  3102  009626                     __ptext2:
  3103                           	opt stack 0
  3104  009626                     _ADC_Read:
  3105                           	opt stack 21
  3106                           
  3107                           ;incstack = 0
  3108                           ;ADC_Read@channel stored from wreg
  3109  009626  0100               	movlb	0	; () banked
  3110  009628  6F6A               	movwf	ADC_Read@channel& (0+255),b
  3111                           
  3112                           ;main.c: 155: uint16_t result = 0;
  3113  00962A  0E00               	movlw	0
  3114  00962C  0100               	movlb	0	; () banked
  3115  00962E  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  3116  009630  0E00               	movlw	0
  3117  009632  6F6B               	movwf	ADC_Read@result& (0+255),b
  3118                           
  3119                           ; BSR set to: 0
  3120                           ;main.c: 156: ADCON0bits.ADON = 1;
  3121  009634  80C2               	bsf	4034,0,c	;volatile
  3122                           
  3123                           ; BSR set to: 0
  3124                           ;main.c: 157: ADC_SelChannel(channel);
  3125  009636  0100               	movlb	0	; () banked
  3126  009638  516A               	movf	ADC_Read@channel& (0+255),w,b
  3127  00963A  ECCE  F050         	call	_ADC_SelChannel
  3128                           
  3129                           ;main.c: 158: ADCON0bits.GO = 1;
  3130  00963E  82C2               	bsf	4034,1,c	;volatile
  3131  009640                     l2684:
  3132  009640  B2C2               	btfsc	4034,1,c	;volatile
  3133  009642  D7FE               	goto	l2684
  3134                           
  3135                           ;main.c: 160: result = (ADRESH<<8) | ADRESL;
  3136  009644  50C3               	movf	4035,w,c	;volatile
  3137  009646  CFC4 F068          	movff	4036,??_ADC_Read	;volatile
  3138  00964A  0100               	movlb	0	; () banked
  3139  00964C  6B69               	clrf	(??_ADC_Read+1)& (0+255),b
  3140  00964E  C068  F069         	movff	??_ADC_Read,??_ADC_Read+1
  3141  009652  0100               	movlb	0	; () banked
  3142  009654  6B68               	clrf	??_ADC_Read& (0+255),b
  3143  009656  0100               	movlb	0	; () banked
  3144  009658  1168               	iorwf	??_ADC_Read& (0+255),w,b
  3145  00965A  0100               	movlb	0	; () banked
  3146  00965C  6F6B               	movwf	ADC_Read@result& (0+255),b
  3147  00965E  0100               	movlb	0	; () banked
  3148  009660  5169               	movf	(??_ADC_Read+1)& (0+255),w,b
  3149  009662  0100               	movlb	0	; () banked
  3150  009664  6F6C               	movwf	(ADC_Read@result+1)& (0+255),b
  3151                           
  3152                           ; BSR set to: 0
  3153                           ;main.c: 161: ADCON0bits.ADON = 0;
  3154  009666  90C2               	bcf	4034,0,c	;volatile
  3155                           
  3156                           ; BSR set to: 0
  3157                           ;main.c: 162: return result;
  3158  009668  C06B  F066         	movff	ADC_Read@result,?_ADC_Read
  3159  00966C  C06C  F067         	movff	ADC_Read@result+1,?_ADC_Read+1
  3160  009670  0012               	return	
  3161  009672                     __end_of_ADC_Read:
  3162                           	opt stack 0
  3163                           tblptru	equ	0xFF8
  3164                           tblptrh	equ	0xFF7
  3165                           tblptrl	equ	0xFF6
  3166                           tablat	equ	0xFF5
  3167                           intcon	equ	0xFF2
  3168                           postinc0	equ	0xFEE
  3169                           wreg	equ	0xFE8
  3170                           postdec2	equ	0xFDD
  3171                           fsr2h	equ	0xFDA
  3172                           fsr2l	equ	0xFD9
  3173                           status	equ	0xFD8
  3174                           
  3175 ;; *************** function _ADC_SelChannel *****************
  3176 ;; Defined at:
  3177 ;;		line 149 in file "main.c"
  3178 ;; Parameters:    Size  Location     Type
  3179 ;;  c               1    wreg     unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  c               1    5[BANK0 ] unsigned char 
  3182 ;; Return value:  Size  Location     Type
  3183 ;;                  1    wreg      void 
  3184 ;; Registers used:
  3185 ;;		wreg, status,2, status,0
  3186 ;; Tracked objects:
  3187 ;;		On entry : 0/0
  3188 ;;		On exit  : 0/0
  3189 ;;		Unchanged: 0/0
  3190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3192 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3193 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3194 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3195 ;;Total ram usage:        2 bytes
  3196 ;; Hardware stack levels used:    1
  3197 ;; Hardware stack levels required when called:    7
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_ADC_Read
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           	psect	text3
  3206  00A19C                     __ptext3:
  3207                           	opt stack 0
  3208  00A19C                     _ADC_SelChannel:
  3209                           	opt stack 21
  3210                           
  3211                           ; BSR set to: 0
  3212                           ;incstack = 0
  3213                           ;ADC_SelChannel@c stored from wreg
  3214  00A19C  0100               	movlb	0	; () banked
  3215  00A19E  6F65               	movwf	ADC_SelChannel@c& (0+255),b
  3216                           
  3217                           ;main.c: 150: ADCON0bits.CHS = c;
  3218  00A1A0  C065  F064         	movff	ADC_SelChannel@c,??_ADC_SelChannel
  3219  00A1A4  0100               	movlb	0	; () banked
  3220  00A1A6  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3221  00A1A8  4764               	rlncf	??_ADC_SelChannel& (0+255),f,b
  3222  00A1AA  50C2               	movf	4034,w,c	;volatile
  3223  00A1AC  0100               	movlb	0	; () banked
  3224  00A1AE  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3225  00A1B0  0B83               	andlw	-125
  3226  00A1B2  1964               	xorwf	??_ADC_SelChannel& (0+255),w,b
  3227  00A1B4  6EC2               	movwf	4034,c	;volatile
  3228  00A1B6  0012               	return	
  3229  00A1B8                     __end_of_ADC_SelChannel:
  3230                           	opt stack 0
  3231                           tblptru	equ	0xFF8
  3232                           tblptrh	equ	0xFF7
  3233                           tblptrl	equ	0xFF6
  3234                           tablat	equ	0xFF5
  3235                           intcon	equ	0xFF2
  3236                           postinc0	equ	0xFEE
  3237                           wreg	equ	0xFE8
  3238                           postdec2	equ	0xFDD
  3239                           fsr2h	equ	0xFDA
  3240                           fsr2l	equ	0xFD9
  3241                           status	equ	0xFD8
  3242                           
  3243 ;; *************** function _SysConfigSleep *****************
  3244 ;; Defined at:
  3245 ;;		line 172 in file "main.c"
  3246 ;; Parameters:    Size  Location     Type
  3247 ;;		None
  3248 ;; Auto vars:     Size  Location     Type
  3249 ;;		None
  3250 ;; Return value:  Size  Location     Type
  3251 ;;                  1    wreg      void 
  3252 ;; Registers used:
  3253 ;;		wreg, status,2
  3254 ;; Tracked objects:
  3255 ;;		On entry : 0/0
  3256 ;;		On exit  : 0/0
  3257 ;;		Unchanged: 0/0
  3258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3263 ;;Total ram usage:        0 bytes
  3264 ;; Hardware stack levels used:    1
  3265 ;; Hardware stack levels required when called:    7
  3266 ;; This function calls:
  3267 ;;		Nothing
  3268 ;; This function is called by:
  3269 ;;		_main
  3270 ;; This function uses a non-reentrant model
  3271 ;;
  3272                           
  3273                           	psect	text4
  3274  0087B8                     __ptext4:
  3275                           	opt stack 0
  3276  0087B8                     _SysConfigSleep:
  3277                           	opt stack 23
  3278                           
  3279                           ;main.c: 175: UART2MD = 1;
  3280                           
  3281                           ; BSR set to: 0
  3282                           ;incstack = 0
  3283  0087B8  010F               	movlb	15	; () banked
  3284  0087BA  8F3F               	bsf	63,7,b	;volatile
  3285                           
  3286                           ;main.c: 176: UART1MD = 1;
  3287  0087BC  010F               	movlb	15	; () banked
  3288  0087BE  8D3F               	bsf	63,6,b	;volatile
  3289                           
  3290                           ;main.c: 177: TMR6MD = 1;
  3291  0087C0  010F               	movlb	15	; () banked
  3292  0087C2  8B3F               	bsf	63,5,b	;volatile
  3293                           
  3294                           ;main.c: 178: TMR5MD = 1;
  3295  0087C4  010F               	movlb	15	; () banked
  3296  0087C6  893F               	bsf	63,4,b	;volatile
  3297                           
  3298                           ;main.c: 179: TMR4MD = 1;
  3299  0087C8  010F               	movlb	15	; () banked
  3300  0087CA  873F               	bsf	63,3,b	;volatile
  3301                           
  3302                           ;main.c: 180: TMR2MD = 1;
  3303  0087CC  010F               	movlb	15	; () banked
  3304  0087CE  833F               	bsf	63,1,b	;volatile
  3305                           
  3306                           ;main.c: 181: MSSP1MD = 1;
  3307  0087D0  010F               	movlb	15	; () banked
  3308  0087D2  8D3E               	bsf	62,6,b	;volatile
  3309                           
  3310                           ;main.c: 182: CCP5MD = 1;
  3311  0087D4  010F               	movlb	15	; () banked
  3312  0087D6  893E               	bsf	62,4,b	;volatile
  3313                           
  3314                           ;main.c: 183: CCP4MD = 1;
  3315  0087D8  010F               	movlb	15	; () banked
  3316  0087DA  873E               	bsf	62,3,b	;volatile
  3317                           
  3318                           ;main.c: 184: CCP3MD = 1;
  3319  0087DC  010F               	movlb	15	; () banked
  3320  0087DE  853E               	bsf	62,2,b	;volatile
  3321                           
  3322                           ;main.c: 185: CCP2MD = 1;
  3323  0087E0  010F               	movlb	15	; () banked
  3324  0087E2  833E               	bsf	62,1,b	;volatile
  3325                           
  3326                           ;main.c: 186: CCP1MD = 1;
  3327  0087E4  010F               	movlb	15	; () banked
  3328  0087E6  813E               	bsf	62,0,b	;volatile
  3329                           
  3330                           ;main.c: 187: CTMUMD = 1;
  3331  0087E8  010F               	movlb	15	; () banked
  3332  0087EA  873D               	bsf	61,3,b	;volatile
  3333                           
  3334                           ;main.c: 188: CMP2MD = 1;
  3335  0087EC  010F               	movlb	15	; () banked
  3336  0087EE  853D               	bsf	61,2,b	;volatile
  3337                           
  3338                           ;main.c: 189: CMP1MD = 1;
  3339  0087F0  010F               	movlb	15	; () banked
  3340  0087F2  833D               	bsf	61,1,b	;volatile
  3341                           
  3342                           ;main.c: 192: IDLEN = 0;
  3343  0087F4  9ED3               	bcf	4051,7,c	;volatile
  3344                           
  3345                           ; BSR set to: 15
  3346                           ;main.c: 196: TRISA = 0x00;
  3347  0087F6  0E00               	movlw	0
  3348  0087F8  6E92               	movwf	3986,c	;volatile
  3349                           
  3350                           ;main.c: 197: LATA = 0x00;
  3351  0087FA  0E00               	movlw	0
  3352  0087FC  6E89               	movwf	3977,c	;volatile
  3353                           
  3354                           ; BSR set to: 15
  3355                           ;main.c: 200: TRISBbits.RB4 = 0;
  3356  0087FE  9893               	bcf	3987,4,c	;volatile
  3357                           
  3358                           ; BSR set to: 15
  3359                           ;main.c: 202: TRISBbits.RB6 = 0;
  3360  008800  9C93               	bcf	3987,6,c	;volatile
  3361                           
  3362                           ; BSR set to: 15
  3363                           ;main.c: 203: TRISBbits.RB7 = 0;
  3364  008802  9E93               	bcf	3987,7,c	;volatile
  3365                           
  3366                           ; BSR set to: 15
  3367                           ;main.c: 204: LATBbits.LATB4 = 0;
  3368  008804  988A               	bcf	3978,4,c	;volatile
  3369                           
  3370                           ; BSR set to: 15
  3371                           ;main.c: 206: LATBbits.LATB6 = 0;
  3372  008806  9C8A               	bcf	3978,6,c	;volatile
  3373                           
  3374                           ; BSR set to: 15
  3375                           ;main.c: 207: LATBbits.LATB7 = 0;
  3376  008808  9E8A               	bcf	3978,7,c	;volatile
  3377                           
  3378                           ; BSR set to: 15
  3379                           ;main.c: 210: TRISCbits.RC0 = 0;
  3380  00880A  9094               	bcf	3988,0,c	;volatile
  3381                           
  3382                           ; BSR set to: 15
  3383                           ;main.c: 211: TRISCbits.RC1 = 0;
  3384  00880C  9294               	bcf	3988,1,c	;volatile
  3385                           
  3386                           ; BSR set to: 15
  3387                           ;main.c: 212: TRISCbits.RC3 = 0;
  3388  00880E  9694               	bcf	3988,3,c	;volatile
  3389                           
  3390                           ; BSR set to: 15
  3391                           ;main.c: 213: TRISCbits.RC4 = 0;
  3392  008810  9894               	bcf	3988,4,c	;volatile
  3393                           
  3394                           ; BSR set to: 15
  3395                           ;main.c: 214: TRISCbits.RC5 = 0;
  3396  008812  9A94               	bcf	3988,5,c	;volatile
  3397                           
  3398                           ; BSR set to: 15
  3399                           ;main.c: 215: TRISCbits.RC6 = 0;
  3400  008814  9C94               	bcf	3988,6,c	;volatile
  3401                           
  3402                           ; BSR set to: 15
  3403                           ;main.c: 216: TRISCbits.RC7 = 0;
  3404  008816  9E94               	bcf	3988,7,c	;volatile
  3405                           
  3406                           ; BSR set to: 15
  3407                           ;main.c: 217: LATCbits.LATC0 = 0;
  3408  008818  908B               	bcf	3979,0,c	;volatile
  3409                           
  3410                           ; BSR set to: 15
  3411                           ;main.c: 218: LATCbits.LATC1 = 0;
  3412  00881A  928B               	bcf	3979,1,c	;volatile
  3413                           
  3414                           ; BSR set to: 15
  3415                           ;main.c: 219: LATCbits.LATC3 = 0;
  3416  00881C  968B               	bcf	3979,3,c	;volatile
  3417                           
  3418                           ; BSR set to: 15
  3419                           ;main.c: 220: LATCbits.LATC4 = 0;
  3420  00881E  988B               	bcf	3979,4,c	;volatile
  3421                           
  3422                           ; BSR set to: 15
  3423                           ;main.c: 221: LATCbits.LATC5 = 0;
  3424  008820  9A8B               	bcf	3979,5,c	;volatile
  3425                           
  3426                           ; BSR set to: 15
  3427                           ;main.c: 222: LATCbits.LATC6 = 0;
  3428  008822  9C8B               	bcf	3979,6,c	;volatile
  3429                           
  3430                           ; BSR set to: 15
  3431                           ;main.c: 223: LATCbits.LATC7 = 0;
  3432  008824  9E8B               	bcf	3979,7,c	;volatile
  3433                           
  3434                           ; BSR set to: 15
  3435                           ;main.c: 226: TRISDbits.RD0 = 0;
  3436  008826  9095               	bcf	3989,0,c	;volatile
  3437                           
  3438                           ; BSR set to: 15
  3439                           ;main.c: 227: TRISDbits.RD1 = 0;
  3440  008828  9295               	bcf	3989,1,c	;volatile
  3441                           
  3442                           ; BSR set to: 15
  3443                           ;main.c: 228: TRISDbits.RD2 = 0;
  3444  00882A  9495               	bcf	3989,2,c	;volatile
  3445                           
  3446                           ; BSR set to: 15
  3447                           ;main.c: 229: TRISDbits.RD4 = 0;
  3448  00882C  9895               	bcf	3989,4,c	;volatile
  3449                           
  3450                           ; BSR set to: 15
  3451                           ;main.c: 230: TRISDbits.RD5 = 0;
  3452  00882E  9A95               	bcf	3989,5,c	;volatile
  3453                           
  3454                           ; BSR set to: 15
  3455                           ;main.c: 231: TRISDbits.RD7 = 0;
  3456  008830  9E95               	bcf	3989,7,c	;volatile
  3457                           
  3458                           ; BSR set to: 15
  3459                           ;main.c: 232: LATDbits.LATD0 = 0;
  3460  008832  908C               	bcf	3980,0,c	;volatile
  3461                           
  3462                           ; BSR set to: 15
  3463                           ;main.c: 233: LATDbits.LATD1 = 0;
  3464  008834  928C               	bcf	3980,1,c	;volatile
  3465                           
  3466                           ; BSR set to: 15
  3467                           ;main.c: 234: LATDbits.LATD2 = 0;
  3468  008836  948C               	bcf	3980,2,c	;volatile
  3469                           
  3470                           ; BSR set to: 15
  3471                           ;main.c: 235: LATDbits.LATD4 = 0;
  3472  008838  988C               	bcf	3980,4,c	;volatile
  3473                           
  3474                           ; BSR set to: 15
  3475                           ;main.c: 236: LATDbits.LATD5 = 0;
  3476  00883A  9A8C               	bcf	3980,5,c	;volatile
  3477                           
  3478                           ; BSR set to: 15
  3479                           ;main.c: 237: LATDbits.LATD7 = 0;
  3480  00883C  9E8C               	bcf	3980,7,c	;volatile
  3481                           
  3482                           ; BSR set to: 15
  3483                           ;main.c: 240: TRISEbits.RE0 = 0;
  3484  00883E  9096               	bcf	3990,0,c	;volatile
  3485                           
  3486                           ; BSR set to: 15
  3487                           ;main.c: 241: TRISEbits.RE1 = 0;
  3488  008840  9296               	bcf	3990,1,c	;volatile
  3489                           
  3490                           ; BSR set to: 15
  3491                           ;main.c: 242: TRISEbits.RE2 = 0;
  3492  008842  9496               	bcf	3990,2,c	;volatile
  3493                           
  3494                           ; BSR set to: 15
  3495                           ;main.c: 243: LATEbits.LATE0 = 0;
  3496  008844  908D               	bcf	3981,0,c	;volatile
  3497                           
  3498                           ; BSR set to: 15
  3499                           ;main.c: 244: LATEbits.LATE1 = 0;
  3500  008846  928D               	bcf	3981,1,c	;volatile
  3501                           
  3502                           ; BSR set to: 15
  3503                           ;main.c: 245: LATEbits.LATE2 = 0;
  3504  008848  948D               	bcf	3981,2,c	;volatile
  3505                           
  3506                           ; BSR set to: 15
  3507  00884A  0012               	return		;funcret
  3508  00884C                     __end_of_SysConfigSleep:
  3509                           	opt stack 0
  3510                           tblptru	equ	0xFF8
  3511                           tblptrh	equ	0xFF7
  3512                           tblptrl	equ	0xFF6
  3513                           tablat	equ	0xFF5
  3514                           intcon	equ	0xFF2
  3515                           postinc0	equ	0xFEE
  3516                           wreg	equ	0xFE8
  3517                           postdec2	equ	0xFDD
  3518                           fsr2h	equ	0xFDA
  3519                           fsr2l	equ	0xFD9
  3520                           status	equ	0xFD8
  3521                           
  3522 ;; *************** function _SYSTEM_Initialize *****************
  3523 ;; Defined at:
  3524 ;;		line 111 in file "mcc_generated_files/mcc.c"
  3525 ;; Parameters:    Size  Location     Type
  3526 ;;		None
  3527 ;; Auto vars:     Size  Location     Type
  3528 ;;		None
  3529 ;; Return value:  Size  Location     Type
  3530 ;;                  1    wreg      void 
  3531 ;; Registers used:
  3532 ;;		wreg, status,2, status,0, cstack
  3533 ;; Tracked objects:
  3534 ;;		On entry : 0/0
  3535 ;;		On exit  : 0/0
  3536 ;;		Unchanged: 0/0
  3537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3539 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3540 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3541 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3542 ;;Total ram usage:        0 bytes
  3543 ;; Hardware stack levels used:    1
  3544 ;; Hardware stack levels required when called:   10
  3545 ;; This function calls:
  3546 ;;		_EXT_INT_Initialize
  3547 ;;		_INTERRUPT_Initialize
  3548 ;;		_LORAWAN_PlatformInit
  3549 ;;		_OSCILLATOR_Initialize
  3550 ;;		_PIN_MANAGER_Initialize
  3551 ;;		_SPI2_Initialize
  3552 ;;		_TMR1_Initialize
  3553 ;; This function is called by:
  3554 ;;		_main
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text5
  3559  00A0AC                     __ptext5:
  3560                           	opt stack 0
  3561  00A0AC                     _SYSTEM_Initialize:
  3562                           	opt stack 20
  3563                           
  3564                           ;mcc.c: 114: INTERRUPT_Initialize();
  3565                           
  3566                           ; BSR set to: 15
  3567                           ;incstack = 0
  3568  00A0AC  EC2B  F052         	call	_INTERRUPT_Initialize	;wreg free
  3569                           
  3570                           ;mcc.c: 115: PIN_MANAGER_Initialize();
  3571  00A0B0  EC34  F047         	call	_PIN_MANAGER_Initialize	;wreg free
  3572                           
  3573                           ;mcc.c: 116: OSCILLATOR_Initialize();
  3574  00A0B4  EC92  F051         	call	_OSCILLATOR_Initialize	;wreg free
  3575                           
  3576                           ;mcc.c: 117: SPI2_Initialize();
  3577  00A0B8  EC99  F051         	call	_SPI2_Initialize	;wreg free
  3578                           
  3579                           ;mcc.c: 118: EXT_INT_Initialize();
  3580  00A0BC  EC55  F04C         	call	_EXT_INT_Initialize	;wreg free
  3581                           
  3582                           ;mcc.c: 119: TMR1_Initialize();
  3583  00A0C0  EC25  F04E         	call	_TMR1_Initialize	;wreg free
  3584                           
  3585                           ;mcc.c: 120: LORAWAN_PlatformInit();
  3586  00A0C4  ECF4  F04F         	call	_LORAWAN_PlatformInit	;wreg free
  3587  00A0C8  0012               	return		;funcret
  3588  00A0CA                     __end_of_SYSTEM_Initialize:
  3589                           	opt stack 0
  3590                           tblptru	equ	0xFF8
  3591                           tblptrh	equ	0xFF7
  3592                           tblptrl	equ	0xFF6
  3593                           tablat	equ	0xFF5
  3594                           intcon	equ	0xFF2
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postdec2	equ	0xFDD
  3598                           fsr2h	equ	0xFDA
  3599                           fsr2l	equ	0xFD9
  3600                           status	equ	0xFD8
  3601                           
  3602 ;; *************** function _TMR1_Initialize *****************
  3603 ;; Defined at:
  3604 ;;		line 62 in file "mcc_generated_files/tmr1.c"
  3605 ;; Parameters:    Size  Location     Type
  3606 ;;		None
  3607 ;; Auto vars:     Size  Location     Type
  3608 ;;		None
  3609 ;; Return value:  Size  Location     Type
  3610 ;;                  1    wreg      void 
  3611 ;; Registers used:
  3612 ;;		wreg, status,2, status,0, cstack
  3613 ;; Tracked objects:
  3614 ;;		On entry : 0/0
  3615 ;;		On exit  : 0/0
  3616 ;;		Unchanged: 0/0
  3617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3622 ;;Total ram usage:        0 bytes
  3623 ;; Hardware stack levels used:    1
  3624 ;; Hardware stack levels required when called:    8
  3625 ;; This function calls:
  3626 ;;		_TMR1_SetInterruptHandler
  3627 ;;		_TMR1_StartTimer
  3628 ;; This function is called by:
  3629 ;;		_SYSTEM_Initialize
  3630 ;; This function uses a non-reentrant model
  3631 ;;
  3632                           
  3633                           	psect	text6
  3634  009C4A                     __ptext6:
  3635                           	opt stack 0
  3636  009C4A                     _TMR1_Initialize:
  3637                           	opt stack 21
  3638                           
  3639                           ;tmr1.c: 67: T1CON = 0x88;
  3640                           
  3641                           ;incstack = 0
  3642  009C4A  0E88               	movlw	136
  3643  009C4C  6ECD               	movwf	4045,c	;volatile
  3644                           
  3645                           ;tmr1.c: 70: T1GCON = 0x00;
  3646  009C4E  0E00               	movlw	0
  3647  009C50  6ECC               	movwf	4044,c	;volatile
  3648                           
  3649                           ;tmr1.c: 73: TMR1H = 0x00;
  3650  009C52  0E00               	movlw	0
  3651  009C54  6ECF               	movwf	4047,c	;volatile
  3652                           
  3653                           ;tmr1.c: 76: TMR1L = 0x00;
  3654  009C56  0E00               	movlw	0
  3655  009C58  6ECE               	movwf	4046,c	;volatile
  3656                           
  3657                           ;tmr1.c: 79: timer1ReloadVal=TMR1;
  3658  009C5A  CFCE F05E          	movff	4046,_timer1ReloadVal	;volatile
  3659  009C5E  CFCF F05F          	movff	4047,_timer1ReloadVal+1	;volatile
  3660                           
  3661                           ;tmr1.c: 82: PIR1bits.TMR1IF = 0;
  3662  009C62  909E               	bcf	3998,0,c	;volatile
  3663                           
  3664                           ;tmr1.c: 85: PIE1bits.TMR1IE = 1;
  3665  009C64  809D               	bsf	3997,0,c	;volatile
  3666                           
  3667                           ;tmr1.c: 88: TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandler);
  3668  009C66  0E7E               	movlw	low _TMR1_DefaultInterruptHandler
  3669  009C68  0100               	movlb	0	; () banked
  3670  009C6A  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  3671  009C6C  0EA4               	movlw	high _TMR1_DefaultInterruptHandler
  3672  009C6E  0100               	movlb	0	; () banked
  3673  009C70  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3674  009C72  ECB9  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  3675                           
  3676                           ;tmr1.c: 91: TMR1_StartTimer();
  3677  009C76  EC29  F052         	call	_TMR1_StartTimer	;wreg free
  3678  009C7A  0012               	return		;funcret
  3679  009C7C                     __end_of_TMR1_Initialize:
  3680                           	opt stack 0
  3681                           tblptru	equ	0xFF8
  3682                           tblptrh	equ	0xFF7
  3683                           tblptrl	equ	0xFF6
  3684                           tablat	equ	0xFF5
  3685                           intcon	equ	0xFF2
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           postdec2	equ	0xFDD
  3689                           fsr2h	equ	0xFDA
  3690                           fsr2l	equ	0xFD9
  3691                           status	equ	0xFD8
  3692                           
  3693 ;; *************** function _TMR1_StartTimer *****************
  3694 ;; Defined at:
  3695 ;;		line 94 in file "mcc_generated_files/tmr1.c"
  3696 ;; Parameters:    Size  Location     Type
  3697 ;;		None
  3698 ;; Auto vars:     Size  Location     Type
  3699 ;;		None
  3700 ;; Return value:  Size  Location     Type
  3701 ;;                  1    wreg      void 
  3702 ;; Registers used:
  3703 ;;		None
  3704 ;; Tracked objects:
  3705 ;;		On entry : 0/0
  3706 ;;		On exit  : 0/0
  3707 ;;		Unchanged: 0/0
  3708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3710 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3711 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3712 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3713 ;;Total ram usage:        0 bytes
  3714 ;; Hardware stack levels used:    1
  3715 ;; Hardware stack levels required when called:    7
  3716 ;; This function calls:
  3717 ;;		Nothing
  3718 ;; This function is called by:
  3719 ;;		_TMR1_Initialize
  3720 ;; This function uses a non-reentrant model
  3721 ;;
  3722                           
  3723                           	psect	text7
  3724  00A452                     __ptext7:
  3725                           	opt stack 0
  3726  00A452                     _TMR1_StartTimer:
  3727                           	opt stack 21
  3728                           
  3729                           ;tmr1.c: 97: T1CONbits.TMR1ON = 1;
  3730                           
  3731                           ;incstack = 0
  3732  00A452  80CD               	bsf	4045,0,c	;volatile
  3733  00A454  0012               	return		;funcret
  3734  00A456                     __end_of_TMR1_StartTimer:
  3735                           	opt stack 0
  3736                           tblptru	equ	0xFF8
  3737                           tblptrh	equ	0xFF7
  3738                           tblptrl	equ	0xFF6
  3739                           tablat	equ	0xFF5
  3740                           intcon	equ	0xFF2
  3741                           postinc0	equ	0xFEE
  3742                           wreg	equ	0xFE8
  3743                           postdec2	equ	0xFDD
  3744                           fsr2h	equ	0xFDA
  3745                           fsr2l	equ	0xFD9
  3746                           status	equ	0xFD8
  3747                           
  3748 ;; *************** function _PIN_MANAGER_Initialize *****************
  3749 ;; Defined at:
  3750 ;;		line 53 in file "mcc_generated_files/pin_manager.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;		None
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, status,2, status,0, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3768 ;;Total ram usage:        0 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    8
  3771 ;; This function calls:
  3772 ;;		_IOCB4_SetInterruptHandler
  3773 ;;		_IOCB5_SetInterruptHandler
  3774 ;; This function is called by:
  3775 ;;		_SYSTEM_Initialize
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text8
  3780  008E68                     __ptext8:
  3781                           	opt stack 0
  3782  008E68                     _PIN_MANAGER_Initialize:
  3783                           	opt stack 21
  3784                           
  3785                           ;pin_manager.c: 58: LATE = 0x00;
  3786                           
  3787                           ;incstack = 0
  3788  008E68  0E00               	movlw	0
  3789  008E6A  6E8D               	movwf	3981,c	;volatile
  3790                           
  3791                           ;pin_manager.c: 59: LATD = 0x00;
  3792  008E6C  0E00               	movlw	0
  3793  008E6E  6E8C               	movwf	3980,c	;volatile
  3794                           
  3795                           ;pin_manager.c: 60: LATA = 0x00;
  3796  008E70  0E00               	movlw	0
  3797  008E72  6E89               	movwf	3977,c	;volatile
  3798                           
  3799                           ;pin_manager.c: 61: LATB = 0x00;
  3800  008E74  0E00               	movlw	0
  3801  008E76  6E8A               	movwf	3978,c	;volatile
  3802                           
  3803                           ;pin_manager.c: 62: LATC = 0x00;
  3804  008E78  0E00               	movlw	0
  3805  008E7A  6E8B               	movwf	3979,c	;volatile
  3806                           
  3807                           ;pin_manager.c: 67: TRISE = 0x07;
  3808  008E7C  0E07               	movlw	7
  3809  008E7E  6E96               	movwf	3990,c	;volatile
  3810                           
  3811                           ;pin_manager.c: 68: TRISA = 0xFF;
  3812  008E80  6892               	setf	3986,c	;volatile
  3813                           
  3814                           ;pin_manager.c: 69: TRISB = 0xFF;
  3815  008E82  6893               	setf	3987,c	;volatile
  3816                           
  3817                           ;pin_manager.c: 70: TRISC = 0xFE;
  3818  008E84  0EFE               	movlw	254
  3819  008E86  6E94               	movwf	3988,c	;volatile
  3820                           
  3821                           ;pin_manager.c: 71: TRISD = 0xE6;
  3822  008E88  0EE6               	movlw	230
  3823  008E8A  6E95               	movwf	3989,c	;volatile
  3824                           
  3825                           ;pin_manager.c: 76: ANSELC = 0xF8;
  3826  008E8C  0EF8               	movlw	248
  3827  008E8E  010F               	movlb	15	; () banked
  3828  008E90  6F3A               	movwf	58,b	;volatile
  3829                           
  3830                           ;pin_manager.c: 77: ANSELB = 0x08;
  3831  008E92  0E08               	movlw	8
  3832  008E94  010F               	movlb	15	; () banked
  3833  008E96  6F39               	movwf	57,b	;volatile
  3834                           
  3835                           ;pin_manager.c: 78: ANSELD = 0xE4;
  3836  008E98  0EE4               	movlw	228
  3837  008E9A  010F               	movlb	15	; () banked
  3838  008E9C  6F3B               	movwf	59,b	;volatile
  3839                           
  3840                           ;pin_manager.c: 79: ANSELE = 0x07;
  3841  008E9E  0E07               	movlw	7
  3842  008EA0  010F               	movlb	15	; () banked
  3843  008EA2  6F3C               	movwf	60,b	;volatile
  3844                           
  3845                           ;pin_manager.c: 80: ANSELA = 0x2F;
  3846  008EA4  0E2F               	movlw	47
  3847  008EA6  010F               	movlb	15	; () banked
  3848  008EA8  6F38               	movwf	56,b	;volatile
  3849                           
  3850                           ; BSR set to: 15
  3851                           ;pin_manager.c: 85: WPUB = 0xFF;
  3852  008EAA  6861               	setf	3937,c	;volatile
  3853                           
  3854                           ; BSR set to: 15
  3855                           ;pin_manager.c: 86: INTCON2bits.nRBPU = 0;
  3856  008EAC  9EF1               	bcf	intcon2,7,c	;volatile
  3857                           
  3858                           ; BSR set to: 15
  3859                           ;pin_manager.c: 94: IOCBbits.IOCB4 = 1;
  3860  008EAE  8862               	bsf	3938,4,c	;volatile
  3861                           
  3862                           ; BSR set to: 15
  3863                           ;pin_manager.c: 95: IOCBbits.IOCB5 = 1;
  3864  008EB0  8A62               	bsf	3938,5,c	;volatile
  3865                           
  3866                           ; BSR set to: 15
  3867                           ;pin_manager.c: 98: IOCB4_SetInterruptHandler(IOCB4_DefaultInterruptHandler);
  3868  008EB2  0E82               	movlw	low _IOCB4_DefaultInterruptHandler
  3869  008EB4  0100               	movlb	0	; () banked
  3870  008EB6  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  3871  008EB8  0EA4               	movlw	high _IOCB4_DefaultInterruptHandler
  3872  008EBA  0100               	movlb	0	; () banked
  3873  008EBC  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3874  008EBE  ECBE  F051         	call	_IOCB4_SetInterruptHandler	;wreg free
  3875                           
  3876                           ;pin_manager.c: 99: IOCB5_SetInterruptHandler(IOCB5_DefaultInterruptHandler);
  3877  008EC2  0E80               	movlw	low _IOCB5_DefaultInterruptHandler
  3878  008EC4  0100               	movlb	0	; () banked
  3879  008EC6  6F64               	movwf	IOCB5_SetInterruptHandler@InterruptHandler& (0+255),b
  3880  008EC8  0EA4               	movlw	high _IOCB5_DefaultInterruptHandler
  3881  008ECA  0100               	movlb	0	; () banked
  3882  008ECC  6F65               	movwf	(IOCB5_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  3883  008ECE  ECB4  F051         	call	_IOCB5_SetInterruptHandler	;wreg free
  3884                           
  3885                           ;pin_manager.c: 102: INTCONbits.RBIE = 1;
  3886  008ED2  86F2               	bsf	intcon,3,c	;volatile
  3887  008ED4  0012               	return		;funcret
  3888  008ED6                     __end_of_PIN_MANAGER_Initialize:
  3889                           	opt stack 0
  3890                           tblptru	equ	0xFF8
  3891                           tblptrh	equ	0xFF7
  3892                           tblptrl	equ	0xFF6
  3893                           tablat	equ	0xFF5
  3894                           intcon	equ	0xFF2
  3895                           intcon2	equ	0xFF1
  3896                           postinc0	equ	0xFEE
  3897                           wreg	equ	0xFE8
  3898                           postdec2	equ	0xFDD
  3899                           fsr2h	equ	0xFDA
  3900                           fsr2l	equ	0xFD9
  3901                           status	equ	0xFD8
  3902                           
  3903 ;; *************** function _IOCB5_SetInterruptHandler *****************
  3904 ;; Defined at:
  3905 ;;		line 170 in file "mcc_generated_files/pin_manager.c"
  3906 ;; Parameters:    Size  Location     Type
  3907 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  3908 ;;		 -> IOCB5_DefaultInterruptHandler(1), 
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3920 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3923 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    7
  3927 ;; This function calls:
  3928 ;;		Nothing
  3929 ;; This function is called by:
  3930 ;;		_PIN_MANAGER_Initialize
  3931 ;; This function uses a non-reentrant model
  3932 ;;
  3933                           
  3934                           	psect	text9
  3935  00A368                     __ptext9:
  3936                           	opt stack 0
  3937  00A368                     _IOCB5_SetInterruptHandler:
  3938                           	opt stack 21
  3939                           
  3940                           ;pin_manager.c: 171: IOCB5_InterruptHandler = InterruptHandler;
  3941                           
  3942                           ;incstack = 0
  3943  00A368  C064  F1F5         	movff	IOCB5_SetInterruptHandler@InterruptHandler,_IOCB5_InterruptHandler
  3944  00A36C  C065  F1F6         	movff	IOCB5_SetInterruptHandler@InterruptHandler+1,_IOCB5_InterruptHandler+1
  3945  00A370  0012               	return		;funcret
  3946  00A372                     __end_of_IOCB5_SetInterruptHandler:
  3947                           	opt stack 0
  3948                           tblptru	equ	0xFF8
  3949                           tblptrh	equ	0xFF7
  3950                           tblptrl	equ	0xFF6
  3951                           tablat	equ	0xFF5
  3952                           intcon	equ	0xFF2
  3953                           intcon2	equ	0xFF1
  3954                           postinc0	equ	0xFEE
  3955                           wreg	equ	0xFE8
  3956                           postdec2	equ	0xFDD
  3957                           fsr2h	equ	0xFDA
  3958                           fsr2l	equ	0xFD9
  3959                           status	equ	0xFD8
  3960                           
  3961 ;; *************** function _OSCILLATOR_Initialize *****************
  3962 ;; Defined at:
  3963 ;;		line 123 in file "mcc_generated_files/mcc.c"
  3964 ;; Parameters:    Size  Location     Type
  3965 ;;		None
  3966 ;; Auto vars:     Size  Location     Type
  3967 ;;		None
  3968 ;; Return value:  Size  Location     Type
  3969 ;;                  1    wreg      void 
  3970 ;; Registers used:
  3971 ;;		wreg, status,2
  3972 ;; Tracked objects:
  3973 ;;		On entry : 0/0
  3974 ;;		On exit  : 0/0
  3975 ;;		Unchanged: 0/0
  3976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3981 ;;Total ram usage:        0 bytes
  3982 ;; Hardware stack levels used:    1
  3983 ;; Hardware stack levels required when called:    7
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_SYSTEM_Initialize
  3988 ;; This function uses a non-reentrant model
  3989 ;;
  3990                           
  3991                           	psect	text10
  3992  00A324                     __ptext10:
  3993                           	opt stack 0
  3994  00A324                     _OSCILLATOR_Initialize:
  3995                           	opt stack 22
  3996                           
  3997                           ;mcc.c: 126: OSCCON = 0x70;
  3998                           
  3999                           ;incstack = 0
  4000  00A324  0E70               	movlw	112
  4001  00A326  6ED3               	movwf	4051,c	;volatile
  4002                           
  4003                           ;mcc.c: 128: OSCCON2 = 0x04;
  4004  00A328  0E04               	movlw	4
  4005  00A32A  6ED2               	movwf	4050,c	;volatile
  4006                           
  4007                           ;mcc.c: 130: OSCTUNE = 0x00;
  4008  00A32C  0E00               	movlw	0
  4009  00A32E  6E9B               	movwf	3995,c	;volatile
  4010  00A330  0012               	return		;funcret
  4011  00A332                     __end_of_OSCILLATOR_Initialize:
  4012                           	opt stack 0
  4013                           tblptru	equ	0xFF8
  4014                           tblptrh	equ	0xFF7
  4015                           tblptrl	equ	0xFF6
  4016                           tablat	equ	0xFF5
  4017                           intcon	equ	0xFF2
  4018                           intcon2	equ	0xFF1
  4019                           postinc0	equ	0xFEE
  4020                           wreg	equ	0xFE8
  4021                           postdec2	equ	0xFDD
  4022                           fsr2h	equ	0xFDA
  4023                           fsr2l	equ	0xFD9
  4024                           status	equ	0xFD8
  4025                           
  4026 ;; *************** function _LORAWAN_PlatformInit *****************
  4027 ;; Defined at:
  4028 ;;		line 72 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4029 ;; Parameters:    Size  Location     Type
  4030 ;;		None
  4031 ;; Auto vars:     Size  Location     Type
  4032 ;;		None
  4033 ;; Return value:  Size  Location     Type
  4034 ;;                  1    wreg      void 
  4035 ;; Registers used:
  4036 ;;		wreg, status,2, status,0, cstack
  4037 ;; Tracked objects:
  4038 ;;		On entry : 0/0
  4039 ;;		On exit  : 0/0
  4040 ;;		Unchanged: 0/0
  4041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4046 ;;Total ram usage:        0 bytes
  4047 ;; Hardware stack levels used:    1
  4048 ;; Hardware stack levels required when called:    9
  4049 ;; This function calls:
  4050 ;;		_DIO0_ISR_Lora_Init
  4051 ;;		_DIO1_ISR_Lora_Init
  4052 ;;		_DIO2_ISR_Lora_Init
  4053 ;;		_DIO3_ISR_Lora_Init
  4054 ;;		_DIO4_ISR_Lora_Init
  4055 ;;		_DIO5_ISR_Lora_Init
  4056 ;;		_SystemTimerInit
  4057 ;;		_TMR_ISR_Lora_Init
  4058 ;; This function is called by:
  4059 ;;		_SYSTEM_Initialize
  4060 ;; This function uses a non-reentrant model
  4061 ;;
  4062                           
  4063                           	psect	text11
  4064  009FE8                     __ptext11:
  4065                           	opt stack 0
  4066  009FE8                     _LORAWAN_PlatformInit:
  4067                           	opt stack 20
  4068                           
  4069                           ;lorawan_init.c: 74: TMR_ISR_Lora_Init();
  4070                           
  4071                           ;incstack = 0
  4072  009FE8  EC32  F051         	call	_TMR_ISR_Lora_Init	;wreg free
  4073                           
  4074                           ;lorawan_init.c: 75: DIO0_ISR_Lora_Init();
  4075  009FEC  EC56  F051         	call	_DIO0_ISR_Lora_Init	;wreg free
  4076                           
  4077                           ;lorawan_init.c: 76: DIO1_ISR_Lora_Init();
  4078  009FF0  EC4D  F051         	call	_DIO1_ISR_Lora_Init	;wreg free
  4079                           
  4080                           ;lorawan_init.c: 77: DIO2_ISR_Lora_Init();
  4081  009FF4  EC44  F051         	call	_DIO2_ISR_Lora_Init	;wreg free
  4082                           
  4083                           ;lorawan_init.c: 78: DIO3_ISR_Lora_Init();
  4084  009FF8  EC3E  F052         	call	_DIO3_ISR_Lora_Init	;wreg free
  4085                           
  4086                           ;lorawan_init.c: 79: DIO4_ISR_Lora_Init();
  4087  009FFC  EC3D  F052         	call	_DIO4_ISR_Lora_Init	;wreg free
  4088                           
  4089                           ;lorawan_init.c: 80: DIO5_ISR_Lora_Init();
  4090  00A000  EC3B  F051         	call	_DIO5_ISR_Lora_Init	;wreg free
  4091                           
  4092                           ;lorawan_init.c: 81: SystemTimerInit();
  4093  00A004  EC0E  F052         	call	_SystemTimerInit	;wreg free
  4094  00A008  0012               	return		;funcret
  4095  00A00A                     __end_of_LORAWAN_PlatformInit:
  4096                           	opt stack 0
  4097                           tblptru	equ	0xFF8
  4098                           tblptrh	equ	0xFF7
  4099                           tblptrl	equ	0xFF6
  4100                           tablat	equ	0xFF5
  4101                           intcon	equ	0xFF2
  4102                           intcon2	equ	0xFF1
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           postdec2	equ	0xFDD
  4106                           fsr2h	equ	0xFDA
  4107                           fsr2l	equ	0xFD9
  4108                           status	equ	0xFD8
  4109                           
  4110 ;; *************** function _TMR_ISR_Lora_Init *****************
  4111 ;; Defined at:
  4112 ;;		line 54 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
  4113 ;; Parameters:    Size  Location     Type
  4114 ;;		None
  4115 ;; Auto vars:     Size  Location     Type
  4116 ;;		None
  4117 ;; Return value:  Size  Location     Type
  4118 ;;                  1    wreg      void 
  4119 ;; Registers used:
  4120 ;;		wreg, status,2, status,0, cstack
  4121 ;; Tracked objects:
  4122 ;;		On entry : 0/0
  4123 ;;		On exit  : 0/0
  4124 ;;		Unchanged: 0/0
  4125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4130 ;;Total ram usage:        0 bytes
  4131 ;; Hardware stack levels used:    1
  4132 ;; Hardware stack levels required when called:    8
  4133 ;; This function calls:
  4134 ;;		_TMR1_SetInterruptHandler
  4135 ;; This function is called by:
  4136 ;;		_LORAWAN_PlatformInit
  4137 ;; This function uses a non-reentrant model
  4138 ;;
  4139                           
  4140                           	psect	text12
  4141  00A264                     __ptext12:
  4142                           	opt stack 0
  4143  00A264                     _TMR_ISR_Lora_Init:
  4144                           	opt stack 20
  4145                           
  4146                           ;tmr_lora_addons.c: 56: TMR1_SetInterruptHandler(TMR_ISR_lora);
  4147                           
  4148                           ;incstack = 0
  4149  00A264  0EE2               	movlw	low _TMR_ISR_lora
  4150  00A266  0100               	movlb	0	; () banked
  4151  00A268  6F64               	movwf	TMR1_SetInterruptHandler@InterruptHandler& (0+255),b
  4152  00A26A  0E93               	movlw	high _TMR_ISR_lora
  4153  00A26C  0100               	movlb	0	; () banked
  4154  00A26E  6F65               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4155  00A270  ECB9  F051         	call	_TMR1_SetInterruptHandler	;wreg free
  4156  00A274  0012               	return		;funcret
  4157  00A276                     __end_of_TMR_ISR_Lora_Init:
  4158                           	opt stack 0
  4159                           tblptru	equ	0xFF8
  4160                           tblptrh	equ	0xFF7
  4161                           tblptrl	equ	0xFF6
  4162                           tablat	equ	0xFF5
  4163                           intcon	equ	0xFF2
  4164                           intcon2	equ	0xFF1
  4165                           postinc0	equ	0xFEE
  4166                           wreg	equ	0xFE8
  4167                           postdec2	equ	0xFDD
  4168                           fsr2h	equ	0xFDA
  4169                           fsr2l	equ	0xFD9
  4170                           status	equ	0xFD8
  4171                           
  4172 ;; *************** function _TMR1_SetInterruptHandler *****************
  4173 ;; Defined at:
  4174 ;;		line 183 in file "mcc_generated_files/tmr1.c"
  4175 ;; Parameters:    Size  Location     Type
  4176 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4177 ;;		 -> TMR1_DefaultInterruptHandler(1), TMR_ISR_lora(1), 
  4178 ;; Auto vars:     Size  Location     Type
  4179 ;;		None
  4180 ;; Return value:  Size  Location     Type
  4181 ;;                  1    wreg      void 
  4182 ;; Registers used:
  4183 ;;		wreg, status,2, status,0
  4184 ;; Tracked objects:
  4185 ;;		On entry : 0/0
  4186 ;;		On exit  : 0/0
  4187 ;;		Unchanged: 0/0
  4188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4190 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4192 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4193 ;;Total ram usage:        2 bytes
  4194 ;; Hardware stack levels used:    1
  4195 ;; Hardware stack levels required when called:    7
  4196 ;; This function calls:
  4197 ;;		Nothing
  4198 ;; This function is called by:
  4199 ;;		_TMR_ISR_Lora_Init
  4200 ;;		_TMR1_Initialize
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           
  4204                           	psect	text13
  4205  00A372                     __ptext13:
  4206                           	opt stack 0
  4207  00A372                     _TMR1_SetInterruptHandler:
  4208                           	opt stack 21
  4209                           
  4210                           ;tmr1.c: 184: TMR1_InterruptHandler = InterruptHandler;
  4211                           
  4212                           ;incstack = 0
  4213  00A372  C064  F1F7         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  4214  00A376  C065  F1F8         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  4215  00A37A  0012               	return		;funcret
  4216  00A37C                     __end_of_TMR1_SetInterruptHandler:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           tblptrh	equ	0xFF7
  4220                           tblptrl	equ	0xFF6
  4221                           tablat	equ	0xFF5
  4222                           intcon	equ	0xFF2
  4223                           intcon2	equ	0xFF1
  4224                           postinc0	equ	0xFEE
  4225                           wreg	equ	0xFE8
  4226                           postdec2	equ	0xFDD
  4227                           fsr2h	equ	0xFDA
  4228                           fsr2l	equ	0xFD9
  4229                           status	equ	0xFD8
  4230                           
  4231 ;; *************** function _SystemTimerInit *****************
  4232 ;; Defined at:
  4233 ;;		line 135 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  4234 ;; Parameters:    Size  Location     Type
  4235 ;;		None
  4236 ;; Auto vars:     Size  Location     Type
  4237 ;;		None
  4238 ;; Return value:  Size  Location     Type
  4239 ;;                  1    wreg      void 
  4240 ;; Registers used:
  4241 ;;		wreg, status,2
  4242 ;; Tracked objects:
  4243 ;;		On entry : 0/0
  4244 ;;		On exit  : 0/0
  4245 ;;		Unchanged: 0/0
  4246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4247 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4250 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4251 ;;Total ram usage:        0 bytes
  4252 ;; Hardware stack levels used:    1
  4253 ;; Hardware stack levels required when called:    7
  4254 ;; This function calls:
  4255 ;;		Nothing
  4256 ;; This function is called by:
  4257 ;;		_LORAWAN_PlatformInit
  4258 ;; This function uses a non-reentrant model
  4259 ;;
  4260                           
  4261                           	psect	text14
  4262  00A41C                     __ptext14:
  4263                           	opt stack 0
  4264  00A41C                     _SystemTimerInit:
  4265                           	opt stack 21
  4266                           
  4267                           ;sw_timer.c: 137: allocatedTimers = 0;
  4268                           
  4269                           ;incstack = 0
  4270  00A41C  0E00               	movlw	0
  4271  00A41E  0100               	movlb	0	; () banked
  4272  00A420  6FFB               	movwf	_allocatedTimers& (0+255),b	;volatile
  4273                           
  4274                           ; BSR set to: 0
  4275  00A422  0012               	return		;funcret
  4276  00A424                     __end_of_SystemTimerInit:
  4277                           	opt stack 0
  4278                           tblptru	equ	0xFF8
  4279                           tblptrh	equ	0xFF7
  4280                           tblptrl	equ	0xFF6
  4281                           tablat	equ	0xFF5
  4282                           intcon	equ	0xFF2
  4283                           intcon2	equ	0xFF1
  4284                           postinc0	equ	0xFEE
  4285                           wreg	equ	0xFE8
  4286                           postdec2	equ	0xFDD
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _DIO5_ISR_Lora_Init *****************
  4292 ;; Defined at:
  4293 ;;		line 67 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, status,2, status,0, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:    8
  4314 ;; This function calls:
  4315 ;;		_INT0_SetInterruptHandler
  4316 ;; This function is called by:
  4317 ;;		_LORAWAN_PlatformInit
  4318 ;; This function uses a non-reentrant model
  4319 ;;
  4320                           
  4321                           	psect	text15
  4322  00A276                     __ptext15:
  4323                           	opt stack 0
  4324  00A276                     _DIO5_ISR_Lora_Init:
  4325                           	opt stack 20
  4326                           
  4327                           ;lorawan_init.c: 69: INT0_SetInterruptHandler(DIO5_ISR_Lora);
  4328                           
  4329                           ; BSR set to: 0
  4330                           ;incstack = 0
  4331  00A276  0E00               	movlw	0
  4332  00A278  0100               	movlb	0	; () banked
  4333  00A27A  6F64               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4334  00A27C  0E00               	movlw	0
  4335  00A27E  0100               	movlb	0	; () banked
  4336  00A280  6F65               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4337  00A282  ECCD  F051         	call	_INT0_SetInterruptHandler	;wreg free
  4338  00A286  0012               	return		;funcret
  4339  00A288                     __end_of_DIO5_ISR_Lora_Init:
  4340                           	opt stack 0
  4341                           tblptru	equ	0xFF8
  4342                           tblptrh	equ	0xFF7
  4343                           tblptrl	equ	0xFF6
  4344                           tablat	equ	0xFF5
  4345                           intcon	equ	0xFF2
  4346                           intcon2	equ	0xFF1
  4347                           postinc0	equ	0xFEE
  4348                           wreg	equ	0xFE8
  4349                           postdec2	equ	0xFDD
  4350                           fsr2h	equ	0xFDA
  4351                           fsr2l	equ	0xFD9
  4352                           status	equ	0xFD8
  4353                           
  4354 ;; *************** function _DIO4_ISR_Lora_Init *****************
  4355 ;; Defined at:
  4356 ;;		line 63 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;		None
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;		None
  4361 ;; Return value:  Size  Location     Type
  4362 ;;                  1    wreg      void 
  4363 ;; Registers used:
  4364 ;;		None
  4365 ;; Tracked objects:
  4366 ;;		On entry : 0/0
  4367 ;;		On exit  : 0/0
  4368 ;;		Unchanged: 0/0
  4369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4373 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4374 ;;Total ram usage:        0 bytes
  4375 ;; Hardware stack levels used:    1
  4376 ;; Hardware stack levels required when called:    7
  4377 ;; This function calls:
  4378 ;;		Nothing
  4379 ;; This function is called by:
  4380 ;;		_LORAWAN_PlatformInit
  4381 ;; This function uses a non-reentrant model
  4382 ;;
  4383                           
  4384                           	psect	text16
  4385  00A47A                     __ptext16:
  4386                           	opt stack 0
  4387  00A47A                     _DIO4_ISR_Lora_Init:
  4388                           	opt stack 21
  4389                           
  4390                           ;incstack = 0
  4391  00A47A  0012               	return		;funcret
  4392  00A47C                     __end_of_DIO4_ISR_Lora_Init:
  4393                           	opt stack 0
  4394                           tblptru	equ	0xFF8
  4395                           tblptrh	equ	0xFF7
  4396                           tblptrl	equ	0xFF6
  4397                           tablat	equ	0xFF5
  4398                           intcon	equ	0xFF2
  4399                           intcon2	equ	0xFF1
  4400                           postinc0	equ	0xFEE
  4401                           wreg	equ	0xFE8
  4402                           postdec2	equ	0xFDD
  4403                           fsr2h	equ	0xFDA
  4404                           fsr2l	equ	0xFD9
  4405                           status	equ	0xFD8
  4406                           
  4407 ;; *************** function _DIO3_ISR_Lora_Init *****************
  4408 ;; Defined at:
  4409 ;;		line 59 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;		None
  4412 ;; Auto vars:     Size  Location     Type
  4413 ;;		None
  4414 ;; Return value:  Size  Location     Type
  4415 ;;                  1    wreg      void 
  4416 ;; Registers used:
  4417 ;;		None
  4418 ;; Tracked objects:
  4419 ;;		On entry : 0/0
  4420 ;;		On exit  : 0/0
  4421 ;;		Unchanged: 0/0
  4422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4423 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;Total ram usage:        0 bytes
  4428 ;; Hardware stack levels used:    1
  4429 ;; Hardware stack levels required when called:    7
  4430 ;; This function calls:
  4431 ;;		Nothing
  4432 ;; This function is called by:
  4433 ;;		_LORAWAN_PlatformInit
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text17
  4438  00A47C                     __ptext17:
  4439                           	opt stack 0
  4440  00A47C                     _DIO3_ISR_Lora_Init:
  4441                           	opt stack 21
  4442                           
  4443                           ;incstack = 0
  4444  00A47C  0012               	return		;funcret
  4445  00A47E                     __end_of_DIO3_ISR_Lora_Init:
  4446                           	opt stack 0
  4447                           tblptru	equ	0xFF8
  4448                           tblptrh	equ	0xFF7
  4449                           tblptrl	equ	0xFF6
  4450                           tablat	equ	0xFF5
  4451                           intcon	equ	0xFF2
  4452                           intcon2	equ	0xFF1
  4453                           postinc0	equ	0xFEE
  4454                           wreg	equ	0xFE8
  4455                           postdec2	equ	0xFDD
  4456                           fsr2h	equ	0xFDA
  4457                           fsr2l	equ	0xFD9
  4458                           status	equ	0xFD8
  4459                           
  4460 ;; *************** function _DIO2_ISR_Lora_Init *****************
  4461 ;; Defined at:
  4462 ;;		line 54 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4463 ;; Parameters:    Size  Location     Type
  4464 ;;		None
  4465 ;; Auto vars:     Size  Location     Type
  4466 ;;		None
  4467 ;; Return value:  Size  Location     Type
  4468 ;;                  1    wreg      void 
  4469 ;; Registers used:
  4470 ;;		wreg, status,2, status,0, cstack
  4471 ;; Tracked objects:
  4472 ;;		On entry : 0/0
  4473 ;;		On exit  : 0/0
  4474 ;;		Unchanged: 0/0
  4475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4480 ;;Total ram usage:        0 bytes
  4481 ;; Hardware stack levels used:    1
  4482 ;; Hardware stack levels required when called:    8
  4483 ;; This function calls:
  4484 ;;		_IOCB4_SetInterruptHandler
  4485 ;; This function is called by:
  4486 ;;		_LORAWAN_PlatformInit
  4487 ;; This function uses a non-reentrant model
  4488 ;;
  4489                           
  4490                           	psect	text18
  4491  00A288                     __ptext18:
  4492                           	opt stack 0
  4493  00A288                     _DIO2_ISR_Lora_Init:
  4494                           	opt stack 20
  4495                           
  4496                           ;lorawan_init.c: 56: IOCB4_SetInterruptHandler(DIO2_ISR_Lora);
  4497                           
  4498                           ;incstack = 0
  4499  00A288  0E6E               	movlw	low _DIO2_ISR_Lora
  4500  00A28A  0100               	movlb	0	; () banked
  4501  00A28C  6F64               	movwf	IOCB4_SetInterruptHandler@InterruptHandler& (0+255),b
  4502  00A28E  0EA4               	movlw	high _DIO2_ISR_Lora
  4503  00A290  0100               	movlb	0	; () banked
  4504  00A292  6F65               	movwf	(IOCB4_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4505  00A294  ECBE  F051         	call	_IOCB4_SetInterruptHandler	;wreg free
  4506  00A298  0012               	return		;funcret
  4507  00A29A                     __end_of_DIO2_ISR_Lora_Init:
  4508                           	opt stack 0
  4509                           tblptru	equ	0xFF8
  4510                           tblptrh	equ	0xFF7
  4511                           tblptrl	equ	0xFF6
  4512                           tablat	equ	0xFF5
  4513                           intcon	equ	0xFF2
  4514                           intcon2	equ	0xFF1
  4515                           postinc0	equ	0xFEE
  4516                           wreg	equ	0xFE8
  4517                           postdec2	equ	0xFDD
  4518                           fsr2h	equ	0xFDA
  4519                           fsr2l	equ	0xFD9
  4520                           status	equ	0xFD8
  4521                           
  4522 ;; *************** function _IOCB4_SetInterruptHandler *****************
  4523 ;; Defined at:
  4524 ;;		line 141 in file "mcc_generated_files/pin_manager.c"
  4525 ;; Parameters:    Size  Location     Type
  4526 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4527 ;;		 -> DIO2_ISR_Lora(1), IOCB4_DefaultInterruptHandler(1), 
  4528 ;; Auto vars:     Size  Location     Type
  4529 ;;		None
  4530 ;; Return value:  Size  Location     Type
  4531 ;;                  1    wreg      void 
  4532 ;; Registers used:
  4533 ;;		wreg, status,2, status,0
  4534 ;; Tracked objects:
  4535 ;;		On entry : 0/0
  4536 ;;		On exit  : 0/0
  4537 ;;		Unchanged: 0/0
  4538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4539 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4542 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4543 ;;Total ram usage:        2 bytes
  4544 ;; Hardware stack levels used:    1
  4545 ;; Hardware stack levels required when called:    7
  4546 ;; This function calls:
  4547 ;;		Nothing
  4548 ;; This function is called by:
  4549 ;;		_PIN_MANAGER_Initialize
  4550 ;;		_DIO2_ISR_Lora_Init
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text19
  4555  00A37C                     __ptext19:
  4556                           	opt stack 0
  4557  00A37C                     _IOCB4_SetInterruptHandler:
  4558                           	opt stack 21
  4559                           
  4560                           ;pin_manager.c: 142: IOCB4_InterruptHandler = InterruptHandler;
  4561                           
  4562                           ;incstack = 0
  4563  00A37C  C064  F1F3         	movff	IOCB4_SetInterruptHandler@InterruptHandler,_IOCB4_InterruptHandler
  4564  00A380  C065  F1F4         	movff	IOCB4_SetInterruptHandler@InterruptHandler+1,_IOCB4_InterruptHandler+1
  4565  00A384  0012               	return		;funcret
  4566  00A386                     __end_of_IOCB4_SetInterruptHandler:
  4567                           	opt stack 0
  4568                           tblptru	equ	0xFF8
  4569                           tblptrh	equ	0xFF7
  4570                           tblptrl	equ	0xFF6
  4571                           tablat	equ	0xFF5
  4572                           intcon	equ	0xFF2
  4573                           intcon2	equ	0xFF1
  4574                           postinc0	equ	0xFEE
  4575                           wreg	equ	0xFE8
  4576                           postdec2	equ	0xFDD
  4577                           fsr2h	equ	0xFDA
  4578                           fsr2l	equ	0xFD9
  4579                           status	equ	0xFD8
  4580                           
  4581 ;; *************** function _DIO1_ISR_Lora_Init *****************
  4582 ;; Defined at:
  4583 ;;		line 49 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      void 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    8
  4604 ;; This function calls:
  4605 ;;		_INT2_SetInterruptHandler
  4606 ;; This function is called by:
  4607 ;;		_LORAWAN_PlatformInit
  4608 ;; This function uses a non-reentrant model
  4609 ;;
  4610                           
  4611                           	psect	text20
  4612  00A29A                     __ptext20:
  4613                           	opt stack 0
  4614  00A29A                     _DIO1_ISR_Lora_Init:
  4615                           	opt stack 20
  4616                           
  4617                           ;lorawan_init.c: 51: INT2_SetInterruptHandler(DIO1_ISR_Lora);
  4618                           
  4619                           ;incstack = 0
  4620  00A29A  0E72               	movlw	low _DIO1_ISR_Lora
  4621  00A29C  0100               	movlb	0	; () banked
  4622  00A29E  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4623  00A2A0  0EA4               	movlw	high _DIO1_ISR_Lora
  4624  00A2A2  0100               	movlb	0	; () banked
  4625  00A2A4  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4626  00A2A6  ECC3  F051         	call	_INT2_SetInterruptHandler	;wreg free
  4627  00A2AA  0012               	return		;funcret
  4628  00A2AC                     __end_of_DIO1_ISR_Lora_Init:
  4629                           	opt stack 0
  4630                           tblptru	equ	0xFF8
  4631                           tblptrh	equ	0xFF7
  4632                           tblptrl	equ	0xFF6
  4633                           tablat	equ	0xFF5
  4634                           intcon	equ	0xFF2
  4635                           intcon2	equ	0xFF1
  4636                           postinc0	equ	0xFEE
  4637                           wreg	equ	0xFE8
  4638                           postdec2	equ	0xFDD
  4639                           fsr2h	equ	0xFDA
  4640                           fsr2l	equ	0xFD9
  4641                           status	equ	0xFD8
  4642                           
  4643 ;; *************** function _DIO0_ISR_Lora_Init *****************
  4644 ;; Defined at:
  4645 ;;		line 44 in file "mcc_generated_files/LoRaWAN/lorawan_init.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;		None
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      void 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4663 ;;Total ram usage:        0 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    8
  4666 ;; This function calls:
  4667 ;;		_INT1_SetInterruptHandler
  4668 ;; This function is called by:
  4669 ;;		_LORAWAN_PlatformInit
  4670 ;; This function uses a non-reentrant model
  4671 ;;
  4672                           
  4673                           	psect	text21
  4674  00A2AC                     __ptext21:
  4675                           	opt stack 0
  4676  00A2AC                     _DIO0_ISR_Lora_Init:
  4677                           	opt stack 20
  4678                           
  4679                           ;lorawan_init.c: 46: INT1_SetInterruptHandler(DIO0_ISR_Lora);
  4680                           
  4681                           ;incstack = 0
  4682  00A2AC  0E76               	movlw	low _DIO0_ISR_Lora
  4683  00A2AE  0100               	movlb	0	; () banked
  4684  00A2B0  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4685  00A2B2  0EA4               	movlw	high _DIO0_ISR_Lora
  4686  00A2B4  0100               	movlb	0	; () banked
  4687  00A2B6  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4688  00A2B8  ECC8  F051         	call	_INT1_SetInterruptHandler	;wreg free
  4689  00A2BC  0012               	return		;funcret
  4690  00A2BE                     __end_of_DIO0_ISR_Lora_Init:
  4691                           	opt stack 0
  4692                           tblptru	equ	0xFF8
  4693                           tblptrh	equ	0xFF7
  4694                           tblptrl	equ	0xFF6
  4695                           tablat	equ	0xFF5
  4696                           intcon	equ	0xFF2
  4697                           intcon2	equ	0xFF1
  4698                           postinc0	equ	0xFEE
  4699                           wreg	equ	0xFE8
  4700                           postdec2	equ	0xFDD
  4701                           fsr2h	equ	0xFDA
  4702                           fsr2l	equ	0xFD9
  4703                           status	equ	0xFD8
  4704                           
  4705 ;; *************** function _INTERRUPT_Initialize *****************
  4706 ;; Defined at:
  4707 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;		None
  4710 ;; Auto vars:     Size  Location     Type
  4711 ;;		None
  4712 ;; Return value:  Size  Location     Type
  4713 ;;                  1    wreg      void 
  4714 ;; Registers used:
  4715 ;;		None
  4716 ;; Tracked objects:
  4717 ;;		On entry : 0/0
  4718 ;;		On exit  : 0/0
  4719 ;;		Unchanged: 0/0
  4720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4724 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4725 ;;Total ram usage:        0 bytes
  4726 ;; Hardware stack levels used:    1
  4727 ;; Hardware stack levels required when called:    7
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_SYSTEM_Initialize
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           	psect	text22
  4736  00A456                     __ptext22:
  4737                           	opt stack 0
  4738  00A456                     _INTERRUPT_Initialize:
  4739                           	opt stack 22
  4740                           
  4741                           ;interrupt_manager.c: 54: RCONbits.IPEN = 0;
  4742                           
  4743                           ;incstack = 0
  4744  00A456  9ED0               	bcf	4048,7,c	;volatile
  4745  00A458  0012               	return		;funcret
  4746  00A45A                     __end_of_INTERRUPT_Initialize:
  4747                           	opt stack 0
  4748                           tblptru	equ	0xFF8
  4749                           tblptrh	equ	0xFF7
  4750                           tblptrl	equ	0xFF6
  4751                           tablat	equ	0xFF5
  4752                           intcon	equ	0xFF2
  4753                           intcon2	equ	0xFF1
  4754                           postinc0	equ	0xFEE
  4755                           wreg	equ	0xFE8
  4756                           postdec2	equ	0xFDD
  4757                           fsr2h	equ	0xFDA
  4758                           fsr2l	equ	0xFD9
  4759                           status	equ	0xFD8
  4760                           
  4761 ;; *************** function _EXT_INT_Initialize *****************
  4762 ;; Defined at:
  4763 ;;		line 176 in file "mcc_generated_files/ext_int.c"
  4764 ;; Parameters:    Size  Location     Type
  4765 ;;		None
  4766 ;; Auto vars:     Size  Location     Type
  4767 ;;		None
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  1    wreg      void 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4777 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4778 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4779 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;Total ram usage:        0 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    8
  4784 ;; This function calls:
  4785 ;;		_INT0_SetInterruptHandler
  4786 ;;		_INT1_SetInterruptHandler
  4787 ;;		_INT2_SetInterruptHandler
  4788 ;; This function is called by:
  4789 ;;		_SYSTEM_Initialize
  4790 ;; This function uses a non-reentrant model
  4791 ;;
  4792                           
  4793                           	psect	text23
  4794  0098AA                     __ptext23:
  4795                           	opt stack 0
  4796  0098AA                     _EXT_INT_Initialize:
  4797                           	opt stack 21
  4798                           
  4799                           ;ext_int.c: 185: (INTCON3bits.INT1IF = 0);
  4800                           
  4801                           ;incstack = 0
  4802  0098AA  90F0               	bcf	intcon3,0,c	;volatile
  4803                           
  4804                           ;ext_int.c: 186: (INTCON2bits.INTEDG1 = 1);
  4805  0098AC  8AF1               	bsf	intcon2,5,c	;volatile
  4806                           
  4807                           ;ext_int.c: 188: INT1_SetInterruptHandler(INT1_DefaultInterruptHandler);
  4808  0098AE  0E86               	movlw	low _INT1_DefaultInterruptHandler
  4809  0098B0  0100               	movlb	0	; () banked
  4810  0098B2  6F64               	movwf	INT1_SetInterruptHandler@InterruptHandler& (0+255),b
  4811  0098B4  0EA4               	movlw	high _INT1_DefaultInterruptHandler
  4812  0098B6  0100               	movlb	0	; () banked
  4813  0098B8  6F65               	movwf	(INT1_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4814  0098BA  ECC8  F051         	call	_INT1_SetInterruptHandler	;wreg free
  4815                           
  4816                           ;ext_int.c: 189: (INTCON3bits.INT1IE = 1);
  4817  0098BE  86F0               	bsf	intcon3,3,c	;volatile
  4818                           
  4819                           ;ext_int.c: 200: (INTCON3bits.INT2IF = 0);
  4820  0098C0  92F0               	bcf	intcon3,1,c	;volatile
  4821                           
  4822                           ;ext_int.c: 201: (INTCON2bits.INTEDG2 = 1);
  4823  0098C2  88F1               	bsf	intcon2,4,c	;volatile
  4824                           
  4825                           ;ext_int.c: 203: INT2_SetInterruptHandler(INT2_DefaultInterruptHandler);
  4826  0098C4  0E84               	movlw	low _INT2_DefaultInterruptHandler
  4827  0098C6  0100               	movlb	0	; () banked
  4828  0098C8  6F64               	movwf	INT2_SetInterruptHandler@InterruptHandler& (0+255),b
  4829  0098CA  0EA4               	movlw	high _INT2_DefaultInterruptHandler
  4830  0098CC  0100               	movlb	0	; () banked
  4831  0098CE  6F65               	movwf	(INT2_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4832  0098D0  ECC3  F051         	call	_INT2_SetInterruptHandler	;wreg free
  4833                           
  4834                           ;ext_int.c: 204: (INTCON3bits.INT2IE = 1);
  4835  0098D4  88F0               	bsf	intcon3,4,c	;volatile
  4836                           
  4837                           ;ext_int.c: 215: (INTCONbits.INT0IF = 0);
  4838  0098D6  92F2               	bcf	intcon,1,c	;volatile
  4839                           
  4840                           ;ext_int.c: 216: (INTCON2bits.INTEDG0 = 1);
  4841  0098D8  8CF1               	bsf	intcon2,6,c	;volatile
  4842                           
  4843                           ;ext_int.c: 218: INT0_SetInterruptHandler(INT0_DefaultInterruptHandler);
  4844  0098DA  0E00               	movlw	0
  4845  0098DC  0100               	movlb	0	; () banked
  4846  0098DE  6F64               	movwf	INT0_SetInterruptHandler@InterruptHandler& (0+255),b
  4847  0098E0  0E00               	movlw	0
  4848  0098E2  0100               	movlb	0	; () banked
  4849  0098E4  6F65               	movwf	(INT0_SetInterruptHandler@InterruptHandler+1)& (0+255),b
  4850  0098E6  ECCD  F051         	call	_INT0_SetInterruptHandler	;wreg free
  4851  0098EA  0012               	return		;funcret
  4852  0098EC                     __end_of_EXT_INT_Initialize:
  4853                           	opt stack 0
  4854                           tblptru	equ	0xFF8
  4855                           tblptrh	equ	0xFF7
  4856                           tblptrl	equ	0xFF6
  4857                           tablat	equ	0xFF5
  4858                           intcon	equ	0xFF2
  4859                           intcon2	equ	0xFF1
  4860                           intcon3	equ	0xFF0
  4861                           postinc0	equ	0xFEE
  4862                           wreg	equ	0xFE8
  4863                           postdec2	equ	0xFDD
  4864                           fsr2h	equ	0xFDA
  4865                           fsr2l	equ	0xFD9
  4866                           status	equ	0xFD8
  4867                           
  4868 ;; *************** function _INT2_SetInterruptHandler *****************
  4869 ;; Defined at:
  4870 ;;		line 113 in file "mcc_generated_files/ext_int.c"
  4871 ;; Parameters:    Size  Location     Type
  4872 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4873 ;;		 -> DIO1_ISR_Lora(1), INT2_DefaultInterruptHandler(1), 
  4874 ;; Auto vars:     Size  Location     Type
  4875 ;;		None
  4876 ;; Return value:  Size  Location     Type
  4877 ;;                  1    wreg      void 
  4878 ;; Registers used:
  4879 ;;		wreg, status,2, status,0
  4880 ;; Tracked objects:
  4881 ;;		On entry : 0/0
  4882 ;;		On exit  : 0/0
  4883 ;;		Unchanged: 0/0
  4884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4886 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4888 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4889 ;;Total ram usage:        2 bytes
  4890 ;; Hardware stack levels used:    1
  4891 ;; Hardware stack levels required when called:    7
  4892 ;; This function calls:
  4893 ;;		Nothing
  4894 ;; This function is called by:
  4895 ;;		_EXT_INT_Initialize
  4896 ;;		_DIO1_ISR_Lora_Init
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           	psect	text24
  4901  00A386                     __ptext24:
  4902                           	opt stack 0
  4903  00A386                     _INT2_SetInterruptHandler:
  4904                           	opt stack 20
  4905                           
  4906                           ;ext_int.c: 114: INT2_InterruptHandler = InterruptHandler;
  4907                           
  4908                           ;incstack = 0
  4909  00A386  C064  F1F1         	movff	INT2_SetInterruptHandler@InterruptHandler,_INT2_InterruptHandler
  4910  00A38A  C065  F1F2         	movff	INT2_SetInterruptHandler@InterruptHandler+1,_INT2_InterruptHandler+1
  4911  00A38E  0012               	return		;funcret
  4912  00A390                     __end_of_INT2_SetInterruptHandler:
  4913                           	opt stack 0
  4914                           tblptru	equ	0xFF8
  4915                           tblptrh	equ	0xFF7
  4916                           tblptrl	equ	0xFF6
  4917                           tablat	equ	0xFF5
  4918                           intcon	equ	0xFF2
  4919                           intcon2	equ	0xFF1
  4920                           intcon3	equ	0xFF0
  4921                           postinc0	equ	0xFEE
  4922                           wreg	equ	0xFE8
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function _INT1_SetInterruptHandler *****************
  4929 ;; Defined at:
  4930 ;;		line 72 in file "mcc_generated_files/ext_int.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4933 ;;		 -> DIO0_ISR_Lora(1), INT1_DefaultInterruptHandler(1), 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;		None
  4936 ;; Return value:  Size  Location     Type
  4937 ;;                  1    wreg      void 
  4938 ;; Registers used:
  4939 ;;		wreg, status,2, status,0
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4945 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4948 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4949 ;;Total ram usage:        2 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:    7
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_EXT_INT_Initialize
  4956 ;;		_DIO0_ISR_Lora_Init
  4957 ;; This function uses a non-reentrant model
  4958 ;;
  4959                           
  4960                           	psect	text25
  4961  00A390                     __ptext25:
  4962                           	opt stack 0
  4963  00A390                     _INT1_SetInterruptHandler:
  4964                           	opt stack 20
  4965                           
  4966                           ;ext_int.c: 73: INT1_InterruptHandler = InterruptHandler;
  4967                           
  4968                           ;incstack = 0
  4969  00A390  C064  F1EF         	movff	INT1_SetInterruptHandler@InterruptHandler,_INT1_InterruptHandler
  4970  00A394  C065  F1F0         	movff	INT1_SetInterruptHandler@InterruptHandler+1,_INT1_InterruptHandler+1
  4971  00A398  0012               	return		;funcret
  4972  00A39A                     __end_of_INT1_SetInterruptHandler:
  4973                           	opt stack 0
  4974                           tblptru	equ	0xFF8
  4975                           tblptrh	equ	0xFF7
  4976                           tblptrl	equ	0xFF6
  4977                           tablat	equ	0xFF5
  4978                           intcon	equ	0xFF2
  4979                           intcon2	equ	0xFF1
  4980                           intcon3	equ	0xFF0
  4981                           postinc0	equ	0xFEE
  4982                           wreg	equ	0xFE8
  4983                           postdec2	equ	0xFDD
  4984                           fsr2h	equ	0xFDA
  4985                           fsr2l	equ	0xFD9
  4986                           status	equ	0xFD8
  4987                           
  4988 ;; *************** function _INT0_SetInterruptHandler *****************
  4989 ;; Defined at:
  4990 ;;		line 154 in file "mcc_generated_files/ext_int.c"
  4991 ;; Parameters:    Size  Location     Type
  4992 ;;  InterruptHan    2    4[BANK0 ] PTR void 
  4993 ;;		 -> DIO5_ISR_Lora(1), INT0_DefaultInterruptHandler(1), 
  4994 ;; Auto vars:     Size  Location     Type
  4995 ;;		None
  4996 ;; Return value:  Size  Location     Type
  4997 ;;                  1    wreg      void 
  4998 ;; Registers used:
  4999 ;;		wreg, status,2, status,0
  5000 ;; Tracked objects:
  5001 ;;		On entry : 0/0
  5002 ;;		On exit  : 0/0
  5003 ;;		Unchanged: 0/0
  5004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5005 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5008 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5009 ;;Total ram usage:        2 bytes
  5010 ;; Hardware stack levels used:    1
  5011 ;; Hardware stack levels required when called:    7
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_EXT_INT_Initialize
  5016 ;;		_DIO5_ISR_Lora_Init
  5017 ;; This function uses a non-reentrant model
  5018 ;;
  5019                           
  5020                           	psect	text26
  5021  00A39A                     __ptext26:
  5022                           	opt stack 0
  5023  00A39A                     _INT0_SetInterruptHandler:
  5024                           	opt stack 20
  5025                           
  5026                           ;ext_int.c: 155: INT0_InterruptHandler = InterruptHandler;
  5027                           
  5028                           ;incstack = 0
  5029  00A39A  C064  F1ED         	movff	INT0_SetInterruptHandler@InterruptHandler,_INT0_InterruptHandler
  5030  00A39E  C065  F1EE         	movff	INT0_SetInterruptHandler@InterruptHandler+1,_INT0_InterruptHandler+1
  5031  00A3A2  0012               	return		;funcret
  5032  00A3A4                     __end_of_INT0_SetInterruptHandler:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           intcon	equ	0xFF2
  5039                           intcon2	equ	0xFF1
  5040                           intcon3	equ	0xFF0
  5041                           postinc0	equ	0xFEE
  5042                           wreg	equ	0xFE8
  5043                           postdec2	equ	0xFDD
  5044                           fsr2h	equ	0xFDA
  5045                           fsr2l	equ	0xFD9
  5046                           status	equ	0xFD8
  5047                           
  5048 ;; *************** function _LoRaWakeUp *****************
  5049 ;; Defined at:
  5050 ;;		line 279 in file "main.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;		None
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  1    wreg      void 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, cstack
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5064 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5065 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5066 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;Total ram usage:        0 bytes
  5069 ;; Hardware stack levels used:    1
  5070 ;; Hardware stack levels required when called:    8
  5071 ;; This function calls:
  5072 ;;		_SPI2_Initialize
  5073 ;; This function is called by:
  5074 ;;		_main
  5075 ;; This function uses a non-reentrant model
  5076 ;;
  5077                           
  5078                           	psect	text27
  5079  00A3A4                     __ptext27:
  5080                           	opt stack 0
  5081  00A3A4                     _LoRaWakeUp:
  5082                           	opt stack 22
  5083                           
  5084                           ;main.c: 281: MSSP2MD = 0;
  5085                           
  5086                           ;incstack = 0
  5087  00A3A4  010F               	movlb	15	; () banked
  5088  00A3A6  9F3E               	bcf	62,7,b	;volatile
  5089                           
  5090                           ; BSR set to: 15
  5091                           ;main.c: 282: SPI2_Initialize();
  5092  00A3A8  EC99  F051         	call	_SPI2_Initialize	;wreg free
  5093  00A3AC  0012               	return		;funcret
  5094  00A3AE                     __end_of_LoRaWakeUp:
  5095                           	opt stack 0
  5096                           tblptru	equ	0xFF8
  5097                           tblptrh	equ	0xFF7
  5098                           tblptrl	equ	0xFF6
  5099                           tablat	equ	0xFF5
  5100                           intcon	equ	0xFF2
  5101                           intcon2	equ	0xFF1
  5102                           intcon3	equ	0xFF0
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           postdec2	equ	0xFDD
  5106                           fsr2h	equ	0xFDA
  5107                           fsr2l	equ	0xFD9
  5108                           status	equ	0xFD8
  5109                           
  5110 ;; *************** function _SPI2_Initialize *****************
  5111 ;; Defined at:
  5112 ;;		line 63 in file "mcc_generated_files/spi2.c"
  5113 ;; Parameters:    Size  Location     Type
  5114 ;;		None
  5115 ;; Auto vars:     Size  Location     Type
  5116 ;;		None
  5117 ;; Return value:  Size  Location     Type
  5118 ;;                  1    wreg      void 
  5119 ;; Registers used:
  5120 ;;		wreg, status,2
  5121 ;; Tracked objects:
  5122 ;;		On entry : 0/0
  5123 ;;		On exit  : 0/0
  5124 ;;		Unchanged: 0/0
  5125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5130 ;;Total ram usage:        0 bytes
  5131 ;; Hardware stack levels used:    1
  5132 ;; Hardware stack levels required when called:    7
  5133 ;; This function calls:
  5134 ;;		Nothing
  5135 ;; This function is called by:
  5136 ;;		_SYSTEM_Initialize
  5137 ;;		_LoRaWakeUp
  5138 ;; This function uses a non-reentrant model
  5139 ;;
  5140                           
  5141                           	psect	text28
  5142  00A332                     __ptext28:
  5143                           	opt stack 0
  5144  00A332                     _SPI2_Initialize:
  5145                           	opt stack 22
  5146                           
  5147                           ;spi2.c: 68: SSP2STAT = 0x40;
  5148                           
  5149                           ;incstack = 0
  5150  00A332  0E40               	movlw	64
  5151  00A334  6E6D               	movwf	3949,c	;volatile
  5152                           
  5153                           ;spi2.c: 71: SSP2CON1 = 0x20;
  5154  00A336  0E20               	movlw	32
  5155  00A338  6E6C               	movwf	3948,c	;volatile
  5156                           
  5157                           ;spi2.c: 74: SSP2ADD = 0x00;
  5158  00A33A  0E00               	movlw	0
  5159  00A33C  6E6E               	movwf	3950,c	;volatile
  5160  00A33E  0012               	return		;funcret
  5161  00A340                     __end_of_SPI2_Initialize:
  5162                           	opt stack 0
  5163                           tblptru	equ	0xFF8
  5164                           tblptrh	equ	0xFF7
  5165                           tblptrl	equ	0xFF6
  5166                           tablat	equ	0xFF5
  5167                           intcon	equ	0xFF2
  5168                           intcon2	equ	0xFF1
  5169                           intcon3	equ	0xFF0
  5170                           postinc0	equ	0xFEE
  5171                           wreg	equ	0xFE8
  5172                           postdec2	equ	0xFDD
  5173                           fsr2h	equ	0xFDA
  5174                           fsr2l	equ	0xFD9
  5175                           status	equ	0xFD8
  5176                           
  5177 ;; *************** function _LoRaSleep *****************
  5178 ;; Defined at:
  5179 ;;		line 249 in file "main.c"
  5180 ;; Parameters:    Size  Location     Type
  5181 ;;		None
  5182 ;; Auto vars:     Size  Location     Type
  5183 ;;		None
  5184 ;; Return value:  Size  Location     Type
  5185 ;;                  1    wreg      void 
  5186 ;; Registers used:
  5187 ;;		wreg, status,2
  5188 ;; Tracked objects:
  5189 ;;		On entry : 0/0
  5190 ;;		On exit  : 0/0
  5191 ;;		Unchanged: 0/0
  5192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5196 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5197 ;;Total ram usage:        0 bytes
  5198 ;; Hardware stack levels used:    1
  5199 ;; Hardware stack levels required when called:    7
  5200 ;; This function calls:
  5201 ;;		Nothing
  5202 ;; This function is called by:
  5203 ;;		_main
  5204 ;; This function uses a non-reentrant model
  5205 ;;
  5206                           
  5207                           	psect	text29
  5208  009E1C                     __ptext29:
  5209                           	opt stack 0
  5210  009E1C                     _LoRaSleep:
  5211                           	opt stack 23
  5212                           
  5213                           ;main.c: 252: SSP2CON1 = 0x00;
  5214                           
  5215                           ;incstack = 0
  5216  009E1C  0E00               	movlw	0
  5217  009E1E  6E6C               	movwf	3948,c	;volatile
  5218                           
  5219                           ;main.c: 255: MSSP2MD = 1;
  5220  009E20  010F               	movlb	15	; () banked
  5221  009E22  8F3E               	bsf	62,7,b	;volatile
  5222                           
  5223                           ; BSR set to: 15
  5224                           ;main.c: 259: ANSD3 = 0;
  5225  009E24  010F               	movlb	15	; () banked
  5226  009E26  973B               	bcf	59,3,b	;volatile
  5227                           
  5228                           ; BSR set to: 15
  5229                           ;main.c: 260: TRISD3 = 0;
  5230  009E28  9695               	bcf	3989,3,c	;volatile
  5231                           
  5232                           ; BSR set to: 15
  5233                           ;main.c: 261: LATD3 = 1;
  5234  009E2A  868C               	bsf	3980,3,c	;volatile
  5235                           
  5236                           ; BSR set to: 15
  5237                           ;main.c: 264: ANSD1 = 0;
  5238  009E2C  010F               	movlb	15	; () banked
  5239  009E2E  933B               	bcf	59,1,b	;volatile
  5240                           
  5241                           ; BSR set to: 15
  5242                           ;main.c: 265: TRISD1 = 0;
  5243  009E30  9295               	bcf	3989,1,c	;volatile
  5244                           
  5245                           ; BSR set to: 15
  5246                           ;main.c: 266: LATD1 = 0;
  5247  009E32  928C               	bcf	3980,1,c	;volatile
  5248                           
  5249                           ; BSR set to: 15
  5250                           ;main.c: 269: ANSD4 = 0;
  5251  009E34  010F               	movlb	15	; () banked
  5252  009E36  993B               	bcf	59,4,b	;volatile
  5253                           
  5254                           ; BSR set to: 15
  5255                           ;main.c: 270: TRISD4 = 0;
  5256  009E38  9895               	bcf	3989,4,c	;volatile
  5257                           
  5258                           ; BSR set to: 15
  5259                           ;main.c: 271: LATD4 = 0;
  5260  009E3A  988C               	bcf	3980,4,c	;volatile
  5261                           
  5262                           ; BSR set to: 15
  5263                           ;main.c: 274: ANSD0 = 0;
  5264  009E3C  010F               	movlb	15	; () banked
  5265  009E3E  913B               	bcf	59,0,b	;volatile
  5266                           
  5267                           ; BSR set to: 15
  5268                           ;main.c: 275: TRISD0 = 0;
  5269  009E40  9095               	bcf	3989,0,c	;volatile
  5270                           
  5271                           ; BSR set to: 15
  5272                           ;main.c: 276: LATD0 = 0;
  5273  009E42  908C               	bcf	3980,0,c	;volatile
  5274                           
  5275                           ; BSR set to: 15
  5276  009E44  0012               	return		;funcret
  5277  009E46                     __end_of_LoRaSleep:
  5278                           	opt stack 0
  5279                           tblptru	equ	0xFF8
  5280                           tblptrh	equ	0xFF7
  5281                           tblptrl	equ	0xFF6
  5282                           tablat	equ	0xFF5
  5283                           intcon	equ	0xFF2
  5284                           intcon2	equ	0xFF1
  5285                           intcon3	equ	0xFF0
  5286                           postinc0	equ	0xFEE
  5287                           wreg	equ	0xFE8
  5288                           postdec2	equ	0xFDD
  5289                           fsr2h	equ	0xFDA
  5290                           fsr2l	equ	0xFD9
  5291                           status	equ	0xFD8
  5292                           
  5293 ;; *************** function _LORAWAN_SetNetworkSessionKey *****************
  5294 ;; Defined at:
  5295 ;;		line 379 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5296 ;; Parameters:    Size  Location     Type
  5297 ;;  networkSessi    2   14[BANK0 ] PTR unsigned char 
  5298 ;;		 -> nwkSKey(16), 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;		None
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      void 
  5303 ;; Registers used:
  5304 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5310 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5311 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5312 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5313 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;Total ram usage:        2 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    8
  5317 ;; This function calls:
  5318 ;;		_memcpy
  5319 ;; This function is called by:
  5320 ;;		_main
  5321 ;; This function uses a non-reentrant model
  5322 ;;
  5323                           
  5324                           	psect	text30
  5325  009A62                     __ptext30:
  5326                           	opt stack 0
  5327  009A62                     _LORAWAN_SetNetworkSessionKey:
  5328                           	opt stack 22
  5329                           
  5330                           ;lorawan.c: 381: if (networkSessionKeyNew != (0))
  5331                           
  5332                           ; BSR set to: 15
  5333                           ;incstack = 0
  5334  009A62  0100               	movlb	0	; () banked
  5335  009A64  516E               	movf	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew& (0+255),w,b
  5336  009A66  0100               	movlb	0	; () banked
  5337  009A68  116F               	iorwf	(LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1)& (0+255),w,b
  5338  009A6A  B4D8               	btfsc	status,2,c
  5339  009A6C  0012               	return	
  5340                           
  5341                           ; BSR set to: 0
  5342                           ;lorawan.c: 382: {
  5343                           ;lorawan.c: 383: memcpy(loRa.activationParameters.networkSessionKey, networkSessionKeyNe
      +                          w, 16);
  5344  009A6E  0E22               	movlw	low (_loRa+34)
  5345  009A70  0100               	movlb	0	; () banked
  5346  009A72  6F64               	movwf	memcpy@d1& (0+255),b
  5347  009A74  0E02               	movlw	high (_loRa+34)
  5348  009A76  0100               	movlb	0	; () banked
  5349  009A78  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5350  009A7A  C06E  F066         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew,memcpy@s1
  5351  009A7E  C06F  F067         	movff	LORAWAN_SetNetworkSessionKey@networkSessionKeyNew+1,memcpy@s1+1
  5352  009A82  0E00               	movlw	0
  5353  009A84  0100               	movlb	0	; () banked
  5354  009A86  6F69               	movwf	(memcpy@n+1)& (0+255),b
  5355  009A88  0E10               	movlw	16
  5356  009A8A  6F68               	movwf	memcpy@n& (0+255),b
  5357  009A8C  EC07  F049         	call	_memcpy	;wreg free
  5358                           
  5359                           ;lorawan.c: 384: loRa.macKeys.networkSessionKey = 1;
  5360  009A90  0102               	movlb	2	; () banked
  5361  009A92  89A5               	bsf	(_loRa+165)& (0+255),4,b
  5362                           
  5363                           ; BSR set to: 2
  5364                           ;lorawan.c: 385: loRa.macStatus.networkJoined = 0;
  5365  009A94  0102               	movlb	2	; () banked
  5366  009A96  9902               	bcf	(_loRa+2)& (0+255),4,b
  5367  009A98  0012               	return	
  5368  009A9A                     __end_of_LORAWAN_SetNetworkSessionKey:
  5369                           	opt stack 0
  5370                           tblptru	equ	0xFF8
  5371                           tblptrh	equ	0xFF7
  5372                           tblptrl	equ	0xFF6
  5373                           tablat	equ	0xFF5
  5374                           intcon	equ	0xFF2
  5375                           intcon2	equ	0xFF1
  5376                           intcon3	equ	0xFF0
  5377                           postinc0	equ	0xFEE
  5378                           wreg	equ	0xFE8
  5379                           postdec2	equ	0xFDD
  5380                           fsr2h	equ	0xFDA
  5381                           fsr2l	equ	0xFD9
  5382                           status	equ	0xFD8
  5383                           
  5384 ;; *************** function _LORAWAN_SetDeviceAddress *****************
  5385 ;; Defined at:
  5386 ;;		line 367 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5387 ;; Parameters:    Size  Location     Type
  5388 ;;  deviceAddres    4    4[BANK0 ] unsigned long 
  5389 ;; Auto vars:     Size  Location     Type
  5390 ;;		None
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		None
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5400 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;Total ram usage:        4 bytes
  5405 ;; Hardware stack levels used:    1
  5406 ;; Hardware stack levels required when called:    7
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_main
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text31
  5415  00A1D4                     __ptext31:
  5416                           	opt stack 0
  5417  00A1D4                     _LORAWAN_SetDeviceAddress:
  5418                           	opt stack 23
  5419                           
  5420                           ;lorawan.c: 369: loRa.activationParameters.deviceAddress.value = deviceAddressNew;
  5421                           
  5422                           ;incstack = 0
  5423  00A1D4  C064  F21E         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew,_loRa+30
  5424  00A1D8  C065  F21F         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+1,_loRa+31
  5425  00A1DC  C066  F220         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+2,_loRa+32
  5426  00A1E0  C067  F221         	movff	LORAWAN_SetDeviceAddress@deviceAddressNew+3,_loRa+33
  5427                           
  5428                           ;lorawan.c: 370: loRa.macKeys.deviceAddress = 1;
  5429  00A1E4  0102               	movlb	2	; () banked
  5430  00A1E6  85A5               	bsf	(_loRa+165)& (0+255),2,b
  5431                           
  5432                           ;lorawan.c: 371: loRa.macStatus.networkJoined = 0;
  5433  00A1E8  0102               	movlb	2	; () banked
  5434  00A1EA  9902               	bcf	(_loRa+2)& (0+255),4,b
  5435                           
  5436                           ; BSR set to: 2
  5437  00A1EC  0012               	return		;funcret
  5438  00A1EE                     __end_of_LORAWAN_SetDeviceAddress:
  5439                           	opt stack 0
  5440                           tblptru	equ	0xFF8
  5441                           tblptrh	equ	0xFF7
  5442                           tblptrl	equ	0xFF6
  5443                           tablat	equ	0xFF5
  5444                           intcon	equ	0xFF2
  5445                           intcon2	equ	0xFF1
  5446                           intcon3	equ	0xFF0
  5447                           postinc0	equ	0xFEE
  5448                           wreg	equ	0xFE8
  5449                           postdec2	equ	0xFDD
  5450                           fsr2h	equ	0xFDA
  5451                           fsr2l	equ	0xFD9
  5452                           status	equ	0xFD8
  5453                           
  5454 ;; *************** function _LORAWAN_SetApplicationSessionKey *****************
  5455 ;; Defined at:
  5456 ;;		line 394 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5457 ;; Parameters:    Size  Location     Type
  5458 ;;  applicationS    2   14[BANK0 ] PTR unsigned char 
  5459 ;;		 -> appSKey(16), 
  5460 ;; Auto vars:     Size  Location     Type
  5461 ;;		None
  5462 ;; Return value:  Size  Location     Type
  5463 ;;                  1    wreg      void 
  5464 ;; Registers used:
  5465 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5466 ;; Tracked objects:
  5467 ;;		On entry : 0/0
  5468 ;;		On exit  : 0/0
  5469 ;;		Unchanged: 0/0
  5470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5471 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5474 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5475 ;;Total ram usage:        2 bytes
  5476 ;; Hardware stack levels used:    1
  5477 ;; Hardware stack levels required when called:    8
  5478 ;; This function calls:
  5479 ;;		_memcpy
  5480 ;; This function is called by:
  5481 ;;		_main
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text32
  5486  009A9A                     __ptext32:
  5487                           	opt stack 0
  5488  009A9A                     _LORAWAN_SetApplicationSessionKey:
  5489                           	opt stack 22
  5490                           
  5491                           ;lorawan.c: 396: if (applicationSessionKeyNew != (0))
  5492                           
  5493                           ; BSR set to: 2
  5494                           ;incstack = 0
  5495  009A9A  0100               	movlb	0	; () banked
  5496  009A9C  516E               	movf	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew& (0+255),w,b
  5497  009A9E  0100               	movlb	0	; () banked
  5498  009AA0  116F               	iorwf	(LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1)& (0+255),w,b
  5499  009AA2  B4D8               	btfsc	status,2,c
  5500  009AA4  0012               	return	
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;lorawan.c: 397: {
  5504                           ;lorawan.c: 398: memcpy( loRa.activationParameters.applicationSessionKey, applicationSes
      +                          sionKeyNew, 16);
  5505  009AA6  0E32               	movlw	low (_loRa+50)
  5506  009AA8  0100               	movlb	0	; () banked
  5507  009AAA  6F64               	movwf	memcpy@d1& (0+255),b
  5508  009AAC  0E02               	movlw	high (_loRa+50)
  5509  009AAE  0100               	movlb	0	; () banked
  5510  009AB0  6F65               	movwf	(memcpy@d1+1)& (0+255),b
  5511  009AB2  C06E  F066         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew,memcpy@s1
  5512  009AB6  C06F  F067         	movff	LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew+1,memcpy@s1+1
  5513  009ABA  0E00               	movlw	0
  5514  009ABC  0100               	movlb	0	; () banked
  5515  009ABE  6F69               	movwf	(memcpy@n+1)& (0+255),b
  5516  009AC0  0E10               	movlw	16
  5517  009AC2  6F68               	movwf	memcpy@n& (0+255),b
  5518  009AC4  EC07  F049         	call	_memcpy	;wreg free
  5519                           
  5520                           ;lorawan.c: 399: loRa.macKeys.applicationSessionKey = 1;
  5521  009AC8  0102               	movlb	2	; () banked
  5522  009ACA  8BA5               	bsf	(_loRa+165)& (0+255),5,b
  5523                           
  5524                           ; BSR set to: 2
  5525                           ;lorawan.c: 400: loRa.macStatus.networkJoined = 0;
  5526  009ACC  0102               	movlb	2	; () banked
  5527  009ACE  9902               	bcf	(_loRa+2)& (0+255),4,b
  5528  009AD0  0012               	return	
  5529  009AD2                     __end_of_LORAWAN_SetApplicationSessionKey:
  5530                           	opt stack 0
  5531                           tblptru	equ	0xFF8
  5532                           tblptrh	equ	0xFF7
  5533                           tblptrl	equ	0xFF6
  5534                           tablat	equ	0xFF5
  5535                           intcon	equ	0xFF2
  5536                           intcon2	equ	0xFF1
  5537                           intcon3	equ	0xFF0
  5538                           postinc0	equ	0xFEE
  5539                           wreg	equ	0xFE8
  5540                           postdec2	equ	0xFDD
  5541                           fsr2h	equ	0xFDA
  5542                           fsr2l	equ	0xFD9
  5543                           status	equ	0xFD8
  5544                           
  5545 ;; *************** function _LORAWAN_Mainloop *****************
  5546 ;; Defined at:
  5547 ;;		line 2238 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;		None
  5550 ;; Auto vars:     Size  Location     Type
  5551 ;;		None
  5552 ;; Return value:  Size  Location     Type
  5553 ;;                  1    wreg      void 
  5554 ;; Registers used:
  5555 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5556 ;; Tracked objects:
  5557 ;;		On entry : 0/0
  5558 ;;		On exit  : 0/0
  5559 ;;		Unchanged: 0/0
  5560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5565 ;;Total ram usage:        0 bytes
  5566 ;; Hardware stack levels used:    1
  5567 ;; Hardware stack levels required when called:   18
  5568 ;; This function calls:
  5569 ;;		_INTERRUPT_GetDioStatus
  5570 ;;		_RADIO_DIO0
  5571 ;;		_RADIO_DIO1
  5572 ;;		_RADIO_DIO2
  5573 ;;		_RADIO_DIO3
  5574 ;;		_RADIO_DIO4
  5575 ;;		_RADIO_DIO5
  5576 ;;		_SwTimersExecute
  5577 ;; This function is called by:
  5578 ;;		_main
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           	psect	text33
  5583  0098EC                     __ptext33:
  5584                           	opt stack 0
  5585  0098EC                     _LORAWAN_Mainloop:
  5586                           	opt stack 12
  5587                           
  5588                           ;lorawan.c: 2240: SwTimersExecute();
  5589                           
  5590                           ;incstack = 0
  5591  0098EC  EC65  F03B         	call	_SwTimersExecute	;wreg free
  5592                           
  5593                           ;lorawan.c: 2243: localDioStatus = INTERRUPT_GetDioStatus();
  5594  0098F0  EC68  F051         	call	_INTERRUPT_GetDioStatus	;wreg free
  5595  0098F4  0101               	movlb	1	; () banked
  5596  0098F6  6F8B               	movwf	_localDioStatus& (0+255),b
  5597                           
  5598                           ; BSR set to: 1
  5599                           ;lorawan.c: 2245: if ((localDioStatus & 0x01) != 0)
  5600  0098F8  0101               	movlb	1	; () banked
  5601  0098FA  B18B               	btfsc	_localDioStatus& (0+255),0,b
  5602                           
  5603                           ; BSR set to: 1
  5604                           ;lorawan.c: 2246: {
  5605                           ;lorawan.c: 2247: RADIO_DIO0();
  5606  0098FC  ECB6  F041         	call	_RADIO_DIO0	;wreg free
  5607                           
  5608                           ;lorawan.c: 2248: }
  5609                           ;lorawan.c: 2249: if ((localDioStatus & 0x02) != 0)
  5610  009900  0101               	movlb	1	; () banked
  5611  009902  B38B               	btfsc	_localDioStatus& (0+255),1,b
  5612                           
  5613                           ; BSR set to: 1
  5614                           ;lorawan.c: 2250: {
  5615                           ;lorawan.c: 2251: RADIO_DIO1();
  5616  009904  ECC6  F049         	call	_RADIO_DIO1	;wreg free
  5617                           
  5618                           ;lorawan.c: 2252: }
  5619                           ;lorawan.c: 2253: if ((localDioStatus & 0x04) != 0)
  5620  009908  0101               	movlb	1	; () banked
  5621  00990A  B58B               	btfsc	_localDioStatus& (0+255),2,b
  5622                           
  5623                           ; BSR set to: 1
  5624                           ;lorawan.c: 2254: {
  5625                           ;lorawan.c: 2255: RADIO_DIO2();
  5626  00990C  EC68  F049         	call	_RADIO_DIO2	;wreg free
  5627                           
  5628                           ;lorawan.c: 2256: }
  5629                           ;lorawan.c: 2257: if ((localDioStatus & 0x08) != 0)
  5630  009910  0101               	movlb	1	; () banked
  5631  009912  B78B               	btfsc	_localDioStatus& (0+255),3,b
  5632                           
  5633                           ; BSR set to: 1
  5634                           ;lorawan.c: 2258: {
  5635                           ;lorawan.c: 2259: RADIO_DIO3();
  5636  009914  EC88  F04F         	call	_RADIO_DIO3	;wreg free
  5637                           
  5638                           ;lorawan.c: 2260: }
  5639                           ;lorawan.c: 2261: if ((localDioStatus & 0x10) != 0)
  5640  009918  0101               	movlb	1	; () banked
  5641  00991A  B98B               	btfsc	_localDioStatus& (0+255),4,b
  5642                           
  5643                           ; BSR set to: 1
  5644                           ;lorawan.c: 2262: {
  5645                           ;lorawan.c: 2263: RADIO_DIO4();
  5646  00991C  ECD6  F04C         	call	_RADIO_DIO4	;wreg free
  5647                           
  5648                           ;lorawan.c: 2264: }
  5649                           ;lorawan.c: 2265: if ((localDioStatus & 0x20) != 0)
  5650  009920  0101               	movlb	1	; () banked
  5651  009922  AB8B               	btfss	_localDioStatus& (0+255),5,b
  5652  009924  0012               	return	
  5653                           
  5654                           ; BSR set to: 1
  5655                           ;lorawan.c: 2266: {
  5656                           ;lorawan.c: 2267: RADIO_DIO5();
  5657  009926  EC87  F04E         	call	_RADIO_DIO5	;wreg free
  5658  00992A  0012               	return	
  5659  00992C                     __end_of_LORAWAN_Mainloop:
  5660                           	opt stack 0
  5661                           tblptru	equ	0xFF8
  5662                           tblptrh	equ	0xFF7
  5663                           tblptrl	equ	0xFF6
  5664                           tablat	equ	0xFF5
  5665                           intcon	equ	0xFF2
  5666                           intcon2	equ	0xFF1
  5667                           intcon3	equ	0xFF0
  5668                           postinc0	equ	0xFEE
  5669                           wreg	equ	0xFE8
  5670                           postdec2	equ	0xFDD
  5671                           fsr2h	equ	0xFDA
  5672                           fsr2l	equ	0xFD9
  5673                           status	equ	0xFD8
  5674                           
  5675 ;; *************** function _SwTimersExecute *****************
  5676 ;; Defined at:
  5677 ;;		line 260 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
  5678 ;; Parameters:    Size  Location     Type
  5679 ;;		None
  5680 ;; Auto vars:     Size  Location     Type
  5681 ;;  i               1  146[BANK0 ] unsigned char 
  5682 ;; Return value:  Size  Location     Type
  5683 ;;                  1    wreg      void 
  5684 ;; Registers used:
  5685 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, btemp+4, btemp+5
      +, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5686 ;; Tracked objects:
  5687 ;;		On entry : 0/0
  5688 ;;		On exit  : 0/0
  5689 ;;		Unchanged: 0/0
  5690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5692 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5693 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5694 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5695 ;;Total ram usage:        5 bytes
  5696 ;; Hardware stack levels used:    1
  5697 ;; Hardware stack levels required when called:   17
  5698 ;; This function calls:
  5699 ;;		Absolute function
  5700 ;;		_AckRetransmissionCallback
  5701 ;;		_AutomaticReplyCallback
  5702 ;;		_DutyCycleCallback
  5703 ;;		_LORAWAN_LinkCheckCallback
  5704 ;;		_LORAWAN_ReceiveWindow1Callback
  5705 ;;		_LORAWAN_ReceiveWindow2Callback
  5706 ;;		_RADIO_RxFSKTimeout
  5707 ;;		_RADIO_WatchdogTimeout
  5708 ;;		_UnconfirmedTransmissionCallback
  5709 ;;		_UpdateJoinSuccessState
  5710 ;; This function is called by:
  5711 ;;		_LORAWAN_Mainloop
  5712 ;; This function uses a non-reentrant model
  5713 ;;
  5714                           
  5715                           	psect	text34
  5716  0076CA                     __ptext34:
  5717                           	opt stack 0
  5718  0076CA                     _SwTimersExecute:
  5719                           	opt stack 12
  5720                           
  5721                           ;sw_timer.c: 262: uint8_t i;
  5722                           ;sw_timer.c: 264: (INTCONbits.GIE = 0);
  5723                           
  5724                           ;incstack = 0
  5725  0076CA  9EF2               	bcf	intcon,7,c	;volatile
  5726                           
  5727                           ;sw_timer.c: 265: for (i = 0; i < allocatedTimers; i++)
  5728  0076CC  0E00               	movlw	0
  5729  0076CE  0100               	movlb	0	; () banked
  5730  0076D0  6FF2               	movwf	SwTimersExecute@i& (0+255),b
  5731  0076D2  D06F               	goto	l18215
  5732  0076D4                     l18201:
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;sw_timer.c: 266: {
  5736                           ;sw_timer.c: 269: if (swTimers[i].running == 1)
  5737  0076D4  0100               	movlb	0	; () banked
  5738  0076D6  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5739  0076D8  0D08               	mullw	8
  5740  0076DA  0E04               	movlw	4
  5741  0076DC  26F3               	addwf	prodl,f,c
  5742  0076DE  0E00               	movlw	0
  5743  0076E0  22F4               	addwfc	prodh,f,c
  5744  0076E2  0E00               	movlw	low _swTimers
  5745  0076E4  24F3               	addwf	prodl,w,c
  5746  0076E6  6ED9               	movwf	fsr2l,c
  5747  0076E8  0E03               	movlw	high _swTimers
  5748  0076EA  20F4               	addwfc	prodh,w,c
  5749  0076EC  6EDA               	movwf	fsr2h,c
  5750  0076EE  04DE               	decf	postinc2,w,c
  5751  0076F0  A4D8               	btfss	status,2,c
  5752  0076F2  D05D               	goto	l18213
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;sw_timer.c: 270: {
  5756                           ;sw_timer.c: 271: if (0 == swTimers[i].ticksRemaining)
  5757  0076F4  0100               	movlb	0	; () banked
  5758  0076F6  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5759  0076F8  0D08               	mullw	8
  5760  0076FA  0E00               	movlw	low _swTimers
  5761  0076FC  24F3               	addwf	prodl,w,c
  5762  0076FE  6ED9               	movwf	fsr2l,c
  5763  007700  0E03               	movlw	high _swTimers
  5764  007702  20F4               	addwfc	prodh,w,c
  5765  007704  6EDA               	movwf	fsr2h,c
  5766  007706  50DE               	movf	postinc2,w,c
  5767  007708  10DE               	iorwf	postinc2,w,c
  5768  00770A  10DE               	iorwf	postinc2,w,c
  5769  00770C  10DE               	iorwf	postinc2,w,c
  5770  00770E  A4D8               	btfss	status,2,c
  5771  007710  D04E               	goto	l18213
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;sw_timer.c: 272: {
  5775                           ;sw_timer.c: 273: swTimers[i].running = 0;
  5776  007712  0100               	movlb	0	; () banked
  5777  007714  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5778  007716  0D08               	mullw	8
  5779  007718  0E04               	movlw	4
  5780  00771A  26F3               	addwf	prodl,f,c
  5781  00771C  0E00               	movlw	0
  5782  00771E  22F4               	addwfc	prodh,f,c
  5783  007720  0E00               	movlw	low _swTimers
  5784  007722  24F3               	addwf	prodl,w,c
  5785  007724  6ED9               	movwf	fsr2l,c
  5786  007726  0E03               	movlw	high _swTimers
  5787  007728  20F4               	addwfc	prodh,w,c
  5788  00772A  6EDA               	movwf	fsr2h,c
  5789  00772C  0E00               	movlw	0
  5790  00772E  6EDF               	movwf	indf2,c
  5791                           
  5792                           ;sw_timer.c: 274: if ((0) != swTimers[i].callback)
  5793  007730  0100               	movlb	0	; () banked
  5794  007732  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5795  007734  0D08               	mullw	8
  5796  007736  0E06               	movlw	6
  5797  007738  26F3               	addwf	prodl,f,c
  5798  00773A  0E00               	movlw	0
  5799  00773C  22F4               	addwfc	prodh,f,c
  5800  00773E  0E00               	movlw	low _swTimers
  5801  007740  24F3               	addwf	prodl,w,c
  5802  007742  6ED9               	movwf	fsr2l,c
  5803  007744  0E03               	movlw	high _swTimers
  5804  007746  20F4               	addwfc	prodh,w,c
  5805  007748  6EDA               	movwf	fsr2h,c
  5806  00774A  50DE               	movf	postinc2,w,c
  5807  00774C  10DE               	iorwf	postinc2,w,c
  5808  00774E  B4D8               	btfsc	status,2,c
  5809  007750  D02E               	goto	l18213
  5810                           
  5811                           ; BSR set to: 0
  5812                           ;sw_timer.c: 275: {
  5813                           ;sw_timer.c: 276: (INTCONbits.GIE = 1);
  5814  007752  8EF2               	bsf	intcon,7,c	;volatile
  5815                           
  5816                           ; BSR set to: 0
  5817                           ;sw_timer.c: 277: swTimers[i].callback(swTimers[i].callbackParameter);
  5818  007754  0100               	movlb	0	; () banked
  5819  007756  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5820  007758  0D08               	mullw	8
  5821  00775A  0E05               	movlw	5
  5822  00775C  26F3               	addwf	prodl,f,c
  5823  00775E  0E00               	movlw	0
  5824  007760  22F4               	addwfc	prodh,f,c
  5825  007762  0E00               	movlw	low _swTimers
  5826  007764  24F3               	addwf	prodl,w,c
  5827  007766  6ED9               	movwf	fsr2l,c
  5828  007768  0E03               	movlw	high _swTimers
  5829  00776A  20F4               	addwfc	prodh,w,c
  5830  00776C  6EDA               	movwf	fsr2h,c
  5831  00776E  50DF               	movf	indf2,w,c
  5832  007770  6EE6               	movwf	postinc1,c
  5833  007772  0100               	movlb	0	; () banked
  5834  007774  51F2               	movf	SwTimersExecute@i& (0+255),w,b
  5835  007776  0D08               	mullw	8
  5836  007778  0E06               	movlw	6
  5837  00777A  26F3               	addwf	prodl,f,c
  5838  00777C  0E00               	movlw	0
  5839  00777E  22F4               	addwfc	prodh,f,c
  5840  007780  0E00               	movlw	low _swTimers
  5841  007782  24F3               	addwf	prodl,w,c
  5842  007784  6ED9               	movwf	fsr2l,c
  5843  007786  0E03               	movlw	high _swTimers
  5844  007788  20F4               	addwfc	prodh,w,c
  5845  00778A  6EDA               	movwf	fsr2h,c
  5846  00778C  CFDE F0EE          	movff	postinc2,??_SwTimersExecute
  5847  007790  CFDD F0EF          	movff	postdec2,??_SwTimersExecute+1
  5848  007794  D801               	call	u22268
  5849  007796  D00A               	goto	l18211
  5850  007798                     u22268:
  5851  007798  0005               	push	
  5852  00779A  6EFA               	movwf	pclath,c
  5853  00779C  0100               	movlb	0	; () banked
  5854  00779E  51EE               	movf	??_SwTimersExecute& (0+255),w,b
  5855  0077A0  6EFD               	movwf	tosl,c
  5856  0077A2  51EF               	movf	(??_SwTimersExecute+1)& (0+255),w,b
  5857  0077A4  6EFE               	movwf	tosh,c
  5858  0077A6  6AFF               	clrf	tosu,c
  5859  0077A8  50FA               	movf	pclath,w,c
  5860  0077AA  0012               	return		;indir
  5861  0077AC                     l18211:
  5862                           
  5863                           ;sw_timer.c: 278: (INTCONbits.GIE = 0);
  5864  0077AC  9EF2               	bcf	intcon,7,c	;volatile
  5865  0077AE                     l18213:
  5866  0077AE  0100               	movlb	0	; () banked
  5867  0077B0  2BF2               	incf	SwTimersExecute@i& (0+255),f,b
  5868  0077B2                     l18215:
  5869                           
  5870                           ; BSR set to: 0
  5871  0077B2  0100               	movlb	0	; () banked
  5872  0077B4  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
  5873  0077B6  0100               	movlb	0	; () banked
  5874  0077B8  5DF2               	subwf	SwTimersExecute@i& (0+255),w,b
  5875  0077BA  A0D8               	btfss	status,0,c
  5876  0077BC  D78B               	goto	l18201
  5877                           
  5878                           ; BSR set to: 0
  5879                           ;sw_timer.c: 279: }
  5880                           ;sw_timer.c: 280: }
  5881                           ;sw_timer.c: 281: }
  5882                           ;sw_timer.c: 282: }
  5883                           ;sw_timer.c: 283: (INTCONbits.GIE = 1);
  5884  0077BE  8EF2               	bsf	intcon,7,c	;volatile
  5885                           
  5886                           ; BSR set to: 0
  5887  0077C0  0012               	return		;funcret
  5888  0077C2                     __end_of_SwTimersExecute:
  5889                           	opt stack 0
  5890                           tosu	equ	0xFFF
  5891                           tosh	equ	0xFFE
  5892                           tosl	equ	0xFFD
  5893                           pclath	equ	0xFFA
  5894                           tblptru	equ	0xFF8
  5895                           tblptrh	equ	0xFF7
  5896                           tblptrl	equ	0xFF6
  5897                           tablat	equ	0xFF5
  5898                           prodh	equ	0xFF4
  5899                           prodl	equ	0xFF3
  5900                           intcon	equ	0xFF2
  5901                           intcon2	equ	0xFF1
  5902                           intcon3	equ	0xFF0
  5903                           postinc0	equ	0xFEE
  5904                           wreg	equ	0xFE8
  5905                           postinc1	equ	0xFE6
  5906                           indf2	equ	0xFDF
  5907                           postinc2	equ	0xFDE
  5908                           postdec2	equ	0xFDD
  5909                           fsr2h	equ	0xFDA
  5910                           fsr2l	equ	0xFD9
  5911                           status	equ	0xFD8
  5912                           
  5913 ;; *************** function _DutyCycleCallback *****************
  5914 ;; Defined at:
  5915 ;;		line 1221 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  5916 ;; Parameters:    Size  Location     Type
  5917 ;;  param           1  [STACK] unsigned char 
  5918 ;; Auto vars:     Size  Location     Type
  5919 ;;  minim           4  [STACK] unsigned long 
  5920 ;;  i               1  [STACK] unsigned char 
  5921 ;;  found           1  [STACK] unsigned char 
  5922 ;; Return value:  Size  Location     Type
  5923 ;;                  1  [STACK] void 
  5924 ;; Registers used:
  5925 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, b
      +temp+10, btemp+11, prodl, prodh, cstack
  5926 ;; Tracked objects:
  5927 ;;		On entry : F/0
  5928 ;;		On exit  : 0/0
  5929 ;;		Unchanged: 0/0
  5930 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5931 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5933 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5934 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;Total ram usage:        0 bytes
  5936 ;; Hardware stack levels used:    1
  5937 ;; Hardware stack levels required when called:   11
  5938 ;; This function calls:
  5939 ;;		_SwTimerSetTimeout
  5940 ;;		_SwTimerStart
  5941 ;;		___lldiv
  5942 ;; This function is called by:
  5943 ;;		_SetCallbackSoftwareTimers
  5944 ;;		_SwTimersExecute
  5945 ;; This function uses a reentrant model
  5946 ;;
  5947                           
  5948                           	psect	text35
  5949  003E6E                     __ptext35:
  5950                           	opt stack 0
  5951  003E6E                     _DutyCycleCallback:
  5952                           	opt stack 0
  5953                           
  5954                           ; BSR set to: 0
  5955                           ; autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 va
      +                          rgsize = 0, retsize = 0
  5956  003E6E  0E0A               	movlw	10
  5957  003E70  26E1               	addwf	fsr1l,f,c
  5958  003E72  0E00               	movlw	0
  5959  003E74  22E2               	addwfc	fsr1h,f,c
  5960                           
  5961                           ;lorawan_eu.c: 1223: uint32_t minim = (4294967295UL);
  5962                           
  5963                           ;incstack = 0
  5964  003E76  0EFF               	movlw	255
  5965  003E78  6E56               	movwf	btemp+8,c
  5966  003E7A  0EFF               	movlw	255
  5967  003E7C  6E57               	movwf	btemp+9,c
  5968  003E7E  0EFF               	movlw	255
  5969  003E80  6E58               	movwf	btemp+10,c
  5970  003E82  0EFF               	movlw	255
  5971  003E84  6E59               	movwf	btemp+11,c
  5972                           
  5973                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  5974  003E86  0EFA               	movlw	-6
  5975  003E88  C056  FFE3         	movff	btemp+8,plusw1
  5976  003E8C  0EFB               	movlw	-5
  5977  003E8E  C057  FFE3         	movff	btemp+9,plusw1
  5978  003E92  0EFC               	movlw	-4
  5979  003E94  C058  FFE3         	movff	btemp+10,plusw1
  5980  003E98  0EFD               	movlw	-3
  5981  003E9A  C059  FFE3         	movff	btemp+11,plusw1
  5982                           
  5983                           ;lorawan_eu.c: 1224: bool found = 0;
  5984                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  5985  003E9E  0EFF               	movlw	-1
  5986  003EA0  6AE3               	clrf	plusw1,c
  5987                           
  5988                           ;lorawan_eu.c: 1225: uint8_t i;
  5989                           ;lorawan_eu.c: 1227: for (i=0; i < 16; i++)
  5990                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5991  003EA2  0EFE               	movlw	-2
  5992  003EA4  6AE3               	clrf	plusw1,c
  5993  003EA6                     l16513:
  5994                           
  5995                           ;lorawan_eu.c: 1228: {
  5996                           ;lorawan_eu.c: 1230: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
  5997                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  5998  003EA6  0EFE               	movlw	-2
  5999  003EA8  50E3               	movf	plusw1,w,c
  6000  003EAA  0D0E               	mullw	14
  6001  003EAC  0E04               	movlw	low (_Channels+4)
  6002  003EAE  24F3               	addwf	prodl,w,c
  6003  003EB0  6ED9               	movwf	fsr2l,c
  6004  003EB2  0E04               	movlw	high (_Channels+4)
  6005  003EB4  20F4               	addwfc	prodh,w,c
  6006  003EB6  6EDA               	movwf	fsr2h,c
  6007  003EB8  04DE               	decf	postinc2,w,c
  6008  003EBA  A4D8               	btfss	status,2,c
  6009  003EBC  D0B4               	goto	l16531
  6010                           
  6011                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6012  003EBE  0EFE               	movlw	-2
  6013  003EC0  50E3               	movf	plusw1,w,c
  6014  003EC2  0D0E               	mullw	14
  6015  003EC4  0E08               	movlw	low (_Channels+8)
  6016  003EC6  24F3               	addwf	prodl,w,c
  6017  003EC8  6ED9               	movwf	fsr2l,c
  6018  003ECA  0E04               	movlw	high (_Channels+8)
  6019  003ECC  20F4               	addwfc	prodh,w,c
  6020  003ECE  6EDA               	movwf	fsr2h,c
  6021  003ED0  50DE               	movf	postinc2,w,c
  6022  003ED2  10DE               	iorwf	postinc2,w,c
  6023  003ED4  10DE               	iorwf	postinc2,w,c
  6024  003ED6  10DE               	iorwf	postinc2,w,c
  6025  003ED8  B4D8               	btfsc	status,2,c
  6026  003EDA  D0A5               	goto	l16531
  6027                           
  6028                           ;lorawan_eu.c: 1231: {
  6029                           ;lorawan_eu.c: 1232: if ( Channels[i].channelTimer > loRa.lastTimerValue )
  6030                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6031  003EDC  0EFE               	movlw	-2
  6032  003EDE  50E3               	movf	plusw1,w,c
  6033  003EE0  0D0E               	mullw	14
  6034  003EE2  0E08               	movlw	low (_Channels+8)
  6035  003EE4  24F3               	addwf	prodl,w,c
  6036  003EE6  6ED9               	movwf	fsr2l,c
  6037  003EE8  0E04               	movlw	high (_Channels+8)
  6038  003EEA  20F4               	addwfc	prodh,w,c
  6039  003EEC  6EDA               	movwf	fsr2h,c
  6040  003EEE  50DE               	movf	postinc2,w,c
  6041  003EF0  0102               	movlb	2	; () banked
  6042  003EF2  5DC8               	subwf	(_loRa+200)& (0+255),w,b
  6043  003EF4  50DE               	movf	postinc2,w,c
  6044  003EF6  0102               	movlb	2	; () banked
  6045  003EF8  59C9               	subwfb	(_loRa+201)& (0+255),w,b
  6046  003EFA  50DE               	movf	postinc2,w,c
  6047  003EFC  0102               	movlb	2	; () banked
  6048  003EFE  59CA               	subwfb	(_loRa+202)& (0+255),w,b
  6049  003F00  50DE               	movf	postinc2,w,c
  6050  003F02  0102               	movlb	2	; () banked
  6051  003F04  59CB               	subwfb	(_loRa+203)& (0+255),w,b
  6052  003F06  B0D8               	btfsc	status,0,c
  6053  003F08  D033               	goto	l16521
  6054                           
  6055                           ; BSR set to: 2
  6056                           ;lorawan_eu.c: 1233: {
  6057                           ;lorawan_eu.c: 1234: Channels[i].channelTimer = Channels[i].channelTimer - loRa.lastTime
      +                          rValue;
  6058                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6059  003F0A  0EFE               	movlw	-2
  6060  003F0C  50E3               	movf	plusw1,w,c
  6061  003F0E  0D0E               	mullw	14
  6062  003F10  0E08               	movlw	low (_Channels+8)
  6063  003F12  24F3               	addwf	prodl,w,c
  6064  003F14  6ED9               	movwf	fsr2l,c
  6065  003F16  0E04               	movlw	high (_Channels+8)
  6066  003F18  20F4               	addwfc	prodh,w,c
  6067  003F1A  6EDA               	movwf	fsr2h,c
  6068  003F1C  CFDE F056          	movff	postinc2,btemp+8
  6069  003F20  CFDE F057          	movff	postinc2,btemp+9
  6070  003F24  CFDE F058          	movff	postinc2,btemp+10
  6071  003F28  CFDE F059          	movff	postinc2,btemp+11
  6072  003F2C  0102               	movlb	2	; () banked
  6073  003F2E  51C8               	movf	(_loRa+200)& (0+255),w,b
  6074  003F30  5C56               	subwf	btemp+8,w,c
  6075  003F32  6E52               	movwf	btemp+4,c
  6076  003F34  0102               	movlb	2	; () banked
  6077  003F36  51C9               	movf	(_loRa+201)& (0+255),w,b
  6078  003F38  5857               	subwfb	btemp+9,w,c
  6079  003F3A  6E53               	movwf	btemp+5,c
  6080  003F3C  0102               	movlb	2	; () banked
  6081  003F3E  51CA               	movf	(_loRa+202)& (0+255),w,b
  6082  003F40  5858               	subwfb	btemp+10,w,c
  6083  003F42  6E54               	movwf	btemp+6,c
  6084  003F44  0102               	movlb	2	; () banked
  6085  003F46  51CB               	movf	(_loRa+203)& (0+255),w,b
  6086  003F48  5859               	subwfb	btemp+11,w,c
  6087  003F4A  6E55               	movwf	btemp+7,c
  6088                           
  6089                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6090  003F4C  0EFE               	movlw	-2
  6091  003F4E  50E3               	movf	plusw1,w,c
  6092  003F50  0D0E               	mullw	14
  6093  003F52  0E08               	movlw	low (_Channels+8)
  6094  003F54  24F3               	addwf	prodl,w,c
  6095  003F56  6ED9               	movwf	fsr2l,c
  6096  003F58  0E04               	movlw	high (_Channels+8)
  6097  003F5A  20F4               	addwfc	prodh,w,c
  6098  003F5C  6EDA               	movwf	fsr2h,c
  6099  003F5E  C052  FFDE         	movff	btemp+4,postinc2
  6100  003F62  C053  FFDE         	movff	btemp+5,postinc2
  6101  003F66  C054  FFDE         	movff	btemp+6,postinc2
  6102  003F6A  C055  FFDE         	movff	btemp+7,postinc2
  6103                           
  6104                           ;lorawan_eu.c: 1235: }
  6105  003F6E  D00D               	goto	l16523
  6106  003F70                     l16521:
  6107                           
  6108                           ; BSR set to: 2
  6109                           ;lorawan_eu.c: 1236: else
  6110                           ;lorawan_eu.c: 1237: {
  6111                           ;lorawan_eu.c: 1238: Channels[i].channelTimer = 0;
  6112                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6113  003F70  0EFE               	movlw	-2
  6114  003F72  50E3               	movf	plusw1,w,c
  6115  003F74  0D0E               	mullw	14
  6116  003F76  0E08               	movlw	low (_Channels+8)
  6117  003F78  24F3               	addwf	prodl,w,c
  6118  003F7A  6ED9               	movwf	fsr2l,c
  6119  003F7C  0E04               	movlw	high (_Channels+8)
  6120  003F7E  20F4               	addwfc	prodh,w,c
  6121  003F80  6EDA               	movwf	fsr2h,c
  6122  003F82  6ADE               	clrf	postinc2,c
  6123  003F84  6ADE               	clrf	postinc2,c
  6124  003F86  6ADE               	clrf	postinc2,c
  6125  003F88  6ADD               	clrf	postdec2,c
  6126  003F8A                     l16523:
  6127                           
  6128                           ; BSR set to: 2
  6129                           ;lorawan_eu.c: 1239: }
  6130                           ;lorawan_eu.c: 1240: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTim
      +                          er != 0) )
  6131                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6132  003F8A  0EFE               	movlw	-2
  6133  003F8C  50E3               	movf	plusw1,w,c
  6134  003F8E  0D0E               	mullw	14
  6135  003F90  0E08               	movlw	low (_Channels+8)
  6136  003F92  24F3               	addwf	prodl,w,c
  6137  003F94  6ED9               	movwf	fsr2l,c
  6138  003F96  0E04               	movlw	high (_Channels+8)
  6139  003F98  20F4               	addwfc	prodh,w,c
  6140  003F9A  6EDA               	movwf	fsr2h,c
  6141                           
  6142                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6143  003F9C  0EFA               	movlw	-6
  6144  003F9E  CFE3 F04E          	movff	plusw1,btemp
  6145  003FA2  50DE               	movf	postinc2,w,c
  6146  003FA4  5C4E               	subwf	btemp,w,c
  6147  003FA6  0EFB               	movlw	-5
  6148  003FA8  CFE3 F04E          	movff	plusw1,btemp
  6149  003FAC  50DE               	movf	postinc2,w,c
  6150  003FAE  584E               	subwfb	btemp,w,c
  6151  003FB0  0EFC               	movlw	-4
  6152  003FB2  CFE3 F04E          	movff	plusw1,btemp
  6153  003FB6  50DE               	movf	postinc2,w,c
  6154  003FB8  584E               	subwfb	btemp,w,c
  6155  003FBA  0EFD               	movlw	-3
  6156  003FBC  CFE3 F04E          	movff	plusw1,btemp
  6157  003FC0  50DE               	movf	postinc2,w,c
  6158  003FC2  584E               	subwfb	btemp,w,c
  6159  003FC4  A0D8               	btfss	status,0,c
  6160  003FC6  D02F               	goto	l16531
  6161                           
  6162                           ; BSR set to: 2
  6163                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6164  003FC8  0EFE               	movlw	-2
  6165  003FCA  50E3               	movf	plusw1,w,c
  6166  003FCC  0D0E               	mullw	14
  6167  003FCE  0E08               	movlw	low (_Channels+8)
  6168  003FD0  24F3               	addwf	prodl,w,c
  6169  003FD2  6ED9               	movwf	fsr2l,c
  6170  003FD4  0E04               	movlw	high (_Channels+8)
  6171  003FD6  20F4               	addwfc	prodh,w,c
  6172  003FD8  6EDA               	movwf	fsr2h,c
  6173  003FDA  50DE               	movf	postinc2,w,c
  6174  003FDC  10DE               	iorwf	postinc2,w,c
  6175  003FDE  10DE               	iorwf	postinc2,w,c
  6176  003FE0  10DE               	iorwf	postinc2,w,c
  6177  003FE2  B4D8               	btfsc	status,2,c
  6178  003FE4  D020               	goto	l16531
  6179                           
  6180                           ; BSR set to: 2
  6181                           ;lorawan_eu.c: 1241: {
  6182                           ;lorawan_eu.c: 1242: minim = Channels[i].channelTimer;
  6183                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6184  003FE6  0EFE               	movlw	-2
  6185  003FE8  50E3               	movf	plusw1,w,c
  6186  003FEA  0D0E               	mullw	14
  6187  003FEC  0E08               	movlw	low (_Channels+8)
  6188  003FEE  24F3               	addwf	prodl,w,c
  6189  003FF0  6ED9               	movwf	fsr2l,c
  6190  003FF2  0E04               	movlw	high (_Channels+8)
  6191  003FF4  20F4               	addwfc	prodh,w,c
  6192  003FF6  6EDA               	movwf	fsr2h,c
  6193  003FF8  CFDE F056          	movff	postinc2,btemp+8
  6194  003FFC  CFDE F057          	movff	postinc2,btemp+9
  6195  004000  CFDE F058          	movff	postinc2,btemp+10
  6196  004004  CFDE F059          	movff	postinc2,btemp+11
  6197                           
  6198                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6199  004008  0EFA               	movlw	-6
  6200  00400A  C056  FFE3         	movff	btemp+8,plusw1
  6201  00400E  0EFB               	movlw	-5
  6202  004010  C057  FFE3         	movff	btemp+9,plusw1
  6203  004014  0EFC               	movlw	-4
  6204  004016  C058  FFE3         	movff	btemp+10,plusw1
  6205  00401A  0EFD               	movlw	-3
  6206  00401C  C059  FFE3         	movff	btemp+11,plusw1
  6207                           
  6208                           ; BSR set to: 2
  6209                           ;lorawan_eu.c: 1243: found = 1;
  6210                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6211  004020  0EFF               	movlw	-1
  6212  004022  6AE3               	clrf	plusw1,c
  6213  004024  2AE3               	incf	plusw1,f,c
  6214  004026                     l16531:
  6215                           
  6216                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6217  004026  0EFE               	movlw	-2
  6218  004028  2AE3               	incf	plusw1,f,c
  6219                           
  6220                           ;stkvar	DutyCycleCallback@i @ sp[(-10)+8]
  6221  00402A  0EFE               	movlw	-2
  6222  00402C  CFE3 F04E          	movff	plusw1,btemp
  6223  004030  0E0F               	movlw	15
  6224  004032  644E               	cpfsgt	btemp,c
  6225  004034  D738               	goto	l16513
  6226                           
  6227                           ;lorawan_eu.c: 1244: }
  6228                           ;lorawan_eu.c: 1245: }
  6229                           ;lorawan_eu.c: 1246: }
  6230                           ;lorawan_eu.c: 1247: if ( found == 1 )
  6231                           ;stkvar	DutyCycleCallback@found @ sp[(-10)+9]
  6232  004036  0EFF               	movlw	-1
  6233  004038  04E3               	decf	plusw1,w,c
  6234  00403A  A4D8               	btfss	status,2,c
  6235  00403C  D09D               	goto	l1295
  6236                           
  6237                           ;lorawan_eu.c: 1248: {
  6238                           ;lorawan_eu.c: 1249: loRa.lastTimerValue = minim;
  6239                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6240  00403E  50E1               	movf	fsr1l,w,c
  6241  004040  0FFA               	addlw	-6
  6242  004042  6ED9               	movwf	fsr2l,c
  6243  004044  50E2               	movf	fsr1h,w,c
  6244  004046  6EDA               	movwf	fsr2h,c
  6245  004048  0EFF               	movlw	255
  6246  00404A  22DA               	addwfc	fsr2h,f,c
  6247  00404C  CFDE F2C8          	movff	postinc2,_loRa+200
  6248  004050  CFDE F2C9          	movff	postinc2,_loRa+201
  6249  004054  CFDE F2CA          	movff	postinc2,_loRa+202
  6250  004058  CFDE F2CB          	movff	postinc2,_loRa+203
  6251                           
  6252                           ;lorawan_eu.c: 1250: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ?
      +                           ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) )
      +                          );
  6253                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6254  00405C  0EFD               	movlw	-3
  6255  00405E  50E3               	movf	plusw1,w,c
  6256  004060  E10E               	bnz	u19850
  6257  004062  0EFA               	movlw	-6
  6258  004064  28E3               	incf	plusw1,w,c
  6259  004066  0EFB               	movlw	-5
  6260  004068  CFE3 F04E          	movff	plusw1,btemp
  6261  00406C  0EFF               	movlw	255
  6262  00406E  5A4E               	subwfb	btemp,f,c
  6263  004070  0EFC               	movlw	-4
  6264  004072  CFE3 F04E          	movff	plusw1,btemp
  6265  004076  0E0F               	movlw	15
  6266  004078  5A4E               	subwfb	btemp,f,c
  6267  00407A  A0D8               	btfss	status,0,c
  6268  00407C  D02B               	goto	l16543
  6269  00407E                     u19850:
  6270                           
  6271                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6272  00407E  50E1               	movf	fsr1l,w,c
  6273  004080  0FFA               	addlw	-6
  6274  004082  6ED9               	movwf	fsr2l,c
  6275  004084  50E2               	movf	fsr1h,w,c
  6276  004086  6EDA               	movwf	fsr2h,c
  6277  004088  0EFF               	movlw	255
  6278  00408A  22DA               	addwfc	fsr2h,f,c
  6279  00408C  CFDE F064          	movff	postinc2,___lldiv@dividend
  6280  004090  CFDE F065          	movff	postinc2,___lldiv@dividend+1
  6281  004094  CFDE F066          	movff	postinc2,___lldiv@dividend+2
  6282  004098  CFDE F067          	movff	postinc2,___lldiv@dividend+3
  6283  00409C  0E7D               	movlw	125
  6284  00409E  0100               	movlb	0	; () banked
  6285  0040A0  6F68               	movwf	___lldiv@divisor& (0+255),b
  6286  0040A2  0E00               	movlw	0
  6287  0040A4  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6288  0040A6  0E00               	movlw	0
  6289  0040A8  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6290  0040AA  0E00               	movlw	0
  6291  0040AC  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6292  0040AE  EC99  F03F         	call	___lldiv	;wreg free
  6293  0040B2  C064  F056         	movff	?___lldiv,btemp+8
  6294  0040B6  C065  F057         	movff	?___lldiv+1,btemp+9
  6295  0040BA  C066  F058         	movff	?___lldiv+2,btemp+10
  6296  0040BE  C067  F059         	movff	?___lldiv+3,btemp+11
  6297  0040C2  0E0C               	movlw	12
  6298  0040C4                     u19865:
  6299  0040C4  90D8               	bcf	status,0,c
  6300  0040C6  3656               	rlcf	btemp+8,f,c
  6301  0040C8  3657               	rlcf	btemp+9,f,c
  6302  0040CA  3658               	rlcf	btemp+10,f,c
  6303  0040CC  3659               	rlcf	btemp+11,f,c
  6304  0040CE  2EE8               	decfsz	wreg,f,c
  6305  0040D0  D7F9               	goto	u19865
  6306  0040D2  D02F               	goto	L1
  6307  0040D4                     l16543:
  6308                           
  6309                           ;stkvar	DutyCycleCallback@minim @ sp[(-10)+4]
  6310  0040D4  0EFA               	movlw	-6
  6311  0040D6  CFE3 F056          	movff	plusw1,btemp+8
  6312  0040DA  0EFB               	movlw	-5
  6313  0040DC  CFE3 F057          	movff	plusw1,btemp+9
  6314  0040E0  0EFC               	movlw	-4
  6315  0040E2  CFE3 F058          	movff	plusw1,btemp+10
  6316  0040E6  0EFD               	movlw	-3
  6317  0040E8  CFE3 F059          	movff	plusw1,btemp+11
  6318  0040EC  0E0C               	movlw	12
  6319  0040EE                     u19875:
  6320  0040EE  90D8               	bcf	status,0,c
  6321  0040F0  3656               	rlcf	btemp+8,f,c
  6322  0040F2  3657               	rlcf	btemp+9,f,c
  6323  0040F4  3658               	rlcf	btemp+10,f,c
  6324  0040F6  3659               	rlcf	btemp+11,f,c
  6325  0040F8  2EE8               	decfsz	wreg,f,c
  6326  0040FA  D7F9               	goto	u19875
  6327  0040FC  C056  F064         	movff	btemp+8,___lldiv@dividend
  6328  004100  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  6329  004104  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  6330  004108  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  6331  00410C  0E7D               	movlw	125
  6332  00410E  0100               	movlb	0	; () banked
  6333  004110  6F68               	movwf	___lldiv@divisor& (0+255),b
  6334  004112  0E00               	movlw	0
  6335  004114  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6336  004116  0E00               	movlw	0
  6337  004118  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6338  00411A  0E00               	movlw	0
  6339  00411C  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6340  00411E  EC99  F03F         	call	___lldiv	;wreg free
  6341  004122  C064  F056         	movff	?___lldiv,btemp+8
  6342  004126  C065  F057         	movff	?___lldiv+1,btemp+9
  6343  00412A  C066  F058         	movff	?___lldiv+2,btemp+10
  6344  00412E  C067  F059         	movff	?___lldiv+3,btemp+11
  6345  004132                     L1:
  6346                           
  6347                           ;stkvar	_DutyCycleCallback$2264 @ sp[(-10)+0]
  6348  004132  0EF6               	movlw	-10
  6349  004134  C056  FFE3         	movff	btemp+8,plusw1
  6350  004138  0EF7               	movlw	-9
  6351  00413A  C057  FFE3         	movff	btemp+9,plusw1
  6352  00413E  0EF8               	movlw	-8
  6353  004140  C058  FFE3         	movff	btemp+10,plusw1
  6354  004144  0EF9               	movlw	-7
  6355  004146  C059  FFE3         	movff	btemp+11,plusw1
  6356                           
  6357                           ;stkvar	_DutyCycleCallback$2264 @ sp[(-10)+0]
  6358  00414A  50E1               	movf	fsr1l,w,c
  6359  00414C  0FF6               	addlw	-10
  6360  00414E  6ED9               	movwf	fsr2l,c
  6361  004150  50E2               	movf	fsr1h,w,c
  6362  004152  6EDA               	movwf	fsr2h,c
  6363  004154  0EFF               	movlw	255
  6364  004156  22DA               	addwfc	fsr2h,f,c
  6365  004158  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6366  00415C  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6367  004160  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6368  004164  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6369  004168  0102               	movlb	2	; () banked
  6370  00416A  51E9               	movf	(_loRa+233)& (0+255),w,b
  6371  00416C  EC70  F04A         	call	_SwTimerSetTimeout
  6372                           
  6373                           ;lorawan_eu.c: 1251: SwTimerStart (loRa.dutyCycleTimerId);
  6374  004170  0102               	movlb	2	; () banked
  6375  004172  51E9               	movf	(_loRa+233)& (0+255),w,b
  6376  004174  EC06  F042         	call	_SwTimerStart
  6377  004178                     l1295:
  6378                           
  6379                           ; _DutyCycleCallback: autosize = 10, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  6380  004178  0EF5               	movlw	245
  6381  00417A  26E1               	addwf	fsr1l,f,c
  6382  00417C  0EFF               	movlw	255
  6383  00417E  22E2               	addwfc	fsr1h,f,c
  6384  004180  0012               	return		;funcret
  6385  004182                     __end_of_DutyCycleCallback:
  6386                           	opt stack 0
  6387                           tosu	equ	0xFFF
  6388                           tosh	equ	0xFFE
  6389                           tosl	equ	0xFFD
  6390                           pclath	equ	0xFFA
  6391                           tblptru	equ	0xFF8
  6392                           tblptrh	equ	0xFF7
  6393                           tblptrl	equ	0xFF6
  6394                           tablat	equ	0xFF5
  6395                           prodh	equ	0xFF4
  6396                           prodl	equ	0xFF3
  6397                           intcon	equ	0xFF2
  6398                           intcon2	equ	0xFF1
  6399                           intcon3	equ	0xFF0
  6400                           postinc0	equ	0xFEE
  6401                           wreg	equ	0xFE8
  6402                           postinc1	equ	0xFE6
  6403                           plusw1	equ	0xFE3
  6404                           fsr1h	equ	0xFE2
  6405                           fsr1l	equ	0xFE1
  6406                           indf2	equ	0xFDF
  6407                           postinc2	equ	0xFDE
  6408                           postdec2	equ	0xFDD
  6409                           fsr2h	equ	0xFDA
  6410                           fsr2l	equ	0xFD9
  6411                           status	equ	0xFD8
  6412                           
  6413 ;; *************** function _UpdateJoinSuccessState *****************
  6414 ;; Defined at:
  6415 ;;		line 1041 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  param           1  [STACK] unsigned char 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1  [STACK] void 
  6422 ;; Registers used:
  6423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tosl, prodl, prod
      +h, cstack
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;Total ram usage:        0 bytes
  6434 ;; Hardware stack levels used:    1
  6435 ;; Hardware stack levels required when called:   11
  6436 ;; This function calls:
  6437 ;;		_RxJoinResponse
  6438 ;;		_SwTimerSetTimeout
  6439 ;;		_SwTimerStart
  6440 ;;		___lldiv
  6441 ;; This function is called by:
  6442 ;;		_SetCallbackSoftwareTimers
  6443 ;;		_LORAWAN_RxDone
  6444 ;;		_SwTimersExecute
  6445 ;; This function uses a reentrant model
  6446 ;;
  6447                           
  6448                           	psect	text36
  6449  0065B0                     __ptext36:
  6450                           	opt stack 0
  6451  0065B0                     _UpdateJoinSuccessState:
  6452                           	opt stack 0
  6453                           
  6454                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6455  0065B0  52E6               	movf	postinc1,f,c
  6456  0065B2  52E6               	movf	postinc1,f,c
  6457  0065B4  52E6               	movf	postinc1,f,c
  6458  0065B6  52E6               	movf	postinc1,f,c
  6459                           
  6460                           ;lorawan.c: 1043: loRa.lorawanMacStatus.joining = 0;
  6461                           
  6462                           ;incstack = 0
  6463  0065B8  0102               	movlb	2	; () banked
  6464  0065BA  9500               	bcf	_loRa& (0+255),2,b
  6465                           
  6466                           ;lorawan.c: 1044: loRa.macStatus.networkJoined = 1;
  6467  0065BC  0102               	movlb	2	; () banked
  6468  0065BE  8902               	bsf	(_loRa+2)& (0+255),4,b
  6469                           
  6470                           ; BSR set to: 2
  6471                           ;lorawan.c: 1045: loRa.macStatus.macState = IDLE;
  6472  0065C0  0EF0               	movlw	-16
  6473  0065C2  0102               	movlb	2	; () banked
  6474  0065C4  1702               	andwf	(_loRa+2)& (0+255),f,b
  6475                           
  6476                           ; BSR set to: 2
  6477                           ;lorawan.c: 1047: loRa.adrAckCnt = 0;
  6478  0065C6  0102               	movlb	2	; () banked
  6479  0065C8  6BD0               	clrf	(_loRa+208)& (0+255),b
  6480  0065CA  6BD1               	clrf	(_loRa+209)& (0+255),b
  6481                           
  6482                           ; BSR set to: 2
  6483                           ;lorawan.c: 1048: loRa.counterAdrAckDelay = 0;
  6484  0065CC  0102               	movlb	2	; () banked
  6485  0065CE  6BEE               	clrf	(_loRa+238)& (0+255),b
  6486                           
  6487                           ; BSR set to: 2
  6488                           ;lorawan.c: 1051: if (loRa.macStatus.linkCheck == 1)
  6489  0065D0  0102               	movlb	2	; () banked
  6490  0065D2  A503               	btfss	(_loRa+3)& (0+255),2,b
  6491  0065D4  D07F               	goto	l15383
  6492                           
  6493                           ; BSR set to: 2
  6494                           ;lorawan.c: 1052: {
  6495                           ;lorawan.c: 1053: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 
      +                          0x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32
      +                          _t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  6496  0065D6  0102               	movlb	2	; () banked
  6497  0065D8  51CF               	movf	(_loRa+207)& (0+255),w,b
  6498  0065DA  E10A               	bnz	u17740
  6499  0065DC  0102               	movlb	2	; () banked
  6500  0065DE  29CC               	incf	(_loRa+204)& (0+255),w,b
  6501  0065E0  0EFF               	movlw	255
  6502  0065E2  0102               	movlb	2	; () banked
  6503  0065E4  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  6504  0065E6  0E0F               	movlw	15
  6505  0065E8  0102               	movlb	2	; () banked
  6506  0065EA  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  6507  0065EC  A0D8               	btfss	status,0,c
  6508  0065EE  D024               	goto	l15377
  6509  0065F0                     u17740:
  6510                           
  6511                           ; BSR set to: 2
  6512  0065F0  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  6513  0065F4  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  6514  0065F8  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  6515  0065FC  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  6516  006600  0E7D               	movlw	125
  6517  006602  0100               	movlb	0	; () banked
  6518  006604  6F68               	movwf	___lldiv@divisor& (0+255),b
  6519  006606  0E00               	movlw	0
  6520  006608  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6521  00660A  0E00               	movlw	0
  6522  00660C  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6523  00660E  0E00               	movlw	0
  6524  006610  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6525  006612  EC99  F03F         	call	___lldiv	;wreg free
  6526  006616  C064  F056         	movff	?___lldiv,btemp+8
  6527  00661A  C065  F057         	movff	?___lldiv+1,btemp+9
  6528  00661E  C066  F058         	movff	?___lldiv+2,btemp+10
  6529  006622  C067  F059         	movff	?___lldiv+3,btemp+11
  6530  006626  0E0C               	movlw	12
  6531  006628                     u17755:
  6532  006628  90D8               	bcf	status,0,c
  6533  00662A  3656               	rlcf	btemp+8,f,c
  6534  00662C  3657               	rlcf	btemp+9,f,c
  6535  00662E  3658               	rlcf	btemp+10,f,c
  6536  006630  3659               	rlcf	btemp+11,f,c
  6537  006632  2EE8               	decfsz	wreg,f,c
  6538  006634  D7F9               	goto	u17755
  6539  006636  D02B               	goto	L2
  6540  006638                     l15377:
  6541                           
  6542                           ; BSR set to: 2
  6543  006638  C2CC  F056         	movff	_loRa+204,btemp+8
  6544  00663C  C2CD  F057         	movff	_loRa+205,btemp+9
  6545  006640  C2CE  F058         	movff	_loRa+206,btemp+10
  6546  006644  C2CF  F059         	movff	_loRa+207,btemp+11
  6547  006648  0E0C               	movlw	12
  6548  00664A                     u17765:
  6549  00664A  90D8               	bcf	status,0,c
  6550  00664C  3656               	rlcf	btemp+8,f,c
  6551  00664E  3657               	rlcf	btemp+9,f,c
  6552  006650  3658               	rlcf	btemp+10,f,c
  6553  006652  3659               	rlcf	btemp+11,f,c
  6554  006654  2EE8               	decfsz	wreg,f,c
  6555  006656  D7F9               	goto	u17765
  6556  006658  C056  F064         	movff	btemp+8,___lldiv@dividend
  6557  00665C  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  6558  006660  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  6559  006664  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  6560  006668  0E7D               	movlw	125
  6561  00666A  0100               	movlb	0	; () banked
  6562  00666C  6F68               	movwf	___lldiv@divisor& (0+255),b
  6563  00666E  0E00               	movlw	0
  6564  006670  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  6565  006672  0E00               	movlw	0
  6566  006674  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  6567  006676  0E00               	movlw	0
  6568  006678  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  6569  00667A  EC99  F03F         	call	___lldiv	;wreg free
  6570  00667E  C064  F056         	movff	?___lldiv,btemp+8
  6571  006682  C065  F057         	movff	?___lldiv+1,btemp+9
  6572  006686  C066  F058         	movff	?___lldiv+2,btemp+10
  6573  00668A  C067  F059         	movff	?___lldiv+3,btemp+11
  6574  00668E                     L2:
  6575                           
  6576                           ;stkvar	_UpdateJoinSuccessState$3304 @ sp[(-4)+0]
  6577  00668E  0EFC               	movlw	-4
  6578  006690  C056  FFE3         	movff	btemp+8,plusw1
  6579  006694  0EFD               	movlw	-3
  6580  006696  C057  FFE3         	movff	btemp+9,plusw1
  6581  00669A  0EFE               	movlw	-2
  6582  00669C  C058  FFE3         	movff	btemp+10,plusw1
  6583  0066A0  0EFF               	movlw	-1
  6584  0066A2  C059  FFE3         	movff	btemp+11,plusw1
  6585                           
  6586                           ;stkvar	_UpdateJoinSuccessState$3304 @ sp[(-4)+0]
  6587  0066A6  50E1               	movf	fsr1l,w,c
  6588  0066A8  0FFC               	addlw	-4
  6589  0066AA  6ED9               	movwf	fsr2l,c
  6590  0066AC  50E2               	movf	fsr1h,w,c
  6591  0066AE  6EDA               	movwf	fsr2h,c
  6592  0066B0  0EFF               	movlw	255
  6593  0066B2  22DA               	addwfc	fsr2h,f,c
  6594  0066B4  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  6595  0066B8  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  6596  0066BC  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  6597  0066C0  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  6598  0066C4  0102               	movlb	2	; () banked
  6599  0066C6  51E7               	movf	(_loRa+231)& (0+255),w,b
  6600  0066C8  EC70  F04A         	call	_SwTimerSetTimeout
  6601                           
  6602                           ;lorawan.c: 1054: SwTimerStart(loRa.linkCheckTimerId);
  6603  0066CC  0102               	movlb	2	; () banked
  6604  0066CE  51E7               	movf	(_loRa+231)& (0+255),w,b
  6605  0066D0  EC06  F042         	call	_SwTimerStart
  6606  0066D4                     l15383:
  6607                           
  6608                           ;lorawan.c: 1055: }
  6609                           ;lorawan.c: 1057: if (rxPayload.RxJoinResponse != (0))
  6610  0066D4  0101               	movlb	1	; () banked
  6611  0066D6  5188               	movf	(_rxPayload+2)& (0+255),w,b
  6612  0066D8  0101               	movlb	1	; () banked
  6613  0066DA  1189               	iorwf	(_rxPayload+3)& (0+255),w,b
  6614  0066DC  B4D8               	btfsc	status,2,c
  6615  0066DE  D00D               	goto	l2038
  6616                           
  6617                           ; BSR set to: 1
  6618                           ;lorawan.c: 1058: {
  6619                           ;lorawan.c: 1059: rxPayload.RxJoinResponse(1);
  6620  0066E0  D801               	call	u17788
  6621  0066E2  D00B               	goto	l2038
  6622  0066E4                     u17788:
  6623  0066E4  0005               	push	
  6624  0066E6  6EFA               	movwf	pclath,c
  6625  0066E8  0101               	movlb	1	; () banked
  6626  0066EA  5188               	movf	(_rxPayload+2)& (0+255),w,b
  6627  0066EC  6EFD               	movwf	tosl,c
  6628  0066EE  5189               	movf	(_rxPayload+3)& (0+255),w,b
  6629  0066F0  6EFE               	movwf	tosh,c
  6630  0066F2  6AFF               	clrf	tosu,c
  6631  0066F4  50FA               	movf	pclath,w,c
  6632  0066F6  0E01               	movlw	1
  6633  0066F8  0012               	return		;indir
  6634  0066FA                     l2038:
  6635                           
  6636                           ; _UpdateJoinSuccessState: autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6637  0066FA  0EFB               	movlw	251
  6638  0066FC  26E1               	addwf	fsr1l,f,c
  6639  0066FE  0EFF               	movlw	255
  6640  006700  22E2               	addwfc	fsr1h,f,c
  6641  006702  0012               	return		;funcret
  6642  006704                     __end_of_UpdateJoinSuccessState:
  6643                           	opt stack 0
  6644                           tosu	equ	0xFFF
  6645                           tosh	equ	0xFFE
  6646                           tosl	equ	0xFFD
  6647                           pclath	equ	0xFFA
  6648                           tblptru	equ	0xFF8
  6649                           tblptrh	equ	0xFF7
  6650                           tblptrl	equ	0xFF6
  6651                           tablat	equ	0xFF5
  6652                           prodh	equ	0xFF4
  6653                           prodl	equ	0xFF3
  6654                           intcon	equ	0xFF2
  6655                           intcon2	equ	0xFF1
  6656                           intcon3	equ	0xFF0
  6657                           postinc0	equ	0xFEE
  6658                           wreg	equ	0xFE8
  6659                           postinc1	equ	0xFE6
  6660                           plusw1	equ	0xFE3
  6661                           fsr1h	equ	0xFE2
  6662                           fsr1l	equ	0xFE1
  6663                           indf2	equ	0xFDF
  6664                           postinc2	equ	0xFDE
  6665                           postdec2	equ	0xFDD
  6666                           fsr2h	equ	0xFDA
  6667                           fsr2l	equ	0xFD9
  6668                           status	equ	0xFD8
  6669                           
  6670 ;; *************** function _AutomaticReplyCallback *****************
  6671 ;; Defined at:
  6672 ;;		line 1017 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6673 ;; Parameters:    Size  Location     Type
  6674 ;;  param           1  [STACK] unsigned char 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;		None
  6677 ;; Return value:  Size  Location     Type
  6678 ;;                  1  [STACK] void 
  6679 ;; Registers used:
  6680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6681 ;; Tracked objects:
  6682 ;;		On entry : F/0
  6683 ;;		On exit  : F/2
  6684 ;;		Unchanged: 0/0
  6685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;Total ram usage:        0 bytes
  6691 ;; Hardware stack levels used:    1
  6692 ;; Hardware stack levels required when called:   14
  6693 ;; This function calls:
  6694 ;;		_LORAWAN_Send
  6695 ;; This function is called by:
  6696 ;;		_SetCallbackSoftwareTimers
  6697 ;;		_SwTimersExecute
  6698 ;; This function uses a reentrant model
  6699 ;;
  6700                           
  6701                           	psect	text37
  6702  009DC4                     __ptext37:
  6703                           	opt stack 0
  6704  009DC4                     _AutomaticReplyCallback:
  6705                           	opt stack 14
  6706                           
  6707                           ;lorawan.c: 1019: loRa.macStatus.macState = IDLE;
  6708                           
  6709                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6710                           ;incstack = 0
  6711  009DC4  0EF0               	movlw	-16
  6712  009DC6  0102               	movlb	2	; () banked
  6713  009DC8  1702               	andwf	(_loRa+2)& (0+255),f,b
  6714                           
  6715                           ; BSR set to: 2
  6716                           ;lorawan.c: 1020: LORAWAN_Send (0, 0, 0, 0);
  6717  009DCA  0E00               	movlw	0
  6718  009DCC  0100               	movlb	0	; () banked
  6719  009DCE  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
  6720  009DD0  0E00               	movlw	0
  6721  009DD2  0100               	movlb	0	; () banked
  6722  009DD4  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
  6723  009DD6  0E00               	movlw	0
  6724  009DD8  0100               	movlb	0	; () banked
  6725  009DDA  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
  6726  009DDC  0E00               	movlw	0
  6727  009DDE  0100               	movlb	0	; () banked
  6728  009DE0  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
  6729  009DE2  0E00               	movlw	0
  6730  009DE4  ECE1  F03B         	call	_LORAWAN_Send
  6731                           
  6732                           ;lorawan.c: 1021: loRa.lorawanMacStatus.fPending = 0;
  6733  009DE8  0102               	movlb	2	; () banked
  6734  009DEA  9700               	bcf	_loRa& (0+255),3,b
  6735                           
  6736                           ; BSR set to: 2
  6737                           ; _AutomaticReplyCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 par
      +                          size = 1, argsize = 1, vargsize = 0
  6738  009DEC  52E5               	movf	postdec1,f,c
  6739  009DEE  0012               	return		;funcret
  6740  009DF0                     __end_of_AutomaticReplyCallback:
  6741                           	opt stack 0
  6742                           tosu	equ	0xFFF
  6743                           tosh	equ	0xFFE
  6744                           tosl	equ	0xFFD
  6745                           pclath	equ	0xFFA
  6746                           tblptru	equ	0xFF8
  6747                           tblptrh	equ	0xFF7
  6748                           tblptrl	equ	0xFF6
  6749                           tablat	equ	0xFF5
  6750                           prodh	equ	0xFF4
  6751                           prodl	equ	0xFF3
  6752                           intcon	equ	0xFF2
  6753                           intcon2	equ	0xFF1
  6754                           intcon3	equ	0xFF0
  6755                           postinc0	equ	0xFEE
  6756                           wreg	equ	0xFE8
  6757                           postinc1	equ	0xFE6
  6758                           postdec1	equ	0xFE5
  6759                           plusw1	equ	0xFE3
  6760                           fsr1h	equ	0xFE2
  6761                           fsr1l	equ	0xFE1
  6762                           indf2	equ	0xFDF
  6763                           postinc2	equ	0xFDE
  6764                           postdec2	equ	0xFDD
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function _AckRetransmissionCallback *****************
  6770 ;; Defined at:
  6771 ;;		line 934 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;  param           1  [STACK] unsigned char 
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  maximumPacke    1  [STACK] unsigned char 
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1  [STACK] void 
  6778 ;; Registers used:
  6779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : F/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6785 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6788 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:   13
  6792 ;; This function calls:
  6793 ;;		_FindSmallestDataRate
  6794 ;;		_LORAWAN_GetMaxPayloadSize
  6795 ;;		_RADIO_Transmit
  6796 ;;		_ResetParametersForConfirmedTransmission
  6797 ;;		_RxDataDone
  6798 ;;		_SelectChannelForTransmission
  6799 ;;		_UpdateRetransmissionAckTimeoutState
  6800 ;; This function is called by:
  6801 ;;		_SetCallbackSoftwareTimers
  6802 ;;		_SwTimersExecute
  6803 ;; This function uses a reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text38
  6807  00699C                     __ptext38:
  6808                           	opt stack 0
  6809  00699C                     _AckRetransmissionCallback:
  6810                           	opt stack 0
  6811                           
  6812                           ; BSR set to: 2
  6813                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  6814  00699C  52E6               	movf	postinc1,f,c
  6815                           
  6816                           ;lorawan.c: 936: uint8_t maximumPacketSize;
  6817                           ;lorawan.c: 938: if (loRa.macStatus.macPause == 0)
  6818                           
  6819                           ;incstack = 0
  6820  00699E  0102               	movlb	2	; () banked
  6821  0069A0  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6822  0069A2  D099               	goto	l16653
  6823                           
  6824                           ; BSR set to: 2
  6825                           ;lorawan.c: 939: {
  6826                           ;lorawan.c: 940: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsConfir
      +                          medUplink)
  6827  0069A4  0102               	movlb	2	; () banked
  6828  0069A6  51D9               	movf	(_loRa+217)& (0+255),w,b
  6829  0069A8  0102               	movlb	2	; () banked
  6830  0069AA  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6831  0069AC  A0D8               	btfss	status,0,c
  6832  0069AE  D06A               	goto	l16643
  6833                           
  6834                           ; BSR set to: 2
  6835                           ;lorawan.c: 941: {
  6836                           ;lorawan.c: 942: maximumPacketSize = LORAWAN_GetMaxPayloadSize () + 13;
  6837  0069B0  ECD8  F047         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
  6838  0069B4  6E59               	movwf	btemp+11,c
  6839  0069B6  0E0D               	movlw	13
  6840  0069B8  2659               	addwf	btemp+11,f,c
  6841                           
  6842                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6843  0069BA  0EFF               	movlw	-1
  6844  0069BC  C059  FFE3         	movff	btemp+11,plusw1
  6845                           
  6846                           ;lorawan.c: 945: if (loRa.lastPacketLength <= maximumPacketSize)
  6847                           ;stkvar	AckRetransmissionCallback@maximumPacketSize @ sp[(-1)+0]
  6848  0069C0  0EFF               	movlw	-1
  6849  0069C2  50E3               	movf	plusw1,w,c
  6850  0069C4  6E4F               	movwf	btemp+1,c
  6851  0069C6  6A50               	clrf	btemp+2,c
  6852  0069C8  0102               	movlb	2	; () banked
  6853  0069CA  51D4               	movf	(_loRa+212)& (0+255),w,b
  6854  0069CC  5C4F               	subwf	btemp+1,w,c
  6855  0069CE  0102               	movlb	2	; () banked
  6856  0069D0  51D5               	movf	(_loRa+213)& (0+255),w,b
  6857  0069D2  5850               	subwfb	btemp+2,w,c
  6858  0069D4  A0D8               	btfss	status,0,c
  6859  0069D6  D03F               	goto	l16637
  6860                           
  6861                           ; BSR set to: 2
  6862                           ;lorawan.c: 946: {
  6863                           ;lorawan.c: 947: if (SelectChannelForTransmission (1) == OK)
  6864  0069D8  0E01               	movlw	1
  6865  0069DA  EC84  F046         	call	_SelectChannelForTransmission
  6866  0069DE  0900               	iorlw	0
  6867  0069E0  A4D8               	btfss	status,2,c
  6868  0069E2  D036               	goto	l16633
  6869                           
  6870                           ;lorawan.c: 948: {
  6871                           ;lorawan.c: 950: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
  6872  0069E4  0EF0               	movlw	low (_macBuffer+16)
  6873  0069E6  0100               	movlb	0	; () banked
  6874  0069E8  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
  6875  0069EA  0E04               	movlw	high (_macBuffer+16)
  6876  0069EC  0100               	movlb	0	; () banked
  6877  0069EE  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  6878  0069F0  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
  6879  0069F4  ECD3  F025         	call	_RADIO_Transmit	;wreg free
  6880  0069F8  C0B5  F04F         	movff	?_RADIO_Transmit,btemp+1
  6881  0069FC  C0B6  F050         	movff	?_RADIO_Transmit+1,btemp+2
  6882  006A00  504F               	movf	btemp+1,w,c
  6883  006A02  1050               	iorwf	btemp+2,w,c
  6884  006A04  A4D8               	btfss	status,2,c
  6885  006A06  D024               	goto	l16633
  6886                           
  6887                           ;lorawan.c: 951: {
  6888                           ;lorawan.c: 952: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  6889  006A08  0102               	movlb	2	; () banked
  6890  006A0A  5102               	movf	(_loRa+2)& (0+255),w,b
  6891  006A0C  0BF0               	andlw	-16
  6892  006A0E  0901               	iorlw	1
  6893  006A10  6F02               	movwf	(_loRa+2)& (0+255),b
  6894                           
  6895                           ; BSR set to: 2
  6896                           ;lorawan.c: 953: loRa.counterRepetitionsConfirmedUplink ++ ;
  6897  006A12  0102               	movlb	2	; () banked
  6898  006A14  2BD9               	incf	(_loRa+217)& (0+255),f,b
  6899                           
  6900                           ; BSR set to: 2
  6901                           ;lorawan.c: 956: if ( ( (loRa.counterRepetitionsConfirmedUplink % 2) == 0) && (loRa.curr
      +                          entDataRate != 0) && (loRa.counterRepetitionsConfirmedUplink != (loRa.maxRepetitionsConf
      +                          irmedUplink + 1) ) )
  6902  006A16  0102               	movlb	2	; () banked
  6903  006A18  B1D9               	btfsc	(_loRa+217)& (0+255),0,b
  6904  006A1A  D05F               	goto	l2011
  6905                           
  6906                           ; BSR set to: 2
  6907  006A1C  0102               	movlb	2	; () banked
  6908  006A1E  51DF               	movf	(_loRa+223)& (0+255),w,b
  6909  006A20  B4D8               	btfsc	status,2,c
  6910  006A22  D05B               	goto	l2011
  6911                           
  6912                           ; BSR set to: 2
  6913  006A24  0102               	movlb	2	; () banked
  6914  006A26  51D9               	movf	(_loRa+217)& (0+255),w,b
  6915  006A28  6E4F               	movwf	btemp+1,c
  6916  006A2A  6A50               	clrf	btemp+2,c
  6917  006A2C  0102               	movlb	2	; () banked
  6918  006A2E  51D7               	movf	(_loRa+215)& (0+255),w,b
  6919  006A30  6E58               	movwf	btemp+10,c
  6920  006A32  6A59               	clrf	btemp+11,c
  6921  006A34  0E01               	movlw	1
  6922  006A36  2658               	addwf	btemp+10,f,c
  6923  006A38  0E00               	movlw	0
  6924  006A3A  2259               	addwfc	btemp+11,f,c
  6925  006A3C  504F               	movf	btemp+1,w,c
  6926  006A3E  1858               	xorwf	btemp+10,w,c
  6927  006A40  E104               	bnz	u20080
  6928  006A42  5050               	movf	btemp+2,w,c
  6929  006A44  1859               	xorwf	btemp+11,w,c
  6930  006A46  B4D8               	btfsc	status,2,c
  6931  006A48  D048               	goto	l2011
  6932  006A4A                     u20080:
  6933                           
  6934                           ; BSR set to: 2
  6935                           ;lorawan.c: 957: {
  6936                           ;lorawan.c: 958: FindSmallestDataRate();
  6937  006A4A  EC62  F039         	call	_FindSmallestDataRate	;wreg free
  6938  006A4E  D045               	goto	l2011
  6939  006A50                     l16633:
  6940                           
  6941                           ;lorawan.c: 961: else
  6942                           ;lorawan.c: 962: {
  6943                           ;lorawan.c: 964: UpdateRetransmissionAckTimeoutState ();
  6944  006A50  EC08  F046         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
  6945  006A54  D042               	goto	l2011
  6946  006A56                     l16637:
  6947                           
  6948                           ; BSR set to: 2
  6949                           ;lorawan.c: 973: else
  6950                           ;lorawan.c: 974: {
  6951                           ;lorawan.c: 975: ResetParametersForConfirmedTransmission ();
  6952  006A56  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
  6953                           
  6954                           ;lorawan.c: 976: if (rxPayload.RxAppData != (0))
  6955  006A5A  0101               	movlb	1	; () banked
  6956  006A5C  5186               	movf	_rxPayload& (0+255),w,b
  6957  006A5E  0101               	movlb	1	; () banked
  6958  006A60  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
  6959  006A62  B4D8               	btfsc	status,2,c
  6960  006A64  D03A               	goto	l2011
  6961                           
  6962                           ; BSR set to: 1
  6963                           ;lorawan.c: 977: {
  6964                           ;lorawan.c: 978: rxPayload.RxAppData((0), 0, INVALID_BUFFER_LEN);
  6965  006A66  0E00               	movlw	0
  6966  006A68  0100               	movlb	0	; () banked
  6967  006A6A  6F67               	movwf	RxDataDone@pData& (0+255),b
  6968  006A6C  0E00               	movlw	0
  6969  006A6E  0100               	movlb	0	; () banked
  6970  006A70  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  6971  006A72  0E00               	movlw	0
  6972  006A74  0100               	movlb	0	; () banked
  6973  006A76  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  6974  006A78  0E04               	movlw	4
  6975  006A7A  0100               	movlb	0	; () banked
  6976  006A7C  6F6A               	movwf	RxDataDone@status& (0+255),b
  6977  006A7E  D801               	call	u20108
  6978  006A80  D02C               	goto	l2011
  6979  006A82                     u20108:
  6980  006A82  D01F               	goto	u20148
  6981  006A84                     l16643:
  6982                           
  6983                           ; BSR set to: 2
  6984                           ;lorawan.c: 982: else if ( (loRa.counterRepetitionsConfirmedUplink > loRa.maxRepetitions
      +                          ConfirmedUplink) && (loRa.macStatus.macPause == 0) )
  6985  006A84  0102               	movlb	2	; () banked
  6986  006A86  51D9               	movf	(_loRa+217)& (0+255),w,b
  6987  006A88  0102               	movlb	2	; () banked
  6988  006A8A  5DD7               	subwf	(_loRa+215)& (0+255),w,b
  6989  006A8C  B0D8               	btfsc	status,0,c
  6990  006A8E  D025               	goto	l2011
  6991                           
  6992                           ; BSR set to: 2
  6993  006A90  0102               	movlb	2	; () banked
  6994  006A92  B103               	btfsc	(_loRa+3)& (0+255),0,b
  6995  006A94  D022               	goto	l2011
  6996                           
  6997                           ; BSR set to: 2
  6998                           ;lorawan.c: 983: {
  6999                           ;lorawan.c: 984: ResetParametersForConfirmedTransmission ();
  7000  006A96  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7001                           
  7002                           ;lorawan.c: 985: if (rxPayload.RxAppData != (0))
  7003  006A9A  0101               	movlb	1	; () banked
  7004  006A9C  5186               	movf	_rxPayload& (0+255),w,b
  7005  006A9E  0101               	movlb	1	; () banked
  7006  006AA0  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
  7007  006AA2  B4D8               	btfsc	status,2,c
  7008  006AA4  D01A               	goto	l2011
  7009                           
  7010                           ; BSR set to: 1
  7011                           ;lorawan.c: 986: {
  7012                           ;lorawan.c: 987: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  7013  006AA6  0E00               	movlw	0
  7014  006AA8  0100               	movlb	0	; () banked
  7015  006AAA  6F67               	movwf	RxDataDone@pData& (0+255),b
  7016  006AAC  0E00               	movlw	0
  7017  006AAE  0100               	movlb	0	; () banked
  7018  006AB0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  7019  006AB2  0E00               	movlw	0
  7020  006AB4  0100               	movlb	0	; () banked
  7021  006AB6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  7022  006AB8  0E00               	movlw	0
  7023  006ABA  0100               	movlb	0	; () banked
  7024  006ABC  6F6A               	movwf	RxDataDone@status& (0+255),b
  7025  006ABE  D801               	call	u20148
  7026  006AC0  D00C               	goto	l2011
  7027  006AC2                     u20148:
  7028  006AC2  0005               	push	
  7029  006AC4  6EFA               	movwf	pclath,c
  7030  006AC6  0101               	movlb	1	; () banked
  7031  006AC8  5186               	movf	_rxPayload& (0+255),w,b
  7032  006ACA  6EFD               	movwf	tosl,c
  7033  006ACC  5187               	movf	(_rxPayload+1)& (0+255),w,b
  7034  006ACE  6EFE               	movwf	tosh,c
  7035  006AD0  6AFF               	clrf	tosu,c
  7036  006AD2  50FA               	movf	pclath,w,c
  7037  006AD4  0012               	return		;indir
  7038  006AD6                     l16653:
  7039                           
  7040                           ; BSR set to: 2
  7041                           ;lorawan.c: 991: else
  7042                           ;lorawan.c: 992: {
  7043                           ;lorawan.c: 993: ResetParametersForConfirmedTransmission ();
  7044  006AD6  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7045  006ADA                     l2011:
  7046                           
  7047                           ; _AckRetransmissionCallback: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7048  006ADA  52E5               	movf	postdec1,f,c
  7049  006ADC  52E5               	movf	postdec1,f,c
  7050  006ADE  0012               	return		;funcret
  7051  006AE0                     __end_of_AckRetransmissionCallback:
  7052                           	opt stack 0
  7053                           tosu	equ	0xFFF
  7054                           tosh	equ	0xFFE
  7055                           tosl	equ	0xFFD
  7056                           pclath	equ	0xFFA
  7057                           tblptru	equ	0xFF8
  7058                           tblptrh	equ	0xFF7
  7059                           tblptrl	equ	0xFF6
  7060                           tablat	equ	0xFF5
  7061                           prodh	equ	0xFF4
  7062                           prodl	equ	0xFF3
  7063                           intcon	equ	0xFF2
  7064                           intcon2	equ	0xFF1
  7065                           intcon3	equ	0xFF0
  7066                           postinc0	equ	0xFEE
  7067                           wreg	equ	0xFE8
  7068                           postinc1	equ	0xFE6
  7069                           postdec1	equ	0xFE5
  7070                           plusw1	equ	0xFE3
  7071                           fsr1h	equ	0xFE2
  7072                           fsr1l	equ	0xFE1
  7073                           indf2	equ	0xFDF
  7074                           postinc2	equ	0xFDE
  7075                           postdec2	equ	0xFDD
  7076                           fsr2h	equ	0xFDA
  7077                           fsr2l	equ	0xFD9
  7078                           status	equ	0xFD8
  7079                           
  7080 ;; *************** function _LORAWAN_LinkCheckCallback *****************
  7081 ;; Defined at:
  7082 ;;		line 881 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  param           1  [STACK] unsigned char 
  7085 ;; Auto vars:     Size  Location     Type
  7086 ;;  iCtr            1  [STACK] unsigned char 
  7087 ;; Return value:  Size  Location     Type
  7088 ;;                  1  [STACK] void 
  7089 ;; Registers used:
  7090 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp, btemp+8, btemp+9, btemp+10, btemp+11, prodl, prodh, cst
      +ack
  7091 ;; Tracked objects:
  7092 ;;		On entry : F/0
  7093 ;;		On exit  : 0/0
  7094 ;;		Unchanged: 0/0
  7095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7096 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7097 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7099 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7100 ;;Total ram usage:        0 bytes
  7101 ;; Hardware stack levels used:    1
  7102 ;; Hardware stack levels required when called:   11
  7103 ;; This function calls:
  7104 ;;		_SwTimerSetTimeout
  7105 ;;		_SwTimerStart
  7106 ;;		___lldiv
  7107 ;; This function is called by:
  7108 ;;		_SetCallbackSoftwareTimers
  7109 ;;		_SwTimersExecute
  7110 ;; This function uses a reentrant model
  7111 ;;
  7112                           
  7113                           	psect	text39
  7114  005CF2                     __ptext39:
  7115                           	opt stack 0
  7116  005CF2                     _LORAWAN_LinkCheckCallback:
  7117                           	opt stack 0
  7118                           
  7119                           ; autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7120  005CF2  0E05               	movlw	5
  7121  005CF4  26E1               	addwf	fsr1l,f,c
  7122  005CF6  0E00               	movlw	0
  7123  005CF8  22E2               	addwfc	fsr1h,f,c
  7124                           
  7125                           ;lorawan.c: 885: if ((loRa.macStatus.macPause == 0) && (loRa.macStatus.linkCheck == 1))
  7126                           
  7127                           ;incstack = 0
  7128  005CFA  0102               	movlb	2	; () banked
  7129  005CFC  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7130  005CFE  D035               	goto	l16597
  7131                           
  7132                           ; BSR set to: 2
  7133  005D00  0102               	movlb	2	; () banked
  7134  005D02  A503               	btfss	(_loRa+3)& (0+255),2,b
  7135  005D04  D032               	goto	l16597
  7136                           
  7137                           ; BSR set to: 2
  7138                           ;lorawan.c: 886: {
  7139                           ;lorawan.c: 888: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
  7140                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7141  005D06  0EFF               	movlw	-1
  7142  005D08  6AE3               	clrf	plusw1,c
  7143  005D0A  D00F               	goto	l16587
  7144  005D0C                     l16581:
  7145                           
  7146                           ; BSR set to: 2
  7147                           ;lorawan.c: 889: {
  7148                           ;lorawan.c: 890: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
  7149                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7150  005D0C  0EFF               	movlw	-1
  7151  005D0E  50E3               	movf	plusw1,w,c
  7152  005D10  0D02               	mullw	2
  7153  005D12  0EA8               	movlw	low (_loRa+168)
  7154  005D14  24F3               	addwf	prodl,w,c
  7155  005D16  6ED9               	movwf	fsr2l,c
  7156  005D18  0E02               	movlw	high (_loRa+168)
  7157  005D1A  20F4               	addwfc	prodh,w,c
  7158  005D1C  6EDA               	movwf	fsr2h,c
  7159  005D1E  0E02               	movlw	2
  7160  005D20  18DE               	xorwf	postinc2,w,c
  7161  005D22  B4D8               	btfsc	status,2,c
  7162  005D24  D00A               	goto	l16589
  7163                           
  7164                           ; BSR set to: 2
  7165                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7166  005D26  0EFF               	movlw	-1
  7167  005D28  2AE3               	incf	plusw1,f,c
  7168  005D2A                     l16587:
  7169                           
  7170                           ; BSR set to: 2
  7171                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7172  005D2A  0EFF               	movlw	-1
  7173  005D2C  CFE3 F04E          	movff	plusw1,btemp
  7174  005D30  0102               	movlb	2	; () banked
  7175  005D32  51A7               	movf	(_loRa+167)& (0+255),w,b
  7176  005D34  5C4E               	subwf	btemp,w,c
  7177  005D36  A0D8               	btfss	status,0,c
  7178  005D38  D7E9               	goto	l16581
  7179  005D3A                     l16589:
  7180                           
  7181                           ; BSR set to: 2
  7182                           ;lorawan.c: 893: }
  7183                           ;lorawan.c: 894: }
  7184                           ;lorawan.c: 896: if(iCtr == loRa.crtMacCmdIndex)
  7185                           ;stkvar	LORAWAN_LinkCheckCallback@iCtr @ sp[(-5)+4]
  7186  005D3A  0EFF               	movlw	-1
  7187  005D3C  0102               	movlb	2	; () banked
  7188  005D3E  50E3               	movf	plusw1,w,c
  7189  005D40  0102               	movlb	2	; () banked
  7190  005D42  19A7               	xorwf	(_loRa+167)& (0+255),w,b
  7191  005D44  A4D8               	btfss	status,2,c
  7192  005D46  D011               	goto	l16597
  7193                           
  7194                           ; BSR set to: 2
  7195                           ;lorawan.c: 897: {
  7196                           ;lorawan.c: 898: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = LINK_CHECK_CID;
  7197  005D48  0102               	movlb	2	; () banked
  7198  005D4A  51A7               	movf	(_loRa+167)& (0+255),w,b
  7199  005D4C  0D02               	mullw	2
  7200  005D4E  0EA8               	movlw	low (_loRa+168)
  7201  005D50  24F3               	addwf	prodl,w,c
  7202  005D52  6ED9               	movwf	fsr2l,c
  7203  005D54  0E02               	movlw	high (_loRa+168)
  7204  005D56  20F4               	addwfc	prodh,w,c
  7205  005D58  6EDA               	movwf	fsr2h,c
  7206  005D5A  0E02               	movlw	2
  7207  005D5C  6EDF               	movwf	indf2,c
  7208                           
  7209                           ; BSR set to: 2
  7210                           ;lorawan.c: 900: if(loRa.crtMacCmdIndex < 16)
  7211  005D5E  0E10               	movlw	16
  7212  005D60  0102               	movlb	2	; () banked
  7213  005D62  61A7               	cpfslt	(_loRa+167)& (0+255),b
  7214  005D64  D002               	goto	l16597
  7215                           
  7216                           ; BSR set to: 2
  7217                           ;lorawan.c: 901: {
  7218                           ;lorawan.c: 902: loRa.crtMacCmdIndex ++;
  7219  005D66  0102               	movlb	2	; () banked
  7220  005D68  2BA7               	incf	(_loRa+167)& (0+255),f,b
  7221  005D6A                     l16597:
  7222                           
  7223                           ; BSR set to: 2
  7224                           ;lorawan.c: 903: }
  7225                           ;lorawan.c: 904: }
  7226                           ;lorawan.c: 905: }
  7227                           ;lorawan.c: 908: if (loRa.macStatus.linkCheck == 1)
  7228  005D6A  0102               	movlb	2	; () banked
  7229  005D6C  A503               	btfss	(_loRa+3)& (0+255),2,b
  7230  005D6E  D07F               	goto	l1989
  7231                           
  7232                           ; BSR set to: 2
  7233                           ;lorawan.c: 909: {
  7234                           ;lorawan.c: 910: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
  7235  005D70  0102               	movlb	2	; () banked
  7236  005D72  51CF               	movf	(_loRa+207)& (0+255),w,b
  7237  005D74  E10A               	bnz	u19980
  7238  005D76  0102               	movlb	2	; () banked
  7239  005D78  29CC               	incf	(_loRa+204)& (0+255),w,b
  7240  005D7A  0EFF               	movlw	255
  7241  005D7C  0102               	movlb	2	; () banked
  7242  005D7E  59CD               	subwfb	(_loRa+205)& (0+255),w,b
  7243  005D80  0E0F               	movlw	15
  7244  005D82  0102               	movlb	2	; () banked
  7245  005D84  59CE               	subwfb	(_loRa+206)& (0+255),w,b
  7246  005D86  A0D8               	btfss	status,0,c
  7247  005D88  D024               	goto	l16603
  7248  005D8A                     u19980:
  7249                           
  7250                           ; BSR set to: 2
  7251  005D8A  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
  7252  005D8E  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
  7253  005D92  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
  7254  005D96  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
  7255  005D9A  0E7D               	movlw	125
  7256  005D9C  0100               	movlb	0	; () banked
  7257  005D9E  6F68               	movwf	___lldiv@divisor& (0+255),b
  7258  005DA0  0E00               	movlw	0
  7259  005DA2  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  7260  005DA4  0E00               	movlw	0
  7261  005DA6  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  7262  005DA8  0E00               	movlw	0
  7263  005DAA  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  7264  005DAC  EC99  F03F         	call	___lldiv	;wreg free
  7265  005DB0  C064  F056         	movff	?___lldiv,btemp+8
  7266  005DB4  C065  F057         	movff	?___lldiv+1,btemp+9
  7267  005DB8  C066  F058         	movff	?___lldiv+2,btemp+10
  7268  005DBC  C067  F059         	movff	?___lldiv+3,btemp+11
  7269  005DC0  0E0C               	movlw	12
  7270  005DC2                     u19995:
  7271  005DC2  90D8               	bcf	status,0,c
  7272  005DC4  3656               	rlcf	btemp+8,f,c
  7273  005DC6  3657               	rlcf	btemp+9,f,c
  7274  005DC8  3658               	rlcf	btemp+10,f,c
  7275  005DCA  3659               	rlcf	btemp+11,f,c
  7276  005DCC  2EE8               	decfsz	wreg,f,c
  7277  005DCE  D7F9               	goto	u19995
  7278  005DD0  D02B               	goto	L3
  7279  005DD2                     l16603:
  7280                           
  7281                           ; BSR set to: 2
  7282  005DD2  C2CC  F056         	movff	_loRa+204,btemp+8
  7283  005DD6  C2CD  F057         	movff	_loRa+205,btemp+9
  7284  005DDA  C2CE  F058         	movff	_loRa+206,btemp+10
  7285  005DDE  C2CF  F059         	movff	_loRa+207,btemp+11
  7286  005DE2  0E0C               	movlw	12
  7287  005DE4                     u20005:
  7288  005DE4  90D8               	bcf	status,0,c
  7289  005DE6  3656               	rlcf	btemp+8,f,c
  7290  005DE8  3657               	rlcf	btemp+9,f,c
  7291  005DEA  3658               	rlcf	btemp+10,f,c
  7292  005DEC  3659               	rlcf	btemp+11,f,c
  7293  005DEE  2EE8               	decfsz	wreg,f,c
  7294  005DF0  D7F9               	goto	u20005
  7295  005DF2  C056  F064         	movff	btemp+8,___lldiv@dividend
  7296  005DF6  C057  F065         	movff	btemp+9,___lldiv@dividend+1
  7297  005DFA  C058  F066         	movff	btemp+10,___lldiv@dividend+2
  7298  005DFE  C059  F067         	movff	btemp+11,___lldiv@dividend+3
  7299  005E02  0E7D               	movlw	125
  7300  005E04  0100               	movlb	0	; () banked
  7301  005E06  6F68               	movwf	___lldiv@divisor& (0+255),b
  7302  005E08  0E00               	movlw	0
  7303  005E0A  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
  7304  005E0C  0E00               	movlw	0
  7305  005E0E  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
  7306  005E10  0E00               	movlw	0
  7307  005E12  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
  7308  005E14  EC99  F03F         	call	___lldiv	;wreg free
  7309  005E18  C064  F056         	movff	?___lldiv,btemp+8
  7310  005E1C  C065  F057         	movff	?___lldiv+1,btemp+9
  7311  005E20  C066  F058         	movff	?___lldiv+2,btemp+10
  7312  005E24  C067  F059         	movff	?___lldiv+3,btemp+11
  7313  005E28                     L3:
  7314                           
  7315                           ;stkvar	_LORAWAN_LinkCheckCallback$3287 @ sp[(-5)+0]
  7316  005E28  0EFB               	movlw	-5
  7317  005E2A  C056  FFE3         	movff	btemp+8,plusw1
  7318  005E2E  0EFC               	movlw	-4
  7319  005E30  C057  FFE3         	movff	btemp+9,plusw1
  7320  005E34  0EFD               	movlw	-3
  7321  005E36  C058  FFE3         	movff	btemp+10,plusw1
  7322  005E3A  0EFE               	movlw	-2
  7323  005E3C  C059  FFE3         	movff	btemp+11,plusw1
  7324                           
  7325                           ;stkvar	_LORAWAN_LinkCheckCallback$3287 @ sp[(-5)+0]
  7326  005E40  50E1               	movf	fsr1l,w,c
  7327  005E42  0FFB               	addlw	-5
  7328  005E44  6ED9               	movwf	fsr2l,c
  7329  005E46  50E2               	movf	fsr1h,w,c
  7330  005E48  6EDA               	movwf	fsr2h,c
  7331  005E4A  0EFF               	movlw	255
  7332  005E4C  22DA               	addwfc	fsr2h,f,c
  7333  005E4E  CFDE F071          	movff	postinc2,SwTimerSetTimeout@timeout
  7334  005E52  CFDE F072          	movff	postinc2,SwTimerSetTimeout@timeout+1
  7335  005E56  CFDE F073          	movff	postinc2,SwTimerSetTimeout@timeout+2
  7336  005E5A  CFDE F074          	movff	postinc2,SwTimerSetTimeout@timeout+3
  7337  005E5E  0102               	movlb	2	; () banked
  7338  005E60  51E7               	movf	(_loRa+231)& (0+255),w,b
  7339  005E62  EC70  F04A         	call	_SwTimerSetTimeout
  7340                           
  7341                           ;lorawan.c: 911: SwTimerStart(loRa.linkCheckTimerId);
  7342  005E66  0102               	movlb	2	; () banked
  7343  005E68  51E7               	movf	(_loRa+231)& (0+255),w,b
  7344  005E6A  EC06  F042         	call	_SwTimerStart
  7345  005E6E                     l1989:
  7346                           
  7347                           ; _LORAWAN_LinkCheckCallback: autosize = 5, savesize = 0, parsavesize = 0, tempsize = 0 
      +                          parsize = 1, argsize = 1, vargsize = 0
  7348  005E6E  0EFA               	movlw	250
  7349  005E70  26E1               	addwf	fsr1l,f,c
  7350  005E72  0EFF               	movlw	255
  7351  005E74  22E2               	addwfc	fsr1h,f,c
  7352  005E76  0012               	return		;funcret
  7353  005E78                     __end_of_LORAWAN_LinkCheckCallback:
  7354                           	opt stack 0
  7355                           tosu	equ	0xFFF
  7356                           tosh	equ	0xFFE
  7357                           tosl	equ	0xFFD
  7358                           pclath	equ	0xFFA
  7359                           tblptru	equ	0xFF8
  7360                           tblptrh	equ	0xFF7
  7361                           tblptrl	equ	0xFF6
  7362                           tablat	equ	0xFF5
  7363                           prodh	equ	0xFF4
  7364                           prodl	equ	0xFF3
  7365                           intcon	equ	0xFF2
  7366                           intcon2	equ	0xFF1
  7367                           intcon3	equ	0xFF0
  7368                           postinc0	equ	0xFEE
  7369                           wreg	equ	0xFE8
  7370                           postinc1	equ	0xFE6
  7371                           postdec1	equ	0xFE5
  7372                           plusw1	equ	0xFE3
  7373                           fsr1h	equ	0xFE2
  7374                           fsr1l	equ	0xFE1
  7375                           indf2	equ	0xFDF
  7376                           postinc2	equ	0xFDE
  7377                           postdec2	equ	0xFDD
  7378                           fsr2h	equ	0xFDA
  7379                           fsr2l	equ	0xFD9
  7380                           status	equ	0xFD8
  7381                           
  7382 ;; *************** function _LORAWAN_ReceiveWindow1Callback *****************
  7383 ;; Defined at:
  7384 ;;		line 796 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7385 ;; Parameters:    Size  Location     Type
  7386 ;;  param           1  [STACK] unsigned char 
  7387 ;; Auto vars:     Size  Location     Type
  7388 ;;  freq            4  [STACK] unsigned long 
  7389 ;; Return value:  Size  Location     Type
  7390 ;;                  1  [STACK] void 
  7391 ;; Registers used:
  7392 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, btemp+8, btemp+9, btemp+10, btemp+11, tblptrl, t
      +blptrh, tblptru, prodl, prodh, cstack
  7393 ;; Tracked objects:
  7394 ;;		On entry : F/0
  7395 ;;		On exit  : 0/0
  7396 ;;		Unchanged: 0/0
  7397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7401 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7402 ;;Total ram usage:        0 bytes
  7403 ;; Hardware stack levels used:    1
  7404 ;; Hardware stack levels required when called:   13
  7405 ;; This function calls:
  7406 ;;		_ConfigureRadioRx
  7407 ;;		_GetRx1Freq
  7408 ;;		_RADIO_ReceiveStart
  7409 ;;		_RADIO_ReceiveStop
  7410 ;;		_RADIO_ReleaseData
  7411 ;; This function is called by:
  7412 ;;		_SetCallbackSoftwareTimers
  7413 ;;		_SwTimersExecute
  7414 ;; This function uses a reentrant model
  7415 ;;
  7416                           
  7417                           	psect	text40
  7418  007B78                     __ptext40:
  7419                           	opt stack 0
  7420  007B78                     _LORAWAN_ReceiveWindow1Callback:
  7421                           	opt stack 0
  7422                           
  7423                           ; autosize = 4, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7424  007B78  52E6               	movf	postinc1,f,c
  7425  007B7A  52E6               	movf	postinc1,f,c
  7426  007B7C  52E6               	movf	postinc1,f,c
  7427  007B7E  52E6               	movf	postinc1,f,c
  7428                           
  7429                           ;lorawan.c: 798: uint32_t freq;
  7430                           ;lorawan.c: 800: if(loRa.macStatus.macPause == 0)
  7431                           
  7432                           ;incstack = 0
  7433  007B80  0102               	movlb	2	; () banked
  7434  007B82  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7435  007B84  D056               	goto	l1962
  7436                           
  7437                           ; BSR set to: 2
  7438                           ;lorawan.c: 801: {
  7439                           ;lorawan.c: 802: if (CLASS_C == loRa.deviceClass)
  7440  007B86  0E02               	movlw	2
  7441  007B88  0102               	movlb	2	; () banked
  7442  007B8A  1912               	xorwf	(_loRa+18)& (0+255),w,b
  7443  007B8C  B4D8               	btfsc	status,2,c
  7444                           
  7445                           ; BSR set to: 2
  7446                           ;lorawan.c: 803: {
  7447                           ;lorawan.c: 804: RADIO_ReceiveStop();
  7448  007B8E  EC26  F050         	call	_RADIO_ReceiveStop	;wreg free
  7449                           
  7450                           ;lorawan.c: 805: }
  7451                           ;lorawan.c: 806: if (loRa.receiveWindow1Parameters.dataRate >= loRa.offset)
  7452  007B92  0102               	movlb	2	; () banked
  7453  007B94  51EF               	movf	(_loRa+239)& (0+255),w,b
  7454  007B96  0102               	movlb	2	; () banked
  7455  007B98  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7456  007B9A  A0D8               	btfss	status,0,c
  7457  007B9C  D007               	goto	l1960
  7458                           
  7459                           ; BSR set to: 2
  7460                           ;lorawan.c: 807: {
  7461                           ;lorawan.c: 808: loRa.receiveWindow1Parameters.dataRate = loRa.receiveWindow1Parameters.
      +                          dataRate - loRa.offset;
  7462  007B9E  0102               	movlb	2	; () banked
  7463  007BA0  51EF               	movf	(_loRa+239)& (0+255),w,b
  7464  007BA2  0102               	movlb	2	; () banked
  7465  007BA4  5D17               	subwf	(_loRa+23)& (0+255),w,b
  7466  007BA6  0102               	movlb	2	; () banked
  7467  007BA8  6F17               	movwf	(_loRa+23)& (0+255),b
  7468                           
  7469                           ;lorawan.c: 809: }
  7470  007BAA  D002               	goto	l16563
  7471  007BAC                     l1960:
  7472                           
  7473                           ; BSR set to: 2
  7474                           ;lorawan.c: 810: else
  7475                           ;lorawan.c: 811: {
  7476                           ;lorawan.c: 812: loRa.receiveWindow1Parameters.dataRate = 0;
  7477  007BAC  0102               	movlb	2	; () banked
  7478  007BAE  6B17               	clrf	(_loRa+23)& (0+255),b
  7479  007BB0                     l16563:
  7480                           
  7481                           ; BSR set to: 2
  7482                           ;lorawan.c: 813: }
  7483                           ;lorawan.c: 815: freq = GetRx1Freq();
  7484  007BB0  EC5F  F051         	call	_GetRx1Freq	;wreg free
  7485  007BB4  C064  F056         	movff	?_GetRx1Freq,btemp+8
  7486  007BB8  C065  F057         	movff	?_GetRx1Freq+1,btemp+9
  7487  007BBC  C066  F058         	movff	?_GetRx1Freq+2,btemp+10
  7488  007BC0  C067  F059         	movff	?_GetRx1Freq+3,btemp+11
  7489                           
  7490                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7491  007BC4  0EFC               	movlw	-4
  7492  007BC6  C056  FFE3         	movff	btemp+8,plusw1
  7493  007BCA  0EFD               	movlw	-3
  7494  007BCC  C057  FFE3         	movff	btemp+9,plusw1
  7495  007BD0  0EFE               	movlw	-2
  7496  007BD2  C058  FFE3         	movff	btemp+10,plusw1
  7497  007BD6  0EFF               	movlw	-1
  7498  007BD8  C059  FFE3         	movff	btemp+11,plusw1
  7499                           
  7500                           ;lorawan.c: 817: loRa.macStatus.macState = RX1_OPEN;
  7501  007BDC  0102               	movlb	2	; () banked
  7502  007BDE  5102               	movf	(_loRa+2)& (0+255),w,b
  7503  007BE0  0BF0               	andlw	-16
  7504  007BE2  0903               	iorlw	3
  7505  007BE4  6F02               	movwf	(_loRa+2)& (0+255),b
  7506                           
  7507                           ; BSR set to: 2
  7508                           ;lorawan.c: 819: RADIO_ReleaseData();
  7509  007BE6  EC24  F052         	call	_RADIO_ReleaseData	;wreg free
  7510                           
  7511                           ;lorawan.c: 821: ConfigureRadioRx(loRa.receiveWindow1Parameters.dataRate, freq);
  7512                           ;stkvar	LORAWAN_ReceiveWindow1Callback@freq @ sp[(-4)+0]
  7513  007BEA  50E1               	movf	fsr1l,w,c
  7514  007BEC  0FFC               	addlw	-4
  7515  007BEE  6ED9               	movwf	fsr2l,c
  7516  007BF0  50E2               	movf	fsr1h,w,c
  7517  007BF2  6EDA               	movwf	fsr2h,c
  7518  007BF4  0EFF               	movlw	255
  7519  007BF6  22DA               	addwfc	fsr2h,f,c
  7520  007BF8  CFDE F076          	movff	postinc2,ConfigureRadioRx@freq
  7521  007BFC  CFDE F077          	movff	postinc2,ConfigureRadioRx@freq+1
  7522  007C00  CFDE F078          	movff	postinc2,ConfigureRadioRx@freq+2
  7523  007C04  CFDE F079          	movff	postinc2,ConfigureRadioRx@freq+3
  7524  007C08  0102               	movlb	2	; () banked
  7525  007C0A  5117               	movf	(_loRa+23)& (0+255),w,b
  7526  007C0C  EC38  F04F         	call	_ConfigureRadioRx
  7527                           
  7528                           ;lorawan.c: 823: RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow1Parameters.dataRate]
      +                          );
  7529  007C10  0E7F               	movlw	low _rxWindowSize
  7530  007C12  0102               	movlb	2	; () banked
  7531  007C14  2517               	addwf	(_loRa+23)& (0+255),w,b
  7532  007C16  6EF6               	movwf	tblptrl,c
  7533  007C18  6AF7               	clrf	tblptrh,c
  7534  007C1A  0EFF               	movlw	high _rxWindowSize
  7535  007C1C  22F7               	addwfc	tblptrh,f,c
  7536  007C1E                     	if	1	;There are 3 active tblptr bytes
  7537  007C1E  6AF8               	clrf	tblptru,c
  7538  007C20  0E00               	movlw	low (__mediumconst shr (0+16))
  7539  007C22  22F8               	addwfc	tblptru,f,c
  7540  007C24                     	endif
  7541  007C24  0008               	tblrd		*
  7542  007C26  50F5               	movf	tablat,w,c
  7543  007C28  0100               	movlb	0	; () banked
  7544  007C2A  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7545  007C2C  6BB6               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7546  007C2E  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
  7547  007C32                     l1962:
  7548                           
  7549                           ; _LORAWAN_ReceiveWindow1Callback: autosize = 4, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7550  007C32  0EFB               	movlw	251
  7551  007C34  26E1               	addwf	fsr1l,f,c
  7552  007C36  0EFF               	movlw	255
  7553  007C38  22E2               	addwfc	fsr1h,f,c
  7554  007C3A  0012               	return		;funcret
  7555  007C3C                     __end_of_LORAWAN_ReceiveWindow1Callback:
  7556                           	opt stack 0
  7557                           tosu	equ	0xFFF
  7558                           tosh	equ	0xFFE
  7559                           tosl	equ	0xFFD
  7560                           pclath	equ	0xFFA
  7561                           tblptru	equ	0xFF8
  7562                           tblptrh	equ	0xFF7
  7563                           tblptrl	equ	0xFF6
  7564                           tablat	equ	0xFF5
  7565                           prodh	equ	0xFF4
  7566                           prodl	equ	0xFF3
  7567                           intcon	equ	0xFF2
  7568                           intcon2	equ	0xFF1
  7569                           intcon3	equ	0xFF0
  7570                           postinc0	equ	0xFEE
  7571                           wreg	equ	0xFE8
  7572                           postinc1	equ	0xFE6
  7573                           postdec1	equ	0xFE5
  7574                           plusw1	equ	0xFE3
  7575                           fsr1h	equ	0xFE2
  7576                           fsr1l	equ	0xFE1
  7577                           indf2	equ	0xFDF
  7578                           postinc2	equ	0xFDE
  7579                           postdec2	equ	0xFDD
  7580                           fsr2h	equ	0xFDA
  7581                           fsr2l	equ	0xFD9
  7582                           status	equ	0xFD8
  7583                           
  7584 ;; *************** function _LORAWAN_ReceiveWindow2Callback *****************
  7585 ;; Defined at:
  7586 ;;		line 827 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  7587 ;; Parameters:    Size  Location     Type
  7588 ;;  param           1  [STACK] unsigned char 
  7589 ;; Auto vars:     Size  Location     Type
  7590 ;;		None
  7591 ;; Return value:  Size  Location     Type
  7592 ;;                  1  [STACK] void 
  7593 ;; Registers used:
  7594 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7595 ;; Tracked objects:
  7596 ;;		On entry : D/0
  7597 ;;		On exit  : 0/0
  7598 ;;		Unchanged: 0/0
  7599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7604 ;;Total ram usage:        0 bytes
  7605 ;; Hardware stack levels used:    1
  7606 ;; Hardware stack levels required when called:   14
  7607 ;; This function calls:
  7608 ;;		_ConfigureRadioRx
  7609 ;;		_LORAWAN_EnterContinuousReceive
  7610 ;;		_RADIO_GetStatus
  7611 ;;		_RADIO_ReceiveStart
  7612 ;;		_RADIO_ReceiveStop
  7613 ;;		_RADIO_ReleaseData
  7614 ;;		_ResetParametersForConfirmedTransmission
  7615 ;;		_ResetParametersForUnconfirmedTransmission
  7616 ;;		_RxDataDone
  7617 ;; This function is called by:
  7618 ;;		_LORAWAN_RxTimeout
  7619 ;;		_SetCallbackSoftwareTimers
  7620 ;;		_SwTimersExecute
  7621 ;; This function uses a reentrant model
  7622 ;;
  7623                           
  7624                           	psect	text41
  7625  0079A8                     __ptext41:
  7626                           	opt stack 0
  7627  0079A8                     _LORAWAN_ReceiveWindow2Callback:
  7628                           	opt stack 12
  7629                           
  7630                           ;lorawan.c: 830: if (loRa.macStatus.macPause == 0)
  7631                           
  7632                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7633                           ;incstack = 0
  7634  0079A8  0102               	movlb	2	; () banked
  7635  0079AA  B103               	btfsc	(_loRa+3)& (0+255),0,b
  7636  0079AC  D065               	goto	l1965
  7637                           
  7638                           ; BSR set to: 2
  7639                           ;lorawan.c: 831: {
  7640                           ;lorawan.c: 832: if((RADIO_GetStatus() & (1 << (1))) == 0)
  7641  0079AE  EC21  F052         	call	_RADIO_GetStatus	;wreg free
  7642  0079B2  6E59               	movwf	btemp+11,c
  7643  0079B4  B259               	btfsc	btemp+11,1,c
  7644  0079B6  D05C               	goto	l15233
  7645                           
  7646                           ;lorawan.c: 833: {
  7647                           ;lorawan.c: 834: loRa.macStatus.macState = RX2_OPEN;
  7648  0079B8  0102               	movlb	2	; () banked
  7649  0079BA  5102               	movf	(_loRa+2)& (0+255),w,b
  7650  0079BC  0BF0               	andlw	-16
  7651  0079BE  0905               	iorlw	5
  7652  0079C0  6F02               	movwf	(_loRa+2)& (0+255),b
  7653                           
  7654                           ; BSR set to: 2
  7655                           ;lorawan.c: 836: RADIO_ReceiveStop();
  7656  0079C2  EC26  F050         	call	_RADIO_ReceiveStop	;wreg free
  7657                           
  7658                           ;lorawan.c: 837: RADIO_ReleaseData();
  7659  0079C6  EC24  F052         	call	_RADIO_ReleaseData	;wreg free
  7660                           
  7661                           ;lorawan.c: 839: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
  7662  0079CA  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
  7663  0079CE  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
  7664  0079D2  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
  7665  0079D6  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
  7666  0079DA  0102               	movlb	2	; () banked
  7667  0079DC  511C               	movf	(_loRa+28)& (0+255),w,b
  7668  0079DE  EC38  F04F         	call	_ConfigureRadioRx
  7669                           
  7670                           ;lorawan.c: 841: if (CLASS_A == loRa.deviceClass)
  7671  0079E2  0102               	movlb	2	; () banked
  7672  0079E4  5112               	movf	(_loRa+18)& (0+255),w,b
  7673  0079E6  A4D8               	btfss	status,2,c
  7674  0079E8  D03B               	goto	l15229
  7675                           
  7676                           ; BSR set to: 2
  7677                           ;lorawan.c: 842: {
  7678                           ;lorawan.c: 843: if (RADIO_ReceiveStart(rxWindowSize[loRa.receiveWindow2Parameters.dataR
      +                          ate]) != OK)
  7679  0079EA  0E7F               	movlw	low _rxWindowSize
  7680  0079EC  0102               	movlb	2	; () banked
  7681  0079EE  251C               	addwf	(_loRa+28)& (0+255),w,b
  7682  0079F0  6EF6               	movwf	tblptrl,c
  7683  0079F2  6AF7               	clrf	tblptrh,c
  7684  0079F4  0EFF               	movlw	high _rxWindowSize
  7685  0079F6  22F7               	addwfc	tblptrh,f,c
  7686  0079F8                     	if	1	;There are 3 active tblptr bytes
  7687  0079F8  6AF8               	clrf	tblptru,c
  7688  0079FA  0E00               	movlw	low (__mediumconst shr (0+16))
  7689  0079FC  22F8               	addwfc	tblptru,f,c
  7690  0079FE                     	endif
  7691  0079FE  0008               	tblrd		*
  7692  007A00  50F5               	movf	tablat,w,c
  7693  007A02  0100               	movlb	0	; () banked
  7694  007A04  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
  7695  007A06  6BB6               	clrf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
  7696  007A08  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
  7697  007A0C  C0B5  F04F         	movff	?_RADIO_ReceiveStart,btemp+1
  7698  007A10  C0B6  F050         	movff	?_RADIO_ReceiveStart+1,btemp+2
  7699  007A14  504F               	movf	btemp+1,w,c
  7700  007A16  1050               	iorwf	btemp+2,w,c
  7701  007A18  B4D8               	btfsc	status,2,c
  7702  007A1A  D039               	goto	l1974
  7703                           
  7704                           ;lorawan.c: 844: {
  7705                           ;lorawan.c: 845: ResetParametersForConfirmedTransmission ();
  7706  007A1C  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7707                           
  7708                           ;lorawan.c: 846: ResetParametersForUnconfirmedTransmission ();
  7709  007A20  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7710                           
  7711                           ;lorawan.c: 847: if (rxPayload.RxAppData != (0))
  7712  007A24  0101               	movlb	1	; () banked
  7713  007A26  5186               	movf	_rxPayload& (0+255),w,b
  7714  007A28  0101               	movlb	1	; () banked
  7715  007A2A  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
  7716  007A2C  B4D8               	btfsc	status,2,c
  7717  007A2E  D02F               	goto	l1974
  7718                           
  7719                           ; BSR set to: 1
  7720                           ;lorawan.c: 848: {
  7721                           ;lorawan.c: 849: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
  7722  007A30  0E00               	movlw	0
  7723  007A32  0100               	movlb	0	; () banked
  7724  007A34  6F67               	movwf	RxDataDone@pData& (0+255),b
  7725  007A36  0E00               	movlw	0
  7726  007A38  0100               	movlb	0	; () banked
  7727  007A3A  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  7728  007A3C  0E00               	movlw	0
  7729  007A3E  0100               	movlb	0	; () banked
  7730  007A40  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  7731  007A42  0E00               	movlw	0
  7732  007A44  0100               	movlb	0	; () banked
  7733  007A46  6F6A               	movwf	RxDataDone@status& (0+255),b
  7734  007A48  D801               	call	u17418
  7735  007A4A  D021               	goto	l1974
  7736  007A4C                     u17418:
  7737  007A4C  0005               	push	
  7738  007A4E  6EFA               	movwf	pclath,c
  7739  007A50  0101               	movlb	1	; () banked
  7740  007A52  5186               	movf	_rxPayload& (0+255),w,b
  7741  007A54  6EFD               	movwf	tosl,c
  7742  007A56  5187               	movf	(_rxPayload+1)& (0+255),w,b
  7743  007A58  6EFE               	movwf	tosh,c
  7744  007A5A  6AFF               	clrf	tosu,c
  7745  007A5C  50FA               	movf	pclath,w,c
  7746  007A5E  0012               	return		;indir
  7747  007A60                     l15229:
  7748                           
  7749                           ; BSR set to: 2
  7750                           ;lorawan.c: 853: else
  7751                           ;lorawan.c: 854: {
  7752                           ;lorawan.c: 855: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
  7753  007A60  0102               	movlb	2	; () banked
  7754  007A62  5102               	movf	(_loRa+2)& (0+255),w,b
  7755  007A64  0BF0               	andlw	-16
  7756  007A66  0909               	iorlw	9
  7757  007A68  6F02               	movwf	(_loRa+2)& (0+255),b
  7758                           
  7759                           ; BSR set to: 2
  7760                           ;lorawan.c: 856: LORAWAN_EnterContinuousReceive();
  7761  007A6A  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
  7762  007A6E  D00F               	goto	l1974
  7763  007A70                     l15233:
  7764                           
  7765                           ;lorawan.c: 859: else
  7766                           ;lorawan.c: 860: {
  7767                           ;lorawan.c: 863: loRa.rx2DelayExpired = 1;
  7768  007A70  0E01               	movlw	1
  7769  007A72  0102               	movlb	2	; () banked
  7770  007A74  6FF1               	movwf	(_loRa+241)& (0+255),b
  7771                           
  7772                           ; BSR set to: 1
  7773                           ;lorawan.c: 864: }
  7774                           ;lorawan.c: 865: }
  7775  007A76  D00B               	goto	l1974
  7776  007A78                     l1965:
  7777                           
  7778                           ; BSR set to: 2
  7779                           ;lorawan.c: 866: else
  7780                           ;lorawan.c: 867: {
  7781                           ;lorawan.c: 870: if (loRa.lorawanMacStatus.joining == 1)
  7782  007A78  0102               	movlb	2	; () banked
  7783  007A7A  A500               	btfss	_loRa& (0+255),2,b
  7784  007A7C  D004               	goto	l15237
  7785                           
  7786                           ; BSR set to: 2
  7787                           ;lorawan.c: 871: {
  7788                           ;lorawan.c: 872: loRa.lorawanMacStatus.joining = 0;
  7789  007A7E  0102               	movlb	2	; () banked
  7790  007A80  9500               	bcf	_loRa& (0+255),2,b
  7791                           
  7792                           ;lorawan.c: 873: loRa.macStatus.networkJoined = 0;
  7793  007A82  0102               	movlb	2	; () banked
  7794  007A84  9902               	bcf	(_loRa+2)& (0+255),4,b
  7795  007A86                     l15237:
  7796                           
  7797                           ; BSR set to: 2
  7798                           ;lorawan.c: 874: }
  7799                           ;lorawan.c: 876: ResetParametersForUnconfirmedTransmission();
  7800  007A86  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  7801                           
  7802                           ;lorawan.c: 877: ResetParametersForConfirmedTransmission();
  7803  007A8A  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
  7804  007A8E                     l1974:
  7805                           
  7806                           ; _LORAWAN_ReceiveWindow2Callback: autosize = 0, savesize = 0, parsavesize = 0, tempsize
      +                           = 0 parsize = 1, argsize = 1, vargsize = 0
  7807  007A8E  52E5               	movf	postdec1,f,c
  7808  007A90  0012               	return		;funcret
  7809  007A92                     __end_of_LORAWAN_ReceiveWindow2Callback:
  7810                           	opt stack 0
  7811                           tosu	equ	0xFFF
  7812                           tosh	equ	0xFFE
  7813                           tosl	equ	0xFFD
  7814                           pclath	equ	0xFFA
  7815                           tblptru	equ	0xFF8
  7816                           tblptrh	equ	0xFF7
  7817                           tblptrl	equ	0xFF6
  7818                           tablat	equ	0xFF5
  7819                           prodh	equ	0xFF4
  7820                           prodl	equ	0xFF3
  7821                           intcon	equ	0xFF2
  7822                           intcon2	equ	0xFF1
  7823                           intcon3	equ	0xFF0
  7824                           postinc0	equ	0xFEE
  7825                           wreg	equ	0xFE8
  7826                           postinc1	equ	0xFE6
  7827                           postdec1	equ	0xFE5
  7828                           plusw1	equ	0xFE3
  7829                           fsr1h	equ	0xFE2
  7830                           fsr1l	equ	0xFE1
  7831                           indf2	equ	0xFDF
  7832                           postinc2	equ	0xFDE
  7833                           postdec2	equ	0xFDD
  7834                           fsr2h	equ	0xFDA
  7835                           fsr2l	equ	0xFD9
  7836                           status	equ	0xFD8
  7837                           
  7838 ;; *************** function _RADIO_WatchdogTimeout *****************
  7839 ;; Defined at:
  7840 ;;		line 1408 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7841 ;; Parameters:    Size  Location     Type
  7842 ;;  param           1  [STACK] unsigned char 
  7843 ;; Auto vars:     Size  Location     Type
  7844 ;;		None
  7845 ;; Return value:  Size  Location     Type
  7846 ;;                  1  [STACK] void 
  7847 ;; Registers used:
  7848 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  7849 ;; Tracked objects:
  7850 ;;		On entry : F/0
  7851 ;;		On exit  : 0/0
  7852 ;;		Unchanged: 0/0
  7853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7854 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7857 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7858 ;;Total ram usage:        0 bytes
  7859 ;; Hardware stack levels used:    1
  7860 ;; Hardware stack levels required when called:   16
  7861 ;; This function calls:
  7862 ;;		_LORAWAN_RxTimeout
  7863 ;;		_LORAWAN_TxDone
  7864 ;;		_RADIO_WriteMode
  7865 ;; This function is called by:
  7866 ;;		_RADIO_Init
  7867 ;;		_SwTimersExecute
  7868 ;; This function uses a reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text42
  7872  0095D8                     __ptext42:
  7873                           	opt stack 0
  7874  0095D8                     _RADIO_WatchdogTimeout:
  7875                           	opt stack 12
  7876                           
  7877                           ;radio_driver_SX1276.c: 1410: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulatio
      +                          n, 1);
  7878                           
  7879                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  7880                           ;incstack = 0
  7881  0095D8  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7882  0095DC  0E01               	movlw	1
  7883  0095DE  0100               	movlb	0	; () banked
  7884  0095E0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7885  0095E2  0E01               	movlw	1
  7886  0095E4  EC70  F035         	call	_RADIO_WriteMode
  7887                           
  7888                           ;radio_driver_SX1276.c: 1411: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  7889  0095E8  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  7890  0095EC  0E00               	movlw	0
  7891  0095EE  0100               	movlb	0	; () banked
  7892  0095F0  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  7893  0095F2  0E00               	movlw	0
  7894  0095F4  EC70  F035         	call	_RADIO_WriteMode
  7895                           
  7896                           ;radio_driver_SX1276.c: 1412: RadioConfiguration.flags |= (1 << (4));
  7897  0095F8  0101               	movlb	1	; () banked
  7898  0095FA  89AF               	bsf	(_RadioConfiguration+35)& (0+255),4,b
  7899                           
  7900                           ; BSR set to: 1
  7901                           ;radio_driver_SX1276.c: 1413: if ((RadioConfiguration.flags & (1 << (1))) != 0)
  7902  0095FC  0101               	movlb	1	; () banked
  7903  0095FE  A3AF               	btfss	(_RadioConfiguration+35)& (0+255),1,b
  7904  009600  D005               	goto	l671
  7905                           
  7906                           ; BSR set to: 1
  7907                           ;radio_driver_SX1276.c: 1414: {
  7908                           ;radio_driver_SX1276.c: 1415: RadioConfiguration.flags &= ~(1 << (1));
  7909  009602  0101               	movlb	1	; () banked
  7910  009604  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  7911                           
  7912                           ; BSR set to: 1
  7913                           ;radio_driver_SX1276.c: 1416: LORAWAN_RxTimeout();
  7914  009606  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  7915                           
  7916                           ;radio_driver_SX1276.c: 1417: }
  7917  00960A  D00B               	goto	l674
  7918  00960C                     l671:
  7919                           
  7920                           ; BSR set to: 1
  7921                           ;radio_driver_SX1276.c: 1418: else if ((RadioConfiguration.flags & (1 << (0))) != 0)
  7922  00960C  0101               	movlb	1	; () banked
  7923  00960E  A1AF               	btfss	(_RadioConfiguration+35)& (0+255),0,b
  7924  009610  D008               	goto	l674
  7925                           
  7926                           ; BSR set to: 1
  7927                           ;radio_driver_SX1276.c: 1419: {
  7928                           ;radio_driver_SX1276.c: 1420: RadioConfiguration.flags &= ~(1 << (0));
  7929  009612  0101               	movlb	1	; () banked
  7930  009614  91AF               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  7931                           
  7932                           ; BSR set to: 1
  7933                           ;radio_driver_SX1276.c: 1425: LORAWAN_TxDone(RadioConfiguration.watchdogTimerTimeout);
  7934  009616  C1B6  F0BF         	movff	_RadioConfiguration+42,LORAWAN_TxDone@timeOnAir
  7935  00961A  C1B7  F0C0         	movff	_RadioConfiguration+43,LORAWAN_TxDone@timeOnAir+1
  7936  00961E  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
  7937  009622                     l674:
  7938                           
  7939                           ; _RADIO_WatchdogTimeout: autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 pars
      +                          ize = 1, argsize = 1, vargsize = 0
  7940  009622  52E5               	movf	postdec1,f,c
  7941  009624  0012               	return		;funcret
  7942  009626                     __end_of_RADIO_WatchdogTimeout:
  7943                           	opt stack 0
  7944                           tosu	equ	0xFFF
  7945                           tosh	equ	0xFFE
  7946                           tosl	equ	0xFFD
  7947                           pclath	equ	0xFFA
  7948                           tblptru	equ	0xFF8
  7949                           tblptrh	equ	0xFF7
  7950                           tblptrl	equ	0xFF6
  7951                           tablat	equ	0xFF5
  7952                           prodh	equ	0xFF4
  7953                           prodl	equ	0xFF3
  7954                           intcon	equ	0xFF2
  7955                           intcon2	equ	0xFF1
  7956                           intcon3	equ	0xFF0
  7957                           postinc0	equ	0xFEE
  7958                           wreg	equ	0xFE8
  7959                           postinc1	equ	0xFE6
  7960                           postdec1	equ	0xFE5
  7961                           plusw1	equ	0xFE3
  7962                           fsr1h	equ	0xFE2
  7963                           fsr1l	equ	0xFE1
  7964                           indf2	equ	0xFDF
  7965                           postinc2	equ	0xFDE
  7966                           postdec2	equ	0xFDD
  7967                           fsr2h	equ	0xFDA
  7968                           fsr2l	equ	0xFD9
  7969                           status	equ	0xFD8
  7970                           
  7971 ;; *************** function _RADIO_RxFSKTimeout *****************
  7972 ;; Defined at:
  7973 ;;		line 1392 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  7974 ;; Parameters:    Size  Location     Type
  7975 ;;  param           1  [STACK] unsigned char 
  7976 ;; Auto vars:     Size  Location     Type
  7977 ;;  irqFlags        1  [STACK] unsigned char 
  7978 ;; Return value:  Size  Location     Type
  7979 ;;                  1  [STACK] void 
  7980 ;; Registers used:
  7981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl
      +, tblptrh, tblptru, prodl, prodh, cstack
  7982 ;; Tracked objects:
  7983 ;;		On entry : F/0
  7984 ;;		On exit  : 0/0
  7985 ;;		Unchanged: 0/0
  7986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7991 ;;Total ram usage:        0 bytes
  7992 ;; Hardware stack levels used:    1
  7993 ;; Hardware stack levels required when called:   16
  7994 ;; This function calls:
  7995 ;;		_LORAWAN_RxTimeout
  7996 ;;		_RADIO_RegisterRead
  7997 ;;		_RADIO_WriteMode
  7998 ;;		_SwTimerStop
  7999 ;; This function is called by:
  8000 ;;		_RADIO_Init
  8001 ;;		_SwTimersExecute
  8002 ;; This function uses a reentrant model
  8003 ;;
  8004                           
  8005                           	psect	text43
  8006  0099EA                     __ptext43:
  8007                           	opt stack 0
  8008  0099EA                     _RADIO_RxFSKTimeout:
  8009                           	opt stack 0
  8010                           
  8011                           ; autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8012  0099EA  52E6               	movf	postinc1,f,c
  8013                           
  8014                           ;radio_driver_SX1276.c: 1394: uint8_t irqFlags;
  8015                           ;radio_driver_SX1276.c: 1395: irqFlags = RADIO_RegisterRead(0x3E);
  8016                           
  8017                           ;incstack = 0
  8018  0099EC  0E3E               	movlw	62
  8019  0099EE  EC4D  F04F         	call	_RADIO_RegisterRead
  8020  0099F2  6E59               	movwf	btemp+11,c
  8021                           
  8022                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  8023  0099F4  0EFF               	movlw	-1
  8024  0099F6  C059  FFE3         	movff	btemp+11,plusw1
  8025                           
  8026                           ;radio_driver_SX1276.c: 1396: if (0 == (irqFlags & (1<<(0))))
  8027                           ;stkvar	RADIO_RxFSKTimeout@irqFlags @ sp[(-1)+0]
  8028  0099FA  0EFF               	movlw	-1
  8029  0099FC  B0E3               	btfsc	plusw1,0,c
  8030  0099FE  D010               	goto	l668
  8031                           
  8032                           ;radio_driver_SX1276.c: 1397: {
  8033                           ;radio_driver_SX1276.c: 1399: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8034  009A00  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8035  009A04  0E00               	movlw	0
  8036  009A06  0100               	movlb	0	; () banked
  8037  009A08  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8038  009A0A  0E00               	movlw	0
  8039  009A0C  EC70  F035         	call	_RADIO_WriteMode
  8040                           
  8041                           ;radio_driver_SX1276.c: 1401: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8042  009A10  0101               	movlb	1	; () banked
  8043  009A12  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8044  009A14  EC61  F04F         	call	_SwTimerStop
  8045                           
  8046                           ;radio_driver_SX1276.c: 1402: RadioConfiguration.flags &= ~(1 << (1));
  8047  009A18  0101               	movlb	1	; () banked
  8048  009A1A  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8049                           
  8050                           ; BSR set to: 1
  8051                           ;radio_driver_SX1276.c: 1403: LORAWAN_RxTimeout();
  8052  009A1C  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  8053  009A20                     l668:
  8054                           
  8055                           ; _RADIO_RxFSKTimeout: autosize = 1, savesize = 0, parsavesize = 0, tempsize = 0 parsize
      +                           = 1, argsize = 1, vargsize = 0
  8056  009A20  52E5               	movf	postdec1,f,c
  8057  009A22  52E5               	movf	postdec1,f,c
  8058  009A24  0012               	return		;funcret
  8059  009A26                     __end_of_RADIO_RxFSKTimeout:
  8060                           	opt stack 0
  8061                           tosu	equ	0xFFF
  8062                           tosh	equ	0xFFE
  8063                           tosl	equ	0xFFD
  8064                           pclath	equ	0xFFA
  8065                           tblptru	equ	0xFF8
  8066                           tblptrh	equ	0xFF7
  8067                           tblptrl	equ	0xFF6
  8068                           tablat	equ	0xFF5
  8069                           prodh	equ	0xFF4
  8070                           prodl	equ	0xFF3
  8071                           intcon	equ	0xFF2
  8072                           intcon2	equ	0xFF1
  8073                           intcon3	equ	0xFF0
  8074                           postinc0	equ	0xFEE
  8075                           wreg	equ	0xFE8
  8076                           postinc1	equ	0xFE6
  8077                           postdec1	equ	0xFE5
  8078                           plusw1	equ	0xFE3
  8079                           fsr1h	equ	0xFE2
  8080                           fsr1l	equ	0xFE1
  8081                           indf2	equ	0xFDF
  8082                           postinc2	equ	0xFDE
  8083                           postdec2	equ	0xFDD
  8084                           fsr2h	equ	0xFDA
  8085                           fsr2l	equ	0xFD9
  8086                           status	equ	0xFD8
  8087                           
  8088 ;; *************** function _UnconfirmedTransmissionCallback *****************
  8089 ;; Defined at:
  8090 ;;		line 997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;  param           1  [STACK] unsigned char 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1  [STACK] void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, tosl, tblptrl, tblptrh, tblptru, prod
      +l, prodh, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : F/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8108 ;;Total ram usage:        0 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:   13
  8111 ;; This function calls:
  8112 ;;		_RADIO_Transmit
  8113 ;;		_ResetParametersForUnconfirmedTransmission
  8114 ;;		_RxDataDone
  8115 ;;		_SelectChannelForTransmission
  8116 ;; This function is called by:
  8117 ;;		_SetCallbackSoftwareTimers
  8118 ;;		_SwTimersExecute
  8119 ;; This function uses a reentrant model
  8120 ;;
  8121                           
  8122                           	psect	text44
  8123  008A84                     __ptext44:
  8124                           	opt stack 0
  8125  008A84                     _UnconfirmedTransmissionCallback:
  8126                           	opt stack 15
  8127                           
  8128                           ;lorawan.c: 1000: if ( (SelectChannelForTransmission (1) == OK) && (RADIO_Transmit (&mac
      +                          Buffer[16], loRa.lastPacketLength) == OK) )
  8129                           
  8130                           ; autosize = 0, savesize = 0, parsavesize = 0, tempsize = 0 parsize = 1, argsize = 1 var
      +                          gsize = 0, retsize = 0
  8131                           ;incstack = 0
  8132  008A84  0E01               	movlw	1
  8133  008A86  EC84  F046         	call	_SelectChannelForTransmission
  8134  008A8A  0900               	iorlw	0
  8135  008A8C  A4D8               	btfss	status,2,c
  8136  008A8E  D01A               	goto	l16663
  8137  008A90  0EF0               	movlw	low (_macBuffer+16)
  8138  008A92  0100               	movlb	0	; () banked
  8139  008A94  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
  8140  008A96  0E04               	movlw	high (_macBuffer+16)
  8141  008A98  0100               	movlb	0	; () banked
  8142  008A9A  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
  8143  008A9C  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
  8144  008AA0  ECD3  F025         	call	_RADIO_Transmit	;wreg free
  8145  008AA4  C0B5  F04F         	movff	?_RADIO_Transmit,btemp+1
  8146  008AA8  C0B6  F050         	movff	?_RADIO_Transmit+1,btemp+2
  8147  008AAC  504F               	movf	btemp+1,w,c
  8148  008AAE  1050               	iorwf	btemp+2,w,c
  8149  008AB0  A4D8               	btfss	status,2,c
  8150  008AB2  D008               	goto	l16663
  8151                           
  8152                           ;lorawan.c: 1001: {
  8153                           ;lorawan.c: 1002: loRa.counterRepetitionsUnconfirmedUplink ++ ;
  8154  008AB4  0102               	movlb	2	; () banked
  8155  008AB6  2BD8               	incf	(_loRa+216)& (0+255),f,b
  8156                           
  8157                           ; BSR set to: 2
  8158                           ;lorawan.c: 1003: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
  8159  008AB8  0102               	movlb	2	; () banked
  8160  008ABA  5102               	movf	(_loRa+2)& (0+255),w,b
  8161  008ABC  0BF0               	andlw	-16
  8162  008ABE  0901               	iorlw	1
  8163  008AC0  6F02               	movwf	(_loRa+2)& (0+255),b
  8164                           
  8165                           ;lorawan.c: 1005: }
  8166  008AC2  D020               	goto	l2017
  8167  008AC4                     l16663:
  8168                           
  8169                           ;lorawan.c: 1006: else
  8170                           ;lorawan.c: 1008: {
  8171                           ;lorawan.c: 1009: ResetParametersForUnconfirmedTransmission ();
  8172  008AC4  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
  8173                           
  8174                           ;lorawan.c: 1010: if (rxPayload.RxAppData != (0))
  8175  008AC8  0101               	movlb	1	; () banked
  8176  008ACA  5186               	movf	_rxPayload& (0+255),w,b
  8177  008ACC  0101               	movlb	1	; () banked
  8178  008ACE  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
  8179  008AD0  B4D8               	btfsc	status,2,c
  8180  008AD2  D018               	goto	l2017
  8181                           
  8182                           ; BSR set to: 1
  8183                           ;lorawan.c: 1011: {
  8184                           ;lorawan.c: 1012: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
  8185  008AD4  0E00               	movlw	0
  8186  008AD6  0100               	movlb	0	; () banked
  8187  008AD8  6F67               	movwf	RxDataDone@pData& (0+255),b
  8188  008ADA  0E00               	movlw	0
  8189  008ADC  0100               	movlb	0	; () banked
  8190  008ADE  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
  8191  008AE0  0E00               	movlw	0
  8192  008AE2  0100               	movlb	0	; () banked
  8193  008AE4  6F69               	movwf	RxDataDone@dataLength& (0+255),b
  8194  008AE6  0E00               	movlw	0
  8195  008AE8  0100               	movlb	0	; () banked
  8196  008AEA  6F6A               	movwf	RxDataDone@status& (0+255),b
  8197  008AEC  D801               	call	u20188
  8198  008AEE  D00A               	goto	l2017
  8199  008AF0                     u20188:
  8200  008AF0  0005               	push	
  8201  008AF2  6EFA               	movwf	pclath,c
  8202  008AF4  0101               	movlb	1	; () banked
  8203  008AF6  5186               	movf	_rxPayload& (0+255),w,b
  8204  008AF8  6EFD               	movwf	tosl,c
  8205  008AFA  5187               	movf	(_rxPayload+1)& (0+255),w,b
  8206  008AFC  6EFE               	movwf	tosh,c
  8207  008AFE  6AFF               	clrf	tosu,c
  8208  008B00  50FA               	movf	pclath,w,c
  8209  008B02  0012               	return		;indir
  8210  008B04                     l2017:
  8211                           
  8212                           ; _UnconfirmedTransmissionCallback: autosize = 0, savesize = 0, parsavesize = 0, tempsiz
      +                          e = 0 parsize = 1, argsize = 1, vargsize = 0
  8213  008B04  52E5               	movf	postdec1,f,c
  8214  008B06  0012               	return		;funcret
  8215  008B08                     __end_of_UnconfirmedTransmissionCallback:
  8216                           	opt stack 0
  8217                           tosu	equ	0xFFF
  8218                           tosh	equ	0xFFE
  8219                           tosl	equ	0xFFD
  8220                           pclath	equ	0xFFA
  8221                           tblptru	equ	0xFF8
  8222                           tblptrh	equ	0xFF7
  8223                           tblptrl	equ	0xFF6
  8224                           tablat	equ	0xFF5
  8225                           prodh	equ	0xFF4
  8226                           prodl	equ	0xFF3
  8227                           intcon	equ	0xFF2
  8228                           intcon2	equ	0xFF1
  8229                           intcon3	equ	0xFF0
  8230                           postinc0	equ	0xFEE
  8231                           wreg	equ	0xFE8
  8232                           postinc1	equ	0xFE6
  8233                           postdec1	equ	0xFE5
  8234                           plusw1	equ	0xFE3
  8235                           fsr1h	equ	0xFE2
  8236                           fsr1l	equ	0xFE1
  8237                           indf2	equ	0xFDF
  8238                           postinc2	equ	0xFDE
  8239                           postdec2	equ	0xFDD
  8240                           fsr2h	equ	0xFDA
  8241                           fsr2l	equ	0xFD9
  8242                           status	equ	0xFD8
  8243                           
  8244 ;; *************** function _GetRx1Freq *****************
  8245 ;; Defined at:
  8246 ;;		line 883 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
  8247 ;; Parameters:    Size  Location     Type
  8248 ;;		None
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  4    4[BANK0 ] unsigned long 
  8253 ;; Registers used:
  8254 ;;		None
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8260 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8263 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8264 ;;Total ram usage:        4 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    7
  8267 ;; This function calls:
  8268 ;;		Nothing
  8269 ;; This function is called by:
  8270 ;;		_LORAWAN_ReceiveWindow1Callback
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           	psect	text45
  8275  00A2BE                     __ptext45:
  8276                           	opt stack 0
  8277  00A2BE                     _GetRx1Freq:
  8278                           	opt stack 20
  8279                           
  8280                           ;lorawan_eu.c: 885: return loRa.receiveWindow1Parameters.frequency;
  8281                           
  8282                           ;incstack = 0
  8283  00A2BE  C213  F064         	movff	_loRa+19,?_GetRx1Freq
  8284  00A2C2  C214  F065         	movff	_loRa+20,?_GetRx1Freq+1
  8285  00A2C6  C215  F066         	movff	_loRa+21,?_GetRx1Freq+2
  8286  00A2CA  C216  F067         	movff	_loRa+22,?_GetRx1Freq+3
  8287  00A2CE  0012               	return		;funcret
  8288  00A2D0                     __end_of_GetRx1Freq:
  8289                           	opt stack 0
  8290                           tosu	equ	0xFFF
  8291                           tosh	equ	0xFFE
  8292                           tosl	equ	0xFFD
  8293                           pclath	equ	0xFFA
  8294                           tblptru	equ	0xFF8
  8295                           tblptrh	equ	0xFF7
  8296                           tblptrl	equ	0xFF6
  8297                           tablat	equ	0xFF5
  8298                           prodh	equ	0xFF4
  8299                           prodl	equ	0xFF3
  8300                           intcon	equ	0xFF2
  8301                           intcon2	equ	0xFF1
  8302                           intcon3	equ	0xFF0
  8303                           postinc0	equ	0xFEE
  8304                           wreg	equ	0xFE8
  8305                           postinc1	equ	0xFE6
  8306                           postdec1	equ	0xFE5
  8307                           plusw1	equ	0xFE3
  8308                           fsr1h	equ	0xFE2
  8309                           fsr1l	equ	0xFE1
  8310                           indf2	equ	0xFDF
  8311                           postinc2	equ	0xFDE
  8312                           postdec2	equ	0xFDD
  8313                           fsr2h	equ	0xFDA
  8314                           fsr2l	equ	0xFD9
  8315                           status	equ	0xFD8
  8316                           
  8317 ;; *************** function _RADIO_DIO5 *****************
  8318 ;; Defined at:
  8319 ;;		line 1344 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8320 ;; Parameters:    Size  Location     Type
  8321 ;;		None
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  dioMapping      1   10[BANK0 ] unsigned char 
  8324 ;; Return value:  Size  Location     Type
  8325 ;;                  1    wreg      void 
  8326 ;; Registers used:
  8327 ;;		wreg, status,2, status,0, cstack
  8328 ;; Tracked objects:
  8329 ;;		On entry : 0/0
  8330 ;;		On exit  : 0/0
  8331 ;;		Unchanged: 0/0
  8332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8337 ;;Total ram usage:        2 bytes
  8338 ;; Hardware stack levels used:    1
  8339 ;; Hardware stack levels required when called:   11
  8340 ;; This function calls:
  8341 ;;		_RADIO_RegisterRead
  8342 ;;		_RADIO_UnhandledInterrupt
  8343 ;; This function is called by:
  8344 ;;		_LORAWAN_Mainloop
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text46
  8349  009D0E                     __ptext46:
  8350                           	opt stack 0
  8351  009D0E                     _RADIO_DIO5:
  8352                           	opt stack 18
  8353                           
  8354                           ;radio_driver_SX1276.c: 1347: uint8_t dioMapping;
  8355                           ;radio_driver_SX1276.c: 1348: dioMapping = (RADIO_RegisterRead(0x41) & 0x30) >> (4);
  8356                           
  8357                           ;incstack = 0
  8358  009D0E  0E41               	movlw	65
  8359  009D10  EC4D  F04F         	call	_RADIO_RegisterRead
  8360  009D14  0100               	movlb	0	; () banked
  8361  009D16  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8362  009D18  0100               	movlb	0	; () banked
  8363  009D1A  3969               	swapf	??_RADIO_DIO5& (0+255),w,b
  8364  009D1C  0B0F               	andlw	15
  8365  009D1E  0B03               	andlw	3
  8366  009D20  0100               	movlb	0	; () banked
  8367  009D22  6F6A               	movwf	RADIO_DIO5@dioMapping& (0+255),b
  8368                           
  8369                           ;radio_driver_SX1276.c: 1350: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8370  009D24  0E01               	movlw	1
  8371  009D26  EC4D  F04F         	call	_RADIO_RegisterRead
  8372  009D2A  0100               	movlb	0	; () banked
  8373  009D2C  6F69               	movwf	??_RADIO_DIO5& (0+255),b
  8374  009D2E  0100               	movlb	0	; () banked
  8375  009D30  AF69               	btfss	??_RADIO_DIO5& (0+255),7,b
  8376  009D32  0012               	return	
  8377                           
  8378                           ;radio_driver_SX1276.c: 1356: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8379                           
  8380                           ; BSR set to: 0
  8381                           
  8382                           ;radio_driver_SX1276.c: 1354: {
  8383                           ;radio_driver_SX1276.c: 1355: default:
  8384                           
  8385                           ; BSR set to: 0
  8386                           ;radio_driver_SX1276.c: 1351: {
  8387                           ;radio_driver_SX1276.c: 1353: switch (dioMapping)
  8388  009D34  0E01               	movlw	1
  8389  009D36  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  8390                           
  8391                           ;radio_driver_SX1276.c: 1358: }
  8392                           
  8393                           ;radio_driver_SX1276.c: 1357: break;
  8394  009D3A  0012               	return	
  8395  009D3C                     __end_of_RADIO_DIO5:
  8396                           	opt stack 0
  8397                           tosu	equ	0xFFF
  8398                           tosh	equ	0xFFE
  8399                           tosl	equ	0xFFD
  8400                           pclath	equ	0xFFA
  8401                           tblptru	equ	0xFF8
  8402                           tblptrh	equ	0xFF7
  8403                           tblptrl	equ	0xFF6
  8404                           tablat	equ	0xFF5
  8405                           prodh	equ	0xFF4
  8406                           prodl	equ	0xFF3
  8407                           intcon	equ	0xFF2
  8408                           intcon2	equ	0xFF1
  8409                           intcon3	equ	0xFF0
  8410                           postinc0	equ	0xFEE
  8411                           wreg	equ	0xFE8
  8412                           postinc1	equ	0xFE6
  8413                           postdec1	equ	0xFE5
  8414                           plusw1	equ	0xFE3
  8415                           fsr1h	equ	0xFE2
  8416                           fsr1l	equ	0xFE1
  8417                           indf2	equ	0xFDF
  8418                           postinc2	equ	0xFDE
  8419                           postdec2	equ	0xFDD
  8420                           fsr2h	equ	0xFDA
  8421                           fsr2l	equ	0xFD9
  8422                           status	equ	0xFD8
  8423                           
  8424 ;; *************** function _RADIO_DIO4 *****************
  8425 ;; Defined at:
  8426 ;;		line 1321 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8427 ;; Parameters:    Size  Location     Type
  8428 ;;		None
  8429 ;; Auto vars:     Size  Location     Type
  8430 ;;  dioMapping      1   11[BANK0 ] unsigned char 
  8431 ;; Return value:  Size  Location     Type
  8432 ;;                  1    wreg      void 
  8433 ;; Registers used:
  8434 ;;		wreg, status,2, status,0, cstack
  8435 ;; Tracked objects:
  8436 ;;		On entry : 0/0
  8437 ;;		On exit  : 0/0
  8438 ;;		Unchanged: 0/0
  8439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8441 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8442 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8443 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8444 ;;Total ram usage:        3 bytes
  8445 ;; Hardware stack levels used:    1
  8446 ;; Hardware stack levels required when called:   11
  8447 ;; This function calls:
  8448 ;;		_RADIO_RegisterRead
  8449 ;;		_RADIO_UnhandledInterrupt
  8450 ;; This function is called by:
  8451 ;;		_LORAWAN_Mainloop
  8452 ;; This function uses a non-reentrant model
  8453 ;;
  8454                           
  8455                           	psect	text47
  8456  0099AC                     __ptext47:
  8457                           	opt stack 0
  8458  0099AC                     _RADIO_DIO4:
  8459                           	opt stack 18
  8460                           
  8461                           ;radio_driver_SX1276.c: 1324: uint8_t dioMapping;
  8462                           ;radio_driver_SX1276.c: 1325: dioMapping = (RADIO_RegisterRead(0x41) & 0xC0) >> (6);
  8463                           
  8464                           ;incstack = 0
  8465  0099AC  0E41               	movlw	65
  8466  0099AE  EC4D  F04F         	call	_RADIO_RegisterRead
  8467  0099B2  0100               	movlb	0	; () banked
  8468  0099B4  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8469  0099B6  0E06               	movlw	6
  8470  0099B8  0100               	movlb	0	; () banked
  8471  0099BA  6F6A               	movwf	(??_RADIO_DIO4+1)& (0+255),b
  8472  0099BC                     u20355:
  8473  0099BC  0100               	movlb	0	; () banked
  8474  0099BE  90D8               	bcf	status,0,c
  8475  0099C0  3369               	rrcf	??_RADIO_DIO4& (0+255),f,b
  8476  0099C2  0100               	movlb	0	; () banked
  8477  0099C4  2F6A               	decfsz	(??_RADIO_DIO4+1)& (0+255),f,b
  8478  0099C6  D7FA               	goto	u20355
  8479  0099C8  0100               	movlb	0	; () banked
  8480  0099CA  5169               	movf	??_RADIO_DIO4& (0+255),w,b
  8481  0099CC  0B03               	andlw	3
  8482  0099CE  0100               	movlb	0	; () banked
  8483  0099D0  6F6B               	movwf	RADIO_DIO4@dioMapping& (0+255),b
  8484                           
  8485                           ;radio_driver_SX1276.c: 1327: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8486  0099D2  0E01               	movlw	1
  8487  0099D4  EC4D  F04F         	call	_RADIO_RegisterRead
  8488  0099D8  0100               	movlb	0	; () banked
  8489  0099DA  6F69               	movwf	??_RADIO_DIO4& (0+255),b
  8490  0099DC  0100               	movlb	0	; () banked
  8491  0099DE  AF69               	btfss	??_RADIO_DIO4& (0+255),7,b
  8492  0099E0  0012               	return	
  8493                           
  8494                           ;radio_driver_SX1276.c: 1333: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8495                           
  8496                           ; BSR set to: 0
  8497                           
  8498                           ;radio_driver_SX1276.c: 1331: {
  8499                           ;radio_driver_SX1276.c: 1332: default:
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;radio_driver_SX1276.c: 1328: {
  8503                           ;radio_driver_SX1276.c: 1330: switch (dioMapping)
  8504  0099E2  0E01               	movlw	1
  8505  0099E4  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  8506                           
  8507                           ;radio_driver_SX1276.c: 1335: }
  8508                           
  8509                           ;radio_driver_SX1276.c: 1334: break;
  8510  0099E8  0012               	return	
  8511  0099EA                     __end_of_RADIO_DIO4:
  8512                           	opt stack 0
  8513                           tosu	equ	0xFFF
  8514                           tosh	equ	0xFFE
  8515                           tosl	equ	0xFFD
  8516                           pclath	equ	0xFFA
  8517                           tblptru	equ	0xFF8
  8518                           tblptrh	equ	0xFF7
  8519                           tblptrl	equ	0xFF6
  8520                           tablat	equ	0xFF5
  8521                           prodh	equ	0xFF4
  8522                           prodl	equ	0xFF3
  8523                           intcon	equ	0xFF2
  8524                           intcon2	equ	0xFF1
  8525                           intcon3	equ	0xFF0
  8526                           postinc0	equ	0xFEE
  8527                           wreg	equ	0xFE8
  8528                           postinc1	equ	0xFE6
  8529                           postdec1	equ	0xFE5
  8530                           plusw1	equ	0xFE3
  8531                           fsr1h	equ	0xFE2
  8532                           fsr1l	equ	0xFE1
  8533                           indf2	equ	0xFDF
  8534                           postinc2	equ	0xFDE
  8535                           postdec2	equ	0xFDD
  8536                           fsr2h	equ	0xFDA
  8537                           fsr2l	equ	0xFD9
  8538                           status	equ	0xFD8
  8539                           
  8540 ;; *************** function _RADIO_DIO3 *****************
  8541 ;; Defined at:
  8542 ;;		line 1298 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;		None
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  dioMapping      1   10[BANK0 ] unsigned char 
  8547 ;; Return value:  Size  Location     Type
  8548 ;;                  1    wreg      void 
  8549 ;; Registers used:
  8550 ;;		wreg, status,2, status,0, cstack
  8551 ;; Tracked objects:
  8552 ;;		On entry : 0/0
  8553 ;;		On exit  : 0/0
  8554 ;;		Unchanged: 0/0
  8555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8557 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8558 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8559 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8560 ;;Total ram usage:        2 bytes
  8561 ;; Hardware stack levels used:    1
  8562 ;; Hardware stack levels required when called:   11
  8563 ;; This function calls:
  8564 ;;		_RADIO_RegisterRead
  8565 ;;		_RADIO_UnhandledInterrupt
  8566 ;; This function is called by:
  8567 ;;		_LORAWAN_Mainloop
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           
  8571                           	psect	text48
  8572  009F10                     __ptext48:
  8573                           	opt stack 0
  8574  009F10                     _RADIO_DIO3:
  8575                           	opt stack 18
  8576                           
  8577                           ;radio_driver_SX1276.c: 1301: uint8_t dioMapping;
  8578                           ;radio_driver_SX1276.c: 1302: dioMapping = RADIO_RegisterRead(0x40) & 0x03;
  8579                           
  8580                           ;incstack = 0
  8581  009F10  0E40               	movlw	64
  8582  009F12  EC4D  F04F         	call	_RADIO_RegisterRead
  8583  009F16  0B03               	andlw	3
  8584  009F18  0100               	movlb	0	; () banked
  8585  009F1A  6F6A               	movwf	RADIO_DIO3@dioMapping& (0+255),b
  8586                           
  8587                           ;radio_driver_SX1276.c: 1304: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8588  009F1C  0E01               	movlw	1
  8589  009F1E  EC4D  F04F         	call	_RADIO_RegisterRead
  8590  009F22  0100               	movlb	0	; () banked
  8591  009F24  6F69               	movwf	??_RADIO_DIO3& (0+255),b
  8592  009F26  0100               	movlb	0	; () banked
  8593  009F28  AF69               	btfss	??_RADIO_DIO3& (0+255),7,b
  8594  009F2A  0012               	return	
  8595                           
  8596                           ;radio_driver_SX1276.c: 1310: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8597                           
  8598                           ; BSR set to: 0
  8599                           
  8600                           ;radio_driver_SX1276.c: 1308: {
  8601                           ;radio_driver_SX1276.c: 1309: default:
  8602                           
  8603                           ; BSR set to: 0
  8604                           ;radio_driver_SX1276.c: 1305: {
  8605                           ;radio_driver_SX1276.c: 1307: switch (dioMapping)
  8606  009F2C  0E01               	movlw	1
  8607  009F2E  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  8608                           
  8609                           ;radio_driver_SX1276.c: 1312: }
  8610                           
  8611                           ;radio_driver_SX1276.c: 1311: break;
  8612  009F32  0012               	return	
  8613  009F34                     __end_of_RADIO_DIO3:
  8614                           	opt stack 0
  8615                           tosu	equ	0xFFF
  8616                           tosh	equ	0xFFE
  8617                           tosl	equ	0xFFD
  8618                           pclath	equ	0xFFA
  8619                           tblptru	equ	0xFF8
  8620                           tblptrh	equ	0xFF7
  8621                           tblptrl	equ	0xFF6
  8622                           tablat	equ	0xFF5
  8623                           prodh	equ	0xFF4
  8624                           prodl	equ	0xFF3
  8625                           intcon	equ	0xFF2
  8626                           intcon2	equ	0xFF1
  8627                           intcon3	equ	0xFF0
  8628                           postinc0	equ	0xFEE
  8629                           wreg	equ	0xFE8
  8630                           postinc1	equ	0xFE6
  8631                           postdec1	equ	0xFE5
  8632                           plusw1	equ	0xFE3
  8633                           fsr1h	equ	0xFE2
  8634                           fsr1l	equ	0xFE1
  8635                           indf2	equ	0xFDF
  8636                           postinc2	equ	0xFDE
  8637                           postdec2	equ	0xFDD
  8638                           fsr2h	equ	0xFDA
  8639                           fsr2l	equ	0xFD9
  8640                           status	equ	0xFD8
  8641                           
  8642 ;; *************** function _RADIO_DIO2 *****************
  8643 ;; Defined at:
  8644 ;;		line 1268 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8645 ;; Parameters:    Size  Location     Type
  8646 ;;		None
  8647 ;; Auto vars:     Size  Location     Type
  8648 ;;  dioMapping      1   32[BANK0 ] unsigned char 
  8649 ;;  opMode          1   31[BANK0 ] unsigned char 
  8650 ;; Return value:  Size  Location     Type
  8651 ;;                  1    wreg      void 
  8652 ;; Registers used:
  8653 ;;		wreg, status,2, status,0, cstack
  8654 ;; Tracked objects:
  8655 ;;		On entry : 0/0
  8656 ;;		On exit  : 0/0
  8657 ;;		Unchanged: 0/0
  8658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8660 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8661 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8662 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8663 ;;Total ram usage:        3 bytes
  8664 ;; Hardware stack levels used:    1
  8665 ;; Hardware stack levels required when called:   12
  8666 ;; This function calls:
  8667 ;;		_RADIO_FHSSChangeChannel
  8668 ;;		_RADIO_RegisterRead
  8669 ;;		_RADIO_UnhandledInterrupt
  8670 ;; This function is called by:
  8671 ;;		_LORAWAN_Mainloop
  8672 ;; This function uses a non-reentrant model
  8673 ;;
  8674                           
  8675                           	psect	text49
  8676  0092D0                     __ptext49:
  8677                           	opt stack 0
  8678  0092D0                     _RADIO_DIO2:
  8679                           	opt stack 17
  8680                           
  8681                           ;radio_driver_SX1276.c: 1271: uint8_t dioMapping;
  8682                           ;radio_driver_SX1276.c: 1272: uint8_t opMode;
  8683                           ;radio_driver_SX1276.c: 1273: dioMapping = (RADIO_RegisterRead(0x40) & 0x0C) >> (2);
  8684                           
  8685                           ;incstack = 0
  8686  0092D0  0E40               	movlw	64
  8687  0092D2  EC4D  F04F         	call	_RADIO_RegisterRead
  8688  0092D6  0100               	movlb	0	; () banked
  8689  0092D8  6F7E               	movwf	??_RADIO_DIO2& (0+255),b
  8690  0092DA  0100               	movlb	0	; () banked
  8691  0092DC  90D8               	bcf	status,0,c
  8692  0092DE  337E               	rrcf	??_RADIO_DIO2& (0+255),f,b
  8693  0092E0  0100               	movlb	0	; () banked
  8694  0092E2  90D8               	bcf	status,0,c
  8695  0092E4  317E               	rrcf	??_RADIO_DIO2& (0+255),w,b
  8696  0092E6  0B03               	andlw	3
  8697  0092E8  0100               	movlb	0	; () banked
  8698  0092EA  6F80               	movwf	RADIO_DIO2@dioMapping& (0+255),b
  8699                           
  8700                           ;radio_driver_SX1276.c: 1274: opMode = RADIO_RegisterRead(0x01);
  8701  0092EC  0E01               	movlw	1
  8702  0092EE  EC4D  F04F         	call	_RADIO_RegisterRead
  8703  0092F2  0100               	movlb	0	; () banked
  8704  0092F4  6F7F               	movwf	RADIO_DIO2@opMode& (0+255),b
  8705                           
  8706                           ;radio_driver_SX1276.c: 1276: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8707  0092F6  0E01               	movlw	1
  8708  0092F8  EC4D  F04F         	call	_RADIO_RegisterRead
  8709  0092FC  0100               	movlb	0	; () banked
  8710  0092FE  6F7E               	movwf	??_RADIO_DIO2& (0+255),b
  8711  009300  0100               	movlb	0	; () banked
  8712  009302  AF7E               	btfss	??_RADIO_DIO2& (0+255),7,b
  8713  009304  0012               	return	
  8714  009306  D007               	goto	l16837
  8715  009308                     l16831:
  8716                           
  8717                           ; BSR set to: 0
  8718                           ;radio_driver_SX1276.c: 1283: case 0x01:
  8719                           ;radio_driver_SX1276.c: 1284: case 0x02:
  8720                           ;radio_driver_SX1276.c: 1285: RADIO_FHSSChangeChannel();
  8721  009308  EC84  F04B         	call	_RADIO_FHSSChangeChannel	;wreg free
  8722                           
  8723                           ;radio_driver_SX1276.c: 1286: break;
  8724  00930C  0012               	return	
  8725  00930E                     l16833:
  8726                           
  8727                           ;radio_driver_SX1276.c: 1288: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8728  00930E  0E01               	movlw	1
  8729  009310  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  8730                           
  8731                           ;radio_driver_SX1276.c: 1290: }
  8732                           
  8733                           ;radio_driver_SX1276.c: 1289: break;
  8734  009314  0012               	return	
  8735  009316                     l16837:
  8736  009316  0100               	movlb	0	; () banked
  8737  009318  5180               	movf	RADIO_DIO2@dioMapping& (0+255),w,b
  8738                           
  8739                           ; Switch size 1, requested type "space"
  8740                           ; Number of cases is 3, Range of values is 0 to 2
  8741                           ; switch strategies available:
  8742                           ; Name         Instructions Cycles
  8743                           ; simple_byte           10     6 (average)
  8744                           ;	Chosen strategy is simple_byte
  8745  00931A  0A00               	xorlw	0	; case 0
  8746  00931C  B4D8               	btfsc	status,2,c
  8747  00931E  D7F4               	goto	l16831
  8748  009320  0A01               	xorlw	1	; case 1
  8749  009322  B4D8               	btfsc	status,2,c
  8750  009324  D7F1               	goto	l16831
  8751  009326  0A03               	xorlw	3	; case 2
  8752  009328  B4D8               	btfsc	status,2,c
  8753  00932A  D7EE               	goto	l16831
  8754  00932C  D7F0               	goto	l16833
  8755  00932E                     __end_of_RADIO_DIO2:
  8756                           	opt stack 0
  8757                           tosu	equ	0xFFF
  8758                           tosh	equ	0xFFE
  8759                           tosl	equ	0xFFD
  8760                           pclath	equ	0xFFA
  8761                           tblptru	equ	0xFF8
  8762                           tblptrh	equ	0xFF7
  8763                           tblptrl	equ	0xFF6
  8764                           tablat	equ	0xFF5
  8765                           prodh	equ	0xFF4
  8766                           prodl	equ	0xFF3
  8767                           intcon	equ	0xFF2
  8768                           intcon2	equ	0xFF1
  8769                           intcon3	equ	0xFF0
  8770                           postinc0	equ	0xFEE
  8771                           wreg	equ	0xFE8
  8772                           postinc1	equ	0xFE6
  8773                           postdec1	equ	0xFE5
  8774                           plusw1	equ	0xFE3
  8775                           fsr1h	equ	0xFE2
  8776                           fsr1l	equ	0xFE1
  8777                           indf2	equ	0xFDF
  8778                           postinc2	equ	0xFDE
  8779                           postdec2	equ	0xFDD
  8780                           fsr2h	equ	0xFDA
  8781                           fsr2l	equ	0xFD9
  8782                           status	equ	0xFD8
  8783                           
  8784 ;; *************** function _RADIO_DIO1 *****************
  8785 ;; Defined at:
  8786 ;;		line 1231 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;		None
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  dioMapping      1  112[BANK0 ] unsigned char 
  8791 ;; Return value:  Size  Location     Type
  8792 ;;                  1    wreg      void 
  8793 ;; Registers used:
  8794 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8795 ;; Tracked objects:
  8796 ;;		On entry : 0/0
  8797 ;;		On exit  : 0/0
  8798 ;;		Unchanged: 0/0
  8799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8801 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8802 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8803 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8804 ;;Total ram usage:        2 bytes
  8805 ;; Hardware stack levels used:    1
  8806 ;; Hardware stack levels required when called:   17
  8807 ;; This function calls:
  8808 ;;		_RADIO_FHSSChangeChannel
  8809 ;;		_RADIO_RegisterRead
  8810 ;;		_RADIO_RxTimeout
  8811 ;;		_RADIO_UnhandledInterrupt
  8812 ;; This function is called by:
  8813 ;;		_LORAWAN_Mainloop
  8814 ;; This function uses a non-reentrant model
  8815 ;;
  8816                           
  8817                           	psect	text50
  8818  00938C                     __ptext50:
  8819                           	opt stack 0
  8820  00938C                     _RADIO_DIO1:
  8821                           	opt stack 12
  8822                           
  8823                           ;radio_driver_SX1276.c: 1234: uint8_t dioMapping;
  8824                           ;radio_driver_SX1276.c: 1235: dioMapping = (RADIO_RegisterRead(0x40) & 0x30) >> (4);
  8825                           
  8826                           ;incstack = 0
  8827  00938C  0E40               	movlw	64
  8828  00938E  EC4D  F04F         	call	_RADIO_RegisterRead
  8829  009392  0100               	movlb	0	; () banked
  8830  009394  6FCF               	movwf	??_RADIO_DIO1& (0+255),b
  8831  009396  0100               	movlb	0	; () banked
  8832  009398  39CF               	swapf	??_RADIO_DIO1& (0+255),w,b
  8833  00939A  0B0F               	andlw	15
  8834  00939C  0B03               	andlw	3
  8835  00939E  0100               	movlb	0	; () banked
  8836  0093A0  6FD0               	movwf	RADIO_DIO1@dioMapping& (0+255),b
  8837                           
  8838                           ;radio_driver_SX1276.c: 1237: if ((RADIO_RegisterRead(0x01) & 0x80) != 0)
  8839  0093A2  0E01               	movlw	1
  8840  0093A4  EC4D  F04F         	call	_RADIO_RegisterRead
  8841  0093A8  0100               	movlb	0	; () banked
  8842  0093AA  6FCF               	movwf	??_RADIO_DIO1& (0+255),b
  8843  0093AC  0100               	movlb	0	; () banked
  8844  0093AE  BFCF               	btfsc	??_RADIO_DIO1& (0+255),7,b
  8845  0093B0  D00B               	goto	l16821
  8846  0093B2  D013               	goto	l16825
  8847  0093B4                     l16813:
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;radio_driver_SX1276.c: 1243: RADIO_RxTimeout();
  8851  0093B4  EC9E  F04E         	call	_RADIO_RxTimeout	;wreg free
  8852                           
  8853                           ;radio_driver_SX1276.c: 1244: break;
  8854  0093B8  0012               	return	
  8855  0093BA                     l16815:
  8856                           
  8857                           ;radio_driver_SX1276.c: 1246: RADIO_FHSSChangeChannel();
  8858  0093BA  EC84  F04B         	call	_RADIO_FHSSChangeChannel	;wreg free
  8859                           
  8860                           ;radio_driver_SX1276.c: 1247: break;
  8861  0093BE  0012               	return	
  8862  0093C0                     l16817:
  8863                           
  8864                           ;radio_driver_SX1276.c: 1249: RADIO_UnhandledInterrupt(MODULATION_LORA);
  8865  0093C0  0E01               	movlw	1
  8866  0093C2  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  8867                           
  8868                           ;radio_driver_SX1276.c: 1251: }
  8869                           
  8870                           ;radio_driver_SX1276.c: 1250: break;
  8871  0093C6  0012               	return	
  8872  0093C8                     l16821:
  8873  0093C8  0100               	movlb	0	; () banked
  8874  0093CA  51D0               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8875                           
  8876                           ; Switch size 1, requested type "space"
  8877                           ; Number of cases is 2, Range of values is 0 to 1
  8878                           ; switch strategies available:
  8879                           ; Name         Instructions Cycles
  8880                           ; simple_byte            7     4 (average)
  8881                           ;	Chosen strategy is simple_byte
  8882  0093CC  0A00               	xorlw	0	; case 0
  8883  0093CE  B4D8               	btfsc	status,2,c
  8884  0093D0  D7F1               	goto	l16813
  8885  0093D2  0A01               	xorlw	1	; case 1
  8886  0093D4  B4D8               	btfsc	status,2,c
  8887  0093D6  D7F1               	goto	l16815
  8888  0093D8  D7F3               	goto	l16817
  8889  0093DA                     l16825:
  8890                           
  8891                           ; BSR set to: 0
  8892  0093DA  0100               	movlb	0	; () banked
  8893  0093DC  51D0               	movf	RADIO_DIO1@dioMapping& (0+255),w,b
  8894                           
  8895                           ; Switch size 1, requested type "space"
  8896                           ; Number of cases is 1, Range of values is 0 to 0
  8897                           ; switch strategies available:
  8898                           ; Name         Instructions Cycles
  8899                           ; simple_byte            4     3 (average)
  8900                           ;	Chosen strategy is simple_byte
  8901  0093DE  0A00               	xorlw	0	; case 0
  8902                           
  8903                           ; BSR set to: 0
  8904  0093E0  0012               	return	
  8905  0093E2                     __end_of_RADIO_DIO1:
  8906                           	opt stack 0
  8907                           tosu	equ	0xFFF
  8908                           tosh	equ	0xFFE
  8909                           tosl	equ	0xFFD
  8910                           pclath	equ	0xFFA
  8911                           tblptru	equ	0xFF8
  8912                           tblptrh	equ	0xFF7
  8913                           tblptrl	equ	0xFF6
  8914                           tablat	equ	0xFF5
  8915                           prodh	equ	0xFF4
  8916                           prodl	equ	0xFF3
  8917                           intcon	equ	0xFF2
  8918                           intcon2	equ	0xFF1
  8919                           intcon3	equ	0xFF0
  8920                           postinc0	equ	0xFEE
  8921                           wreg	equ	0xFE8
  8922                           postinc1	equ	0xFE6
  8923                           postdec1	equ	0xFE5
  8924                           plusw1	equ	0xFE3
  8925                           fsr1h	equ	0xFE2
  8926                           fsr1l	equ	0xFE1
  8927                           indf2	equ	0xFDF
  8928                           postinc2	equ	0xFDE
  8929                           postdec2	equ	0xFDD
  8930                           fsr2h	equ	0xFDA
  8931                           fsr2l	equ	0xFD9
  8932                           status	equ	0xFD8
  8933                           
  8934 ;; *************** function _RADIO_RxTimeout *****************
  8935 ;; Defined at:
  8936 ;;		line 1066 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  8937 ;; Parameters:    Size  Location     Type
  8938 ;;		None
  8939 ;; Auto vars:     Size  Location     Type
  8940 ;;		None
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  1    wreg      void 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;Total ram usage:        0 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:   16
  8957 ;; This function calls:
  8958 ;;		_LORAWAN_RxTimeout
  8959 ;;		_RADIO_RegisterWrite
  8960 ;;		_RADIO_WriteMode
  8961 ;;		_SwTimerStop
  8962 ;; This function is called by:
  8963 ;;		_RADIO_DIO1
  8964 ;; This function uses a non-reentrant model
  8965 ;;
  8966                           
  8967                           	psect	text51
  8968  009D3C                     __ptext51:
  8969                           	opt stack 0
  8970  009D3C                     _RADIO_RxTimeout:
  8971                           	opt stack 12
  8972                           
  8973                           ;radio_driver_SX1276.c: 1069: SwTimerStop(RadioConfiguration.watchdogTimerId);
  8974                           
  8975                           ;incstack = 0
  8976  009D3C  0101               	movlb	1	; () banked
  8977  009D3E  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
  8978  009D40  EC61  F04F         	call	_SwTimerStop
  8979                           
  8980                           ;radio_driver_SX1276.c: 1070: RADIO_RegisterWrite(0x12, 1<<(7));
  8981  009D44  0E80               	movlw	128
  8982  009D46  0100               	movlb	0	; () banked
  8983  009D48  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  8984  009D4A  0E12               	movlw	18
  8985  009D4C  EC36  F050         	call	_RADIO_RegisterWrite
  8986                           
  8987                           ;radio_driver_SX1276.c: 1072: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  8988  009D50  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  8989  009D54  0E00               	movlw	0
  8990  009D56  0100               	movlb	0	; () banked
  8991  009D58  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  8992  009D5A  0E00               	movlw	0
  8993  009D5C  EC70  F035         	call	_RADIO_WriteMode
  8994                           
  8995                           ;radio_driver_SX1276.c: 1073: RadioConfiguration.flags &= ~(1 << (1));
  8996  009D60  0101               	movlb	1	; () banked
  8997  009D62  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  8998                           
  8999                           ; BSR set to: 1
  9000                           ;radio_driver_SX1276.c: 1075: LORAWAN_RxTimeout ();
  9001  009D64  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
  9002  009D68  0012               	return		;funcret
  9003  009D6A                     __end_of_RADIO_RxTimeout:
  9004                           	opt stack 0
  9005                           tosu	equ	0xFFF
  9006                           tosh	equ	0xFFE
  9007                           tosl	equ	0xFFD
  9008                           pclath	equ	0xFFA
  9009                           tblptru	equ	0xFF8
  9010                           tblptrh	equ	0xFF7
  9011                           tblptrl	equ	0xFF6
  9012                           tablat	equ	0xFF5
  9013                           prodh	equ	0xFF4
  9014                           prodl	equ	0xFF3
  9015                           intcon	equ	0xFF2
  9016                           intcon2	equ	0xFF1
  9017                           intcon3	equ	0xFF0
  9018                           postinc0	equ	0xFEE
  9019                           wreg	equ	0xFE8
  9020                           postinc1	equ	0xFE6
  9021                           postdec1	equ	0xFE5
  9022                           plusw1	equ	0xFE3
  9023                           fsr1h	equ	0xFE2
  9024                           fsr1l	equ	0xFE1
  9025                           indf2	equ	0xFDF
  9026                           postinc2	equ	0xFDE
  9027                           postdec2	equ	0xFDD
  9028                           fsr2h	equ	0xFDA
  9029                           fsr2l	equ	0xFD9
  9030                           status	equ	0xFD8
  9031                           
  9032 ;; *************** function _RADIO_FHSSChangeChannel *****************
  9033 ;; Defined at:
  9034 ;;		line 1158 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;		None
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  irqFlags        1   29[BANK0 ] unsigned char 
  9039 ;; Return value:  Size  Location     Type
  9040 ;;                  1    wreg      void 
  9041 ;; Registers used:
  9042 ;;		wreg, status,2, status,0, cstack
  9043 ;; Tracked objects:
  9044 ;;		On entry : 0/0
  9045 ;;		On exit  : 0/0
  9046 ;;		Unchanged: 0/0
  9047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9051 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9052 ;;Total ram usage:        1 bytes
  9053 ;; Hardware stack levels used:    1
  9054 ;; Hardware stack levels required when called:   11
  9055 ;; This function calls:
  9056 ;;		_RADIO_RegisterRead
  9057 ;;		_RADIO_RegisterWrite
  9058 ;;		_RADIO_WriteFrequency
  9059 ;; This function is called by:
  9060 ;;		_RADIO_DIO1
  9061 ;;		_RADIO_DIO2
  9062 ;; This function uses a non-reentrant model
  9063 ;;
  9064                           
  9065                           	psect	text52
  9066  009708                     __ptext52:
  9067                           	opt stack 0
  9068  009708                     _RADIO_FHSSChangeChannel:
  9069                           	opt stack 17
  9070                           
  9071                           ;radio_driver_SX1276.c: 1160: uint8_t irqFlags;
  9072                           ;radio_driver_SX1276.c: 1161: irqFlags = RADIO_RegisterRead(0x12);
  9073                           
  9074                           ;incstack = 0
  9075  009708  0E12               	movlw	18
  9076  00970A  EC4D  F04F         	call	_RADIO_RegisterRead
  9077  00970E  0100               	movlb	0	; () banked
  9078  009710  6F7D               	movwf	RADIO_FHSSChangeChannel@irqFlags& (0+255),b
  9079                           
  9080                           ; BSR set to: 0
  9081                           ;radio_driver_SX1276.c: 1163: if ((0) != RadioConfiguration.frequencyHopPeriod)
  9082  009712  0101               	movlb	1	; () banked
  9083  009714  51AA               	movf	(_RadioConfiguration+30)& (0+255),w,b
  9084  009716  0101               	movlb	1	; () banked
  9085  009718  11AB               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
  9086  00971A  B4D8               	btfsc	status,2,c
  9087  00971C  D011               	goto	l590
  9088                           
  9089                           ; BSR set to: 1
  9090                           ;radio_driver_SX1276.c: 1164: {
  9091                           ;radio_driver_SX1276.c: 1165: if ((0) != RadioConfiguration.fhssNextFrequency)
  9092  00971E  0101               	movlb	1	; () banked
  9093  009720  51BB               	movf	(_RadioConfiguration+47)& (0+255),w,b
  9094  009722  0101               	movlb	1	; () banked
  9095  009724  11BC               	iorwf	(_RadioConfiguration+48)& (0+255),w,b
  9096  009726  B4D8               	btfsc	status,2,c
  9097  009728  D00B               	goto	l590
  9098                           
  9099                           ; BSR set to: 1
  9100                           ;radio_driver_SX1276.c: 1166: {
  9101                           ;radio_driver_SX1276.c: 1167: RADIO_WriteFrequency(RadioConfiguration.fhssNextFrequency(
      +                          ));
  9102  00972A  0E00               	movlw	0
  9103  00972C  0100               	movlb	0	; () banked
  9104  00972E  6F71               	movwf	RADIO_WriteFrequency@frequency& (0+255),b
  9105  009730  0E00               	movlw	0
  9106  009732  6F72               	movwf	(RADIO_WriteFrequency@frequency+1)& (0+255),b
  9107  009734  0E00               	movlw	0
  9108  009736  6F73               	movwf	(RADIO_WriteFrequency@frequency+2)& (0+255),b
  9109  009738  0E00               	movlw	0
  9110  00973A  6F74               	movwf	(RADIO_WriteFrequency@frequency+3)& (0+255),b
  9111  00973C  EC64  F03A         	call	_RADIO_WriteFrequency	;wreg free
  9112  009740                     l590:
  9113                           
  9114                           ;radio_driver_SX1276.c: 1168: }
  9115                           ;radio_driver_SX1276.c: 1169: }
  9116                           ;radio_driver_SX1276.c: 1172: RADIO_RegisterWrite(0x12, 1<<(1));
  9117  009740  0E02               	movlw	2
  9118  009742  0100               	movlb	0	; () banked
  9119  009744  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9120  009746  0E12               	movlw	18
  9121  009748  EC36  F050         	call	_RADIO_RegisterWrite
  9122  00974C  0012               	return		;funcret
  9123  00974E                     __end_of_RADIO_FHSSChangeChannel:
  9124                           	opt stack 0
  9125                           tosu	equ	0xFFF
  9126                           tosh	equ	0xFFE
  9127                           tosl	equ	0xFFD
  9128                           pclath	equ	0xFFA
  9129                           tblptru	equ	0xFF8
  9130                           tblptrh	equ	0xFF7
  9131                           tblptrl	equ	0xFF6
  9132                           tablat	equ	0xFF5
  9133                           prodh	equ	0xFF4
  9134                           prodl	equ	0xFF3
  9135                           intcon	equ	0xFF2
  9136                           intcon2	equ	0xFF1
  9137                           intcon3	equ	0xFF0
  9138                           postinc0	equ	0xFEE
  9139                           wreg	equ	0xFE8
  9140                           postinc1	equ	0xFE6
  9141                           postdec1	equ	0xFE5
  9142                           plusw1	equ	0xFE3
  9143                           fsr1h	equ	0xFE2
  9144                           fsr1l	equ	0xFE1
  9145                           indf2	equ	0xFDF
  9146                           postinc2	equ	0xFDE
  9147                           postdec2	equ	0xFDD
  9148                           fsr2h	equ	0xFDA
  9149                           fsr2l	equ	0xFD9
  9150                           status	equ	0xFD8
  9151                           
  9152 ;; *************** function _RADIO_DIO0 *****************
  9153 ;; Defined at:
  9154 ;;		line 1176 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;  opMode          1  125[BANK1 ] unsigned char 
  9159 ;;  dioMapping      1  124[BANK1 ] unsigned char 
  9160 ;; Return value:  Size  Location     Type
  9161 ;;                  1    wreg      void 
  9162 ;; Registers used:
  9163 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9164 ;; Tracked objects:
  9165 ;;		On entry : 0/0
  9166 ;;		On exit  : 0/0
  9167 ;;		Unchanged: 0/0
  9168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9170 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9171 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9172 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9173 ;;Total ram usage:        4 bytes
  9174 ;; Hardware stack levels used:    1
  9175 ;; Hardware stack levels required when called:   17
  9176 ;; This function calls:
  9177 ;;		_RADIO_FSKPacketSent
  9178 ;;		_RADIO_FSKPayloadReady
  9179 ;;		_RADIO_RegisterRead
  9180 ;;		_RADIO_RxDone
  9181 ;;		_RADIO_TxDone
  9182 ;;		_RADIO_UnhandledInterrupt
  9183 ;; This function is called by:
  9184 ;;		_LORAWAN_Mainloop
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           
  9188                           	psect	text53
  9189  00836C                     __ptext53:
  9190                           	opt stack 0
  9191  00836C                     _RADIO_DIO0:
  9192                           	opt stack 12
  9193                           
  9194                           ;radio_driver_SX1276.c: 1179: uint8_t dioMapping;
  9195                           ;radio_driver_SX1276.c: 1180: uint8_t opMode;
  9196                           ;radio_driver_SX1276.c: 1181: dioMapping = (RADIO_RegisterRead(0x40) & 0xC0) >> (6);
  9197                           
  9198                           ;incstack = 0
  9199  00836C  0E40               	movlw	64
  9200  00836E  EC4D  F04F         	call	_RADIO_RegisterRead
  9201  008372  0101               	movlb	1	; () banked
  9202  008374  6F7A               	movwf	??_RADIO_DIO0& (0+255),b
  9203  008376  0E06               	movlw	6
  9204  008378  0101               	movlb	1	; () banked
  9205  00837A  6F7B               	movwf	(??_RADIO_DIO0+1)& (0+255),b
  9206  00837C                     u20285:
  9207  00837C  0101               	movlb	1	; () banked
  9208  00837E  90D8               	bcf	status,0,c
  9209  008380  337A               	rrcf	??_RADIO_DIO0& (0+255),f,b
  9210  008382  0101               	movlb	1	; () banked
  9211  008384  2F7B               	decfsz	(??_RADIO_DIO0+1)& (0+255),f,b
  9212  008386  D7FA               	goto	u20285
  9213  008388  0101               	movlb	1	; () banked
  9214  00838A  517A               	movf	??_RADIO_DIO0& (0+255),w,b
  9215  00838C  0B03               	andlw	3
  9216  00838E  0101               	movlb	1	; () banked
  9217  008390  6F7C               	movwf	RADIO_DIO0@dioMapping& (0+255),b
  9218                           
  9219                           ;radio_driver_SX1276.c: 1182: opMode = RADIO_RegisterRead(0x01);
  9220  008392  0E01               	movlw	1
  9221  008394  EC4D  F04F         	call	_RADIO_RegisterRead
  9222  008398  0101               	movlb	1	; () banked
  9223  00839A  6F7D               	movwf	RADIO_DIO0@opMode& (0+255),b
  9224                           
  9225                           ; BSR set to: 1
  9226                           ;radio_driver_SX1276.c: 1184: if ((opMode & 0x80) != 0)
  9227  00839C  0101               	movlb	1	; () banked
  9228  00839E  BF7D               	btfsc	RADIO_DIO0@opMode& (0+255),7,b
  9229  0083A0  D00B               	goto	l16791
  9230  0083A2  D02E               	goto	l16807
  9231  0083A4                     l16783:
  9232                           
  9233                           ; BSR set to: 1
  9234                           ;radio_driver_SX1276.c: 1190: RADIO_RxDone();
  9235  0083A4  EC5D  F03C         	call	_RADIO_RxDone	;wreg free
  9236                           
  9237                           ;radio_driver_SX1276.c: 1191: break;
  9238  0083A8  0012               	return	
  9239  0083AA                     l16785:
  9240                           
  9241                           ;radio_driver_SX1276.c: 1193: RADIO_TxDone();
  9242  0083AA  EC2B  F034         	call	_RADIO_TxDone	;wreg free
  9243                           
  9244                           ;radio_driver_SX1276.c: 1194: break;
  9245  0083AE  0012               	return	
  9246  0083B0                     l16787:
  9247                           
  9248                           ;radio_driver_SX1276.c: 1196: RADIO_UnhandledInterrupt(MODULATION_LORA);
  9249  0083B0  0E01               	movlw	1
  9250  0083B2  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  9251                           
  9252                           ;radio_driver_SX1276.c: 1198: }
  9253                           
  9254                           ;radio_driver_SX1276.c: 1197: break;
  9255  0083B6  0012               	return	
  9256  0083B8                     l16791:
  9257  0083B8  0101               	movlb	1	; () banked
  9258  0083BA  517C               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9259                           
  9260                           ; Switch size 1, requested type "space"
  9261                           ; Number of cases is 2, Range of values is 0 to 1
  9262                           ; switch strategies available:
  9263                           ; Name         Instructions Cycles
  9264                           ; simple_byte            7     4 (average)
  9265                           ;	Chosen strategy is simple_byte
  9266  0083BC  0A00               	xorlw	0	; case 0
  9267  0083BE  B4D8               	btfsc	status,2,c
  9268  0083C0  D7F1               	goto	l16783
  9269  0083C2  0A01               	xorlw	1	; case 1
  9270  0083C4  B4D8               	btfsc	status,2,c
  9271  0083C6  D7F1               	goto	l16785
  9272  0083C8  D7F3               	goto	l16787
  9273  0083CA                     l16793:
  9274                           
  9275                           ; BSR set to: 1
  9276                           ;radio_driver_SX1276.c: 1207: opMode &= 0x07;
  9277  0083CA  0E07               	movlw	7
  9278  0083CC  0101               	movlb	1	; () banked
  9279  0083CE  177D               	andwf	RADIO_DIO0@opMode& (0+255),f,b
  9280                           
  9281                           ;radio_driver_SX1276.c: 1208: if (MODE_TX == opMode)
  9282  0083D0  0E03               	movlw	3
  9283  0083D2  0101               	movlb	1	; () banked
  9284  0083D4  197D               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9285  0083D6  A4D8               	btfss	status,2,c
  9286  0083D8  D003               	goto	l16797
  9287                           
  9288                           ; BSR set to: 1
  9289                           ;radio_driver_SX1276.c: 1209: {
  9290                           ;radio_driver_SX1276.c: 1211: RADIO_FSKPacketSent();
  9291  0083DA  EC82  F033         	call	_RADIO_FSKPacketSent	;wreg free
  9292                           
  9293                           ;radio_driver_SX1276.c: 1212: }
  9294  0083DE  0012               	return	
  9295  0083E0                     l16797:
  9296                           
  9297                           ;radio_driver_SX1276.c: 1213: else if (MODE_RXCONT == opMode)
  9298  0083E0  0E05               	movlw	5
  9299  0083E2  0101               	movlb	1	; () banked
  9300  0083E4  197D               	xorwf	RADIO_DIO0@opMode& (0+255),w,b
  9301  0083E6  A4D8               	btfss	status,2,c
  9302  0083E8  D003               	goto	l16801
  9303                           
  9304                           ; BSR set to: 1
  9305                           ;radio_driver_SX1276.c: 1214: {
  9306                           ;radio_driver_SX1276.c: 1216: RADIO_FSKPayloadReady();
  9307  0083EA  EC7D  F03E         	call	_RADIO_FSKPayloadReady	;wreg free
  9308                           
  9309                           ;radio_driver_SX1276.c: 1217: }
  9310  0083EE  0012               	return	
  9311  0083F0                     l16801:
  9312                           
  9313                           ;radio_driver_SX1276.c: 1218: else
  9314                           ;radio_driver_SX1276.c: 1219: {
  9315                           ;radio_driver_SX1276.c: 1220: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9316  0083F0  0E00               	movlw	0
  9317  0083F2  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  9318                           
  9319                           ;radio_driver_SX1276.c: 1221: }
  9320                           ;radio_driver_SX1276.c: 1222: break;
  9321  0083F6  0012               	return	
  9322  0083F8                     l16803:
  9323                           
  9324                           ;radio_driver_SX1276.c: 1224: RADIO_UnhandledInterrupt(MODULATION_FSK);
  9325  0083F8  0E00               	movlw	0
  9326  0083FA  ECD7  F04D         	call	_RADIO_UnhandledInterrupt
  9327                           
  9328                           ;radio_driver_SX1276.c: 1226: }
  9329                           
  9330                           ;radio_driver_SX1276.c: 1225: break;
  9331  0083FE  0012               	return	
  9332  008400                     l16807:
  9333  008400  0101               	movlb	1	; () banked
  9334  008402  517C               	movf	RADIO_DIO0@dioMapping& (0+255),w,b
  9335                           
  9336                           ; Switch size 1, requested type "space"
  9337                           ; Number of cases is 1, Range of values is 0 to 0
  9338                           ; switch strategies available:
  9339                           ; Name         Instructions Cycles
  9340                           ; simple_byte            4     3 (average)
  9341                           ;	Chosen strategy is simple_byte
  9342  008404  0A00               	xorlw	0	; case 0
  9343  008406  B4D8               	btfsc	status,2,c
  9344  008408  D7E0               	goto	l16793
  9345  00840A  D7F6               	goto	l16803
  9346  00840C                     __end_of_RADIO_DIO0:
  9347                           	opt stack 0
  9348                           tosu	equ	0xFFF
  9349                           tosh	equ	0xFFE
  9350                           tosl	equ	0xFFD
  9351                           pclath	equ	0xFFA
  9352                           tblptru	equ	0xFF8
  9353                           tblptrh	equ	0xFF7
  9354                           tblptrl	equ	0xFF6
  9355                           tablat	equ	0xFF5
  9356                           prodh	equ	0xFF4
  9357                           prodl	equ	0xFF3
  9358                           intcon	equ	0xFF2
  9359                           intcon2	equ	0xFF1
  9360                           intcon3	equ	0xFF0
  9361                           postinc0	equ	0xFEE
  9362                           wreg	equ	0xFE8
  9363                           postinc1	equ	0xFE6
  9364                           postdec1	equ	0xFE5
  9365                           plusw1	equ	0xFE3
  9366                           fsr1h	equ	0xFE2
  9367                           fsr1l	equ	0xFE1
  9368                           indf2	equ	0xFDF
  9369                           postinc2	equ	0xFDE
  9370                           postdec2	equ	0xFDD
  9371                           fsr2h	equ	0xFDA
  9372                           fsr2l	equ	0xFD9
  9373                           status	equ	0xFD8
  9374                           
  9375 ;; *************** function _RADIO_UnhandledInterrupt *****************
  9376 ;; Defined at:
  9377 ;;		line 1139 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9378 ;; Parameters:    Size  Location     Type
  9379 ;;  modulation      1    wreg     enum E7751
  9380 ;; Auto vars:     Size  Location     Type
  9381 ;;  modulation      1    8[BANK0 ] enum E7751
  9382 ;; Return value:  Size  Location     Type
  9383 ;;                  1    wreg      void 
  9384 ;; Registers used:
  9385 ;;		wreg, status,2, status,0, cstack
  9386 ;; Tracked objects:
  9387 ;;		On entry : 0/0
  9388 ;;		On exit  : 0/0
  9389 ;;		Unchanged: 0/0
  9390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9394 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9395 ;;Total ram usage:        1 bytes
  9396 ;; Hardware stack levels used:    1
  9397 ;; Hardware stack levels required when called:   10
  9398 ;; This function calls:
  9399 ;;		_RADIO_RegisterWrite
  9400 ;; This function is called by:
  9401 ;;		_RADIO_DIO0
  9402 ;;		_RADIO_DIO1
  9403 ;;		_RADIO_DIO2
  9404 ;;		_RADIO_DIO3
  9405 ;;		_RADIO_DIO4
  9406 ;;		_RADIO_DIO5
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           	psect	text54
  9411  009BAE                     __ptext54:
  9412                           	opt stack 0
  9413  009BAE                     _RADIO_UnhandledInterrupt:
  9414                           	opt stack 18
  9415                           
  9416                           ;incstack = 0
  9417                           ;RADIO_UnhandledInterrupt@modulation stored from wreg
  9418  009BAE  0100               	movlb	0	; () banked
  9419  009BB0  6F68               	movwf	RADIO_UnhandledInterrupt@modulation& (0+255),b
  9420                           
  9421                           ;radio_driver_SX1276.c: 1144: if (MODULATION_LORA == modulation)
  9422  009BB2  0100               	movlb	0	; () banked
  9423  009BB4  0568               	decf	RADIO_UnhandledInterrupt@modulation& (0+255),w,b
  9424  009BB6  A4D8               	btfss	status,2,c
  9425  009BB8  D007               	goto	l16387
  9426                           
  9427                           ; BSR set to: 0
  9428                           ;radio_driver_SX1276.c: 1145: {
  9429                           ;radio_driver_SX1276.c: 1146: RADIO_RegisterWrite(0x12, 0xFF);
  9430  009BBA  0EFF               	movlw	255
  9431  009BBC  0100               	movlb	0	; () banked
  9432  009BBE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9433  009BC0  0E12               	movlw	18
  9434  009BC2  EC36  F050         	call	_RADIO_RegisterWrite
  9435                           
  9436                           ;radio_driver_SX1276.c: 1147: }
  9437  009BC6  0012               	return	
  9438  009BC8                     l16387:
  9439                           
  9440                           ;radio_driver_SX1276.c: 1148: else
  9441                           ;radio_driver_SX1276.c: 1149: {
  9442                           ;radio_driver_SX1276.c: 1152: RADIO_RegisterWrite(0x3E, 0xFF);
  9443  009BC8  0EFF               	movlw	255
  9444  009BCA  0100               	movlb	0	; () banked
  9445  009BCC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9446  009BCE  0E3E               	movlw	62
  9447  009BD0  EC36  F050         	call	_RADIO_RegisterWrite
  9448                           
  9449                           ;radio_driver_SX1276.c: 1153: RADIO_RegisterWrite(0x3F, 0xFF);
  9450  009BD4  0EFF               	movlw	255
  9451  009BD6  0100               	movlb	0	; () banked
  9452  009BD8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9453  009BDA  0E3F               	movlw	63
  9454  009BDC  EC36  F050         	call	_RADIO_RegisterWrite
  9455  009BE0  0012               	return	
  9456  009BE2                     __end_of_RADIO_UnhandledInterrupt:
  9457                           	opt stack 0
  9458                           tosu	equ	0xFFF
  9459                           tosh	equ	0xFFE
  9460                           tosl	equ	0xFFD
  9461                           pclath	equ	0xFFA
  9462                           tblptru	equ	0xFF8
  9463                           tblptrh	equ	0xFF7
  9464                           tblptrl	equ	0xFF6
  9465                           tablat	equ	0xFF5
  9466                           prodh	equ	0xFF4
  9467                           prodl	equ	0xFF3
  9468                           intcon	equ	0xFF2
  9469                           intcon2	equ	0xFF1
  9470                           intcon3	equ	0xFF0
  9471                           postinc0	equ	0xFEE
  9472                           wreg	equ	0xFE8
  9473                           postinc1	equ	0xFE6
  9474                           postdec1	equ	0xFE5
  9475                           plusw1	equ	0xFE3
  9476                           fsr1h	equ	0xFE2
  9477                           fsr1l	equ	0xFE1
  9478                           indf2	equ	0xFDF
  9479                           postinc2	equ	0xFDE
  9480                           postdec2	equ	0xFDD
  9481                           fsr2h	equ	0xFDA
  9482                           fsr2l	equ	0xFD9
  9483                           status	equ	0xFD8
  9484                           
  9485 ;; *************** function _RADIO_TxDone *****************
  9486 ;; Defined at:
  9487 ;;		line 1078 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9488 ;; Parameters:    Size  Location     Type
  9489 ;;		None
  9490 ;; Auto vars:     Size  Location     Type
  9491 ;;  timeOnAir       4  139[BANK0 ] unsigned long 
  9492 ;; Return value:  Size  Location     Type
  9493 ;;                  1    wreg      void 
  9494 ;; Registers used:
  9495 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9496 ;; Tracked objects:
  9497 ;;		On entry : 0/0
  9498 ;;		On exit  : 0/0
  9499 ;;		Unchanged: 0/0
  9500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9502 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9503 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9504 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9505 ;;Total ram usage:       12 bytes
  9506 ;; Hardware stack levels used:    1
  9507 ;; Hardware stack levels required when called:   15
  9508 ;; This function calls:
  9509 ;;		_LORAWAN_TxDone
  9510 ;;		_RADIO_RegisterWrite
  9511 ;;		_RADIO_WriteMode
  9512 ;;		_SwTimerReadValue
  9513 ;;		_SwTimerStop
  9514 ;;		___lmul
  9515 ;; This function is called by:
  9516 ;;		_RADIO_DIO0
  9517 ;; This function uses a non-reentrant model
  9518 ;;
  9519                           
  9520                           	psect	text55
  9521  006856                     __ptext55:
  9522                           	opt stack 0
  9523  006856                     _RADIO_TxDone:
  9524                           	opt stack 13
  9525                           
  9526                           ;radio_driver_SX1276.c: 1080: uint32_t timeOnAir;
  9527                           ;radio_driver_SX1276.c: 1082: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9528                           
  9529                           ;incstack = 0
  9530  006856  0101               	movlb	1	; () banked
  9531  006858  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9532  00685A  EC61  F04F         	call	_SwTimerStop
  9533                           
  9534                           ;radio_driver_SX1276.c: 1083: RADIO_RegisterWrite(0x12, 1<<(3));
  9535  00685E  0E08               	movlw	8
  9536  006860  0100               	movlb	0	; () banked
  9537  006862  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9538  006864  0E12               	movlw	18
  9539  006866  EC36  F050         	call	_RADIO_RegisterWrite
  9540                           
  9541                           ;radio_driver_SX1276.c: 1084: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9542  00686A  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9543  00686E  0E00               	movlw	0
  9544  006870  0100               	movlb	0	; () banked
  9545  006872  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9546  006874  0E00               	movlw	0
  9547  006876  EC70  F035         	call	_RADIO_WriteMode
  9548                           
  9549                           ;radio_driver_SX1276.c: 1085: RadioConfiguration.flags &= ~(1 << (0));
  9550  00687A  0101               	movlb	1	; () banked
  9551  00687C  91AF               	bcf	(_RadioConfiguration+35)& (0+255),0,b
  9552                           
  9553                           ; BSR set to: 1
  9554                           ;radio_driver_SX1276.c: 1086: if ((RadioConfiguration.flags & (1 << (4))) == 0)
  9555  00687E  0101               	movlb	1	; () banked
  9556  006880  B9AF               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
  9557  006882  0012               	return	
  9558                           
  9559                           ; BSR set to: 1
  9560                           ;radio_driver_SX1276.c: 1087: {
  9561                           ;radio_driver_SX1276.c: 1088: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
  9562  006884  0101               	movlb	1	; () banked
  9563  006886  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9564  006888  EC96  F04C         	call	_SwTimerReadValue
  9565  00688C  0100               	movlb	0	; () banked
  9566  00688E  5198               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
  9567  006890  E10B               	bnz	u19480
  9568  006892  0E1F               	movlw	31
  9569  006894  0100               	movlb	0	; () banked
  9570  006896  5D95               	subwf	?_SwTimerReadValue& (0+255),w,b
  9571  006898  0EAC               	movlw	172
  9572  00689A  0100               	movlb	0	; () banked
  9573  00689C  5996               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
  9574  00689E  0EDF               	movlw	223
  9575  0068A0  0100               	movlb	0	; () banked
  9576  0068A2  5997               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
  9577  0068A4  A0D8               	btfss	status,0,c
  9578  0068A6  D023               	goto	l16353
  9579  0068A8                     u19480:
  9580                           
  9581                           ; BSR set to: 0
  9582  0068A8  0101               	movlb	1	; () banked
  9583  0068AA  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9584  0068AC  EC96  F04C         	call	_SwTimerReadValue
  9585  0068B0  0E0D               	movlw	13
  9586  0068B2  D007               	goto	u19490
  9587  0068B4                     u19495:
  9588  0068B4  0100               	movlb	0	; () banked
  9589  0068B6  90D8               	bcf	status,0,c
  9590  0068B8  3398               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
  9591  0068BA  3397               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
  9592  0068BC  0100               	movlb	0	; () banked
  9593  0068BE  3396               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
  9594  0068C0  3395               	rrcf	?_SwTimerReadValue& (0+255),f,b
  9595  0068C2                     u19490:
  9596  0068C2  2EE8               	decfsz	wreg,f,c
  9597  0068C4  D7F7               	goto	u19495
  9598  0068C6  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
  9599  0068CA  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9600  0068CE  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9601  0068D2  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9602  0068D6  0E7D               	movlw	125
  9603  0068D8  0100               	movlb	0	; () banked
  9604  0068DA  6FA2               	movwf	___lmul@multiplicand& (0+255),b
  9605  0068DC  0E00               	movlw	0
  9606  0068DE  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9607  0068E0  0E00               	movlw	0
  9608  0068E2  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9609  0068E4  0E00               	movlw	0
  9610  0068E6  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9611  0068E8  ECBF  F046         	call	___lmul	;wreg free
  9612  0068EC  D022               	goto	L4
  9613  0068EE                     l16353:
  9614  0068EE  0101               	movlb	1	; () banked
  9615  0068F0  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
  9616  0068F2  EC96  F04C         	call	_SwTimerReadValue
  9617  0068F6  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
  9618  0068FA  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
  9619  0068FE  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
  9620  006902  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
  9621  006906  0E7D               	movlw	125
  9622  006908  0100               	movlb	0	; () banked
  9623  00690A  6FA2               	movwf	___lmul@multiplicand& (0+255),b
  9624  00690C  0E00               	movlw	0
  9625  00690E  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
  9626  006910  0E00               	movlw	0
  9627  006912  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
  9628  006914  0E00               	movlw	0
  9629  006916  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
  9630  006918  ECBF  F046         	call	___lmul	;wreg free
  9631  00691C  0E0D               	movlw	13
  9632  00691E  D007               	goto	u19500
  9633  006920                     u19505:
  9634  006920  0100               	movlb	0	; () banked
  9635  006922  90D8               	bcf	status,0,c
  9636  006924  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
  9637  006926  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
  9638  006928  0100               	movlb	0	; () banked
  9639  00692A  339F               	rrcf	(?___lmul+1)& (0+255),f,b
  9640  00692C  339E               	rrcf	?___lmul& (0+255),f,b
  9641  00692E                     u19500:
  9642  00692E  2EE8               	decfsz	wreg,f,c
  9643  006930  D7F7               	goto	u19505
  9644  006932                     L4:
  9645  006932  C09E  F0EF         	movff	?___lmul,_RADIO_TxDone$1207
  9646  006936  C09F  F0F0         	movff	?___lmul+1,_RADIO_TxDone$1207+1
  9647  00693A  C0A0  F0F1         	movff	?___lmul+2,_RADIO_TxDone$1207+2
  9648  00693E  C0A1  F0F2         	movff	?___lmul+3,_RADIO_TxDone$1207+3
  9649                           
  9650                           ; BSR set to: 0
  9651  006942  C0EF  F0E7         	movff	_RADIO_TxDone$1207,??_RADIO_TxDone
  9652  006946  C0F0  F0E8         	movff	_RADIO_TxDone$1207+1,??_RADIO_TxDone+1
  9653  00694A  C0F1  F0E9         	movff	_RADIO_TxDone$1207+2,??_RADIO_TxDone+2
  9654  00694E  C0F2  F0EA         	movff	_RADIO_TxDone$1207+3,??_RADIO_TxDone+3
  9655  006952  0100               	movlb	0	; () banked
  9656  006954  1FE7               	comf	??_RADIO_TxDone& (0+255),f,b
  9657  006956  1FE8               	comf	(??_RADIO_TxDone+1)& (0+255),f,b
  9658  006958  1FE9               	comf	(??_RADIO_TxDone+2)& (0+255),f,b
  9659  00695A  1FEA               	comf	(??_RADIO_TxDone+3)& (0+255),f,b
  9660  00695C  2BE7               	incf	??_RADIO_TxDone& (0+255),f,b
  9661  00695E  0E00               	movlw	0
  9662  006960  23E8               	addwfc	(??_RADIO_TxDone+1)& (0+255),f,b
  9663  006962  23E9               	addwfc	(??_RADIO_TxDone+2)& (0+255),f,b
  9664  006964  23EA               	addwfc	(??_RADIO_TxDone+3)& (0+255),f,b
  9665  006966  0E20               	movlw	32
  9666  006968  0100               	movlb	0	; () banked
  9667  00696A  25E7               	addwf	??_RADIO_TxDone& (0+255),w,b
  9668  00696C  0100               	movlb	0	; () banked
  9669  00696E  6FEB               	movwf	RADIO_TxDone@timeOnAir& (0+255),b
  9670  006970  0E4E               	movlw	78
  9671  006972  0100               	movlb	0	; () banked
  9672  006974  21E8               	addwfc	(??_RADIO_TxDone+1)& (0+255),w,b
  9673  006976  0100               	movlb	0	; () banked
  9674  006978  6FEC               	movwf	(RADIO_TxDone@timeOnAir+1)& (0+255),b
  9675  00697A  0E00               	movlw	0
  9676  00697C  0100               	movlb	0	; () banked
  9677  00697E  21E9               	addwfc	(??_RADIO_TxDone+2)& (0+255),w,b
  9678  006980  0100               	movlb	0	; () banked
  9679  006982  6FED               	movwf	(RADIO_TxDone@timeOnAir+2)& (0+255),b
  9680  006984  0E00               	movlw	0
  9681  006986  0100               	movlb	0	; () banked
  9682  006988  21EA               	addwfc	(??_RADIO_TxDone+3)& (0+255),w,b
  9683  00698A  0100               	movlb	0	; () banked
  9684  00698C  6FEE               	movwf	(RADIO_TxDone@timeOnAir+3)& (0+255),b
  9685                           
  9686                           ; BSR set to: 0
  9687                           ;radio_driver_SX1276.c: 1089: LORAWAN_TxDone((uint16_t)timeOnAir);
  9688  00698E  C0EB  F0BF         	movff	RADIO_TxDone@timeOnAir,LORAWAN_TxDone@timeOnAir
  9689  006992  C0EC  F0C0         	movff	RADIO_TxDone@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
  9690  006996  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
  9691  00699A  0012               	return	
  9692  00699C                     __end_of_RADIO_TxDone:
  9693                           	opt stack 0
  9694                           tosu	equ	0xFFF
  9695                           tosh	equ	0xFFE
  9696                           tosl	equ	0xFFD
  9697                           pclath	equ	0xFFA
  9698                           tblptru	equ	0xFF8
  9699                           tblptrh	equ	0xFF7
  9700                           tblptrl	equ	0xFF6
  9701                           tablat	equ	0xFF5
  9702                           prodh	equ	0xFF4
  9703                           prodl	equ	0xFF3
  9704                           intcon	equ	0xFF2
  9705                           intcon2	equ	0xFF1
  9706                           intcon3	equ	0xFF0
  9707                           postinc0	equ	0xFEE
  9708                           wreg	equ	0xFE8
  9709                           postinc1	equ	0xFE6
  9710                           postdec1	equ	0xFE5
  9711                           plusw1	equ	0xFE3
  9712                           fsr1h	equ	0xFE2
  9713                           fsr1l	equ	0xFE1
  9714                           indf2	equ	0xFDF
  9715                           postinc2	equ	0xFDE
  9716                           postdec2	equ	0xFDD
  9717                           fsr2h	equ	0xFDA
  9718                           fsr2l	equ	0xFD9
  9719                           status	equ	0xFD8
  9720                           
  9721 ;; *************** function _RADIO_RxDone *****************
  9722 ;; Defined at:
  9723 ;;		line 961 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
  9724 ;; Parameters:    Size  Location     Type
  9725 ;;		None
  9726 ;; Auto vars:     Size  Location     Type
  9727 ;;  i               1  151[BANK0 ] unsigned char 
  9728 ;;  irqFlags        1  150[BANK0 ] unsigned char 
  9729 ;; Return value:  Size  Location     Type
  9730 ;;                  1    wreg      void 
  9731 ;; Registers used:
  9732 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9733 ;; Tracked objects:
  9734 ;;		On entry : 0/0
  9735 ;;		On exit  : 0/0
  9736 ;;		Unchanged: 0/0
  9737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9738 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9739 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9740 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9741 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9742 ;;Total ram usage:        2 bytes
  9743 ;; Hardware stack levels used:    1
  9744 ;; Hardware stack levels required when called:   16
  9745 ;; This function calls:
  9746 ;;		_HALSPICSAssert
  9747 ;;		_HALSPICSDeassert
  9748 ;;		_HALSPISend
  9749 ;;		_LORAWAN_RxDone
  9750 ;;		_RADIO_RegisterRead
  9751 ;;		_RADIO_RegisterWrite
  9752 ;;		_RADIO_WriteMode
  9753 ;;		_SwTimerStop
  9754 ;;		___abdiv
  9755 ;; This function is called by:
  9756 ;;		_RADIO_DIO0
  9757 ;; This function uses a non-reentrant model
  9758 ;;
  9759                           
  9760                           	psect	text56
  9761  0078BA                     __ptext56:
  9762                           	opt stack 0
  9763  0078BA                     _RADIO_RxDone:
  9764                           	opt stack 12
  9765                           
  9766                           ;radio_driver_SX1276.c: 963: uint8_t i, irqFlags;
  9767                           ;radio_driver_SX1276.c: 964: irqFlags = RADIO_RegisterRead(0x12);
  9768                           
  9769                           ;incstack = 0
  9770  0078BA  0E12               	movlw	18
  9771  0078BC  EC4D  F04F         	call	_RADIO_RegisterRead
  9772  0078C0  0100               	movlb	0	; () banked
  9773  0078C2  6FF6               	movwf	RADIO_RxDone@irqFlags& (0+255),b
  9774                           
  9775                           ;radio_driver_SX1276.c: 967: RADIO_RegisterWrite(0x12, (1<<(6)) | (1<<(5)) | (1<<(4)));
  9776  0078C4  0E70               	movlw	112
  9777  0078C6  0100               	movlb	0	; () banked
  9778  0078C8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9779  0078CA  0E12               	movlw	18
  9780  0078CC  EC36  F050         	call	_RADIO_RegisterWrite
  9781                           
  9782                           ;radio_driver_SX1276.c: 968: if (((1<<(6)) | (1<<(4))) == (irqFlags & ((1<<(6)) | (1<<(4
      +                          )))))
  9783  0078D0  0100               	movlb	0	; () banked
  9784  0078D2  51F6               	movf	RADIO_RxDone@irqFlags& (0+255),w,b
  9785  0078D4  0B50               	andlw	80
  9786  0078D6  0A50               	xorlw	80
  9787  0078D8  A4D8               	btfss	status,2,c
  9788  0078DA  0012               	return	
  9789                           
  9790                           ; BSR set to: 0
  9791                           ;radio_driver_SX1276.c: 969: {
  9792                           ;radio_driver_SX1276.c: 971: SwTimerStop(RadioConfiguration.watchdogTimerId);
  9793  0078DC  0101               	movlb	1	; () banked
  9794  0078DE  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
  9795  0078E0  EC61  F04F         	call	_SwTimerStop
  9796                           
  9797                           ;radio_driver_SX1276.c: 974: i = RADIO_RegisterRead(0x1C);
  9798  0078E4  0E1C               	movlw	28
  9799  0078E6  EC4D  F04F         	call	_RADIO_RegisterRead
  9800  0078EA  0100               	movlb	0	; () banked
  9801  0078EC  6FF7               	movwf	RADIO_RxDone@i& (0+255),b
  9802                           
  9803                           ; BSR set to: 0
  9804                           ;radio_driver_SX1276.c: 975: if ((0 == RadioConfiguration.crcOn) || ((0 == (irqFlags & (
      +                          1<<(5)))) && (0 != (i & (1<<(6))))))
  9805  0078EE  0101               	movlb	1	; () banked
  9806  0078F0  51A8               	movf	(_RadioConfiguration+28)& (0+255),w,b
  9807  0078F2  B4D8               	btfsc	status,2,c
  9808  0078F4  D006               	goto	l16255
  9809                           
  9810                           ; BSR set to: 1
  9811  0078F6  0100               	movlb	0	; () banked
  9812  0078F8  BBF6               	btfsc	RADIO_RxDone@irqFlags& (0+255),5,b
  9813  0078FA  D041               	goto	l16277
  9814                           
  9815                           ; BSR set to: 0
  9816  0078FC  0100               	movlb	0	; () banked
  9817  0078FE  ADF7               	btfss	RADIO_RxDone@i& (0+255),6,b
  9818  007900  D03E               	goto	l16277
  9819  007902                     l16255:
  9820                           
  9821                           ;radio_driver_SX1276.c: 976: {
  9822                           ;radio_driver_SX1276.c: 984: RadioConfiguration.dataBufferLen = RADIO_RegisterRead(0x13)
      +                          ;
  9823  007902  0E13               	movlw	19
  9824  007904  EC4D  F04F         	call	_RADIO_RegisterRead
  9825  007908  0101               	movlb	1	; () banked
  9826  00790A  6FB0               	movwf	(_RadioConfiguration+36)& (0+255),b
  9827                           
  9828                           ;radio_driver_SX1276.c: 985: RADIO_RegisterWrite(0x0D, 0x00);
  9829  00790C  0E00               	movlw	0
  9830  00790E  0100               	movlb	0	; () banked
  9831  007910  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
  9832  007912  0E0D               	movlw	13
  9833  007914  EC36  F050         	call	_RADIO_RegisterWrite
  9834                           
  9835                           ;radio_driver_SX1276.c: 987: HALSPICSAssert();
  9836  007918  EC31  F052         	call	_HALSPICSAssert	;wreg free
  9837                           
  9838                           ;radio_driver_SX1276.c: 988: HALSPISend(0x00);
  9839  00791C  0E00               	movlw	0
  9840  00791E  ECA0  F051         	call	_HALSPISend
  9841                           
  9842                           ;radio_driver_SX1276.c: 989: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
  9843  007922  0E00               	movlw	0
  9844  007924  0100               	movlb	0	; () banked
  9845  007926  6FF7               	movwf	RADIO_RxDone@i& (0+255),b
  9846  007928  D011               	goto	l16267
  9847  00792A                     l16263:
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;radio_driver_SX1276.c: 990: {
  9851                           ;radio_driver_SX1276.c: 991: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
  9852  00792A  0100               	movlb	0	; () banked
  9853  00792C  51F7               	movf	RADIO_RxDone@i& (0+255),w,b
  9854  00792E  0D01               	mullw	1
  9855  007930  50F3               	movf	prodl,w,c
  9856  007932  0101               	movlb	1	; () banked
  9857  007934  25B1               	addwf	(_RadioConfiguration+37)& (0+255),w,b
  9858  007936  6ED9               	movwf	fsr2l,c
  9859  007938  50F4               	movf	prodh,w,c
  9860  00793A  0101               	movlb	1	; () banked
  9861  00793C  21B2               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
  9862  00793E  6EDA               	movwf	fsr2h,c
  9863  007940  0EFF               	movlw	255
  9864  007942  ECA0  F051         	call	_HALSPISend
  9865  007946  6EDF               	movwf	indf2,c
  9866  007948  0100               	movlb	0	; () banked
  9867  00794A  2BF7               	incf	RADIO_RxDone@i& (0+255),f,b
  9868  00794C                     l16267:
  9869                           
  9870                           ; BSR set to: 0
  9871  00794C  0101               	movlb	1	; () banked
  9872  00794E  51B0               	movf	(_RadioConfiguration+36)& (0+255),w,b
  9873  007950  0100               	movlb	0	; () banked
  9874  007952  5DF7               	subwf	RADIO_RxDone@i& (0+255),w,b
  9875  007954  A0D8               	btfss	status,0,c
  9876  007956  D7E9               	goto	l16263
  9877                           
  9878                           ; BSR set to: 0
  9879                           ;radio_driver_SX1276.c: 992: }
  9880                           ;radio_driver_SX1276.c: 993: HALSPICSDeassert();
  9881                           
  9882                           ; BSR set to: 0
  9883  007958  EC2F  F052         	call	_HALSPICSDeassert	;wreg free
  9884                           
  9885                           ;radio_driver_SX1276.c: 994: RadioConfiguration.flags |= (1 << (2));
  9886  00795C  0101               	movlb	1	; () banked
  9887  00795E  85AF               	bsf	(_RadioConfiguration+35)& (0+255),2,b
  9888                           
  9889                           ; BSR set to: 1
  9890                           ;radio_driver_SX1276.c: 996: RadioConfiguration.packetSNR = RADIO_RegisterRead(0x19);
  9891  007960  0E19               	movlw	25
  9892  007962  EC4D  F04F         	call	_RADIO_RegisterRead
  9893  007966  0101               	movlb	1	; () banked
  9894  007968  6FBE               	movwf	(_RadioConfiguration+50)& (0+255),b
  9895                           
  9896                           ; BSR set to: 1
  9897                           ;radio_driver_SX1276.c: 997: RadioConfiguration.packetSNR /= (int8_t)4;
  9898  00796A  0E04               	movlw	4
  9899  00796C  0100               	movlb	0	; () banked
  9900  00796E  6F64               	movwf	___abdiv@divisor& (0+255),b
  9901  007970  0101               	movlb	1	; () banked
  9902  007972  51BE               	movf	(_RadioConfiguration+50)& (0+255),w,b
  9903  007974  ECF6  F042         	call	___abdiv
  9904  007978  0101               	movlb	1	; () banked
  9905  00797A  6FBE               	movwf	(_RadioConfiguration+50)& (0+255),b
  9906                           
  9907                           ;radio_driver_SX1276.c: 998: }
  9908  00797C  D002               	goto	l16279
  9909  00797E                     l16277:
  9910                           
  9911                           ;radio_driver_SX1276.c: 999: else
  9912                           ;radio_driver_SX1276.c: 1000: {
  9913                           ;radio_driver_SX1276.c: 1002: RadioConfiguration.flags |= (1 << (3));
  9914  00797E  0101               	movlb	1	; () banked
  9915  007980  87AF               	bsf	(_RadioConfiguration+35)& (0+255),3,b
  9916  007982                     l16279:
  9917                           
  9918                           ; BSR set to: 1
  9919                           ;radio_driver_SX1276.c: 1003: }
  9920                           ;radio_driver_SX1276.c: 1004: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
  9921  007982  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
  9922  007986  0E00               	movlw	0
  9923  007988  0100               	movlb	0	; () banked
  9924  00798A  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
  9925  00798C  0E00               	movlw	0
  9926  00798E  EC70  F035         	call	_RADIO_WriteMode
  9927                           
  9928                           ;radio_driver_SX1276.c: 1005: RadioConfiguration.flags &= ~(1 << (1));
  9929  007992  0101               	movlb	1	; () banked
  9930  007994  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
  9931                           
  9932                           ; BSR set to: 1
  9933                           ;radio_driver_SX1276.c: 1006: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
  9934  007996  C1B1  F0EE         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
  9935  00799A  C1B2  F0EF         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
  9936  00799E  C1B0  F0F0         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
  9937  0079A2  EC44  F000         	call	_LORAWAN_RxDone	;wreg free
  9938  0079A6  0012               	return	
  9939  0079A8                     __end_of_RADIO_RxDone:
  9940                           	opt stack 0
  9941                           tosu	equ	0xFFF
  9942                           tosh	equ	0xFFE
  9943                           tosl	equ	0xFFD
  9944                           pclath	equ	0xFFA
  9945                           tblptru	equ	0xFF8
  9946                           tblptrh	equ	0xFF7
  9947                           tblptrl	equ	0xFF6
  9948                           tablat	equ	0xFF5
  9949                           prodh	equ	0xFF4
  9950                           prodl	equ	0xFF3
  9951                           intcon	equ	0xFF2
  9952                           intcon2	equ	0xFF1
  9953                           intcon3	equ	0xFF0
  9954                           postinc0	equ	0xFEE
  9955                           wreg	equ	0xFE8
  9956                           postinc1	equ	0xFE6
  9957                           postdec1	equ	0xFE5
  9958                           plusw1	equ	0xFE3
  9959                           fsr1h	equ	0xFE2
  9960                           fsr1l	equ	0xFE1
  9961                           indf2	equ	0xFDF
  9962                           postinc2	equ	0xFDE
  9963                           postdec2	equ	0xFDD
  9964                           fsr2h	equ	0xFDA
  9965                           fsr2l	equ	0xFD9
  9966                           status	equ	0xFD8
  9967                           
  9968 ;; *************** function ___abdiv *****************
  9969 ;; Defined at:
  9970 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\abdiv.c"
  9971 ;; Parameters:    Size  Location     Type
  9972 ;;  dividend        1    wreg     char 
  9973 ;;  divisor         1    4[BANK0 ] char 
  9974 ;; Auto vars:     Size  Location     Type
  9975 ;;  dividend        1   10[BANK0 ] char 
  9976 ;;  quotient        1    9[BANK0 ] char 
  9977 ;;  sign            1    8[BANK0 ] unsigned char 
  9978 ;;  counter         1    7[BANK0 ] unsigned char 
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      char 
  9981 ;; Registers used:
  9982 ;;		wreg, status,2, status,0
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9988 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9989 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9990 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9991 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9992 ;;Total ram usage:        7 bytes
  9993 ;; Hardware stack levels used:    1
  9994 ;; Hardware stack levels required when called:    7
  9995 ;; This function calls:
  9996 ;;		Nothing
  9997 ;; This function is called by:
  9998 ;;		_RADIO_RxDone
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text57
 10003  0085EC                     __ptext57:
 10004                           	opt stack 0
 10005  0085EC                     ___abdiv:
 10006                           	opt stack 20
 10007                           
 10008                           ;incstack = 0
 10009                           ;___abdiv@dividend stored from wreg
 10010  0085EC  0100               	movlb	0	; () banked
 10011  0085EE  6F6A               	movwf	___abdiv@dividend& (0+255),b
 10012  0085F0  0E00               	movlw	0
 10013  0085F2  0100               	movlb	0	; () banked
 10014  0085F4  6F68               	movwf	___abdiv@sign& (0+255),b
 10015                           
 10016                           ; BSR set to: 0
 10017  0085F6  0100               	movlb	0	; () banked
 10018  0085F8  AF64               	btfss	___abdiv@divisor& (0+255),7,b
 10019  0085FA  D005               	goto	l16163
 10020                           
 10021                           ; BSR set to: 0
 10022  0085FC  0100               	movlb	0	; () banked
 10023  0085FE  6D64               	negf	___abdiv@divisor& (0+255),b
 10024                           
 10025                           ; BSR set to: 0
 10026  008600  0E01               	movlw	1
 10027  008602  0100               	movlb	0	; () banked
 10028  008604  6F68               	movwf	___abdiv@sign& (0+255),b
 10029  008606                     l16163:
 10030                           
 10031                           ; BSR set to: 0
 10032  008606  0100               	movlb	0	; () banked
 10033  008608  AF6A               	btfss	___abdiv@dividend& (0+255),7,b
 10034  00860A  D005               	goto	l16169
 10035                           
 10036                           ; BSR set to: 0
 10037  00860C  0100               	movlb	0	; () banked
 10038  00860E  6D6A               	negf	___abdiv@dividend& (0+255),b
 10039                           
 10040                           ; BSR set to: 0
 10041  008610  0E01               	movlw	1
 10042  008612  0100               	movlb	0	; () banked
 10043  008614  1B68               	xorwf	___abdiv@sign& (0+255),f,b
 10044  008616                     l16169:
 10045                           
 10046                           ; BSR set to: 0
 10047  008616  0E00               	movlw	0
 10048  008618  0100               	movlb	0	; () banked
 10049  00861A  6F69               	movwf	___abdiv@quotient& (0+255),b
 10050                           
 10051                           ; BSR set to: 0
 10052  00861C  0100               	movlb	0	; () banked
 10053  00861E  5164               	movf	___abdiv@divisor& (0+255),w,b
 10054  008620  0100               	movlb	0	; () banked
 10055  008622  B4D8               	btfsc	status,2,c
 10056  008624  D027               	goto	l16191
 10057                           
 10058                           ; BSR set to: 0
 10059  008626  0E01               	movlw	1
 10060  008628  0100               	movlb	0	; () banked
 10061  00862A  6F67               	movwf	___abdiv@counter& (0+255),b
 10062  00862C  D005               	goto	l16179
 10063  00862E                     l16175:
 10064                           
 10065                           ; BSR set to: 0
 10066  00862E  0100               	movlb	0	; () banked
 10067  008630  90D8               	bcf	status,0,c
 10068  008632  3764               	rlcf	___abdiv@divisor& (0+255),f,b
 10069                           
 10070                           ; BSR set to: 0
 10071  008634  0100               	movlb	0	; () banked
 10072  008636  2B67               	incf	___abdiv@counter& (0+255),f,b
 10073  008638                     l16179:
 10074                           
 10075                           ; BSR set to: 0
 10076  008638  C064  F065         	movff	___abdiv@divisor,??___abdiv
 10077  00863C  0100               	movlb	0	; () banked
 10078  00863E  6B66               	clrf	(??___abdiv+1)& (0+255),b
 10079  008640  BF65               	btfsc	??___abdiv& (0+255),7,b
 10080  008642  0766               	decf	(??___abdiv+1)& (0+255),f,b
 10081  008644  0100               	movlb	0	; () banked
 10082  008646  AF65               	btfss	??___abdiv& (0+255),7,b
 10083  008648  D7F2               	goto	l16175
 10084  00864A                     l16181:
 10085                           
 10086                           ; BSR set to: 0
 10087  00864A  0100               	movlb	0	; () banked
 10088  00864C  90D8               	bcf	status,0,c
 10089  00864E  3769               	rlcf	___abdiv@quotient& (0+255),f,b
 10090  008650  0100               	movlb	0	; () banked
 10091  008652  5164               	movf	___abdiv@divisor& (0+255),w,b
 10092  008654  0100               	movlb	0	; () banked
 10093  008656  5D6A               	subwf	___abdiv@dividend& (0+255),w,b
 10094  008658  A0D8               	btfss	status,0,c
 10095  00865A  D006               	goto	l16187
 10096                           
 10097                           ; BSR set to: 0
 10098  00865C  0100               	movlb	0	; () banked
 10099  00865E  5164               	movf	___abdiv@divisor& (0+255),w,b
 10100  008660  0100               	movlb	0	; () banked
 10101  008662  5F6A               	subwf	___abdiv@dividend& (0+255),f,b
 10102                           
 10103                           ; BSR set to: 0
 10104  008664  0100               	movlb	0	; () banked
 10105  008666  8169               	bsf	___abdiv@quotient& (0+255),0,b
 10106  008668                     l16187:
 10107                           
 10108                           ; BSR set to: 0
 10109  008668  0100               	movlb	0	; () banked
 10110  00866A  90D8               	bcf	status,0,c
 10111  00866C  3364               	rrcf	___abdiv@divisor& (0+255),f,b
 10112                           
 10113                           ; BSR set to: 0
 10114  00866E  0100               	movlb	0	; () banked
 10115  008670  2F67               	decfsz	___abdiv@counter& (0+255),f,b
 10116  008672  D7EB               	goto	l16181
 10117  008674                     l16191:
 10118                           
 10119                           ; BSR set to: 0
 10120  008674  0100               	movlb	0	; () banked
 10121  008676  5168               	movf	___abdiv@sign& (0+255),w,b
 10122  008678  0100               	movlb	0	; () banked
 10123  00867A  B4D8               	btfsc	status,2,c
 10124  00867C  D002               	goto	l16195
 10125                           
 10126                           ; BSR set to: 0
 10127  00867E  0100               	movlb	0	; () banked
 10128  008680  6D69               	negf	___abdiv@quotient& (0+255),b
 10129  008682                     l16195:
 10130                           
 10131                           ; BSR set to: 0
 10132  008682  0100               	movlb	0	; () banked
 10133  008684  5169               	movf	___abdiv@quotient& (0+255),w,b
 10134  008686  0012               	return	
 10135  008688                     __end_of___abdiv:
 10136                           	opt stack 0
 10137                           tosu	equ	0xFFF
 10138                           tosh	equ	0xFFE
 10139                           tosl	equ	0xFFD
 10140                           pclath	equ	0xFFA
 10141                           tblptru	equ	0xFF8
 10142                           tblptrh	equ	0xFF7
 10143                           tblptrl	equ	0xFF6
 10144                           tablat	equ	0xFF5
 10145                           prodh	equ	0xFF4
 10146                           prodl	equ	0xFF3
 10147                           intcon	equ	0xFF2
 10148                           intcon2	equ	0xFF1
 10149                           intcon3	equ	0xFF0
 10150                           postinc0	equ	0xFEE
 10151                           wreg	equ	0xFE8
 10152                           postinc1	equ	0xFE6
 10153                           postdec1	equ	0xFE5
 10154                           plusw1	equ	0xFE3
 10155                           fsr1h	equ	0xFE2
 10156                           fsr1l	equ	0xFE1
 10157                           indf2	equ	0xFDF
 10158                           postinc2	equ	0xFDE
 10159                           postdec2	equ	0xFDD
 10160                           fsr2h	equ	0xFDA
 10161                           fsr2l	equ	0xFD9
 10162                           status	equ	0xFD8
 10163                           
 10164 ;; *************** function _RADIO_FSKPayloadReady *****************
 10165 ;; Defined at:
 10166 ;;		line 1010 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 10167 ;; Parameters:    Size  Location     Type
 10168 ;;		None
 10169 ;; Auto vars:     Size  Location     Type
 10170 ;;  i               1  151[BANK0 ] unsigned char 
 10171 ;;  irqFlags        1  150[BANK0 ] unsigned char 
 10172 ;; Return value:  Size  Location     Type
 10173 ;;                  1    wreg      void 
 10174 ;; Registers used:
 10175 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+8, btemp+9, btemp
      ++10, btemp+11, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10176 ;; Tracked objects:
 10177 ;;		On entry : 0/0
 10178 ;;		On exit  : 0/0
 10179 ;;		Unchanged: 0/0
 10180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10181 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10182 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10183 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10184 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10185 ;;Total ram usage:        2 bytes
 10186 ;; Hardware stack levels used:    1
 10187 ;; Hardware stack levels required when called:   16
 10188 ;; This function calls:
 10189 ;;		_HALSPICSAssert
 10190 ;;		_HALSPICSDeassert
 10191 ;;		_HALSPISend
 10192 ;;		_LORAWAN_RxDone
 10193 ;;		_LORAWAN_RxTimeout
 10194 ;;		_RADIO_RegisterRead
 10195 ;;		_RADIO_WriteMode
 10196 ;;		_SwTimerStop
 10197 ;; This function is called by:
 10198 ;;		_RADIO_DIO0
 10199 ;; This function uses a non-reentrant model
 10200 ;;
 10201                           
 10202                           	psect	text58
 10203  007CFA                     __ptext58:
 10204                           	opt stack 0
 10205  007CFA                     _RADIO_FSKPayloadReady:
 10206                           	opt stack 12
 10207                           
 10208                           ;radio_driver_SX1276.c: 1012: uint8_t irqFlags;
 10209                           ;radio_driver_SX1276.c: 1013: uint8_t i;
 10210                           ;radio_driver_SX1276.c: 1015: irqFlags = RADIO_RegisterRead(0x3F);
 10211                           
 10212                           ; BSR set to: 0
 10213                           ;incstack = 0
 10214  007CFA  0E3F               	movlw	63
 10215  007CFC  EC4D  F04F         	call	_RADIO_RegisterRead
 10216  007D00  0100               	movlb	0	; () banked
 10217  007D02  6FF6               	movwf	RADIO_FSKPayloadReady@irqFlags& (0+255),b
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;radio_driver_SX1276.c: 1016: if ((1<<(2)) == (irqFlags & (1<<(2))))
 10221  007D04  0100               	movlb	0	; () banked
 10222  007D06  A5F6               	btfss	RADIO_FSKPayloadReady@irqFlags& (0+255),2,b
 10223  007D08  0012               	return	
 10224                           
 10225                           ; BSR set to: 0
 10226                           ;radio_driver_SX1276.c: 1017: {
 10227                           ;radio_driver_SX1276.c: 1022: SwTimerStop(RadioConfiguration.watchdogTimerId);
 10228  007D0A  0101               	movlb	1	; () banked
 10229  007D0C  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 10230  007D0E  EC61  F04F         	call	_SwTimerStop
 10231                           
 10232                           ;radio_driver_SX1276.c: 1023: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 10233  007D12  0101               	movlb	1	; () banked
 10234  007D14  51B4               	movf	(_RadioConfiguration+40)& (0+255),w,b
 10235  007D16  EC61  F04F         	call	_SwTimerStop
 10236                           
 10237                           ;radio_driver_SX1276.c: 1025: HALSPICSAssert();
 10238  007D1A  EC31  F052         	call	_HALSPICSAssert	;wreg free
 10239                           
 10240                           ;radio_driver_SX1276.c: 1026: HALSPISend(0x00);
 10241  007D1E  0E00               	movlw	0
 10242  007D20  ECA0  F051         	call	_HALSPISend
 10243                           
 10244                           ;radio_driver_SX1276.c: 1027: RadioConfiguration.dataBufferLen = HALSPISend(0xFF);
 10245  007D24  0EFF               	movlw	255
 10246  007D26  ECA0  F051         	call	_HALSPISend
 10247  007D2A  0101               	movlb	1	; () banked
 10248  007D2C  6FB0               	movwf	(_RadioConfiguration+36)& (0+255),b
 10249                           
 10250                           ; BSR set to: 1
 10251                           ;radio_driver_SX1276.c: 1028: for (i = 0; i < RadioConfiguration.dataBufferLen; i++)
 10252  007D2E  0E00               	movlw	0
 10253  007D30  0100               	movlb	0	; () banked
 10254  007D32  6FF7               	movwf	RADIO_FSKPayloadReady@i& (0+255),b
 10255  007D34  D011               	goto	l16303
 10256  007D36                     l16299:
 10257                           
 10258                           ; BSR set to: 0
 10259                           ;radio_driver_SX1276.c: 1029: {
 10260                           ;radio_driver_SX1276.c: 1030: RadioConfiguration.dataBuffer[i] = HALSPISend(0xFF);
 10261  007D36  0100               	movlb	0	; () banked
 10262  007D38  51F7               	movf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10263  007D3A  0D01               	mullw	1
 10264  007D3C  50F3               	movf	prodl,w,c
 10265  007D3E  0101               	movlb	1	; () banked
 10266  007D40  25B1               	addwf	(_RadioConfiguration+37)& (0+255),w,b
 10267  007D42  6ED9               	movwf	fsr2l,c
 10268  007D44  50F4               	movf	prodh,w,c
 10269  007D46  0101               	movlb	1	; () banked
 10270  007D48  21B2               	addwfc	(_RadioConfiguration+38)& (0+255),w,b
 10271  007D4A  6EDA               	movwf	fsr2h,c
 10272  007D4C  0EFF               	movlw	255
 10273  007D4E  ECA0  F051         	call	_HALSPISend
 10274  007D52  6EDF               	movwf	indf2,c
 10275  007D54  0100               	movlb	0	; () banked
 10276  007D56  2BF7               	incf	RADIO_FSKPayloadReady@i& (0+255),f,b
 10277  007D58                     l16303:
 10278                           
 10279                           ; BSR set to: 0
 10280  007D58  0101               	movlb	1	; () banked
 10281  007D5A  51B0               	movf	(_RadioConfiguration+36)& (0+255),w,b
 10282  007D5C  0100               	movlb	0	; () banked
 10283  007D5E  5DF7               	subwf	RADIO_FSKPayloadReady@i& (0+255),w,b
 10284  007D60  A0D8               	btfss	status,0,c
 10285  007D62  D7E9               	goto	l16299
 10286                           
 10287                           ; BSR set to: 0
 10288                           ;radio_driver_SX1276.c: 1031: }
 10289                           ;radio_driver_SX1276.c: 1032: HALSPICSDeassert();
 10290                           
 10291                           ; BSR set to: 0
 10292  007D64  EC2F  F052         	call	_HALSPICSDeassert	;wreg free
 10293                           
 10294                           ;radio_driver_SX1276.c: 1034: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 10295  007D68  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 10296  007D6C  0E00               	movlw	0
 10297  007D6E  0100               	movlb	0	; () banked
 10298  007D70  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 10299  007D72  0E00               	movlw	0
 10300  007D74  EC70  F035         	call	_RADIO_WriteMode
 10301                           
 10302                           ;radio_driver_SX1276.c: 1035: RadioConfiguration.flags &= ~(1 << (1));
 10303  007D78  0101               	movlb	1	; () banked
 10304  007D7A  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 10305                           
 10306                           ; BSR set to: 1
 10307                           ;radio_driver_SX1276.c: 1037: RadioConfiguration.packetSNR = -128;
 10308  007D7C  0E80               	movlw	128
 10309  007D7E  0101               	movlb	1	; () banked
 10310  007D80  6FBE               	movwf	(_RadioConfiguration+50)& (0+255),b
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;radio_driver_SX1276.c: 1039: if (1 == RadioConfiguration.crcOn)
 10314  007D82  0101               	movlb	1	; () banked
 10315  007D84  05A8               	decf	(_RadioConfiguration+28)& (0+255),w,b
 10316  007D86  A4D8               	btfss	status,2,c
 10317  007D88  D006               	goto	l16321
 10318                           
 10319                           ; BSR set to: 1
 10320                           ;radio_driver_SX1276.c: 1040: {
 10321                           ;radio_driver_SX1276.c: 1041: if ((1<<(1)) == (irqFlags & (1<<(1))))
 10322  007D8A  0100               	movlb	0	; () banked
 10323  007D8C  B3F6               	btfsc	RADIO_FSKPayloadReady@irqFlags& (0+255),1,b
 10324  007D8E  D003               	goto	l16321
 10325                           
 10326                           ;radio_driver_SX1276.c: 1045: else
 10327                           ;radio_driver_SX1276.c: 1046: {
 10328                           ;radio_driver_SX1276.c: 1047: RadioConfiguration.flags &= ~(1 << (2));
 10329                           
 10330                           ; BSR set to: 1
 10331                           
 10332                           ;radio_driver_SX1276.c: 1044: }
 10333                           
 10334                           ; BSR set to: 0
 10335                           ;radio_driver_SX1276.c: 1042: {
 10336                           ;radio_driver_SX1276.c: 1043: RadioConfiguration.flags |= (1 << (2));
 10337  007D90  0101               	movlb	1	; () banked
 10338  007D92  95AF               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 10339                           
 10340                           ; BSR set to: 1
 10341                           ;radio_driver_SX1276.c: 1048: }
 10342                           ;radio_driver_SX1276.c: 1049: }
 10343  007D94  D002               	goto	l16323
 10344  007D96                     l16321:
 10345                           
 10346                           ; BSR set to: 1
 10347                           ;radio_driver_SX1276.c: 1050: else
 10348                           ;radio_driver_SX1276.c: 1051: {
 10349                           ;radio_driver_SX1276.c: 1052: RadioConfiguration.flags |= (1 << (2));
 10350  007D96  0101               	movlb	1	; () banked
 10351  007D98  85AF               	bsf	(_RadioConfiguration+35)& (0+255),2,b
 10352  007D9A                     l16323:
 10353                           
 10354                           ; BSR set to: 1
 10355                           ;radio_driver_SX1276.c: 1053: }
 10356                           ;radio_driver_SX1276.c: 1055: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 10357  007D9A  0101               	movlb	1	; () banked
 10358  007D9C  A5AF               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 10359  007D9E  D009               	goto	l16327
 10360                           
 10361                           ; BSR set to: 1
 10362                           ;radio_driver_SX1276.c: 1056: {
 10363                           ;radio_driver_SX1276.c: 1057: LORAWAN_RxDone(RadioConfiguration.dataBuffer, RadioConfigu
      +                          ration.dataBufferLen);
 10364  007DA0  C1B1  F0EE         	movff	_RadioConfiguration+37,LORAWAN_RxDone@buffer
 10365  007DA4  C1B2  F0EF         	movff	_RadioConfiguration+38,LORAWAN_RxDone@buffer+1
 10366  007DA8  C1B0  F0F0         	movff	_RadioConfiguration+36,LORAWAN_RxDone@bufferLength
 10367  007DAC  EC44  F000         	call	_LORAWAN_RxDone	;wreg free
 10368                           
 10369                           ;radio_driver_SX1276.c: 1058: }
 10370  007DB0  0012               	return	
 10371  007DB2                     l16327:
 10372                           
 10373                           ;radio_driver_SX1276.c: 1059: else
 10374                           ;radio_driver_SX1276.c: 1060: {
 10375                           ;radio_driver_SX1276.c: 1061: LORAWAN_RxTimeout();
 10376  007DB2  EC42  F018         	call	_LORAWAN_RxTimeout	;wreg free
 10377  007DB6  0012               	return	
 10378  007DB8                     __end_of_RADIO_FSKPayloadReady:
 10379                           	opt stack 0
 10380                           tosu	equ	0xFFF
 10381                           tosh	equ	0xFFE
 10382                           tosl	equ	0xFFD
 10383                           pclath	equ	0xFFA
 10384                           tblptru	equ	0xFF8
 10385                           tblptrh	equ	0xFF7
 10386                           tblptrl	equ	0xFF6
 10387                           tablat	equ	0xFF5
 10388                           prodh	equ	0xFF4
 10389                           prodl	equ	0xFF3
 10390                           intcon	equ	0xFF2
 10391                           intcon2	equ	0xFF1
 10392                           intcon3	equ	0xFF0
 10393                           postinc0	equ	0xFEE
 10394                           wreg	equ	0xFE8
 10395                           postinc1	equ	0xFE6
 10396                           postdec1	equ	0xFE5
 10397                           plusw1	equ	0xFE3
 10398                           fsr1h	equ	0xFE2
 10399                           fsr1l	equ	0xFE1
 10400                           indf2	equ	0xFDF
 10401                           postinc2	equ	0xFDE
 10402                           postdec2	equ	0xFDD
 10403                           fsr2h	equ	0xFDA
 10404                           fsr2l	equ	0xFD9
 10405                           status	equ	0xFD8
 10406                           
 10407 ;; *************** function _LORAWAN_RxTimeout *****************
 10408 ;; Defined at:
 10409 ;;		line 464 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 10410 ;; Parameters:    Size  Location     Type
 10411 ;;		None
 10412 ;; Auto vars:     Size  Location     Type
 10413 ;;  minim           4  106[BANK0 ] unsigned long 
 10414 ;;  i               1  110[BANK0 ] unsigned char 
 10415 ;; Return value:  Size  Location     Type
 10416 ;;                  1    wreg      void 
 10417 ;; Registers used:
 10418 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+1, btemp+2, btemp+11, tosl, tblptrl, tblptrh, tbl
      +ptru, prodl, prodh, cstack
 10419 ;; Tracked objects:
 10420 ;;		On entry : 0/0
 10421 ;;		On exit  : 0/0
 10422 ;;		Unchanged: 0/0
 10423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10425 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10426 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10427 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10428 ;;Total ram usage:        9 bytes
 10429 ;; Hardware stack levels used:    1
 10430 ;; Hardware stack levels required when called:   15
 10431 ;; This function calls:
 10432 ;;		_LORAWAN_ReceiveWindow2Callback
 10433 ;;		_RADIO_Transmit
 10434 ;;		_ResetParametersForConfirmedTransmission
 10435 ;;		_ResetParametersForUnconfirmedTransmission
 10436 ;;		_RxDataDone
 10437 ;;		_SelectChannelForTransmission
 10438 ;;		_SetJoinFailState
 10439 ;;		_SwTimerSetTimeout
 10440 ;;		_SwTimerStart
 10441 ;;		___lldiv
 10442 ;; This function is called by:
 10443 ;;		_RADIO_FSKPayloadReady
 10444 ;;		_RADIO_RxTimeout
 10445 ;;		_RADIO_RxFSKTimeout
 10446 ;;		_RADIO_WatchdogTimeout
 10447 ;; This function uses a non-reentrant model
 10448 ;;
 10449                           
 10450                           	psect	text59
 10451  003084                     __ptext59:
 10452                           	opt stack 0
 10453  003084                     _LORAWAN_RxTimeout:
 10454                           	opt stack 12
 10455                           
 10456                           ;lorawan_eu.c: 466: uint8_t i;
 10457                           ;lorawan_eu.c: 467: uint32_t minim = (4294967295UL);
 10458                           
 10459                           ;incstack = 0
 10460  003084  0100               	movlb	0	; () banked
 10461  003086  69CA               	setf	LORAWAN_RxTimeout@minim& (0+255),b
 10462  003088  69CB               	setf	(LORAWAN_RxTimeout@minim+1)& (0+255),b
 10463  00308A  69CC               	setf	(LORAWAN_RxTimeout@minim+2)& (0+255),b
 10464  00308C  69CD               	setf	(LORAWAN_RxTimeout@minim+3)& (0+255),b
 10465                           
 10466                           ;lorawan_eu.c: 469: if (loRa.macStatus.macPause == 0)
 10467  00308E  0102               	movlb	2	; () banked
 10468  003090  B103               	btfsc	(_loRa+3)& (0+255),0,b
 10469  003092  D1C3               	goto	l16053
 10470                           
 10471                           ; BSR set to: 2
 10472                           ;lorawan_eu.c: 470: {
 10473                           ;lorawan_eu.c: 472: if ( loRa.macStatus.macState == RX1_OPEN )
 10474  003094  0102               	movlb	2	; () banked
 10475  003096  5102               	movf	(_loRa+2)& (0+255),w,b
 10476  003098  0B0F               	andlw	15
 10477  00309A  0A03               	xorlw	3
 10478  00309C  A4D8               	btfss	status,2,c
 10479  00309E  D014               	goto	l1047
 10480                           
 10481                           ; BSR set to: 2
 10482                           ;lorawan_eu.c: 473: {
 10483                           ;lorawan_eu.c: 474: if (CLASS_A == loRa.deviceClass)
 10484  0030A0  0102               	movlb	2	; () banked
 10485  0030A2  5112               	movf	(_loRa+18)& (0+255),w,b
 10486  0030A4  A4D8               	btfss	status,2,c
 10487  0030A6  D006               	goto	l15987
 10488                           
 10489                           ; BSR set to: 2
 10490                           ;lorawan_eu.c: 475: {
 10491                           ;lorawan_eu.c: 476: loRa.macStatus.macState = BETWEEN_RX1_RX2;
 10492  0030A8  0102               	movlb	2	; () banked
 10493  0030AA  5102               	movf	(_loRa+2)& (0+255),w,b
 10494  0030AC  0BF0               	andlw	-16
 10495  0030AE  0904               	iorlw	4
 10496  0030B0  6F02               	movwf	(_loRa+2)& (0+255),b
 10497                           
 10498                           ;lorawan_eu.c: 477: }
 10499  0030B2  0012               	return	
 10500  0030B4                     l15987:
 10501                           
 10502                           ; BSR set to: 2
 10503                           ;lorawan_eu.c: 478: else if (CLASS_C == loRa.deviceClass)
 10504  0030B4  0E02               	movlw	2
 10505  0030B6  0102               	movlb	2	; () banked
 10506  0030B8  1912               	xorwf	(_loRa+18)& (0+255),w,b
 10507  0030BA  A4D8               	btfss	status,2,c
 10508  0030BC  0012               	return	
 10509                           
 10510                           ; BSR set to: 2
 10511                           ;lorawan_eu.c: 479: {
 10512                           ;lorawan_eu.c: 480: LORAWAN_ReceiveWindow2Callback(0);
 10513  0030BE  0E00               	movlw	0
 10514  0030C0  6EE6               	movwf	postinc1,c
 10515  0030C2  ECD4  F03C         	call	_LORAWAN_ReceiveWindow2Callback	;wreg free
 10516                           
 10517                           ;lorawan_eu.c: 481: }
 10518                           ;lorawan_eu.c: 482: }
 10519  0030C6  0012               	return	
 10520  0030C8                     l1047:
 10521                           
 10522                           ; BSR set to: 2
 10523                           ;lorawan_eu.c: 483: else
 10524                           ;lorawan_eu.c: 484: {
 10525                           ;lorawan_eu.c: 486: if (loRa.lorawanMacStatus.joining == 1)
 10526  0030C8  0102               	movlb	2	; () banked
 10527  0030CA  A500               	btfss	_loRa& (0+255),2,b
 10528  0030CC  D003               	goto	l1052
 10529                           
 10530                           ; BSR set to: 2
 10531                           ;lorawan_eu.c: 487: {
 10532                           ;lorawan_eu.c: 488: SetJoinFailState();
 10533  0030CE  EC69  F04D         	call	_SetJoinFailState	;wreg free
 10534                           
 10535                           ;lorawan_eu.c: 489: }
 10536  0030D2  0012               	return	
 10537  0030D4                     l1052:
 10538                           
 10539                           ; BSR set to: 2
 10540                           ;lorawan_eu.c: 491: else if (loRa.macStatus.networkJoined == 1)
 10541  0030D4  0102               	movlb	2	; () banked
 10542  0030D6  A902               	btfss	(_loRa+2)& (0+255),4,b
 10543  0030D8  0012               	return	
 10544                           
 10545                           ; BSR set to: 2
 10546                           ;lorawan_eu.c: 492: {
 10547                           ;lorawan_eu.c: 493: if (loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1)
 10548  0030DA  0102               	movlb	2	; () banked
 10549  0030DC  A100               	btfss	_loRa& (0+255),0,b
 10550  0030DE  D064               	goto	l16009
 10551                           
 10552                           ; BSR set to: 2
 10553                           ;lorawan_eu.c: 494: {
 10554                           ;lorawan_eu.c: 495: if (loRa.counterRepetitionsConfirmedUplink <= loRa.maxRepetitionsCon
      +                          firmedUplink)
 10555  0030E0  0102               	movlb	2	; () banked
 10556  0030E2  51D9               	movf	(_loRa+217)& (0+255),w,b
 10557  0030E4  0102               	movlb	2	; () banked
 10558  0030E6  5DD7               	subwf	(_loRa+215)& (0+255),w,b
 10559  0030E8  A0D8               	btfss	status,0,c
 10560  0030EA  D03E               	goto	l16003
 10561                           
 10562                           ; BSR set to: 2
 10563                           ;lorawan_eu.c: 496: {
 10564                           ;lorawan_eu.c: 497: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10565  0030EC  0102               	movlb	2	; () banked
 10566  0030EE  5102               	movf	(_loRa+2)& (0+255),w,b
 10567  0030F0  0BF0               	andlw	-16
 10568  0030F2  0906               	iorlw	6
 10569  0030F4  6F02               	movwf	(_loRa+2)& (0+255),b
 10570                           
 10571                           ; BSR set to: 2
 10572                           ;lorawan_eu.c: 498: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protoc
      +                          olParameters.ackTimeout)) << (12)) / 125UL ));
 10573  0030F6  0102               	movlb	2	; () banked
 10574  0030F8  51A0               	movf	(_loRa+160)& (0+255),w,b
 10575  0030FA  0100               	movlb	0	; () banked
 10576  0030FC  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10577  0030FE  0102               	movlb	2	; () banked
 10578  003100  51A1               	movf	(_loRa+161)& (0+255),w,b
 10579  003102  0100               	movlb	0	; () banked
 10580  003104  6FC7               	movwf	(??_LORAWAN_RxTimeout+1)& (0+255),b
 10581  003106  0100               	movlb	0	; () banked
 10582  003108  6BC8               	clrf	(??_LORAWAN_RxTimeout+2)& (0+255),b
 10583  00310A  0100               	movlb	0	; () banked
 10584  00310C  6BC9               	clrf	(??_LORAWAN_RxTimeout+3)& (0+255),b
 10585  00310E  0E0C               	movlw	12
 10586  003110                     u18825:
 10587  003110  90D8               	bcf	status,0,c
 10588  003112  0100               	movlb	0	; () banked
 10589  003114  37C6               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10590  003116  37C7               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10591  003118  37C8               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10592  00311A  37C9               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10593  00311C  2EE8               	decfsz	wreg,f,c
 10594  00311E  D7F8               	goto	u18825
 10595  003120  C0C6  F064         	movff	??_LORAWAN_RxTimeout,___lldiv@dividend
 10596  003124  C0C7  F065         	movff	??_LORAWAN_RxTimeout+1,___lldiv@dividend+1
 10597  003128  C0C8  F066         	movff	??_LORAWAN_RxTimeout+2,___lldiv@dividend+2
 10598  00312C  C0C9  F067         	movff	??_LORAWAN_RxTimeout+3,___lldiv@dividend+3
 10599  003130  0E7D               	movlw	125
 10600  003132  0100               	movlb	0	; () banked
 10601  003134  6F68               	movwf	___lldiv@divisor& (0+255),b
 10602  003136  0E00               	movlw	0
 10603  003138  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 10604  00313A  0E00               	movlw	0
 10605  00313C  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 10606  00313E  0E00               	movlw	0
 10607  003140  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 10608  003142  EC99  F03F         	call	___lldiv	;wreg free
 10609  003146  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10610  00314A  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10611  00314E  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10612  003152  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10613  003156  0102               	movlb	2	; () banked
 10614  003158  51E8               	movf	(_loRa+232)& (0+255),w,b
 10615  00315A  EC70  F04A         	call	_SwTimerSetTimeout
 10616                           
 10617                           ;lorawan_eu.c: 499: SwTimerStart(loRa.ackTimeoutTimerId);
 10618  00315E  0102               	movlb	2	; () banked
 10619  003160  51E8               	movf	(_loRa+232)& (0+255),w,b
 10620  003162  EC06  F042         	call	_SwTimerStart
 10621                           
 10622                           ;lorawan_eu.c: 500: }
 10623  003166  0012               	return	
 10624  003168                     l16003:
 10625                           
 10626                           ;lorawan_eu.c: 501: else
 10627                           ;lorawan_eu.c: 502: {
 10628                           ;lorawan_eu.c: 503: ResetParametersForConfirmedTransmission ();
 10629  003168  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
 10630                           
 10631                           ;lorawan_eu.c: 504: if (rxPayload.RxAppData != (0))
 10632  00316C  0101               	movlb	1	; () banked
 10633  00316E  5186               	movf	_rxPayload& (0+255),w,b
 10634  003170  0101               	movlb	1	; () banked
 10635  003172  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 10636  003174  B4D8               	btfsc	status,2,c
 10637  003176  0012               	return	
 10638                           
 10639                           ; BSR set to: 1
 10640                           ;lorawan_eu.c: 505: {
 10641                           ;lorawan_eu.c: 506: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 10642  003178  0E00               	movlw	0
 10643  00317A  0100               	movlb	0	; () banked
 10644  00317C  6F67               	movwf	RxDataDone@pData& (0+255),b
 10645  00317E  0E00               	movlw	0
 10646  003180  0100               	movlb	0	; () banked
 10647  003182  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10648  003184  0E00               	movlw	0
 10649  003186  0100               	movlb	0	; () banked
 10650  003188  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10651  00318A  0E00               	movlw	0
 10652  00318C  0100               	movlb	0	; () banked
 10653  00318E  6F6A               	movwf	RxDataDone@status& (0+255),b
 10654  003190  D801               	call	u18848
 10655  003192  0012               	return	
 10656  003194                     u18848:
 10657  003194  0005               	push	
 10658  003196  6EFA               	movwf	pclath,c
 10659  003198  0101               	movlb	1	; () banked
 10660  00319A  5186               	movf	_rxPayload& (0+255),w,b
 10661  00319C  6EFD               	movwf	tosl,c
 10662  00319E  5187               	movf	(_rxPayload+1)& (0+255),w,b
 10663  0031A0  6EFE               	movwf	tosh,c
 10664  0031A2  6AFF               	clrf	tosu,c
 10665  0031A4  50FA               	movf	pclath,w,c
 10666  0031A6  0012               	return		;indir
 10667  0031A8                     l16009:
 10668                           
 10669                           ;lorawan_eu.c: 511: else
 10670                           ;lorawan_eu.c: 512: {
 10671                           ;lorawan_eu.c: 513: if (loRa.counterRepetitionsUnconfirmedUplink <= loRa.maxRepetitionsU
      +                          nconfirmedUplink)
 10672  0031A8  0102               	movlb	2	; () banked
 10673  0031AA  51D8               	movf	(_loRa+216)& (0+255),w,b
 10674  0031AC  0102               	movlb	2	; () banked
 10675  0031AE  5DD6               	subwf	(_loRa+214)& (0+255),w,b
 10676  0031B0  A0D8               	btfss	status,0,c
 10677  0031B2  D113               	goto	l16047
 10678                           
 10679                           ; BSR set to: 2
 10680                           ;lorawan_eu.c: 514: {
 10681                           ;lorawan_eu.c: 515: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 10682  0031B4  0102               	movlb	2	; () banked
 10683  0031B6  5102               	movf	(_loRa+2)& (0+255),w,b
 10684  0031B8  0BF0               	andlw	-16
 10685  0031BA  0906               	iorlw	6
 10686  0031BC  6F02               	movwf	(_loRa+2)& (0+255),b
 10687                           
 10688                           ; BSR set to: 2
 10689                           ;lorawan_eu.c: 516: if (SelectChannelForTransmission (1) == OK)
 10690  0031BE  0E01               	movlw	1
 10691  0031C0  EC84  F046         	call	_SelectChannelForTransmission
 10692  0031C4  0900               	iorlw	0
 10693  0031C6  A4D8               	btfss	status,2,c
 10694  0031C8  D038               	goto	l16027
 10695                           
 10696                           ;lorawan_eu.c: 517: {
 10697                           ;lorawan_eu.c: 519: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 10698  0031CA  0EF0               	movlw	low (_macBuffer+16)
 10699  0031CC  0100               	movlb	0	; () banked
 10700  0031CE  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 10701  0031D0  0E04               	movlw	high (_macBuffer+16)
 10702  0031D2  0100               	movlb	0	; () banked
 10703  0031D4  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 10704  0031D6  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
 10705  0031DA  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 10706  0031DE  0100               	movlb	0	; () banked
 10707  0031E0  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 10708  0031E2  0100               	movlb	0	; () banked
 10709  0031E4  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 10710  0031E6  A4D8               	btfss	status,2,c
 10711  0031E8  D008               	goto	l16021
 10712                           
 10713                           ; BSR set to: 0
 10714                           ;lorawan_eu.c: 520: {
 10715                           ;lorawan_eu.c: 521: loRa.counterRepetitionsUnconfirmedUplink ++ ;
 10716  0031EA  0102               	movlb	2	; () banked
 10717  0031EC  2BD8               	incf	(_loRa+216)& (0+255),f,b
 10718                           
 10719                           ; BSR set to: 2
 10720                           ;lorawan_eu.c: 522: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 10721  0031EE  0102               	movlb	2	; () banked
 10722  0031F0  5102               	movf	(_loRa+2)& (0+255),w,b
 10723  0031F2  0BF0               	andlw	-16
 10724  0031F4  0901               	iorlw	1
 10725  0031F6  6F02               	movwf	(_loRa+2)& (0+255),b
 10726                           
 10727                           ;lorawan_eu.c: 523: }
 10728  0031F8  0012               	return	
 10729  0031FA                     l16021:
 10730                           
 10731                           ;lorawan_eu.c: 524: else
 10732                           ;lorawan_eu.c: 526: {
 10733                           ;lorawan_eu.c: 527: ResetParametersForUnconfirmedTransmission ();
 10734  0031FA  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 10735                           
 10736                           ;lorawan_eu.c: 528: if (rxPayload.RxAppData != (0))
 10737  0031FE  0101               	movlb	1	; () banked
 10738  003200  5186               	movf	_rxPayload& (0+255),w,b
 10739  003202  0101               	movlb	1	; () banked
 10740  003204  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 10741  003206  B4D8               	btfsc	status,2,c
 10742  003208  0012               	return	
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;lorawan_eu.c: 529: {
 10746                           ;lorawan_eu.c: 530: rxPayload.RxAppData((0), 0, MAC_NOT_OK);
 10747  00320A  0E00               	movlw	0
 10748  00320C  0100               	movlb	0	; () banked
 10749  00320E  6F67               	movwf	RxDataDone@pData& (0+255),b
 10750  003210  0E00               	movlw	0
 10751  003212  0100               	movlb	0	; () banked
 10752  003214  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 10753  003216  0E00               	movlw	0
 10754  003218  0100               	movlb	0	; () banked
 10755  00321A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 10756  00321C  0E00               	movlw	0
 10757  00321E  0100               	movlb	0	; () banked
 10758  003220  6F6A               	movwf	RxDataDone@status& (0+255),b
 10759  003222  D801               	call	u18898
 10760  003224  0012               	return	
 10761  003226                     u18898:
 10762  003226  0005               	push	
 10763  003228  6EFA               	movwf	pclath,c
 10764  00322A  0101               	movlb	1	; () banked
 10765  00322C  5186               	movf	_rxPayload& (0+255),w,b
 10766  00322E  6EFD               	movwf	tosl,c
 10767  003230  5187               	movf	(_rxPayload+1)& (0+255),w,b
 10768  003232  6EFE               	movwf	tosh,c
 10769  003234  6AFF               	clrf	tosu,c
 10770  003236  50FA               	movf	pclath,w,c
 10771  003238  0012               	return		;indir
 10772  00323A                     l16027:
 10773                           
 10774                           ;lorawan_eu.c: 534: else
 10775                           ;lorawan_eu.c: 535: {
 10776                           ;lorawan_eu.c: 537: for (i = 0; i <= loRa.maxChannels; i ++)
 10777  00323A  0E00               	movlw	0
 10778  00323C  0100               	movlb	0	; () banked
 10779  00323E  6FCE               	movwf	LORAWAN_RxTimeout@i& (0+255),b
 10780  003240  D085               	goto	l16043
 10781  003242                     l16029:
 10782                           
 10783                           ;lorawan_eu.c: 538: {
 10784                           ;lorawan_eu.c: 539: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 10785  003242  0100               	movlb	0	; () banked
 10786  003244  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10787  003246  0D0E               	mullw	14
 10788  003248  0E04               	movlw	4
 10789  00324A  26F3               	addwf	prodl,f,c
 10790  00324C  0E00               	movlw	0
 10791  00324E  22F4               	addwfc	prodh,f,c
 10792  003250  0E00               	movlw	low _Channels
 10793  003252  24F3               	addwf	prodl,w,c
 10794  003254  6ED9               	movwf	fsr2l,c
 10795  003256  0E04               	movlw	high _Channels
 10796  003258  20F4               	addwfc	prodh,w,c
 10797  00325A  6EDA               	movwf	fsr2h,c
 10798  00325C  04DE               	decf	postinc2,w,c
 10799  00325E  A4D8               	btfss	status,2,c
 10800  003260  D073               	goto	l16041
 10801                           
 10802                           ; BSR set to: 0
 10803  003262  0100               	movlb	0	; () banked
 10804  003264  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10805  003266  0D0E               	mullw	14
 10806  003268  0E08               	movlw	8
 10807  00326A  26F3               	addwf	prodl,f,c
 10808  00326C  0E00               	movlw	0
 10809  00326E  22F4               	addwfc	prodh,f,c
 10810  003270  0E00               	movlw	low _Channels
 10811  003272  24F3               	addwf	prodl,w,c
 10812  003274  6ED9               	movwf	fsr2l,c
 10813  003276  0E04               	movlw	high _Channels
 10814  003278  20F4               	addwfc	prodh,w,c
 10815  00327A  6EDA               	movwf	fsr2h,c
 10816  00327C  50DE               	movf	postinc2,w,c
 10817  00327E  10DE               	iorwf	postinc2,w,c
 10818  003280  10DE               	iorwf	postinc2,w,c
 10819  003282  10DE               	iorwf	postinc2,w,c
 10820  003284  B4D8               	btfsc	status,2,c
 10821  003286  D060               	goto	l16041
 10822                           
 10823                           ; BSR set to: 0
 10824  003288  0100               	movlb	0	; () banked
 10825  00328A  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10826  00328C  0D0E               	mullw	14
 10827  00328E  0E08               	movlw	8
 10828  003290  26F3               	addwf	prodl,f,c
 10829  003292  0E00               	movlw	0
 10830  003294  22F4               	addwfc	prodh,f,c
 10831  003296  0E00               	movlw	low _Channels
 10832  003298  24F3               	addwf	prodl,w,c
 10833  00329A  6ED9               	movwf	fsr2l,c
 10834  00329C  0E04               	movlw	high _Channels
 10835  00329E  20F4               	addwfc	prodh,w,c
 10836  0032A0  6EDA               	movwf	fsr2h,c
 10837  0032A2  50DE               	movf	postinc2,w,c
 10838  0032A4  0100               	movlb	0	; () banked
 10839  0032A6  5DCA               	subwf	LORAWAN_RxTimeout@minim& (0+255),w,b
 10840  0032A8  50DE               	movf	postinc2,w,c
 10841  0032AA  0100               	movlb	0	; () banked
 10842  0032AC  59CB               	subwfb	(LORAWAN_RxTimeout@minim+1)& (0+255),w,b
 10843  0032AE  50DE               	movf	postinc2,w,c
 10844  0032B0  0100               	movlb	0	; () banked
 10845  0032B2  59CC               	subwfb	(LORAWAN_RxTimeout@minim+2)& (0+255),w,b
 10846  0032B4  50DE               	movf	postinc2,w,c
 10847  0032B6  0100               	movlb	0	; () banked
 10848  0032B8  59CD               	subwfb	(LORAWAN_RxTimeout@minim+3)& (0+255),w,b
 10849  0032BA  A0D8               	btfss	status,0,c
 10850  0032BC  D045               	goto	l16041
 10851                           
 10852                           ; BSR set to: 0
 10853  0032BE  0100               	movlb	0	; () banked
 10854  0032C0  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10855  0032C2  0D0E               	mullw	14
 10856  0032C4  0E05               	movlw	5
 10857  0032C6  26F3               	addwf	prodl,f,c
 10858  0032C8  0E00               	movlw	0
 10859  0032CA  22F4               	addwfc	prodh,f,c
 10860  0032CC  0E00               	movlw	low _Channels
 10861  0032CE  24F3               	addwf	prodl,w,c
 10862  0032D0  6ED9               	movwf	fsr2l,c
 10863  0032D2  0E04               	movlw	high _Channels
 10864  0032D4  20F4               	addwfc	prodh,w,c
 10865  0032D6  6EDA               	movwf	fsr2h,c
 10866  0032D8  0104               	movlb	4	; () banked
 10867  0032DA  50DF               	movf	223,w,c
 10868  0032DC  0B0F               	andlw	15
 10869  0032DE  0100               	movlb	0	; () banked
 10870  0032E0  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10871  0032E2  0100               	movlb	0	; () banked
 10872  0032E4  51C6               	movf	??_LORAWAN_RxTimeout& (0+255),w,b
 10873  0032E6  0102               	movlb	2	; () banked
 10874  0032E8  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 10875  0032EA  A0D8               	btfss	status,0,c
 10876  0032EC  D02D               	goto	l16041
 10877                           
 10878                           ; BSR set to: 2
 10879  0032EE  0100               	movlb	0	; () banked
 10880  0032F0  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10881  0032F2  0D0E               	mullw	14
 10882  0032F4  0E05               	movlw	5
 10883  0032F6  26F3               	addwf	prodl,f,c
 10884  0032F8  0E00               	movlw	0
 10885  0032FA  22F4               	addwfc	prodh,f,c
 10886  0032FC  0E00               	movlw	low _Channels
 10887  0032FE  24F3               	addwf	prodl,w,c
 10888  003300  6ED9               	movwf	fsr2l,c
 10889  003302  0E04               	movlw	high _Channels
 10890  003304  20F4               	addwfc	prodh,w,c
 10891  003306  6EDA               	movwf	fsr2h,c
 10892  003308  0104               	movlb	4	; () banked
 10893  00330A  38DF               	swapf	223,w,c
 10894  00330C  0B0F               	andlw	15
 10895  00330E  0100               	movlb	0	; () banked
 10896  003310  6FC6               	movwf	??_LORAWAN_RxTimeout& (0+255),b
 10897  003312  0102               	movlb	2	; () banked
 10898  003314  51DF               	movf	(_loRa+223)& (0+255),w,b
 10899  003316  0100               	movlb	0	; () banked
 10900  003318  5DC6               	subwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10901  00331A  A0D8               	btfss	status,0,c
 10902  00331C  D015               	goto	l16041
 10903                           
 10904                           ; BSR set to: 0
 10905                           ;lorawan_eu.c: 540: {
 10906                           ;lorawan_eu.c: 541: minim = Channels[i].channelTimer;
 10907  00331E  0100               	movlb	0	; () banked
 10908  003320  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10909  003322  0D0E               	mullw	14
 10910  003324  0E08               	movlw	8
 10911  003326  26F3               	addwf	prodl,f,c
 10912  003328  0E00               	movlw	0
 10913  00332A  22F4               	addwfc	prodh,f,c
 10914  00332C  0E00               	movlw	low _Channels
 10915  00332E  24F3               	addwf	prodl,w,c
 10916  003330  6ED9               	movwf	fsr2l,c
 10917  003332  0E04               	movlw	high _Channels
 10918  003334  20F4               	addwfc	prodh,w,c
 10919  003336  6EDA               	movwf	fsr2h,c
 10920  003338  CFDE F0CA          	movff	postinc2,LORAWAN_RxTimeout@minim
 10921  00333C  CFDE F0CB          	movff	postinc2,LORAWAN_RxTimeout@minim+1
 10922  003340  CFDE F0CC          	movff	postinc2,LORAWAN_RxTimeout@minim+2
 10923  003344  CFDE F0CD          	movff	postinc2,LORAWAN_RxTimeout@minim+3
 10924  003348                     l16041:
 10925  003348  0100               	movlb	0	; () banked
 10926  00334A  2BCE               	incf	LORAWAN_RxTimeout@i& (0+255),f,b
 10927  00334C                     l16043:
 10928                           
 10929                           ; BSR set to: 0
 10930  00334C  0100               	movlb	0	; () banked
 10931  00334E  51CE               	movf	LORAWAN_RxTimeout@i& (0+255),w,b
 10932  003350  0102               	movlb	2	; () banked
 10933  003352  5DED               	subwf	(_loRa+237)& (0+255),w,b
 10934  003354  B0D8               	btfsc	status,0,c
 10935  003356  D775               	goto	l16029
 10936                           
 10937                           ; BSR set to: 2
 10938                           ;lorawan_eu.c: 542: }
 10939                           ;lorawan_eu.c: 543: }
 10940                           ;lorawan_eu.c: 544: SwTimerSetTimeout (loRa.unconfirmedRetransmisionTimerId, ( (((uint32
      +                          _t)(minim + 50)) << (12)) / 125UL ) );
 10941                           
 10942                           ; BSR set to: 2
 10943  003358  C0CA  F0C6         	movff	LORAWAN_RxTimeout@minim,??_LORAWAN_RxTimeout
 10944  00335C  C0CB  F0C7         	movff	LORAWAN_RxTimeout@minim+1,??_LORAWAN_RxTimeout+1
 10945  003360  C0CC  F0C8         	movff	LORAWAN_RxTimeout@minim+2,??_LORAWAN_RxTimeout+2
 10946  003364  C0CD  F0C9         	movff	LORAWAN_RxTimeout@minim+3,??_LORAWAN_RxTimeout+3
 10947  003368  0E0C               	movlw	12
 10948  00336A                     u18965:
 10949  00336A  90D8               	bcf	status,0,c
 10950  00336C  0100               	movlb	0	; () banked
 10951  00336E  37C6               	rlcf	??_LORAWAN_RxTimeout& (0+255),f,b
 10952  003370  37C7               	rlcf	(??_LORAWAN_RxTimeout+1)& (0+255),f,b
 10953  003372  37C8               	rlcf	(??_LORAWAN_RxTimeout+2)& (0+255),f,b
 10954  003374  37C9               	rlcf	(??_LORAWAN_RxTimeout+3)& (0+255),f,b
 10955  003376  2EE8               	decfsz	wreg,f,c
 10956  003378  D7F8               	goto	u18965
 10957  00337A  0E00               	movlw	0
 10958  00337C  0100               	movlb	0	; () banked
 10959  00337E  25C6               	addwf	??_LORAWAN_RxTimeout& (0+255),w,b
 10960  003380  0100               	movlb	0	; () banked
 10961  003382  6F64               	movwf	___lldiv@dividend& (0+255),b
 10962  003384  0E20               	movlw	32
 10963  003386  0100               	movlb	0	; () banked
 10964  003388  21C7               	addwfc	(??_LORAWAN_RxTimeout+1)& (0+255),w,b
 10965  00338A  0100               	movlb	0	; () banked
 10966  00338C  6F65               	movwf	(___lldiv@dividend+1)& (0+255),b
 10967  00338E  0E03               	movlw	3
 10968  003390  0100               	movlb	0	; () banked
 10969  003392  21C8               	addwfc	(??_LORAWAN_RxTimeout+2)& (0+255),w,b
 10970  003394  0100               	movlb	0	; () banked
 10971  003396  6F66               	movwf	(___lldiv@dividend+2)& (0+255),b
 10972  003398  0E00               	movlw	0
 10973  00339A  0100               	movlb	0	; () banked
 10974  00339C  21C9               	addwfc	(??_LORAWAN_RxTimeout+3)& (0+255),w,b
 10975  00339E  0100               	movlb	0	; () banked
 10976  0033A0  6F67               	movwf	(___lldiv@dividend+3)& (0+255),b
 10977  0033A2  0E7D               	movlw	125
 10978  0033A4  0100               	movlb	0	; () banked
 10979  0033A6  6F68               	movwf	___lldiv@divisor& (0+255),b
 10980  0033A8  0E00               	movlw	0
 10981  0033AA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 10982  0033AC  0E00               	movlw	0
 10983  0033AE  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 10984  0033B0  0E00               	movlw	0
 10985  0033B2  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 10986  0033B4  EC99  F03F         	call	___lldiv	;wreg free
 10987  0033B8  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 10988  0033BC  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 10989  0033C0  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 10990  0033C4  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 10991  0033C8  0102               	movlb	2	; () banked
 10992  0033CA  51EA               	movf	(_loRa+234)& (0+255),w,b
 10993  0033CC  EC70  F04A         	call	_SwTimerSetTimeout
 10994                           
 10995                           ;lorawan_eu.c: 545: SwTimerStart (loRa.unconfirmedRetransmisionTimerId);
 10996  0033D0  0102               	movlb	2	; () banked
 10997  0033D2  51EA               	movf	(_loRa+234)& (0+255),w,b
 10998  0033D4  EC06  F042         	call	_SwTimerStart
 10999                           
 11000                           ;lorawan_eu.c: 546: }
 11001                           ;lorawan_eu.c: 547: }
 11002  0033D8  0012               	return	
 11003  0033DA                     l16047:
 11004                           
 11005                           ;lorawan_eu.c: 548: else
 11006                           ;lorawan_eu.c: 549: {
 11007                           ;lorawan_eu.c: 550: ResetParametersForUnconfirmedTransmission ();
 11008  0033DA  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 11009                           
 11010                           ;lorawan_eu.c: 551: if (rxPayload.RxAppData != (0))
 11011  0033DE  0101               	movlb	1	; () banked
 11012  0033E0  5186               	movf	_rxPayload& (0+255),w,b
 11013  0033E2  0101               	movlb	1	; () banked
 11014  0033E4  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 11015  0033E6  B4D8               	btfsc	status,2,c
 11016  0033E8  0012               	return	
 11017                           
 11018                           ; BSR set to: 1
 11019                           ;lorawan_eu.c: 552: {
 11020                           ;lorawan_eu.c: 553: rxPayload.RxAppData((0), 0, MAC_OK);
 11021  0033EA  0E00               	movlw	0
 11022  0033EC  0100               	movlb	0	; () banked
 11023  0033EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 11024  0033F0  0E00               	movlw	0
 11025  0033F2  0100               	movlb	0	; () banked
 11026  0033F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11027  0033F6  0E00               	movlw	0
 11028  0033F8  0100               	movlb	0	; () banked
 11029  0033FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11030  0033FC  0E01               	movlw	1
 11031  0033FE  0100               	movlb	0	; () banked
 11032  003400  6F6A               	movwf	RxDataDone@status& (0+255),b
 11033  003402  D801               	call	u18988
 11034  003404  0012               	return	
 11035  003406                     u18988:
 11036  003406  0005               	push	
 11037  003408  6EFA               	movwf	pclath,c
 11038  00340A  0101               	movlb	1	; () banked
 11039  00340C  5186               	movf	_rxPayload& (0+255),w,b
 11040  00340E  6EFD               	movwf	tosl,c
 11041  003410  5187               	movf	(_rxPayload+1)& (0+255),w,b
 11042  003412  6EFE               	movwf	tosh,c
 11043  003414  6AFF               	clrf	tosu,c
 11044  003416  50FA               	movf	pclath,w,c
 11045  003418  0012               	return		;indir
 11046  00341A                     l16053:
 11047                           
 11048                           ;lorawan_eu.c: 560: else
 11049                           ;lorawan_eu.c: 561: {
 11050                           ;lorawan_eu.c: 563: if (rxPayload.RxAppData != (0))
 11051  00341A  0101               	movlb	1	; () banked
 11052  00341C  5186               	movf	_rxPayload& (0+255),w,b
 11053  00341E  0101               	movlb	1	; () banked
 11054  003420  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 11055  003422  B4D8               	btfsc	status,2,c
 11056  003424  0012               	return	
 11057                           
 11058                           ; BSR set to: 1
 11059                           ;lorawan_eu.c: 564: {
 11060                           ;lorawan_eu.c: 565: rxPayload.RxAppData((0), 0, RADIO_NOT_OK);
 11061  003426  0E00               	movlw	0
 11062  003428  0100               	movlb	0	; () banked
 11063  00342A  6F67               	movwf	RxDataDone@pData& (0+255),b
 11064  00342C  0E00               	movlw	0
 11065  00342E  0100               	movlb	0	; () banked
 11066  003430  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11067  003432  0E00               	movlw	0
 11068  003434  0100               	movlb	0	; () banked
 11069  003436  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11070  003438  0E02               	movlw	2
 11071  00343A  0100               	movlb	0	; () banked
 11072  00343C  6F6A               	movwf	RxDataDone@status& (0+255),b
 11073  00343E  D801               	call	u19008
 11074  003440  0012               	return	
 11075  003442                     u19008:
 11076  003442  0005               	push	
 11077  003444  6EFA               	movwf	pclath,c
 11078  003446  0101               	movlb	1	; () banked
 11079  003448  5186               	movf	_rxPayload& (0+255),w,b
 11080  00344A  6EFD               	movwf	tosl,c
 11081  00344C  5187               	movf	(_rxPayload+1)& (0+255),w,b
 11082  00344E  6EFE               	movwf	tosh,c
 11083  003450  6AFF               	clrf	tosu,c
 11084  003452  50FA               	movf	pclath,w,c
 11085  003454  0012               	return		;indir
 11086  003456                     __end_of_LORAWAN_RxTimeout:
 11087                           	opt stack 0
 11088                           tosu	equ	0xFFF
 11089                           tosh	equ	0xFFE
 11090                           tosl	equ	0xFFD
 11091                           pclath	equ	0xFFA
 11092                           tblptru	equ	0xFF8
 11093                           tblptrh	equ	0xFF7
 11094                           tblptrl	equ	0xFF6
 11095                           tablat	equ	0xFF5
 11096                           prodh	equ	0xFF4
 11097                           prodl	equ	0xFF3
 11098                           intcon	equ	0xFF2
 11099                           intcon2	equ	0xFF1
 11100                           intcon3	equ	0xFF0
 11101                           postinc0	equ	0xFEE
 11102                           wreg	equ	0xFE8
 11103                           postinc1	equ	0xFE6
 11104                           postdec1	equ	0xFE5
 11105                           plusw1	equ	0xFE3
 11106                           fsr1h	equ	0xFE2
 11107                           fsr1l	equ	0xFE1
 11108                           indf2	equ	0xFDF
 11109                           postinc2	equ	0xFDE
 11110                           postdec2	equ	0xFDD
 11111                           fsr2h	equ	0xFDA
 11112                           fsr2l	equ	0xFD9
 11113                           status	equ	0xFD8
 11114                           
 11115 ;; *************** function _LORAWAN_RxDone *****************
 11116 ;; Defined at:
 11117 ;;		line 1121 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 11118 ;; Parameters:    Size  Location     Type
 11119 ;;  buffer          2  142[BANK0 ] PTR unsigned char 
 11120 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11121 ;;  bufferLength    1  144[BANK0 ] unsigned char 
 11122 ;; Auto vars:     Size  Location     Type
 11123 ;;  hdr             2  120[BANK1 ] PTR struct .
 11124 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11125 ;;  joinAccept      2  117[BANK1 ] PTR struct .
 11126 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 11127 ;;  computedMic     4  113[BANK1 ] unsigned long 
 11128 ;;  extractedMic    4  105[BANK1 ] unsigned long 
 11129 ;;  packet          2  111[BANK1 ] PTR unsigned char 
 11130 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 11131 ;;  frmPayloadLe    1  119[BANK1 ] unsigned char 
 11132 ;;  temp            1  110[BANK1 ] unsigned char 
 11133 ;;  bufferIndex     1  109[BANK1 ] unsigned char 
 11134 ;;  mhdr            1  104[BANK1 ] struct .
 11135 ;;  channelIndex    1  103[BANK1 ] unsigned char 
 11136 ;;  fPort           1  102[BANK1 ] unsigned char 
 11137 ;; Return value:  Size  Location     Type
 11138 ;;                  1    wreg      enum E8200
 11139 ;; Registers used:
 11140 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp+8, btemp+9, btemp+10, btemp+11, tos
      +l, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11141 ;; Tracked objects:
 11142 ;;		On entry : 0/0
 11143 ;;		On exit  : 0/0
 11144 ;;		Unchanged: 0/0
 11145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11146 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11147 ;;      Locals:         0       0      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11148 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11149 ;;      Totals:         0       8      20       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11150 ;;Total ram usage:       28 bytes
 11151 ;; Hardware stack levels used:    1
 11152 ;; Hardware stack levels required when called:   15
 11153 ;; This function calls:
 11154 ;;		_AESCmac
 11155 ;;		_AESEncodeLoRa
 11156 ;;		_AssembleEncryptionBlock
 11157 ;;		_CheckFlags
 11158 ;;		_CheckMcastFlags
 11159 ;;		_ComputeMic
 11160 ;;		_ComputeSessionKeys
 11161 ;;		_EncryptFRMPayload
 11162 ;;		_ExtractMic
 11163 ;;		_LORAWAN_EnterContinuousReceive
 11164 ;;		_LORAWAN_Send
 11165 ;;		_MacExecuteCommands
 11166 ;;		_RADIO_GetStatus
 11167 ;;		_RADIO_ReleaseData
 11168 ;;		_RxDataDone
 11169 ;;		_SearchAvailableChannel
 11170 ;;		_SetJoinFailState
 11171 ;;		_SetReceptionNotOkState
 11172 ;;		_StartReTxTimer
 11173 ;;		_SwTimerStop
 11174 ;;		_UpdateCfList
 11175 ;;		_UpdateDLSettings
 11176 ;;		_UpdateJoinSuccessState
 11177 ;;		_UpdateReceiveDelays
 11178 ;;		_UpdateRetransmissionAckTimeoutState
 11179 ;;		_memcpy
 11180 ;; This function is called by:
 11181 ;;		_RADIO_RxDone
 11182 ;;		_RADIO_FSKPayloadReady
 11183 ;; This function uses a non-reentrant model
 11184 ;;
 11185                           
 11186                           	psect	text60
 11187  000088                     __ptext60:
 11188                           	opt stack 0
 11189  000088                     _LORAWAN_RxDone:
 11190                           	opt stack 12
 11191                           
 11192                           ;lorawan.c: 1123: uint32_t computedMic, extractedMic;
 11193                           ;lorawan.c: 1124: Mhdr_t mhdr;
 11194                           ;lorawan.c: 1125: uint8_t fPort, bufferIndex, channelIndex;
 11195                           ;lorawan.c: 1126: uint8_t frmPayloadLength;
 11196                           ;lorawan.c: 1127: uint8_t *packet;
 11197                           ;lorawan.c: 1128: uint8_t temp;
 11198                           ;lorawan.c: 1130: RADIO_ReleaseData();
 11199                           
 11200                           ;incstack = 0
 11201  000088  EC24  F052         	call	_RADIO_ReleaseData	;wreg free
 11202                           
 11203                           ;lorawan.c: 1132: if (loRa.macStatus.macPause == 0)
 11204  00008C  0102               	movlb	2	; () banked
 11205  00008E  B103               	btfsc	(_loRa+3)& (0+255),0,b
 11206  000090  EF65  F007         	goto	l15969
 11207                           
 11208                           ; BSR set to: 2
 11209                           ;lorawan.c: 1133: {
 11210                           ;lorawan.c: 1134: mhdr.value = buffer[0];
 11211  000094  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 11212  000098  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 11213  00009C  50DF               	movf	indf2,w,c
 11214  00009E  0101               	movlb	1	; () banked
 11215  0000A0  6F68               	movwf	LORAWAN_RxDone@mhdr& (0+255),b
 11216                           
 11217                           ; BSR set to: 1
 11218                           ;lorawan.c: 1135: if ( (mhdr.bits.mType == FRAME_TYPE_JOIN_ACCEPT) && (loRa.activationPa
      +                          rameters.activationType == 0) )
 11219  0000A2  0101               	movlb	1	; () banked
 11220  0000A4  3968               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11221  0000A6  32E8               	rrcf	wreg,f,c
 11222  0000A8  0B07               	andlw	7
 11223  0000AA  06E8               	decf	wreg,f,c
 11224  0000AC  A4D8               	btfss	status,2,c
 11225  0000AE  D0F8               	goto	l15629
 11226                           
 11227                           ; BSR set to: 1
 11228  0000B0  0102               	movlb	2	; () banked
 11229  0000B2  511D               	movf	(_loRa+29)& (0+255),w,b
 11230  0000B4  A4D8               	btfss	status,2,c
 11231  0000B6  D0F4               	goto	l15629
 11232                           
 11233                           ; BSR set to: 2
 11234                           ;lorawan.c: 1136: {
 11235                           ;lorawan.c: 1137: temp = bufferLength - 1;
 11236  0000B8  0100               	movlb	0	; () banked
 11237  0000BA  05F0               	decf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11238  0000BC  D034               	goto	L5
 11239  0000BE                     l15579:
 11240                           
 11241                           ; BSR set to: 1
 11242                           ;lorawan.c: 1139: {
 11243                           ;lorawan.c: 1141: AESEncodeLoRa (&buffer[bufferLength - temp], loRa.activationParameters
      +                          .applicationKey);
 11244  0000BE  0101               	movlb	1	; () banked
 11245  0000C0  516E               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 11246  0000C2  0100               	movlb	0	; () banked
 11247  0000C4  6FF1               	movwf	??_LORAWAN_RxDone& (0+255),b
 11248  0000C6  6BF2               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 11249  0000C8  0100               	movlb	0	; () banked
 11250  0000CA  1FF1               	comf	??_LORAWAN_RxDone& (0+255),f,b
 11251  0000CC  1FF2               	comf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11252  0000CE  4BF1               	infsnz	??_LORAWAN_RxDone& (0+255),f,b
 11253  0000D0  2BF2               	incf	(??_LORAWAN_RxDone+1)& (0+255),f,b
 11254  0000D2  0100               	movlb	0	; () banked
 11255  0000D4  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11256  0000D6  0100               	movlb	0	; () banked
 11257  0000D8  6FF3               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 11258  0000DA  6BF4               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 11259  0000DC  0100               	movlb	0	; () banked
 11260  0000DE  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11261  0000E0  0100               	movlb	0	; () banked
 11262  0000E2  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11263  0000E4  0100               	movlb	0	; () banked
 11264  0000E6  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11265  0000E8  0100               	movlb	0	; () banked
 11266  0000EA  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11267  0000EC  0100               	movlb	0	; () banked
 11268  0000EE  51F3               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11269  0000F0  0100               	movlb	0	; () banked
 11270  0000F2  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 11271  0000F4  0100               	movlb	0	; () banked
 11272  0000F6  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 11273  0000F8  0100               	movlb	0	; () banked
 11274  0000FA  51F4               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11275  0000FC  0100               	movlb	0	; () banked
 11276  0000FE  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 11277  000100  0100               	movlb	0	; () banked
 11278  000102  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 11279  000104  0E42               	movlw	low (_loRa+66)
 11280  000106  0100               	movlb	0	; () banked
 11281  000108  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 11282  00010A  0E02               	movlw	high (_loRa+66)
 11283  00010C  0100               	movlb	0	; () banked
 11284  00010E  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 11285  000110  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 11286                           
 11287                           ;lorawan.c: 1142: if (temp > 16)
 11288  000114  0E10               	movlw	16
 11289  000116  0101               	movlb	1	; () banked
 11290  000118  656E               	cpfsgt	LORAWAN_RxDone@temp& (0+255),b
 11291  00011A  D004               	goto	l15585
 11292                           
 11293                           ; BSR set to: 1
 11294                           ;lorawan.c: 1143: {
 11295                           ;lorawan.c: 1144: temp -= 16;
 11296  00011C  0E10               	movlw	16
 11297  00011E  0101               	movlb	1	; () banked
 11298  000120  5F6E               	subwf	LORAWAN_RxDone@temp& (0+255),f,b
 11299                           
 11300                           ;lorawan.c: 1145: }
 11301  000122  D003               	goto	l2067
 11302  000124                     l15585:
 11303                           
 11304                           ; BSR set to: 1
 11305                           ;lorawan.c: 1146: else
 11306                           ;lorawan.c: 1147: {
 11307                           ;lorawan.c: 1148: temp = 0;
 11308  000124  0E00               	movlw	0
 11309  000126                     L5:
 11310  000126  0101               	movlb	1	; () banked
 11311  000128  6F6E               	movwf	LORAWAN_RxDone@temp& (0+255),b
 11312  00012A                     l2067:
 11313                           
 11314                           ; BSR set to: 1
 11315  00012A  0101               	movlb	1	; () banked
 11316  00012C  516E               	movf	LORAWAN_RxDone@temp& (0+255),w,b
 11317  00012E  0101               	movlb	1	; () banked
 11318  000130  A4D8               	btfss	status,2,c
 11319  000132  D7C5               	goto	l15579
 11320                           
 11321                           ; BSR set to: 1
 11322                           ;lorawan.c: 1149: }
 11323                           ;lorawan.c: 1150: }
 11324                           ;lorawan.c: 1153: computedMic = ComputeMic (loRa.activationParameters.applicationKey, bu
      +                          ffer, bufferLength - sizeof(extractedMic));
 11325                           
 11326                           ; BSR set to: 1
 11327  000134  0E42               	movlw	low (_loRa+66)
 11328  000136  0100               	movlb	0	; () banked
 11329  000138  6FDB               	movwf	ComputeMic@key& (0+255),b
 11330  00013A  0E02               	movlw	high (_loRa+66)
 11331  00013C  0100               	movlb	0	; () banked
 11332  00013E  6FDC               	movwf	(ComputeMic@key+1)& (0+255),b
 11333  000140  C0EE  F0DD         	movff	LORAWAN_RxDone@buffer,ComputeMic@buffer
 11334  000144  C0EF  F0DE         	movff	LORAWAN_RxDone@buffer+1,ComputeMic@buffer+1
 11335  000148  0100               	movlb	0	; () banked
 11336  00014A  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11337  00014C  0FFC               	addlw	252
 11338  00014E  0100               	movlb	0	; () banked
 11339  000150  6FDF               	movwf	ComputeMic@bufferLength& (0+255),b
 11340  000152  EC6B  F047         	call	_ComputeMic	;wreg free
 11341  000156  C0DB  F171         	movff	?_ComputeMic,LORAWAN_RxDone@computedMic
 11342  00015A  C0DC  F172         	movff	?_ComputeMic+1,LORAWAN_RxDone@computedMic+1
 11343  00015E  C0DD  F173         	movff	?_ComputeMic+2,LORAWAN_RxDone@computedMic+2
 11344  000162  C0DE  F174         	movff	?_ComputeMic+3,LORAWAN_RxDone@computedMic+3
 11345                           
 11346                           ;lorawan.c: 1154: extractedMic = ExtractMic (buffer, bufferLength);
 11347  000166  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11348  00016A  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11349  00016E  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11350  000172  EC46  F046         	call	_ExtractMic	;wreg free
 11351  000176  C06E  F169         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11352  00017A  C06F  F16A         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11353  00017E  C070  F16B         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11354  000182  C071  F16C         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11355                           
 11356                           ;lorawan.c: 1155: if (extractedMic != computedMic)
 11357  000186  0101               	movlb	1	; () banked
 11358  000188  5171               	movf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11359  00018A  0101               	movlb	1	; () banked
 11360  00018C  1969               	xorwf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11361  00018E  E110               	bnz	u18060
 11362  000190  0101               	movlb	1	; () banked
 11363  000192  5172               	movf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11364  000194  0101               	movlb	1	; () banked
 11365  000196  196A               	xorwf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11366  000198  E10B               	bnz	u18060
 11367  00019A  0101               	movlb	1	; () banked
 11368  00019C  5173               	movf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11369  00019E  0101               	movlb	1	; () banked
 11370  0001A0  196B               	xorwf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11371  0001A2  E106               	bnz	u18060
 11372  0001A4  0101               	movlb	1	; () banked
 11373  0001A6  5174               	movf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11374  0001A8  0101               	movlb	1	; () banked
 11375  0001AA  196C               	xorwf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11376  0001AC  B4D8               	btfsc	status,2,c
 11377  0001AE  D013               	goto	l15603
 11378  0001B0                     u18060:
 11379                           
 11380                           ; BSR set to: 1
 11381                           ;lorawan.c: 1156: {
 11382                           ;lorawan.c: 1157: if ((loRa.macStatus.macState == RX2_OPEN) || ((loRa.macStatus.macState
      +                           == RX1_OPEN) && (loRa.rx2DelayExpired)))
 11383  0001B0  0102               	movlb	2	; () banked
 11384  0001B2  5102               	movf	(_loRa+2)& (0+255),w,b
 11385  0001B4  0B0F               	andlw	15
 11386  0001B6  0A05               	xorlw	5
 11387  0001B8  B4D8               	btfsc	status,2,c
 11388  0001BA  D00A               	goto	l15599
 11389                           
 11390                           ; BSR set to: 2
 11391  0001BC  0102               	movlb	2	; () banked
 11392  0001BE  5102               	movf	(_loRa+2)& (0+255),w,b
 11393  0001C0  0B0F               	andlw	15
 11394  0001C2  0A03               	xorlw	3
 11395  0001C4  A4D8               	btfss	status,2,c
 11396  0001C6  0012               	return	
 11397                           
 11398                           ; BSR set to: 2
 11399  0001C8  0102               	movlb	2	; () banked
 11400  0001CA  51F1               	movf	(_loRa+241)& (0+255),w,b
 11401  0001CC  B4D8               	btfsc	status,2,c
 11402  0001CE  0012               	return	
 11403  0001D0                     l15599:
 11404                           
 11405                           ; BSR set to: 2
 11406                           ;lorawan.c: 1158: {
 11407                           ;lorawan.c: 1159: SetJoinFailState();
 11408  0001D0  EC69  F04D         	call	_SetJoinFailState	;wreg free
 11409                           
 11410                           ;lorawan.c: 1160: }
 11411                           ;lorawan.c: 1162: return INVALID_PARAMETER;
 11412                           ;	Return value of _LORAWAN_RxDone is never used
 11413  0001D4  0012               	return	
 11414  0001D6                     l15603:
 11415                           
 11416                           ;lorawan.c: 1163: }
 11417                           ;lorawan.c: 1166: if (loRa.macStatus.macState == RX1_OPEN)
 11418  0001D6  0102               	movlb	2	; () banked
 11419  0001D8  5102               	movf	(_loRa+2)& (0+255),w,b
 11420  0001DA  0B0F               	andlw	15
 11421  0001DC  0A03               	xorlw	3
 11422  0001DE  A4D8               	btfss	status,2,c
 11423  0001E0  D004               	goto	l15607
 11424                           
 11425                           ; BSR set to: 2
 11426                           ;lorawan.c: 1167: {
 11427                           ;lorawan.c: 1168: SwTimerStop (loRa.joinAccept2TimerId);
 11428  0001E2  0102               	movlb	2	; () banked
 11429  0001E4  51E3               	movf	(_loRa+227)& (0+255),w,b
 11430  0001E6  EC61  F04F         	call	_SwTimerStop
 11431  0001EA                     l15607:
 11432                           
 11433                           ;lorawan.c: 1169: }
 11434                           ;lorawan.c: 1171: JoinAccept_t *joinAccept;
 11435                           ;lorawan.c: 1172: joinAccept = (JoinAccept_t*)buffer;
 11436  0001EA  C0EE  F175         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@joinAccept
 11437  0001EE  C0EF  F176         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@joinAccept+1
 11438                           
 11439                           ;lorawan.c: 1174: loRa.activationParameters.deviceAddress.value = joinAccept->members.de
      +                          viceAddress.value;
 11440  0001F2  0101               	movlb	1	; () banked
 11441  0001F4  EE20 F007          	lfsr	2,7
 11442  0001F8  5175               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11443  0001FA  26D9               	addwf	fsr2l,f,c
 11444  0001FC  5176               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11445  0001FE  22DA               	addwfc	fsr2h,f,c
 11446  000200  CFDE F21E          	movff	postinc2,_loRa+30
 11447  000204  CFDE F21F          	movff	postinc2,_loRa+31
 11448  000208  CFDE F220          	movff	postinc2,_loRa+32
 11449  00020C  CFDE F221          	movff	postinc2,_loRa+33
 11450                           
 11451                           ; BSR set to: 1
 11452                           ;lorawan.c: 1176: UpdateReceiveDelays (joinAccept->members.rxDelay & 0x0F);
 11453  000210  0101               	movlb	1	; () banked
 11454  000212  EE20 F00C          	lfsr	2,12
 11455  000216  5175               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11456  000218  26D9               	addwf	fsr2l,f,c
 11457  00021A  5176               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11458  00021C  22DA               	addwfc	fsr2h,f,c
 11459  00021E  50DF               	movf	indf2,w,c
 11460  000220  0B0F               	andlw	15
 11461  000222  EC39  F04B         	call	_UpdateReceiveDelays
 11462                           
 11463                           ;lorawan.c: 1178: UpdateDLSettings(joinAccept->members.DLSettings.bits.rx2DataRate, join
      +                          Accept->members.DLSettings.bits.rx1DROffset);
 11464  000226  0101               	movlb	1	; () banked
 11465  000228  EE20 F00B          	lfsr	2,11
 11466  00022C  5175               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11467  00022E  26D9               	addwf	fsr2l,f,c
 11468  000230  5176               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11469  000232  22DA               	addwfc	fsr2h,f,c
 11470  000234  0101               	movlb	1	; () banked
 11471  000236  38DF               	swapf	223,w,c
 11472  000238  0B07               	andlw	7
 11473  00023A  0100               	movlb	0	; () banked
 11474  00023C  6F64               	movwf	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 11475  00023E  0101               	movlb	1	; () banked
 11476  000240  EE20 F00B          	lfsr	2,11
 11477  000244  5175               	movf	LORAWAN_RxDone@joinAccept& (0+255),w,b
 11478  000246  26D9               	addwf	fsr2l,f,c
 11479  000248  5176               	movf	(LORAWAN_RxDone@joinAccept+1)& (0+255),w,b
 11480  00024A  22DA               	addwfc	fsr2h,f,c
 11481  00024C  0101               	movlb	1	; () banked
 11482  00024E  50DF               	movf	223,w,c
 11483  000250  0B0F               	andlw	15
 11484  000252  EC65  F050         	call	_UpdateDLSettings
 11485                           
 11486                           ;lorawan.c: 1180: UpdateCfList (bufferLength, joinAccept);
 11487  000256  C175  F0AA         	movff	LORAWAN_RxDone@joinAccept,UpdateCfList@joinAccept
 11488  00025A  C176  F0AB         	movff	LORAWAN_RxDone@joinAccept+1,UpdateCfList@joinAccept+1
 11489  00025E  0100               	movlb	0	; () banked
 11490  000260  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11491  000262  EC6D  F023         	call	_UpdateCfList
 11492                           
 11493                           ;lorawan.c: 1182: ComputeSessionKeys (joinAccept);
 11494  000266  C175  F0A5         	movff	LORAWAN_RxDone@joinAccept,ComputeSessionKeys@joinAcceptBuffer
 11495  00026A  C176  F0A6         	movff	LORAWAN_RxDone@joinAccept+1,ComputeSessionKeys@joinAcceptBuffer+1
 11496  00026E  ECB0  F040         	call	_ComputeSessionKeys	;wreg free
 11497                           
 11498                           ;lorawan.c: 1184: UpdateJoinSuccessState(0);
 11499  000272  0E00               	movlw	0
 11500  000274  6EE6               	movwf	postinc1,c
 11501  000276  ECD8  F032         	call	_UpdateJoinSuccessState	;wreg free
 11502                           
 11503                           ;lorawan.c: 1186: loRa.fCntUp.value = 0;
 11504  00027A  0E00               	movlw	0
 11505  00027C  0102               	movlb	2	; () banked
 11506  00027E  6F06               	movwf	(_loRa+6)& (0+255),b
 11507  000280  0E00               	movlw	0
 11508  000282  6F07               	movwf	(_loRa+7)& (0+255),b
 11509  000284  0E00               	movlw	0
 11510  000286  6F08               	movwf	(_loRa+8)& (0+255),b
 11511  000288  0E00               	movlw	0
 11512  00028A  6F09               	movwf	(_loRa+9)& (0+255),b
 11513                           
 11514                           ; BSR set to: 2
 11515                           ;lorawan.c: 1187: loRa.fCntDown.value = 0;
 11516  00028C  0E00               	movlw	0
 11517  00028E  0102               	movlb	2	; () banked
 11518  000290  6F0A               	movwf	(_loRa+10)& (0+255),b
 11519  000292  0E00               	movlw	0
 11520  000294  6F0B               	movwf	(_loRa+11)& (0+255),b
 11521  000296  0E00               	movlw	0
 11522  000298  6F0C               	movwf	(_loRa+12)& (0+255),b
 11523  00029A  0E00               	movlw	0
 11524  00029C  6F0D               	movwf	(_loRa+13)& (0+255),b
 11525                           
 11526                           ; BSR set to: 2
 11527                           ;lorawan.c: 1190: }
 11528                           
 11529                           ; BSR set to: 2
 11530                           ;lorawan.c: 1189: return OK;
 11531                           ;	Return value of _LORAWAN_RxDone is never used
 11532  00029E  0012               	return	
 11533  0002A0                     l15629:
 11534                           
 11535                           ;lorawan.c: 1191: else if ( (mhdr.bits.mType == FRAME_TYPE_DATA_UNCONFIRMED_DOWN) || (mh
      +                          dr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN) )
 11536  0002A0  0101               	movlb	1	; () banked
 11537  0002A2  3968               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11538  0002A4  32E8               	rrcf	wreg,f,c
 11539  0002A6  0B07               	andlw	7
 11540  0002A8  0A03               	xorlw	3
 11541  0002AA  B4D8               	btfsc	status,2,c
 11542  0002AC  D008               	goto	l15633
 11543                           
 11544                           ; BSR set to: 1
 11545  0002AE  0101               	movlb	1	; () banked
 11546  0002B0  3968               	swapf	LORAWAN_RxDone@mhdr& (0+255),w,b
 11547  0002B2  32E8               	rrcf	wreg,f,c
 11548  0002B4  0B07               	andlw	7
 11549  0002B6  0A05               	xorlw	5
 11550  0002B8  A4D8               	btfss	status,2,c
 11551  0002BA  EF62  F007         	goto	l15965
 11552  0002BE                     l15633:
 11553                           
 11554                           ; BSR set to: 1
 11555                           ;lorawan.c: 1192: {
 11556                           ;lorawan.c: 1193: loRa.crtMacCmdIndex = 0;
 11557  0002BE  0E00               	movlw	0
 11558  0002C0  0102               	movlb	2	; () banked
 11559  0002C2  6FA7               	movwf	(_loRa+167)& (0+255),b
 11560                           
 11561                           ; BSR set to: 2
 11562                           ;lorawan.c: 1195: Hdr_t *hdr;
 11563                           ;lorawan.c: 1196: hdr=(Hdr_t*)buffer;
 11564  0002C4  C0EE  F178         	movff	LORAWAN_RxDone@buffer,LORAWAN_RxDone@hdr
 11565  0002C8  C0EF  F179         	movff	LORAWAN_RxDone@buffer+1,LORAWAN_RxDone@hdr+1
 11566                           
 11567                           ; BSR set to: 2
 11568                           ;lorawan.c: 1199: if ( (CLASS_C == loRa.deviceClass) && (hdr->members.devAddr.value == l
      +                          oRa.activationParameters.mcastDeviceAddress.value) && (1 == loRa.macStatus.mcastEnable) 
      +                          )
 11569  0002CC  0E02               	movlw	2
 11570  0002CE  0102               	movlb	2	; () banked
 11571  0002D0  1912               	xorwf	(_loRa+18)& (0+255),w,b
 11572  0002D2  A4D8               	btfss	status,2,c
 11573  0002D4  D263               	goto	l15759
 11574                           
 11575                           ; BSR set to: 2
 11576  0002D6  0101               	movlb	1	; () banked
 11577  0002D8  EE20 F001          	lfsr	2,1
 11578  0002DC  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11579  0002DE  26D9               	addwf	fsr2l,f,c
 11580  0002E0  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11581  0002E2  22DA               	addwfc	fsr2h,f,c
 11582  0002E4  0102               	movlb	2	; () banked
 11583  0002E6  5162               	movf	(_loRa+98)& (0+255),w,b
 11584  0002E8  18DE               	xorwf	postinc2,w,c
 11585  0002EA  E10C               	bnz	u18141
 11586  0002EC  0102               	movlb	2	; () banked
 11587  0002EE  5163               	movf	(_loRa+99)& (0+255),w,b
 11588  0002F0  18DE               	xorwf	postinc2,w,c
 11589  0002F2  E108               	bnz	u18141
 11590  0002F4  0102               	movlb	2	; () banked
 11591  0002F6  5164               	movf	(_loRa+100)& (0+255),w,b
 11592  0002F8  18DE               	xorwf	postinc2,w,c
 11593  0002FA  E104               	bnz	u18141
 11594  0002FC  0102               	movlb	2	; () banked
 11595  0002FE  5165               	movf	(_loRa+101)& (0+255),w,b
 11596  000300  18DE               	xorwf	postinc2,w,c
 11597  000302  A4D8               	btfss	status,2,c
 11598  000304                     u18141:
 11599  000304  D24B               	goto	l15759
 11600                           
 11601                           ; BSR set to: 2
 11602  000306  0102               	movlb	2	; () banked
 11603  000308  A504               	btfss	(_loRa+4)& (0+255),2,b
 11604  00030A  D248               	goto	l15759
 11605                           
 11606                           ; BSR set to: 2
 11607                           ;lorawan.c: 1200: {
 11608                           ;lorawan.c: 1202: if (0 == CheckMcastFlags(hdr))
 11609  00030C  C178  F064         	movff	LORAWAN_RxDone@hdr,CheckMcastFlags@hdr
 11610  000310  C179  F065         	movff	LORAWAN_RxDone@hdr+1,CheckMcastFlags@hdr+1
 11611  000314  EC70  F044         	call	_CheckMcastFlags	;wreg free
 11612  000318  0900               	iorlw	0
 11613  00031A  A4D8               	btfss	status,2,c
 11614  00031C  D008               	goto	l15651
 11615                           
 11616                           ;lorawan.c: 1203: {
 11617                           ;lorawan.c: 1204: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11618  00031E  0102               	movlb	2	; () banked
 11619  000320  5102               	movf	(_loRa+2)& (0+255),w,b
 11620  000322  0BF0               	andlw	-16
 11621  000324  0909               	iorlw	9
 11622  000326  6F02               	movwf	(_loRa+2)& (0+255),b
 11623                           
 11624                           ; BSR set to: 2
 11625                           ;lorawan.c: 1205: LORAWAN_EnterContinuousReceive();
 11626  000328  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11627                           
 11628                           ;lorawan.c: 1206: return MCAST_MSG_ERROR;
 11629                           ;	Return value of _LORAWAN_RxDone is never used
 11630  00032C  0012               	return	
 11631  00032E                     l15651:
 11632                           
 11633                           ;lorawan.c: 1207: }
 11634                           ;lorawan.c: 1209: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 1);
 11635  00032E  0101               	movlb	1	; () banked
 11636  000330  EE20 F006          	lfsr	2,6
 11637  000334  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11638  000336  26D9               	addwf	fsr2l,f,c
 11639  000338  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11640  00033A  22DA               	addwfc	fsr2h,f,c
 11641  00033C  CFDE F0F1          	movff	postinc2,??_LORAWAN_RxDone
 11642  000340  CFDD F0F2          	movff	postdec2,??_LORAWAN_RxDone+1
 11643  000344  C0F1  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 11644  000348  C0F2  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 11645  00034C  0100               	movlb	0	; () banked
 11646  00034E  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 11647  000350  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 11648  000352  0100               	movlb	0	; () banked
 11649  000354  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11650  000356  0FFC               	addlw	252
 11651  000358  0100               	movlb	0	; () banked
 11652  00035A  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 11653  00035C  0E49               	movlw	73
 11654  00035E  0100               	movlb	0	; () banked
 11655  000360  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 11656  000362  0E01               	movlw	1
 11657  000364  0100               	movlb	0	; () banked
 11658  000366  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 11659  000368  0E01               	movlw	1
 11660  00036A  EC0F  F036         	call	_AssembleEncryptionBlock
 11661                           
 11662                           ;lorawan.c: 1210: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 11663  00036E  0EEF               	movlw	low _radioBuffer
 11664  000370  0100               	movlb	0	; () banked
 11665  000372  6F64               	movwf	memcpy@d1& (0+255),b
 11666  000374  0E05               	movlw	high _radioBuffer
 11667  000376  0100               	movlb	0	; () banked
 11668  000378  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11669  00037A  0EC2               	movlw	low _aesBuffer
 11670  00037C  0100               	movlb	0	; () banked
 11671  00037E  6F66               	movwf	memcpy@s1& (0+255),b
 11672  000380  0E01               	movlw	high _aesBuffer
 11673  000382  0100               	movlb	0	; () banked
 11674  000384  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11675  000386  0E00               	movlw	0
 11676  000388  0100               	movlb	0	; () banked
 11677  00038A  6F69               	movwf	(memcpy@n+1)& (0+255),b
 11678  00038C  0E10               	movlw	16
 11679  00038E  6F68               	movwf	memcpy@n& (0+255),b
 11680  000390  EC07  F049         	call	_memcpy	;wreg free
 11681                           
 11682                           ;lorawan.c: 1211: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 11683  000394  0EFF               	movlw	low (_radioBuffer+16)
 11684  000396  0100               	movlb	0	; () banked
 11685  000398  6F64               	movwf	memcpy@d1& (0+255),b
 11686  00039A  0E05               	movlw	high (_radioBuffer+16)
 11687  00039C  0100               	movlb	0	; () banked
 11688  00039E  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11689  0003A0  C0EE  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 11690  0003A4  C0EF  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 11691  0003A8  0EFC               	movlw	252
 11692  0003AA  0100               	movlb	0	; () banked
 11693  0003AC  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11694  0003AE  0100               	movlb	0	; () banked
 11695  0003B0  6F68               	movwf	memcpy@n& (0+255),b
 11696  0003B2  0100               	movlb	0	; () banked
 11697  0003B4  6B69               	clrf	(memcpy@n+1)& (0+255),b
 11698  0003B6  0EFF               	movlw	255
 11699  0003B8  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 11700  0003BA  EC07  F049         	call	_memcpy	;wreg free
 11701                           
 11702                           ;lorawan.c: 1212: AESCmac(loRa.activationParameters.mcastNetworkSessionKey, aesBuffer, &
      +                          radioBuffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 11703  0003BE  0E66               	movlw	low (_loRa+102)
 11704  0003C0  0100               	movlb	0	; () banked
 11705  0003C2  6FCD               	movwf	AESCmac@key& (0+255),b
 11706  0003C4  0E02               	movlw	high (_loRa+102)
 11707  0003C6  0100               	movlb	0	; () banked
 11708  0003C8  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 11709  0003CA  0EC2               	movlw	low _aesBuffer
 11710  0003CC  0100               	movlb	0	; () banked
 11711  0003CE  6FCF               	movwf	AESCmac@output& (0+255),b
 11712  0003D0  0E01               	movlw	high _aesBuffer
 11713  0003D2  0100               	movlb	0	; () banked
 11714  0003D4  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 11715  0003D6  0EEF               	movlw	low _radioBuffer
 11716  0003D8  0100               	movlb	0	; () banked
 11717  0003DA  6FD1               	movwf	AESCmac@input& (0+255),b
 11718  0003DC  0E05               	movlw	high _radioBuffer
 11719  0003DE  0100               	movlb	0	; () banked
 11720  0003E0  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 11721  0003E2  0100               	movlb	0	; () banked
 11722  0003E4  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 11723  0003E6  0F0C               	addlw	12
 11724  0003E8  0100               	movlb	0	; () banked
 11725  0003EA  6FD3               	movwf	AESCmac@size& (0+255),b
 11726  0003EC  EC13  F016         	call	_AESCmac	;wreg free
 11727                           
 11728                           ;lorawan.c: 1214: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 11729  0003F0  0E71               	movlw	low LORAWAN_RxDone@computedMic
 11730  0003F2  0100               	movlb	0	; () banked
 11731  0003F4  6F64               	movwf	memcpy@d1& (0+255),b
 11732  0003F6  0E01               	movlw	high LORAWAN_RxDone@computedMic
 11733  0003F8  0100               	movlb	0	; () banked
 11734  0003FA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 11735  0003FC  0EC2               	movlw	low _aesBuffer
 11736  0003FE  0100               	movlb	0	; () banked
 11737  000400  6F66               	movwf	memcpy@s1& (0+255),b
 11738  000402  0E01               	movlw	high _aesBuffer
 11739  000404  0100               	movlb	0	; () banked
 11740  000406  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 11741  000408  0E00               	movlw	0
 11742  00040A  0100               	movlb	0	; () banked
 11743  00040C  6F69               	movwf	(memcpy@n+1)& (0+255),b
 11744  00040E  0E04               	movlw	4
 11745  000410  6F68               	movwf	memcpy@n& (0+255),b
 11746  000412  EC07  F049         	call	_memcpy	;wreg free
 11747                           
 11748                           ;lorawan.c: 1215: extractedMic = ExtractMic (&buffer[0], bufferLength);
 11749  000416  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 11750  00041A  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 11751  00041E  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 11752  000422  EC46  F046         	call	_ExtractMic	;wreg free
 11753  000426  C06E  F169         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 11754  00042A  C06F  F16A         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 11755  00042E  C070  F16B         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 11756  000432  C071  F16C         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 11757                           
 11758                           ;lorawan.c: 1217: if (computedMic != extractedMic)
 11759  000436  0101               	movlb	1	; () banked
 11760  000438  5169               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 11761  00043A  0101               	movlb	1	; () banked
 11762  00043C  1971               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 11763  00043E  E110               	bnz	u18170
 11764  000440  0101               	movlb	1	; () banked
 11765  000442  516A               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 11766  000444  0101               	movlb	1	; () banked
 11767  000446  1972               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 11768  000448  E10B               	bnz	u18170
 11769  00044A  0101               	movlb	1	; () banked
 11770  00044C  516B               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 11771  00044E  0101               	movlb	1	; () banked
 11772  000450  1973               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 11773  000452  E106               	bnz	u18170
 11774  000454  0101               	movlb	1	; () banked
 11775  000456  516C               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 11776  000458  0101               	movlb	1	; () banked
 11777  00045A  1974               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 11778  00045C  B4D8               	btfsc	status,2,c
 11779  00045E  D008               	goto	l15669
 11780  000460                     u18170:
 11781                           
 11782                           ; BSR set to: 1
 11783                           ;lorawan.c: 1218: {
 11784                           ;lorawan.c: 1219: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11785  000460  0102               	movlb	2	; () banked
 11786  000462  5102               	movf	(_loRa+2)& (0+255),w,b
 11787  000464  0BF0               	andlw	-16
 11788  000466  0909               	iorlw	9
 11789  000468  6F02               	movwf	(_loRa+2)& (0+255),b
 11790                           
 11791                           ; BSR set to: 2
 11792                           ;lorawan.c: 1220: LORAWAN_EnterContinuousReceive();
 11793  00046A  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11794                           
 11795                           ;lorawan.c: 1221: return MCAST_MSG_ERROR;
 11796                           ;	Return value of _LORAWAN_RxDone is never used
 11797  00046E  0012               	return	
 11798  000470                     l15669:
 11799                           
 11800                           ;lorawan.c: 1222: }
 11801                           ;lorawan.c: 1224: if (hdr->members.fCnt >= loRa.fMcastCntDown.members.valueLow)
 11802  000470  0101               	movlb	1	; () banked
 11803  000472  EE20 F006          	lfsr	2,6
 11804  000476  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11805  000478  26D9               	addwf	fsr2l,f,c
 11806  00047A  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11807  00047C  22DA               	addwfc	fsr2h,f,c
 11808  00047E  0102               	movlb	2	; () banked
 11809  000480  510E               	movf	(_loRa+14)& (0+255),w,b
 11810  000482  5CDE               	subwf	postinc2,w,c
 11811  000484  0102               	movlb	2	; () banked
 11812  000486  510F               	movf	(_loRa+15)& (0+255),w,b
 11813  000488  58DE               	subwfb	postinc2,w,c
 11814  00048A  A0D8               	btfss	status,0,c
 11815  00048C  D05A               	goto	l15687
 11816                           
 11817                           ; BSR set to: 2
 11818                           ;lorawan.c: 1225: {
 11819                           ;lorawan.c: 1226: if ( (hdr->members.fCnt - loRa.fMcastCntDown.members.valueLow) > loRa.
      +                          protocolParameters.maxMultiFcntGap )
 11820  00048E  0101               	movlb	1	; () banked
 11821  000490  EE20 F006          	lfsr	2,6
 11822  000494  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11823  000496  26D9               	addwf	fsr2l,f,c
 11824  000498  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11825  00049A  22DA               	addwfc	fsr2h,f,c
 11826  00049C  CFDE F0F1          	movff	postinc2,??_LORAWAN_RxDone
 11827  0004A0  CFDD F0F2          	movff	postdec2,??_LORAWAN_RxDone+1
 11828  0004A4  EE22  F00E         	lfsr	2,_loRa+14
 11829  0004A8  CFDE F0F3          	movff	postinc2,??_LORAWAN_RxDone+2
 11830  0004AC  CFDD F0F4          	movff	postdec2,??_LORAWAN_RxDone+3
 11831  0004B0  0100               	movlb	0	; () banked
 11832  0004B2  1FF3               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11833  0004B4  1FF4               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11834  0004B6  4BF3               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11835  0004B8  2BF4               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11836  0004BA  0100               	movlb	0	; () banked
 11837  0004BC  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 11838  0004BE  0100               	movlb	0	; () banked
 11839  0004C0  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 11840  0004C2  0100               	movlb	0	; () banked
 11841  0004C4  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 11842  0004C6  0100               	movlb	0	; () banked
 11843  0004C8  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 11844  0004CA  0100               	movlb	0	; () banked
 11845  0004CC  51F3               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 11846  0004CE  0102               	movlb	2	; () banked
 11847  0004D0  5D9E               	subwf	(_loRa+158)& (0+255),w,b
 11848  0004D2  0100               	movlb	0	; () banked
 11849  0004D4  51F4               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 11850  0004D6  0102               	movlb	2	; () banked
 11851  0004D8  599F               	subwfb	(_loRa+159)& (0+255),w,b
 11852  0004DA  B0D8               	btfsc	status,0,c
 11853  0004DC  D026               	goto	l15685
 11854                           
 11855                           ; BSR set to: 2
 11856                           ;lorawan.c: 1227: {
 11857                           ;lorawan.c: 1228: if (rxPayload.RxAppData != (0))
 11858  0004DE  0101               	movlb	1	; () banked
 11859  0004E0  5186               	movf	_rxPayload& (0+255),w,b
 11860  0004E2  0101               	movlb	1	; () banked
 11861  0004E4  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 11862  0004E6  B4D8               	btfsc	status,2,c
 11863  0004E8  D018               	goto	l15677
 11864                           
 11865                           ; BSR set to: 1
 11866                           ;lorawan.c: 1229: {
 11867                           ;lorawan.c: 1230: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11868  0004EA  0E00               	movlw	0
 11869  0004EC  0100               	movlb	0	; () banked
 11870  0004EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 11871  0004F0  0E00               	movlw	0
 11872  0004F2  0100               	movlb	0	; () banked
 11873  0004F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11874  0004F6  0E00               	movlw	0
 11875  0004F8  0100               	movlb	0	; () banked
 11876  0004FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11877  0004FC  0E05               	movlw	5
 11878  0004FE  0100               	movlb	0	; () banked
 11879  000500  6F6A               	movwf	RxDataDone@status& (0+255),b
 11880  000502  D801               	call	u18218
 11881  000504  D00A               	goto	l15677
 11882  000506                     u18218:
 11883  000506  0005               	push	
 11884  000508  6EFA               	movwf	pclath,c
 11885  00050A  0101               	movlb	1	; () banked
 11886  00050C  5186               	movf	_rxPayload& (0+255),w,b
 11887  00050E  6EFD               	movwf	tosl,c
 11888  000510  5187               	movf	(_rxPayload+1)& (0+255),w,b
 11889  000512  6EFE               	movwf	tosh,c
 11890  000514  6AFF               	clrf	tosu,c
 11891  000516  50FA               	movf	pclath,w,c
 11892  000518  0012               	return		;indir
 11893  00051A                     l15677:
 11894                           
 11895                           ;lorawan.c: 1231: }
 11896                           ;lorawan.c: 1233: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 11897  00051A  0102               	movlb	2	; () banked
 11898  00051C  5102               	movf	(_loRa+2)& (0+255),w,b
 11899  00051E  0BF0               	andlw	-16
 11900  000520  0909               	iorlw	9
 11901  000522  6F02               	movwf	(_loRa+2)& (0+255),b
 11902                           
 11903                           ; BSR set to: 2
 11904                           ;lorawan.c: 1234: LORAWAN_EnterContinuousReceive();
 11905  000524  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 11906                           
 11907                           ;lorawan.c: 1235: return MCAST_MSG_ERROR;
 11908                           ;	Return value of _LORAWAN_RxDone is never used
 11909  000528  0012               	return	
 11910  00052A                     l15685:
 11911                           
 11912                           ;lorawan.c: 1237: else
 11913                           ;lorawan.c: 1238: {
 11914                           ;lorawan.c: 1239: loRa.fMcastCntDown.members.valueLow = hdr->members.fCnt;
 11915  00052A  0101               	movlb	1	; () banked
 11916  00052C  EE20 F006          	lfsr	2,6
 11917  000530  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11918  000532  26D9               	addwf	fsr2l,f,c
 11919  000534  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11920  000536  22DA               	addwfc	fsr2h,f,c
 11921  000538  CFDE F20E          	movff	postinc2,_loRa+14
 11922  00053C  CFDD F20F          	movff	postdec2,_loRa+15
 11923                           
 11924                           ; BSR set to: 1
 11925                           ;lorawan.c: 1240: }
 11926                           ;lorawan.c: 1241: }
 11927  000540  D041               	goto	l15705
 11928  000542                     l15687:
 11929                           
 11930                           ;lorawan.c: 1242: else
 11931                           ;lorawan.c: 1243: {
 11932                           ;lorawan.c: 1244: if ( (0 == hdr->members.fCnt) && (0xFFFF == loRa.fMcastCntDown.members
      +                          .valueLow) )
 11933  000542  0101               	movlb	1	; () banked
 11934  000544  EE20 F006          	lfsr	2,6
 11935  000548  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 11936  00054A  26D9               	addwf	fsr2l,f,c
 11937  00054C  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 11938  00054E  22DA               	addwfc	fsr2h,f,c
 11939  000550  50DE               	movf	postinc2,w,c
 11940  000552  10DE               	iorwf	postinc2,w,c
 11941  000554  A4D8               	btfss	status,2,c
 11942  000556  D010               	goto	l15695
 11943                           
 11944                           ; BSR set to: 1
 11945  000558  0102               	movlb	2	; () banked
 11946  00055A  290E               	incf	(_loRa+14)& (0+255),w,b
 11947  00055C  E10D               	bnz	l15695
 11948  00055E  0102               	movlb	2	; () banked
 11949  000560  290F               	incf	(_loRa+15)& (0+255),w,b
 11950  000562  A4D8               	btfss	status,2,c
 11951  000564  D009               	goto	l15695
 11952                           
 11953                           ; BSR set to: 2
 11954                           ;lorawan.c: 1245: {
 11955                           ;lorawan.c: 1246: loRa.fMcastCntDown.members.valueLow = 0;
 11956  000566  0E00               	movlw	0
 11957  000568  0102               	movlb	2	; () banked
 11958  00056A  6F0F               	movwf	(_loRa+15)& (0+255),b
 11959  00056C  0E00               	movlw	0
 11960  00056E  6F0E               	movwf	(_loRa+14)& (0+255),b
 11961                           
 11962                           ; BSR set to: 2
 11963                           ;lorawan.c: 1247: loRa.fMcastCntDown.members.valueHigh ++;
 11964  000570  0102               	movlb	2	; () banked
 11965  000572  4B10               	infsnz	(_loRa+16)& (0+255),f,b
 11966  000574  2B11               	incf	(_loRa+17)& (0+255),f,b
 11967                           
 11968                           ;lorawan.c: 1248: }
 11969  000576  D026               	goto	l15705
 11970  000578                     l15695:
 11971                           
 11972                           ;lorawan.c: 1249: else
 11973                           ;lorawan.c: 1250: {
 11974                           ;lorawan.c: 1251: if (rxPayload.RxAppData != (0))
 11975  000578  0101               	movlb	1	; () banked
 11976  00057A  5186               	movf	_rxPayload& (0+255),w,b
 11977  00057C  0101               	movlb	1	; () banked
 11978  00057E  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 11979  000580  B4D8               	btfsc	status,2,c
 11980  000582  D018               	goto	l15699
 11981                           
 11982                           ; BSR set to: 1
 11983                           ;lorawan.c: 1252: {
 11984                           ;lorawan.c: 1253: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 11985  000584  0E00               	movlw	0
 11986  000586  0100               	movlb	0	; () banked
 11987  000588  6F67               	movwf	RxDataDone@pData& (0+255),b
 11988  00058A  0E00               	movlw	0
 11989  00058C  0100               	movlb	0	; () banked
 11990  00058E  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 11991  000590  0E00               	movlw	0
 11992  000592  0100               	movlb	0	; () banked
 11993  000594  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 11994  000596  0E05               	movlw	5
 11995  000598  0100               	movlb	0	; () banked
 11996  00059A  6F6A               	movwf	RxDataDone@status& (0+255),b
 11997  00059C  D801               	call	u18258
 11998  00059E  D00A               	goto	l15699
 11999  0005A0                     u18258:
 12000  0005A0  0005               	push	
 12001  0005A2  6EFA               	movwf	pclath,c
 12002  0005A4  0101               	movlb	1	; () banked
 12003  0005A6  5186               	movf	_rxPayload& (0+255),w,b
 12004  0005A8  6EFD               	movwf	tosl,c
 12005  0005AA  5187               	movf	(_rxPayload+1)& (0+255),w,b
 12006  0005AC  6EFE               	movwf	tosh,c
 12007  0005AE  6AFF               	clrf	tosu,c
 12008  0005B0  50FA               	movf	pclath,w,c
 12009  0005B2  0012               	return		;indir
 12010  0005B4                     l15699:
 12011                           
 12012                           ;lorawan.c: 1254: }
 12013                           ;lorawan.c: 1256: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12014  0005B4  0102               	movlb	2	; () banked
 12015  0005B6  5102               	movf	(_loRa+2)& (0+255),w,b
 12016  0005B8  0BF0               	andlw	-16
 12017  0005BA  0909               	iorlw	9
 12018  0005BC  6F02               	movwf	(_loRa+2)& (0+255),b
 12019                           
 12020                           ; BSR set to: 2
 12021                           ;lorawan.c: 1257: LORAWAN_EnterContinuousReceive();
 12022  0005BE  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12023                           
 12024                           ;lorawan.c: 1258: return MCAST_MSG_ERROR;
 12025                           ;	Return value of _LORAWAN_RxDone is never used
 12026  0005C2  0012               	return	
 12027  0005C4                     l15705:
 12028                           
 12029                           ;lorawan.c: 1259: }
 12030                           ;lorawan.c: 1260: }
 12031                           ;lorawan.c: 1262: if (loRa.fMcastCntDown.value == (4294967295UL))
 12032  0005C4  0102               	movlb	2	; () banked
 12033  0005C6  290E               	incf	(_loRa+14)& (0+255),w,b
 12034  0005C8  E130               	bnz	l15717
 12035  0005CA  0102               	movlb	2	; () banked
 12036  0005CC  290F               	incf	(_loRa+15)& (0+255),w,b
 12037  0005CE  E12D               	bnz	l15717
 12038  0005D0  0102               	movlb	2	; () banked
 12039  0005D2  2910               	incf	(_loRa+16)& (0+255),w,b
 12040  0005D4  E12A               	bnz	l15717
 12041  0005D6  0102               	movlb	2	; () banked
 12042  0005D8  2911               	incf	(_loRa+17)& (0+255),w,b
 12043  0005DA  A4D8               	btfss	status,2,c
 12044  0005DC  D026               	goto	l15717
 12045                           
 12046                           ; BSR set to: 2
 12047                           ;lorawan.c: 1263: {
 12048                           ;lorawan.c: 1264: if (rxPayload.RxAppData != (0))
 12049  0005DE  0101               	movlb	1	; () banked
 12050  0005E0  5186               	movf	_rxPayload& (0+255),w,b
 12051  0005E2  0101               	movlb	1	; () banked
 12052  0005E4  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 12053  0005E6  B4D8               	btfsc	status,2,c
 12054  0005E8  D018               	goto	l15711
 12055                           
 12056                           ; BSR set to: 1
 12057                           ;lorawan.c: 1265: {
 12058                           ;lorawan.c: 1266: rxPayload.RxAppData ((0), 0, MCAST_RE_KEYING_NEEDED);
 12059  0005EA  0E00               	movlw	0
 12060  0005EC  0100               	movlb	0	; () banked
 12061  0005EE  6F67               	movwf	RxDataDone@pData& (0+255),b
 12062  0005F0  0E00               	movlw	0
 12063  0005F2  0100               	movlb	0	; () banked
 12064  0005F4  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 12065  0005F6  0E00               	movlw	0
 12066  0005F8  0100               	movlb	0	; () banked
 12067  0005FA  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 12068  0005FC  0E05               	movlw	5
 12069  0005FE  0100               	movlb	0	; () banked
 12070  000600  6F6A               	movwf	RxDataDone@status& (0+255),b
 12071  000602  D801               	call	u18288
 12072  000604  D00A               	goto	l15711
 12073  000606                     u18288:
 12074  000606  0005               	push	
 12075  000608  6EFA               	movwf	pclath,c
 12076  00060A  0101               	movlb	1	; () banked
 12077  00060C  5186               	movf	_rxPayload& (0+255),w,b
 12078  00060E  6EFD               	movwf	tosl,c
 12079  000610  5187               	movf	(_rxPayload+1)& (0+255),w,b
 12080  000612  6EFE               	movwf	tosh,c
 12081  000614  6AFF               	clrf	tosu,c
 12082  000616  50FA               	movf	pclath,w,c
 12083  000618  0012               	return		;indir
 12084  00061A                     l15711:
 12085                           
 12086                           ;lorawan.c: 1267: }
 12087                           ;lorawan.c: 1269: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12088  00061A  0102               	movlb	2	; () banked
 12089  00061C  5102               	movf	(_loRa+2)& (0+255),w,b
 12090  00061E  0BF0               	andlw	-16
 12091  000620  0909               	iorlw	9
 12092  000622  6F02               	movwf	(_loRa+2)& (0+255),b
 12093                           
 12094                           ; BSR set to: 2
 12095                           ;lorawan.c: 1270: LORAWAN_EnterContinuousReceive();
 12096  000624  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12097                           
 12098                           ;lorawan.c: 1271: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12099                           ;	Return value of _LORAWAN_RxDone is never used
 12100  000628  0012               	return	
 12101  00062A                     l15717:
 12102                           
 12103                           ;lorawan.c: 1272: }
 12104                           ;lorawan.c: 1274: if (CLASS_C_RX2_1_OPEN == loRa.macStatus.macState)
 12105  00062A  0102               	movlb	2	; () banked
 12106  00062C  5102               	movf	(_loRa+2)& (0+255),w,b
 12107  00062E  0B0F               	andlw	15
 12108  000630  0A08               	xorlw	8
 12109  000632  A4D8               	btfss	status,2,c
 12110  000634  D009               	goto	l15721
 12111                           
 12112                           ; BSR set to: 2
 12113                           ;lorawan.c: 1275: {
 12114                           ;lorawan.c: 1276: SwTimerStop (loRa.receiveWindow1TimerId);
 12115  000636  0102               	movlb	2	; () banked
 12116  000638  51E4               	movf	(_loRa+228)& (0+255),w,b
 12117  00063A  EC61  F04F         	call	_SwTimerStop
 12118                           
 12119                           ;lorawan.c: 1277: SwTimerStop (loRa.receiveWindow2TimerId);
 12120  00063E  0102               	movlb	2	; () banked
 12121  000640  51E5               	movf	(_loRa+229)& (0+255),w,b
 12122  000642  EC61  F04F         	call	_SwTimerStop
 12123                           
 12124                           ;lorawan.c: 1278: }
 12125  000646  D00A               	goto	l15725
 12126  000648                     l15721:
 12127                           
 12128                           ;lorawan.c: 1279: else if (RX1_OPEN == loRa.macStatus.macState)
 12129  000648  0102               	movlb	2	; () banked
 12130  00064A  5102               	movf	(_loRa+2)& (0+255),w,b
 12131  00064C  0B0F               	andlw	15
 12132  00064E  0A03               	xorlw	3
 12133  000650  A4D8               	btfss	status,2,c
 12134  000652  D004               	goto	l15725
 12135                           
 12136                           ; BSR set to: 2
 12137                           ;lorawan.c: 1280: {
 12138                           ;lorawan.c: 1281: SwTimerStop (loRa.receiveWindow2TimerId);
 12139  000654  0102               	movlb	2	; () banked
 12140  000656  51E5               	movf	(_loRa+229)& (0+255),w,b
 12141  000658  EC61  F04F         	call	_SwTimerStop
 12142  00065C                     l15725:
 12143                           
 12144                           ;lorawan.c: 1282: }
 12145                           ;lorawan.c: 1284: buffer = buffer + 8;
 12146  00065C  0E08               	movlw	8
 12147  00065E  0100               	movlb	0	; () banked
 12148  000660  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12149  000662  0100               	movlb	0	; () banked
 12150  000664  6FEE               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12151  000666  0E00               	movlw	0
 12152  000668  0100               	movlb	0	; () banked
 12153  00066A  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12154  00066C  0100               	movlb	0	; () banked
 12155  00066E  6FEF               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12156                           
 12157                           ; BSR set to: 0
 12158                           ;lorawan.c: 1286: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12159  000670  0100               	movlb	0	; () banked
 12160  000672  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12161  000674  0100               	movlb	0	; () banked
 12162  000676  6FF1               	movwf	??_LORAWAN_RxDone& (0+255),b
 12163  000678  6BF2               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12164  00067A  0101               	movlb	1	; () banked
 12165  00067C  EE20 F005          	lfsr	2,5
 12166  000680  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12167  000682  26D9               	addwf	fsr2l,f,c
 12168  000684  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12169  000686  22DA               	addwfc	fsr2h,f,c
 12170  000688  0101               	movlb	1	; () banked
 12171  00068A  50DF               	movf	223,w,c
 12172  00068C  0B0F               	andlw	15
 12173  00068E  0100               	movlb	0	; () banked
 12174  000690  6FF3               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12175  000692  6BF4               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12176  000694  0E0C               	movlw	12
 12177  000696  0100               	movlb	0	; () banked
 12178  000698  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12179  00069A  0E00               	movlw	0
 12180  00069C  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12181  00069E  0100               	movlb	0	; () banked
 12182  0006A0  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12183  0006A2  0100               	movlb	0	; () banked
 12184  0006A4  19F3               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12185  0006A6  E106               	bnz	u18310
 12186  0006A8  0100               	movlb	0	; () banked
 12187  0006AA  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12188  0006AC  0100               	movlb	0	; () banked
 12189  0006AE  19F4               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12190  0006B0  B4D8               	btfsc	status,2,c
 12191  0006B2  D041               	goto	l15741
 12192  0006B4                     u18310:
 12193                           
 12194                           ; BSR set to: 0
 12195                           ;lorawan.c: 1287: {
 12196                           ;lorawan.c: 1288: fPort = *(buffer++);
 12197  0006B4  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 12198  0006B8  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 12199  0006BC  50DF               	movf	indf2,w,c
 12200  0006BE  0101               	movlb	1	; () banked
 12201  0006C0  6F66               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 12202                           
 12203                           ; BSR set to: 1
 12204  0006C2  0100               	movlb	0	; () banked
 12205  0006C4  4BEE               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 12206  0006C6  2BEF               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;lorawan.c: 1290: frmPayloadLength = bufferLength - 8 - sizeof (extractedMic);
 12210  0006C8  0100               	movlb	0	; () banked
 12211  0006CA  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12212  0006CC  0FF4               	addlw	244
 12213  0006CE  0101               	movlb	1	; () banked
 12214  0006D0  6F77               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12215                           
 12216                           ; BSR set to: 1
 12217                           ;lorawan.c: 1291: bufferIndex = 16 + 9;
 12218  0006D2  0E19               	movlw	25
 12219  0006D4  0101               	movlb	1	; () banked
 12220  0006D6  6F6D               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 12221                           
 12222                           ; BSR set to: 1
 12223                           ;lorawan.c: 1293: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fMcastCntDown
      +                          .value, loRa.activationParameters.mcastApplicationSessionKey, bufferIndex, radioBuffer, 
      +                          1);
 12224  0006D8  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 12225  0006DC  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 12226  0006E0  0101               	movlb	1	; () banked
 12227  0006E2  0577               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 12228  0006E4  0100               	movlb	0	; () banked
 12229  0006E6  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 12230  0006E8  0E01               	movlw	1
 12231  0006EA  0100               	movlb	0	; () banked
 12232  0006EC  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 12233  0006EE  C20E  F0A9         	movff	_loRa+14,EncryptFRMPayload@frameCounter
 12234  0006F2  C20F  F0AA         	movff	_loRa+15,EncryptFRMPayload@frameCounter+1
 12235  0006F6  C210  F0AB         	movff	_loRa+16,EncryptFRMPayload@frameCounter+2
 12236  0006FA  C211  F0AC         	movff	_loRa+17,EncryptFRMPayload@frameCounter+3
 12237  0006FE  0E76               	movlw	low (_loRa+118)
 12238  000700  0100               	movlb	0	; () banked
 12239  000702  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 12240  000704  0E02               	movlw	high (_loRa+118)
 12241  000706  0100               	movlb	0	; () banked
 12242  000708  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 12243  00070A  C16D  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 12244  00070E  0EEF               	movlw	low _radioBuffer
 12245  000710  0100               	movlb	0	; () banked
 12246  000712  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 12247  000714  0E05               	movlw	high _radioBuffer
 12248  000716  0100               	movlb	0	; () banked
 12249  000718  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 12250  00071A  0E01               	movlw	1
 12251  00071C  0100               	movlb	0	; () banked
 12252  00071E  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 12253  000720  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 12254                           
 12255                           ;lorawan.c: 1294: packet = buffer - 1;
 12256  000724  0EFF               	movlw	255
 12257  000726  0100               	movlb	0	; () banked
 12258  000728  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12259  00072A  0101               	movlb	1	; () banked
 12260  00072C  6F6F               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12261  00072E  0EFF               	movlw	255
 12262  000730  0100               	movlb	0	; () banked
 12263  000732  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12264  000734  D007               	goto	L6
 12265  000736                     l15741:
 12266                           
 12267                           ;lorawan.c: 1296: else
 12268                           ;lorawan.c: 1297: {
 12269                           ;lorawan.c: 1298: frmPayloadLength = 0;
 12270  000736  0E00               	movlw	0
 12271  000738  0101               	movlb	1	; () banked
 12272  00073A  6F77               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 12273                           
 12274                           ; BSR set to: 1
 12275                           ;lorawan.c: 1299: packet = (0);
 12276  00073C  0E00               	movlw	0
 12277  00073E  0101               	movlb	1	; () banked
 12278  000740  6F6F               	movwf	LORAWAN_RxDone@packet& (0+255),b
 12279  000742  0E00               	movlw	0
 12280  000744                     L6:
 12281  000744  0101               	movlb	1	; () banked
 12282  000746  6F70               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 12283                           
 12284                           ; BSR set to: 1
 12285                           ;lorawan.c: 1300: }
 12286                           ;lorawan.c: 1302: loRa.macStatus.rxDone = 1;
 12287                           
 12288                           ; BSR set to: 1
 12289  000748  0102               	movlb	2	; () banked
 12290  00074A  8303               	bsf	(_loRa+3)& (0+255),1,b
 12291                           
 12292                           ; BSR set to: 2
 12293                           ;lorawan.c: 1303: loRa.macStatus.macState = IDLE;
 12294  00074C  0102               	movlb	2	; () banked
 12295  00074E  9102               	bcf	(_loRa+2)& (0+255),0,b
 12296  000750  9302               	bcf	(_loRa+2)& (0+255),1,b
 12297  000752  9502               	bcf	(_loRa+2)& (0+255),2,b
 12298  000754  9702               	bcf	(_loRa+2)& (0+255),3,b
 12299                           
 12300                           ; BSR set to: 2
 12301                           ;lorawan.c: 1305: if (rxPayload.RxAppData != (0))
 12302  000756  0101               	movlb	1	; () banked
 12303  000758  5186               	movf	_rxPayload& (0+255),w,b
 12304  00075A  0101               	movlb	1	; () banked
 12305  00075C  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 12306  00075E  B4D8               	btfsc	status,2,c
 12307  000760  D015               	goto	l15753
 12308                           
 12309                           ; BSR set to: 1
 12310                           ;lorawan.c: 1306: {
 12311                           ;lorawan.c: 1307: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 12312  000762  C16F  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 12313  000766  C170  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 12314  00076A  C177  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 12315  00076E  0E01               	movlw	1
 12316  000770  0100               	movlb	0	; () banked
 12317  000772  6F6A               	movwf	RxDataDone@status& (0+255),b
 12318  000774  D801               	call	u18338
 12319  000776  D00A               	goto	l15753
 12320  000778                     u18338:
 12321  000778  0005               	push	
 12322  00077A  6EFA               	movwf	pclath,c
 12323  00077C  0101               	movlb	1	; () banked
 12324  00077E  5186               	movf	_rxPayload& (0+255),w,b
 12325  000780  6EFD               	movwf	tosl,c
 12326  000782  5187               	movf	(_rxPayload+1)& (0+255),w,b
 12327  000784  6EFE               	movwf	tosh,c
 12328  000786  6AFF               	clrf	tosu,c
 12329  000788  50FA               	movf	pclath,w,c
 12330  00078A  0012               	return		;indir
 12331  00078C                     l15753:
 12332                           
 12333                           ;lorawan.c: 1308: }
 12334                           ;lorawan.c: 1310: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12335  00078C  0102               	movlb	2	; () banked
 12336  00078E  5102               	movf	(_loRa+2)& (0+255),w,b
 12337  000790  0BF0               	andlw	-16
 12338  000792  0909               	iorlw	9
 12339  000794  6F02               	movwf	(_loRa+2)& (0+255),b
 12340                           
 12341                           ; BSR set to: 2
 12342                           ;lorawan.c: 1311: LORAWAN_EnterContinuousReceive();
 12343  000796  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12344                           
 12345                           ;lorawan.c: 1312: return MAC_OK;
 12346                           ;	Return value of _LORAWAN_RxDone is never used
 12347  00079A  0012               	return	
 12348  00079C                     l15759:
 12349                           
 12350                           ;lorawan.c: 1313: }
 12351                           ;lorawan.c: 1316: if (hdr->members.devAddr.value != loRa.activationParameters.deviceAddr
      +                          ess.value)
 12352  00079C  0101               	movlb	1	; () banked
 12353  00079E  EE20 F001          	lfsr	2,1
 12354  0007A2  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12355  0007A4  26D9               	addwf	fsr2l,f,c
 12356  0007A6  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12357  0007A8  22DA               	addwfc	fsr2h,f,c
 12358  0007AA  0102               	movlb	2	; () banked
 12359  0007AC  511E               	movf	(_loRa+30)& (0+255),w,b
 12360  0007AE  18DE               	xorwf	postinc2,w,c
 12361  0007B0  E10D               	bnz	u18340
 12362  0007B2  0102               	movlb	2	; () banked
 12363  0007B4  511F               	movf	(_loRa+31)& (0+255),w,b
 12364  0007B6  18DE               	xorwf	postinc2,w,c
 12365  0007B8  E109               	bnz	u18340
 12366  0007BA  0102               	movlb	2	; () banked
 12367  0007BC  5120               	movf	(_loRa+32)& (0+255),w,b
 12368  0007BE  18DE               	xorwf	postinc2,w,c
 12369  0007C0  E105               	bnz	u18340
 12370  0007C2  0102               	movlb	2	; () banked
 12371  0007C4  5121               	movf	(_loRa+33)& (0+255),w,b
 12372  0007C6  18DE               	xorwf	postinc2,w,c
 12373  0007C8  B4D8               	btfsc	status,2,c
 12374  0007CA  D00F               	goto	l15771
 12375  0007CC                     u18340:
 12376                           
 12377                           ; BSR set to: 2
 12378                           ;lorawan.c: 1317: {
 12379                           ;lorawan.c: 1318: SetReceptionNotOkState();
 12380  0007CC  EC26  F044         	call	_SetReceptionNotOkState	;wreg free
 12381                           
 12382                           ;lorawan.c: 1319: if (CLASS_C == loRa.deviceClass)
 12383  0007D0  0E02               	movlw	2
 12384  0007D2  0102               	movlb	2	; () banked
 12385  0007D4  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12386  0007D6  A4D8               	btfss	status,2,c
 12387  0007D8  0012               	return	
 12388                           
 12389                           ; BSR set to: 2
 12390                           ;lorawan.c: 1320: {
 12391                           ;lorawan.c: 1321: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12392  0007DA  0102               	movlb	2	; () banked
 12393  0007DC  5102               	movf	(_loRa+2)& (0+255),w,b
 12394  0007DE  0BF0               	andlw	-16
 12395  0007E0  0909               	iorlw	9
 12396  0007E2  6F02               	movwf	(_loRa+2)& (0+255),b
 12397                           
 12398                           ; BSR set to: 2
 12399                           ;lorawan.c: 1322: LORAWAN_EnterContinuousReceive();
 12400  0007E4  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12401                           
 12402                           ;lorawan.c: 1323: }
 12403                           ;lorawan.c: 1324: return INVALID_PARAMETER;
 12404                           ;	Return value of _LORAWAN_RxDone is never used
 12405  0007E8  0012               	return	
 12406  0007EA                     l15771:
 12407                           
 12408                           ;lorawan.c: 1325: }
 12409                           ;lorawan.c: 1327: AssembleEncryptionBlock (1, hdr->members.fCnt, bufferLength - sizeof (
      +                          computedMic), 0x49, 0);
 12410  0007EA  0101               	movlb	1	; () banked
 12411  0007EC  EE20 F006          	lfsr	2,6
 12412  0007F0  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12413  0007F2  26D9               	addwf	fsr2l,f,c
 12414  0007F4  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12415  0007F6  22DA               	addwfc	fsr2h,f,c
 12416  0007F8  CFDE F0F1          	movff	postinc2,??_LORAWAN_RxDone
 12417  0007FC  CFDD F0F2          	movff	postdec2,??_LORAWAN_RxDone+1
 12418  000800  C0F1  F06E         	movff	??_LORAWAN_RxDone,AssembleEncryptionBlock@frameCounter
 12419  000804  C0F2  F06F         	movff	??_LORAWAN_RxDone+1,AssembleEncryptionBlock@frameCounter+1
 12420  000808  0100               	movlb	0	; () banked
 12421  00080A  6B70               	clrf	(AssembleEncryptionBlock@frameCounter+2)& (0+255),b
 12422  00080C  6B71               	clrf	(AssembleEncryptionBlock@frameCounter+3)& (0+255),b
 12423  00080E  0100               	movlb	0	; () banked
 12424  000810  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12425  000812  0FFC               	addlw	252
 12426  000814  0100               	movlb	0	; () banked
 12427  000816  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 12428  000818  0E49               	movlw	73
 12429  00081A  0100               	movlb	0	; () banked
 12430  00081C  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 12431  00081E  0E00               	movlw	0
 12432  000820  0100               	movlb	0	; () banked
 12433  000822  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 12434  000824  0E01               	movlw	1
 12435  000826  EC0F  F036         	call	_AssembleEncryptionBlock
 12436                           
 12437                           ;lorawan.c: 1328: memcpy (&radioBuffer[0], aesBuffer, sizeof (aesBuffer));
 12438  00082A  0EEF               	movlw	low _radioBuffer
 12439  00082C  0100               	movlb	0	; () banked
 12440  00082E  6F64               	movwf	memcpy@d1& (0+255),b
 12441  000830  0E05               	movlw	high _radioBuffer
 12442  000832  0100               	movlb	0	; () banked
 12443  000834  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12444  000836  0EC2               	movlw	low _aesBuffer
 12445  000838  0100               	movlb	0	; () banked
 12446  00083A  6F66               	movwf	memcpy@s1& (0+255),b
 12447  00083C  0E01               	movlw	high _aesBuffer
 12448  00083E  0100               	movlb	0	; () banked
 12449  000840  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 12450  000842  0E00               	movlw	0
 12451  000844  0100               	movlb	0	; () banked
 12452  000846  6F69               	movwf	(memcpy@n+1)& (0+255),b
 12453  000848  0E10               	movlw	16
 12454  00084A  6F68               	movwf	memcpy@n& (0+255),b
 12455  00084C  EC07  F049         	call	_memcpy	;wreg free
 12456                           
 12457                           ;lorawan.c: 1329: memcpy (&radioBuffer[16], buffer, bufferLength-sizeof(computedMic));
 12458  000850  0EFF               	movlw	low (_radioBuffer+16)
 12459  000852  0100               	movlb	0	; () banked
 12460  000854  6F64               	movwf	memcpy@d1& (0+255),b
 12461  000856  0E05               	movlw	high (_radioBuffer+16)
 12462  000858  0100               	movlb	0	; () banked
 12463  00085A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12464  00085C  C0EE  F066         	movff	LORAWAN_RxDone@buffer,memcpy@s1
 12465  000860  C0EF  F067         	movff	LORAWAN_RxDone@buffer+1,memcpy@s1+1
 12466  000864  0EFC               	movlw	252
 12467  000866  0100               	movlb	0	; () banked
 12468  000868  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12469  00086A  0100               	movlb	0	; () banked
 12470  00086C  6F68               	movwf	memcpy@n& (0+255),b
 12471  00086E  0100               	movlb	0	; () banked
 12472  000870  6B69               	clrf	(memcpy@n+1)& (0+255),b
 12473  000872  0EFF               	movlw	255
 12474  000874  2369               	addwfc	(memcpy@n+1)& (0+255),f,b
 12475  000876  EC07  F049         	call	_memcpy	;wreg free
 12476                           
 12477                           ;lorawan.c: 1330: AESCmac(loRa.activationParameters.networkSessionKey, aesBuffer, &radio
      +                          Buffer[0], bufferLength - sizeof(computedMic) + sizeof (aesBuffer));
 12478  00087A  0E22               	movlw	low (_loRa+34)
 12479  00087C  0100               	movlb	0	; () banked
 12480  00087E  6FCD               	movwf	AESCmac@key& (0+255),b
 12481  000880  0E02               	movlw	high (_loRa+34)
 12482  000882  0100               	movlb	0	; () banked
 12483  000884  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 12484  000886  0EC2               	movlw	low _aesBuffer
 12485  000888  0100               	movlb	0	; () banked
 12486  00088A  6FCF               	movwf	AESCmac@output& (0+255),b
 12487  00088C  0E01               	movlw	high _aesBuffer
 12488  00088E  0100               	movlb	0	; () banked
 12489  000890  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 12490  000892  0EEF               	movlw	low _radioBuffer
 12491  000894  0100               	movlb	0	; () banked
 12492  000896  6FD1               	movwf	AESCmac@input& (0+255),b
 12493  000898  0E05               	movlw	high _radioBuffer
 12494  00089A  0100               	movlb	0	; () banked
 12495  00089C  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 12496  00089E  0100               	movlb	0	; () banked
 12497  0008A0  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12498  0008A2  0F0C               	addlw	12
 12499  0008A4  0100               	movlb	0	; () banked
 12500  0008A6  6FD3               	movwf	AESCmac@size& (0+255),b
 12501  0008A8  EC13  F016         	call	_AESCmac	;wreg free
 12502                           
 12503                           ;lorawan.c: 1332: memcpy(&computedMic, aesBuffer, sizeof(computedMic));
 12504  0008AC  0E71               	movlw	low LORAWAN_RxDone@computedMic
 12505  0008AE  0100               	movlb	0	; () banked
 12506  0008B0  6F64               	movwf	memcpy@d1& (0+255),b
 12507  0008B2  0E01               	movlw	high LORAWAN_RxDone@computedMic
 12508  0008B4  0100               	movlb	0	; () banked
 12509  0008B6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 12510  0008B8  0EC2               	movlw	low _aesBuffer
 12511  0008BA  0100               	movlb	0	; () banked
 12512  0008BC  6F66               	movwf	memcpy@s1& (0+255),b
 12513  0008BE  0E01               	movlw	high _aesBuffer
 12514  0008C0  0100               	movlb	0	; () banked
 12515  0008C2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 12516  0008C4  0E00               	movlw	0
 12517  0008C6  0100               	movlb	0	; () banked
 12518  0008C8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 12519  0008CA  0E04               	movlw	4
 12520  0008CC  6F68               	movwf	memcpy@n& (0+255),b
 12521  0008CE  EC07  F049         	call	_memcpy	;wreg free
 12522                           
 12523                           ;lorawan.c: 1333: extractedMic = ExtractMic (&buffer[0], bufferLength);
 12524  0008D2  C0EE  F06E         	movff	LORAWAN_RxDone@buffer,ExtractMic@buffer
 12525  0008D6  C0EF  F06F         	movff	LORAWAN_RxDone@buffer+1,ExtractMic@buffer+1
 12526  0008DA  C0F0  F070         	movff	LORAWAN_RxDone@bufferLength,ExtractMic@bufferLength
 12527  0008DE  EC46  F046         	call	_ExtractMic	;wreg free
 12528  0008E2  C06E  F169         	movff	?_ExtractMic,LORAWAN_RxDone@extractedMic
 12529  0008E6  C06F  F16A         	movff	?_ExtractMic+1,LORAWAN_RxDone@extractedMic+1
 12530  0008EA  C070  F16B         	movff	?_ExtractMic+2,LORAWAN_RxDone@extractedMic+2
 12531  0008EE  C071  F16C         	movff	?_ExtractMic+3,LORAWAN_RxDone@extractedMic+3
 12532                           
 12533                           ;lorawan.c: 1336: if (computedMic != extractedMic)
 12534  0008F2  0101               	movlb	1	; () banked
 12535  0008F4  5169               	movf	LORAWAN_RxDone@extractedMic& (0+255),w,b
 12536  0008F6  0101               	movlb	1	; () banked
 12537  0008F8  1971               	xorwf	LORAWAN_RxDone@computedMic& (0+255),w,b
 12538  0008FA  E110               	bnz	u18360
 12539  0008FC  0101               	movlb	1	; () banked
 12540  0008FE  516A               	movf	(LORAWAN_RxDone@extractedMic+1)& (0+255),w,b
 12541  000900  0101               	movlb	1	; () banked
 12542  000902  1972               	xorwf	(LORAWAN_RxDone@computedMic+1)& (0+255),w,b
 12543  000904  E10B               	bnz	u18360
 12544  000906  0101               	movlb	1	; () banked
 12545  000908  516B               	movf	(LORAWAN_RxDone@extractedMic+2)& (0+255),w,b
 12546  00090A  0101               	movlb	1	; () banked
 12547  00090C  1973               	xorwf	(LORAWAN_RxDone@computedMic+2)& (0+255),w,b
 12548  00090E  E106               	bnz	u18360
 12549  000910  0101               	movlb	1	; () banked
 12550  000912  516C               	movf	(LORAWAN_RxDone@extractedMic+3)& (0+255),w,b
 12551  000914  0101               	movlb	1	; () banked
 12552  000916  1974               	xorwf	(LORAWAN_RxDone@computedMic+3)& (0+255),w,b
 12553  000918  B4D8               	btfsc	status,2,c
 12554  00091A  D00F               	goto	l15793
 12555  00091C                     u18360:
 12556                           
 12557                           ; BSR set to: 1
 12558                           ;lorawan.c: 1337: {
 12559                           ;lorawan.c: 1338: SetReceptionNotOkState();
 12560  00091C  EC26  F044         	call	_SetReceptionNotOkState	;wreg free
 12561                           
 12562                           ;lorawan.c: 1339: if (CLASS_C == loRa.deviceClass)
 12563  000920  0E02               	movlw	2
 12564  000922  0102               	movlb	2	; () banked
 12565  000924  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12566  000926  A4D8               	btfss	status,2,c
 12567  000928  0012               	return	
 12568                           
 12569                           ; BSR set to: 2
 12570                           ;lorawan.c: 1340: {
 12571                           ;lorawan.c: 1341: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12572  00092A  0102               	movlb	2	; () banked
 12573  00092C  5102               	movf	(_loRa+2)& (0+255),w,b
 12574  00092E  0BF0               	andlw	-16
 12575  000930  0909               	iorlw	9
 12576  000932  6F02               	movwf	(_loRa+2)& (0+255),b
 12577                           
 12578                           ; BSR set to: 2
 12579                           ;lorawan.c: 1342: LORAWAN_EnterContinuousReceive();
 12580  000934  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12581                           
 12582                           ;lorawan.c: 1343: }
 12583                           ;lorawan.c: 1344: return INVALID_PARAMETER;
 12584                           ;	Return value of _LORAWAN_RxDone is never used
 12585  000938  0012               	return	
 12586  00093A                     l15793:
 12587                           
 12588                           ;lorawan.c: 1345: }
 12589                           ;lorawan.c: 1348: if (hdr->members.fCnt >= loRa.fCntDown.members.valueLow)
 12590  00093A  0101               	movlb	1	; () banked
 12591  00093C  EE20 F006          	lfsr	2,6
 12592  000940  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12593  000942  26D9               	addwf	fsr2l,f,c
 12594  000944  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12595  000946  22DA               	addwfc	fsr2h,f,c
 12596  000948  0102               	movlb	2	; () banked
 12597  00094A  510A               	movf	(_loRa+10)& (0+255),w,b
 12598  00094C  5CDE               	subwf	postinc2,w,c
 12599  00094E  0102               	movlb	2	; () banked
 12600  000950  510B               	movf	(_loRa+11)& (0+255),w,b
 12601  000952  58DE               	subwfb	postinc2,w,c
 12602  000954  A0D8               	btfss	status,0,c
 12603  000956  D06C               	goto	l15821
 12604                           
 12605                           ; BSR set to: 2
 12606                           ;lorawan.c: 1349: {
 12607                           ;lorawan.c: 1350: if ((hdr->members.fCnt - loRa.fCntDown.members.valueLow) > loRa.protoc
      +                          olParameters.maxFcntGap)
 12608  000958  0101               	movlb	1	; () banked
 12609  00095A  EE20 F006          	lfsr	2,6
 12610  00095E  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12611  000960  26D9               	addwf	fsr2l,f,c
 12612  000962  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12613  000964  22DA               	addwfc	fsr2h,f,c
 12614  000966  CFDE F0F1          	movff	postinc2,??_LORAWAN_RxDone
 12615  00096A  CFDD F0F2          	movff	postdec2,??_LORAWAN_RxDone+1
 12616  00096E  EE22  F00A         	lfsr	2,_loRa+10
 12617  000972  CFDE F0F3          	movff	postinc2,??_LORAWAN_RxDone+2
 12618  000976  CFDD F0F4          	movff	postdec2,??_LORAWAN_RxDone+3
 12619  00097A  0100               	movlb	0	; () banked
 12620  00097C  1FF3               	comf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12621  00097E  1FF4               	comf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12622  000980  4BF3               	infsnz	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12623  000982  2BF4               	incf	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12624  000984  0100               	movlb	0	; () banked
 12625  000986  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12626  000988  0100               	movlb	0	; () banked
 12627  00098A  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12628  00098C  0100               	movlb	0	; () banked
 12629  00098E  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 12630  000990  0100               	movlb	0	; () banked
 12631  000992  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12632  000994  0100               	movlb	0	; () banked
 12633  000996  51F3               	movf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12634  000998  0102               	movlb	2	; () banked
 12635  00099A  5D9C               	subwf	(_loRa+156)& (0+255),w,b
 12636  00099C  0100               	movlb	0	; () banked
 12637  00099E  51F4               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 12638  0009A0  0102               	movlb	2	; () banked
 12639  0009A2  599D               	subwfb	(_loRa+157)& (0+255),w,b
 12640  0009A4  B0D8               	btfsc	status,0,c
 12641  0009A6  D038               	goto	l15819
 12642                           
 12643                           ; BSR set to: 2
 12644                           ;lorawan.c: 1351: {
 12645                           ;lorawan.c: 1352: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 12646  0009A8  0102               	movlb	2	; () banked
 12647  0009AA  9100               	bcf	_loRa& (0+255),0,b
 12648                           
 12649                           ;lorawan.c: 1353: loRa.macStatus.macState = IDLE;
 12650  0009AC  0102               	movlb	2	; () banked
 12651  0009AE  9102               	bcf	(_loRa+2)& (0+255),0,b
 12652  0009B0  9302               	bcf	(_loRa+2)& (0+255),1,b
 12653  0009B2  9502               	bcf	(_loRa+2)& (0+255),2,b
 12654  0009B4  9702               	bcf	(_loRa+2)& (0+255),3,b
 12655                           
 12656                           ; BSR set to: 2
 12657                           ;lorawan.c: 1354: if (rxPayload.RxAppData != (0))
 12658  0009B6  0101               	movlb	1	; () banked
 12659  0009B8  5186               	movf	_rxPayload& (0+255),w,b
 12660  0009BA  0101               	movlb	1	; () banked
 12661  0009BC  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 12662  0009BE  B4D8               	btfsc	status,2,c
 12663  0009C0  D01A               	goto	l15805
 12664                           
 12665                           ; BSR set to: 1
 12666                           ;lorawan.c: 1355: {
 12667                           ;lorawan.c: 1356: loRa.lorawanMacStatus.synchronization = 0;
 12668  0009C2  0102               	movlb	2	; () banked
 12669  0009C4  9B00               	bcf	_loRa& (0+255),5,b
 12670                           
 12671                           ; BSR set to: 2
 12672                           ;lorawan.c: 1357: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 12673  0009C6  0E00               	movlw	0
 12674  0009C8  0100               	movlb	0	; () banked
 12675  0009CA  6F67               	movwf	RxDataDone@pData& (0+255),b
 12676  0009CC  0E00               	movlw	0
 12677  0009CE  0100               	movlb	0	; () banked
 12678  0009D0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 12679  0009D2  0E00               	movlw	0
 12680  0009D4  0100               	movlb	0	; () banked
 12681  0009D6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 12682  0009D8  0E00               	movlw	0
 12683  0009DA  0100               	movlb	0	; () banked
 12684  0009DC  6F6A               	movwf	RxDataDone@status& (0+255),b
 12685  0009DE  D801               	call	u18418
 12686  0009E0  D00A               	goto	l15805
 12687  0009E2                     u18418:
 12688  0009E2  0005               	push	
 12689  0009E4  6EFA               	movwf	pclath,c
 12690  0009E6  0101               	movlb	1	; () banked
 12691  0009E8  5186               	movf	_rxPayload& (0+255),w,b
 12692  0009EA  6EFD               	movwf	tosl,c
 12693  0009EC  5187               	movf	(_rxPayload+1)& (0+255),w,b
 12694  0009EE  6EFE               	movwf	tosh,c
 12695  0009F0  6AFF               	clrf	tosu,c
 12696  0009F2  50FA               	movf	pclath,w,c
 12697  0009F4  0012               	return		;indir
 12698  0009F6                     l15805:
 12699                           
 12700                           ;lorawan.c: 1358: }
 12701                           ;lorawan.c: 1359: loRa.macStatus.rxDone = 0;
 12702  0009F6  0102               	movlb	2	; () banked
 12703  0009F8  9303               	bcf	(_loRa+3)& (0+255),1,b
 12704                           
 12705                           ; BSR set to: 2
 12706                           ;lorawan.c: 1362: loRa.macStatus.rejoinNeeded = 1;
 12707  0009FA  0102               	movlb	2	; () banked
 12708  0009FC  8304               	bsf	(_loRa+4)& (0+255),1,b
 12709                           
 12710                           ; BSR set to: 2
 12711                           ;lorawan.c: 1363: if (CLASS_C == loRa.deviceClass)
 12712  0009FE  0E02               	movlw	2
 12713  000A00  0102               	movlb	2	; () banked
 12714  000A02  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12715  000A04  A4D8               	btfss	status,2,c
 12716  000A06  0012               	return	
 12717                           
 12718                           ; BSR set to: 2
 12719                           ;lorawan.c: 1364: {
 12720                           ;lorawan.c: 1365: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12721  000A08  0102               	movlb	2	; () banked
 12722  000A0A  5102               	movf	(_loRa+2)& (0+255),w,b
 12723  000A0C  0BF0               	andlw	-16
 12724  000A0E  0909               	iorlw	9
 12725  000A10  6F02               	movwf	(_loRa+2)& (0+255),b
 12726                           
 12727                           ; BSR set to: 2
 12728                           ;lorawan.c: 1366: LORAWAN_EnterContinuousReceive();
 12729  000A12  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12730                           
 12731                           ;lorawan.c: 1367: }
 12732                           ;lorawan.c: 1368: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12733                           ;	Return value of _LORAWAN_RxDone is never used
 12734  000A16  0012               	return	
 12735  000A18                     l15819:
 12736                           
 12737                           ;lorawan.c: 1370: else
 12738                           ;lorawan.c: 1371: {
 12739                           ;lorawan.c: 1372: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12740  000A18  0101               	movlb	1	; () banked
 12741  000A1A  EE20 F006          	lfsr	2,6
 12742  000A1E  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12743  000A20  26D9               	addwf	fsr2l,f,c
 12744  000A22  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12745  000A24  22DA               	addwfc	fsr2h,f,c
 12746  000A26  CFDE F20A          	movff	postinc2,_loRa+10
 12747  000A2A  CFDD F20B          	movff	postdec2,_loRa+11
 12748                           
 12749                           ; BSR set to: 1
 12750                           ;lorawan.c: 1373: }
 12751                           ;lorawan.c: 1374: }
 12752  000A2E  D030               	goto	l15839
 12753  000A30                     l15821:
 12754                           
 12755                           ;lorawan.c: 1375: else
 12756                           ;lorawan.c: 1376: {
 12757                           ;lorawan.c: 1377: if((hdr->members.fCnt == 0) && (loRa.fCntDown.members.valueLow == 0xFF
      +                          FF))
 12758  000A30  0101               	movlb	1	; () banked
 12759  000A32  EE20 F006          	lfsr	2,6
 12760  000A36  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12761  000A38  26D9               	addwf	fsr2l,f,c
 12762  000A3A  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12763  000A3C  22DA               	addwfc	fsr2h,f,c
 12764  000A3E  50DE               	movf	postinc2,w,c
 12765  000A40  10DE               	iorwf	postinc2,w,c
 12766  000A42  A4D8               	btfss	status,2,c
 12767  000A44  D016               	goto	l15829
 12768                           
 12769                           ; BSR set to: 1
 12770  000A46  0102               	movlb	2	; () banked
 12771  000A48  290A               	incf	(_loRa+10)& (0+255),w,b
 12772  000A4A  E113               	bnz	l15829
 12773  000A4C  0102               	movlb	2	; () banked
 12774  000A4E  290B               	incf	(_loRa+11)& (0+255),w,b
 12775  000A50  A4D8               	btfss	status,2,c
 12776  000A52  D00F               	goto	l15829
 12777                           
 12778                           ; BSR set to: 2
 12779                           ;lorawan.c: 1378: {
 12780                           ;lorawan.c: 1380: loRa.fCntDown.members.valueLow = hdr->members.fCnt;
 12781  000A54  0101               	movlb	1	; () banked
 12782  000A56  EE20 F006          	lfsr	2,6
 12783  000A5A  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12784  000A5C  26D9               	addwf	fsr2l,f,c
 12785  000A5E  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12786  000A60  22DA               	addwfc	fsr2h,f,c
 12787  000A62  CFDE F20A          	movff	postinc2,_loRa+10
 12788  000A66  CFDD F20B          	movff	postdec2,_loRa+11
 12789                           
 12790                           ; BSR set to: 1
 12791                           ;lorawan.c: 1381: loRa.fCntDown.members.valueHigh ++;
 12792  000A6A  0102               	movlb	2	; () banked
 12793  000A6C  4B0C               	infsnz	(_loRa+12)& (0+255),f,b
 12794  000A6E  2B0D               	incf	(_loRa+13)& (0+255),f,b
 12795                           
 12796                           ;lorawan.c: 1382: }
 12797  000A70  D00F               	goto	l15839
 12798  000A72                     l15829:
 12799                           
 12800                           ;lorawan.c: 1383: else
 12801                           ;lorawan.c: 1384: {
 12802                           ;lorawan.c: 1385: SetReceptionNotOkState();
 12803  000A72  EC26  F044         	call	_SetReceptionNotOkState	;wreg free
 12804                           
 12805                           ;lorawan.c: 1386: if (CLASS_C == loRa.deviceClass)
 12806  000A76  0E02               	movlw	2
 12807  000A78  0102               	movlb	2	; () banked
 12808  000A7A  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12809  000A7C  A4D8               	btfss	status,2,c
 12810  000A7E  0012               	return	
 12811                           
 12812                           ; BSR set to: 2
 12813                           ;lorawan.c: 1387: {
 12814                           ;lorawan.c: 1388: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12815  000A80  0102               	movlb	2	; () banked
 12816  000A82  5102               	movf	(_loRa+2)& (0+255),w,b
 12817  000A84  0BF0               	andlw	-16
 12818  000A86  0909               	iorlw	9
 12819  000A88  6F02               	movwf	(_loRa+2)& (0+255),b
 12820                           
 12821                           ; BSR set to: 2
 12822                           ;lorawan.c: 1389: LORAWAN_EnterContinuousReceive();
 12823  000A8A  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12824                           
 12825                           ;lorawan.c: 1390: }
 12826                           ;lorawan.c: 1392: return INVALID_PARAMETER;
 12827                           ;	Return value of _LORAWAN_RxDone is never used
 12828  000A8E  0012               	return	
 12829  000A90                     l15839:
 12830                           
 12831                           ;lorawan.c: 1393: }
 12832                           ;lorawan.c: 1394: }
 12833                           ;lorawan.c: 1396: if (loRa.fCntDown.value == (4294967295UL))
 12834  000A90  0102               	movlb	2	; () banked
 12835  000A92  290A               	incf	(_loRa+10)& (0+255),w,b
 12836  000A94  E119               	bnz	l15851
 12837  000A96  0102               	movlb	2	; () banked
 12838  000A98  290B               	incf	(_loRa+11)& (0+255),w,b
 12839  000A9A  E116               	bnz	l15851
 12840  000A9C  0102               	movlb	2	; () banked
 12841  000A9E  290C               	incf	(_loRa+12)& (0+255),w,b
 12842  000AA0  E113               	bnz	l15851
 12843  000AA2  0102               	movlb	2	; () banked
 12844  000AA4  290D               	incf	(_loRa+13)& (0+255),w,b
 12845  000AA6  A4D8               	btfss	status,2,c
 12846  000AA8  D00F               	goto	l15851
 12847                           
 12848                           ; BSR set to: 2
 12849                           ;lorawan.c: 1397: {
 12850                           ;lorawan.c: 1400: loRa.macStatus.rejoinNeeded = 1;
 12851  000AAA  0102               	movlb	2	; () banked
 12852  000AAC  8304               	bsf	(_loRa+4)& (0+255),1,b
 12853                           
 12854                           ; BSR set to: 2
 12855                           ;lorawan.c: 1401: if (CLASS_C == loRa.deviceClass)
 12856  000AAE  0E02               	movlw	2
 12857  000AB0  0102               	movlb	2	; () banked
 12858  000AB2  1912               	xorwf	(_loRa+18)& (0+255),w,b
 12859  000AB4  A4D8               	btfss	status,2,c
 12860  000AB6  0012               	return	
 12861                           
 12862                           ; BSR set to: 2
 12863                           ;lorawan.c: 1402: {
 12864                           ;lorawan.c: 1403: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 12865  000AB8  0102               	movlb	2	; () banked
 12866  000ABA  5102               	movf	(_loRa+2)& (0+255),w,b
 12867  000ABC  0BF0               	andlw	-16
 12868  000ABE  0909               	iorlw	9
 12869  000AC0  6F02               	movwf	(_loRa+2)& (0+255),b
 12870                           
 12871                           ; BSR set to: 2
 12872                           ;lorawan.c: 1404: LORAWAN_EnterContinuousReceive();
 12873  000AC2  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 12874                           
 12875                           ;lorawan.c: 1405: }
 12876                           ;lorawan.c: 1406: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 12877                           ;	Return value of _LORAWAN_RxDone is never used
 12878  000AC6  0012               	return	
 12879  000AC8                     l15851:
 12880                           
 12881                           ;lorawan.c: 1407: }
 12882                           ;lorawan.c: 1410: if (loRa.macStatus.macState == RX1_OPEN)
 12883  000AC8  0102               	movlb	2	; () banked
 12884  000ACA  5102               	movf	(_loRa+2)& (0+255),w,b
 12885  000ACC  0B0F               	andlw	15
 12886  000ACE  0A03               	xorlw	3
 12887  000AD0  A4D8               	btfss	status,2,c
 12888  000AD2  D004               	goto	l15855
 12889                           
 12890                           ; BSR set to: 2
 12891                           ;lorawan.c: 1411: {
 12892                           ;lorawan.c: 1412: SwTimerStop (loRa.receiveWindow2TimerId);
 12893  000AD4  0102               	movlb	2	; () banked
 12894  000AD6  51E5               	movf	(_loRa+229)& (0+255),w,b
 12895  000AD8  EC61  F04F         	call	_SwTimerStop
 12896  000ADC                     l15855:
 12897                           
 12898                           ;lorawan.c: 1413: }
 12899                           ;lorawan.c: 1415: loRa.counterRepetitionsUnconfirmedUplink = 1;
 12900  000ADC  0E01               	movlw	1
 12901  000ADE  0102               	movlb	2	; () banked
 12902  000AE0  6FD8               	movwf	(_loRa+216)& (0+255),b
 12903                           
 12904                           ; BSR set to: 2
 12905                           ;lorawan.c: 1417: CheckFlags (hdr);
 12906  000AE2  C178  F064         	movff	LORAWAN_RxDone@hdr,CheckFlags@hdr
 12907  000AE6  C179  F065         	movff	LORAWAN_RxDone@hdr+1,CheckFlags@hdr+1
 12908  000AEA  EC73  F048         	call	_CheckFlags	;wreg free
 12909                           
 12910                           ;lorawan.c: 1419: if (hdr->members.fCtrl.fOptsLen != 0)
 12911  000AEE  0101               	movlb	1	; () banked
 12912  000AF0  EE20 F005          	lfsr	2,5
 12913  000AF4  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12914  000AF6  26D9               	addwf	fsr2l,f,c
 12915  000AF8  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12916  000AFA  22DA               	addwfc	fsr2h,f,c
 12917  000AFC  0101               	movlb	1	; () banked
 12918  000AFE  50DF               	movf	223,w,c
 12919  000B00  0B0F               	andlw	15
 12920  000B02  0900               	iorlw	0
 12921  000B04  B4D8               	btfsc	status,2,c
 12922  000B06  D01D               	goto	l15863
 12923                           
 12924                           ; BSR set to: 1
 12925                           ;lorawan.c: 1420: {
 12926                           ;lorawan.c: 1421: buffer = MacExecuteCommands(hdr->members.MacCommands, hdr->members.fCt
      +                          rl.fOptsLen);
 12927  000B08  0E08               	movlw	8
 12928  000B0A  0101               	movlb	1	; () banked
 12929  000B0C  2578               	addwf	LORAWAN_RxDone@hdr& (0+255),w,b
 12930  000B0E  0100               	movlb	0	; () banked
 12931  000B10  6FB4               	movwf	MacExecuteCommands@buffer& (0+255),b
 12932  000B12  0E00               	movlw	0
 12933  000B14  0101               	movlb	1	; () banked
 12934  000B16  2179               	addwfc	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12935  000B18  0100               	movlb	0	; () banked
 12936  000B1A  6FB5               	movwf	(MacExecuteCommands@buffer+1)& (0+255),b
 12937  000B1C  0101               	movlb	1	; () banked
 12938  000B1E  EE20 F005          	lfsr	2,5
 12939  000B22  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12940  000B24  26D9               	addwf	fsr2l,f,c
 12941  000B26  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12942  000B28  22DA               	addwfc	fsr2h,f,c
 12943  000B2A  0101               	movlb	1	; () banked
 12944  000B2C  50DF               	movf	223,w,c
 12945  000B2E  0B0F               	andlw	15
 12946  000B30  0100               	movlb	0	; () banked
 12947  000B32  6FB6               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 12948  000B34  EC2B  F01A         	call	_MacExecuteCommands	;wreg free
 12949  000B38  C0B4  F0EE         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 12950  000B3C  C0B5  F0EF         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 12951                           
 12952                           ;lorawan.c: 1422: }
 12953  000B40  D00A               	goto	l15865
 12954  000B42                     l15863:
 12955                           
 12956                           ;lorawan.c: 1423: else
 12957                           ;lorawan.c: 1424: {
 12958                           ;lorawan.c: 1425: buffer = buffer + 8;
 12959  000B42  0E08               	movlw	8
 12960  000B44  0100               	movlb	0	; () banked
 12961  000B46  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 12962  000B48  0100               	movlb	0	; () banked
 12963  000B4A  6FEE               	movwf	LORAWAN_RxDone@buffer& (0+255),b
 12964  000B4C  0E00               	movlw	0
 12965  000B4E  0100               	movlb	0	; () banked
 12966  000B50  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 12967  000B52  0100               	movlb	0	; () banked
 12968  000B54  6FEF               	movwf	(LORAWAN_RxDone@buffer+1)& (0+255),b
 12969  000B56                     l15865:
 12970                           
 12971                           ;lorawan.c: 1426: }
 12972                           ;lorawan.c: 1427: if ( (sizeof(extractedMic) + hdr->members.fCtrl.fOptsLen + 8) != buffe
      +                          rLength)
 12973  000B56  0100               	movlb	0	; () banked
 12974  000B58  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 12975  000B5A  0100               	movlb	0	; () banked
 12976  000B5C  6FF1               	movwf	??_LORAWAN_RxDone& (0+255),b
 12977  000B5E  6BF2               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 12978  000B60  0101               	movlb	1	; () banked
 12979  000B62  EE20 F005          	lfsr	2,5
 12980  000B66  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 12981  000B68  26D9               	addwf	fsr2l,f,c
 12982  000B6A  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 12983  000B6C  22DA               	addwfc	fsr2h,f,c
 12984  000B6E  0101               	movlb	1	; () banked
 12985  000B70  50DF               	movf	223,w,c
 12986  000B72  0B0F               	andlw	15
 12987  000B74  0100               	movlb	0	; () banked
 12988  000B76  6FF3               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 12989  000B78  6BF4               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 12990  000B7A  0E0C               	movlw	12
 12991  000B7C  0100               	movlb	0	; () banked
 12992  000B7E  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 12993  000B80  0E00               	movlw	0
 12994  000B82  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 12995  000B84  0100               	movlb	0	; () banked
 12996  000B86  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 12997  000B88  0100               	movlb	0	; () banked
 12998  000B8A  19F3               	xorwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 12999  000B8C  E106               	bnz	u18500
 13000  000B8E  0100               	movlb	0	; () banked
 13001  000B90  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13002  000B92  0100               	movlb	0	; () banked
 13003  000B94  19F4               	xorwf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13004  000B96  B4D8               	btfsc	status,2,c
 13005  000B98  D0BE               	goto	l15891
 13006  000B9A                     u18500:
 13007                           
 13008                           ; BSR set to: 0
 13009                           ;lorawan.c: 1428: {
 13010                           ;lorawan.c: 1429: fPort = *(buffer++);
 13011  000B9A  C0EE  FFD9         	movff	LORAWAN_RxDone@buffer,fsr2l
 13012  000B9E  C0EF  FFDA         	movff	LORAWAN_RxDone@buffer+1,fsr2h
 13013  000BA2  50DF               	movf	indf2,w,c
 13014  000BA4  0101               	movlb	1	; () banked
 13015  000BA6  6F66               	movwf	LORAWAN_RxDone@fPort& (0+255),b
 13016                           
 13017                           ; BSR set to: 1
 13018  000BA8  0100               	movlb	0	; () banked
 13019  000BAA  4BEE               	infsnz	LORAWAN_RxDone@buffer& (0+255),f,b
 13020  000BAC  2BEF               	incf	(LORAWAN_RxDone@buffer+1)& (0+255),f,b
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;lorawan.c: 1431: frmPayloadLength = bufferLength - 8 - hdr->members.fCtrl.fOptsLen - si
      +                          zeof (extractedMic);
 13024  000BAE  0101               	movlb	1	; () banked
 13025  000BB0  EE20 F005          	lfsr	2,5
 13026  000BB4  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13027  000BB6  26D9               	addwf	fsr2l,f,c
 13028  000BB8  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13029  000BBA  22DA               	addwfc	fsr2h,f,c
 13030  000BBC  0101               	movlb	1	; () banked
 13031  000BBE  50DF               	movf	223,w,c
 13032  000BC0  0B0F               	andlw	15
 13033  000BC2  0800               	sublw	0
 13034  000BC4  0100               	movlb	0	; () banked
 13035  000BC6  25F0               	addwf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13036  000BC8  0FF4               	addlw	244
 13037  000BCA  0101               	movlb	1	; () banked
 13038  000BCC  6F77               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13039                           
 13040                           ; BSR set to: 1
 13041                           ;lorawan.c: 1432: bufferIndex = 16 + 8 + hdr->members.fCtrl.fOptsLen + sizeof (fPort);
 13042  000BCE  0101               	movlb	1	; () banked
 13043  000BD0  EE20 F005          	lfsr	2,5
 13044  000BD4  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13045  000BD6  26D9               	addwf	fsr2l,f,c
 13046  000BD8  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13047  000BDA  22DA               	addwfc	fsr2h,f,c
 13048  000BDC  0101               	movlb	1	; () banked
 13049  000BDE  50DF               	movf	223,w,c
 13050  000BE0  0B0F               	andlw	15
 13051  000BE2  0F19               	addlw	25
 13052  000BE4  0101               	movlb	1	; () banked
 13053  000BE6  6F6D               	movwf	LORAWAN_RxDone@bufferIndex& (0+255),b
 13054                           
 13055                           ; BSR set to: 1
 13056                           ;lorawan.c: 1434: if (fPort != 0)
 13057  000BE8  0101               	movlb	1	; () banked
 13058  000BEA  5166               	movf	LORAWAN_RxDone@fPort& (0+255),w,b
 13059  000BEC  0101               	movlb	1	; () banked
 13060  000BEE  B4D8               	btfsc	status,2,c
 13061  000BF0  D02F               	goto	l15881
 13062                           
 13063                           ; BSR set to: 1
 13064                           ;lorawan.c: 1435: {
 13065                           ;lorawan.c: 1436: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.applicationSessionKey, bufferIndex, radioBuffer, 0);
 13066  000BF2  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13067  000BF6  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13068  000BFA  0101               	movlb	1	; () banked
 13069  000BFC  0577               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13070  000BFE  0100               	movlb	0	; () banked
 13071  000C00  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13072  000C02  0E01               	movlw	1
 13073  000C04  0100               	movlb	0	; () banked
 13074  000C06  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 13075  000C08  C20A  F0A9         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13076  000C0C  C20B  F0AA         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13077  000C10  C20C  F0AB         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13078  000C14  C20D  F0AC         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13079  000C18  0E32               	movlw	low (_loRa+50)
 13080  000C1A  0100               	movlb	0	; () banked
 13081  000C1C  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 13082  000C1E  0E02               	movlw	high (_loRa+50)
 13083  000C20  0100               	movlb	0	; () banked
 13084  000C22  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13085  000C24  C16D  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13086  000C28  0EEF               	movlw	low _radioBuffer
 13087  000C2A  0100               	movlb	0	; () banked
 13088  000C2C  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13089  000C2E  0E05               	movlw	high _radioBuffer
 13090  000C30  0100               	movlb	0	; () banked
 13091  000C32  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13092  000C34  0E00               	movlw	0
 13093  000C36  0100               	movlb	0	; () banked
 13094  000C38  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13095  000C3A  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 13096                           
 13097                           ;lorawan.c: 1437: packet = buffer - 1;
 13098  000C3E  0EFF               	movlw	255
 13099  000C40  0100               	movlb	0	; () banked
 13100  000C42  25EE               	addwf	LORAWAN_RxDone@buffer& (0+255),w,b
 13101  000C44  0101               	movlb	1	; () banked
 13102  000C46  6F6F               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13103  000C48  0EFF               	movlw	255
 13104  000C4A  0100               	movlb	0	; () banked
 13105  000C4C  21EF               	addwfc	(LORAWAN_RxDone@buffer+1)& (0+255),w,b
 13106  000C4E  D060               	goto	L7
 13107  000C50                     l15881:
 13108                           
 13109                           ; BSR set to: 1
 13110                           ;lorawan.c: 1439: else
 13111                           ;lorawan.c: 1440: {
 13112                           ;lorawan.c: 1442: if(bufferLength > (13 + hdr->members.fCtrl.fOptsLen))
 13113  000C50  0100               	movlb	0	; () banked
 13114  000C52  51F0               	movf	LORAWAN_RxDone@bufferLength& (0+255),w,b
 13115  000C54  0100               	movlb	0	; () banked
 13116  000C56  6FF1               	movwf	??_LORAWAN_RxDone& (0+255),b
 13117  000C58  6BF2               	clrf	(??_LORAWAN_RxDone+1)& (0+255),b
 13118  000C5A  0101               	movlb	1	; () banked
 13119  000C5C  EE20 F005          	lfsr	2,5
 13120  000C60  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13121  000C62  26D9               	addwf	fsr2l,f,c
 13122  000C64  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13123  000C66  22DA               	addwfc	fsr2h,f,c
 13124  000C68  0101               	movlb	1	; () banked
 13125  000C6A  50DF               	movf	223,w,c
 13126  000C6C  0B0F               	andlw	15
 13127  000C6E  0100               	movlb	0	; () banked
 13128  000C70  6FF3               	movwf	(??_LORAWAN_RxDone+2)& (0+255),b
 13129  000C72  6BF4               	clrf	(??_LORAWAN_RxDone+3)& (0+255),b
 13130  000C74  0E0D               	movlw	13
 13131  000C76  0100               	movlb	0	; () banked
 13132  000C78  27F3               	addwf	(??_LORAWAN_RxDone+2)& (0+255),f,b
 13133  000C7A  0E00               	movlw	0
 13134  000C7C  23F4               	addwfc	(??_LORAWAN_RxDone+3)& (0+255),f,b
 13135  000C7E  0100               	movlb	0	; () banked
 13136  000C80  51F1               	movf	??_LORAWAN_RxDone& (0+255),w,b
 13137  000C82  0100               	movlb	0	; () banked
 13138  000C84  5DF3               	subwf	(??_LORAWAN_RxDone+2)& (0+255),w,b
 13139  000C86  0100               	movlb	0	; () banked
 13140  000C88  51F4               	movf	(??_LORAWAN_RxDone+3)& (0+255),w,b
 13141  000C8A  0A80               	xorlw	128
 13142  000C8C  0100               	movlb	0	; () banked
 13143  000C8E  6FF5               	movwf	(??_LORAWAN_RxDone+4)& (0+255),b
 13144  000C90  0100               	movlb	0	; () banked
 13145  000C92  51F2               	movf	(??_LORAWAN_RxDone+1)& (0+255),w,b
 13146  000C94  0A80               	xorlw	128
 13147  000C96  0100               	movlb	0	; () banked
 13148  000C98  59F5               	subwfb	(??_LORAWAN_RxDone+4)& (0+255),w,b
 13149  000C9A  B0D8               	btfsc	status,0,c
 13150  000C9C  D03C               	goto	l15891
 13151                           
 13152                           ; BSR set to: 0
 13153                           ;lorawan.c: 1443: {
 13154                           ;lorawan.c: 1445: EncryptFRMPayload (buffer, frmPayloadLength - 1, 1, loRa.fCntDown.valu
      +                          e, loRa.activationParameters.networkSessionKey, bufferIndex, radioBuffer, 0);
 13155  000C9E  C0EE  F0A5         	movff	LORAWAN_RxDone@buffer,EncryptFRMPayload@buffer
 13156  000CA2  C0EF  F0A6         	movff	LORAWAN_RxDone@buffer+1,EncryptFRMPayload@buffer+1
 13157  000CA6  0101               	movlb	1	; () banked
 13158  000CA8  0577               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13159  000CAA  0100               	movlb	0	; () banked
 13160  000CAC  6FA7               	movwf	EncryptFRMPayload@bufferLength& (0+255),b
 13161  000CAE  0E01               	movlw	1
 13162  000CB0  0100               	movlb	0	; () banked
 13163  000CB2  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 13164  000CB4  C20A  F0A9         	movff	_loRa+10,EncryptFRMPayload@frameCounter
 13165  000CB8  C20B  F0AA         	movff	_loRa+11,EncryptFRMPayload@frameCounter+1
 13166  000CBC  C20C  F0AB         	movff	_loRa+12,EncryptFRMPayload@frameCounter+2
 13167  000CC0  C20D  F0AC         	movff	_loRa+13,EncryptFRMPayload@frameCounter+3
 13168  000CC4  0E22               	movlw	low (_loRa+34)
 13169  000CC6  0100               	movlb	0	; () banked
 13170  000CC8  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 13171  000CCA  0E02               	movlw	high (_loRa+34)
 13172  000CCC  0100               	movlb	0	; () banked
 13173  000CCE  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 13174  000CD0  C16D  F0AF         	movff	LORAWAN_RxDone@bufferIndex,EncryptFRMPayload@macBufferIndex
 13175  000CD4  0EEF               	movlw	low _radioBuffer
 13176  000CD6  0100               	movlb	0	; () banked
 13177  000CD8  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 13178  000CDA  0E05               	movlw	high _radioBuffer
 13179  000CDC  0100               	movlb	0	; () banked
 13180  000CDE  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 13181  000CE0  0E00               	movlw	0
 13182  000CE2  0100               	movlb	0	; () banked
 13183  000CE4  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 13184  000CE6  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 13185                           
 13186                           ;lorawan.c: 1446: buffer = MacExecuteCommands(buffer, frmPayloadLength - 1 );
 13187  000CEA  C0EE  F0B4         	movff	LORAWAN_RxDone@buffer,MacExecuteCommands@buffer
 13188  000CEE  C0EF  F0B5         	movff	LORAWAN_RxDone@buffer+1,MacExecuteCommands@buffer+1
 13189  000CF2  0101               	movlb	1	; () banked
 13190  000CF4  0577               	decf	LORAWAN_RxDone@frmPayloadLength& (0+255),w,b
 13191  000CF6  0100               	movlb	0	; () banked
 13192  000CF8  6FB6               	movwf	MacExecuteCommands@fOptsLen& (0+255),b
 13193  000CFA  EC2B  F01A         	call	_MacExecuteCommands	;wreg free
 13194  000CFE  C0B4  F0EE         	movff	?_MacExecuteCommands,LORAWAN_RxDone@buffer
 13195  000D02  C0B5  F0EF         	movff	?_MacExecuteCommands+1,LORAWAN_RxDone@buffer+1
 13196  000D06  D007               	goto	l15891
 13197  000D08                     l15889:
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;lorawan.c: 1450: packet = (0);
 13201  000D08  0E00               	movlw	0
 13202  000D0A  0101               	movlb	1	; () banked
 13203  000D0C  6F6F               	movwf	LORAWAN_RxDone@packet& (0+255),b
 13204  000D0E  0E00               	movlw	0
 13205  000D10                     L7:
 13206  000D10  0101               	movlb	1	; () banked
 13207  000D12  6F70               	movwf	(LORAWAN_RxDone@packet+1)& (0+255),b
 13208                           
 13209                           ; BSR set to: 1
 13210                           ;lorawan.c: 1451: }
 13211                           ;lorawan.c: 1452: }
 13212  000D14  D004               	goto	l15895
 13213  000D16                     l15891:
 13214                           
 13215                           ;lorawan.c: 1453: else
 13216                           ;lorawan.c: 1454: {
 13217                           ;lorawan.c: 1455: frmPayloadLength = 0;
 13218  000D16  0E00               	movlw	0
 13219  000D18  0101               	movlb	1	; () banked
 13220  000D1A  6F77               	movwf	LORAWAN_RxDone@frmPayloadLength& (0+255),b
 13221  000D1C  D7F5               	goto	l15889
 13222  000D1E                     l15895:
 13223                           
 13224                           ; BSR set to: 1
 13225                           ;lorawan.c: 1457: }
 13226                           ;lorawan.c: 1459: loRa.counterRepetitionsUnconfirmedUplink = 1;
 13227  000D1E  0E01               	movlw	1
 13228  000D20  0102               	movlb	2	; () banked
 13229  000D22  6FD8               	movwf	(_loRa+216)& (0+255),b
 13230                           
 13231                           ; BSR set to: 2
 13232                           ;lorawan.c: 1461: loRa.adrAckCnt = 0;
 13233  000D24  0E00               	movlw	0
 13234  000D26  0102               	movlb	2	; () banked
 13235  000D28  6FD1               	movwf	(_loRa+209)& (0+255),b
 13236  000D2A  0E00               	movlw	0
 13237  000D2C  6FD0               	movwf	(_loRa+208)& (0+255),b
 13238                           
 13239                           ; BSR set to: 2
 13240                           ;lorawan.c: 1462: loRa.counterAdrAckDelay = 0;
 13241  000D2E  0E00               	movlw	0
 13242  000D30  0102               	movlb	2	; () banked
 13243  000D32  6FEE               	movwf	(_loRa+238)& (0+255),b
 13244                           
 13245                           ; BSR set to: 2
 13246                           ;lorawan.c: 1463: loRa.lorawanMacStatus.adrAckRequest = 0;
 13247  000D34  0102               	movlb	2	; () banked
 13248  000D36  9900               	bcf	_loRa& (0+255),4,b
 13249                           
 13250                           ; BSR set to: 2
 13251                           ;lorawan.c: 1465: loRa.macStatus.rxDone = 1;
 13252  000D38  0102               	movlb	2	; () banked
 13253  000D3A  8303               	bsf	(_loRa+3)& (0+255),1,b
 13254                           
 13255                           ; BSR set to: 2
 13256                           ;lorawan.c: 1467: if ( loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage == 1 )
 13257  000D3C  0102               	movlb	2	; () banked
 13258  000D3E  A100               	btfss	_loRa& (0+255),0,b
 13259  000D40  D062               	goto	l2124
 13260                           
 13261                           ; BSR set to: 2
 13262                           ;lorawan.c: 1468: {
 13263                           ;lorawan.c: 1469: if (hdr->members.fCtrl.ack == 1)
 13264  000D42  0101               	movlb	1	; () banked
 13265  000D44  EE20 F005          	lfsr	2,5
 13266  000D48  5178               	movf	LORAWAN_RxDone@hdr& (0+255),w,b
 13267  000D4A  26D9               	addwf	fsr2l,f,c
 13268  000D4C  5179               	movf	(LORAWAN_RxDone@hdr+1)& (0+255),w,b
 13269  000D4E  22DA               	addwfc	fsr2h,f,c
 13270  000D50  0101               	movlb	1	; () banked
 13271  000D52  AADF               	btfss	indf2,5,c
 13272  000D54  D055               	goto	l15935
 13273                           
 13274                           ; BSR set to: 1
 13275                           ;lorawan.c: 1470: {
 13276                           ;lorawan.c: 1471: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 13277  000D56  0102               	movlb	2	; () banked
 13278  000D58  9100               	bcf	_loRa& (0+255),0,b
 13279                           
 13280                           ;lorawan.c: 1472: loRa.macStatus.macState = IDLE;
 13281  000D5A  0102               	movlb	2	; () banked
 13282  000D5C  9102               	bcf	(_loRa+2)& (0+255),0,b
 13283  000D5E  9302               	bcf	(_loRa+2)& (0+255),1,b
 13284  000D60  9502               	bcf	(_loRa+2)& (0+255),2,b
 13285  000D62  9702               	bcf	(_loRa+2)& (0+255),3,b
 13286                           
 13287                           ; BSR set to: 2
 13288                           ;lorawan.c: 1473: if (rxPayload.RxAppData != (0))
 13289  000D64  0101               	movlb	1	; () banked
 13290  000D66  5186               	movf	_rxPayload& (0+255),w,b
 13291  000D68  0101               	movlb	1	; () banked
 13292  000D6A  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 13293  000D6C  B4D8               	btfsc	status,2,c
 13294  000D6E  D017               	goto	l15917
 13295                           
 13296                           ; BSR set to: 1
 13297                           ;lorawan.c: 1474: {
 13298                           ;lorawan.c: 1475: loRa.lorawanMacStatus.synchronization = 0;
 13299  000D70  0102               	movlb	2	; () banked
 13300  000D72  9B00               	bcf	_loRa& (0+255),5,b
 13301                           
 13302                           ; BSR set to: 2
 13303                           ;lorawan.c: 1476: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13304  000D74  C16F  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 13305  000D78  C170  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 13306  000D7C  C177  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 13307  000D80  0E01               	movlw	1
 13308  000D82  0100               	movlb	0	; () banked
 13309  000D84  6F6A               	movwf	RxDataDone@status& (0+255),b
 13310  000D86  D801               	call	u18568
 13311  000D88  D00A               	goto	l15917
 13312  000D8A                     u18568:
 13313  000D8A  0005               	push	
 13314  000D8C  6EFA               	movwf	pclath,c
 13315  000D8E  0101               	movlb	1	; () banked
 13316  000D90  5186               	movf	_rxPayload& (0+255),w,b
 13317  000D92  6EFD               	movwf	tosl,c
 13318  000D94  5187               	movf	(_rxPayload+1)& (0+255),w,b
 13319  000D96  6EFE               	movwf	tosh,c
 13320  000D98  6AFF               	clrf	tosu,c
 13321  000D9A  50FA               	movf	pclath,w,c
 13322  000D9C  0012               	return		;indir
 13323  000D9E                     l15917:
 13324                           
 13325                           ;lorawan.c: 1477: }
 13326                           ;lorawan.c: 1478: loRa.macStatus.rxDone = 0;
 13327  000D9E  0102               	movlb	2	; () banked
 13328  000DA0  9303               	bcf	(_loRa+3)& (0+255),1,b
 13329                           
 13330                           ; BSR set to: 2
 13331                           ;lorawan.c: 1479: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13332  000DA2  0102               	movlb	2	; () banked
 13333  000DA4  AB02               	btfss	(_loRa+2)& (0+255),5,b
 13334  000DA6  D081               	goto	l15959
 13335                           
 13336                           ; BSR set to: 2
 13337  000DA8  0102               	movlb	2	; () banked
 13338  000DAA  BB00               	btfsc	_loRa& (0+255),5,b
 13339  000DAC  D07E               	goto	l15959
 13340                           
 13341                           ; BSR set to: 2
 13342  000DAE  0102               	movlb	2	; () banked
 13343  000DB0  B300               	btfsc	_loRa& (0+255),1,b
 13344  000DB2  D003               	goto	l15927
 13345                           
 13346                           ; BSR set to: 2
 13347  000DB4  0102               	movlb	2	; () banked
 13348  000DB6  A700               	btfss	_loRa& (0+255),3,b
 13349  000DB8  D078               	goto	l15959
 13350  000DBA                     l15927:
 13351                           
 13352                           ; BSR set to: 2
 13353                           ;lorawan.c: 1480: {
 13354                           ;lorawan.c: 1481: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 13355  000DBA  0E01               	movlw	1
 13356  000DBC  0100               	movlb	0	; () banked
 13357  000DBE  6FB3               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13358  000DC0  0E67               	movlw	low LORAWAN_RxDone@channelIndex
 13359  000DC2  0100               	movlb	0	; () banked
 13360  000DC4  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13361  000DC6  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 13362  000DC8  0100               	movlb	0	; () banked
 13363  000DCA  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13364  000DCC  0102               	movlb	2	; () banked
 13365  000DCE  51ED               	movf	(_loRa+237)& (0+255),w,b
 13366  000DD0  EC29  F032         	call	_SearchAvailableChannel
 13367  000DD4  0900               	iorlw	0
 13368  000DD6  A4D8               	btfss	status,2,c
 13369  000DD8  D010               	goto	l15933
 13370                           
 13371                           ;lorawan.c: 1482: {
 13372                           ;lorawan.c: 1483: LORAWAN_Send (0, 0, 0, 0);
 13373  000DDA  0E00               	movlw	0
 13374  000DDC  0100               	movlb	0	; () banked
 13375  000DDE  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
 13376  000DE0  0E00               	movlw	0
 13377  000DE2  0100               	movlb	0	; () banked
 13378  000DE4  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
 13379  000DE6  0E00               	movlw	0
 13380  000DE8  0100               	movlb	0	; () banked
 13381  000DEA  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13382  000DEC  0E00               	movlw	0
 13383  000DEE  0100               	movlb	0	; () banked
 13384  000DF0  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13385  000DF2  0E00               	movlw	0
 13386  000DF4  ECE1  F03B         	call	_LORAWAN_Send
 13387  000DF8  D053               	goto	l15955
 13388  000DFA                     l15933:
 13389                           
 13390                           ;lorawan.c: 1486: else
 13391                           ;lorawan.c: 1487: {
 13392                           ;lorawan.c: 1489: StartReTxTimer();
 13393  000DFA  EC1A  F02C         	call	_StartReTxTimer	;wreg free
 13394                           
 13395                           ;lorawan.c: 1490: }
 13396                           ;lorawan.c: 1491: }
 13397                           ;lorawan.c: 1492: }
 13398  000DFE  D055               	goto	l15959
 13399  000E00                     l15935:
 13400                           
 13401                           ;lorawan.c: 1494: else
 13402                           ;lorawan.c: 1495: {
 13403                           ;lorawan.c: 1496: UpdateRetransmissionAckTimeoutState ();
 13404  000E00  EC08  F046         	call	_UpdateRetransmissionAckTimeoutState	;wreg free
 13405                           
 13406                           ;lorawan.c: 1497: }
 13407                           ;lorawan.c: 1498: }
 13408  000E04  D052               	goto	l15959
 13409  000E06                     l2124:
 13410                           
 13411                           ; BSR set to: 2
 13412                           ;lorawan.c: 1499: else
 13413                           ;lorawan.c: 1500: {
 13414                           ;lorawan.c: 1501: loRa.macStatus.macState = IDLE;
 13415  000E06  0102               	movlb	2	; () banked
 13416  000E08  9102               	bcf	(_loRa+2)& (0+255),0,b
 13417  000E0A  9302               	bcf	(_loRa+2)& (0+255),1,b
 13418  000E0C  9502               	bcf	(_loRa+2)& (0+255),2,b
 13419  000E0E  9702               	bcf	(_loRa+2)& (0+255),3,b
 13420                           
 13421                           ; BSR set to: 2
 13422                           ;lorawan.c: 1503: if (rxPayload.RxAppData != (0))
 13423  000E10  0101               	movlb	1	; () banked
 13424  000E12  5186               	movf	_rxPayload& (0+255),w,b
 13425  000E14  0101               	movlb	1	; () banked
 13426  000E16  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 13427  000E18  B4D8               	btfsc	status,2,c
 13428  000E1A  D017               	goto	l15943
 13429                           
 13430                           ; BSR set to: 1
 13431                           ;lorawan.c: 1504: {
 13432                           ;lorawan.c: 1505: loRa.lorawanMacStatus.synchronization = 0;
 13433  000E1C  0102               	movlb	2	; () banked
 13434  000E1E  9B00               	bcf	_loRa& (0+255),5,b
 13435                           
 13436                           ; BSR set to: 2
 13437                           ;lorawan.c: 1506: rxPayload.RxAppData (packet, frmPayloadLength, MAC_OK);
 13438  000E20  C16F  F067         	movff	LORAWAN_RxDone@packet,RxDataDone@pData
 13439  000E24  C170  F068         	movff	LORAWAN_RxDone@packet+1,RxDataDone@pData+1
 13440  000E28  C177  F069         	movff	LORAWAN_RxDone@frmPayloadLength,RxDataDone@dataLength
 13441  000E2C  0E01               	movlw	1
 13442  000E2E  0100               	movlb	0	; () banked
 13443  000E30  6F6A               	movwf	RxDataDone@status& (0+255),b
 13444  000E32  D801               	call	u18638
 13445  000E34  D00A               	goto	l15943
 13446  000E36                     u18638:
 13447  000E36  0005               	push	
 13448  000E38  6EFA               	movwf	pclath,c
 13449  000E3A  0101               	movlb	1	; () banked
 13450  000E3C  5186               	movf	_rxPayload& (0+255),w,b
 13451  000E3E  6EFD               	movwf	tosl,c
 13452  000E40  5187               	movf	(_rxPayload+1)& (0+255),w,b
 13453  000E42  6EFE               	movwf	tosh,c
 13454  000E44  6AFF               	clrf	tosu,c
 13455  000E46  50FA               	movf	pclath,w,c
 13456  000E48  0012               	return		;indir
 13457  000E4A                     l15943:
 13458                           
 13459                           ;lorawan.c: 1507: }
 13460                           ;lorawan.c: 1509: if ( (loRa.macStatus.automaticReply == 1) && (loRa.lorawanMacStatus.sy
      +                          nchronization == 0) && ( (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1) |
      +                          | (loRa.lorawanMacStatus.fPending == 1) ) )
 13461  000E4A  0102               	movlb	2	; () banked
 13462  000E4C  AB02               	btfss	(_loRa+2)& (0+255),5,b
 13463  000E4E  D02D               	goto	l15959
 13464                           
 13465                           ; BSR set to: 2
 13466  000E50  0102               	movlb	2	; () banked
 13467  000E52  BB00               	btfsc	_loRa& (0+255),5,b
 13468  000E54  D02A               	goto	l15959
 13469                           
 13470                           ; BSR set to: 2
 13471  000E56  0102               	movlb	2	; () banked
 13472  000E58  B300               	btfsc	_loRa& (0+255),1,b
 13473  000E5A  D003               	goto	l15951
 13474                           
 13475                           ; BSR set to: 2
 13476  000E5C  0102               	movlb	2	; () banked
 13477  000E5E  A700               	btfss	_loRa& (0+255),3,b
 13478  000E60  D024               	goto	l15959
 13479  000E62                     l15951:
 13480                           
 13481                           ; BSR set to: 2
 13482                           ;lorawan.c: 1510: {
 13483                           ;lorawan.c: 1511: if (SearchAvailableChannel (loRa.maxChannels, 1, &channelIndex) == OK)
 13484  000E62  0E01               	movlw	1
 13485  000E64  0100               	movlb	0	; () banked
 13486  000E66  6FB3               	movwf	SearchAvailableChannel@transmissionType& (0+255),b
 13487  000E68  0E67               	movlw	low LORAWAN_RxDone@channelIndex
 13488  000E6A  0100               	movlb	0	; () banked
 13489  000E6C  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 13490  000E6E  0E01               	movlw	high LORAWAN_RxDone@channelIndex
 13491  000E70  0100               	movlb	0	; () banked
 13492  000E72  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 13493  000E74  0102               	movlb	2	; () banked
 13494  000E76  51ED               	movf	(_loRa+237)& (0+255),w,b
 13495  000E78  EC29  F032         	call	_SearchAvailableChannel
 13496  000E7C  0900               	iorlw	0
 13497  000E7E  A4D8               	btfss	status,2,c
 13498  000E80  D012               	goto	l15957
 13499                           
 13500                           ;lorawan.c: 1512: {
 13501                           ;lorawan.c: 1513: LORAWAN_Send (0, 0, 0, 0);
 13502  000E82  0E00               	movlw	0
 13503  000E84  0100               	movlb	0	; () banked
 13504  000E86  6FE7               	movwf	LORAWAN_Send@port& (0+255),b
 13505  000E88  0E00               	movlw	0
 13506  000E8A  0100               	movlb	0	; () banked
 13507  000E8C  6FE8               	movwf	LORAWAN_Send@buffer& (0+255),b
 13508  000E8E  0E00               	movlw	0
 13509  000E90  0100               	movlb	0	; () banked
 13510  000E92  6FE9               	movwf	(LORAWAN_Send@buffer+1)& (0+255),b
 13511  000E94  0E00               	movlw	0
 13512  000E96  0100               	movlb	0	; () banked
 13513  000E98  6FEA               	movwf	LORAWAN_Send@bufferLength& (0+255),b
 13514  000E9A  0E00               	movlw	0
 13515  000E9C  ECE1  F03B         	call	_LORAWAN_Send
 13516  000EA0                     l15955:
 13517                           
 13518                           ;lorawan.c: 1514: loRa.lorawanMacStatus.fPending = 0;
 13519  000EA0  0102               	movlb	2	; () banked
 13520  000EA2  9700               	bcf	_loRa& (0+255),3,b
 13521                           
 13522                           ;lorawan.c: 1515: }
 13523  000EA4  D002               	goto	l15959
 13524  000EA6                     l15957:
 13525                           
 13526                           ;lorawan.c: 1516: else
 13527                           ;lorawan.c: 1517: {
 13528                           ;lorawan.c: 1519: StartReTxTimer();
 13529  000EA6  EC1A  F02C         	call	_StartReTxTimer	;wreg free
 13530  000EAA                     l15959:
 13531                           
 13532                           ;lorawan.c: 1520: }
 13533                           ;lorawan.c: 1521: }
 13534                           ;lorawan.c: 1522: }
 13535                           ;lorawan.c: 1524: if (CLASS_C == loRa.deviceClass)
 13536  000EAA  0E02               	movlw	2
 13537  000EAC  0102               	movlb	2	; () banked
 13538  000EAE  1912               	xorwf	(_loRa+18)& (0+255),w,b
 13539  000EB0  A4D8               	btfss	status,2,c
 13540  000EB2  0012               	return	
 13541                           
 13542                           ; BSR set to: 2
 13543                           ;lorawan.c: 1525: {
 13544                           ;lorawan.c: 1526: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 13545  000EB4  0102               	movlb	2	; () banked
 13546  000EB6  5102               	movf	(_loRa+2)& (0+255),w,b
 13547  000EB8  0BF0               	andlw	-16
 13548  000EBA  0909               	iorlw	9
 13549  000EBC  6F02               	movwf	(_loRa+2)& (0+255),b
 13550                           
 13551                           ; BSR set to: 2
 13552                           ;lorawan.c: 1527: LORAWAN_EnterContinuousReceive();
 13553  000EBE  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 13554                           
 13555                           ;lorawan.c: 1528: }
 13556                           ;lorawan.c: 1529: }
 13557  000EC2  0012               	return	
 13558  000EC4                     l15965:
 13559                           
 13560                           ;lorawan.c: 1530: else
 13561                           ;lorawan.c: 1531: {
 13562                           ;lorawan.c: 1533: SetReceptionNotOkState ();
 13563  000EC4  EC26  F044         	call	_SetReceptionNotOkState	;wreg free
 13564                           
 13565                           ;lorawan.c: 1535: }
 13566                           ;lorawan.c: 1536: }
 13567                           
 13568                           ;lorawan.c: 1534: return INVALID_PARAMETER;
 13569                           ;	Return value of _LORAWAN_RxDone is never used
 13570  000EC8  0012               	return	
 13571  000ECA                     l15969:
 13572                           
 13573                           ;lorawan.c: 1537: else
 13574                           ;lorawan.c: 1538: {
 13575                           ;lorawan.c: 1540: if ( rxPayload.RxAppData != (0) )
 13576  000ECA  0101               	movlb	1	; () banked
 13577  000ECC  5186               	movf	_rxPayload& (0+255),w,b
 13578  000ECE  0101               	movlb	1	; () banked
 13579  000ED0  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 13580  000ED2  B4D8               	btfsc	status,2,c
 13581  000ED4  0012               	return	
 13582                           
 13583                           ; BSR set to: 1
 13584                           ;lorawan.c: 1541: {
 13585                           ;lorawan.c: 1542: if ((RADIO_GetStatus() & (1 << (3))) == 0)
 13586  000ED6  EC21  F052         	call	_RADIO_GetStatus	;wreg free
 13587  000EDA  0100               	movlb	0	; () banked
 13588  000EDC  6FF1               	movwf	??_LORAWAN_RxDone& (0+255),b
 13589  000EDE  0100               	movlb	0	; () banked
 13590  000EE0  B7F1               	btfsc	??_LORAWAN_RxDone& (0+255),3,b
 13591  000EE2  D015               	goto	l15975
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;lorawan.c: 1543: {
 13595                           ;lorawan.c: 1544: rxPayload.RxAppData(buffer, bufferLength, RADIO_OK);
 13596  000EE4  C0EE  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 13597  000EE8  C0EF  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 13598  000EEC  C0F0  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 13599  000EF0  0E03               	movlw	3
 13600  000EF2  0100               	movlb	0	; () banked
 13601  000EF4  6F6A               	movwf	RxDataDone@status& (0+255),b
 13602  000EF6  D801               	call	u18728
 13603  000EF8  0012               	return	
 13604  000EFA                     u18728:
 13605  000EFA  0005               	push	
 13606  000EFC  6EFA               	movwf	pclath,c
 13607  000EFE  0101               	movlb	1	; () banked
 13608  000F00  5186               	movf	_rxPayload& (0+255),w,b
 13609  000F02  6EFD               	movwf	tosl,c
 13610  000F04  5187               	movf	(_rxPayload+1)& (0+255),w,b
 13611  000F06  6EFE               	movwf	tosh,c
 13612  000F08  6AFF               	clrf	tosu,c
 13613  000F0A  50FA               	movf	pclath,w,c
 13614  000F0C  0012               	return		;indir
 13615  000F0E                     l15975:
 13616                           
 13617                           ;lorawan.c: 1546: else
 13618                           ;lorawan.c: 1547: {
 13619                           ;lorawan.c: 1548: rxPayload.RxAppData(buffer, bufferLength, RADIO_NOT_OK);
 13620  000F0E  C0EE  F067         	movff	LORAWAN_RxDone@buffer,RxDataDone@pData
 13621  000F12  C0EF  F068         	movff	LORAWAN_RxDone@buffer+1,RxDataDone@pData+1
 13622  000F16  C0F0  F069         	movff	LORAWAN_RxDone@bufferLength,RxDataDone@dataLength
 13623  000F1A  0E02               	movlw	2
 13624  000F1C  0100               	movlb	0	; () banked
 13625  000F1E  6F6A               	movwf	RxDataDone@status& (0+255),b
 13626  000F20  D801               	call	u18738
 13627  000F22  0012               	return	
 13628  000F24                     u18738:
 13629  000F24  0005               	push	
 13630  000F26  6EFA               	movwf	pclath,c
 13631  000F28  0101               	movlb	1	; () banked
 13632  000F2A  5186               	movf	_rxPayload& (0+255),w,b
 13633  000F2C  6EFD               	movwf	tosl,c
 13634  000F2E  5187               	movf	(_rxPayload+1)& (0+255),w,b
 13635  000F30  6EFE               	movwf	tosh,c
 13636  000F32  6AFF               	clrf	tosu,c
 13637  000F34  50FA               	movf	pclath,w,c
 13638  000F36  0012               	return		;indir
 13639  000F38                     __end_of_LORAWAN_RxDone:
 13640                           	opt stack 0
 13641                           tosu	equ	0xFFF
 13642                           tosh	equ	0xFFE
 13643                           tosl	equ	0xFFD
 13644                           pclath	equ	0xFFA
 13645                           tblptru	equ	0xFF8
 13646                           tblptrh	equ	0xFF7
 13647                           tblptrl	equ	0xFF6
 13648                           tablat	equ	0xFF5
 13649                           prodh	equ	0xFF4
 13650                           prodl	equ	0xFF3
 13651                           intcon	equ	0xFF2
 13652                           intcon2	equ	0xFF1
 13653                           intcon3	equ	0xFF0
 13654                           postinc0	equ	0xFEE
 13655                           wreg	equ	0xFE8
 13656                           postinc1	equ	0xFE6
 13657                           postdec1	equ	0xFE5
 13658                           plusw1	equ	0xFE3
 13659                           fsr1h	equ	0xFE2
 13660                           fsr1l	equ	0xFE1
 13661                           indf2	equ	0xFDF
 13662                           postinc2	equ	0xFDE
 13663                           postdec2	equ	0xFDD
 13664                           fsr2h	equ	0xFDA
 13665                           fsr2l	equ	0xFD9
 13666                           status	equ	0xFD8
 13667                           
 13668 ;; *************** function _UpdateRetransmissionAckTimeoutState *****************
 13669 ;; Defined at:
 13670 ;;		line 1034 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 13671 ;; Parameters:    Size  Location     Type
 13672 ;;		None
 13673 ;; Auto vars:     Size  Location     Type
 13674 ;;		None
 13675 ;; Return value:  Size  Location     Type
 13676 ;;                  1    wreg      void 
 13677 ;; Registers used:
 13678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13679 ;; Tracked objects:
 13680 ;;		On entry : 0/0
 13681 ;;		On exit  : 0/0
 13682 ;;		Unchanged: 0/0
 13683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13686 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13687 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13688 ;;Total ram usage:        4 bytes
 13689 ;; Hardware stack levels used:    1
 13690 ;; Hardware stack levels required when called:   11
 13691 ;; This function calls:
 13692 ;;		_SwTimerSetTimeout
 13693 ;;		_SwTimerStart
 13694 ;;		___lldiv
 13695 ;; This function is called by:
 13696 ;;		_AckRetransmissionCallback
 13697 ;;		_LORAWAN_RxDone
 13698 ;; This function uses a non-reentrant model
 13699 ;;
 13700                           
 13701                           	psect	text61
 13702  008C10                     __ptext61:
 13703                           	opt stack 0
 13704  008C10                     _UpdateRetransmissionAckTimeoutState:
 13705                           	opt stack 16
 13706                           
 13707                           ;lorawan.c: 1036: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 13708                           
 13709                           ;incstack = 0
 13710  008C10  0102               	movlb	2	; () banked
 13711  008C12  5102               	movf	(_loRa+2)& (0+255),w,b
 13712  008C14  0BF0               	andlw	-16
 13713  008C16  0906               	iorlw	6
 13714  008C18  6F02               	movwf	(_loRa+2)& (0+255),b
 13715                           
 13716                           ; BSR set to: 2
 13717                           ;lorawan.c: 1037: SwTimerSetTimeout(loRa.ackTimeoutTimerId, ( (((uint32_t)(loRa.protocol
      +                          Parameters.ackTimeout)) << (12)) / 125UL ));
 13718  008C1A  0102               	movlb	2	; () banked
 13719  008C1C  51A0               	movf	(_loRa+160)& (0+255),w,b
 13720  008C1E  0100               	movlb	0	; () banked
 13721  008C20  6F9E               	movwf	??_UpdateRetransmissionAckTimeoutState& (0+255),b
 13722  008C22  0102               	movlb	2	; () banked
 13723  008C24  51A1               	movf	(_loRa+161)& (0+255),w,b
 13724  008C26  0100               	movlb	0	; () banked
 13725  008C28  6F9F               	movwf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),b
 13726  008C2A  0100               	movlb	0	; () banked
 13727  008C2C  6BA0               	clrf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),b
 13728  008C2E  0100               	movlb	0	; () banked
 13729  008C30  6BA1               	clrf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),b
 13730  008C32  0E0C               	movlw	12
 13731  008C34                     u17725:
 13732  008C34  90D8               	bcf	status,0,c
 13733  008C36  0100               	movlb	0	; () banked
 13734  008C38  379E               	rlcf	??_UpdateRetransmissionAckTimeoutState& (0+255),f,b
 13735  008C3A  379F               	rlcf	(??_UpdateRetransmissionAckTimeoutState+1)& (0+255),f,b
 13736  008C3C  37A0               	rlcf	(??_UpdateRetransmissionAckTimeoutState+2)& (0+255),f,b
 13737  008C3E  37A1               	rlcf	(??_UpdateRetransmissionAckTimeoutState+3)& (0+255),f,b
 13738  008C40  2EE8               	decfsz	wreg,f,c
 13739  008C42  D7F8               	goto	u17725
 13740  008C44  C09E  F064         	movff	??_UpdateRetransmissionAckTimeoutState,___lldiv@dividend
 13741  008C48  C09F  F065         	movff	??_UpdateRetransmissionAckTimeoutState+1,___lldiv@dividend+1
 13742  008C4C  C0A0  F066         	movff	??_UpdateRetransmissionAckTimeoutState+2,___lldiv@dividend+2
 13743  008C50  C0A1  F067         	movff	??_UpdateRetransmissionAckTimeoutState+3,___lldiv@dividend+3
 13744  008C54  0E7D               	movlw	125
 13745  008C56  0100               	movlb	0	; () banked
 13746  008C58  6F68               	movwf	___lldiv@divisor& (0+255),b
 13747  008C5A  0E00               	movlw	0
 13748  008C5C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 13749  008C5E  0E00               	movlw	0
 13750  008C60  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 13751  008C62  0E00               	movlw	0
 13752  008C64  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 13753  008C66  EC99  F03F         	call	___lldiv	;wreg free
 13754  008C6A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 13755  008C6E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 13756  008C72  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 13757  008C76  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 13758  008C7A  0102               	movlb	2	; () banked
 13759  008C7C  51E8               	movf	(_loRa+232)& (0+255),w,b
 13760  008C7E  EC70  F04A         	call	_SwTimerSetTimeout
 13761                           
 13762                           ;lorawan.c: 1038: SwTimerStart(loRa.ackTimeoutTimerId);
 13763  008C82  0102               	movlb	2	; () banked
 13764  008C84  51E8               	movf	(_loRa+232)& (0+255),w,b
 13765  008C86  EC06  F042         	call	_SwTimerStart
 13766  008C8A  0012               	return		;funcret
 13767  008C8C                     __end_of_UpdateRetransmissionAckTimeoutState:
 13768                           	opt stack 0
 13769                           tosu	equ	0xFFF
 13770                           tosh	equ	0xFFE
 13771                           tosl	equ	0xFFD
 13772                           pclath	equ	0xFFA
 13773                           tblptru	equ	0xFF8
 13774                           tblptrh	equ	0xFF7
 13775                           tblptrl	equ	0xFF6
 13776                           tablat	equ	0xFF5
 13777                           prodh	equ	0xFF4
 13778                           prodl	equ	0xFF3
 13779                           intcon	equ	0xFF2
 13780                           intcon2	equ	0xFF1
 13781                           intcon3	equ	0xFF0
 13782                           postinc0	equ	0xFEE
 13783                           wreg	equ	0xFE8
 13784                           postinc1	equ	0xFE6
 13785                           postdec1	equ	0xFE5
 13786                           plusw1	equ	0xFE3
 13787                           fsr1h	equ	0xFE2
 13788                           fsr1l	equ	0xFE1
 13789                           indf2	equ	0xFDF
 13790                           postinc2	equ	0xFDE
 13791                           postdec2	equ	0xFDD
 13792                           fsr2h	equ	0xFDA
 13793                           fsr2l	equ	0xFD9
 13794                           status	equ	0xFD8
 13795                           
 13796 ;; *************** function _UpdateDLSettings *****************
 13797 ;; Defined at:
 13798 ;;		line 888 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;  dlRx2Dr         1    wreg     unsigned char 
 13801 ;;  dlRx1DrOffse    1    4[BANK0 ] unsigned char 
 13802 ;; Auto vars:     Size  Location     Type
 13803 ;;  dlRx2Dr         1    5[BANK0 ] unsigned char 
 13804 ;; Return value:  Size  Location     Type
 13805 ;;                  1    wreg      void 
 13806 ;; Registers used:
 13807 ;;		wreg, status,2, status,0
 13808 ;; Tracked objects:
 13809 ;;		On entry : 0/0
 13810 ;;		On exit  : 0/0
 13811 ;;		Unchanged: 0/0
 13812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13813 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13814 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13816 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13817 ;;Total ram usage:        2 bytes
 13818 ;; Hardware stack levels used:    1
 13819 ;; Hardware stack levels required when called:    7
 13820 ;; This function calls:
 13821 ;;		Nothing
 13822 ;; This function is called by:
 13823 ;;		_LORAWAN_RxDone
 13824 ;; This function uses a non-reentrant model
 13825 ;;
 13826                           
 13827                           	psect	text62
 13828  00A0CA                     __ptext62:
 13829                           	opt stack 0
 13830  00A0CA                     _UpdateDLSettings:
 13831                           	opt stack 19
 13832                           
 13833                           ;incstack = 0
 13834                           ;UpdateDLSettings@dlRx2Dr stored from wreg
 13835  00A0CA  0100               	movlb	0	; () banked
 13836  00A0CC  6F65               	movwf	UpdateDLSettings@dlRx2Dr& (0+255),b
 13837                           
 13838                           ;lorawan_eu.c: 890: if (dlRx2Dr <= 7)
 13839  00A0CE  0E08               	movlw	8
 13840  00A0D0  0100               	movlb	0	; () banked
 13841  00A0D2  6165               	cpfslt	UpdateDLSettings@dlRx2Dr& (0+255),b
 13842  00A0D4  D002               	goto	l15277
 13843                           
 13844                           ; BSR set to: 0
 13845                           ;lorawan_eu.c: 891: {
 13846                           ;lorawan_eu.c: 892: loRa.receiveWindow2Parameters.dataRate = dlRx2Dr;
 13847  00A0D6  C065  F21C         	movff	UpdateDLSettings@dlRx2Dr,_loRa+28
 13848  00A0DA                     l15277:
 13849                           
 13850                           ; BSR set to: 0
 13851                           ;lorawan_eu.c: 893: }
 13852                           ;lorawan_eu.c: 895: if (dlRx1DrOffset <= 5)
 13853  00A0DA  0E06               	movlw	6
 13854  00A0DC  0100               	movlb	0	; () banked
 13855  00A0DE  6164               	cpfslt	UpdateDLSettings@dlRx1DrOffset& (0+255),b
 13856  00A0E0  0012               	return	
 13857                           
 13858                           ; BSR set to: 0
 13859                           ;lorawan_eu.c: 896: {
 13860                           ;lorawan_eu.c: 898: loRa.offset = dlRx1DrOffset;
 13861  00A0E2  C064  F2EF         	movff	UpdateDLSettings@dlRx1DrOffset,_loRa+239
 13862  00A0E6  0012               	return	
 13863  00A0E8                     __end_of_UpdateDLSettings:
 13864                           	opt stack 0
 13865                           tosu	equ	0xFFF
 13866                           tosh	equ	0xFFE
 13867                           tosl	equ	0xFFD
 13868                           pclath	equ	0xFFA
 13869                           tblptru	equ	0xFF8
 13870                           tblptrh	equ	0xFF7
 13871                           tblptrl	equ	0xFF6
 13872                           tablat	equ	0xFF5
 13873                           prodh	equ	0xFF4
 13874                           prodl	equ	0xFF3
 13875                           intcon	equ	0xFF2
 13876                           intcon2	equ	0xFF1
 13877                           intcon3	equ	0xFF0
 13878                           postinc0	equ	0xFEE
 13879                           wreg	equ	0xFE8
 13880                           postinc1	equ	0xFE6
 13881                           postdec1	equ	0xFE5
 13882                           plusw1	equ	0xFE3
 13883                           fsr1h	equ	0xFE2
 13884                           fsr1l	equ	0xFE1
 13885                           indf2	equ	0xFDF
 13886                           postinc2	equ	0xFDE
 13887                           postdec2	equ	0xFDD
 13888                           fsr2h	equ	0xFDA
 13889                           fsr2l	equ	0xFD9
 13890                           status	equ	0xFD8
 13891                           
 13892 ;; *************** function _UpdateCfList *****************
 13893 ;; Defined at:
 13894 ;;		line 824 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 13895 ;; Parameters:    Size  Location     Type
 13896 ;;  bufferLength    1    wreg     unsigned char 
 13897 ;;  joinAccept      2   74[BANK0 ] PTR struct .
 13898 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  bufferLength    1   76[BANK0 ] unsigned char 
 13901 ;;  frequency       4   77[BANK0 ] unsigned long 
 13902 ;;  i               1   82[BANK0 ] unsigned char 
 13903 ;;  channelIndex    1   81[BANK0 ] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  1    wreg      void 
 13906 ;; Registers used:
 13907 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13913 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13914 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;Total ram usage:        9 bytes
 13918 ;; Hardware stack levels used:    1
 13919 ;; Hardware stack levels required when called:    9
 13920 ;; This function calls:
 13921 ;;		_LORAWAN_SetChannelIdStatus
 13922 ;;		_ValidateFrequency
 13923 ;;		___lmul
 13924 ;;		___wmul
 13925 ;;		_memcpy
 13926 ;; This function is called by:
 13927 ;;		_LORAWAN_RxDone
 13928 ;; This function uses a non-reentrant model
 13929 ;;
 13930                           
 13931                           	psect	text63
 13932  0046DA                     __ptext63:
 13933                           	opt stack 0
 13934  0046DA                     _UpdateCfList:
 13935                           	opt stack 17
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;incstack = 0
 13939                           ;UpdateCfList@bufferLength stored from wreg
 13940  0046DA  0100               	movlb	0	; () banked
 13941  0046DC  6FAC               	movwf	UpdateCfList@bufferLength& (0+255),b
 13942                           
 13943                           ;lorawan_eu.c: 826: uint8_t i;
 13944                           ;lorawan_eu.c: 827: uint32_t frequency;
 13945                           ;lorawan_eu.c: 828: uint8_t channelIndex;
 13946                           ;lorawan_eu.c: 830: if ( (bufferLength == 33) )
 13947  0046DE  0E21               	movlw	33
 13948  0046E0  0100               	movlb	0	; () banked
 13949  0046E2  19AC               	xorwf	UpdateCfList@bufferLength& (0+255),w,b
 13950  0046E4  A4D8               	btfss	status,2,c
 13951  0046E6  0012               	return	
 13952                           
 13953                           ; BSR set to: 0
 13954                           ;lorawan_eu.c: 831: {
 13955                           ;lorawan_eu.c: 833: channelIndex = 3;
 13956  0046E8  0E03               	movlw	3
 13957  0046EA  0100               	movlb	0	; () banked
 13958  0046EC  6FB1               	movwf	UpdateCfList@channelIndex& (0+255),b
 13959                           
 13960                           ;lorawan_eu.c: 835: for (i = 0; i < 5; i++ )
 13961  0046EE  0E00               	movlw	0
 13962  0046F0  0100               	movlb	0	; () banked
 13963  0046F2  6FB2               	movwf	UpdateCfList@i& (0+255),b
 13964  0046F4                     l15249:
 13965                           
 13966                           ; BSR set to: 0
 13967  0046F4  0E04               	movlw	4
 13968  0046F6  0100               	movlb	0	; () banked
 13969  0046F8  65B2               	cpfsgt	UpdateCfList@i& (0+255),b
 13970  0046FA  D001               	goto	l15253
 13971  0046FC  D11E               	goto	l1150
 13972  0046FE                     l15253:
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;lorawan_eu.c: 836: {
 13976                           ;lorawan_eu.c: 837: frequency = 0;
 13977  0046FE  0E00               	movlw	0
 13978  004700  0100               	movlb	0	; () banked
 13979  004702  6FAD               	movwf	UpdateCfList@frequency& (0+255),b
 13980  004704  0E00               	movlw	0
 13981  004706  6FAE               	movwf	(UpdateCfList@frequency+1)& (0+255),b
 13982  004708  0E00               	movlw	0
 13983  00470A  6FAF               	movwf	(UpdateCfList@frequency+2)& (0+255),b
 13984  00470C  0E00               	movlw	0
 13985  00470E  6FB0               	movwf	(UpdateCfList@frequency+3)& (0+255),b
 13986                           
 13987                           ; BSR set to: 0
 13988                           ;lorawan_eu.c: 838: memcpy (&frequency, joinAccept->members.cfList + 3*i, 3);
 13989  004710  0EAD               	movlw	low UpdateCfList@frequency
 13990  004712  0100               	movlb	0	; () banked
 13991  004714  6F64               	movwf	memcpy@d1& (0+255),b
 13992  004716  0E00               	movlw	high UpdateCfList@frequency
 13993  004718  0100               	movlb	0	; () banked
 13994  00471A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 13995  00471C  0100               	movlb	0	; () banked
 13996  00471E  51B2               	movf	UpdateCfList@i& (0+255),w,b
 13997  004720  0D03               	mullw	3
 13998  004722  0E0D               	movlw	13
 13999  004724  26F3               	addwf	prodl,f,c
 14000  004726  0E00               	movlw	0
 14001  004728  22F4               	addwfc	prodh,f,c
 14002  00472A  50F3               	movf	prodl,w,c
 14003  00472C  0100               	movlb	0	; () banked
 14004  00472E  25AA               	addwf	UpdateCfList@joinAccept& (0+255),w,b
 14005  004730  0100               	movlb	0	; () banked
 14006  004732  6F66               	movwf	memcpy@s1& (0+255),b
 14007  004734  50F4               	movf	prodh,w,c
 14008  004736  0100               	movlb	0	; () banked
 14009  004738  21AB               	addwfc	(UpdateCfList@joinAccept+1)& (0+255),w,b
 14010  00473A  0100               	movlb	0	; () banked
 14011  00473C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 14012  00473E  0E00               	movlw	0
 14013  004740  0100               	movlb	0	; () banked
 14014  004742  6F69               	movwf	(memcpy@n+1)& (0+255),b
 14015  004744  0E03               	movlw	3
 14016  004746  6F68               	movwf	memcpy@n& (0+255),b
 14017  004748  EC07  F049         	call	_memcpy	;wreg free
 14018                           
 14019                           ;lorawan_eu.c: 839: frequency *= 100;
 14020  00474C  C0AD  F09E         	movff	UpdateCfList@frequency,___lmul@multiplier
 14021  004750  C0AE  F09F         	movff	UpdateCfList@frequency+1,___lmul@multiplier+1
 14022  004754  C0AF  F0A0         	movff	UpdateCfList@frequency+2,___lmul@multiplier+2
 14023  004758  C0B0  F0A1         	movff	UpdateCfList@frequency+3,___lmul@multiplier+3
 14024  00475C  0E64               	movlw	100
 14025  00475E  0100               	movlb	0	; () banked
 14026  004760  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 14027  004762  0E00               	movlw	0
 14028  004764  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 14029  004766  0E00               	movlw	0
 14030  004768  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 14031  00476A  0E00               	movlw	0
 14032  00476C  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 14033  00476E  ECBF  F046         	call	___lmul	;wreg free
 14034  004772  C09E  F0AD         	movff	?___lmul,UpdateCfList@frequency
 14035  004776  C09F  F0AE         	movff	?___lmul+1,UpdateCfList@frequency+1
 14036  00477A  C0A0  F0AF         	movff	?___lmul+2,UpdateCfList@frequency+2
 14037  00477E  C0A1  F0B0         	movff	?___lmul+3,UpdateCfList@frequency+3
 14038                           
 14039                           ;lorawan_eu.c: 840: if (frequency != 0)
 14040  004782  0100               	movlb	0	; () banked
 14041  004784  51AD               	movf	UpdateCfList@frequency& (0+255),w,b
 14042  004786  0100               	movlb	0	; () banked
 14043  004788  11AE               	iorwf	(UpdateCfList@frequency+1)& (0+255),w,b
 14044  00478A  0100               	movlb	0	; () banked
 14045  00478C  11AF               	iorwf	(UpdateCfList@frequency+2)& (0+255),w,b
 14046  00478E  0100               	movlb	0	; () banked
 14047  004790  11B0               	iorwf	(UpdateCfList@frequency+3)& (0+255),w,b
 14048  004792  B4D8               	btfsc	status,2,c
 14049  004794  D0C6               	goto	l15267
 14050                           
 14051                           ; BSR set to: 0
 14052                           ;lorawan_eu.c: 841: {
 14053                           ;lorawan_eu.c: 842: if (ValidateFrequency (frequency) == OK)
 14054  004796  C0AD  F064         	movff	UpdateCfList@frequency,ValidateFrequency@frequencyNew
 14055  00479A  C0AE  F065         	movff	UpdateCfList@frequency+1,ValidateFrequency@frequencyNew+1
 14056  00479E  C0AF  F066         	movff	UpdateCfList@frequency+2,ValidateFrequency@frequencyNew+2
 14057  0047A2  C0B0  F067         	movff	UpdateCfList@frequency+3,ValidateFrequency@frequencyNew+3
 14058  0047A6  EC84  F045         	call	_ValidateFrequency	;wreg free
 14059  0047AA  0900               	iorlw	0
 14060  0047AC  A4D8               	btfss	status,2,c
 14061  0047AE  D0C2               	goto	l15269
 14062                           
 14063                           ;lorawan_eu.c: 843: {
 14064                           ;lorawan_eu.c: 844: Channels[i+channelIndex].frequency = frequency;
 14065  0047B0  0100               	movlb	0	; () banked
 14066  0047B2  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14067  0047B4  0100               	movlb	0	; () banked
 14068  0047B6  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14069  0047B8  0100               	movlb	0	; () banked
 14070  0047BA  6F64               	movwf	___wmul@multiplier& (0+255),b
 14071  0047BC  0100               	movlb	0	; () banked
 14072  0047BE  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14073  0047C0  0100               	movlb	0	; () banked
 14074  0047C2  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14075  0047C4  0E00               	movlw	0
 14076  0047C6  0100               	movlb	0	; () banked
 14077  0047C8  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14078  0047CA  0E0E               	movlw	14
 14079  0047CC  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14080  0047CE  ECA1  F04D         	call	___wmul	;wreg free
 14081  0047D2  0E00               	movlw	low _Channels
 14082  0047D4  0100               	movlb	0	; () banked
 14083  0047D6  2564               	addwf	?___wmul& (0+255),w,b
 14084  0047D8  6ED9               	movwf	fsr2l,c
 14085  0047DA  0E04               	movlw	high _Channels
 14086  0047DC  0100               	movlb	0	; () banked
 14087  0047DE  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14088  0047E0  6EDA               	movwf	fsr2h,c
 14089  0047E2  C0AD  FFDE         	movff	UpdateCfList@frequency,postinc2
 14090  0047E6  C0AE  FFDE         	movff	UpdateCfList@frequency+1,postinc2
 14091  0047EA  C0AF  FFDE         	movff	UpdateCfList@frequency+2,postinc2
 14092  0047EE  C0B0  FFDE         	movff	UpdateCfList@frequency+3,postinc2
 14093                           
 14094                           ;lorawan_eu.c: 845: Channels[i+channelIndex].dataRange.max = 5;
 14095  0047F2  0100               	movlb	0	; () banked
 14096  0047F4  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14097  0047F6  0100               	movlb	0	; () banked
 14098  0047F8  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14099  0047FA  0100               	movlb	0	; () banked
 14100  0047FC  6F64               	movwf	___wmul@multiplier& (0+255),b
 14101  0047FE  0100               	movlb	0	; () banked
 14102  004800  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14103  004802  0100               	movlb	0	; () banked
 14104  004804  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14105  004806  0E00               	movlw	0
 14106  004808  0100               	movlb	0	; () banked
 14107  00480A  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14108  00480C  0E0E               	movlw	14
 14109  00480E  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14110  004810  ECA1  F04D         	call	___wmul	;wreg free
 14111  004814  0E05               	movlw	5
 14112  004816  0100               	movlb	0	; () banked
 14113  004818  2764               	addwf	?___wmul& (0+255),f,b
 14114  00481A  0E00               	movlw	0
 14115  00481C  0100               	movlb	0	; () banked
 14116  00481E  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14117  004820  0E00               	movlw	low _Channels
 14118  004822  0100               	movlb	0	; () banked
 14119  004824  2564               	addwf	?___wmul& (0+255),w,b
 14120  004826  6ED9               	movwf	fsr2l,c
 14121  004828  0E04               	movlw	high _Channels
 14122  00482A  0100               	movlb	0	; () banked
 14123  00482C  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14124  00482E  6EDA               	movwf	fsr2h,c
 14125  004830  0104               	movlb	4	; () banked
 14126  004832  50DF               	movf	223,w,c
 14127  004834  0B0F               	andlw	-241
 14128  004836  0950               	iorlw	80
 14129  004838  6EDF               	movwf	223,c
 14130                           
 14131                           ;lorawan_eu.c: 846: Channels[i+channelIndex].dataRange.min = 0;
 14132  00483A  0100               	movlb	0	; () banked
 14133  00483C  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14134  00483E  0100               	movlb	0	; () banked
 14135  004840  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14136  004842  0100               	movlb	0	; () banked
 14137  004844  6F64               	movwf	___wmul@multiplier& (0+255),b
 14138  004846  0100               	movlb	0	; () banked
 14139  004848  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14140  00484A  0100               	movlb	0	; () banked
 14141  00484C  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14142  00484E  0E00               	movlw	0
 14143  004850  0100               	movlb	0	; () banked
 14144  004852  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14145  004854  0E0E               	movlw	14
 14146  004856  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14147  004858  ECA1  F04D         	call	___wmul	;wreg free
 14148  00485C  0E05               	movlw	5
 14149  00485E  0100               	movlb	0	; () banked
 14150  004860  2764               	addwf	?___wmul& (0+255),f,b
 14151  004862  0E00               	movlw	0
 14152  004864  0100               	movlb	0	; () banked
 14153  004866  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14154  004868  0E00               	movlw	low _Channels
 14155  00486A  0100               	movlb	0	; () banked
 14156  00486C  2564               	addwf	?___wmul& (0+255),w,b
 14157  00486E  6ED9               	movwf	fsr2l,c
 14158  004870  0E04               	movlw	high _Channels
 14159  004872  0100               	movlb	0	; () banked
 14160  004874  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14161  004876  6EDA               	movwf	fsr2h,c
 14162  004878  0104               	movlb	4	; () banked
 14163  00487A  90DF               	bcf	223,0,c
 14164  00487C  92DF               	bcf	223,1,c
 14165  00487E  94DF               	bcf	223,2,c
 14166  004880  96DF               	bcf	223,3,c
 14167                           
 14168                           ;lorawan_eu.c: 847: Channels[i+channelIndex].dutyCycle = 999;
 14169  004882  0100               	movlb	0	; () banked
 14170  004884  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14171  004886  0100               	movlb	0	; () banked
 14172  004888  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14173  00488A  0100               	movlb	0	; () banked
 14174  00488C  6F64               	movwf	___wmul@multiplier& (0+255),b
 14175  00488E  0100               	movlb	0	; () banked
 14176  004890  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14177  004892  0100               	movlb	0	; () banked
 14178  004894  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14179  004896  0E00               	movlw	0
 14180  004898  0100               	movlb	0	; () banked
 14181  00489A  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14182  00489C  0E0E               	movlw	14
 14183  00489E  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14184  0048A0  ECA1  F04D         	call	___wmul	;wreg free
 14185  0048A4  0E06               	movlw	6
 14186  0048A6  0100               	movlb	0	; () banked
 14187  0048A8  2764               	addwf	?___wmul& (0+255),f,b
 14188  0048AA  0E00               	movlw	0
 14189  0048AC  0100               	movlb	0	; () banked
 14190  0048AE  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14191  0048B0  0E00               	movlw	low _Channels
 14192  0048B2  0100               	movlb	0	; () banked
 14193  0048B4  2564               	addwf	?___wmul& (0+255),w,b
 14194  0048B6  6ED9               	movwf	fsr2l,c
 14195  0048B8  0E04               	movlw	high _Channels
 14196  0048BA  0100               	movlb	0	; () banked
 14197  0048BC  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14198  0048BE  6EDA               	movwf	fsr2h,c
 14199  0048C0  0EE7               	movlw	231
 14200  0048C2  6EDE               	movwf	postinc2,c
 14201  0048C4  0E03               	movlw	3
 14202  0048C6  6EDD               	movwf	postdec2,c
 14203                           
 14204                           ;lorawan_eu.c: 848: Channels[i+channelIndex].parametersDefined = 0xFF;
 14205  0048C8  0100               	movlb	0	; () banked
 14206  0048CA  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14207  0048CC  0100               	movlb	0	; () banked
 14208  0048CE  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14209  0048D0  0100               	movlb	0	; () banked
 14210  0048D2  6F64               	movwf	___wmul@multiplier& (0+255),b
 14211  0048D4  0100               	movlb	0	; () banked
 14212  0048D6  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 14213  0048D8  0100               	movlb	0	; () banked
 14214  0048DA  3765               	rlcf	(___wmul@multiplier+1)& (0+255),f,b
 14215  0048DC  0E00               	movlw	0
 14216  0048DE  0100               	movlb	0	; () banked
 14217  0048E0  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 14218  0048E2  0E0E               	movlw	14
 14219  0048E4  6F66               	movwf	___wmul@multiplicand& (0+255),b
 14220  0048E6  ECA1  F04D         	call	___wmul	;wreg free
 14221  0048EA  0E0D               	movlw	13
 14222  0048EC  0100               	movlb	0	; () banked
 14223  0048EE  2764               	addwf	?___wmul& (0+255),f,b
 14224  0048F0  0E00               	movlw	0
 14225  0048F2  0100               	movlb	0	; () banked
 14226  0048F4  2365               	addwfc	(?___wmul+1)& (0+255),f,b
 14227  0048F6  0E00               	movlw	low _Channels
 14228  0048F8  0100               	movlb	0	; () banked
 14229  0048FA  2564               	addwf	?___wmul& (0+255),w,b
 14230  0048FC  6ED9               	movwf	fsr2l,c
 14231  0048FE  0E04               	movlw	high _Channels
 14232  004900  0100               	movlb	0	; () banked
 14233  004902  2165               	addwfc	(?___wmul+1)& (0+255),w,b
 14234  004904  6EDA               	movwf	fsr2h,c
 14235  004906  0EFF               	movlw	255
 14236  004908  6EDF               	movwf	indf2,c
 14237                           
 14238                           ;lorawan_eu.c: 849: LORAWAN_SetChannelIdStatus(i+channelIndex, 1);
 14239  00490A  0E01               	movlw	1
 14240  00490C  0100               	movlb	0	; () banked
 14241  00490E  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14242  004910  0100               	movlb	0	; () banked
 14243  004912  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14244  004914  0100               	movlb	0	; () banked
 14245  004916  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14246  004918  EC38  F049         	call	_LORAWAN_SetChannelIdStatus
 14247                           
 14248                           ;lorawan_eu.c: 850: loRa.macStatus.channelsModified = 1;
 14249  00491C  0102               	movlb	2	; () banked
 14250  00491E  8703               	bsf	(_loRa+3)& (0+255),3,b
 14251                           
 14252                           ; BSR set to: 2
 14253                           ;lorawan_eu.c: 851: }
 14254                           ;lorawan_eu.c: 852: }
 14255  004920  D009               	goto	l15269
 14256  004922                     l15267:
 14257                           
 14258                           ;lorawan_eu.c: 853: else
 14259                           ;lorawan_eu.c: 854: {
 14260                           ;lorawan_eu.c: 855: LORAWAN_SetChannelIdStatus(i+channelIndex, 0);
 14261  004922  0E00               	movlw	0
 14262  004924  0100               	movlb	0	; () banked
 14263  004926  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 14264  004928  0100               	movlb	0	; () banked
 14265  00492A  51B2               	movf	UpdateCfList@i& (0+255),w,b
 14266  00492C  0100               	movlb	0	; () banked
 14267  00492E  25B1               	addwf	UpdateCfList@channelIndex& (0+255),w,b
 14268  004930  EC38  F049         	call	_LORAWAN_SetChannelIdStatus
 14269  004934                     l15269:
 14270  004934  0100               	movlb	0	; () banked
 14271  004936  2BB2               	incf	UpdateCfList@i& (0+255),f,b
 14272  004938  D6DD               	goto	l15249
 14273  00493A                     l1150:
 14274                           
 14275                           ; BSR set to: 0
 14276                           ;lorawan_eu.c: 856: }
 14277                           ;lorawan_eu.c: 857: }
 14278                           ;lorawan_eu.c: 859: loRa.macStatus.channelsModified = 1;
 14279  00493A  0102               	movlb	2	; () banked
 14280  00493C  8703               	bsf	(_loRa+3)& (0+255),3,b
 14281  00493E  0012               	return	
 14282  004940                     __end_of_UpdateCfList:
 14283                           	opt stack 0
 14284                           tosu	equ	0xFFF
 14285                           tosh	equ	0xFFE
 14286                           tosl	equ	0xFFD
 14287                           pclath	equ	0xFFA
 14288                           tblptru	equ	0xFF8
 14289                           tblptrh	equ	0xFF7
 14290                           tblptrl	equ	0xFF6
 14291                           tablat	equ	0xFF5
 14292                           prodh	equ	0xFF4
 14293                           prodl	equ	0xFF3
 14294                           intcon	equ	0xFF2
 14295                           intcon2	equ	0xFF1
 14296                           intcon3	equ	0xFF0
 14297                           postinc0	equ	0xFEE
 14298                           wreg	equ	0xFE8
 14299                           postinc1	equ	0xFE6
 14300                           postdec1	equ	0xFE5
 14301                           plusw1	equ	0xFE3
 14302                           fsr1h	equ	0xFE2
 14303                           fsr1l	equ	0xFE1
 14304                           indf2	equ	0xFDF
 14305                           postinc2	equ	0xFDE
 14306                           postdec2	equ	0xFDD
 14307                           fsr2h	equ	0xFDA
 14308                           fsr2l	equ	0xFD9
 14309                           status	equ	0xFD8
 14310                           
 14311 ;; *************** function _StartReTxTimer *****************
 14312 ;; Defined at:
 14313 ;;		line 902 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 14314 ;; Parameters:    Size  Location     Type
 14315 ;;		None
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;  minim           4   66[BANK0 ] unsigned long 
 14318 ;;  i               1   70[BANK0 ] unsigned char 
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  1    wreg      void 
 14321 ;; Registers used:
 14322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14328 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14329 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14330 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14331 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14332 ;;Total ram usage:        9 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:   11
 14335 ;; This function calls:
 14336 ;;		_SwTimerSetTimeout
 14337 ;;		_SwTimerStart
 14338 ;;		___lldiv
 14339 ;; This function is called by:
 14340 ;;		_LORAWAN_RxDone
 14341 ;; This function uses a non-reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text64
 14345  005834                     __ptext64:
 14346                           	opt stack 0
 14347  005834                     _StartReTxTimer:
 14348                           	opt stack 15
 14349                           
 14350                           ;lorawan_eu.c: 904: uint8_t i;
 14351                           ;lorawan_eu.c: 905: uint32_t minim = (4294967295UL);
 14352                           
 14353                           ;incstack = 0
 14354  005834  0100               	movlb	0	; () banked
 14355  005836  69A2               	setf	StartReTxTimer@minim& (0+255),b
 14356  005838  69A3               	setf	(StartReTxTimer@minim+1)& (0+255),b
 14357  00583A  69A4               	setf	(StartReTxTimer@minim+2)& (0+255),b
 14358  00583C  69A5               	setf	(StartReTxTimer@minim+3)& (0+255),b
 14359                           
 14360                           ; BSR set to: 0
 14361                           ;lorawan_eu.c: 907: for (i = 0; i <= loRa.maxChannels; i++)
 14362  00583E  0E00               	movlw	0
 14363  005840  0100               	movlb	0	; () banked
 14364  005842  6FA6               	movwf	StartReTxTimer@i& (0+255),b
 14365  005844  D085               	goto	l15299
 14366  005846                     l15285:
 14367                           
 14368                           ;lorawan_eu.c: 908: {
 14369                           ;lorawan_eu.c: 909: if ( (Channels[i].status == 1) && (Channels[i].channelTimer != 0) &&
      +                           (Channels[i].channelTimer <= minim) && (loRa.currentDataRate >= Channels[i].dataRange.m
      +                          in) && (loRa.currentDataRate <= Channels[i].dataRange.max) )
 14370  005846  0100               	movlb	0	; () banked
 14371  005848  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14372  00584A  0D0E               	mullw	14
 14373  00584C  0E04               	movlw	4
 14374  00584E  26F3               	addwf	prodl,f,c
 14375  005850  0E00               	movlw	0
 14376  005852  22F4               	addwfc	prodh,f,c
 14377  005854  0E00               	movlw	low _Channels
 14378  005856  24F3               	addwf	prodl,w,c
 14379  005858  6ED9               	movwf	fsr2l,c
 14380  00585A  0E04               	movlw	high _Channels
 14381  00585C  20F4               	addwfc	prodh,w,c
 14382  00585E  6EDA               	movwf	fsr2h,c
 14383  005860  04DE               	decf	postinc2,w,c
 14384  005862  A4D8               	btfss	status,2,c
 14385  005864  D073               	goto	l15297
 14386                           
 14387                           ; BSR set to: 0
 14388  005866  0100               	movlb	0	; () banked
 14389  005868  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14390  00586A  0D0E               	mullw	14
 14391  00586C  0E08               	movlw	8
 14392  00586E  26F3               	addwf	prodl,f,c
 14393  005870  0E00               	movlw	0
 14394  005872  22F4               	addwfc	prodh,f,c
 14395  005874  0E00               	movlw	low _Channels
 14396  005876  24F3               	addwf	prodl,w,c
 14397  005878  6ED9               	movwf	fsr2l,c
 14398  00587A  0E04               	movlw	high _Channels
 14399  00587C  20F4               	addwfc	prodh,w,c
 14400  00587E  6EDA               	movwf	fsr2h,c
 14401  005880  50DE               	movf	postinc2,w,c
 14402  005882  10DE               	iorwf	postinc2,w,c
 14403  005884  10DE               	iorwf	postinc2,w,c
 14404  005886  10DE               	iorwf	postinc2,w,c
 14405  005888  B4D8               	btfsc	status,2,c
 14406  00588A  D060               	goto	l15297
 14407                           
 14408                           ; BSR set to: 0
 14409  00588C  0100               	movlb	0	; () banked
 14410  00588E  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14411  005890  0D0E               	mullw	14
 14412  005892  0E08               	movlw	8
 14413  005894  26F3               	addwf	prodl,f,c
 14414  005896  0E00               	movlw	0
 14415  005898  22F4               	addwfc	prodh,f,c
 14416  00589A  0E00               	movlw	low _Channels
 14417  00589C  24F3               	addwf	prodl,w,c
 14418  00589E  6ED9               	movwf	fsr2l,c
 14419  0058A0  0E04               	movlw	high _Channels
 14420  0058A2  20F4               	addwfc	prodh,w,c
 14421  0058A4  6EDA               	movwf	fsr2h,c
 14422  0058A6  50DE               	movf	postinc2,w,c
 14423  0058A8  0100               	movlb	0	; () banked
 14424  0058AA  5DA2               	subwf	StartReTxTimer@minim& (0+255),w,b
 14425  0058AC  50DE               	movf	postinc2,w,c
 14426  0058AE  0100               	movlb	0	; () banked
 14427  0058B0  59A3               	subwfb	(StartReTxTimer@minim+1)& (0+255),w,b
 14428  0058B2  50DE               	movf	postinc2,w,c
 14429  0058B4  0100               	movlb	0	; () banked
 14430  0058B6  59A4               	subwfb	(StartReTxTimer@minim+2)& (0+255),w,b
 14431  0058B8  50DE               	movf	postinc2,w,c
 14432  0058BA  0100               	movlb	0	; () banked
 14433  0058BC  59A5               	subwfb	(StartReTxTimer@minim+3)& (0+255),w,b
 14434  0058BE  A0D8               	btfss	status,0,c
 14435  0058C0  D045               	goto	l15297
 14436                           
 14437                           ; BSR set to: 0
 14438  0058C2  0100               	movlb	0	; () banked
 14439  0058C4  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14440  0058C6  0D0E               	mullw	14
 14441  0058C8  0E05               	movlw	5
 14442  0058CA  26F3               	addwf	prodl,f,c
 14443  0058CC  0E00               	movlw	0
 14444  0058CE  22F4               	addwfc	prodh,f,c
 14445  0058D0  0E00               	movlw	low _Channels
 14446  0058D2  24F3               	addwf	prodl,w,c
 14447  0058D4  6ED9               	movwf	fsr2l,c
 14448  0058D6  0E04               	movlw	high _Channels
 14449  0058D8  20F4               	addwfc	prodh,w,c
 14450  0058DA  6EDA               	movwf	fsr2h,c
 14451  0058DC  0104               	movlb	4	; () banked
 14452  0058DE  50DF               	movf	223,w,c
 14453  0058E0  0B0F               	andlw	15
 14454  0058E2  0100               	movlb	0	; () banked
 14455  0058E4  6F9E               	movwf	??_StartReTxTimer& (0+255),b
 14456  0058E6  0100               	movlb	0	; () banked
 14457  0058E8  519E               	movf	??_StartReTxTimer& (0+255),w,b
 14458  0058EA  0102               	movlb	2	; () banked
 14459  0058EC  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 14460  0058EE  A0D8               	btfss	status,0,c
 14461  0058F0  D02D               	goto	l15297
 14462                           
 14463                           ; BSR set to: 2
 14464  0058F2  0100               	movlb	0	; () banked
 14465  0058F4  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14466  0058F6  0D0E               	mullw	14
 14467  0058F8  0E05               	movlw	5
 14468  0058FA  26F3               	addwf	prodl,f,c
 14469  0058FC  0E00               	movlw	0
 14470  0058FE  22F4               	addwfc	prodh,f,c
 14471  005900  0E00               	movlw	low _Channels
 14472  005902  24F3               	addwf	prodl,w,c
 14473  005904  6ED9               	movwf	fsr2l,c
 14474  005906  0E04               	movlw	high _Channels
 14475  005908  20F4               	addwfc	prodh,w,c
 14476  00590A  6EDA               	movwf	fsr2h,c
 14477  00590C  0104               	movlb	4	; () banked
 14478  00590E  38DF               	swapf	223,w,c
 14479  005910  0B0F               	andlw	15
 14480  005912  0100               	movlb	0	; () banked
 14481  005914  6F9E               	movwf	??_StartReTxTimer& (0+255),b
 14482  005916  0102               	movlb	2	; () banked
 14483  005918  51DF               	movf	(_loRa+223)& (0+255),w,b
 14484  00591A  0100               	movlb	0	; () banked
 14485  00591C  5D9E               	subwf	??_StartReTxTimer& (0+255),w,b
 14486  00591E  A0D8               	btfss	status,0,c
 14487  005920  D015               	goto	l15297
 14488                           
 14489                           ; BSR set to: 0
 14490                           ;lorawan_eu.c: 910: {
 14491                           ;lorawan_eu.c: 911: minim = Channels[i].channelTimer;
 14492  005922  0100               	movlb	0	; () banked
 14493  005924  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14494  005926  0D0E               	mullw	14
 14495  005928  0E08               	movlw	8
 14496  00592A  26F3               	addwf	prodl,f,c
 14497  00592C  0E00               	movlw	0
 14498  00592E  22F4               	addwfc	prodh,f,c
 14499  005930  0E00               	movlw	low _Channels
 14500  005932  24F3               	addwf	prodl,w,c
 14501  005934  6ED9               	movwf	fsr2l,c
 14502  005936  0E04               	movlw	high _Channels
 14503  005938  20F4               	addwfc	prodh,w,c
 14504  00593A  6EDA               	movwf	fsr2h,c
 14505  00593C  CFDE F0A2          	movff	postinc2,StartReTxTimer@minim
 14506  005940  CFDE F0A3          	movff	postinc2,StartReTxTimer@minim+1
 14507  005944  CFDE F0A4          	movff	postinc2,StartReTxTimer@minim+2
 14508  005948  CFDE F0A5          	movff	postinc2,StartReTxTimer@minim+3
 14509  00594C                     l15297:
 14510  00594C  0100               	movlb	0	; () banked
 14511  00594E  2BA6               	incf	StartReTxTimer@i& (0+255),f,b
 14512  005950                     l15299:
 14513                           
 14514                           ; BSR set to: 0
 14515  005950  0100               	movlb	0	; () banked
 14516  005952  51A6               	movf	StartReTxTimer@i& (0+255),w,b
 14517  005954  0102               	movlb	2	; () banked
 14518  005956  5DED               	subwf	(_loRa+237)& (0+255),w,b
 14519  005958  B0D8               	btfsc	status,0,c
 14520  00595A  D775               	goto	l15285
 14521                           
 14522                           ; BSR set to: 2
 14523                           ;lorawan_eu.c: 912: }
 14524                           ;lorawan_eu.c: 913: }
 14525                           ;lorawan_eu.c: 914: loRa.macStatus.macState = RETRANSMISSION_DELAY;
 14526                           
 14527                           ; BSR set to: 2
 14528  00595C  0102               	movlb	2	; () banked
 14529  00595E  5102               	movf	(_loRa+2)& (0+255),w,b
 14530  005960  0BF0               	andlw	-16
 14531  005962  0906               	iorlw	6
 14532  005964  6F02               	movwf	(_loRa+2)& (0+255),b
 14533                           
 14534                           ; BSR set to: 2
 14535                           ;lorawan_eu.c: 915: SwTimerSetTimeout (loRa.automaticReplyTimerId, ( (((uint32_t)(minim)
      +                          ) << (12)) / 125UL ) );
 14536  005966  C0A2  F09E         	movff	StartReTxTimer@minim,??_StartReTxTimer
 14537  00596A  C0A3  F09F         	movff	StartReTxTimer@minim+1,??_StartReTxTimer+1
 14538  00596E  C0A4  F0A0         	movff	StartReTxTimer@minim+2,??_StartReTxTimer+2
 14539  005972  C0A5  F0A1         	movff	StartReTxTimer@minim+3,??_StartReTxTimer+3
 14540  005976  0E0C               	movlw	12
 14541  005978                     u17585:
 14542  005978  90D8               	bcf	status,0,c
 14543  00597A  0100               	movlb	0	; () banked
 14544  00597C  379E               	rlcf	??_StartReTxTimer& (0+255),f,b
 14545  00597E  379F               	rlcf	(??_StartReTxTimer+1)& (0+255),f,b
 14546  005980  37A0               	rlcf	(??_StartReTxTimer+2)& (0+255),f,b
 14547  005982  37A1               	rlcf	(??_StartReTxTimer+3)& (0+255),f,b
 14548  005984  2EE8               	decfsz	wreg,f,c
 14549  005986  D7F8               	goto	u17585
 14550  005988  C09E  F064         	movff	??_StartReTxTimer,___lldiv@dividend
 14551  00598C  C09F  F065         	movff	??_StartReTxTimer+1,___lldiv@dividend+1
 14552  005990  C0A0  F066         	movff	??_StartReTxTimer+2,___lldiv@dividend+2
 14553  005994  C0A1  F067         	movff	??_StartReTxTimer+3,___lldiv@dividend+3
 14554  005998  0E7D               	movlw	125
 14555  00599A  0100               	movlb	0	; () banked
 14556  00599C  6F68               	movwf	___lldiv@divisor& (0+255),b
 14557  00599E  0E00               	movlw	0
 14558  0059A0  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 14559  0059A2  0E00               	movlw	0
 14560  0059A4  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 14561  0059A6  0E00               	movlw	0
 14562  0059A8  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 14563  0059AA  EC99  F03F         	call	___lldiv	;wreg free
 14564  0059AE  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 14565  0059B2  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 14566  0059B6  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 14567  0059BA  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 14568  0059BE  0102               	movlb	2	; () banked
 14569  0059C0  51E6               	movf	(_loRa+230)& (0+255),w,b
 14570  0059C2  EC70  F04A         	call	_SwTimerSetTimeout
 14571                           
 14572                           ;lorawan_eu.c: 916: SwTimerStart (loRa.automaticReplyTimerId);
 14573  0059C6  0102               	movlb	2	; () banked
 14574  0059C8  51E6               	movf	(_loRa+230)& (0+255),w,b
 14575  0059CA  EC06  F042         	call	_SwTimerStart
 14576  0059CE  0012               	return		;funcret
 14577  0059D0                     __end_of_StartReTxTimer:
 14578                           	opt stack 0
 14579                           tosu	equ	0xFFF
 14580                           tosh	equ	0xFFE
 14581                           tosl	equ	0xFFD
 14582                           pclath	equ	0xFFA
 14583                           tblptru	equ	0xFF8
 14584                           tblptrh	equ	0xFF7
 14585                           tblptrl	equ	0xFF6
 14586                           tablat	equ	0xFF5
 14587                           prodh	equ	0xFF4
 14588                           prodl	equ	0xFF3
 14589                           intcon	equ	0xFF2
 14590                           intcon2	equ	0xFF1
 14591                           intcon3	equ	0xFF0
 14592                           postinc0	equ	0xFEE
 14593                           wreg	equ	0xFE8
 14594                           postinc1	equ	0xFE6
 14595                           postdec1	equ	0xFE5
 14596                           plusw1	equ	0xFE3
 14597                           fsr1h	equ	0xFE2
 14598                           fsr1l	equ	0xFE1
 14599                           indf2	equ	0xFDF
 14600                           postinc2	equ	0xFDE
 14601                           postdec2	equ	0xFDD
 14602                           fsr2h	equ	0xFDA
 14603                           fsr2l	equ	0xFD9
 14604                           status	equ	0xFD8
 14605                           
 14606 ;; *************** function _SetReceptionNotOkState *****************
 14607 ;; Defined at:
 14608 ;;		line 1997 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14609 ;; Parameters:    Size  Location     Type
 14610 ;;		None
 14611 ;; Auto vars:     Size  Location     Type
 14612 ;;		None
 14613 ;; Return value:  Size  Location     Type
 14614 ;;                  1    wreg      void 
 14615 ;; Registers used:
 14616 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14617 ;; Tracked objects:
 14618 ;;		On entry : 0/0
 14619 ;;		On exit  : 0/0
 14620 ;;		Unchanged: 0/0
 14621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14623 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14625 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14626 ;;Total ram usage:        0 bytes
 14627 ;; Hardware stack levels used:    1
 14628 ;; Hardware stack levels required when called:   14
 14629 ;; This function calls:
 14630 ;;		_LORAWAN_EnterContinuousReceive
 14631 ;;		_RxDataDone
 14632 ;; This function is called by:
 14633 ;;		_LORAWAN_RxDone
 14634 ;; This function uses a non-reentrant model
 14635 ;;
 14636                           
 14637                           	psect	text65
 14638  00884C                     __ptext65:
 14639                           	opt stack 0
 14640  00884C                     _SetReceptionNotOkState:
 14641                           	opt stack 12
 14642                           
 14643                           ;lorawan.c: 1999: if ( (loRa.macStatus.macState == RX2_OPEN) || ( (loRa.macStatus.macSta
      +                          te == RX1_OPEN) && (loRa.rx2DelayExpired) ) )
 14644                           
 14645                           ;incstack = 0
 14646  00884C  0102               	movlb	2	; () banked
 14647  00884E  5102               	movf	(_loRa+2)& (0+255),w,b
 14648  008850  0B0F               	andlw	15
 14649  008852  0A05               	xorlw	5
 14650  008854  B4D8               	btfsc	status,2,c
 14651  008856  D00A               	goto	l2255
 14652                           
 14653                           ; BSR set to: 2
 14654  008858  0102               	movlb	2	; () banked
 14655  00885A  5102               	movf	(_loRa+2)& (0+255),w,b
 14656  00885C  0B0F               	andlw	15
 14657  00885E  0A03               	xorlw	3
 14658  008860  A4D8               	btfss	status,2,c
 14659  008862  D031               	goto	l15463
 14660                           
 14661                           ; BSR set to: 2
 14662  008864  0102               	movlb	2	; () banked
 14663  008866  51F1               	movf	(_loRa+241)& (0+255),w,b
 14664  008868  B4D8               	btfsc	status,2,c
 14665  00886A  D02D               	goto	l15463
 14666  00886C                     l2255:
 14667                           
 14668                           ; BSR set to: 2
 14669                           ;lorawan.c: 2000: {
 14670                           ;lorawan.c: 2001: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 14671  00886C  0102               	movlb	2	; () banked
 14672  00886E  9100               	bcf	_loRa& (0+255),0,b
 14673                           
 14674                           ;lorawan.c: 2002: loRa.macStatus.macState = IDLE;
 14675  008870  0102               	movlb	2	; () banked
 14676  008872  9102               	bcf	(_loRa+2)& (0+255),0,b
 14677  008874  9302               	bcf	(_loRa+2)& (0+255),1,b
 14678  008876  9502               	bcf	(_loRa+2)& (0+255),2,b
 14679  008878  9702               	bcf	(_loRa+2)& (0+255),3,b
 14680                           
 14681                           ; BSR set to: 2
 14682                           ;lorawan.c: 2004: if ((loRa.deviceClass == CLASS_A) && (rxPayload.RxAppData != (0)))
 14683  00887A  0102               	movlb	2	; () banked
 14684  00887C  5112               	movf	(_loRa+18)& (0+255),w,b
 14685  00887E  A4D8               	btfss	status,2,c
 14686  008880  D020               	goto	l15461
 14687                           
 14688                           ; BSR set to: 2
 14689  008882  0101               	movlb	1	; () banked
 14690  008884  5186               	movf	_rxPayload& (0+255),w,b
 14691  008886  0101               	movlb	1	; () banked
 14692  008888  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 14693  00888A  B4D8               	btfsc	status,2,c
 14694  00888C  D01A               	goto	l15461
 14695                           
 14696                           ; BSR set to: 1
 14697                           ;lorawan.c: 2005: {
 14698                           ;lorawan.c: 2006: loRa.lorawanMacStatus.synchronization = 0;
 14699  00888E  0102               	movlb	2	; () banked
 14700  008890  9B00               	bcf	_loRa& (0+255),5,b
 14701                           
 14702                           ; BSR set to: 2
 14703                           ;lorawan.c: 2007: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 14704  008892  0E00               	movlw	0
 14705  008894  0100               	movlb	0	; () banked
 14706  008896  6F67               	movwf	RxDataDone@pData& (0+255),b
 14707  008898  0E00               	movlw	0
 14708  00889A  0100               	movlb	0	; () banked
 14709  00889C  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 14710  00889E  0E00               	movlw	0
 14711  0088A0  0100               	movlb	0	; () banked
 14712  0088A2  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 14713  0088A4  0E00               	movlw	0
 14714  0088A6  0100               	movlb	0	; () banked
 14715  0088A8  6F6A               	movwf	RxDataDone@status& (0+255),b
 14716  0088AA  D801               	call	u17908
 14717  0088AC  D00A               	goto	l15461
 14718  0088AE                     u17908:
 14719  0088AE  0005               	push	
 14720  0088B0  6EFA               	movwf	pclath,c
 14721  0088B2  0101               	movlb	1	; () banked
 14722  0088B4  5186               	movf	_rxPayload& (0+255),w,b
 14723  0088B6  6EFD               	movwf	tosl,c
 14724  0088B8  5187               	movf	(_rxPayload+1)& (0+255),w,b
 14725  0088BA  6EFE               	movwf	tosh,c
 14726  0088BC  6AFF               	clrf	tosu,c
 14727  0088BE  50FA               	movf	pclath,w,c
 14728  0088C0  0012               	return		;indir
 14729  0088C2                     l15461:
 14730                           
 14731                           ;lorawan.c: 2008: }
 14732                           ;lorawan.c: 2009: loRa.macStatus.rxDone = 0;
 14733  0088C2  0102               	movlb	2	; () banked
 14734  0088C4  9303               	bcf	(_loRa+3)& (0+255),1,b
 14735  0088C6                     l15463:
 14736                           
 14737                           ; BSR set to: 2
 14738                           ;lorawan.c: 2010: }
 14739                           ;lorawan.c: 2012: if (loRa.deviceClass == CLASS_C)
 14740  0088C6  0E02               	movlw	2
 14741  0088C8  0102               	movlb	2	; () banked
 14742  0088CA  1912               	xorwf	(_loRa+18)& (0+255),w,b
 14743  0088CC  A4D8               	btfss	status,2,c
 14744  0088CE  0012               	return	
 14745                           
 14746                           ; BSR set to: 2
 14747                           ;lorawan.c: 2013: {
 14748                           ;lorawan.c: 2014: loRa.macStatus.macState = CLASS_C_RX2_2_OPEN;
 14749  0088D0  0102               	movlb	2	; () banked
 14750  0088D2  5102               	movf	(_loRa+2)& (0+255),w,b
 14751  0088D4  0BF0               	andlw	-16
 14752  0088D6  0909               	iorlw	9
 14753  0088D8  6F02               	movwf	(_loRa+2)& (0+255),b
 14754                           
 14755                           ; BSR set to: 2
 14756                           ;lorawan.c: 2015: LORAWAN_EnterContinuousReceive();
 14757  0088DA  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 14758  0088DE  0012               	return	
 14759  0088E0                     __end_of_SetReceptionNotOkState:
 14760                           	opt stack 0
 14761                           tosu	equ	0xFFF
 14762                           tosh	equ	0xFFE
 14763                           tosl	equ	0xFFD
 14764                           pclath	equ	0xFFA
 14765                           tblptru	equ	0xFF8
 14766                           tblptrh	equ	0xFF7
 14767                           tblptrl	equ	0xFF6
 14768                           tablat	equ	0xFF5
 14769                           prodh	equ	0xFF4
 14770                           prodl	equ	0xFF3
 14771                           intcon	equ	0xFF2
 14772                           intcon2	equ	0xFF1
 14773                           intcon3	equ	0xFF0
 14774                           postinc0	equ	0xFEE
 14775                           wreg	equ	0xFE8
 14776                           postinc1	equ	0xFE6
 14777                           postdec1	equ	0xFE5
 14778                           plusw1	equ	0xFE3
 14779                           fsr1h	equ	0xFE2
 14780                           fsr1l	equ	0xFE1
 14781                           indf2	equ	0xFDF
 14782                           postinc2	equ	0xFDE
 14783                           postdec2	equ	0xFDD
 14784                           fsr2h	equ	0xFDA
 14785                           fsr2l	equ	0xFD9
 14786                           status	equ	0xFD8
 14787                           
 14788 ;; *************** function _SetJoinFailState *****************
 14789 ;; Defined at:
 14790 ;;		line 1104 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14791 ;; Parameters:    Size  Location     Type
 14792 ;;		None
 14793 ;; Auto vars:     Size  Location     Type
 14794 ;;		None
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  1    wreg      void 
 14797 ;; Registers used:
 14798 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14808 ;;Total ram usage:        0 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:    8
 14811 ;; This function calls:
 14812 ;;		_RxJoinResponse
 14813 ;; This function is called by:
 14814 ;;		_LORAWAN_RxTimeout
 14815 ;;		_LORAWAN_RxDone
 14816 ;; This function uses a non-reentrant model
 14817 ;;
 14818                           
 14819                           	psect	text66
 14820  009AD2                     __ptext66:
 14821                           	opt stack 0
 14822  009AD2                     _SetJoinFailState:
 14823                           	opt stack 18
 14824                           
 14825                           ;lorawan.c: 1106: loRa.macStatus.networkJoined = 0;
 14826                           
 14827                           ;incstack = 0
 14828  009AD2  0102               	movlb	2	; () banked
 14829  009AD4  9902               	bcf	(_loRa+2)& (0+255),4,b
 14830                           
 14831                           ;lorawan.c: 1107: loRa.lorawanMacStatus.joining = 0;
 14832  009AD6  0102               	movlb	2	; () banked
 14833  009AD8  9500               	bcf	_loRa& (0+255),2,b
 14834                           
 14835                           ;lorawan.c: 1108: loRa.macStatus.macState = IDLE;
 14836  009ADA  0102               	movlb	2	; () banked
 14837  009ADC  9102               	bcf	(_loRa+2)& (0+255),0,b
 14838  009ADE  9302               	bcf	(_loRa+2)& (0+255),1,b
 14839  009AE0  9502               	bcf	(_loRa+2)& (0+255),2,b
 14840  009AE2  9702               	bcf	(_loRa+2)& (0+255),3,b
 14841                           
 14842                           ; BSR set to: 2
 14843                           ;lorawan.c: 1109: if (rxPayload.RxJoinResponse != (0))
 14844  009AE4  0101               	movlb	1	; () banked
 14845  009AE6  5188               	movf	(_rxPayload+2)& (0+255),w,b
 14846  009AE8  0101               	movlb	1	; () banked
 14847  009AEA  1189               	iorwf	(_rxPayload+3)& (0+255),w,b
 14848  009AEC  B4D8               	btfsc	status,2,c
 14849  009AEE  0012               	return	
 14850                           
 14851                           ; BSR set to: 1
 14852                           ;lorawan.c: 1110: {
 14853                           ;lorawan.c: 1111: rxPayload.RxJoinResponse(0);
 14854  009AF0  D801               	call	u17448
 14855  009AF2  0012               	return	
 14856  009AF4                     u17448:
 14857  009AF4  0005               	push	
 14858  009AF6  6EFA               	movwf	pclath,c
 14859  009AF8  0101               	movlb	1	; () banked
 14860  009AFA  5188               	movf	(_rxPayload+2)& (0+255),w,b
 14861  009AFC  6EFD               	movwf	tosl,c
 14862  009AFE  5189               	movf	(_rxPayload+3)& (0+255),w,b
 14863  009B00  6EFE               	movwf	tosh,c
 14864  009B02  6AFF               	clrf	tosu,c
 14865  009B04  50FA               	movf	pclath,w,c
 14866  009B06  0E00               	movlw	0
 14867  009B08  0012               	return		;indir
 14868  009B0A                     __end_of_SetJoinFailState:
 14869                           	opt stack 0
 14870                           tosu	equ	0xFFF
 14871                           tosh	equ	0xFFE
 14872                           tosl	equ	0xFFD
 14873                           pclath	equ	0xFFA
 14874                           tblptru	equ	0xFF8
 14875                           tblptrh	equ	0xFF7
 14876                           tblptrl	equ	0xFF6
 14877                           tablat	equ	0xFF5
 14878                           prodh	equ	0xFF4
 14879                           prodl	equ	0xFF3
 14880                           intcon	equ	0xFF2
 14881                           intcon2	equ	0xFF1
 14882                           intcon3	equ	0xFF0
 14883                           postinc0	equ	0xFEE
 14884                           wreg	equ	0xFE8
 14885                           postinc1	equ	0xFE6
 14886                           postdec1	equ	0xFE5
 14887                           plusw1	equ	0xFE3
 14888                           fsr1h	equ	0xFE2
 14889                           fsr1l	equ	0xFE1
 14890                           indf2	equ	0xFDF
 14891                           postinc2	equ	0xFDE
 14892                           postdec2	equ	0xFDD
 14893                           fsr2h	equ	0xFDA
 14894                           fsr2l	equ	0xFD9
 14895                           status	equ	0xFD8
 14896                           
 14897 ;; *************** function _RxJoinResponse *****************
 14898 ;; Defined at:
 14899 ;;		line 127 in file "main.c"
 14900 ;; Parameters:    Size  Location     Type
 14901 ;;  status          1    wreg     unsigned char 
 14902 ;; Auto vars:     Size  Location     Type
 14903 ;;  status          1    0[COMRAM] unsigned char 
 14904 ;; Return value:  Size  Location     Type
 14905 ;;                  1    wreg      void 
 14906 ;; Registers used:
 14907 ;;		wreg
 14908 ;; Tracked objects:
 14909 ;;		On entry : 0/0
 14910 ;;		On exit  : 0/0
 14911 ;;		Unchanged: 0/0
 14912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14917 ;;Total ram usage:        0 bytes
 14918 ;; Hardware stack levels used:    1
 14919 ;; Hardware stack levels required when called:    7
 14920 ;; This function calls:
 14921 ;;		Nothing
 14922 ;; This function is called by:
 14923 ;;		_main
 14924 ;;		_SetJoinFailState
 14925 ;;		_UpdateJoinSuccessState
 14926 ;; This function uses a non-reentrant model
 14927 ;;
 14928                           
 14929                           	psect	text67
 14930  00A45A                     __ptext67:
 14931                           	opt stack 0
 14932  00A45A                     _RxJoinResponse:
 14933                           	opt stack 20
 14934                           
 14935                           ;main.c: 129: PORTAbits.RA4 = 0;
 14936                           
 14937                           ;incstack = 0
 14938  00A45A  9880               	bcf	3968,4,c	;volatile
 14939  00A45C  0012               	return		;funcret
 14940  00A45E                     __end_of_RxJoinResponse:
 14941                           	opt stack 0
 14942                           tosu	equ	0xFFF
 14943                           tosh	equ	0xFFE
 14944                           tosl	equ	0xFFD
 14945                           pclath	equ	0xFFA
 14946                           tblptru	equ	0xFF8
 14947                           tblptrh	equ	0xFF7
 14948                           tblptrl	equ	0xFF6
 14949                           tablat	equ	0xFF5
 14950                           prodh	equ	0xFF4
 14951                           prodl	equ	0xFF3
 14952                           intcon	equ	0xFF2
 14953                           intcon2	equ	0xFF1
 14954                           intcon3	equ	0xFF0
 14955                           postinc0	equ	0xFEE
 14956                           wreg	equ	0xFE8
 14957                           postinc1	equ	0xFE6
 14958                           postdec1	equ	0xFE5
 14959                           plusw1	equ	0xFE3
 14960                           fsr1h	equ	0xFE2
 14961                           fsr1l	equ	0xFE1
 14962                           indf2	equ	0xFDF
 14963                           postinc2	equ	0xFDE
 14964                           postdec2	equ	0xFDD
 14965                           fsr2h	equ	0xFDA
 14966                           fsr2l	equ	0xFD9
 14967                           status	equ	0xFD8
 14968                           
 14969 ;; *************** function _MacExecuteCommands *****************
 14970 ;; Defined at:
 14971 ;;		line 1575 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 14972 ;; Parameters:    Size  Location     Type
 14973 ;;  buffer          2   84[BANK0 ] PTR unsigned char 
 14974 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14975 ;;  fOptsLen        1   86[BANK0 ] unsigned char 
 14976 ;; Auto vars:     Size  Location     Type
 14977 ;;  ptr             2   90[BANK0 ] PTR unsigned char 
 14978 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 14979 ;;  done            1   89[BANK0 ] unsigned char 
 14980 ;; Return value:  Size  Location     Type
 14981 ;;                  2   84[BANK0 ] PTR unsigned char 
 14982 ;; Registers used:
 14983 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14984 ;; Tracked objects:
 14985 ;;		On entry : 0/0
 14986 ;;		On exit  : 0/0
 14987 ;;		Unchanged: 0/0
 14988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14989 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14990 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14991 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14992 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14993 ;;Total ram usage:        8 bytes
 14994 ;; Hardware stack levels used:    1
 14995 ;; Hardware stack levels required when called:   11
 14996 ;; This function calls:
 14997 ;;		_ExecuteDevStatus
 14998 ;;		_ExecuteDutyCycle
 14999 ;;		_ExecuteLinkAdr
 15000 ;;		_ExecuteLinkCheck
 15001 ;;		_ExecuteNewChannel
 15002 ;;		_ExecuteRxParamSetupReq
 15003 ;;		_ExecuteRxTimingSetup
 15004 ;; This function is called by:
 15005 ;;		_LORAWAN_RxDone
 15006 ;; This function uses a non-reentrant model
 15007 ;;
 15008                           
 15009                           	psect	text68
 15010  003456                     __ptext68:
 15011                           	opt stack 0
 15012  003456                     _MacExecuteCommands:
 15013                           	opt stack 15
 15014                           
 15015                           ;lorawan.c: 1577: bool done = 0;
 15016                           
 15017                           ;incstack = 0
 15018  003456  0E00               	movlw	0
 15019  003458  0100               	movlb	0	; () banked
 15020  00345A  6FB9               	movwf	MacExecuteCommands@done& (0+255),b
 15021                           
 15022                           ; BSR set to: 0
 15023                           ;lorawan.c: 1578: uint8_t *ptr;
 15024                           ;lorawan.c: 1579: ptr = buffer;
 15025  00345C  C0B4  F0BA         	movff	MacExecuteCommands@buffer,MacExecuteCommands@ptr
 15026  003460  C0B5  F0BB         	movff	MacExecuteCommands@buffer+1,MacExecuteCommands@ptr+1
 15027                           
 15028                           ;lorawan.c: 1580: while ( (ptr < ( buffer + fOptsLen )) && (done == 0) )
 15029  003464  D199               	goto	l15525
 15030  003466                     l15489:
 15031                           
 15032                           ; BSR set to: 0
 15033                           ;lorawan.c: 1581: {
 15034                           ;lorawan.c: 1583: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 15035  003466  0102               	movlb	2	; () banked
 15036  003468  51A7               	movf	(_loRa+167)& (0+255),w,b
 15037  00346A  0D02               	mullw	2
 15038  00346C  0E00               	movlw	low _loRa
 15039  00346E  0100               	movlb	0	; () banked
 15040  003470  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15041  003472  0E02               	movlw	high _loRa
 15042  003474  0100               	movlb	0	; () banked
 15043  003476  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15044  003478  0EA8               	movlw	168
 15045  00347A  0100               	movlb	0	; () banked
 15046  00347C  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15047  00347E  0E00               	movlw	0
 15048  003480  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15049  003482  50F3               	movf	prodl,w,c
 15050  003484  0100               	movlb	0	; () banked
 15051  003486  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15052  003488  50F4               	movf	prodh,w,c
 15053  00348A  0100               	movlb	0	; () banked
 15054  00348C  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15055  00348E  0E01               	movlw	1
 15056  003490  0100               	movlb	0	; () banked
 15057  003492  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15058  003494  6ED9               	movwf	fsr2l,c
 15059  003496  0E00               	movlw	0
 15060  003498  0100               	movlb	0	; () banked
 15061  00349A  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15062  00349C  6EDA               	movwf	fsr2h,c
 15063  00349E  0102               	movlb	2	; () banked
 15064  0034A0  90DF               	bcf	indf2,0,c
 15065                           
 15066                           ;lorawan.c: 1584: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 15067  0034A2  0102               	movlb	2	; () banked
 15068  0034A4  51A7               	movf	(_loRa+167)& (0+255),w,b
 15069  0034A6  0D02               	mullw	2
 15070  0034A8  0E00               	movlw	low _loRa
 15071  0034AA  0100               	movlb	0	; () banked
 15072  0034AC  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15073  0034AE  0E02               	movlw	high _loRa
 15074  0034B0  0100               	movlb	0	; () banked
 15075  0034B2  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15076  0034B4  0EA8               	movlw	168
 15077  0034B6  0100               	movlb	0	; () banked
 15078  0034B8  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15079  0034BA  0E00               	movlw	0
 15080  0034BC  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15081  0034BE  50F3               	movf	prodl,w,c
 15082  0034C0  0100               	movlb	0	; () banked
 15083  0034C2  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15084  0034C4  50F4               	movf	prodh,w,c
 15085  0034C6  0100               	movlb	0	; () banked
 15086  0034C8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15087  0034CA  0E01               	movlw	1
 15088  0034CC  0100               	movlb	0	; () banked
 15089  0034CE  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15090  0034D0  6ED9               	movwf	fsr2l,c
 15091  0034D2  0E00               	movlw	0
 15092  0034D4  0100               	movlb	0	; () banked
 15093  0034D6  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15094  0034D8  6EDA               	movwf	fsr2h,c
 15095  0034DA  0102               	movlb	2	; () banked
 15096  0034DC  92DF               	bcf	indf2,1,c
 15097                           
 15098                           ;lorawan.c: 1585: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 15099  0034DE  0102               	movlb	2	; () banked
 15100  0034E0  51A7               	movf	(_loRa+167)& (0+255),w,b
 15101  0034E2  0D02               	mullw	2
 15102  0034E4  0E00               	movlw	low _loRa
 15103  0034E6  0100               	movlb	0	; () banked
 15104  0034E8  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15105  0034EA  0E02               	movlw	high _loRa
 15106  0034EC  0100               	movlb	0	; () banked
 15107  0034EE  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15108  0034F0  0EA8               	movlw	168
 15109  0034F2  0100               	movlb	0	; () banked
 15110  0034F4  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15111  0034F6  0E00               	movlw	0
 15112  0034F8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15113  0034FA  50F3               	movf	prodl,w,c
 15114  0034FC  0100               	movlb	0	; () banked
 15115  0034FE  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15116  003500  50F4               	movf	prodh,w,c
 15117  003502  0100               	movlb	0	; () banked
 15118  003504  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15119  003506  0E01               	movlw	1
 15120  003508  0100               	movlb	0	; () banked
 15121  00350A  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15122  00350C  6ED9               	movwf	fsr2l,c
 15123  00350E  0E00               	movlw	0
 15124  003510  0100               	movlb	0	; () banked
 15125  003512  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15126  003514  6EDA               	movwf	fsr2h,c
 15127  003516  0102               	movlb	2	; () banked
 15128  003518  94DF               	bcf	indf2,2,c
 15129                           
 15130                           ;lorawan.c: 1586: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 0;
 15131  00351A  0102               	movlb	2	; () banked
 15132  00351C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15133  00351E  0D02               	mullw	2
 15134  003520  0E00               	movlw	low _loRa
 15135  003522  0100               	movlb	0	; () banked
 15136  003524  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15137  003526  0E02               	movlw	high _loRa
 15138  003528  0100               	movlb	0	; () banked
 15139  00352A  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15140  00352C  0EA8               	movlw	168
 15141  00352E  0100               	movlb	0	; () banked
 15142  003530  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15143  003532  0E00               	movlw	0
 15144  003534  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15145  003536  50F3               	movf	prodl,w,c
 15146  003538  0100               	movlb	0	; () banked
 15147  00353A  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15148  00353C  50F4               	movf	prodh,w,c
 15149  00353E  0100               	movlb	0	; () banked
 15150  003540  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15151  003542  0E01               	movlw	1
 15152  003544  0100               	movlb	0	; () banked
 15153  003546  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15154  003548  6ED9               	movwf	fsr2l,c
 15155  00354A  0E00               	movlw	0
 15156  00354C  0100               	movlb	0	; () banked
 15157  00354E  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15158  003550  6EDA               	movwf	fsr2h,c
 15159  003552  0102               	movlb	2	; () banked
 15160  003554  96DF               	bcf	indf2,3,c
 15161                           
 15162                           ;lorawan.c: 1587: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 0;
 15163  003556  0102               	movlb	2	; () banked
 15164  003558  51A7               	movf	(_loRa+167)& (0+255),w,b
 15165  00355A  0D02               	mullw	2
 15166  00355C  0E00               	movlw	low _loRa
 15167  00355E  0100               	movlb	0	; () banked
 15168  003560  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15169  003562  0E02               	movlw	high _loRa
 15170  003564  0100               	movlb	0	; () banked
 15171  003566  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15172  003568  0EA8               	movlw	168
 15173  00356A  0100               	movlb	0	; () banked
 15174  00356C  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15175  00356E  0E00               	movlw	0
 15176  003570  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15177  003572  50F3               	movf	prodl,w,c
 15178  003574  0100               	movlb	0	; () banked
 15179  003576  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15180  003578  50F4               	movf	prodh,w,c
 15181  00357A  0100               	movlb	0	; () banked
 15182  00357C  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15183  00357E  0E01               	movlw	1
 15184  003580  0100               	movlb	0	; () banked
 15185  003582  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15186  003584  6ED9               	movwf	fsr2l,c
 15187  003586  0E00               	movlw	0
 15188  003588  0100               	movlb	0	; () banked
 15189  00358A  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15190  00358C  6EDA               	movwf	fsr2h,c
 15191  00358E  0102               	movlb	2	; () banked
 15192  003590  98DF               	bcf	indf2,4,c
 15193                           
 15194                           ;lorawan.c: 1588: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 0;
 15195  003592  0102               	movlb	2	; () banked
 15196  003594  51A7               	movf	(_loRa+167)& (0+255),w,b
 15197  003596  0D02               	mullw	2
 15198  003598  0E00               	movlw	low _loRa
 15199  00359A  0100               	movlb	0	; () banked
 15200  00359C  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15201  00359E  0E02               	movlw	high _loRa
 15202  0035A0  0100               	movlb	0	; () banked
 15203  0035A2  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15204  0035A4  0EA8               	movlw	168
 15205  0035A6  0100               	movlb	0	; () banked
 15206  0035A8  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15207  0035AA  0E00               	movlw	0
 15208  0035AC  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15209  0035AE  50F3               	movf	prodl,w,c
 15210  0035B0  0100               	movlb	0	; () banked
 15211  0035B2  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15212  0035B4  50F4               	movf	prodh,w,c
 15213  0035B6  0100               	movlb	0	; () banked
 15214  0035B8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15215  0035BA  0E01               	movlw	1
 15216  0035BC  0100               	movlb	0	; () banked
 15217  0035BE  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15218  0035C0  6ED9               	movwf	fsr2l,c
 15219  0035C2  0E00               	movlw	0
 15220  0035C4  0100               	movlb	0	; () banked
 15221  0035C6  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15222  0035C8  6EDA               	movwf	fsr2h,c
 15223  0035CA  0102               	movlb	2	; () banked
 15224  0035CC  9ADF               	bcf	indf2,5,c
 15225                           
 15226                           ;lorawan.c: 1589: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 0;
 15227  0035CE  0102               	movlb	2	; () banked
 15228  0035D0  51A7               	movf	(_loRa+167)& (0+255),w,b
 15229  0035D2  0D02               	mullw	2
 15230  0035D4  0E00               	movlw	low _loRa
 15231  0035D6  0100               	movlb	0	; () banked
 15232  0035D8  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15233  0035DA  0E02               	movlw	high _loRa
 15234  0035DC  0100               	movlb	0	; () banked
 15235  0035DE  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15236  0035E0  0EA8               	movlw	168
 15237  0035E2  0100               	movlb	0	; () banked
 15238  0035E4  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15239  0035E6  0E00               	movlw	0
 15240  0035E8  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15241  0035EA  50F3               	movf	prodl,w,c
 15242  0035EC  0100               	movlb	0	; () banked
 15243  0035EE  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15244  0035F0  50F4               	movf	prodh,w,c
 15245  0035F2  0100               	movlb	0	; () banked
 15246  0035F4  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15247  0035F6  0E01               	movlw	1
 15248  0035F8  0100               	movlb	0	; () banked
 15249  0035FA  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15250  0035FC  6ED9               	movwf	fsr2l,c
 15251  0035FE  0E00               	movlw	0
 15252  003600  0100               	movlb	0	; () banked
 15253  003602  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15254  003604  6EDA               	movwf	fsr2h,c
 15255  003606  0102               	movlb	2	; () banked
 15256  003608  9CDF               	bcf	indf2,6,c
 15257                           
 15258                           ;lorawan.c: 1590: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 0;
 15259  00360A  0102               	movlb	2	; () banked
 15260  00360C  51A7               	movf	(_loRa+167)& (0+255),w,b
 15261  00360E  0D02               	mullw	2
 15262  003610  0E00               	movlw	low _loRa
 15263  003612  0100               	movlb	0	; () banked
 15264  003614  6FB7               	movwf	??_MacExecuteCommands& (0+255),b
 15265  003616  0E02               	movlw	high _loRa
 15266  003618  0100               	movlb	0	; () banked
 15267  00361A  6FB8               	movwf	(??_MacExecuteCommands+1)& (0+255),b
 15268  00361C  0EA8               	movlw	168
 15269  00361E  0100               	movlb	0	; () banked
 15270  003620  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15271  003622  0E00               	movlw	0
 15272  003624  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15273  003626  50F3               	movf	prodl,w,c
 15274  003628  0100               	movlb	0	; () banked
 15275  00362A  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15276  00362C  50F4               	movf	prodh,w,c
 15277  00362E  0100               	movlb	0	; () banked
 15278  003630  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15279  003632  0E01               	movlw	1
 15280  003634  0100               	movlb	0	; () banked
 15281  003636  25B7               	addwf	??_MacExecuteCommands& (0+255),w,b
 15282  003638  6ED9               	movwf	fsr2l,c
 15283  00363A  0E00               	movlw	0
 15284  00363C  0100               	movlb	0	; () banked
 15285  00363E  21B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),w,b
 15286  003640  6EDA               	movwf	fsr2h,c
 15287  003642  0102               	movlb	2	; () banked
 15288  003644  9EDF               	bcf	indf2,7,c
 15289                           
 15290                           ; BSR set to: 2
 15291                           ;lorawan.c: 1593: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = *ptr;
 15292  003646  C0BA  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15293  00364A  C0BB  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15294  00364E  0102               	movlb	2	; () banked
 15295  003650  51A7               	movf	(_loRa+167)& (0+255),w,b
 15296  003652  0D02               	mullw	2
 15297  003654  0EA8               	movlw	low (_loRa+168)
 15298  003656  24F3               	addwf	prodl,w,c
 15299  003658  6EE9               	movwf	fsr0l,c
 15300  00365A  0E02               	movlw	high (_loRa+168)
 15301  00365C  20F4               	addwfc	prodh,w,c
 15302  00365E  6EEA               	movwf	fsr0h,c
 15303  003660  CFDF FFEF          	movff	indf2,indf0
 15304                           
 15305                           ;lorawan.c: 1595: switch (*ptr ++)
 15306  003664  D069               	goto	l15517
 15307  003666                     l15493:
 15308                           
 15309                           ;lorawan.c: 1598: {
 15310                           ;lorawan.c: 1599: ptr = ExecuteLinkCheck (ptr );
 15311  003666  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteLinkCheck@ptr
 15312  00366A  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteLinkCheck@ptr+1
 15313  00366E  EC3E  F04E         	call	_ExecuteLinkCheck
 15314  003672  C064  F0BA         	movff	?_ExecuteLinkCheck,MacExecuteCommands@ptr
 15315  003676  C065  F0BB         	movff	?_ExecuteLinkCheck+1,MacExecuteCommands@ptr+1
 15316  00367A  D052               	goto	l15513
 15317  00367C                     l15497:
 15318                           
 15319                           ;lorawan.c: 1605: {
 15320                           ;lorawan.c: 1606: ptr = ExecuteLinkAdr (ptr );
 15321  00367C  C0BA  F073         	movff	MacExecuteCommands@ptr,ExecuteLinkAdr@ptr
 15322  003680  C0BB  F074         	movff	MacExecuteCommands@ptr+1,ExecuteLinkAdr@ptr+1
 15323  003684  ECED  F01B         	call	_ExecuteLinkAdr	;wreg free
 15324  003688  C073  F0BA         	movff	?_ExecuteLinkAdr,MacExecuteCommands@ptr
 15325  00368C  C074  F0BB         	movff	?_ExecuteLinkAdr+1,MacExecuteCommands@ptr+1
 15326                           
 15327                           ;lorawan.c: 1607: } break;
 15328  003690  D071               	goto	l15519
 15329  003692                     l15499:
 15330                           
 15331                           ;lorawan.c: 1610: {
 15332                           ;lorawan.c: 1611: ptr = ExecuteDutyCycle(ptr);
 15333  003692  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteDutyCycle@ptr
 15334  003696  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDutyCycle@ptr+1
 15335  00369A  ECA5  F048         	call	_ExecuteDutyCycle	;wreg free
 15336  00369E  C064  F0BA         	movff	?_ExecuteDutyCycle,MacExecuteCommands@ptr
 15337  0036A2  C065  F0BB         	movff	?_ExecuteDutyCycle+1,MacExecuteCommands@ptr+1
 15338                           
 15339                           ;lorawan.c: 1612: } break;
 15340  0036A6  D066               	goto	l15519
 15341  0036A8                     l15501:
 15342                           
 15343                           ;lorawan.c: 1615: {
 15344                           ;lorawan.c: 1616: ptr = ExecuteRxParamSetupReq (ptr);
 15345  0036A8  C0BA  F0AA         	movff	MacExecuteCommands@ptr,ExecuteRxParamSetupReq@ptr
 15346  0036AC  C0BB  F0AB         	movff	MacExecuteCommands@ptr+1,ExecuteRxParamSetupReq@ptr+1
 15347  0036B0  EC32  F022         	call	_ExecuteRxParamSetupReq	;wreg free
 15348  0036B4  C0AA  F0BA         	movff	?_ExecuteRxParamSetupReq,MacExecuteCommands@ptr
 15349  0036B8  C0AB  F0BB         	movff	?_ExecuteRxParamSetupReq+1,MacExecuteCommands@ptr+1
 15350                           
 15351                           ;lorawan.c: 1617: } break;
 15352  0036BC  D05B               	goto	l15519
 15353  0036BE                     l15503:
 15354                           
 15355                           ;lorawan.c: 1620: {
 15356                           ;lorawan.c: 1621: ptr = ExecuteDevStatus (ptr);
 15357  0036BE  C0BA  F064         	movff	MacExecuteCommands@ptr,ExecuteDevStatus@ptr
 15358  0036C2  C0BB  F065         	movff	MacExecuteCommands@ptr+1,ExecuteDevStatus@ptr+1
 15359  0036C6  ECDC  F051         	call	_ExecuteDevStatus	;wreg free
 15360  0036CA  C064  F0BA         	movff	?_ExecuteDevStatus,MacExecuteCommands@ptr
 15361  0036CE  C065  F0BB         	movff	?_ExecuteDevStatus+1,MacExecuteCommands@ptr+1
 15362                           
 15363                           ;lorawan.c: 1622: } break;
 15364  0036D2  D050               	goto	l15519
 15365  0036D4                     l15505:
 15366                           
 15367                           ;lorawan.c: 1625: {
 15368                           ;lorawan.c: 1626: ptr = ExecuteNewChannel (ptr);
 15369  0036D4  C0BA  F0AA         	movff	MacExecuteCommands@ptr,ExecuteNewChannel@ptr
 15370  0036D8  C0BB  F0AB         	movff	MacExecuteCommands@ptr+1,ExecuteNewChannel@ptr+1
 15371  0036DC  ECC1  F020         	call	_ExecuteNewChannel	;wreg free
 15372  0036E0  C0AA  F0BA         	movff	?_ExecuteNewChannel,MacExecuteCommands@ptr
 15373  0036E4  C0AB  F0BB         	movff	?_ExecuteNewChannel+1,MacExecuteCommands@ptr+1
 15374                           
 15375                           ;lorawan.c: 1628: } break;
 15376  0036E8  D045               	goto	l15519
 15377  0036EA                     l15507:
 15378                           
 15379                           ;lorawan.c: 1631: {
 15380                           ;lorawan.c: 1632: ptr = ExecuteRxTimingSetup (ptr);
 15381  0036EA  C0BA  F06B         	movff	MacExecuteCommands@ptr,ExecuteRxTimingSetup@ptr
 15382  0036EE  C0BB  F06C         	movff	MacExecuteCommands@ptr+1,ExecuteRxTimingSetup@ptr+1
 15383  0036F2  ECF8  F04E         	call	_ExecuteRxTimingSetup	;wreg free
 15384  0036F6  C06B  F0BA         	movff	?_ExecuteRxTimingSetup,MacExecuteCommands@ptr
 15385  0036FA  C06C  F0BB         	movff	?_ExecuteRxTimingSetup+1,MacExecuteCommands@ptr+1
 15386                           
 15387                           ;lorawan.c: 1633: } break;
 15388  0036FE  D03A               	goto	l15519
 15389  003700                     l15509:
 15390                           
 15391                           ;lorawan.c: 1636: {
 15392                           ;lorawan.c: 1637: done = 1;
 15393  003700  0E01               	movlw	1
 15394  003702  0100               	movlb	0	; () banked
 15395  003704  6FB9               	movwf	MacExecuteCommands@done& (0+255),b
 15396                           
 15397                           ; BSR set to: 0
 15398                           ;lorawan.c: 1638: ptr = buffer + fOptsLen;
 15399  003706  0100               	movlb	0	; () banked
 15400  003708  51B6               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15401  00370A  0D01               	mullw	1
 15402  00370C  50F3               	movf	prodl,w,c
 15403  00370E  0100               	movlb	0	; () banked
 15404  003710  25B4               	addwf	MacExecuteCommands@buffer& (0+255),w,b
 15405  003712  0100               	movlb	0	; () banked
 15406  003714  6FBA               	movwf	MacExecuteCommands@ptr& (0+255),b
 15407  003716  50F4               	movf	prodh,w,c
 15408  003718  0100               	movlb	0	; () banked
 15409  00371A  21B5               	addwfc	(MacExecuteCommands@buffer+1)& (0+255),w,b
 15410  00371C  0100               	movlb	0	; () banked
 15411  00371E  6FBB               	movwf	(MacExecuteCommands@ptr+1)& (0+255),b
 15412  003720                     l15513:
 15413                           
 15414                           ; BSR set to: 0
 15415                           ;lorawan.c: 1639: loRa.macCommands[loRa.crtMacCmdIndex].receivedCid = 0xFF;
 15416  003720  0102               	movlb	2	; () banked
 15417  003722  51A7               	movf	(_loRa+167)& (0+255),w,b
 15418  003724  0D02               	mullw	2
 15419  003726  0EA8               	movlw	low (_loRa+168)
 15420  003728  24F3               	addwf	prodl,w,c
 15421  00372A  6ED9               	movwf	fsr2l,c
 15422  00372C  0E02               	movlw	high (_loRa+168)
 15423  00372E  20F4               	addwfc	prodh,w,c
 15424  003730  6EDA               	movwf	fsr2h,c
 15425  003732  0EFF               	movlw	255
 15426  003734  6EDF               	movwf	indf2,c
 15427                           
 15428                           ; BSR set to: 2
 15429                           ;lorawan.c: 1641: }
 15430                           
 15431                           ;lorawan.c: 1640: } break;
 15432  003736  D01E               	goto	l15519
 15433  003738                     l15517:
 15434                           
 15435                           ; BSR set to: 2
 15436  003738  C0BA  FFD9         	movff	MacExecuteCommands@ptr,fsr2l
 15437  00373C  C0BB  FFDA         	movff	MacExecuteCommands@ptr+1,fsr2h
 15438  003740  0100               	movlb	0	; () banked
 15439  003742  4BBA               	infsnz	MacExecuteCommands@ptr& (0+255),f,b
 15440  003744  2BBB               	incf	(MacExecuteCommands@ptr+1)& (0+255),f,b
 15441  003746  50DF               	movf	indf2,w,c
 15442                           
 15443                           ; Switch size 1, requested type "space"
 15444                           ; Number of cases is 7, Range of values is 2 to 8
 15445                           ; switch strategies available:
 15446                           ; Name         Instructions Cycles
 15447                           ; simple_byte           22    12 (average)
 15448                           ;	Chosen strategy is simple_byte
 15449  003748  0A02               	xorlw	2	; case 2
 15450  00374A  B4D8               	btfsc	status,2,c
 15451  00374C  D78C               	goto	l15493
 15452  00374E  0A01               	xorlw	1	; case 3
 15453  003750  B4D8               	btfsc	status,2,c
 15454  003752  D794               	goto	l15497
 15455  003754  0A07               	xorlw	7	; case 4
 15456  003756  B4D8               	btfsc	status,2,c
 15457  003758  D79C               	goto	l15499
 15458  00375A  0A01               	xorlw	1	; case 5
 15459  00375C  B4D8               	btfsc	status,2,c
 15460  00375E  D7A4               	goto	l15501
 15461  003760  0A03               	xorlw	3	; case 6
 15462  003762  B4D8               	btfsc	status,2,c
 15463  003764  D7AC               	goto	l15503
 15464  003766  0A01               	xorlw	1	; case 7
 15465  003768  B4D8               	btfsc	status,2,c
 15466  00376A  D7B4               	goto	l15505
 15467  00376C  0A0F               	xorlw	15	; case 8
 15468  00376E  B4D8               	btfsc	status,2,c
 15469  003770  D7BC               	goto	l15507
 15470  003772  D7C6               	goto	l15509
 15471  003774                     l15519:
 15472                           
 15473                           ;lorawan.c: 1643: if((loRa.macCommands[loRa.crtMacCmdIndex].receivedCid != 0xFF) &&
 15474                           ;lorawan.c: 1644: (loRa.crtMacCmdIndex < 16))
 15475  003774  0102               	movlb	2	; () banked
 15476  003776  51A7               	movf	(_loRa+167)& (0+255),w,b
 15477  003778  0D02               	mullw	2
 15478  00377A  0EA8               	movlw	low (_loRa+168)
 15479  00377C  24F3               	addwf	prodl,w,c
 15480  00377E  6ED9               	movwf	fsr2l,c
 15481  003780  0E02               	movlw	high (_loRa+168)
 15482  003782  20F4               	addwfc	prodh,w,c
 15483  003784  6EDA               	movwf	fsr2h,c
 15484  003786  28DE               	incf	postinc2,w,c
 15485  003788  B4D8               	btfsc	status,2,c
 15486  00378A  D006               	goto	l15525
 15487                           
 15488                           ; BSR set to: 2
 15489  00378C  0E10               	movlw	16
 15490  00378E  0102               	movlb	2	; () banked
 15491  003790  61A7               	cpfslt	(_loRa+167)& (0+255),b
 15492  003792  D002               	goto	l15525
 15493                           
 15494                           ; BSR set to: 2
 15495                           ;lorawan.c: 1645: {
 15496                           ;lorawan.c: 1646: loRa.crtMacCmdIndex ++;
 15497  003794  0102               	movlb	2	; () banked
 15498  003796  2BA7               	incf	(_loRa+167)& (0+255),f,b
 15499  003798                     l15525:
 15500  003798  0100               	movlb	0	; () banked
 15501  00379A  51B6               	movf	MacExecuteCommands@fOptsLen& (0+255),w,b
 15502  00379C  0D01               	mullw	1
 15503  00379E  C0B4  F0B7         	movff	MacExecuteCommands@buffer,??_MacExecuteCommands
 15504  0037A2  C0B5  F0B8         	movff	MacExecuteCommands@buffer+1,??_MacExecuteCommands+1
 15505  0037A6  50F3               	movf	prodl,w,c
 15506  0037A8  0100               	movlb	0	; () banked
 15507  0037AA  27B7               	addwf	??_MacExecuteCommands& (0+255),f,b
 15508  0037AC  50F4               	movf	prodh,w,c
 15509  0037AE  0100               	movlb	0	; () banked
 15510  0037B0  23B8               	addwfc	(??_MacExecuteCommands+1)& (0+255),f,b
 15511  0037B2  0100               	movlb	0	; () banked
 15512  0037B4  51B7               	movf	??_MacExecuteCommands& (0+255),w,b
 15513  0037B6  0100               	movlb	0	; () banked
 15514  0037B8  5DBA               	subwf	MacExecuteCommands@ptr& (0+255),w,b
 15515  0037BA  0100               	movlb	0	; () banked
 15516  0037BC  51B8               	movf	(??_MacExecuteCommands+1)& (0+255),w,b
 15517  0037BE  0100               	movlb	0	; () banked
 15518  0037C0  59BB               	subwfb	(MacExecuteCommands@ptr+1)& (0+255),w,b
 15519  0037C2  B0D8               	btfsc	status,0,c
 15520  0037C4  D005               	goto	l15529
 15521                           
 15522                           ; BSR set to: 0
 15523  0037C6  0100               	movlb	0	; () banked
 15524  0037C8  51B9               	movf	MacExecuteCommands@done& (0+255),w,b
 15525  0037CA  0100               	movlb	0	; () banked
 15526  0037CC  B4D8               	btfsc	status,2,c
 15527  0037CE  D64B               	goto	l15489
 15528  0037D0                     l15529:
 15529                           
 15530                           ; BSR set to: 0
 15531                           ;lorawan.c: 1647: }
 15532                           ;lorawan.c: 1648: }
 15533                           ;lorawan.c: 1649: return ptr;
 15534  0037D0  C0BA  F0B4         	movff	MacExecuteCommands@ptr,?_MacExecuteCommands
 15535  0037D4  C0BB  F0B5         	movff	MacExecuteCommands@ptr+1,?_MacExecuteCommands+1
 15536  0037D8  0012               	return	
 15537  0037DA                     __end_of_MacExecuteCommands:
 15538                           	opt stack 0
 15539                           tosu	equ	0xFFF
 15540                           tosh	equ	0xFFE
 15541                           tosl	equ	0xFFD
 15542                           pclath	equ	0xFFA
 15543                           tblptru	equ	0xFF8
 15544                           tblptrh	equ	0xFF7
 15545                           tblptrl	equ	0xFF6
 15546                           tablat	equ	0xFF5
 15547                           prodh	equ	0xFF4
 15548                           prodl	equ	0xFF3
 15549                           intcon	equ	0xFF2
 15550                           intcon2	equ	0xFF1
 15551                           intcon3	equ	0xFF0
 15552                           indf0	equ	0xFEF
 15553                           postinc0	equ	0xFEE
 15554                           fsr0h	equ	0xFEA
 15555                           fsr0l	equ	0xFE9
 15556                           wreg	equ	0xFE8
 15557                           postinc1	equ	0xFE6
 15558                           postdec1	equ	0xFE5
 15559                           plusw1	equ	0xFE3
 15560                           fsr1h	equ	0xFE2
 15561                           fsr1l	equ	0xFE1
 15562                           indf2	equ	0xFDF
 15563                           postinc2	equ	0xFDE
 15564                           postdec2	equ	0xFDD
 15565                           fsr2h	equ	0xFDA
 15566                           fsr2l	equ	0xFD9
 15567                           status	equ	0xFD8
 15568                           
 15569 ;; *************** function _ExecuteRxTimingSetup *****************
 15570 ;; Defined at:
 15571 ;;		line 1659 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15572 ;; Parameters:    Size  Location     Type
 15573 ;;  ptr             2   11[BANK0 ] PTR unsigned char 
 15574 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15575 ;; Auto vars:     Size  Location     Type
 15576 ;;  delay           1   13[BANK0 ] unsigned char 
 15577 ;; Return value:  Size  Location     Type
 15578 ;;                  2   11[BANK0 ] PTR unsigned char 
 15579 ;; Registers used:
 15580 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15581 ;; Tracked objects:
 15582 ;;		On entry : 0/0
 15583 ;;		On exit  : 0/0
 15584 ;;		Unchanged: 0/0
 15585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15586 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15587 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15588 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15589 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15590 ;;Total ram usage:        3 bytes
 15591 ;; Hardware stack levels used:    1
 15592 ;; Hardware stack levels required when called:    9
 15593 ;; This function calls:
 15594 ;;		_UpdateReceiveDelays
 15595 ;; This function is called by:
 15596 ;;		_MacExecuteCommands
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           	psect	text69
 15601  009DF0                     __ptext69:
 15602                           	opt stack 0
 15603  009DF0                     _ExecuteRxTimingSetup:
 15604                           	opt stack 16
 15605                           
 15606                           ;lorawan.c: 1661: uint8_t delay;
 15607                           ;lorawan.c: 1663: delay = (*ptr) & 0x0F;
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;incstack = 0
 15611  009DF0  C06B  FFD9         	movff	ExecuteRxTimingSetup@ptr,fsr2l
 15612  009DF4  C06C  FFDA         	movff	ExecuteRxTimingSetup@ptr+1,fsr2h
 15613  009DF8  50DF               	movf	indf2,w,c
 15614  009DFA  0B0F               	andlw	15
 15615  009DFC  0100               	movlb	0	; () banked
 15616  009DFE  6F6D               	movwf	ExecuteRxTimingSetup@delay& (0+255),b
 15617                           
 15618                           ; BSR set to: 0
 15619                           ;lorawan.c: 1664: ptr++;
 15620  009E00  0100               	movlb	0	; () banked
 15621  009E02  4B6B               	infsnz	ExecuteRxTimingSetup@ptr& (0+255),f,b
 15622  009E04  2B6C               	incf	(ExecuteRxTimingSetup@ptr+1)& (0+255),f,b
 15623                           
 15624                           ; BSR set to: 0
 15625                           ;lorawan.c: 1666: UpdateReceiveDelays (delay);
 15626  009E06  0100               	movlb	0	; () banked
 15627  009E08  516D               	movf	ExecuteRxTimingSetup@delay& (0+255),w,b
 15628  009E0A  EC39  F04B         	call	_UpdateReceiveDelays
 15629                           
 15630                           ;lorawan.c: 1667: loRa.macStatus.rxTimingSetup = 1;
 15631  009E0E  0102               	movlb	2	; () banked
 15632  009E10  8104               	bsf	(_loRa+4)& (0+255),0,b
 15633                           
 15634                           ; BSR set to: 2
 15635                           ;lorawan.c: 1669: return ptr;
 15636  009E12  C06B  F06B         	movff	ExecuteRxTimingSetup@ptr,?_ExecuteRxTimingSetup
 15637  009E16  C06C  F06C         	movff	ExecuteRxTimingSetup@ptr+1,?_ExecuteRxTimingSetup+1
 15638  009E1A  0012               	return	
 15639  009E1C                     __end_of_ExecuteRxTimingSetup:
 15640                           	opt stack 0
 15641                           tosu	equ	0xFFF
 15642                           tosh	equ	0xFFE
 15643                           tosl	equ	0xFFD
 15644                           pclath	equ	0xFFA
 15645                           tblptru	equ	0xFF8
 15646                           tblptrh	equ	0xFF7
 15647                           tblptrl	equ	0xFF6
 15648                           tablat	equ	0xFF5
 15649                           prodh	equ	0xFF4
 15650                           prodl	equ	0xFF3
 15651                           intcon	equ	0xFF2
 15652                           intcon2	equ	0xFF1
 15653                           intcon3	equ	0xFF0
 15654                           indf0	equ	0xFEF
 15655                           postinc0	equ	0xFEE
 15656                           fsr0h	equ	0xFEA
 15657                           fsr0l	equ	0xFE9
 15658                           wreg	equ	0xFE8
 15659                           postinc1	equ	0xFE6
 15660                           postdec1	equ	0xFE5
 15661                           plusw1	equ	0xFE3
 15662                           fsr1h	equ	0xFE2
 15663                           fsr1l	equ	0xFE1
 15664                           indf2	equ	0xFDF
 15665                           postinc2	equ	0xFDE
 15666                           postdec2	equ	0xFDD
 15667                           fsr2h	equ	0xFDA
 15668                           fsr2l	equ	0xFD9
 15669                           status	equ	0xFD8
 15670                           
 15671 ;; *************** function _UpdateReceiveDelays *****************
 15672 ;; Defined at:
 15673 ;;		line 2026 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 15674 ;; Parameters:    Size  Location     Type
 15675 ;;  delay           1    wreg     unsigned char 
 15676 ;; Auto vars:     Size  Location     Type
 15677 ;;  delay           1   10[BANK0 ] unsigned char 
 15678 ;; Return value:  Size  Location     Type
 15679 ;;                  1    wreg      void 
 15680 ;; Registers used:
 15681 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 15682 ;; Tracked objects:
 15683 ;;		On entry : 0/0
 15684 ;;		On exit  : 0/0
 15685 ;;		Unchanged: 0/0
 15686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15687 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15688 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15690 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15691 ;;Total ram usage:        1 bytes
 15692 ;; Hardware stack levels used:    1
 15693 ;; Hardware stack levels required when called:    8
 15694 ;; This function calls:
 15695 ;;		___wmul
 15696 ;; This function is called by:
 15697 ;;		_LORAWAN_RxDone
 15698 ;;		_ExecuteRxTimingSetup
 15699 ;; This function uses a non-reentrant model
 15700 ;;
 15701                           
 15702                           	psect	text70
 15703  009672                     __ptext70:
 15704                           	opt stack 0
 15705  009672                     _UpdateReceiveDelays:
 15706                           	opt stack 18
 15707                           
 15708                           ; BSR set to: 2
 15709                           ;incstack = 0
 15710                           ;UpdateReceiveDelays@delay stored from wreg
 15711  009672  0100               	movlb	0	; () banked
 15712  009674  6F6A               	movwf	UpdateReceiveDelays@delay& (0+255),b
 15713                           
 15714                           ;lorawan.c: 2028: loRa.protocolParameters.receiveDelay1 = 1000 * delay ;
 15715  009676  C06A  F064         	movff	UpdateReceiveDelays@delay,___wmul@multiplier
 15716  00967A  0100               	movlb	0	; () banked
 15717  00967C  6B65               	clrf	(___wmul@multiplier+1)& (0+255),b
 15718  00967E  0E03               	movlw	3
 15719  009680  0100               	movlb	0	; () banked
 15720  009682  6F67               	movwf	(___wmul@multiplicand+1)& (0+255),b
 15721  009684  0EE8               	movlw	232
 15722  009686  6F66               	movwf	___wmul@multiplicand& (0+255),b
 15723  009688  ECA1  F04D         	call	___wmul	;wreg free
 15724  00968C  C064  F294         	movff	?___wmul,_loRa+148
 15725  009690  C065  F295         	movff	?___wmul+1,_loRa+149
 15726                           
 15727                           ;lorawan.c: 2029: if (delay == 0)
 15728  009694  0100               	movlb	0	; () banked
 15729  009696  516A               	movf	UpdateReceiveDelays@delay& (0+255),w,b
 15730  009698  0100               	movlb	0	; () banked
 15731  00969A  A4D8               	btfss	status,2,c
 15732  00969C  D005               	goto	l14561
 15733                           
 15734                           ; BSR set to: 0
 15735                           ;lorawan.c: 2030: {
 15736                           ;lorawan.c: 2031: loRa.protocolParameters.receiveDelay1 = 1000;
 15737  00969E  0E03               	movlw	3
 15738  0096A0  0102               	movlb	2	; () banked
 15739  0096A2  6F95               	movwf	(_loRa+149)& (0+255),b
 15740  0096A4  0EE8               	movlw	232
 15741  0096A6  6F94               	movwf	(_loRa+148)& (0+255),b
 15742  0096A8                     l14561:
 15743                           
 15744                           ;lorawan.c: 2032: }
 15745                           ;lorawan.c: 2034: loRa.protocolParameters.receiveDelay2 = loRa.protocolParameters.receiv
      +                          eDelay1 + 1000;
 15746  0096A8  0EE8               	movlw	232
 15747  0096AA  0102               	movlb	2	; () banked
 15748  0096AC  2594               	addwf	(_loRa+148)& (0+255),w,b
 15749  0096AE  0102               	movlb	2	; () banked
 15750  0096B0  6F96               	movwf	(_loRa+150)& (0+255),b
 15751  0096B2  0E03               	movlw	3
 15752  0096B4  0102               	movlb	2	; () banked
 15753  0096B6  2195               	addwfc	(_loRa+149)& (0+255),w,b
 15754  0096B8  0102               	movlb	2	; () banked
 15755  0096BA  6F97               	movwf	(_loRa+151)& (0+255),b
 15756                           
 15757                           ; BSR set to: 2
 15758  0096BC  0012               	return		;funcret
 15759  0096BE                     __end_of_UpdateReceiveDelays:
 15760                           	opt stack 0
 15761                           tosu	equ	0xFFF
 15762                           tosh	equ	0xFFE
 15763                           tosl	equ	0xFFD
 15764                           pclath	equ	0xFFA
 15765                           tblptru	equ	0xFF8
 15766                           tblptrh	equ	0xFF7
 15767                           tblptrl	equ	0xFF6
 15768                           tablat	equ	0xFF5
 15769                           prodh	equ	0xFF4
 15770                           prodl	equ	0xFF3
 15771                           intcon	equ	0xFF2
 15772                           intcon2	equ	0xFF1
 15773                           intcon3	equ	0xFF0
 15774                           indf0	equ	0xFEF
 15775                           postinc0	equ	0xFEE
 15776                           fsr0h	equ	0xFEA
 15777                           fsr0l	equ	0xFE9
 15778                           wreg	equ	0xFE8
 15779                           postinc1	equ	0xFE6
 15780                           postdec1	equ	0xFE5
 15781                           plusw1	equ	0xFE3
 15782                           fsr1h	equ	0xFE2
 15783                           fsr1l	equ	0xFE1
 15784                           indf2	equ	0xFDF
 15785                           postinc2	equ	0xFDE
 15786                           postdec2	equ	0xFDD
 15787                           fsr2h	equ	0xFDA
 15788                           fsr2l	equ	0xFD9
 15789                           status	equ	0xFD8
 15790                           
 15791 ;; *************** function ___wmul *****************
 15792 ;; Defined at:
 15793 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  multiplier      2    4[BANK0 ] unsigned int 
 15796 ;;  multiplicand    2    6[BANK0 ] unsigned int 
 15797 ;; Auto vars:     Size  Location     Type
 15798 ;;  product         2    8[BANK0 ] unsigned int 
 15799 ;; Return value:  Size  Location     Type
 15800 ;;                  2    4[BANK0 ] unsigned int 
 15801 ;; Registers used:
 15802 ;;		wreg, status,2, status,0, prodl, prodh
 15803 ;; Tracked objects:
 15804 ;;		On entry : 0/0
 15805 ;;		On exit  : 0/0
 15806 ;;		Unchanged: 0/0
 15807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15808 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15811 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15812 ;;Total ram usage:        6 bytes
 15813 ;; Hardware stack levels used:    1
 15814 ;; Hardware stack levels required when called:    7
 15815 ;; This function calls:
 15816 ;;		Nothing
 15817 ;; This function is called by:
 15818 ;;		_UpdateCfList
 15819 ;;		_UpdateReceiveDelays
 15820 ;; This function uses a non-reentrant model
 15821 ;;
 15822                           
 15823                           	psect	text71
 15824  009B42                     __ptext71:
 15825                           	opt stack 0
 15826  009B42                     ___wmul:
 15827                           	opt stack 18
 15828                           
 15829                           ; BSR set to: 2
 15830                           ;incstack = 0
 15831  009B42  0100               	movlb	0	; () banked
 15832  009B44  5164               	movf	___wmul@multiplier& (0+255),w,b
 15833  009B46  0100               	movlb	0	; () banked
 15834  009B48  0366               	mulwf	___wmul@multiplicand& (0+255),b
 15835  009B4A  CFF3 F068          	movff	prodl,___wmul@product
 15836  009B4E  CFF4 F069          	movff	prodh,___wmul@product+1
 15837  009B52  0100               	movlb	0	; () banked
 15838  009B54  5164               	movf	___wmul@multiplier& (0+255),w,b
 15839  009B56  0100               	movlb	0	; () banked
 15840  009B58  0367               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 15841  009B5A  50F3               	movf	prodl,w,c
 15842  009B5C  0100               	movlb	0	; () banked
 15843  009B5E  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 15844  009B60  0100               	movlb	0	; () banked
 15845  009B62  5165               	movf	(___wmul@multiplier+1)& (0+255),w,b
 15846  009B64  0100               	movlb	0	; () banked
 15847  009B66  0366               	mulwf	___wmul@multiplicand& (0+255),b
 15848  009B68  50F3               	movf	prodl,w,c
 15849  009B6A  0100               	movlb	0	; () banked
 15850  009B6C  2769               	addwf	(___wmul@product+1)& (0+255),f,b
 15851                           
 15852                           ; BSR set to: 0
 15853  009B6E  C068  F064         	movff	___wmul@product,?___wmul
 15854  009B72  C069  F065         	movff	___wmul@product+1,?___wmul+1
 15855  009B76  0012               	return	
 15856  009B78                     __end_of___wmul:
 15857                           	opt stack 0
 15858                           tosu	equ	0xFFF
 15859                           tosh	equ	0xFFE
 15860                           tosl	equ	0xFFD
 15861                           pclath	equ	0xFFA
 15862                           tblptru	equ	0xFF8
 15863                           tblptrh	equ	0xFF7
 15864                           tblptrl	equ	0xFF6
 15865                           tablat	equ	0xFF5
 15866                           prodh	equ	0xFF4
 15867                           prodl	equ	0xFF3
 15868                           intcon	equ	0xFF2
 15869                           intcon2	equ	0xFF1
 15870                           intcon3	equ	0xFF0
 15871                           indf0	equ	0xFEF
 15872                           postinc0	equ	0xFEE
 15873                           fsr0h	equ	0xFEA
 15874                           fsr0l	equ	0xFE9
 15875                           wreg	equ	0xFE8
 15876                           postinc1	equ	0xFE6
 15877                           postdec1	equ	0xFE5
 15878                           plusw1	equ	0xFE3
 15879                           fsr1h	equ	0xFE2
 15880                           fsr1l	equ	0xFE1
 15881                           indf2	equ	0xFDF
 15882                           postinc2	equ	0xFDE
 15883                           postdec2	equ	0xFDD
 15884                           fsr2h	equ	0xFDA
 15885                           fsr2l	equ	0xFD9
 15886                           status	equ	0xFD8
 15887                           
 15888 ;; *************** function _ExecuteRxParamSetupReq *****************
 15889 ;; Defined at:
 15890 ;;		line 740 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 15891 ;; Parameters:    Size  Location     Type
 15892 ;;  ptr             2   74[BANK0 ] PTR unsigned char 
 15893 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 15894 ;; Auto vars:     Size  Location     Type
 15895 ;;  frequency       4   78[BANK0 ] unsigned long 
 15896 ;;  dlSettings      1   82[BANK0 ] struct .
 15897 ;; Return value:  Size  Location     Type
 15898 ;;                  2   74[BANK0 ] PTR unsigned char 
 15899 ;; Registers used:
 15900 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15901 ;; Tracked objects:
 15902 ;;		On entry : 0/0
 15903 ;;		On exit  : 0/0
 15904 ;;		Unchanged: 0/0
 15905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15906 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15907 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15908 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15909 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15910 ;;Total ram usage:        9 bytes
 15911 ;; Hardware stack levels used:    1
 15912 ;; Hardware stack levels required when called:    8
 15913 ;; This function calls:
 15914 ;;		_UpdateReceiveWindow2Parameters
 15915 ;;		_ValidateDataRate
 15916 ;;		_ValidateFrequency
 15917 ;;		_ValidateRxOffset
 15918 ;;		___lmul
 15919 ;; This function is called by:
 15920 ;;		_MacExecuteCommands
 15921 ;; This function uses a non-reentrant model
 15922 ;;
 15923                           
 15924                           	psect	text72
 15925  004464                     __ptext72:
 15926                           	opt stack 0
 15927  004464                     _ExecuteRxParamSetupReq:
 15928                           	opt stack 17
 15929                           
 15930                           ;lorawan_eu.c: 742: DlSettings_t dlSettings;
 15931                           ;lorawan_eu.c: 743: uint32_t frequency = 0;
 15932                           
 15933                           ; BSR set to: 0
 15934                           ;incstack = 0
 15935  004464  0E00               	movlw	0
 15936  004466  0100               	movlb	0	; () banked
 15937  004468  6FAE               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15938  00446A  0E00               	movlw	0
 15939  00446C  6FAF               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15940  00446E  0E00               	movlw	0
 15941  004470  6FB0               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15942  004472  0E00               	movlw	0
 15943  004474  6FB1               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15944                           
 15945                           ; BSR set to: 0
 15946                           ;lorawan_eu.c: 747: dlSettings.value = *(ptr++);
 15947  004476  C0AA  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15948  00447A  C0AB  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15949  00447E  50DF               	movf	indf2,w,c
 15950  004480  0100               	movlb	0	; () banked
 15951  004482  6FB2               	movwf	ExecuteRxParamSetupReq@dlSettings& (0+255),b
 15952                           
 15953                           ; BSR set to: 0
 15954  004484  0100               	movlb	0	; () banked
 15955  004486  4BAA               	infsnz	ExecuteRxParamSetupReq@ptr& (0+255),f,b
 15956  004488  2BAB               	incf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),f,b
 15957                           
 15958                           ; BSR set to: 0
 15959                           ;lorawan_eu.c: 749: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 15960  00448A  C0AA  FFD9         	movff	ExecuteRxParamSetupReq@ptr,fsr2l
 15961  00448E  C0AB  FFDA         	movff	ExecuteRxParamSetupReq@ptr+1,fsr2h
 15962  004492  0EFF               	movlw	255
 15963  004494  14DE               	andwf	postinc2,w,c
 15964  004496  0100               	movlb	0	; () banked
 15965  004498  6FAE               	movwf	ExecuteRxParamSetupReq@frequency& (0+255),b
 15966  00449A  0EFF               	movlw	255
 15967  00449C  14DE               	andwf	postinc2,w,c
 15968  00449E  0100               	movlb	0	; () banked
 15969  0044A0  6FAF               	movwf	(ExecuteRxParamSetupReq@frequency+1)& (0+255),b
 15970  0044A2  0EFF               	movlw	255
 15971  0044A4  14DE               	andwf	postinc2,w,c
 15972  0044A6  0100               	movlb	0	; () banked
 15973  0044A8  6FB0               	movwf	(ExecuteRxParamSetupReq@frequency+2)& (0+255),b
 15974  0044AA  0E00               	movlw	0
 15975  0044AC  14DE               	andwf	postinc2,w,c
 15976  0044AE  0100               	movlb	0	; () banked
 15977  0044B0  6FB1               	movwf	(ExecuteRxParamSetupReq@frequency+3)& (0+255),b
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;lorawan_eu.c: 750: frequency = frequency * 100;
 15981  0044B2  C0AE  F09E         	movff	ExecuteRxParamSetupReq@frequency,___lmul@multiplier
 15982  0044B6  C0AF  F09F         	movff	ExecuteRxParamSetupReq@frequency+1,___lmul@multiplier+1
 15983  0044BA  C0B0  F0A0         	movff	ExecuteRxParamSetupReq@frequency+2,___lmul@multiplier+2
 15984  0044BE  C0B1  F0A1         	movff	ExecuteRxParamSetupReq@frequency+3,___lmul@multiplier+3
 15985  0044C2  0E64               	movlw	100
 15986  0044C4  0100               	movlb	0	; () banked
 15987  0044C6  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 15988  0044C8  0E00               	movlw	0
 15989  0044CA  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 15990  0044CC  0E00               	movlw	0
 15991  0044CE  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 15992  0044D0  0E00               	movlw	0
 15993  0044D2  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 15994  0044D4  ECBF  F046         	call	___lmul	;wreg free
 15995  0044D8  C09E  F0AE         	movff	?___lmul,ExecuteRxParamSetupReq@frequency
 15996  0044DC  C09F  F0AF         	movff	?___lmul+1,ExecuteRxParamSetupReq@frequency+1
 15997  0044E0  C0A0  F0B0         	movff	?___lmul+2,ExecuteRxParamSetupReq@frequency+2
 15998  0044E4  C0A1  F0B1         	movff	?___lmul+3,ExecuteRxParamSetupReq@frequency+3
 15999                           
 16000                           ;lorawan_eu.c: 751: ptr = ptr + 3;
 16001  0044E8  0E03               	movlw	3
 16002  0044EA  0100               	movlb	0	; () banked
 16003  0044EC  25AA               	addwf	ExecuteRxParamSetupReq@ptr& (0+255),w,b
 16004  0044EE  0100               	movlb	0	; () banked
 16005  0044F0  6FAA               	movwf	ExecuteRxParamSetupReq@ptr& (0+255),b
 16006  0044F2  0E00               	movlw	0
 16007  0044F4  0100               	movlb	0	; () banked
 16008  0044F6  21AB               	addwfc	(ExecuteRxParamSetupReq@ptr+1)& (0+255),w,b
 16009  0044F8  0100               	movlb	0	; () banked
 16010  0044FA  6FAB               	movwf	(ExecuteRxParamSetupReq@ptr+1)& (0+255),b
 16011                           
 16012                           ; BSR set to: 0
 16013                           ;lorawan_eu.c: 753: if (ValidateFrequency (frequency) == OK)
 16014  0044FC  C0AE  F064         	movff	ExecuteRxParamSetupReq@frequency,ValidateFrequency@frequencyNew
 16015  004500  C0AF  F065         	movff	ExecuteRxParamSetupReq@frequency+1,ValidateFrequency@frequencyNew+1
 16016  004504  C0B0  F066         	movff	ExecuteRxParamSetupReq@frequency+2,ValidateFrequency@frequencyNew+2
 16017  004508  C0B1  F067         	movff	ExecuteRxParamSetupReq@frequency+3,ValidateFrequency@frequencyNew+3
 16018  00450C  EC84  F045         	call	_ValidateFrequency	;wreg free
 16019  004510  0900               	iorlw	0
 16020  004512  A4D8               	btfss	status,2,c
 16021  004514  D01E               	goto	l14993
 16022                           
 16023                           ;lorawan_eu.c: 754: {
 16024                           ;lorawan_eu.c: 755: loRa.macCommands[loRa.crtMacCmdIndex].channelAck = 1;
 16025  004516  0102               	movlb	2	; () banked
 16026  004518  51A7               	movf	(_loRa+167)& (0+255),w,b
 16027  00451A  0D02               	mullw	2
 16028  00451C  0E00               	movlw	low _loRa
 16029  00451E  0100               	movlb	0	; () banked
 16030  004520  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16031  004522  0E02               	movlw	high _loRa
 16032  004524  0100               	movlb	0	; () banked
 16033  004526  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16034  004528  0EA8               	movlw	168
 16035  00452A  0100               	movlb	0	; () banked
 16036  00452C  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16037  00452E  0E00               	movlw	0
 16038  004530  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16039  004532  50F3               	movf	prodl,w,c
 16040  004534  0100               	movlb	0	; () banked
 16041  004536  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16042  004538  50F4               	movf	prodh,w,c
 16043  00453A  0100               	movlb	0	; () banked
 16044  00453C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16045  00453E  0E01               	movlw	1
 16046  004540  0100               	movlb	0	; () banked
 16047  004542  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16048  004544  6ED9               	movwf	fsr2l,c
 16049  004546  0E00               	movlw	0
 16050  004548  0100               	movlb	0	; () banked
 16051  00454A  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16052  00454C  6EDA               	movwf	fsr2h,c
 16053  00454E  0102               	movlb	2	; () banked
 16054  004550  86DF               	bsf	indf2,3,c
 16055  004552                     l14993:
 16056                           
 16057                           ;lorawan_eu.c: 756: }
 16058                           ;lorawan_eu.c: 758: if (ValidateDataRate (dlSettings.bits.rx2DataRate) == OK)
 16059  004552  0100               	movlb	0	; () banked
 16060  004554  51B2               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16061  004556  0B0F               	andlw	15
 16062  004558  EC92  F050         	call	_ValidateDataRate
 16063  00455C  0900               	iorlw	0
 16064  00455E  A4D8               	btfss	status,2,c
 16065  004560  D01E               	goto	l14997
 16066                           
 16067                           ;lorawan_eu.c: 759: {
 16068                           ;lorawan_eu.c: 760: loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck = 1;
 16069  004562  0102               	movlb	2	; () banked
 16070  004564  51A7               	movf	(_loRa+167)& (0+255),w,b
 16071  004566  0D02               	mullw	2
 16072  004568  0E00               	movlw	low _loRa
 16073  00456A  0100               	movlb	0	; () banked
 16074  00456C  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16075  00456E  0E02               	movlw	high _loRa
 16076  004570  0100               	movlb	0	; () banked
 16077  004572  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16078  004574  0EA8               	movlw	168
 16079  004576  0100               	movlb	0	; () banked
 16080  004578  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16081  00457A  0E00               	movlw	0
 16082  00457C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16083  00457E  50F3               	movf	prodl,w,c
 16084  004580  0100               	movlb	0	; () banked
 16085  004582  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16086  004584  50F4               	movf	prodh,w,c
 16087  004586  0100               	movlb	0	; () banked
 16088  004588  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16089  00458A  0E01               	movlw	1
 16090  00458C  0100               	movlb	0	; () banked
 16091  00458E  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16092  004590  6ED9               	movwf	fsr2l,c
 16093  004592  0E00               	movlw	0
 16094  004594  0100               	movlb	0	; () banked
 16095  004596  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16096  004598  6EDA               	movwf	fsr2h,c
 16097  00459A  0102               	movlb	2	; () banked
 16098  00459C  88DF               	bsf	indf2,4,c
 16099  00459E                     l14997:
 16100                           
 16101                           ;lorawan_eu.c: 761: }
 16102                           ;lorawan_eu.c: 763: if (ValidateRxOffset (dlSettings.bits.rx1DROffset) == OK)
 16103  00459E  0100               	movlb	0	; () banked
 16104  0045A0  39B2               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16105  0045A2  0B07               	andlw	7
 16106  0045A4  EC74  F050         	call	_ValidateRxOffset
 16107  0045A8  0900               	iorlw	0
 16108  0045AA  A4D8               	btfss	status,2,c
 16109  0045AC  D01E               	goto	l1125
 16110                           
 16111                           ;lorawan_eu.c: 764: {
 16112                           ;lorawan_eu.c: 765: loRa.macCommands[loRa.crtMacCmdIndex].rx1DROffestAck = 1;
 16113  0045AE  0102               	movlb	2	; () banked
 16114  0045B0  51A7               	movf	(_loRa+167)& (0+255),w,b
 16115  0045B2  0D02               	mullw	2
 16116  0045B4  0E00               	movlw	low _loRa
 16117  0045B6  0100               	movlb	0	; () banked
 16118  0045B8  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16119  0045BA  0E02               	movlw	high _loRa
 16120  0045BC  0100               	movlb	0	; () banked
 16121  0045BE  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16122  0045C0  0EA8               	movlw	168
 16123  0045C2  0100               	movlb	0	; () banked
 16124  0045C4  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16125  0045C6  0E00               	movlw	0
 16126  0045C8  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16127  0045CA  50F3               	movf	prodl,w,c
 16128  0045CC  0100               	movlb	0	; () banked
 16129  0045CE  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16130  0045D0  50F4               	movf	prodh,w,c
 16131  0045D2  0100               	movlb	0	; () banked
 16132  0045D4  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16133  0045D6  0E01               	movlw	1
 16134  0045D8  0100               	movlb	0	; () banked
 16135  0045DA  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16136  0045DC  6ED9               	movwf	fsr2l,c
 16137  0045DE  0E00               	movlw	0
 16138  0045E0  0100               	movlb	0	; () banked
 16139  0045E2  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16140  0045E4  6EDA               	movwf	fsr2h,c
 16141  0045E6  0102               	movlb	2	; () banked
 16142  0045E8  8ADF               	bsf	indf2,5,c
 16143  0045EA                     l1125:
 16144                           
 16145                           ;lorawan_eu.c: 766: }
 16146                           ;lorawan_eu.c: 768: if ( (loRa.macCommands[loRa.crtMacCmdIndex].dataRateReceiveWindowAck
      +                           == 1) && (loRa.macCommands[loRa.crtMacCmdIndex].channelAck == 1) && (loRa.macCommands[l
      +                          oRa.crtMacCmdIndex].rx1DROffestAck == 1))
 16147  0045EA  0102               	movlb	2	; () banked
 16148  0045EC  51A7               	movf	(_loRa+167)& (0+255),w,b
 16149  0045EE  0D02               	mullw	2
 16150  0045F0  0E00               	movlw	low _loRa
 16151  0045F2  0100               	movlb	0	; () banked
 16152  0045F4  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16153  0045F6  0E02               	movlw	high _loRa
 16154  0045F8  0100               	movlb	0	; () banked
 16155  0045FA  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16156  0045FC  0EA8               	movlw	168
 16157  0045FE  0100               	movlb	0	; () banked
 16158  004600  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16159  004602  0E00               	movlw	0
 16160  004604  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16161  004606  50F3               	movf	prodl,w,c
 16162  004608  0100               	movlb	0	; () banked
 16163  00460A  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16164  00460C  50F4               	movf	prodh,w,c
 16165  00460E  0100               	movlb	0	; () banked
 16166  004610  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16167  004612  0E01               	movlw	1
 16168  004614  0100               	movlb	0	; () banked
 16169  004616  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16170  004618  6ED9               	movwf	fsr2l,c
 16171  00461A  0E00               	movlw	0
 16172  00461C  0100               	movlb	0	; () banked
 16173  00461E  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16174  004620  6EDA               	movwf	fsr2h,c
 16175  004622  0102               	movlb	2	; () banked
 16176  004624  A8DF               	btfss	indf2,4,c
 16177  004626  D054               	goto	l15011
 16178                           
 16179                           ; BSR set to: 2
 16180  004628  0102               	movlb	2	; () banked
 16181  00462A  51A7               	movf	(_loRa+167)& (0+255),w,b
 16182  00462C  0D02               	mullw	2
 16183  00462E  0E00               	movlw	low _loRa
 16184  004630  0100               	movlb	0	; () banked
 16185  004632  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16186  004634  0E02               	movlw	high _loRa
 16187  004636  0100               	movlb	0	; () banked
 16188  004638  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16189  00463A  0EA8               	movlw	168
 16190  00463C  0100               	movlb	0	; () banked
 16191  00463E  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16192  004640  0E00               	movlw	0
 16193  004642  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16194  004644  50F3               	movf	prodl,w,c
 16195  004646  0100               	movlb	0	; () banked
 16196  004648  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16197  00464A  50F4               	movf	prodh,w,c
 16198  00464C  0100               	movlb	0	; () banked
 16199  00464E  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16200  004650  0E01               	movlw	1
 16201  004652  0100               	movlb	0	; () banked
 16202  004654  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16203  004656  6ED9               	movwf	fsr2l,c
 16204  004658  0E00               	movlw	0
 16205  00465A  0100               	movlb	0	; () banked
 16206  00465C  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16207  00465E  6EDA               	movwf	fsr2h,c
 16208  004660  0102               	movlb	2	; () banked
 16209  004662  A6DF               	btfss	indf2,3,c
 16210  004664  D035               	goto	l15011
 16211                           
 16212                           ; BSR set to: 2
 16213  004666  0102               	movlb	2	; () banked
 16214  004668  51A7               	movf	(_loRa+167)& (0+255),w,b
 16215  00466A  0D02               	mullw	2
 16216  00466C  0E00               	movlw	low _loRa
 16217  00466E  0100               	movlb	0	; () banked
 16218  004670  6FAC               	movwf	??_ExecuteRxParamSetupReq& (0+255),b
 16219  004672  0E02               	movlw	high _loRa
 16220  004674  0100               	movlb	0	; () banked
 16221  004676  6FAD               	movwf	(??_ExecuteRxParamSetupReq+1)& (0+255),b
 16222  004678  0EA8               	movlw	168
 16223  00467A  0100               	movlb	0	; () banked
 16224  00467C  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16225  00467E  0E00               	movlw	0
 16226  004680  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16227  004682  50F3               	movf	prodl,w,c
 16228  004684  0100               	movlb	0	; () banked
 16229  004686  27AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),f,b
 16230  004688  50F4               	movf	prodh,w,c
 16231  00468A  0100               	movlb	0	; () banked
 16232  00468C  23AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),f,b
 16233  00468E  0E01               	movlw	1
 16234  004690  0100               	movlb	0	; () banked
 16235  004692  25AC               	addwf	??_ExecuteRxParamSetupReq& (0+255),w,b
 16236  004694  6ED9               	movwf	fsr2l,c
 16237  004696  0E00               	movlw	0
 16238  004698  0100               	movlb	0	; () banked
 16239  00469A  21AD               	addwfc	(??_ExecuteRxParamSetupReq+1)& (0+255),w,b
 16240  00469C  6EDA               	movwf	fsr2h,c
 16241  00469E  0102               	movlb	2	; () banked
 16242  0046A0  AADF               	btfss	indf2,5,c
 16243  0046A2  D016               	goto	l15011
 16244                           
 16245                           ; BSR set to: 2
 16246                           ;lorawan_eu.c: 769: {
 16247                           ;lorawan_eu.c: 770: loRa.offset = dlSettings.bits.rx1DROffset;
 16248  0046A4  0100               	movlb	0	; () banked
 16249  0046A6  39B2               	swapf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16250  0046A8  0B07               	andlw	7
 16251  0046AA  0102               	movlb	2	; () banked
 16252  0046AC  6FEF               	movwf	(_loRa+239)& (0+255),b
 16253                           
 16254                           ; BSR set to: 2
 16255                           ;lorawan_eu.c: 771: UpdateReceiveWindow2Parameters (frequency, dlSettings.bits.rx2DataRa
      +                          te);
 16256  0046AE  C0AE  F064         	movff	ExecuteRxParamSetupReq@frequency,UpdateReceiveWindow2Parameters@frequency
 16257  0046B2  C0AF  F065         	movff	ExecuteRxParamSetupReq@frequency+1,UpdateReceiveWindow2Parameters@frequency+1
 16258  0046B6  C0B0  F066         	movff	ExecuteRxParamSetupReq@frequency+2,UpdateReceiveWindow2Parameters@frequency+2
 16259  0046BA  C0B1  F067         	movff	ExecuteRxParamSetupReq@frequency+3,UpdateReceiveWindow2Parameters@frequency+3
 16260  0046BE  0100               	movlb	0	; () banked
 16261  0046C0  51B2               	movf	ExecuteRxParamSetupReq@dlSettings& (0+255),w,b
 16262  0046C2  0B0F               	andlw	15
 16263  0046C4  0100               	movlb	0	; () banked
 16264  0046C6  6F68               	movwf	UpdateReceiveWindow2Parameters@dataRate& (0+255),b
 16265  0046C8  EC1C  F051         	call	_UpdateReceiveWindow2Parameters	;wreg free
 16266                           
 16267                           ;lorawan_eu.c: 772: loRa.macStatus.secondReceiveWindowModified = 1;
 16268  0046CC  0102               	movlb	2	; () banked
 16269  0046CE  8F03               	bsf	(_loRa+3)& (0+255),7,b
 16270  0046D0                     l15011:
 16271                           
 16272                           ; BSR set to: 2
 16273                           ;lorawan_eu.c: 773: }
 16274                           ;lorawan_eu.c: 775: return ptr;
 16275  0046D0  C0AA  F0AA         	movff	ExecuteRxParamSetupReq@ptr,?_ExecuteRxParamSetupReq
 16276  0046D4  C0AB  F0AB         	movff	ExecuteRxParamSetupReq@ptr+1,?_ExecuteRxParamSetupReq+1
 16277  0046D8  0012               	return	
 16278  0046DA                     __end_of_ExecuteRxParamSetupReq:
 16279                           	opt stack 0
 16280                           tosu	equ	0xFFF
 16281                           tosh	equ	0xFFE
 16282                           tosl	equ	0xFFD
 16283                           pclath	equ	0xFFA
 16284                           tblptru	equ	0xFF8
 16285                           tblptrh	equ	0xFF7
 16286                           tblptrl	equ	0xFF6
 16287                           tablat	equ	0xFF5
 16288                           prodh	equ	0xFF4
 16289                           prodl	equ	0xFF3
 16290                           intcon	equ	0xFF2
 16291                           intcon2	equ	0xFF1
 16292                           intcon3	equ	0xFF0
 16293                           indf0	equ	0xFEF
 16294                           postinc0	equ	0xFEE
 16295                           fsr0h	equ	0xFEA
 16296                           fsr0l	equ	0xFE9
 16297                           wreg	equ	0xFE8
 16298                           postinc1	equ	0xFE6
 16299                           postdec1	equ	0xFE5
 16300                           plusw1	equ	0xFE3
 16301                           fsr1h	equ	0xFE2
 16302                           fsr1l	equ	0xFE1
 16303                           indf2	equ	0xFDF
 16304                           postinc2	equ	0xFDE
 16305                           postdec2	equ	0xFDD
 16306                           fsr2h	equ	0xFDA
 16307                           fsr2l	equ	0xFD9
 16308                           status	equ	0xFD8
 16309                           
 16310 ;; *************** function _ValidateRxOffset *****************
 16311 ;; Defined at:
 16312 ;;		line 1076 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16313 ;; Parameters:    Size  Location     Type
 16314 ;;  rxOffset        1    wreg     unsigned char 
 16315 ;; Auto vars:     Size  Location     Type
 16316 ;;  rxOffset        1    4[BANK0 ] unsigned char 
 16317 ;;  result          1    5[BANK0 ] enum E8016
 16318 ;; Return value:  Size  Location     Type
 16319 ;;                  1    wreg      enum E8016
 16320 ;; Registers used:
 16321 ;;		wreg, status,2, status,0
 16322 ;; Tracked objects:
 16323 ;;		On entry : 0/0
 16324 ;;		On exit  : 0/0
 16325 ;;		Unchanged: 0/0
 16326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16328 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16330 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16331 ;;Total ram usage:        2 bytes
 16332 ;; Hardware stack levels used:    1
 16333 ;; Hardware stack levels required when called:    7
 16334 ;; This function calls:
 16335 ;;		Nothing
 16336 ;; This function is called by:
 16337 ;;		_ExecuteRxParamSetupReq
 16338 ;; This function uses a non-reentrant model
 16339 ;;
 16340                           
 16341                           	psect	text73
 16342  00A0E8                     __ptext73:
 16343                           	opt stack 0
 16344  00A0E8                     _ValidateRxOffset:
 16345                           	opt stack 17
 16346                           
 16347                           ; BSR set to: 2
 16348                           ;incstack = 0
 16349                           ;ValidateRxOffset@rxOffset stored from wreg
 16350  00A0E8  0100               	movlb	0	; () banked
 16351  00A0EA  6F64               	movwf	ValidateRxOffset@rxOffset& (0+255),b
 16352                           
 16353                           ;lorawan_eu.c: 1078: LorawanError_t result = OK;
 16354  00A0EC  0E00               	movlw	0
 16355  00A0EE  0100               	movlb	0	; () banked
 16356  00A0F0  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 16357                           
 16358                           ; BSR set to: 0
 16359                           ;lorawan_eu.c: 1080: if (rxOffset > 5)
 16360  00A0F2  0E05               	movlw	5
 16361  00A0F4  0100               	movlb	0	; () banked
 16362  00A0F6  6564               	cpfsgt	ValidateRxOffset@rxOffset& (0+255),b
 16363  00A0F8  D003               	goto	l1221
 16364                           
 16365                           ; BSR set to: 0
 16366                           ;lorawan_eu.c: 1081: {
 16367                           ;lorawan_eu.c: 1082: result = INVALID_PARAMETER;
 16368  00A0FA  0E03               	movlw	3
 16369  00A0FC  0100               	movlb	0	; () banked
 16370  00A0FE  6F65               	movwf	ValidateRxOffset@result& (0+255),b
 16371  00A100                     l1221:
 16372                           
 16373                           ; BSR set to: 0
 16374                           ;lorawan_eu.c: 1083: }
 16375                           ;lorawan_eu.c: 1085: return result;
 16376  00A100  0100               	movlb	0	; () banked
 16377  00A102  5165               	movf	ValidateRxOffset@result& (0+255),w,b
 16378  00A104  0012               	return	
 16379  00A106                     __end_of_ValidateRxOffset:
 16380                           	opt stack 0
 16381                           tosu	equ	0xFFF
 16382                           tosh	equ	0xFFE
 16383                           tosl	equ	0xFFD
 16384                           pclath	equ	0xFFA
 16385                           tblptru	equ	0xFF8
 16386                           tblptrh	equ	0xFF7
 16387                           tblptrl	equ	0xFF6
 16388                           tablat	equ	0xFF5
 16389                           prodh	equ	0xFF4
 16390                           prodl	equ	0xFF3
 16391                           intcon	equ	0xFF2
 16392                           intcon2	equ	0xFF1
 16393                           intcon3	equ	0xFF0
 16394                           indf0	equ	0xFEF
 16395                           postinc0	equ	0xFEE
 16396                           fsr0h	equ	0xFEA
 16397                           fsr0l	equ	0xFE9
 16398                           wreg	equ	0xFE8
 16399                           postinc1	equ	0xFE6
 16400                           postdec1	equ	0xFE5
 16401                           plusw1	equ	0xFE3
 16402                           fsr1h	equ	0xFE2
 16403                           fsr1l	equ	0xFE1
 16404                           indf2	equ	0xFDF
 16405                           postinc2	equ	0xFDE
 16406                           postdec2	equ	0xFDD
 16407                           fsr2h	equ	0xFDA
 16408                           fsr2l	equ	0xFD9
 16409                           status	equ	0xFD8
 16410                           
 16411 ;; *************** function _UpdateReceiveWindow2Parameters *****************
 16412 ;; Defined at:
 16413 ;;		line 1084 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 16414 ;; Parameters:    Size  Location     Type
 16415 ;;  frequency       4    4[BANK0 ] unsigned long 
 16416 ;;  dataRate        1    8[BANK0 ] unsigned char 
 16417 ;; Auto vars:     Size  Location     Type
 16418 ;;		None
 16419 ;; Return value:  Size  Location     Type
 16420 ;;                  1    wreg      void 
 16421 ;; Registers used:
 16422 ;;		None
 16423 ;; Tracked objects:
 16424 ;;		On entry : 0/0
 16425 ;;		On exit  : 0/0
 16426 ;;		Unchanged: 0/0
 16427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16428 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16429 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16431 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16432 ;;Total ram usage:        5 bytes
 16433 ;; Hardware stack levels used:    1
 16434 ;; Hardware stack levels required when called:    7
 16435 ;; This function calls:
 16436 ;;		Nothing
 16437 ;; This function is called by:
 16438 ;;		_ExecuteRxParamSetupReq
 16439 ;;		_LORAWAN_SetReceiveWindow2Parameters
 16440 ;; This function uses a non-reentrant model
 16441 ;;
 16442                           
 16443                           	psect	text74
 16444  00A238                     __ptext74:
 16445                           	opt stack 0
 16446  00A238                     _UpdateReceiveWindow2Parameters:
 16447                           	opt stack 17
 16448                           
 16449                           ;lorawan.c: 1086: loRa.receiveWindow2Parameters.dataRate = dataRate;
 16450                           
 16451                           ; BSR set to: 0
 16452                           ;incstack = 0
 16453  00A238  C068  F21C         	movff	UpdateReceiveWindow2Parameters@dataRate,_loRa+28
 16454                           
 16455                           ;lorawan.c: 1087: loRa.receiveWindow2Parameters.frequency = frequency;
 16456  00A23C  C064  F218         	movff	UpdateReceiveWindow2Parameters@frequency,_loRa+24
 16457  00A240  C065  F219         	movff	UpdateReceiveWindow2Parameters@frequency+1,_loRa+25
 16458  00A244  C066  F21A         	movff	UpdateReceiveWindow2Parameters@frequency+2,_loRa+26
 16459  00A248  C067  F21B         	movff	UpdateReceiveWindow2Parameters@frequency+3,_loRa+27
 16460  00A24C  0012               	return		;funcret
 16461  00A24E                     __end_of_UpdateReceiveWindow2Parameters:
 16462                           	opt stack 0
 16463                           tosu	equ	0xFFF
 16464                           tosh	equ	0xFFE
 16465                           tosl	equ	0xFFD
 16466                           pclath	equ	0xFFA
 16467                           tblptru	equ	0xFF8
 16468                           tblptrh	equ	0xFF7
 16469                           tblptrl	equ	0xFF6
 16470                           tablat	equ	0xFF5
 16471                           prodh	equ	0xFF4
 16472                           prodl	equ	0xFF3
 16473                           intcon	equ	0xFF2
 16474                           intcon2	equ	0xFF1
 16475                           intcon3	equ	0xFF0
 16476                           indf0	equ	0xFEF
 16477                           postinc0	equ	0xFEE
 16478                           fsr0h	equ	0xFEA
 16479                           fsr0l	equ	0xFE9
 16480                           wreg	equ	0xFE8
 16481                           postinc1	equ	0xFE6
 16482                           postdec1	equ	0xFE5
 16483                           plusw1	equ	0xFE3
 16484                           fsr1h	equ	0xFE2
 16485                           fsr1l	equ	0xFE1
 16486                           indf2	equ	0xFDF
 16487                           postinc2	equ	0xFDE
 16488                           postdec2	equ	0xFDD
 16489                           fsr2h	equ	0xFDA
 16490                           fsr2l	equ	0xFD9
 16491                           status	equ	0xFD8
 16492                           
 16493 ;; *************** function _ExecuteNewChannel *****************
 16494 ;; Defined at:
 16495 ;;		line 677 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 16496 ;; Parameters:    Size  Location     Type
 16497 ;;  ptr             2   74[BANK0 ] PTR unsigned char 
 16498 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 16499 ;; Auto vars:     Size  Location     Type
 16500 ;;  frequency       4   79[BANK0 ] unsigned long 
 16501 ;;  channelIndex    1   83[BANK0 ] unsigned char 
 16502 ;;  drRange         1   78[BANK0 ] struct .
 16503 ;; Return value:  Size  Location     Type
 16504 ;;                  2   74[BANK0 ] PTR unsigned char 
 16505 ;; Registers used:
 16506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16507 ;; Tracked objects:
 16508 ;;		On entry : 0/0
 16509 ;;		On exit  : 0/0
 16510 ;;		Unchanged: 0/0
 16511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16513 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16515 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16516 ;;Total ram usage:       10 bytes
 16517 ;; Hardware stack levels used:    1
 16518 ;; Hardware stack levels required when called:    9
 16519 ;; This function calls:
 16520 ;;		_LORAWAN_SetChannelIdStatus
 16521 ;;		_UpdateChannelIdStatus
 16522 ;;		_UpdateDataRange
 16523 ;;		_UpdateDutyCycle
 16524 ;;		_UpdateFrequency
 16525 ;;		_ValidateChannelId
 16526 ;;		_ValidateDataRange
 16527 ;;		_ValidateFrequency
 16528 ;;		___lmul
 16529 ;; This function is called by:
 16530 ;;		_MacExecuteCommands
 16531 ;; This function uses a non-reentrant model
 16532 ;;
 16533                           
 16534                           	psect	text75
 16535  004182                     __ptext75:
 16536                           	opt stack 0
 16537  004182                     _ExecuteNewChannel:
 16538                           	opt stack 16
 16539                           
 16540                           ;lorawan_eu.c: 679: uint8_t channelIndex;
 16541                           ;lorawan_eu.c: 680: DataRange_t drRange;
 16542                           ;lorawan_eu.c: 681: uint32_t frequency = 0;
 16543                           
 16544                           ;incstack = 0
 16545  004182  0E00               	movlw	0
 16546  004184  0100               	movlb	0	; () banked
 16547  004186  6FAF               	movwf	ExecuteNewChannel@frequency& (0+255),b
 16548  004188  0E00               	movlw	0
 16549  00418A  6FB0               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 16550  00418C  0E00               	movlw	0
 16551  00418E  6FB1               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 16552  004190  0E00               	movlw	0
 16553  004192  6FB2               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16554                           
 16555                           ; BSR set to: 0
 16556                           ;lorawan_eu.c: 683: channelIndex = *(ptr++);
 16557  004194  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16558  004198  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16559  00419C  50DF               	movf	indf2,w,c
 16560  00419E  0100               	movlb	0	; () banked
 16561  0041A0  6FB3               	movwf	ExecuteNewChannel@channelIndex& (0+255),b
 16562                           
 16563                           ; BSR set to: 0
 16564  0041A2  0100               	movlb	0	; () banked
 16565  0041A4  4BAA               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16566  0041A6  2BAB               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16567                           
 16568                           ; BSR set to: 0
 16569                           ;lorawan_eu.c: 685: frequency = (*((uint32_t*)ptr)) & 0x00FFFFFF;
 16570  0041A8  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16571  0041AC  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16572  0041B0  0EFF               	movlw	255
 16573  0041B2  14DE               	andwf	postinc2,w,c
 16574  0041B4  0100               	movlb	0	; () banked
 16575  0041B6  6FAF               	movwf	ExecuteNewChannel@frequency& (0+255),b
 16576  0041B8  0EFF               	movlw	255
 16577  0041BA  14DE               	andwf	postinc2,w,c
 16578  0041BC  0100               	movlb	0	; () banked
 16579  0041BE  6FB0               	movwf	(ExecuteNewChannel@frequency+1)& (0+255),b
 16580  0041C0  0EFF               	movlw	255
 16581  0041C2  14DE               	andwf	postinc2,w,c
 16582  0041C4  0100               	movlb	0	; () banked
 16583  0041C6  6FB1               	movwf	(ExecuteNewChannel@frequency+2)& (0+255),b
 16584  0041C8  0E00               	movlw	0
 16585  0041CA  14DE               	andwf	postinc2,w,c
 16586  0041CC  0100               	movlb	0	; () banked
 16587  0041CE  6FB2               	movwf	(ExecuteNewChannel@frequency+3)& (0+255),b
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;lorawan_eu.c: 686: frequency = frequency * 100;
 16591  0041D0  C0AF  F09E         	movff	ExecuteNewChannel@frequency,___lmul@multiplier
 16592  0041D4  C0B0  F09F         	movff	ExecuteNewChannel@frequency+1,___lmul@multiplier+1
 16593  0041D8  C0B1  F0A0         	movff	ExecuteNewChannel@frequency+2,___lmul@multiplier+2
 16594  0041DC  C0B2  F0A1         	movff	ExecuteNewChannel@frequency+3,___lmul@multiplier+3
 16595  0041E0  0E64               	movlw	100
 16596  0041E2  0100               	movlb	0	; () banked
 16597  0041E4  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 16598  0041E6  0E00               	movlw	0
 16599  0041E8  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 16600  0041EA  0E00               	movlw	0
 16601  0041EC  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 16602  0041EE  0E00               	movlw	0
 16603  0041F0  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 16604  0041F2  ECBF  F046         	call	___lmul	;wreg free
 16605  0041F6  C09E  F0AF         	movff	?___lmul,ExecuteNewChannel@frequency
 16606  0041FA  C09F  F0B0         	movff	?___lmul+1,ExecuteNewChannel@frequency+1
 16607  0041FE  C0A0  F0B1         	movff	?___lmul+2,ExecuteNewChannel@frequency+2
 16608  004202  C0A1  F0B2         	movff	?___lmul+3,ExecuteNewChannel@frequency+3
 16609                           
 16610                           ;lorawan_eu.c: 687: ptr = ptr + 3;
 16611  004206  0E03               	movlw	3
 16612  004208  0100               	movlb	0	; () banked
 16613  00420A  25AA               	addwf	ExecuteNewChannel@ptr& (0+255),w,b
 16614  00420C  0100               	movlb	0	; () banked
 16615  00420E  6FAA               	movwf	ExecuteNewChannel@ptr& (0+255),b
 16616  004210  0E00               	movlw	0
 16617  004212  0100               	movlb	0	; () banked
 16618  004214  21AB               	addwfc	(ExecuteNewChannel@ptr+1)& (0+255),w,b
 16619  004216  0100               	movlb	0	; () banked
 16620  004218  6FAB               	movwf	(ExecuteNewChannel@ptr+1)& (0+255),b
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;lorawan_eu.c: 689: drRange.value = *(ptr++);
 16624  00421A  C0AA  FFD9         	movff	ExecuteNewChannel@ptr,fsr2l
 16625  00421E  C0AB  FFDA         	movff	ExecuteNewChannel@ptr+1,fsr2h
 16626  004222  50DF               	movf	indf2,w,c
 16627  004224  0100               	movlb	0	; () banked
 16628  004226  6FAE               	movwf	ExecuteNewChannel@drRange& (0+255),b
 16629                           
 16630                           ; BSR set to: 0
 16631  004228  0100               	movlb	0	; () banked
 16632  00422A  4BAA               	infsnz	ExecuteNewChannel@ptr& (0+255),f,b
 16633  00422C  2BAB               	incf	(ExecuteNewChannel@ptr+1)& (0+255),f,b
 16634                           
 16635                           ; BSR set to: 0
 16636                           ;lorawan_eu.c: 691: if (ValidateChannelId (channelIndex, 0) == OK)
 16637  00422E  0E00               	movlw	0
 16638  004230  0100               	movlb	0	; () banked
 16639  004232  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 16640  004234  0100               	movlb	0	; () banked
 16641  004236  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16642  004238  EC57  F04E         	call	_ValidateChannelId
 16643  00423C  0900               	iorlw	0
 16644  00423E  A4D8               	btfss	status,2,c
 16645  004240  D05A               	goto	l1108
 16646                           
 16647                           ;lorawan_eu.c: 692: {
 16648                           ;lorawan_eu.c: 693: if ( (ValidateFrequency (frequency) == OK) || (frequency == 0) )
 16649  004242  C0AF  F064         	movff	ExecuteNewChannel@frequency,ValidateFrequency@frequencyNew
 16650  004246  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,ValidateFrequency@frequencyNew+1
 16651  00424A  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,ValidateFrequency@frequencyNew+2
 16652  00424E  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,ValidateFrequency@frequencyNew+3
 16653  004252  EC84  F045         	call	_ValidateFrequency	;wreg free
 16654  004256  0900               	iorlw	0
 16655  004258  B4D8               	btfsc	status,2,c
 16656  00425A  D00A               	goto	l14949
 16657  00425C  0100               	movlb	0	; () banked
 16658  00425E  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16659  004260  0100               	movlb	0	; () banked
 16660  004262  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16661  004264  0100               	movlb	0	; () banked
 16662  004266  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16663  004268  0100               	movlb	0	; () banked
 16664  00426A  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16665  00426C  A4D8               	btfss	status,2,c
 16666  00426E  D01E               	goto	l14951
 16667  004270                     l14949:
 16668                           
 16669                           ;lorawan_eu.c: 694: {
 16670                           ;lorawan_eu.c: 695: loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck = 1;
 16671  004270  0102               	movlb	2	; () banked
 16672  004272  51A7               	movf	(_loRa+167)& (0+255),w,b
 16673  004274  0D02               	mullw	2
 16674  004276  0E00               	movlw	low _loRa
 16675  004278  0100               	movlb	0	; () banked
 16676  00427A  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16677  00427C  0E02               	movlw	high _loRa
 16678  00427E  0100               	movlb	0	; () banked
 16679  004280  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16680  004282  0EA8               	movlw	168
 16681  004284  0100               	movlb	0	; () banked
 16682  004286  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16683  004288  0E00               	movlw	0
 16684  00428A  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16685  00428C  50F3               	movf	prodl,w,c
 16686  00428E  0100               	movlb	0	; () banked
 16687  004290  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16688  004292  50F4               	movf	prodh,w,c
 16689  004294  0100               	movlb	0	; () banked
 16690  004296  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16691  004298  0E01               	movlw	1
 16692  00429A  0100               	movlb	0	; () banked
 16693  00429C  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16694  00429E  6ED9               	movwf	fsr2l,c
 16695  0042A0  0E00               	movlw	0
 16696  0042A2  0100               	movlb	0	; () banked
 16697  0042A4  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16698  0042A6  6EDA               	movwf	fsr2h,c
 16699  0042A8  0102               	movlb	2	; () banked
 16700  0042AA  8EDF               	bsf	indf2,7,c
 16701  0042AC                     l14951:
 16702                           
 16703                           ;lorawan_eu.c: 696: }
 16704                           ;lorawan_eu.c: 698: if (ValidateDataRange (drRange.value) == OK)
 16705  0042AC  0100               	movlb	0	; () banked
 16706  0042AE  51AE               	movf	ExecuteNewChannel@drRange& (0+255),w,b
 16707  0042B0  EC1C  F04A         	call	_ValidateDataRange
 16708  0042B4  0900               	iorlw	0
 16709  0042B6  A4D8               	btfss	status,2,c
 16710  0042B8  D01E               	goto	l1108
 16711                           
 16712                           ;lorawan_eu.c: 699: {
 16713                           ;lorawan_eu.c: 700: loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck = 1;
 16714  0042BA  0102               	movlb	2	; () banked
 16715  0042BC  51A7               	movf	(_loRa+167)& (0+255),w,b
 16716  0042BE  0D02               	mullw	2
 16717  0042C0  0E00               	movlw	low _loRa
 16718  0042C2  0100               	movlb	0	; () banked
 16719  0042C4  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16720  0042C6  0E02               	movlw	high _loRa
 16721  0042C8  0100               	movlb	0	; () banked
 16722  0042CA  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16723  0042CC  0EA8               	movlw	168
 16724  0042CE  0100               	movlb	0	; () banked
 16725  0042D0  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16726  0042D2  0E00               	movlw	0
 16727  0042D4  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16728  0042D6  50F3               	movf	prodl,w,c
 16729  0042D8  0100               	movlb	0	; () banked
 16730  0042DA  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16731  0042DC  50F4               	movf	prodh,w,c
 16732  0042DE  0100               	movlb	0	; () banked
 16733  0042E0  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16734  0042E2  0E01               	movlw	1
 16735  0042E4  0100               	movlb	0	; () banked
 16736  0042E6  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16737  0042E8  6ED9               	movwf	fsr2l,c
 16738  0042EA  0E00               	movlw	0
 16739  0042EC  0100               	movlb	0	; () banked
 16740  0042EE  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16741  0042F0  6EDA               	movwf	fsr2h,c
 16742  0042F2  0102               	movlb	2	; () banked
 16743  0042F4  8CDF               	bsf	indf2,6,c
 16744  0042F6                     l1108:
 16745                           
 16746                           ;lorawan_eu.c: 701: }
 16747                           ;lorawan_eu.c: 702: }
 16748                           ;lorawan_eu.c: 704: if ( (loRa.macCommands[loRa.crtMacCmdIndex].channelFrequencyAck == 1
      +                          ) && (loRa.macCommands[loRa.crtMacCmdIndex].dataRateRangeAck == 1) )
 16749  0042F6  0102               	movlb	2	; () banked
 16750  0042F8  51A7               	movf	(_loRa+167)& (0+255),w,b
 16751  0042FA  0D02               	mullw	2
 16752  0042FC  0E00               	movlw	low _loRa
 16753  0042FE  0100               	movlb	0	; () banked
 16754  004300  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16755  004302  0E02               	movlw	high _loRa
 16756  004304  0100               	movlb	0	; () banked
 16757  004306  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16758  004308  0EA8               	movlw	168
 16759  00430A  0100               	movlb	0	; () banked
 16760  00430C  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16761  00430E  0E00               	movlw	0
 16762  004310  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16763  004312  50F3               	movf	prodl,w,c
 16764  004314  0100               	movlb	0	; () banked
 16765  004316  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16766  004318  50F4               	movf	prodh,w,c
 16767  00431A  0100               	movlb	0	; () banked
 16768  00431C  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16769  00431E  0E01               	movlw	1
 16770  004320  0100               	movlb	0	; () banked
 16771  004322  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16772  004324  6ED9               	movwf	fsr2l,c
 16773  004326  0E00               	movlw	0
 16774  004328  0100               	movlb	0	; () banked
 16775  00432A  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16776  00432C  6EDA               	movwf	fsr2h,c
 16777  00432E  0102               	movlb	2	; () banked
 16778  004330  AEDF               	btfss	indf2,7,c
 16779  004332  D093               	goto	l14973
 16780                           
 16781                           ; BSR set to: 2
 16782  004334  0102               	movlb	2	; () banked
 16783  004336  51A7               	movf	(_loRa+167)& (0+255),w,b
 16784  004338  0D02               	mullw	2
 16785  00433A  0E00               	movlw	low _loRa
 16786  00433C  0100               	movlb	0	; () banked
 16787  00433E  6FAC               	movwf	??_ExecuteNewChannel& (0+255),b
 16788  004340  0E02               	movlw	high _loRa
 16789  004342  0100               	movlb	0	; () banked
 16790  004344  6FAD               	movwf	(??_ExecuteNewChannel+1)& (0+255),b
 16791  004346  0EA8               	movlw	168
 16792  004348  0100               	movlb	0	; () banked
 16793  00434A  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16794  00434C  0E00               	movlw	0
 16795  00434E  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16796  004350  50F3               	movf	prodl,w,c
 16797  004352  0100               	movlb	0	; () banked
 16798  004354  27AC               	addwf	??_ExecuteNewChannel& (0+255),f,b
 16799  004356  50F4               	movf	prodh,w,c
 16800  004358  0100               	movlb	0	; () banked
 16801  00435A  23AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),f,b
 16802  00435C  0E01               	movlw	1
 16803  00435E  0100               	movlb	0	; () banked
 16804  004360  25AC               	addwf	??_ExecuteNewChannel& (0+255),w,b
 16805  004362  6ED9               	movwf	fsr2l,c
 16806  004364  0E00               	movlw	0
 16807  004366  0100               	movlb	0	; () banked
 16808  004368  21AD               	addwfc	(??_ExecuteNewChannel+1)& (0+255),w,b
 16809  00436A  6EDA               	movwf	fsr2h,c
 16810  00436C  0102               	movlb	2	; () banked
 16811  00436E  ACDF               	btfss	indf2,6,c
 16812  004370  D074               	goto	l14973
 16813                           
 16814                           ; BSR set to: 2
 16815                           ;lorawan_eu.c: 705: {
 16816                           ;lorawan_eu.c: 706: if (loRa.lastUsedChannelIndex < 16)
 16817  004372  0E10               	movlw	16
 16818  004374  0102               	movlb	2	; () banked
 16819  004376  61DA               	cpfslt	(_loRa+218)& (0+255),b
 16820  004378  D035               	goto	l14965
 16821                           
 16822                           ; BSR set to: 2
 16823                           ;lorawan_eu.c: 707: {
 16824                           ;lorawan_eu.c: 708: if (frequency != 0)
 16825  00437A  0100               	movlb	0	; () banked
 16826  00437C  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16827  00437E  0100               	movlb	0	; () banked
 16828  004380  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16829  004382  0100               	movlb	0	; () banked
 16830  004384  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16831  004386  0100               	movlb	0	; () banked
 16832  004388  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16833  00438A  B4D8               	btfsc	status,2,c
 16834  00438C  D023               	goto	l14963
 16835                           
 16836                           ; BSR set to: 0
 16837                           ;lorawan_eu.c: 709: {
 16838                           ;lorawan_eu.c: 710: UpdateFrequency (channelIndex, frequency);
 16839  00438E  C0AF  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16840  004392  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16841  004396  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16842  00439A  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16843  00439E  0100               	movlb	0	; () banked
 16844  0043A0  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16845  0043A2  ECA7  F04B         	call	_UpdateFrequency
 16846                           
 16847                           ;lorawan_eu.c: 711: UpdateDataRange (channelIndex, drRange.value);
 16848  0043A6  C0AE  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16849  0043AA  0100               	movlb	0	; () banked
 16850  0043AC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16851  0043AE  EC78  F031         	call	_UpdateDataRange
 16852                           
 16853                           ;lorawan_eu.c: 712: UpdateDutyCycle (channelIndex, 302);
 16854  0043B2  0E01               	movlw	1
 16855  0043B4  0100               	movlb	0	; () banked
 16856  0043B6  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16857  0043B8  0E2E               	movlw	46
 16858  0043BA  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16859  0043BC  0100               	movlb	0	; () banked
 16860  0043BE  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16861  0043C0  ECCA  F04B         	call	_UpdateDutyCycle
 16862                           
 16863                           ;lorawan_eu.c: 713: UpdateChannelIdStatus (channelIndex, 1);
 16864  0043C4  0E01               	movlw	1
 16865  0043C6  0100               	movlb	0	; () banked
 16866  0043C8  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16867  0043CA  0100               	movlb	0	; () banked
 16868  0043CC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16869  0043CE  ECFF  F02F         	call	_UpdateChannelIdStatus
 16870                           
 16871                           ;lorawan_eu.c: 714: }
 16872  0043D2  D041               	goto	l14971
 16873  0043D4                     l14963:
 16874                           
 16875                           ;lorawan_eu.c: 715: else
 16876                           ;lorawan_eu.c: 716: {
 16877                           ;lorawan_eu.c: 717: LORAWAN_SetChannelIdStatus (channelIndex, 0);
 16878  0043D4  0E00               	movlw	0
 16879  0043D6  0100               	movlb	0	; () banked
 16880  0043D8  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16881  0043DA  0100               	movlb	0	; () banked
 16882  0043DC  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16883  0043DE  EC38  F049         	call	_LORAWAN_SetChannelIdStatus
 16884                           
 16885                           ;lorawan_eu.c: 718: }
 16886                           ;lorawan_eu.c: 719: }
 16887  0043E2  D039               	goto	l14971
 16888  0043E4                     l14965:
 16889                           
 16890                           ;lorawan_eu.c: 720: else
 16891                           ;lorawan_eu.c: 721: {
 16892                           ;lorawan_eu.c: 722: if (frequency != 0)
 16893  0043E4  0100               	movlb	0	; () banked
 16894  0043E6  51AF               	movf	ExecuteNewChannel@frequency& (0+255),w,b
 16895  0043E8  0100               	movlb	0	; () banked
 16896  0043EA  11B0               	iorwf	(ExecuteNewChannel@frequency+1)& (0+255),w,b
 16897  0043EC  0100               	movlb	0	; () banked
 16898  0043EE  11B1               	iorwf	(ExecuteNewChannel@frequency+2)& (0+255),w,b
 16899  0043F0  0100               	movlb	0	; () banked
 16900  0043F2  11B2               	iorwf	(ExecuteNewChannel@frequency+3)& (0+255),w,b
 16901  0043F4  B4D8               	btfsc	status,2,c
 16902  0043F6  D027               	goto	l14969
 16903                           
 16904                           ; BSR set to: 0
 16905                           ;lorawan_eu.c: 723: {
 16906                           ;lorawan_eu.c: 724: UpdateFrequency (channelIndex + 16, frequency);
 16907  0043F8  C0AF  F064         	movff	ExecuteNewChannel@frequency,UpdateFrequency@frequencyNew
 16908  0043FC  C0B0  F065         	movff	ExecuteNewChannel@frequency+1,UpdateFrequency@frequencyNew+1
 16909  004400  C0B1  F066         	movff	ExecuteNewChannel@frequency+2,UpdateFrequency@frequencyNew+2
 16910  004404  C0B2  F067         	movff	ExecuteNewChannel@frequency+3,UpdateFrequency@frequencyNew+3
 16911  004408  0100               	movlb	0	; () banked
 16912  00440A  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16913  00440C  0F10               	addlw	16
 16914  00440E  ECA7  F04B         	call	_UpdateFrequency
 16915                           
 16916                           ;lorawan_eu.c: 725: UpdateDataRange (channelIndex + 16, drRange.value);
 16917  004412  C0AE  F064         	movff	ExecuteNewChannel@drRange,UpdateDataRange@dataRangeNew
 16918  004416  0100               	movlb	0	; () banked
 16919  004418  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16920  00441A  0F10               	addlw	16
 16921  00441C  EC78  F031         	call	_UpdateDataRange
 16922                           
 16923                           ;lorawan_eu.c: 726: UpdateDutyCycle (channelIndex + 16, 302);
 16924  004420  0E01               	movlw	1
 16925  004422  0100               	movlb	0	; () banked
 16926  004424  6F65               	movwf	(UpdateDutyCycle@dutyCycleNew+1)& (0+255),b
 16927  004426  0E2E               	movlw	46
 16928  004428  6F64               	movwf	UpdateDutyCycle@dutyCycleNew& (0+255),b
 16929  00442A  0100               	movlb	0	; () banked
 16930  00442C  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16931  00442E  0F10               	addlw	16
 16932  004430  ECCA  F04B         	call	_UpdateDutyCycle
 16933                           
 16934                           ;lorawan_eu.c: 727: UpdateChannelIdStatus (channelIndex + 16, 1);
 16935  004434  0E01               	movlw	1
 16936  004436  0100               	movlb	0	; () banked
 16937  004438  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 16938  00443A  0100               	movlb	0	; () banked
 16939  00443C  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16940  00443E  0F10               	addlw	16
 16941  004440  ECFF  F02F         	call	_UpdateChannelIdStatus
 16942                           
 16943                           ;lorawan_eu.c: 728: }
 16944  004444  D008               	goto	l14971
 16945  004446                     l14969:
 16946                           
 16947                           ;lorawan_eu.c: 729: else
 16948                           ;lorawan_eu.c: 730: {
 16949                           ;lorawan_eu.c: 731: LORAWAN_SetChannelIdStatus (channelIndex + 16, 0);
 16950  004446  0E00               	movlw	0
 16951  004448  0100               	movlb	0	; () banked
 16952  00444A  6F68               	movwf	LORAWAN_SetChannelIdStatus@statusNew& (0+255),b
 16953  00444C  0100               	movlb	0	; () banked
 16954  00444E  51B3               	movf	ExecuteNewChannel@channelIndex& (0+255),w,b
 16955  004450  0F10               	addlw	16
 16956  004452  EC38  F049         	call	_LORAWAN_SetChannelIdStatus
 16957  004456                     l14971:
 16958                           
 16959                           ;lorawan_eu.c: 732: }
 16960                           ;lorawan_eu.c: 733: }
 16961                           ;lorawan_eu.c: 735: loRa.macStatus.channelsModified = 1;
 16962  004456  0102               	movlb	2	; () banked
 16963  004458  8703               	bsf	(_loRa+3)& (0+255),3,b
 16964  00445A                     l14973:
 16965                           
 16966                           ; BSR set to: 2
 16967                           ;lorawan_eu.c: 736: }
 16968                           ;lorawan_eu.c: 737: return ptr;
 16969  00445A  C0AA  F0AA         	movff	ExecuteNewChannel@ptr,?_ExecuteNewChannel
 16970  00445E  C0AB  F0AB         	movff	ExecuteNewChannel@ptr+1,?_ExecuteNewChannel+1
 16971  004462  0012               	return	
 16972  004464                     __end_of_ExecuteNewChannel:
 16973                           	opt stack 0
 16974                           tosu	equ	0xFFF
 16975                           tosh	equ	0xFFE
 16976                           tosl	equ	0xFFD
 16977                           pclath	equ	0xFFA
 16978                           tblptru	equ	0xFF8
 16979                           tblptrh	equ	0xFF7
 16980                           tblptrl	equ	0xFF6
 16981                           tablat	equ	0xFF5
 16982                           prodh	equ	0xFF4
 16983                           prodl	equ	0xFF3
 16984                           intcon	equ	0xFF2
 16985                           intcon2	equ	0xFF1
 16986                           intcon3	equ	0xFF0
 16987                           indf0	equ	0xFEF
 16988                           postinc0	equ	0xFEE
 16989                           fsr0h	equ	0xFEA
 16990                           fsr0l	equ	0xFE9
 16991                           wreg	equ	0xFE8
 16992                           postinc1	equ	0xFE6
 16993                           postdec1	equ	0xFE5
 16994                           plusw1	equ	0xFE3
 16995                           fsr1h	equ	0xFE2
 16996                           fsr1l	equ	0xFE1
 16997                           indf2	equ	0xFDF
 16998                           postinc2	equ	0xFDE
 16999                           postdec2	equ	0xFDD
 17000                           fsr2h	equ	0xFDA
 17001                           fsr2l	equ	0xFD9
 17002                           status	equ	0xFD8
 17003                           
 17004 ;; *************** function _ValidateFrequency *****************
 17005 ;; Defined at:
 17006 ;;		line 1088 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17007 ;; Parameters:    Size  Location     Type
 17008 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 17009 ;; Auto vars:     Size  Location     Type
 17010 ;;  result          1    8[BANK0 ] enum E8016
 17011 ;; Return value:  Size  Location     Type
 17012 ;;                  1    wreg      enum E8016
 17013 ;; Registers used:
 17014 ;;		wreg, status,2, status,0
 17015 ;; Tracked objects:
 17016 ;;		On entry : 0/0
 17017 ;;		On exit  : 0/0
 17018 ;;		Unchanged: 0/0
 17019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17020 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17021 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17023 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17024 ;;Total ram usage:        5 bytes
 17025 ;; Hardware stack levels used:    1
 17026 ;; Hardware stack levels required when called:    7
 17027 ;; This function calls:
 17028 ;;		Nothing
 17029 ;; This function is called by:
 17030 ;;		_ExecuteNewChannel
 17031 ;;		_ExecuteRxParamSetupReq
 17032 ;;		_UpdateCfList
 17033 ;;		_LORAWAN_SetReceiveWindow2Parameters
 17034 ;;		_LORAWAN_SetFrequency
 17035 ;; This function uses a non-reentrant model
 17036 ;;
 17037                           
 17038                           	psect	text76
 17039  008B08                     __ptext76:
 17040                           	opt stack 0
 17041  008B08                     _ValidateFrequency:
 17042                           	opt stack 18
 17043                           
 17044                           ;lorawan_eu.c: 1090: LorawanError_t result = OK;
 17045                           
 17046                           ; BSR set to: 2
 17047                           ;incstack = 0
 17048  008B08  0E00               	movlw	0
 17049  008B0A  0100               	movlb	0	; () banked
 17050  008B0C  6F68               	movwf	ValidateFrequency@result& (0+255),b
 17051                           
 17052                           ;lorawan_eu.c: 1092: if(ISM_EU868 == loRa.ismBand)
 17053  008B0E  0102               	movlb	2	; () banked
 17054  008B10  51A4               	movf	(_loRa+164)& (0+255),w,b
 17055  008B12  A4D8               	btfss	status,2,c
 17056  008B14  D019               	goto	l14203
 17057                           
 17058                           ; BSR set to: 2
 17059                           ;lorawan_eu.c: 1093: {
 17060                           ;lorawan_eu.c: 1094: if ( (frequencyNew > 870000000) || (frequencyNew < 863000000) )
 17061  008B16  0E81               	movlw	129
 17062  008B18  0100               	movlb	0	; () banked
 17063  008B1A  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17064  008B1C  0E25               	movlw	37
 17065  008B1E  0100               	movlb	0	; () banked
 17066  008B20  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17067  008B22  0EDB               	movlw	219
 17068  008B24  0100               	movlb	0	; () banked
 17069  008B26  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17070  008B28  0E33               	movlw	51
 17071  008B2A  0100               	movlb	0	; () banked
 17072  008B2C  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17073  008B2E  B0D8               	btfsc	status,0,c
 17074  008B30  D027               	goto	l14207
 17075                           
 17076                           ; BSR set to: 0
 17077  008B32  0EC0               	movlw	192
 17078  008B34  0100               	movlb	0	; () banked
 17079  008B36  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17080  008B38  0E55               	movlw	85
 17081  008B3A  0100               	movlb	0	; () banked
 17082  008B3C  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17083  008B3E  0E70               	movlw	112
 17084  008B40  0100               	movlb	0	; () banked
 17085  008B42  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17086  008B44  0E33               	movlw	51
 17087  008B46  D018               	goto	L8
 17088  008B48                     l14203:
 17089                           
 17090                           ;lorawan_eu.c: 1099: else
 17091                           ;lorawan_eu.c: 1100: {
 17092                           ;lorawan_eu.c: 1101: if ( (frequencyNew > 434790000) || (frequencyNew < 433050000) )
 17093  008B48  0E71               	movlw	113
 17094  008B4A  0100               	movlb	0	; () banked
 17095  008B4C  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17096  008B4E  0E5E               	movlw	94
 17097  008B50  0100               	movlb	0	; () banked
 17098  008B52  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17099  008B54  0EEA               	movlw	234
 17100  008B56  0100               	movlb	0	; () banked
 17101  008B58  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17102  008B5A  0E19               	movlw	25
 17103  008B5C  0100               	movlb	0	; () banked
 17104  008B5E  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17105  008B60  B0D8               	btfsc	status,0,c
 17106  008B62  D00E               	goto	l14207
 17107                           
 17108                           ; BSR set to: 0
 17109  008B64  0E90               	movlw	144
 17110  008B66  0100               	movlb	0	; () banked
 17111  008B68  5D64               	subwf	ValidateFrequency@frequencyNew& (0+255),w,b
 17112  008B6A  0ED1               	movlw	209
 17113  008B6C  0100               	movlb	0	; () banked
 17114  008B6E  5965               	subwfb	(ValidateFrequency@frequencyNew+1)& (0+255),w,b
 17115  008B70  0ECF               	movlw	207
 17116  008B72  0100               	movlb	0	; () banked
 17117  008B74  5966               	subwfb	(ValidateFrequency@frequencyNew+2)& (0+255),w,b
 17118  008B76  0E19               	movlw	25
 17119  008B78                     L8:
 17120  008B78  0100               	movlb	0	; () banked
 17121  008B7A  5967               	subwfb	(ValidateFrequency@frequencyNew+3)& (0+255),w,b
 17122  008B7C  B0D8               	btfsc	status,0,c
 17123  008B7E  D003               	goto	l1229
 17124  008B80                     l14207:
 17125                           
 17126                           ; BSR set to: 0
 17127                           ;lorawan_eu.c: 1102: {
 17128                           ;lorawan_eu.c: 1103: result = INVALID_PARAMETER ;
 17129  008B80  0E03               	movlw	3
 17130  008B82  0100               	movlb	0	; () banked
 17131  008B84  6F68               	movwf	ValidateFrequency@result& (0+255),b
 17132  008B86                     l1229:
 17133                           
 17134                           ; BSR set to: 0
 17135                           ;lorawan_eu.c: 1104: }
 17136                           ;lorawan_eu.c: 1105: }
 17137                           ;lorawan_eu.c: 1107: return result;
 17138  008B86  0100               	movlb	0	; () banked
 17139  008B88  5168               	movf	ValidateFrequency@result& (0+255),w,b
 17140  008B8A  0012               	return	
 17141  008B8C                     __end_of_ValidateFrequency:
 17142                           	opt stack 0
 17143                           tosu	equ	0xFFF
 17144                           tosh	equ	0xFFE
 17145                           tosl	equ	0xFFD
 17146                           pclath	equ	0xFFA
 17147                           tblptru	equ	0xFF8
 17148                           tblptrh	equ	0xFF7
 17149                           tblptrl	equ	0xFF6
 17150                           tablat	equ	0xFF5
 17151                           prodh	equ	0xFF4
 17152                           prodl	equ	0xFF3
 17153                           intcon	equ	0xFF2
 17154                           intcon2	equ	0xFF1
 17155                           intcon3	equ	0xFF0
 17156                           indf0	equ	0xFEF
 17157                           postinc0	equ	0xFEE
 17158                           fsr0h	equ	0xFEA
 17159                           fsr0l	equ	0xFE9
 17160                           wreg	equ	0xFE8
 17161                           postinc1	equ	0xFE6
 17162                           postdec1	equ	0xFE5
 17163                           plusw1	equ	0xFE3
 17164                           fsr1h	equ	0xFE2
 17165                           fsr1l	equ	0xFE1
 17166                           indf2	equ	0xFDF
 17167                           postinc2	equ	0xFDE
 17168                           postdec2	equ	0xFDD
 17169                           fsr2h	equ	0xFDA
 17170                           fsr2l	equ	0xFD9
 17171                           status	equ	0xFD8
 17172                           
 17173 ;; *************** function _ValidateDataRange *****************
 17174 ;; Defined at:
 17175 ;;		line 1110 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17176 ;; Parameters:    Size  Location     Type
 17177 ;;  dataRangeNew    1    wreg     unsigned char 
 17178 ;; Auto vars:     Size  Location     Type
 17179 ;;  dataRangeNew    1    7[BANK0 ] unsigned char 
 17180 ;;  dataRateMin     1    9[BANK0 ] unsigned char 
 17181 ;;  dataRateMax     1    8[BANK0 ] unsigned char 
 17182 ;;  result          1    6[BANK0 ] enum E8016
 17183 ;; Return value:  Size  Location     Type
 17184 ;;                  1    wreg      enum E8016
 17185 ;; Registers used:
 17186 ;;		wreg, status,2, status,0, cstack
 17187 ;; Tracked objects:
 17188 ;;		On entry : 0/0
 17189 ;;		On exit  : 0/0
 17190 ;;		Unchanged: 0/0
 17191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17193 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17195 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17196 ;;Total ram usage:        4 bytes
 17197 ;; Hardware stack levels used:    1
 17198 ;; Hardware stack levels required when called:    8
 17199 ;; This function calls:
 17200 ;;		_ValidateDataRate
 17201 ;; This function is called by:
 17202 ;;		_ExecuteNewChannel
 17203 ;;		_LORAWAN_SetDataRange
 17204 ;; This function uses a non-reentrant model
 17205 ;;
 17206                           
 17207                           	psect	text77
 17208  009438                     __ptext77:
 17209                           	opt stack 0
 17210  009438                     _ValidateDataRange:
 17211                           	opt stack 16
 17212                           
 17213                           ; BSR set to: 0
 17214                           ;incstack = 0
 17215                           ;ValidateDataRange@dataRangeNew stored from wreg
 17216  009438  0100               	movlb	0	; () banked
 17217  00943A  6F67               	movwf	ValidateDataRange@dataRangeNew& (0+255),b
 17218                           
 17219                           ;lorawan_eu.c: 1112: LorawanError_t result = OK;
 17220  00943C  0E00               	movlw	0
 17221  00943E  0100               	movlb	0	; () banked
 17222  009440  6F66               	movwf	ValidateDataRange@result& (0+255),b
 17223                           
 17224                           ; BSR set to: 0
 17225                           ;lorawan_eu.c: 1113: uint8_t dataRateMax, dataRateMin;
 17226                           ;lorawan_eu.c: 1115: dataRateMin = dataRangeNew & 0x0F;
 17227  009442  0100               	movlb	0	; () banked
 17228  009444  5167               	movf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17229  009446  0B0F               	andlw	15
 17230  009448  0100               	movlb	0	; () banked
 17231  00944A  6F69               	movwf	ValidateDataRange@dataRateMin& (0+255),b
 17232                           
 17233                           ; BSR set to: 0
 17234                           ;lorawan_eu.c: 1116: dataRateMax = (dataRangeNew & 0xF0) >> (4);
 17235  00944C  0100               	movlb	0	; () banked
 17236  00944E  3967               	swapf	ValidateDataRange@dataRangeNew& (0+255),w,b
 17237  009450  0B0F               	andlw	15
 17238  009452  0B0F               	andlw	15
 17239  009454  0100               	movlb	0	; () banked
 17240  009456  6F68               	movwf	ValidateDataRange@dataRateMax& (0+255),b
 17241                           
 17242                           ; BSR set to: 0
 17243                           ;lorawan_eu.c: 1118: if ( (ValidateDataRate (dataRateMax) != OK) || (ValidateDataRate (d
      +                          ataRateMin) != OK ) || (dataRateMax < dataRateMin) )
 17244  009458  0100               	movlb	0	; () banked
 17245  00945A  5168               	movf	ValidateDataRange@dataRateMax& (0+255),w,b
 17246  00945C  EC92  F050         	call	_ValidateDataRate
 17247  009460  0900               	iorlw	0
 17248  009462  A4D8               	btfss	status,2,c
 17249  009464  D00D               	goto	l14225
 17250  009466  0100               	movlb	0	; () banked
 17251  009468  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17252  00946A  EC92  F050         	call	_ValidateDataRate
 17253  00946E  0900               	iorlw	0
 17254  009470  A4D8               	btfss	status,2,c
 17255  009472  D006               	goto	l14225
 17256  009474  0100               	movlb	0	; () banked
 17257  009476  5169               	movf	ValidateDataRange@dataRateMin& (0+255),w,b
 17258  009478  0100               	movlb	0	; () banked
 17259  00947A  5D68               	subwf	ValidateDataRange@dataRateMax& (0+255),w,b
 17260  00947C  B0D8               	btfsc	status,0,c
 17261  00947E  D003               	goto	l1236
 17262  009480                     l14225:
 17263                           
 17264                           ;lorawan_eu.c: 1119: {
 17265                           ;lorawan_eu.c: 1120: result = INVALID_PARAMETER;
 17266  009480  0E03               	movlw	3
 17267  009482  0100               	movlb	0	; () banked
 17268  009484  6F66               	movwf	ValidateDataRange@result& (0+255),b
 17269  009486                     l1236:
 17270                           
 17271                           ; BSR set to: 0
 17272                           ;lorawan_eu.c: 1121: }
 17273                           ;lorawan_eu.c: 1122: return result;
 17274  009486  0100               	movlb	0	; () banked
 17275  009488  5166               	movf	ValidateDataRange@result& (0+255),w,b
 17276  00948A  0012               	return	
 17277  00948C                     __end_of_ValidateDataRange:
 17278                           	opt stack 0
 17279                           tosu	equ	0xFFF
 17280                           tosh	equ	0xFFE
 17281                           tosl	equ	0xFFD
 17282                           pclath	equ	0xFFA
 17283                           tblptru	equ	0xFF8
 17284                           tblptrh	equ	0xFF7
 17285                           tblptrl	equ	0xFF6
 17286                           tablat	equ	0xFF5
 17287                           prodh	equ	0xFF4
 17288                           prodl	equ	0xFF3
 17289                           intcon	equ	0xFF2
 17290                           intcon2	equ	0xFF1
 17291                           intcon3	equ	0xFF0
 17292                           indf0	equ	0xFEF
 17293                           postinc0	equ	0xFEE
 17294                           fsr0h	equ	0xFEA
 17295                           fsr0l	equ	0xFE9
 17296                           wreg	equ	0xFE8
 17297                           postinc1	equ	0xFE6
 17298                           postdec1	equ	0xFE5
 17299                           plusw1	equ	0xFE3
 17300                           fsr1h	equ	0xFE2
 17301                           fsr1l	equ	0xFE1
 17302                           indf2	equ	0xFDF
 17303                           postinc2	equ	0xFDE
 17304                           postdec2	equ	0xFDD
 17305                           fsr2h	equ	0xFDA
 17306                           fsr2l	equ	0xFD9
 17307                           status	equ	0xFD8
 17308                           
 17309 ;; *************** function _UpdateFrequency *****************
 17310 ;; Defined at:
 17311 ;;		line 1154 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17312 ;; Parameters:    Size  Location     Type
 17313 ;;  channelId       1    wreg     unsigned char 
 17314 ;;  frequencyNew    4    4[BANK0 ] unsigned long 
 17315 ;; Auto vars:     Size  Location     Type
 17316 ;;  channelId       1    8[BANK0 ] unsigned char 
 17317 ;; Return value:  Size  Location     Type
 17318 ;;                  1    wreg      void 
 17319 ;; Registers used:
 17320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17321 ;; Tracked objects:
 17322 ;;		On entry : 0/0
 17323 ;;		On exit  : 0/0
 17324 ;;		Unchanged: 0/0
 17325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17326 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17327 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17329 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17330 ;;Total ram usage:        5 bytes
 17331 ;; Hardware stack levels used:    1
 17332 ;; Hardware stack levels required when called:    7
 17333 ;; This function calls:
 17334 ;;		Nothing
 17335 ;; This function is called by:
 17336 ;;		_ExecuteNewChannel
 17337 ;;		_LORAWAN_SetFrequency
 17338 ;; This function uses a non-reentrant model
 17339 ;;
 17340                           
 17341                           	psect	text78
 17342  00974E                     __ptext78:
 17343                           	opt stack 0
 17344  00974E                     _UpdateFrequency:
 17345                           	opt stack 17
 17346                           
 17347                           ; BSR set to: 0
 17348                           ;incstack = 0
 17349                           ;UpdateFrequency@channelId stored from wreg
 17350  00974E  0100               	movlb	0	; () banked
 17351  009750  6F68               	movwf	UpdateFrequency@channelId& (0+255),b
 17352                           
 17353                           ;lorawan_eu.c: 1156: Channels[channelId].frequency = frequencyNew;
 17354  009752  0100               	movlb	0	; () banked
 17355  009754  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 17356  009756  0D0E               	mullw	14
 17357  009758  0E00               	movlw	low _Channels
 17358  00975A  24F3               	addwf	prodl,w,c
 17359  00975C  6ED9               	movwf	fsr2l,c
 17360  00975E  0E04               	movlw	high _Channels
 17361  009760  20F4               	addwfc	prodh,w,c
 17362  009762  6EDA               	movwf	fsr2h,c
 17363  009764  C064  FFDE         	movff	UpdateFrequency@frequencyNew,postinc2
 17364  009768  C065  FFDE         	movff	UpdateFrequency@frequencyNew+1,postinc2
 17365  00976C  C066  FFDE         	movff	UpdateFrequency@frequencyNew+2,postinc2
 17366  009770  C067  FFDE         	movff	UpdateFrequency@frequencyNew+3,postinc2
 17367                           
 17368                           ;lorawan_eu.c: 1157: Channels[channelId].parametersDefined |= 0X01;
 17369  009774  0100               	movlb	0	; () banked
 17370  009776  5168               	movf	UpdateFrequency@channelId& (0+255),w,b
 17371  009778  0D0E               	mullw	14
 17372  00977A  0E0D               	movlw	13
 17373  00977C  26F3               	addwf	prodl,f,c
 17374  00977E  0E00               	movlw	0
 17375  009780  22F4               	addwfc	prodh,f,c
 17376  009782  0E00               	movlw	low _Channels
 17377  009784  24F3               	addwf	prodl,w,c
 17378  009786  6ED9               	movwf	fsr2l,c
 17379  009788  0E04               	movlw	high _Channels
 17380  00978A  20F4               	addwfc	prodh,w,c
 17381  00978C  6EDA               	movwf	fsr2h,c
 17382  00978E  0E00               	movlw	0
 17383  009790  80DB               	bsf	plusw2,0,c
 17384                           
 17385                           ; BSR set to: 0
 17386  009792  0012               	return		;funcret
 17387  009794                     __end_of_UpdateFrequency:
 17388                           	opt stack 0
 17389                           tosu	equ	0xFFF
 17390                           tosh	equ	0xFFE
 17391                           tosl	equ	0xFFD
 17392                           pclath	equ	0xFFA
 17393                           tblptru	equ	0xFF8
 17394                           tblptrh	equ	0xFF7
 17395                           tblptrl	equ	0xFF6
 17396                           tablat	equ	0xFF5
 17397                           prodh	equ	0xFF4
 17398                           prodl	equ	0xFF3
 17399                           intcon	equ	0xFF2
 17400                           intcon2	equ	0xFF1
 17401                           intcon3	equ	0xFF0
 17402                           indf0	equ	0xFEF
 17403                           postinc0	equ	0xFEE
 17404                           fsr0h	equ	0xFEA
 17405                           fsr0l	equ	0xFE9
 17406                           wreg	equ	0xFE8
 17407                           postinc1	equ	0xFE6
 17408                           postdec1	equ	0xFE5
 17409                           plusw1	equ	0xFE3
 17410                           fsr1h	equ	0xFE2
 17411                           fsr1l	equ	0xFE1
 17412                           indf2	equ	0xFDF
 17413                           postinc2	equ	0xFDE
 17414                           postdec2	equ	0xFDD
 17415                           plusw2	equ	0xFDB
 17416                           fsr2h	equ	0xFDA
 17417                           fsr2l	equ	0xFD9
 17418                           status	equ	0xFD8
 17419                           
 17420 ;; *************** function _UpdateDutyCycle *****************
 17421 ;; Defined at:
 17422 ;;		line 1160 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17423 ;; Parameters:    Size  Location     Type
 17424 ;;  channelId       1    wreg     unsigned char 
 17425 ;;  dutyCycleNew    2    4[BANK0 ] unsigned int 
 17426 ;; Auto vars:     Size  Location     Type
 17427 ;;  channelId       1    6[BANK0 ] unsigned char 
 17428 ;; Return value:  Size  Location     Type
 17429 ;;                  1    wreg      void 
 17430 ;; Registers used:
 17431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17432 ;; Tracked objects:
 17433 ;;		On entry : 0/0
 17434 ;;		On exit  : 0/0
 17435 ;;		Unchanged: 0/0
 17436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17437 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17438 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17440 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17441 ;;Total ram usage:        3 bytes
 17442 ;; Hardware stack levels used:    1
 17443 ;; Hardware stack levels required when called:    7
 17444 ;; This function calls:
 17445 ;;		Nothing
 17446 ;; This function is called by:
 17447 ;;		_ExecuteNewChannel
 17448 ;;		_LORAWAN_SetDutyCycle
 17449 ;; This function uses a non-reentrant model
 17450 ;;
 17451                           
 17452                           	psect	text79
 17453  009794                     __ptext79:
 17454                           	opt stack 0
 17455  009794                     _UpdateDutyCycle:
 17456                           	opt stack 17
 17457                           
 17458                           ; BSR set to: 0
 17459                           ;incstack = 0
 17460                           ;UpdateDutyCycle@channelId stored from wreg
 17461  009794  0100               	movlb	0	; () banked
 17462  009796  6F66               	movwf	UpdateDutyCycle@channelId& (0+255),b
 17463                           
 17464                           ;lorawan_eu.c: 1162: Channels[channelId].dutyCycle = dutyCycleNew;
 17465  009798  0100               	movlb	0	; () banked
 17466  00979A  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 17467  00979C  0D0E               	mullw	14
 17468  00979E  0E06               	movlw	6
 17469  0097A0  26F3               	addwf	prodl,f,c
 17470  0097A2  0E00               	movlw	0
 17471  0097A4  22F4               	addwfc	prodh,f,c
 17472  0097A6  0E00               	movlw	low _Channels
 17473  0097A8  24F3               	addwf	prodl,w,c
 17474  0097AA  6ED9               	movwf	fsr2l,c
 17475  0097AC  0E04               	movlw	high _Channels
 17476  0097AE  20F4               	addwfc	prodh,w,c
 17477  0097B0  6EDA               	movwf	fsr2h,c
 17478  0097B2  C064  FFDE         	movff	UpdateDutyCycle@dutyCycleNew,postinc2
 17479  0097B6  C065  FFDD         	movff	UpdateDutyCycle@dutyCycleNew+1,postdec2
 17480                           
 17481                           ;lorawan_eu.c: 1163: Channels[channelId].parametersDefined |= 0x04;
 17482  0097BA  0100               	movlb	0	; () banked
 17483  0097BC  5166               	movf	UpdateDutyCycle@channelId& (0+255),w,b
 17484  0097BE  0D0E               	mullw	14
 17485  0097C0  0E0D               	movlw	13
 17486  0097C2  26F3               	addwf	prodl,f,c
 17487  0097C4  0E00               	movlw	0
 17488  0097C6  22F4               	addwfc	prodh,f,c
 17489  0097C8  0E00               	movlw	low _Channels
 17490  0097CA  24F3               	addwf	prodl,w,c
 17491  0097CC  6ED9               	movwf	fsr2l,c
 17492  0097CE  0E04               	movlw	high _Channels
 17493  0097D0  20F4               	addwfc	prodh,w,c
 17494  0097D2  6EDA               	movwf	fsr2h,c
 17495  0097D4  0E00               	movlw	0
 17496  0097D6  84DB               	bsf	plusw2,2,c
 17497                           
 17498                           ; BSR set to: 0
 17499  0097D8  0012               	return		;funcret
 17500  0097DA                     __end_of_UpdateDutyCycle:
 17501                           	opt stack 0
 17502                           tosu	equ	0xFFF
 17503                           tosh	equ	0xFFE
 17504                           tosl	equ	0xFFD
 17505                           pclath	equ	0xFFA
 17506                           tblptru	equ	0xFF8
 17507                           tblptrh	equ	0xFF7
 17508                           tblptrl	equ	0xFF6
 17509                           tablat	equ	0xFF5
 17510                           prodh	equ	0xFF4
 17511                           prodl	equ	0xFF3
 17512                           intcon	equ	0xFF2
 17513                           intcon2	equ	0xFF1
 17514                           intcon3	equ	0xFF0
 17515                           indf0	equ	0xFEF
 17516                           postinc0	equ	0xFEE
 17517                           fsr0h	equ	0xFEA
 17518                           fsr0l	equ	0xFE9
 17519                           wreg	equ	0xFE8
 17520                           postinc1	equ	0xFE6
 17521                           postdec1	equ	0xFE5
 17522                           plusw1	equ	0xFE3
 17523                           fsr1h	equ	0xFE2
 17524                           fsr1l	equ	0xFE1
 17525                           indf2	equ	0xFDF
 17526                           postinc2	equ	0xFDE
 17527                           postdec2	equ	0xFDD
 17528                           plusw2	equ	0xFDB
 17529                           fsr2h	equ	0xFDA
 17530                           fsr2l	equ	0xFD9
 17531                           status	equ	0xFD8
 17532                           
 17533 ;; *************** function _UpdateDataRange *****************
 17534 ;; Defined at:
 17535 ;;		line 1009 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17536 ;; Parameters:    Size  Location     Type
 17537 ;;  channelId       1    wreg     unsigned char 
 17538 ;;  dataRangeNew    1    4[BANK0 ] unsigned char 
 17539 ;; Auto vars:     Size  Location     Type
 17540 ;;  channelId       1    6[BANK0 ] unsigned char 
 17541 ;;  i               1    7[BANK0 ] unsigned char 
 17542 ;; Return value:  Size  Location     Type
 17543 ;;                  1    wreg      void 
 17544 ;; Registers used:
 17545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 17546 ;; Tracked objects:
 17547 ;;		On entry : 0/0
 17548 ;;		On exit  : 0/0
 17549 ;;		Unchanged: 0/0
 17550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17551 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17552 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17553 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17554 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17555 ;;Total ram usage:        4 bytes
 17556 ;; Hardware stack levels used:    1
 17557 ;; Hardware stack levels required when called:    7
 17558 ;; This function calls:
 17559 ;;		Nothing
 17560 ;; This function is called by:
 17561 ;;		_ExecuteNewChannel
 17562 ;;		_LORAWAN_SetDataRange
 17563 ;; This function uses a non-reentrant model
 17564 ;;
 17565                           
 17566                           	psect	text80
 17567  0062F0                     __ptext80:
 17568                           	opt stack 0
 17569  0062F0                     _UpdateDataRange:
 17570                           	opt stack 17
 17571                           
 17572                           ; BSR set to: 0
 17573                           ;incstack = 0
 17574                           ;UpdateDataRange@channelId stored from wreg
 17575  0062F0  0100               	movlb	0	; () banked
 17576  0062F2  6F66               	movwf	UpdateDataRange@channelId& (0+255),b
 17577                           
 17578                           ;lorawan_eu.c: 1011: uint8_t i;
 17579                           ;lorawan_eu.c: 1014: loRa.minDataRate = 7;
 17580  0062F4  0E07               	movlw	7
 17581  0062F6  0102               	movlb	2	; () banked
 17582  0062F8  6FEB               	movwf	(_loRa+235)& (0+255),b
 17583                           
 17584                           ;lorawan_eu.c: 1015: loRa.maxDataRate = 0;
 17585  0062FA  0E00               	movlw	0
 17586  0062FC  0102               	movlb	2	; () banked
 17587  0062FE  6FEC               	movwf	(_loRa+236)& (0+255),b
 17588                           
 17589                           ; BSR set to: 2
 17590                           ;lorawan_eu.c: 1017: Channels[channelId].dataRange.value = dataRangeNew;
 17591  006300  0100               	movlb	0	; () banked
 17592  006302  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 17593  006304  0D0E               	mullw	14
 17594  006306  0E05               	movlw	5
 17595  006308  26F3               	addwf	prodl,f,c
 17596  00630A  0E00               	movlw	0
 17597  00630C  22F4               	addwfc	prodh,f,c
 17598  00630E  0E00               	movlw	low _Channels
 17599  006310  24F3               	addwf	prodl,w,c
 17600  006312  6ED9               	movwf	fsr2l,c
 17601  006314  0E04               	movlw	high _Channels
 17602  006316  20F4               	addwfc	prodh,w,c
 17603  006318  6EDA               	movwf	fsr2h,c
 17604  00631A  C064  FFDF         	movff	UpdateDataRange@dataRangeNew,indf2
 17605                           
 17606                           ; BSR set to: 0
 17607                           ;lorawan_eu.c: 1018: Channels[channelId].parametersDefined |= 0X02;
 17608  00631E  0100               	movlb	0	; () banked
 17609  006320  5166               	movf	UpdateDataRange@channelId& (0+255),w,b
 17610  006322  0D0E               	mullw	14
 17611  006324  0E0D               	movlw	13
 17612  006326  26F3               	addwf	prodl,f,c
 17613  006328  0E00               	movlw	0
 17614  00632A  22F4               	addwfc	prodh,f,c
 17615  00632C  0E00               	movlw	low _Channels
 17616  00632E  24F3               	addwf	prodl,w,c
 17617  006330  6ED9               	movwf	fsr2l,c
 17618  006332  0E04               	movlw	high _Channels
 17619  006334  20F4               	addwfc	prodh,w,c
 17620  006336  6EDA               	movwf	fsr2h,c
 17621  006338  0E00               	movlw	0
 17622  00633A  82DB               	bsf	plusw2,1,c
 17623                           
 17624                           ; BSR set to: 0
 17625                           ;lorawan_eu.c: 1019: for (i=0; i < loRa.maxChannels; i++)
 17626  00633C  0E00               	movlw	0
 17627  00633E  0100               	movlb	0	; () banked
 17628  006340  6F67               	movwf	UpdateDataRange@i& (0+255),b
 17629  006342  D071               	goto	l14249
 17630  006344                     l14237:
 17631                           
 17632                           ; BSR set to: 0
 17633                           ;lorawan_eu.c: 1020: {
 17634                           ;lorawan_eu.c: 1021: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 17635  006344  0100               	movlb	0	; () banked
 17636  006346  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17637  006348  0D0E               	mullw	14
 17638  00634A  0E05               	movlw	5
 17639  00634C  26F3               	addwf	prodl,f,c
 17640  00634E  0E00               	movlw	0
 17641  006350  22F4               	addwfc	prodh,f,c
 17642  006352  0E00               	movlw	low _Channels
 17643  006354  24F3               	addwf	prodl,w,c
 17644  006356  6ED9               	movwf	fsr2l,c
 17645  006358  0E04               	movlw	high _Channels
 17646  00635A  20F4               	addwfc	prodh,w,c
 17647  00635C  6EDA               	movwf	fsr2h,c
 17648  00635E  0104               	movlb	4	; () banked
 17649  006360  50DF               	movf	223,w,c
 17650  006362  0B0F               	andlw	15
 17651  006364  0100               	movlb	0	; () banked
 17652  006366  6F65               	movwf	??_UpdateDataRange& (0+255),b
 17653  006368  0102               	movlb	2	; () banked
 17654  00636A  51EB               	movf	(_loRa+235)& (0+255),w,b
 17655  00636C  0100               	movlb	0	; () banked
 17656  00636E  5D65               	subwf	??_UpdateDataRange& (0+255),w,b
 17657  006370  B0D8               	btfsc	status,0,c
 17658  006372  D022               	goto	l1202
 17659                           
 17660                           ; BSR set to: 0
 17661  006374  0100               	movlb	0	; () banked
 17662  006376  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17663  006378  0D0E               	mullw	14
 17664  00637A  0E04               	movlw	4
 17665  00637C  26F3               	addwf	prodl,f,c
 17666  00637E  0E00               	movlw	0
 17667  006380  22F4               	addwfc	prodh,f,c
 17668  006382  0E00               	movlw	low _Channels
 17669  006384  24F3               	addwf	prodl,w,c
 17670  006386  6ED9               	movwf	fsr2l,c
 17671  006388  0E04               	movlw	high _Channels
 17672  00638A  20F4               	addwfc	prodh,w,c
 17673  00638C  6EDA               	movwf	fsr2h,c
 17674  00638E  04DE               	decf	postinc2,w,c
 17675  006390  A4D8               	btfss	status,2,c
 17676  006392  D012               	goto	l1202
 17677                           
 17678                           ; BSR set to: 0
 17679                           ;lorawan_eu.c: 1022: {
 17680                           ;lorawan_eu.c: 1023: loRa.minDataRate = Channels[i].dataRange.min;
 17681  006394  0100               	movlb	0	; () banked
 17682  006396  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17683  006398  0D0E               	mullw	14
 17684  00639A  0E05               	movlw	5
 17685  00639C  26F3               	addwf	prodl,f,c
 17686  00639E  0E00               	movlw	0
 17687  0063A0  22F4               	addwfc	prodh,f,c
 17688  0063A2  0E00               	movlw	low _Channels
 17689  0063A4  24F3               	addwf	prodl,w,c
 17690  0063A6  6ED9               	movwf	fsr2l,c
 17691  0063A8  0E04               	movlw	high _Channels
 17692  0063AA  20F4               	addwfc	prodh,w,c
 17693  0063AC  6EDA               	movwf	fsr2h,c
 17694  0063AE  0104               	movlb	4	; () banked
 17695  0063B0  50DF               	movf	223,w,c
 17696  0063B2  0B0F               	andlw	15
 17697  0063B4  0102               	movlb	2	; () banked
 17698  0063B6  6FEB               	movwf	(_loRa+235)& (0+255),b
 17699  0063B8                     l1202:
 17700                           
 17701                           ;lorawan_eu.c: 1024: }
 17702                           ;lorawan_eu.c: 1025: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 17703  0063B8  0100               	movlb	0	; () banked
 17704  0063BA  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17705  0063BC  0D0E               	mullw	14
 17706  0063BE  0E05               	movlw	5
 17707  0063C0  26F3               	addwf	prodl,f,c
 17708  0063C2  0E00               	movlw	0
 17709  0063C4  22F4               	addwfc	prodh,f,c
 17710  0063C6  0E00               	movlw	low _Channels
 17711  0063C8  24F3               	addwf	prodl,w,c
 17712  0063CA  6ED9               	movwf	fsr2l,c
 17713  0063CC  0E04               	movlw	high _Channels
 17714  0063CE  20F4               	addwfc	prodh,w,c
 17715  0063D0  6EDA               	movwf	fsr2h,c
 17716  0063D2  0104               	movlb	4	; () banked
 17717  0063D4  38DF               	swapf	223,w,c
 17718  0063D6  0B0F               	andlw	15
 17719  0063D8  0102               	movlb	2	; () banked
 17720  0063DA  61EC               	cpfslt	(_loRa+236)& (0+255),b
 17721  0063DC  D022               	goto	l14247
 17722                           
 17723                           ; BSR set to: 2
 17724  0063DE  0100               	movlb	0	; () banked
 17725  0063E0  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17726  0063E2  0D0E               	mullw	14
 17727  0063E4  0E04               	movlw	4
 17728  0063E6  26F3               	addwf	prodl,f,c
 17729  0063E8  0E00               	movlw	0
 17730  0063EA  22F4               	addwfc	prodh,f,c
 17731  0063EC  0E00               	movlw	low _Channels
 17732  0063EE  24F3               	addwf	prodl,w,c
 17733  0063F0  6ED9               	movwf	fsr2l,c
 17734  0063F2  0E04               	movlw	high _Channels
 17735  0063F4  20F4               	addwfc	prodh,w,c
 17736  0063F6  6EDA               	movwf	fsr2h,c
 17737  0063F8  04DE               	decf	postinc2,w,c
 17738  0063FA  A4D8               	btfss	status,2,c
 17739  0063FC  D012               	goto	l14247
 17740                           
 17741                           ; BSR set to: 0
 17742                           ;lorawan_eu.c: 1026: {
 17743                           ;lorawan_eu.c: 1027: loRa.maxDataRate = Channels[i].dataRange.max;
 17744  0063FE  0100               	movlb	0	; () banked
 17745  006400  5167               	movf	UpdateDataRange@i& (0+255),w,b
 17746  006402  0D0E               	mullw	14
 17747  006404  0E05               	movlw	5
 17748  006406  26F3               	addwf	prodl,f,c
 17749  006408  0E00               	movlw	0
 17750  00640A  22F4               	addwfc	prodh,f,c
 17751  00640C  0E00               	movlw	low _Channels
 17752  00640E  24F3               	addwf	prodl,w,c
 17753  006410  6ED9               	movwf	fsr2l,c
 17754  006412  0E04               	movlw	high _Channels
 17755  006414  20F4               	addwfc	prodh,w,c
 17756  006416  6EDA               	movwf	fsr2h,c
 17757  006418  0104               	movlb	4	; () banked
 17758  00641A  38DF               	swapf	223,w,c
 17759  00641C  0B0F               	andlw	15
 17760  00641E  0102               	movlb	2	; () banked
 17761  006420  6FEC               	movwf	(_loRa+236)& (0+255),b
 17762  006422                     l14247:
 17763  006422  0100               	movlb	0	; () banked
 17764  006424  2B67               	incf	UpdateDataRange@i& (0+255),f,b
 17765  006426                     l14249:
 17766                           
 17767                           ; BSR set to: 0
 17768  006426  0102               	movlb	2	; () banked
 17769  006428  51ED               	movf	(_loRa+237)& (0+255),w,b
 17770  00642A  0100               	movlb	0	; () banked
 17771  00642C  5D67               	subwf	UpdateDataRange@i& (0+255),w,b
 17772  00642E  A0D8               	btfss	status,0,c
 17773  006430  D789               	goto	l14237
 17774                           
 17775                           ; BSR set to: 0
 17776                           ;lorawan_eu.c: 1028: }
 17777                           ;lorawan_eu.c: 1029: }
 17778                           ;lorawan_eu.c: 1031: if (loRa.currentDataRate > loRa.maxDataRate)
 17779                           
 17780                           ; BSR set to: 0
 17781  006432  0102               	movlb	2	; () banked
 17782  006434  51DF               	movf	(_loRa+223)& (0+255),w,b
 17783  006436  0102               	movlb	2	; () banked
 17784  006438  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 17785  00643A  A0D8               	btfss	status,0,c
 17786                           
 17787                           ; BSR set to: 2
 17788                           ;lorawan_eu.c: 1032: {
 17789                           ;lorawan_eu.c: 1033: loRa.currentDataRate = loRa.maxDataRate;
 17790  00643C  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 17791                           
 17792                           ; BSR set to: 2
 17793                           ;lorawan_eu.c: 1034: }
 17794                           ;lorawan_eu.c: 1036: if (loRa.currentDataRate < loRa.minDataRate)
 17795                           
 17796                           ; BSR set to: 2
 17797  006440  0102               	movlb	2	; () banked
 17798  006442  51EB               	movf	(_loRa+235)& (0+255),w,b
 17799  006444  0102               	movlb	2	; () banked
 17800  006446  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 17801  006448  B0D8               	btfsc	status,0,c
 17802  00644A  0012               	return	
 17803                           
 17804                           ; BSR set to: 2
 17805                           ;lorawan_eu.c: 1037: {
 17806                           ;lorawan_eu.c: 1038: loRa.currentDataRate = loRa.minDataRate;
 17807  00644C  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 17808  006450  0012               	return	
 17809  006452                     __end_of_UpdateDataRange:
 17810                           	opt stack 0
 17811                           tosu	equ	0xFFF
 17812                           tosh	equ	0xFFE
 17813                           tosl	equ	0xFFD
 17814                           pclath	equ	0xFFA
 17815                           tblptru	equ	0xFF8
 17816                           tblptrh	equ	0xFF7
 17817                           tblptrl	equ	0xFF6
 17818                           tablat	equ	0xFF5
 17819                           prodh	equ	0xFF4
 17820                           prodl	equ	0xFF3
 17821                           intcon	equ	0xFF2
 17822                           intcon2	equ	0xFF1
 17823                           intcon3	equ	0xFF0
 17824                           indf0	equ	0xFEF
 17825                           postinc0	equ	0xFEE
 17826                           fsr0h	equ	0xFEA
 17827                           fsr0l	equ	0xFE9
 17828                           wreg	equ	0xFE8
 17829                           postinc1	equ	0xFE6
 17830                           postdec1	equ	0xFE5
 17831                           plusw1	equ	0xFE3
 17832                           fsr1h	equ	0xFE2
 17833                           fsr1l	equ	0xFE1
 17834                           indf2	equ	0xFDF
 17835                           postinc2	equ	0xFDE
 17836                           postdec2	equ	0xFDD
 17837                           plusw2	equ	0xFDB
 17838                           fsr2h	equ	0xFDA
 17839                           fsr2l	equ	0xFD9
 17840                           status	equ	0xFD8
 17841                           
 17842 ;; *************** function _LORAWAN_SetChannelIdStatus *****************
 17843 ;; Defined at:
 17844 ;;		line 282 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17845 ;; Parameters:    Size  Location     Type
 17846 ;;  channelId       1    wreg     unsigned char 
 17847 ;;  statusNew       1    8[BANK0 ] unsigned char 
 17848 ;; Auto vars:     Size  Location     Type
 17849 ;;  channelId       1   10[BANK0 ] unsigned char 
 17850 ;;  result          1    9[BANK0 ] enum E8016
 17851 ;; Return value:  Size  Location     Type
 17852 ;;                  1    wreg      enum E8016
 17853 ;; Registers used:
 17854 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17855 ;; Tracked objects:
 17856 ;;		On entry : 0/0
 17857 ;;		On exit  : 0/0
 17858 ;;		Unchanged: 0/0
 17859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17860 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17861 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17863 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17864 ;;Total ram usage:        3 bytes
 17865 ;; Hardware stack levels used:    1
 17866 ;; Hardware stack levels required when called:    8
 17867 ;; This function calls:
 17868 ;;		_UpdateChannelIdStatus
 17869 ;;		_ValidateChannelId
 17870 ;; This function is called by:
 17871 ;;		_ExecuteNewChannel
 17872 ;;		_UpdateCfList
 17873 ;; This function uses a non-reentrant model
 17874 ;;
 17875                           
 17876                           	psect	text81
 17877  009270                     __ptext81:
 17878                           	opt stack 0
 17879  009270                     _LORAWAN_SetChannelIdStatus:
 17880                           	opt stack 17
 17881                           
 17882                           ; BSR set to: 2
 17883                           ;incstack = 0
 17884                           ;LORAWAN_SetChannelIdStatus@channelId stored from wreg
 17885  009270  0100               	movlb	0	; () banked
 17886  009272  6F6A               	movwf	LORAWAN_SetChannelIdStatus@channelId& (0+255),b
 17887                           
 17888                           ;lorawan_eu.c: 284: LorawanError_t result = OK;
 17889  009274  0E00               	movlw	0
 17890  009276  0100               	movlb	0	; () banked
 17891  009278  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17892                           
 17893                           ; BSR set to: 0
 17894                           ;lorawan_eu.c: 287: if (ValidateChannelId (channelId, 1) != OK)
 17895  00927A  0E01               	movlw	1
 17896  00927C  0100               	movlb	0	; () banked
 17897  00927E  6F64               	movwf	ValidateChannelId@allowedForDefaultChannels& (0+255),b
 17898  009280  0100               	movlb	0	; () banked
 17899  009282  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17900  009284  EC57  F04E         	call	_ValidateChannelId
 17901  009288  0900               	iorlw	0
 17902  00928A  B4D8               	btfsc	status,2,c
 17903  00928C  D004               	goto	l14265
 17904                           
 17905                           ;lorawan_eu.c: 288: {
 17906                           ;lorawan_eu.c: 289: result = INVALID_PARAMETER;
 17907  00928E  0E03               	movlw	3
 17908  009290  0100               	movlb	0	; () banked
 17909  009292  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17910                           
 17911                           ;lorawan_eu.c: 290: }
 17912  009294  0012               	return	
 17913  009296                     l14265:
 17914                           
 17915                           ;lorawan_eu.c: 292: else
 17916                           ;lorawan_eu.c: 293: {
 17917                           ;lorawan_eu.c: 294: if ( (Channels[channelId].parametersDefined & (0X01 | 0X02 | 0x04) )
      +                           == (0X01 | 0X02 | 0x04) )
 17918  009296  0100               	movlb	0	; () banked
 17919  009298  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17920  00929A  0D0E               	mullw	14
 17921  00929C  0E0D               	movlw	13
 17922  00929E  26F3               	addwf	prodl,f,c
 17923  0092A0  0E00               	movlw	0
 17924  0092A2  22F4               	addwfc	prodh,f,c
 17925  0092A4  0E00               	movlw	low _Channels
 17926  0092A6  24F3               	addwf	prodl,w,c
 17927  0092A8  6ED9               	movwf	fsr2l,c
 17928  0092AA  0E04               	movlw	high _Channels
 17929  0092AC  20F4               	addwfc	prodh,w,c
 17930  0092AE  6EDA               	movwf	fsr2h,c
 17931  0092B0  50DF               	movf	indf2,w,c
 17932  0092B2  0B07               	andlw	7
 17933  0092B4  0A07               	xorlw	7
 17934  0092B6  A4D8               	btfss	status,2,c
 17935  0092B8  D007               	goto	l14269
 17936                           
 17937                           ; BSR set to: 0
 17938                           ;lorawan_eu.c: 295: {
 17939                           ;lorawan_eu.c: 296: UpdateChannelIdStatus (channelId, statusNew);
 17940  0092BA  C068  F064         	movff	LORAWAN_SetChannelIdStatus@statusNew,UpdateChannelIdStatus@statusNew
 17941  0092BE  0100               	movlb	0	; () banked
 17942  0092C0  516A               	movf	LORAWAN_SetChannelIdStatus@channelId& (0+255),w,b
 17943  0092C2  ECFF  F02F         	call	_UpdateChannelIdStatus
 17944                           
 17945                           ;lorawan_eu.c: 297: }
 17946  0092C6  0012               	return	
 17947  0092C8                     l14269:
 17948                           
 17949                           ;lorawan_eu.c: 298: else
 17950                           ;lorawan_eu.c: 299: {
 17951                           ;lorawan_eu.c: 300: result = INVALID_PARAMETER;
 17952  0092C8  0E03               	movlw	3
 17953  0092CA  0100               	movlb	0	; () banked
 17954  0092CC  6F69               	movwf	LORAWAN_SetChannelIdStatus@result& (0+255),b
 17955                           
 17956                           ; BSR set to: 0
 17957                           
 17958                           ; BSR set to: 0
 17959  0092CE  0012               	return	
 17960  0092D0                     __end_of_LORAWAN_SetChannelIdStatus:
 17961                           	opt stack 0
 17962                           tosu	equ	0xFFF
 17963                           tosh	equ	0xFFE
 17964                           tosl	equ	0xFFD
 17965                           pclath	equ	0xFFA
 17966                           tblptru	equ	0xFF8
 17967                           tblptrh	equ	0xFF7
 17968                           tblptrl	equ	0xFF6
 17969                           tablat	equ	0xFF5
 17970                           prodh	equ	0xFF4
 17971                           prodl	equ	0xFF3
 17972                           intcon	equ	0xFF2
 17973                           intcon2	equ	0xFF1
 17974                           intcon3	equ	0xFF0
 17975                           indf0	equ	0xFEF
 17976                           postinc0	equ	0xFEE
 17977                           fsr0h	equ	0xFEA
 17978                           fsr0l	equ	0xFE9
 17979                           wreg	equ	0xFE8
 17980                           postinc1	equ	0xFE6
 17981                           postdec1	equ	0xFE5
 17982                           plusw1	equ	0xFE3
 17983                           fsr1h	equ	0xFE2
 17984                           fsr1l	equ	0xFE1
 17985                           indf2	equ	0xFDF
 17986                           postinc2	equ	0xFDE
 17987                           postdec2	equ	0xFDD
 17988                           plusw2	equ	0xFDB
 17989                           fsr2h	equ	0xFDA
 17990                           fsr2l	equ	0xFD9
 17991                           status	equ	0xFD8
 17992                           
 17993 ;; *************** function _ValidateChannelId *****************
 17994 ;; Defined at:
 17995 ;;		line 1125 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 17996 ;; Parameters:    Size  Location     Type
 17997 ;;  channelId       1    wreg     unsigned char 
 17998 ;;  allowedForDe    1    4[BANK0 ] unsigned char 
 17999 ;; Auto vars:     Size  Location     Type
 18000 ;;  channelId       1    6[BANK0 ] unsigned char 
 18001 ;;  result          1    5[BANK0 ] enum E8016
 18002 ;; Return value:  Size  Location     Type
 18003 ;;                  1    wreg      enum E8016
 18004 ;; Registers used:
 18005 ;;		wreg, status,2, status,0
 18006 ;; Tracked objects:
 18007 ;;		On entry : 0/0
 18008 ;;		On exit  : 0/0
 18009 ;;		Unchanged: 0/0
 18010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18011 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18012 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18014 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18015 ;;Total ram usage:        3 bytes
 18016 ;; Hardware stack levels used:    1
 18017 ;; Hardware stack levels required when called:    7
 18018 ;; This function calls:
 18019 ;;		Nothing
 18020 ;; This function is called by:
 18021 ;;		_LORAWAN_SetChannelIdStatus
 18022 ;;		_ExecuteNewChannel
 18023 ;;		_LORAWAN_SetDataRange
 18024 ;;		_LORAWAN_GetDataRange
 18025 ;;		_LORAWAN_GetChannelIdStatus
 18026 ;;		_LORAWAN_SetFrequency
 18027 ;;		_LORAWAN_SetDutyCycle
 18028 ;;		_LORAWAN_GetDutyCycle
 18029 ;; This function uses a non-reentrant model
 18030 ;;
 18031                           
 18032                           	psect	text82
 18033  009CAE                     __ptext82:
 18034                           	opt stack 0
 18035  009CAE                     _ValidateChannelId:
 18036                           	opt stack 17
 18037                           
 18038                           ;incstack = 0
 18039                           ;ValidateChannelId@channelId stored from wreg
 18040  009CAE  0100               	movlb	0	; () banked
 18041  009CB0  6F66               	movwf	ValidateChannelId@channelId& (0+255),b
 18042                           
 18043                           ;lorawan_eu.c: 1127: LorawanError_t result = OK;
 18044  009CB2  0E00               	movlw	0
 18045  009CB4  0100               	movlb	0	; () banked
 18046  009CB6  6F65               	movwf	ValidateChannelId@result& (0+255),b
 18047                           
 18048                           ; BSR set to: 0
 18049                           ;lorawan_eu.c: 1129: if ( (channelId >= 16) || ( (allowedForDefaultChannels == 0) && (ch
      +                          annelId < 3) ) )
 18050  009CB8  0E10               	movlw	16
 18051  009CBA  0100               	movlb	0	; () banked
 18052  009CBC  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 18053  009CBE  D009               	goto	l13943
 18054                           
 18055                           ; BSR set to: 0
 18056  009CC0  0100               	movlb	0	; () banked
 18057  009CC2  5164               	movf	ValidateChannelId@allowedForDefaultChannels& (0+255),w,b
 18058  009CC4  0100               	movlb	0	; () banked
 18059  009CC6  A4D8               	btfss	status,2,c
 18060  009CC8  D007               	goto	l1242
 18061                           
 18062                           ; BSR set to: 0
 18063  009CCA  0E03               	movlw	3
 18064  009CCC  0100               	movlb	0	; () banked
 18065  009CCE  6166               	cpfslt	ValidateChannelId@channelId& (0+255),b
 18066  009CD0  D003               	goto	l1242
 18067  009CD2                     l13943:
 18068                           
 18069                           ; BSR set to: 0
 18070                           ;lorawan_eu.c: 1130: {
 18071                           ;lorawan_eu.c: 1131: result = INVALID_PARAMETER ;
 18072  009CD2  0E03               	movlw	3
 18073  009CD4  0100               	movlb	0	; () banked
 18074  009CD6  6F65               	movwf	ValidateChannelId@result& (0+255),b
 18075  009CD8                     l1242:
 18076                           
 18077                           ; BSR set to: 0
 18078                           ;lorawan_eu.c: 1132: }
 18079                           ;lorawan_eu.c: 1134: return result;
 18080  009CD8  0100               	movlb	0	; () banked
 18081  009CDA  5165               	movf	ValidateChannelId@result& (0+255),w,b
 18082  009CDC  0012               	return	
 18083  009CDE                     __end_of_ValidateChannelId:
 18084                           	opt stack 0
 18085                           tosu	equ	0xFFF
 18086                           tosh	equ	0xFFE
 18087                           tosl	equ	0xFFD
 18088                           pclath	equ	0xFFA
 18089                           tblptru	equ	0xFF8
 18090                           tblptrh	equ	0xFF7
 18091                           tblptrl	equ	0xFF6
 18092                           tablat	equ	0xFF5
 18093                           prodh	equ	0xFF4
 18094                           prodl	equ	0xFF3
 18095                           intcon	equ	0xFF2
 18096                           intcon2	equ	0xFF1
 18097                           intcon3	equ	0xFF0
 18098                           indf0	equ	0xFEF
 18099                           postinc0	equ	0xFEE
 18100                           fsr0h	equ	0xFEA
 18101                           fsr0l	equ	0xFE9
 18102                           wreg	equ	0xFE8
 18103                           postinc1	equ	0xFE6
 18104                           postdec1	equ	0xFE5
 18105                           plusw1	equ	0xFE3
 18106                           fsr1h	equ	0xFE2
 18107                           fsr1l	equ	0xFE1
 18108                           indf2	equ	0xFDF
 18109                           postinc2	equ	0xFDE
 18110                           postdec2	equ	0xFDD
 18111                           plusw2	equ	0xFDB
 18112                           fsr2h	equ	0xFDA
 18113                           fsr2l	equ	0xFD9
 18114                           status	equ	0xFD8
 18115                           
 18116 ;; *************** function _ExecuteLinkCheck *****************
 18117 ;; Defined at:
 18118 ;;		line 1652 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 18119 ;; Parameters:    Size  Location     Type
 18120 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 18121 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18122 ;; Auto vars:     Size  Location     Type
 18123 ;;		None
 18124 ;; Return value:  Size  Location     Type
 18125 ;;                  2    4[BANK0 ] PTR unsigned char 
 18126 ;; Registers used:
 18127 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 18128 ;; Tracked objects:
 18129 ;;		On entry : 0/0
 18130 ;;		On exit  : 0/0
 18131 ;;		Unchanged: 0/0
 18132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18133 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18136 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18137 ;;Total ram usage:        2 bytes
 18138 ;; Hardware stack levels used:    1
 18139 ;; Hardware stack levels required when called:    7
 18140 ;; This function calls:
 18141 ;;		Nothing
 18142 ;; This function is called by:
 18143 ;;		_MacExecuteCommands
 18144 ;; This function uses a non-reentrant model
 18145 ;;
 18146                           
 18147                           	psect	text83
 18148  009C7C                     __ptext83:
 18149                           	opt stack 0
 18150  009C7C                     _ExecuteLinkCheck:
 18151                           	opt stack 18
 18152                           
 18153                           ;lorawan.c: 1654: loRa.linkCheckMargin = *(ptr++);
 18154                           
 18155                           ; BSR set to: 0
 18156                           ;incstack = 0
 18157  009C7C  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18158  009C80  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18159  009C84  50DF               	movf	indf2,w,c
 18160  009C86  0102               	movlb	2	; () banked
 18161  009C88  6FDD               	movwf	(_loRa+221)& (0+255),b
 18162                           
 18163                           ; BSR set to: 2
 18164  009C8A  0100               	movlb	0	; () banked
 18165  009C8C  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18166  009C8E  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18167                           
 18168                           ; BSR set to: 0
 18169                           ;lorawan.c: 1655: loRa.linkCheckGwCnt = *(ptr++);
 18170  009C90  C064  FFD9         	movff	ExecuteLinkCheck@ptr,fsr2l
 18171  009C94  C065  FFDA         	movff	ExecuteLinkCheck@ptr+1,fsr2h
 18172  009C98  50DF               	movf	indf2,w,c
 18173  009C9A  0102               	movlb	2	; () banked
 18174  009C9C  6FDE               	movwf	(_loRa+222)& (0+255),b
 18175  009C9E  0100               	movlb	0	; () banked
 18176  009CA0  4B64               	infsnz	ExecuteLinkCheck@ptr& (0+255),f,b
 18177  009CA2  2B65               	incf	(ExecuteLinkCheck@ptr+1)& (0+255),f,b
 18178                           
 18179                           ; BSR set to: 0
 18180                           ;lorawan.c: 1656: return ptr;
 18181  009CA4  C064  F064         	movff	ExecuteLinkCheck@ptr,?_ExecuteLinkCheck
 18182  009CA8  C065  F065         	movff	ExecuteLinkCheck@ptr+1,?_ExecuteLinkCheck+1
 18183  009CAC  0012               	return	
 18184  009CAE                     __end_of_ExecuteLinkCheck:
 18185                           	opt stack 0
 18186                           tosu	equ	0xFFF
 18187                           tosh	equ	0xFFE
 18188                           tosl	equ	0xFFD
 18189                           pclath	equ	0xFFA
 18190                           tblptru	equ	0xFF8
 18191                           tblptrh	equ	0xFF7
 18192                           tblptrl	equ	0xFF6
 18193                           tablat	equ	0xFF5
 18194                           prodh	equ	0xFF4
 18195                           prodl	equ	0xFF3
 18196                           intcon	equ	0xFF2
 18197                           intcon2	equ	0xFF1
 18198                           intcon3	equ	0xFF0
 18199                           indf0	equ	0xFEF
 18200                           postinc0	equ	0xFEE
 18201                           fsr0h	equ	0xFEA
 18202                           fsr0l	equ	0xFE9
 18203                           wreg	equ	0xFE8
 18204                           postinc1	equ	0xFE6
 18205                           postdec1	equ	0xFE5
 18206                           plusw1	equ	0xFE3
 18207                           fsr1h	equ	0xFE2
 18208                           fsr1l	equ	0xFE1
 18209                           indf2	equ	0xFDF
 18210                           postinc2	equ	0xFDE
 18211                           postdec2	equ	0xFDD
 18212                           plusw2	equ	0xFDB
 18213                           fsr2h	equ	0xFDA
 18214                           fsr2l	equ	0xFD9
 18215                           status	equ	0xFD8
 18216                           
 18217 ;; *************** function _ExecuteLinkAdr *****************
 18218 ;; Defined at:
 18219 ;;		line 613 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18220 ;; Parameters:    Size  Location     Type
 18221 ;;  ptr             2   19[BANK0 ] PTR unsigned char 
 18222 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18223 ;; Auto vars:     Size  Location     Type
 18224 ;;  redundancy      2   26[BANK0 ] PTR struct .
 18225 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 18226 ;;  channelMask     2   23[BANK0 ] unsigned int 
 18227 ;;  dataRate        1   28[BANK0 ] unsigned char 
 18228 ;;  txPower         1   25[BANK0 ] unsigned char 
 18229 ;; Return value:  Size  Location     Type
 18230 ;;                  2   19[BANK0 ] PTR unsigned char 
 18231 ;; Registers used:
 18232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 18233 ;; Tracked objects:
 18234 ;;		On entry : 0/0
 18235 ;;		On exit  : 0/0
 18236 ;;		Unchanged: 0/0
 18237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18238 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18239 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18240 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18241 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18242 ;;Total ram usage:       10 bytes
 18243 ;; Hardware stack levels used:    1
 18244 ;; Hardware stack levels required when called:   10
 18245 ;; This function calls:
 18246 ;;		_EnableChannels
 18247 ;;		_UpdateCurrentDataRate
 18248 ;;		_UpdateTxPower
 18249 ;;		_ValidateChannelMask
 18250 ;;		_ValidateChannelMaskCntl
 18251 ;;		_ValidateDataRate
 18252 ;;		_ValidateTxPower
 18253 ;; This function is called by:
 18254 ;;		_MacExecuteCommands
 18255 ;; This function uses a non-reentrant model
 18256 ;;
 18257                           
 18258                           	psect	text84
 18259  0037DA                     __ptext84:
 18260                           	opt stack 0
 18261  0037DA                     _ExecuteLinkAdr:
 18262                           	opt stack 15
 18263                           
 18264                           ;lorawan_eu.c: 615: uint8_t txPower, dataRate;
 18265                           ;lorawan_eu.c: 616: uint16_t channelMask;
 18266                           ;lorawan_eu.c: 618: txPower = *(ptr) & 0x0F;
 18267                           
 18268                           ; BSR set to: 0
 18269                           ;incstack = 0
 18270  0037DA  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18271  0037DE  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18272  0037E2  50DF               	movf	indf2,w,c
 18273  0037E4  0B0F               	andlw	15
 18274  0037E6  0100               	movlb	0	; () banked
 18275  0037E8  6F79               	movwf	ExecuteLinkAdr@txPower& (0+255),b
 18276                           
 18277                           ;lorawan_eu.c: 619: dataRate = ( *(ptr) & 0xF0 ) >> (4);
 18278  0037EA  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18279  0037EE  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18280  0037F2  50DF               	movf	indf2,w,c
 18281  0037F4  0100               	movlb	0	; () banked
 18282  0037F6  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18283  0037F8  0100               	movlb	0	; () banked
 18284  0037FA  3975               	swapf	??_ExecuteLinkAdr& (0+255),w,b
 18285  0037FC  0B0F               	andlw	15
 18286  0037FE  0B0F               	andlw	15
 18287  003800  0100               	movlb	0	; () banked
 18288  003802  6F7C               	movwf	ExecuteLinkAdr@dataRate& (0+255),b
 18289                           
 18290                           ; BSR set to: 0
 18291                           ;lorawan_eu.c: 620: ptr++;
 18292  003804  0100               	movlb	0	; () banked
 18293  003806  4B73               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18294  003808  2B74               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18295                           
 18296                           ; BSR set to: 0
 18297                           ;lorawan_eu.c: 621: channelMask = (*((uint16_t*)ptr));
 18298  00380A  C073  FFD9         	movff	ExecuteLinkAdr@ptr,fsr2l
 18299  00380E  C074  FFDA         	movff	ExecuteLinkAdr@ptr+1,fsr2h
 18300  003812  CFDE F077          	movff	postinc2,ExecuteLinkAdr@channelMask
 18301  003816  CFDD F078          	movff	postdec2,ExecuteLinkAdr@channelMask+1
 18302                           
 18303                           ; BSR set to: 0
 18304                           ;lorawan_eu.c: 622: ptr = ptr + sizeof (channelMask);
 18305  00381A  0E02               	movlw	2
 18306  00381C  0100               	movlb	0	; () banked
 18307  00381E  2573               	addwf	ExecuteLinkAdr@ptr& (0+255),w,b
 18308  003820  0100               	movlb	0	; () banked
 18309  003822  6F73               	movwf	ExecuteLinkAdr@ptr& (0+255),b
 18310  003824  0E00               	movlw	0
 18311  003826  0100               	movlb	0	; () banked
 18312  003828  2174               	addwfc	(ExecuteLinkAdr@ptr+1)& (0+255),w,b
 18313  00382A  0100               	movlb	0	; () banked
 18314  00382C  6F74               	movwf	(ExecuteLinkAdr@ptr+1)& (0+255),b
 18315                           
 18316                           ; BSR set to: 0
 18317                           ;lorawan_eu.c: 623: Redundancy_t *redundancy;
 18318                           ;lorawan_eu.c: 624: redundancy = (Redundancy_t*)(ptr++);
 18319  00382E  C073  F07A         	movff	ExecuteLinkAdr@ptr,ExecuteLinkAdr@redundancy
 18320  003832  C074  F07B         	movff	ExecuteLinkAdr@ptr+1,ExecuteLinkAdr@redundancy+1
 18321                           
 18322                           ; BSR set to: 0
 18323  003836  0100               	movlb	0	; () banked
 18324  003838  4B73               	infsnz	ExecuteLinkAdr@ptr& (0+255),f,b
 18325  00383A  2B74               	incf	(ExecuteLinkAdr@ptr+1)& (0+255),f,b
 18326                           
 18327                           ; BSR set to: 0
 18328                           ;lorawan_eu.c: 626: if (1 == loRa.macStatus.adr)
 18329  00383C  0102               	movlb	2	; () banked
 18330  00383E  AD02               	btfss	(_loRa+2)& (0+255),6,b
 18331  003840  D11B               	goto	l14917
 18332                           
 18333                           ; BSR set to: 2
 18334                           ;lorawan_eu.c: 627: {
 18335                           ;lorawan_eu.c: 628: if ( (ValidateChannelMaskCntl(redundancy->chMaskCntl) == OK) && (Val
      +                          idateChannelMask(channelMask) == OK) )
 18336  003842  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18337  003846  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18338  00384A  0100               	movlb	0	; () banked
 18339  00384C  38DF               	swapf	223,w,c
 18340  00384E  0B07               	andlw	7
 18341  003850  EC23  F04F         	call	_ValidateChannelMaskCntl
 18342  003854  0900               	iorlw	0
 18343  003856  A4D8               	btfss	status,2,c
 18344  003858  D027               	goto	l14885
 18345  00385A  C077  F064         	movff	ExecuteLinkAdr@channelMask,ValidateChannelMask@channelMask
 18346  00385E  C078  F065         	movff	ExecuteLinkAdr@channelMask+1,ValidateChannelMask@channelMask+1
 18347  003862  ECFA  F046         	call	_ValidateChannelMask	;wreg free
 18348  003866  0900               	iorlw	0
 18349  003868  A4D8               	btfss	status,2,c
 18350  00386A  D01E               	goto	l14885
 18351                           
 18352                           ;lorawan_eu.c: 629: {
 18353                           ;lorawan_eu.c: 630: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 1;
 18354  00386C  0102               	movlb	2	; () banked
 18355  00386E  51A7               	movf	(_loRa+167)& (0+255),w,b
 18356  003870  0D02               	mullw	2
 18357  003872  0E00               	movlw	low _loRa
 18358  003874  0100               	movlb	0	; () banked
 18359  003876  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18360  003878  0E02               	movlw	high _loRa
 18361  00387A  0100               	movlb	0	; () banked
 18362  00387C  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18363  00387E  0EA8               	movlw	168
 18364  003880  0100               	movlb	0	; () banked
 18365  003882  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18366  003884  0E00               	movlw	0
 18367  003886  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18368  003888  50F3               	movf	prodl,w,c
 18369  00388A  0100               	movlb	0	; () banked
 18370  00388C  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18371  00388E  50F4               	movf	prodh,w,c
 18372  003890  0100               	movlb	0	; () banked
 18373  003892  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18374  003894  0E01               	movlw	1
 18375  003896  0100               	movlb	0	; () banked
 18376  003898  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18377  00389A  6ED9               	movwf	fsr2l,c
 18378  00389C  0E00               	movlw	0
 18379  00389E  0100               	movlb	0	; () banked
 18380  0038A0  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18381  0038A2  6EDA               	movwf	fsr2h,c
 18382  0038A4  0102               	movlb	2	; () banked
 18383  0038A6  80DF               	bsf	indf2,0,c
 18384  0038A8                     l14885:
 18385                           
 18386                           ;lorawan_eu.c: 631: }
 18387                           ;lorawan_eu.c: 633: if ( (ValidateDataRate (dataRate) == OK) && (dataRate >= loRa.minDat
      +                          aRate) && (dataRate <= loRa.maxDataRate) )
 18388  0038A8  0100               	movlb	0	; () banked
 18389  0038AA  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18390  0038AC  EC92  F050         	call	_ValidateDataRate
 18391  0038B0  0900               	iorlw	0
 18392  0038B2  A4D8               	btfss	status,2,c
 18393  0038B4  D02A               	goto	l14893
 18394  0038B6  0102               	movlb	2	; () banked
 18395  0038B8  51EB               	movf	(_loRa+235)& (0+255),w,b
 18396  0038BA  0100               	movlb	0	; () banked
 18397  0038BC  5D7C               	subwf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18398  0038BE  A0D8               	btfss	status,0,c
 18399  0038C0  D024               	goto	l14893
 18400                           
 18401                           ; BSR set to: 0
 18402  0038C2  0100               	movlb	0	; () banked
 18403  0038C4  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18404  0038C6  0102               	movlb	2	; () banked
 18405  0038C8  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 18406  0038CA  A0D8               	btfss	status,0,c
 18407  0038CC  D01E               	goto	l14893
 18408                           
 18409                           ; BSR set to: 2
 18410                           ;lorawan_eu.c: 634: {
 18411                           ;lorawan_eu.c: 635: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 1;
 18412  0038CE  0102               	movlb	2	; () banked
 18413  0038D0  51A7               	movf	(_loRa+167)& (0+255),w,b
 18414  0038D2  0D02               	mullw	2
 18415  0038D4  0E00               	movlw	low _loRa
 18416  0038D6  0100               	movlb	0	; () banked
 18417  0038D8  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18418  0038DA  0E02               	movlw	high _loRa
 18419  0038DC  0100               	movlb	0	; () banked
 18420  0038DE  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18421  0038E0  0EA8               	movlw	168
 18422  0038E2  0100               	movlb	0	; () banked
 18423  0038E4  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18424  0038E6  0E00               	movlw	0
 18425  0038E8  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18426  0038EA  50F3               	movf	prodl,w,c
 18427  0038EC  0100               	movlb	0	; () banked
 18428  0038EE  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18429  0038F0  50F4               	movf	prodh,w,c
 18430  0038F2  0100               	movlb	0	; () banked
 18431  0038F4  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18432  0038F6  0E01               	movlw	1
 18433  0038F8  0100               	movlb	0	; () banked
 18434  0038FA  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18435  0038FC  6ED9               	movwf	fsr2l,c
 18436  0038FE  0E00               	movlw	0
 18437  003900  0100               	movlb	0	; () banked
 18438  003902  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18439  003904  6EDA               	movwf	fsr2h,c
 18440  003906  0102               	movlb	2	; () banked
 18441  003908  82DF               	bsf	indf2,1,c
 18442  00390A                     l14893:
 18443                           
 18444                           ;lorawan_eu.c: 636: }
 18445                           ;lorawan_eu.c: 638: if (ValidateTxPower (txPower) == OK)
 18446  00390A  0100               	movlb	0	; () banked
 18447  00390C  5179               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 18448  00390E  EC6F  F04E         	call	_ValidateTxPower
 18449  003912  0900               	iorlw	0
 18450  003914  A4D8               	btfss	status,2,c
 18451  003916  D01E               	goto	l1097
 18452                           
 18453                           ;lorawan_eu.c: 639: {
 18454                           ;lorawan_eu.c: 640: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 1;
 18455  003918  0102               	movlb	2	; () banked
 18456  00391A  51A7               	movf	(_loRa+167)& (0+255),w,b
 18457  00391C  0D02               	mullw	2
 18458  00391E  0E00               	movlw	low _loRa
 18459  003920  0100               	movlb	0	; () banked
 18460  003922  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18461  003924  0E02               	movlw	high _loRa
 18462  003926  0100               	movlb	0	; () banked
 18463  003928  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18464  00392A  0EA8               	movlw	168
 18465  00392C  0100               	movlb	0	; () banked
 18466  00392E  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18467  003930  0E00               	movlw	0
 18468  003932  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18469  003934  50F3               	movf	prodl,w,c
 18470  003936  0100               	movlb	0	; () banked
 18471  003938  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18472  00393A  50F4               	movf	prodh,w,c
 18473  00393C  0100               	movlb	0	; () banked
 18474  00393E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18475  003940  0E01               	movlw	1
 18476  003942  0100               	movlb	0	; () banked
 18477  003944  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18478  003946  6ED9               	movwf	fsr2l,c
 18479  003948  0E00               	movlw	0
 18480  00394A  0100               	movlb	0	; () banked
 18481  00394C  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18482  00394E  6EDA               	movwf	fsr2h,c
 18483  003950  0102               	movlb	2	; () banked
 18484  003952  84DF               	bsf	indf2,2,c
 18485  003954                     l1097:
 18486                           
 18487                           ;lorawan_eu.c: 641: }
 18488                           ;lorawan_eu.c: 643: if ( (loRa.macCommands[loRa.crtMacCmdIndex].powerAck == 1) && (loRa.
      +                          macCommands[loRa.crtMacCmdIndex].dataRateAck == 1) && (loRa.macCommands[loRa.crtMacCmdIn
      +                          dex].channelMaskAck == 1) )
 18489  003954  0102               	movlb	2	; () banked
 18490  003956  51A7               	movf	(_loRa+167)& (0+255),w,b
 18491  003958  0D02               	mullw	2
 18492  00395A  0E00               	movlw	low _loRa
 18493  00395C  0100               	movlb	0	; () banked
 18494  00395E  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18495  003960  0E02               	movlw	high _loRa
 18496  003962  0100               	movlb	0	; () banked
 18497  003964  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18498  003966  0EA8               	movlw	168
 18499  003968  0100               	movlb	0	; () banked
 18500  00396A  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18501  00396C  0E00               	movlw	0
 18502  00396E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18503  003970  50F3               	movf	prodl,w,c
 18504  003972  0100               	movlb	0	; () banked
 18505  003974  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18506  003976  50F4               	movf	prodh,w,c
 18507  003978  0100               	movlb	0	; () banked
 18508  00397A  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18509  00397C  0E01               	movlw	1
 18510  00397E  0100               	movlb	0	; () banked
 18511  003980  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18512  003982  6ED9               	movwf	fsr2l,c
 18513  003984  0E00               	movlw	0
 18514  003986  0100               	movlb	0	; () banked
 18515  003988  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18516  00398A  6EDA               	movwf	fsr2h,c
 18517  00398C  0102               	movlb	2	; () banked
 18518  00398E  A4DF               	btfss	indf2,2,c
 18519  003990  D0CD               	goto	l14919
 18520                           
 18521                           ; BSR set to: 2
 18522  003992  0102               	movlb	2	; () banked
 18523  003994  51A7               	movf	(_loRa+167)& (0+255),w,b
 18524  003996  0D02               	mullw	2
 18525  003998  0E00               	movlw	low _loRa
 18526  00399A  0100               	movlb	0	; () banked
 18527  00399C  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18528  00399E  0E02               	movlw	high _loRa
 18529  0039A0  0100               	movlb	0	; () banked
 18530  0039A2  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18531  0039A4  0EA8               	movlw	168
 18532  0039A6  0100               	movlb	0	; () banked
 18533  0039A8  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18534  0039AA  0E00               	movlw	0
 18535  0039AC  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18536  0039AE  50F3               	movf	prodl,w,c
 18537  0039B0  0100               	movlb	0	; () banked
 18538  0039B2  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18539  0039B4  50F4               	movf	prodh,w,c
 18540  0039B6  0100               	movlb	0	; () banked
 18541  0039B8  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18542  0039BA  0E01               	movlw	1
 18543  0039BC  0100               	movlb	0	; () banked
 18544  0039BE  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18545  0039C0  6ED9               	movwf	fsr2l,c
 18546  0039C2  0E00               	movlw	0
 18547  0039C4  0100               	movlb	0	; () banked
 18548  0039C6  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18549  0039C8  6EDA               	movwf	fsr2h,c
 18550  0039CA  0102               	movlb	2	; () banked
 18551  0039CC  A2DF               	btfss	indf2,1,c
 18552  0039CE  D0AE               	goto	l14919
 18553                           
 18554                           ; BSR set to: 2
 18555  0039D0  0102               	movlb	2	; () banked
 18556  0039D2  51A7               	movf	(_loRa+167)& (0+255),w,b
 18557  0039D4  0D02               	mullw	2
 18558  0039D6  0E00               	movlw	low _loRa
 18559  0039D8  0100               	movlb	0	; () banked
 18560  0039DA  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18561  0039DC  0E02               	movlw	high _loRa
 18562  0039DE  0100               	movlb	0	; () banked
 18563  0039E0  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18564  0039E2  0EA8               	movlw	168
 18565  0039E4  0100               	movlb	0	; () banked
 18566  0039E6  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18567  0039E8  0E00               	movlw	0
 18568  0039EA  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18569  0039EC  50F3               	movf	prodl,w,c
 18570  0039EE  0100               	movlb	0	; () banked
 18571  0039F0  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18572  0039F2  50F4               	movf	prodh,w,c
 18573  0039F4  0100               	movlb	0	; () banked
 18574  0039F6  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18575  0039F8  0E01               	movlw	1
 18576  0039FA  0100               	movlb	0	; () banked
 18577  0039FC  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18578  0039FE  6ED9               	movwf	fsr2l,c
 18579  003A00  0E00               	movlw	0
 18580  003A02  0100               	movlb	0	; () banked
 18581  003A04  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18582  003A06  6EDA               	movwf	fsr2h,c
 18583  003A08  0102               	movlb	2	; () banked
 18584  003A0A  A0DF               	btfss	indf2,0,c
 18585  003A0C  D08F               	goto	l14919
 18586                           
 18587                           ; BSR set to: 2
 18588                           ;lorawan_eu.c: 644: {
 18589                           ;lorawan_eu.c: 645: EnableChannels (channelMask, redundancy->chMaskCntl);
 18590  003A0E  C077  F070         	movff	ExecuteLinkAdr@channelMask,EnableChannels@channelMask
 18591  003A12  C078  F071         	movff	ExecuteLinkAdr@channelMask+1,EnableChannels@channelMask+1
 18592  003A16  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18593  003A1A  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18594  003A1E  0100               	movlb	0	; () banked
 18595  003A20  38DF               	swapf	223,w,c
 18596  003A22  0B07               	andlw	7
 18597  003A24  0100               	movlb	0	; () banked
 18598  003A26  6F72               	movwf	EnableChannels@channelMaskCntl& (0+255),b
 18599  003A28  EC83  F050         	call	_EnableChannels	;wreg free
 18600                           
 18601                           ;lorawan_eu.c: 647: UpdateTxPower (txPower);
 18602  003A2C  0100               	movlb	0	; () banked
 18603  003A2E  5179               	movf	ExecuteLinkAdr@txPower& (0+255),w,b
 18604  003A30  ECD7  F051         	call	_UpdateTxPower
 18605                           
 18606                           ;lorawan_eu.c: 648: loRa.macStatus.txPowerModified = 1;
 18607  003A34  0102               	movlb	2	; () banked
 18608  003A36  8903               	bsf	(_loRa+3)& (0+255),4,b
 18609                           
 18610                           ; BSR set to: 2
 18611                           ;lorawan_eu.c: 649: UpdateCurrentDataRate (dataRate);
 18612  003A38  0100               	movlb	0	; () banked
 18613  003A3A  517C               	movf	ExecuteLinkAdr@dataRate& (0+255),w,b
 18614  003A3C  ECE1  F051         	call	_UpdateCurrentDataRate
 18615                           
 18616                           ;lorawan_eu.c: 651: if (redundancy->nbRep == 0)
 18617  003A40  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18618  003A44  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18619  003A48  0100               	movlb	0	; () banked
 18620  003A4A  50DF               	movf	223,w,c
 18621  003A4C  0B0F               	andlw	15
 18622  003A4E  0900               	iorlw	0
 18623  003A50  A4D8               	btfss	status,2,c
 18624  003A52  D002               	goto	l14913
 18625                           
 18626                           ; BSR set to: 0
 18627                           ;lorawan_eu.c: 652: {
 18628                           ;lorawan_eu.c: 653: loRa.maxRepetitionsUnconfirmedUplink = 0;
 18629  003A54  0E00               	movlw	0
 18630  003A56  D00B               	goto	L9
 18631  003A58                     l14913:
 18632                           
 18633                           ;lorawan_eu.c: 655: else
 18634                           ;lorawan_eu.c: 656: {
 18635                           ;lorawan_eu.c: 657: loRa.maxRepetitionsUnconfirmedUplink = redundancy->nbRep - 1;
 18636  003A58  C07A  FFD9         	movff	ExecuteLinkAdr@redundancy,fsr2l
 18637  003A5C  C07B  FFDA         	movff	ExecuteLinkAdr@redundancy+1,fsr2h
 18638  003A60  0100               	movlb	0	; () banked
 18639  003A62  50DF               	movf	223,w,c
 18640  003A64  0B0F               	andlw	15
 18641  003A66  0100               	movlb	0	; () banked
 18642  003A68  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18643  003A6A  0100               	movlb	0	; () banked
 18644  003A6C  0575               	decf	??_ExecuteLinkAdr& (0+255),w,b
 18645  003A6E                     L9:
 18646  003A6E  0102               	movlb	2	; () banked
 18647  003A70  6FD6               	movwf	(_loRa+214)& (0+255),b
 18648                           
 18649                           ; BSR set to: 2
 18650                           ;lorawan_eu.c: 658: }
 18651                           ;lorawan_eu.c: 659: loRa.macStatus.nbRepModified = 1;
 18652                           
 18653                           ; BSR set to: 2
 18654  003A72  0102               	movlb	2	; () banked
 18655  003A74  8B03               	bsf	(_loRa+3)& (0+255),5,b
 18656                           
 18657                           ; BSR set to: 2
 18658                           ;lorawan_eu.c: 660: }
 18659                           ;lorawan_eu.c: 661: }
 18660  003A76  D05A               	goto	l14919
 18661  003A78                     l14917:
 18662                           
 18663                           ; BSR set to: 2
 18664                           ;lorawan_eu.c: 662: else
 18665                           ;lorawan_eu.c: 663: {
 18666                           ;lorawan_eu.c: 664: loRa.macCommands[loRa.crtMacCmdIndex].channelMaskAck = 0;
 18667  003A78  0102               	movlb	2	; () banked
 18668  003A7A  51A7               	movf	(_loRa+167)& (0+255),w,b
 18669  003A7C  0D02               	mullw	2
 18670  003A7E  0E00               	movlw	low _loRa
 18671  003A80  0100               	movlb	0	; () banked
 18672  003A82  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18673  003A84  0E02               	movlw	high _loRa
 18674  003A86  0100               	movlb	0	; () banked
 18675  003A88  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18676  003A8A  0EA8               	movlw	168
 18677  003A8C  0100               	movlb	0	; () banked
 18678  003A8E  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18679  003A90  0E00               	movlw	0
 18680  003A92  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18681  003A94  50F3               	movf	prodl,w,c
 18682  003A96  0100               	movlb	0	; () banked
 18683  003A98  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18684  003A9A  50F4               	movf	prodh,w,c
 18685  003A9C  0100               	movlb	0	; () banked
 18686  003A9E  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18687  003AA0  0E01               	movlw	1
 18688  003AA2  0100               	movlb	0	; () banked
 18689  003AA4  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18690  003AA6  6ED9               	movwf	fsr2l,c
 18691  003AA8  0E00               	movlw	0
 18692  003AAA  0100               	movlb	0	; () banked
 18693  003AAC  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18694  003AAE  6EDA               	movwf	fsr2h,c
 18695  003AB0  0102               	movlb	2	; () banked
 18696  003AB2  90DF               	bcf	indf2,0,c
 18697                           
 18698                           ;lorawan_eu.c: 665: loRa.macCommands[loRa.crtMacCmdIndex].dataRateAck = 0;
 18699  003AB4  0102               	movlb	2	; () banked
 18700  003AB6  51A7               	movf	(_loRa+167)& (0+255),w,b
 18701  003AB8  0D02               	mullw	2
 18702  003ABA  0E00               	movlw	low _loRa
 18703  003ABC  0100               	movlb	0	; () banked
 18704  003ABE  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18705  003AC0  0E02               	movlw	high _loRa
 18706  003AC2  0100               	movlb	0	; () banked
 18707  003AC4  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18708  003AC6  0EA8               	movlw	168
 18709  003AC8  0100               	movlb	0	; () banked
 18710  003ACA  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18711  003ACC  0E00               	movlw	0
 18712  003ACE  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18713  003AD0  50F3               	movf	prodl,w,c
 18714  003AD2  0100               	movlb	0	; () banked
 18715  003AD4  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18716  003AD6  50F4               	movf	prodh,w,c
 18717  003AD8  0100               	movlb	0	; () banked
 18718  003ADA  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18719  003ADC  0E01               	movlw	1
 18720  003ADE  0100               	movlb	0	; () banked
 18721  003AE0  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18722  003AE2  6ED9               	movwf	fsr2l,c
 18723  003AE4  0E00               	movlw	0
 18724  003AE6  0100               	movlb	0	; () banked
 18725  003AE8  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18726  003AEA  6EDA               	movwf	fsr2h,c
 18727  003AEC  0102               	movlb	2	; () banked
 18728  003AEE  92DF               	bcf	indf2,1,c
 18729                           
 18730                           ;lorawan_eu.c: 666: loRa.macCommands[loRa.crtMacCmdIndex].powerAck = 0;
 18731  003AF0  0102               	movlb	2	; () banked
 18732  003AF2  51A7               	movf	(_loRa+167)& (0+255),w,b
 18733  003AF4  0D02               	mullw	2
 18734  003AF6  0E00               	movlw	low _loRa
 18735  003AF8  0100               	movlb	0	; () banked
 18736  003AFA  6F75               	movwf	??_ExecuteLinkAdr& (0+255),b
 18737  003AFC  0E02               	movlw	high _loRa
 18738  003AFE  0100               	movlb	0	; () banked
 18739  003B00  6F76               	movwf	(??_ExecuteLinkAdr+1)& (0+255),b
 18740  003B02  0EA8               	movlw	168
 18741  003B04  0100               	movlb	0	; () banked
 18742  003B06  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18743  003B08  0E00               	movlw	0
 18744  003B0A  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18745  003B0C  50F3               	movf	prodl,w,c
 18746  003B0E  0100               	movlb	0	; () banked
 18747  003B10  2775               	addwf	??_ExecuteLinkAdr& (0+255),f,b
 18748  003B12  50F4               	movf	prodh,w,c
 18749  003B14  0100               	movlb	0	; () banked
 18750  003B16  2376               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),f,b
 18751  003B18  0E01               	movlw	1
 18752  003B1A  0100               	movlb	0	; () banked
 18753  003B1C  2575               	addwf	??_ExecuteLinkAdr& (0+255),w,b
 18754  003B1E  6ED9               	movwf	fsr2l,c
 18755  003B20  0E00               	movlw	0
 18756  003B22  0100               	movlb	0	; () banked
 18757  003B24  2176               	addwfc	(??_ExecuteLinkAdr+1)& (0+255),w,b
 18758  003B26  6EDA               	movwf	fsr2h,c
 18759  003B28  0102               	movlb	2	; () banked
 18760  003B2A  94DF               	bcf	indf2,2,c
 18761  003B2C                     l14919:
 18762                           
 18763                           ; BSR set to: 2
 18764                           ;lorawan_eu.c: 667: }
 18765                           ;lorawan_eu.c: 669: return ptr;
 18766  003B2C  C073  F073         	movff	ExecuteLinkAdr@ptr,?_ExecuteLinkAdr
 18767  003B30  C074  F074         	movff	ExecuteLinkAdr@ptr+1,?_ExecuteLinkAdr+1
 18768  003B34  0012               	return	
 18769  003B36                     __end_of_ExecuteLinkAdr:
 18770                           	opt stack 0
 18771                           tosu	equ	0xFFF
 18772                           tosh	equ	0xFFE
 18773                           tosl	equ	0xFFD
 18774                           pclath	equ	0xFFA
 18775                           tblptru	equ	0xFF8
 18776                           tblptrh	equ	0xFF7
 18777                           tblptrl	equ	0xFF6
 18778                           tablat	equ	0xFF5
 18779                           prodh	equ	0xFF4
 18780                           prodl	equ	0xFF3
 18781                           intcon	equ	0xFF2
 18782                           intcon2	equ	0xFF1
 18783                           intcon3	equ	0xFF0
 18784                           indf0	equ	0xFEF
 18785                           postinc0	equ	0xFEE
 18786                           fsr0h	equ	0xFEA
 18787                           fsr0l	equ	0xFE9
 18788                           wreg	equ	0xFE8
 18789                           postinc1	equ	0xFE6
 18790                           postdec1	equ	0xFE5
 18791                           plusw1	equ	0xFE3
 18792                           fsr1h	equ	0xFE2
 18793                           fsr1l	equ	0xFE1
 18794                           indf2	equ	0xFDF
 18795                           postinc2	equ	0xFDE
 18796                           postdec2	equ	0xFDD
 18797                           plusw2	equ	0xFDB
 18798                           fsr2h	equ	0xFDA
 18799                           fsr2l	equ	0xFD9
 18800                           status	equ	0xFD8
 18801                           
 18802 ;; *************** function _ValidateTxPower *****************
 18803 ;; Defined at:
 18804 ;;		line 582 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18805 ;; Parameters:    Size  Location     Type
 18806 ;;  txPowerNew      1    wreg     unsigned char 
 18807 ;; Auto vars:     Size  Location     Type
 18808 ;;  txPowerNew      1    5[BANK0 ] unsigned char 
 18809 ;;  result          1    4[BANK0 ] enum E8016
 18810 ;; Return value:  Size  Location     Type
 18811 ;;                  1    wreg      enum E8016
 18812 ;; Registers used:
 18813 ;;		wreg, status,2, status,0
 18814 ;; Tracked objects:
 18815 ;;		On entry : 0/0
 18816 ;;		On exit  : 0/0
 18817 ;;		Unchanged: 0/0
 18818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18820 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18822 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18823 ;;Total ram usage:        2 bytes
 18824 ;; Hardware stack levels used:    1
 18825 ;; Hardware stack levels required when called:    7
 18826 ;; This function calls:
 18827 ;;		Nothing
 18828 ;; This function is called by:
 18829 ;;		_ExecuteLinkAdr
 18830 ;;		_LORAWAN_SetTxPower
 18831 ;; This function uses a non-reentrant model
 18832 ;;
 18833                           
 18834                           	psect	text85
 18835  009CDE                     __ptext85:
 18836                           	opt stack 0
 18837  009CDE                     _ValidateTxPower:
 18838                           	opt stack 17
 18839                           
 18840                           ; BSR set to: 2
 18841                           ;incstack = 0
 18842                           ;ValidateTxPower@txPowerNew stored from wreg
 18843  009CDE  0100               	movlb	0	; () banked
 18844  009CE0  6F65               	movwf	ValidateTxPower@txPowerNew& (0+255),b
 18845                           
 18846                           ;lorawan_eu.c: 584: LorawanError_t result = OK;
 18847  009CE2  0E00               	movlw	0
 18848  009CE4  0100               	movlb	0	; () banked
 18849  009CE6  6F64               	movwf	ValidateTxPower@result& (0+255),b
 18850                           
 18851                           ; BSR set to: 0
 18852                           ;lorawan_eu.c: 586: if (((ISM_EU868 == loRa.ismBand) && (0 == txPowerNew)) || (txPowerNe
      +                          w > 5))
 18853  009CE8  0102               	movlb	2	; () banked
 18854  009CEA  51A4               	movf	(_loRa+164)& (0+255),w,b
 18855  009CEC  A4D8               	btfss	status,2,c
 18856  009CEE  D005               	goto	l14293
 18857                           
 18858                           ; BSR set to: 2
 18859  009CF0  0100               	movlb	0	; () banked
 18860  009CF2  5165               	movf	ValidateTxPower@txPowerNew& (0+255),w,b
 18861  009CF4  0100               	movlb	0	; () banked
 18862  009CF6  B4D8               	btfsc	status,2,c
 18863  009CF8  D004               	goto	l14295
 18864  009CFA                     l14293:
 18865  009CFA  0E05               	movlw	5
 18866  009CFC  0100               	movlb	0	; () banked
 18867  009CFE  6565               	cpfsgt	ValidateTxPower@txPowerNew& (0+255),b
 18868  009D00  D003               	goto	l1081
 18869  009D02                     l14295:
 18870                           
 18871                           ; BSR set to: 0
 18872                           ;lorawan_eu.c: 587: {
 18873                           ;lorawan_eu.c: 588: result = INVALID_PARAMETER;
 18874  009D02  0E03               	movlw	3
 18875  009D04  0100               	movlb	0	; () banked
 18876  009D06  6F64               	movwf	ValidateTxPower@result& (0+255),b
 18877  009D08                     l1081:
 18878                           
 18879                           ; BSR set to: 0
 18880                           ;lorawan_eu.c: 589: }
 18881                           ;lorawan_eu.c: 591: return result;
 18882  009D08  0100               	movlb	0	; () banked
 18883  009D0A  5164               	movf	ValidateTxPower@result& (0+255),w,b
 18884  009D0C  0012               	return	
 18885  009D0E                     __end_of_ValidateTxPower:
 18886                           	opt stack 0
 18887                           tosu	equ	0xFFF
 18888                           tosh	equ	0xFFE
 18889                           tosl	equ	0xFFD
 18890                           pclath	equ	0xFFA
 18891                           tblptru	equ	0xFF8
 18892                           tblptrh	equ	0xFF7
 18893                           tblptrl	equ	0xFF6
 18894                           tablat	equ	0xFF5
 18895                           prodh	equ	0xFF4
 18896                           prodl	equ	0xFF3
 18897                           intcon	equ	0xFF2
 18898                           intcon2	equ	0xFF1
 18899                           intcon3	equ	0xFF0
 18900                           indf0	equ	0xFEF
 18901                           postinc0	equ	0xFEE
 18902                           fsr0h	equ	0xFEA
 18903                           fsr0l	equ	0xFE9
 18904                           wreg	equ	0xFE8
 18905                           postinc1	equ	0xFE6
 18906                           postdec1	equ	0xFE5
 18907                           plusw1	equ	0xFE3
 18908                           fsr1h	equ	0xFE2
 18909                           fsr1l	equ	0xFE1
 18910                           indf2	equ	0xFDF
 18911                           postinc2	equ	0xFDE
 18912                           postdec2	equ	0xFDD
 18913                           plusw2	equ	0xFDB
 18914                           fsr2h	equ	0xFDA
 18915                           fsr2l	equ	0xFD9
 18916                           status	equ	0xFD8
 18917                           
 18918 ;; *************** function _ValidateChannelMaskCntl *****************
 18919 ;; Defined at:
 18920 ;;		line 1137 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 18921 ;; Parameters:    Size  Location     Type
 18922 ;;  channelMaskC    1    wreg     unsigned char 
 18923 ;; Auto vars:     Size  Location     Type
 18924 ;;  channelMaskC    1    5[BANK0 ] unsigned char 
 18925 ;;  result          1    4[BANK0 ] enum E8016
 18926 ;; Return value:  Size  Location     Type
 18927 ;;                  1    wreg      enum E8016
 18928 ;; Registers used:
 18929 ;;		wreg, status,2, status,0
 18930 ;; Tracked objects:
 18931 ;;		On entry : 0/0
 18932 ;;		On exit  : 0/0
 18933 ;;		Unchanged: 0/0
 18934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18936 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18938 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18939 ;;Total ram usage:        2 bytes
 18940 ;; Hardware stack levels used:    1
 18941 ;; Hardware stack levels required when called:    7
 18942 ;; This function calls:
 18943 ;;		Nothing
 18944 ;; This function is called by:
 18945 ;;		_ExecuteLinkAdr
 18946 ;; This function uses a non-reentrant model
 18947 ;;
 18948                           
 18949                           	psect	text86
 18950  009E46                     __ptext86:
 18951                           	opt stack 0
 18952  009E46                     _ValidateChannelMaskCntl:
 18953                           	opt stack 17
 18954                           
 18955                           ; BSR set to: 0
 18956                           ;incstack = 0
 18957                           ;ValidateChannelMaskCntl@channelMaskCntl stored from wreg
 18958  009E46  0100               	movlb	0	; () banked
 18959  009E48  6F65               	movwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),b
 18960                           
 18961                           ;lorawan_eu.c: 1139: LorawanError_t result = OK;
 18962  009E4A  0E00               	movlw	0
 18963  009E4C  0100               	movlb	0	; () banked
 18964  009E4E  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18965                           
 18966                           ; BSR set to: 0
 18967                           ;lorawan_eu.c: 1141: if ( (channelMaskCntl != 0) && (channelMaskCntl != 6) )
 18968  009E50  0100               	movlb	0	; () banked
 18969  009E52  5165               	movf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18970  009E54  0100               	movlb	0	; () banked
 18971  009E56  B4D8               	btfsc	status,2,c
 18972  009E58  D008               	goto	l1248
 18973                           
 18974                           ; BSR set to: 0
 18975  009E5A  0E06               	movlw	6
 18976  009E5C  0100               	movlb	0	; () banked
 18977  009E5E  1965               	xorwf	ValidateChannelMaskCntl@channelMaskCntl& (0+255),w,b
 18978  009E60  B4D8               	btfsc	status,2,c
 18979  009E62  D003               	goto	l1248
 18980                           
 18981                           ; BSR set to: 0
 18982                           ;lorawan_eu.c: 1142: {
 18983                           ;lorawan_eu.c: 1143: result = INVALID_PARAMETER;
 18984  009E64  0E03               	movlw	3
 18985  009E66  0100               	movlb	0	; () banked
 18986  009E68  6F64               	movwf	ValidateChannelMaskCntl@result& (0+255),b
 18987  009E6A                     l1248:
 18988                           
 18989                           ; BSR set to: 0
 18990                           ;lorawan_eu.c: 1144: }
 18991                           ;lorawan_eu.c: 1146: return result;
 18992  009E6A  0100               	movlb	0	; () banked
 18993  009E6C  5164               	movf	ValidateChannelMaskCntl@result& (0+255),w,b
 18994  009E6E  0012               	return	
 18995  009E70                     __end_of_ValidateChannelMaskCntl:
 18996                           	opt stack 0
 18997                           tosu	equ	0xFFF
 18998                           tosh	equ	0xFFE
 18999                           tosl	equ	0xFFD
 19000                           pclath	equ	0xFFA
 19001                           tblptru	equ	0xFF8
 19002                           tblptrh	equ	0xFF7
 19003                           tblptrl	equ	0xFF6
 19004                           tablat	equ	0xFF5
 19005                           prodh	equ	0xFF4
 19006                           prodl	equ	0xFF3
 19007                           intcon	equ	0xFF2
 19008                           intcon2	equ	0xFF1
 19009                           intcon3	equ	0xFF0
 19010                           indf0	equ	0xFEF
 19011                           postinc0	equ	0xFEE
 19012                           fsr0h	equ	0xFEA
 19013                           fsr0l	equ	0xFE9
 19014                           wreg	equ	0xFE8
 19015                           postinc1	equ	0xFE6
 19016                           postdec1	equ	0xFE5
 19017                           plusw1	equ	0xFE3
 19018                           fsr1h	equ	0xFE2
 19019                           fsr1l	equ	0xFE1
 19020                           indf2	equ	0xFDF
 19021                           postinc2	equ	0xFDE
 19022                           postdec2	equ	0xFDD
 19023                           plusw2	equ	0xFDB
 19024                           fsr2h	equ	0xFDA
 19025                           fsr2l	equ	0xFD9
 19026                           status	equ	0xFD8
 19027                           
 19028 ;; *************** function _ValidateChannelMask *****************
 19029 ;; Defined at:
 19030 ;;		line 1166 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19031 ;; Parameters:    Size  Location     Type
 19032 ;;  channelMask     2    4[BANK0 ] unsigned int 
 19033 ;; Auto vars:     Size  Location     Type
 19034 ;;  i               1    8[BANK0 ] unsigned char 
 19035 ;; Return value:  Size  Location     Type
 19036 ;;                  1    wreg      enum E8016
 19037 ;; Registers used:
 19038 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19039 ;; Tracked objects:
 19040 ;;		On entry : 0/0
 19041 ;;		On exit  : 0/0
 19042 ;;		Unchanged: 0/0
 19043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19044 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19045 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19046 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19047 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19048 ;;Total ram usage:        5 bytes
 19049 ;; Hardware stack levels used:    1
 19050 ;; Hardware stack levels required when called:    7
 19051 ;; This function calls:
 19052 ;;		Nothing
 19053 ;; This function is called by:
 19054 ;;		_ExecuteLinkAdr
 19055 ;; This function uses a non-reentrant model
 19056 ;;
 19057                           
 19058                           	psect	text87
 19059  008DF4                     __ptext87:
 19060                           	opt stack 0
 19061  008DF4                     _ValidateChannelMask:
 19062                           	opt stack 17
 19063                           
 19064                           ;lorawan_eu.c: 1168: uint8_t i = 0;
 19065                           
 19066                           ; BSR set to: 0
 19067                           ;incstack = 0
 19068  008DF4  0E00               	movlw	0
 19069  008DF6  0100               	movlb	0	; () banked
 19070  008DF8  6F68               	movwf	ValidateChannelMask@i& (0+255),b
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;lorawan_eu.c: 1170: if(channelMask != 0x0000U)
 19074  008DFA  0100               	movlb	0	; () banked
 19075  008DFC  5164               	movf	ValidateChannelMask@channelMask& (0+255),w,b
 19076  008DFE  0100               	movlb	0	; () banked
 19077  008E00  1165               	iorwf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 19078  008E02  B4D8               	btfsc	status,2,c
 19079  008E04  D02F               	goto	l14339
 19080                           
 19081                           ; BSR set to: 0
 19082                           ;lorawan_eu.c: 1171: {
 19083                           ;lorawan_eu.c: 1172: for (i = 0; i < 16; i++)
 19084  008E06  0E00               	movlw	0
 19085  008E08  0100               	movlb	0	; () banked
 19086  008E0A  6F68               	movwf	ValidateChannelMask@i& (0+255),b
 19087  008E0C                     l14315:
 19088                           
 19089                           ; BSR set to: 0
 19090  008E0C  0E0F               	movlw	15
 19091  008E0E  0100               	movlb	0	; () banked
 19092  008E10  6568               	cpfsgt	ValidateChannelMask@i& (0+255),b
 19093  008E12  D001               	goto	l1262
 19094  008E14  D025               	goto	l14333
 19095  008E16                     l1262:
 19096                           
 19097                           ; BSR set to: 0
 19098                           ;lorawan_eu.c: 1173: {
 19099                           ;lorawan_eu.c: 1174: if ( ( (channelMask & (1 << (0))) == (1 << (0))) && ( (Channels[i].
      +                          parametersDefined & (0X01 | 0X02 | 0x04) ) != (0X01 | 0X02 | 0x04) ) )
 19100  008E16  0100               	movlb	0	; () banked
 19101  008E18  A164               	btfss	ValidateChannelMask@channelMask& (0+255),0,b
 19102  008E1A  D014               	goto	l14327
 19103                           
 19104                           ; BSR set to: 0
 19105  008E1C  0100               	movlb	0	; () banked
 19106  008E1E  5168               	movf	ValidateChannelMask@i& (0+255),w,b
 19107  008E20  0D0E               	mullw	14
 19108  008E22  0E0D               	movlw	13
 19109  008E24  26F3               	addwf	prodl,f,c
 19110  008E26  0E00               	movlw	0
 19111  008E28  22F4               	addwfc	prodh,f,c
 19112  008E2A  0E00               	movlw	low _Channels
 19113  008E2C  24F3               	addwf	prodl,w,c
 19114  008E2E  6ED9               	movwf	fsr2l,c
 19115  008E30  0E04               	movlw	high _Channels
 19116  008E32  20F4               	addwfc	prodh,w,c
 19117  008E34  6EDA               	movwf	fsr2h,c
 19118  008E36  50DF               	movf	indf2,w,c
 19119  008E38  0B07               	andlw	7
 19120  008E3A  0A07               	xorlw	7
 19121  008E3C  B4D8               	btfsc	status,2,c
 19122  008E3E  D002               	goto	l14327
 19123                           
 19124                           ; BSR set to: 0
 19125                           ;lorawan_eu.c: 1175: {
 19126                           ;lorawan_eu.c: 1176: return INVALID_PARAMETER;
 19127  008E40  0E03               	movlw	3
 19128                           
 19129                           ; BSR set to: 0
 19130  008E42  0012               	return	
 19131  008E44                     l14327:
 19132                           
 19133                           ; BSR set to: 0
 19134                           ;lorawan_eu.c: 1178: else
 19135                           ;lorawan_eu.c: 1179: {
 19136                           ;lorawan_eu.c: 1180: channelMask = channelMask >> (1);
 19137  008E44  90D8               	bcf	status,0,c
 19138  008E46  0100               	movlb	0	; () banked
 19139  008E48  3165               	rrcf	(ValidateChannelMask@channelMask+1)& (0+255),w,b
 19140  008E4A  0100               	movlb	0	; () banked
 19141  008E4C  6F66               	movwf	??_ValidateChannelMask& (0+255),b
 19142  008E4E  0100               	movlb	0	; () banked
 19143  008E50  3164               	rrcf	ValidateChannelMask@channelMask& (0+255),w,b
 19144  008E52  0100               	movlb	0	; () banked
 19145  008E54  6F64               	movwf	ValidateChannelMask@channelMask& (0+255),b
 19146  008E56  C066  F065         	movff	??_ValidateChannelMask,ValidateChannelMask@channelMask+1
 19147                           
 19148                           ; BSR set to: 0
 19149                           
 19150                           ; BSR set to: 0
 19151  008E5A  0100               	movlb	0	; () banked
 19152  008E5C  2B68               	incf	ValidateChannelMask@i& (0+255),f,b
 19153  008E5E  D7D6               	goto	l14315
 19154  008E60                     l14333:
 19155                           
 19156                           ; BSR set to: 0
 19157                           ;lorawan_eu.c: 1181: }
 19158                           ;lorawan_eu.c: 1182: }
 19159                           ;lorawan_eu.c: 1184: return OK;
 19160  008E60  0E00               	movlw	0
 19161                           
 19162                           ; BSR set to: 0
 19163                           ;lorawan_eu.c: 1185: }
 19164                           
 19165                           ; BSR set to: 0
 19166  008E62  0012               	return	
 19167  008E64                     l14339:
 19168                           
 19169                           ; BSR set to: 0
 19170                           ;lorawan_eu.c: 1186: else
 19171                           ;lorawan_eu.c: 1187: {
 19172                           ;lorawan_eu.c: 1189: return INVALID_PARAMETER;
 19173  008E64  0E03               	movlw	3
 19174                           
 19175                           ; BSR set to: 0
 19176  008E66  0012               	return	
 19177  008E68                     __end_of_ValidateChannelMask:
 19178                           	opt stack 0
 19179                           tosu	equ	0xFFF
 19180                           tosh	equ	0xFFE
 19181                           tosl	equ	0xFFD
 19182                           pclath	equ	0xFFA
 19183                           tblptru	equ	0xFF8
 19184                           tblptrh	equ	0xFF7
 19185                           tblptrl	equ	0xFF6
 19186                           tablat	equ	0xFF5
 19187                           prodh	equ	0xFF4
 19188                           prodl	equ	0xFF3
 19189                           intcon	equ	0xFF2
 19190                           intcon2	equ	0xFF1
 19191                           intcon3	equ	0xFF0
 19192                           indf0	equ	0xFEF
 19193                           postinc0	equ	0xFEE
 19194                           fsr0h	equ	0xFEA
 19195                           fsr0l	equ	0xFE9
 19196                           wreg	equ	0xFE8
 19197                           postinc1	equ	0xFE6
 19198                           postdec1	equ	0xFE5
 19199                           plusw1	equ	0xFE3
 19200                           fsr1h	equ	0xFE2
 19201                           fsr1l	equ	0xFE1
 19202                           indf2	equ	0xFDF
 19203                           postinc2	equ	0xFDE
 19204                           postdec2	equ	0xFDD
 19205                           plusw2	equ	0xFDB
 19206                           fsr2h	equ	0xFDA
 19207                           fsr2l	equ	0xFD9
 19208                           status	equ	0xFD8
 19209                           
 19210 ;; *************** function _UpdateTxPower *****************
 19211 ;; Defined at:
 19212 ;;		line 1029 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 19213 ;; Parameters:    Size  Location     Type
 19214 ;;  txPowerNew      1    wreg     unsigned char 
 19215 ;; Auto vars:     Size  Location     Type
 19216 ;;  txPowerNew      1    4[BANK0 ] unsigned char 
 19217 ;; Return value:  Size  Location     Type
 19218 ;;                  1    wreg      void 
 19219 ;; Registers used:
 19220 ;;		wreg
 19221 ;; Tracked objects:
 19222 ;;		On entry : 0/0
 19223 ;;		On exit  : 0/0
 19224 ;;		Unchanged: 0/0
 19225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19227 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19229 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19230 ;;Total ram usage:        1 bytes
 19231 ;; Hardware stack levels used:    1
 19232 ;; Hardware stack levels required when called:    7
 19233 ;; This function calls:
 19234 ;;		Nothing
 19235 ;; This function is called by:
 19236 ;;		_ExecuteLinkAdr
 19237 ;;		_LORAWAN_SetTxPower
 19238 ;; This function uses a non-reentrant model
 19239 ;;
 19240                           
 19241                           	psect	text88
 19242  00A3AE                     __ptext88:
 19243                           	opt stack 0
 19244  00A3AE                     _UpdateTxPower:
 19245                           	opt stack 17
 19246                           
 19247                           ; BSR set to: 0
 19248                           ;incstack = 0
 19249                           ;UpdateTxPower@txPowerNew stored from wreg
 19250  00A3AE  0100               	movlb	0	; () banked
 19251  00A3B0  6F64               	movwf	UpdateTxPower@txPowerNew& (0+255),b
 19252                           
 19253                           ;lorawan.c: 1031: loRa.txPower = txPowerNew;
 19254  00A3B2  C064  F2E1         	movff	UpdateTxPower@txPowerNew,_loRa+225
 19255  00A3B6  0012               	return		;funcret
 19256  00A3B8                     __end_of_UpdateTxPower:
 19257                           	opt stack 0
 19258                           tosu	equ	0xFFF
 19259                           tosh	equ	0xFFE
 19260                           tosl	equ	0xFFD
 19261                           pclath	equ	0xFFA
 19262                           tblptru	equ	0xFF8
 19263                           tblptrh	equ	0xFF7
 19264                           tblptrl	equ	0xFF6
 19265                           tablat	equ	0xFF5
 19266                           prodh	equ	0xFF4
 19267                           prodl	equ	0xFF3
 19268                           intcon	equ	0xFF2
 19269                           intcon2	equ	0xFF1
 19270                           intcon3	equ	0xFF0
 19271                           indf0	equ	0xFEF
 19272                           postinc0	equ	0xFEE
 19273                           fsr0h	equ	0xFEA
 19274                           fsr0l	equ	0xFE9
 19275                           wreg	equ	0xFE8
 19276                           postinc1	equ	0xFE6
 19277                           postdec1	equ	0xFE5
 19278                           plusw1	equ	0xFE3
 19279                           fsr1h	equ	0xFE2
 19280                           fsr1l	equ	0xFE1
 19281                           indf2	equ	0xFDF
 19282                           postinc2	equ	0xFDE
 19283                           postdec2	equ	0xFDD
 19284                           plusw2	equ	0xFDB
 19285                           fsr2h	equ	0xFDA
 19286                           fsr2l	equ	0xFD9
 19287                           status	equ	0xFD8
 19288                           
 19289 ;; *************** function _EnableChannels *****************
 19290 ;; Defined at:
 19291 ;;		line 1149 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;  channelMask     2   16[BANK0 ] unsigned int 
 19294 ;;  channelMaskC    1   18[BANK0 ] unsigned char 
 19295 ;; Auto vars:     Size  Location     Type
 19296 ;;		None
 19297 ;; Return value:  Size  Location     Type
 19298 ;;                  1    wreg      void 
 19299 ;; Registers used:
 19300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19301 ;; Tracked objects:
 19302 ;;		On entry : 0/0
 19303 ;;		On exit  : 0/0
 19304 ;;		Unchanged: 0/0
 19305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19306 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19307 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19309 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19310 ;;Total ram usage:        3 bytes
 19311 ;; Hardware stack levels used:    1
 19312 ;; Hardware stack levels required when called:    9
 19313 ;; This function calls:
 19314 ;;		_EnableChannels1
 19315 ;; This function is called by:
 19316 ;;		_ExecuteLinkAdr
 19317 ;; This function uses a non-reentrant model
 19318 ;;
 19319                           
 19320                           	psect	text89
 19321  00A106                     __ptext89:
 19322                           	opt stack 0
 19323  00A106                     _EnableChannels:
 19324                           	opt stack 15
 19325                           
 19326                           ;lorawan_eu.c: 1151: EnableChannels1 (channelMask, channelMaskCntl, 0, 16);
 19327                           
 19328                           ;incstack = 0
 19329  00A106  C070  F068         	movff	EnableChannels@channelMask,EnableChannels1@channelMask
 19330  00A10A  C071  F069         	movff	EnableChannels@channelMask+1,EnableChannels1@channelMask+1
 19331  00A10E  C072  F06A         	movff	EnableChannels@channelMaskCntl,EnableChannels1@channelMaskCntl
 19332  00A112  0E00               	movlw	0
 19333  00A114  0100               	movlb	0	; () banked
 19334  00A116  6F6B               	movwf	EnableChannels1@channelIndexMin& (0+255),b
 19335  00A118  0E10               	movlw	16
 19336  00A11A  0100               	movlb	0	; () banked
 19337  00A11C  6F6C               	movwf	EnableChannels1@channelIndexMax& (0+255),b
 19338  00A11E  ECB8  F044         	call	_EnableChannels1	;wreg free
 19339  00A122  0012               	return		;funcret
 19340  00A124                     __end_of_EnableChannels:
 19341                           	opt stack 0
 19342                           tosu	equ	0xFFF
 19343                           tosh	equ	0xFFE
 19344                           tosl	equ	0xFFD
 19345                           pclath	equ	0xFFA
 19346                           tblptru	equ	0xFF8
 19347                           tblptrh	equ	0xFF7
 19348                           tblptrl	equ	0xFF6
 19349                           tablat	equ	0xFF5
 19350                           prodh	equ	0xFF4
 19351                           prodl	equ	0xFF3
 19352                           intcon	equ	0xFF2
 19353                           intcon2	equ	0xFF1
 19354                           intcon3	equ	0xFF0
 19355                           indf0	equ	0xFEF
 19356                           postinc0	equ	0xFEE
 19357                           fsr0h	equ	0xFEA
 19358                           fsr0l	equ	0xFE9
 19359                           wreg	equ	0xFE8
 19360                           postinc1	equ	0xFE6
 19361                           postdec1	equ	0xFE5
 19362                           plusw1	equ	0xFE3
 19363                           fsr1h	equ	0xFE2
 19364                           fsr1l	equ	0xFE1
 19365                           indf2	equ	0xFDF
 19366                           postinc2	equ	0xFDE
 19367                           postdec2	equ	0xFDD
 19368                           plusw2	equ	0xFDB
 19369                           fsr2h	equ	0xFDA
 19370                           fsr2l	equ	0xFD9
 19371                           status	equ	0xFD8
 19372                           
 19373 ;; *************** function _EnableChannels1 *****************
 19374 ;; Defined at:
 19375 ;;		line 1193 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19376 ;; Parameters:    Size  Location     Type
 19377 ;;  channelMask     2    8[BANK0 ] unsigned int 
 19378 ;;  channelMaskC    1   10[BANK0 ] unsigned char 
 19379 ;;  channelIndex    1   11[BANK0 ] unsigned char 
 19380 ;;  channelIndex    1   12[BANK0 ] unsigned char 
 19381 ;; Auto vars:     Size  Location     Type
 19382 ;;  i               1   15[BANK0 ] unsigned char 
 19383 ;; Return value:  Size  Location     Type
 19384 ;;                  1    wreg      void 
 19385 ;; Registers used:
 19386 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19387 ;; Tracked objects:
 19388 ;;		On entry : 0/0
 19389 ;;		On exit  : 0/0
 19390 ;;		Unchanged: 0/0
 19391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19392 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19393 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19394 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19395 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19396 ;;Total ram usage:        8 bytes
 19397 ;; Hardware stack levels used:    1
 19398 ;; Hardware stack levels required when called:    8
 19399 ;; This function calls:
 19400 ;;		_UpdateChannelIdStatus
 19401 ;; This function is called by:
 19402 ;;		_EnableChannels
 19403 ;; This function uses a non-reentrant model
 19404 ;;
 19405                           
 19406                           	psect	text90
 19407  008970                     __ptext90:
 19408                           	opt stack 0
 19409  008970                     _EnableChannels1:
 19410                           	opt stack 15
 19411                           
 19412                           ;lorawan_eu.c: 1195: uint8_t i;
 19413                           ;lorawan_eu.c: 1197: if (channelMaskCntl == 6)
 19414                           
 19415                           ;incstack = 0
 19416  008970  0E06               	movlw	6
 19417  008972  0100               	movlb	0	; () banked
 19418  008974  196A               	xorwf	EnableChannels1@channelMaskCntl& (0+255),w,b
 19419  008976  A4D8               	btfss	status,2,c
 19420  008978  D013               	goto	l13975
 19421                           
 19422                           ; BSR set to: 0
 19423                           ;lorawan_eu.c: 1198: {
 19424                           ;lorawan_eu.c: 1199: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 19425  00897A  C06B  F06F         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 19426  00897E  D009               	goto	l13973
 19427  008980                     l13969:
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;lorawan_eu.c: 1200: {
 19431                           ;lorawan_eu.c: 1201: UpdateChannelIdStatus (i, 1);
 19432  008980  0E01               	movlw	1
 19433  008982  0100               	movlb	0	; () banked
 19434  008984  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19435  008986  0100               	movlb	0	; () banked
 19436  008988  516F               	movf	EnableChannels1@i& (0+255),w,b
 19437  00898A  ECFF  F02F         	call	_UpdateChannelIdStatus
 19438  00898E  0100               	movlb	0	; () banked
 19439  008990  2B6F               	incf	EnableChannels1@i& (0+255),f,b
 19440  008992                     l13973:
 19441                           
 19442                           ; BSR set to: 0
 19443  008992  0100               	movlb	0	; () banked
 19444  008994  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 19445  008996  0100               	movlb	0	; () banked
 19446  008998  5D6F               	subwf	EnableChannels1@i& (0+255),w,b
 19447  00899A  B0D8               	btfsc	status,0,c
 19448  00899C  0012               	return	
 19449  00899E  D7F0               	goto	l13969
 19450  0089A0                     l13975:
 19451                           
 19452                           ; BSR set to: 0
 19453                           ;lorawan_eu.c: 1204: else if (channelMaskCntl == 0)
 19454  0089A0  0100               	movlb	0	; () banked
 19455  0089A2  516A               	movf	EnableChannels1@channelMaskCntl& (0+255),w,b
 19456  0089A4  0100               	movlb	0	; () banked
 19457  0089A6  A4D8               	btfss	status,2,c
 19458  0089A8  0012               	return	
 19459                           
 19460                           ; BSR set to: 0
 19461                           ;lorawan_eu.c: 1205: {
 19462                           ;lorawan_eu.c: 1206: for ( i = channelIndexMin; i < channelIndexMax; i++ )
 19463  0089AA  C06B  F06F         	movff	EnableChannels1@channelIndexMin,EnableChannels1@i
 19464  0089AE  D01F               	goto	l13987
 19465  0089B0                     l1277:
 19466                           
 19467                           ; BSR set to: 0
 19468                           ;lorawan_eu.c: 1207: {
 19469                           ;lorawan_eu.c: 1208: if ( channelMask & (1 << (0)) == (1 << (0)))
 19470  0089B0  0100               	movlb	0	; () banked
 19471  0089B2  A168               	btfss	EnableChannels1@channelMask& (0+255),0,b
 19472  0089B4  D008               	goto	l13981
 19473                           
 19474                           ; BSR set to: 0
 19475                           ;lorawan_eu.c: 1209: {
 19476                           ;lorawan_eu.c: 1210: UpdateChannelIdStatus (i, 1);
 19477  0089B6  0E01               	movlw	1
 19478  0089B8  0100               	movlb	0	; () banked
 19479  0089BA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19480  0089BC  0100               	movlb	0	; () banked
 19481  0089BE  516F               	movf	EnableChannels1@i& (0+255),w,b
 19482  0089C0  ECFF  F02F         	call	_UpdateChannelIdStatus
 19483                           
 19484                           ;lorawan_eu.c: 1211: }
 19485  0089C4  D007               	goto	l13983
 19486  0089C6                     l13981:
 19487                           
 19488                           ;lorawan_eu.c: 1212: else
 19489                           ;lorawan_eu.c: 1213: {
 19490                           ;lorawan_eu.c: 1214: UpdateChannelIdStatus (i, 0);
 19491  0089C6  0E00               	movlw	0
 19492  0089C8  0100               	movlb	0	; () banked
 19493  0089CA  6F64               	movwf	UpdateChannelIdStatus@statusNew& (0+255),b
 19494  0089CC  0100               	movlb	0	; () banked
 19495  0089CE  516F               	movf	EnableChannels1@i& (0+255),w,b
 19496  0089D0  ECFF  F02F         	call	_UpdateChannelIdStatus
 19497  0089D4                     l13983:
 19498                           
 19499                           ;lorawan_eu.c: 1215: }
 19500                           ;lorawan_eu.c: 1216: channelMask = channelMask >> (1);
 19501  0089D4  90D8               	bcf	status,0,c
 19502  0089D6  0100               	movlb	0	; () banked
 19503  0089D8  3169               	rrcf	(EnableChannels1@channelMask+1)& (0+255),w,b
 19504  0089DA  0100               	movlb	0	; () banked
 19505  0089DC  6F6D               	movwf	??_EnableChannels1& (0+255),b
 19506  0089DE  0100               	movlb	0	; () banked
 19507  0089E0  3168               	rrcf	EnableChannels1@channelMask& (0+255),w,b
 19508  0089E2  0100               	movlb	0	; () banked
 19509  0089E4  6F68               	movwf	EnableChannels1@channelMask& (0+255),b
 19510  0089E6  C06D  F069         	movff	??_EnableChannels1,EnableChannels1@channelMask+1
 19511                           
 19512                           ; BSR set to: 0
 19513  0089EA  0100               	movlb	0	; () banked
 19514  0089EC  2B6F               	incf	EnableChannels1@i& (0+255),f,b
 19515  0089EE                     l13987:
 19516                           
 19517                           ; BSR set to: 0
 19518  0089EE  0100               	movlb	0	; () banked
 19519  0089F0  516C               	movf	EnableChannels1@channelIndexMax& (0+255),w,b
 19520  0089F2  0100               	movlb	0	; () banked
 19521  0089F4  5D6F               	subwf	EnableChannels1@i& (0+255),w,b
 19522  0089F6  B0D8               	btfsc	status,0,c
 19523  0089F8  0012               	return	
 19524  0089FA  D7DA               	goto	l1277
 19525  0089FC                     __end_of_EnableChannels1:
 19526                           	opt stack 0
 19527                           tosu	equ	0xFFF
 19528                           tosh	equ	0xFFE
 19529                           tosl	equ	0xFFD
 19530                           pclath	equ	0xFFA
 19531                           tblptru	equ	0xFF8
 19532                           tblptrh	equ	0xFF7
 19533                           tblptrl	equ	0xFF6
 19534                           tablat	equ	0xFF5
 19535                           prodh	equ	0xFF4
 19536                           prodl	equ	0xFF3
 19537                           intcon	equ	0xFF2
 19538                           intcon2	equ	0xFF1
 19539                           intcon3	equ	0xFF0
 19540                           indf0	equ	0xFEF
 19541                           postinc0	equ	0xFEE
 19542                           fsr0h	equ	0xFEA
 19543                           fsr0l	equ	0xFE9
 19544                           wreg	equ	0xFE8
 19545                           postinc1	equ	0xFE6
 19546                           postdec1	equ	0xFE5
 19547                           plusw1	equ	0xFE3
 19548                           fsr1h	equ	0xFE2
 19549                           fsr1l	equ	0xFE1
 19550                           indf2	equ	0xFDF
 19551                           postinc2	equ	0xFDE
 19552                           postdec2	equ	0xFDD
 19553                           plusw2	equ	0xFDB
 19554                           fsr2h	equ	0xFDA
 19555                           fsr2l	equ	0xFD9
 19556                           status	equ	0xFD8
 19557                           
 19558 ;; *************** function _UpdateChannelIdStatus *****************
 19559 ;; Defined at:
 19560 ;;		line 1042 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19561 ;; Parameters:    Size  Location     Type
 19562 ;;  channelId       1    wreg     unsigned char 
 19563 ;;  statusNew       1    4[BANK0 ] unsigned char 
 19564 ;; Auto vars:     Size  Location     Type
 19565 ;;  channelId       1    6[BANK0 ] unsigned char 
 19566 ;;  i               1    7[BANK0 ] unsigned char 
 19567 ;; Return value:  Size  Location     Type
 19568 ;;                  1    wreg      void 
 19569 ;; Registers used:
 19570 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19571 ;; Tracked objects:
 19572 ;;		On entry : 0/0
 19573 ;;		On exit  : 0/0
 19574 ;;		Unchanged: 0/0
 19575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19576 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19577 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19578 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19579 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19580 ;;Total ram usage:        4 bytes
 19581 ;; Hardware stack levels used:    1
 19582 ;; Hardware stack levels required when called:    7
 19583 ;; This function calls:
 19584 ;;		Nothing
 19585 ;; This function is called by:
 19586 ;;		_LORAWAN_SetChannelIdStatus
 19587 ;;		_ExecuteNewChannel
 19588 ;;		_EnableChannels1
 19589 ;; This function uses a non-reentrant model
 19590 ;;
 19591                           
 19592                           	psect	text91
 19593  005FFE                     __ptext91:
 19594                           	opt stack 0
 19595  005FFE                     _UpdateChannelIdStatus:
 19596                           	opt stack 17
 19597                           
 19598                           ; BSR set to: 0
 19599                           ;incstack = 0
 19600                           ;UpdateChannelIdStatus@channelId stored from wreg
 19601  005FFE  0100               	movlb	0	; () banked
 19602  006000  6F66               	movwf	UpdateChannelIdStatus@channelId& (0+255),b
 19603                           
 19604                           ;lorawan_eu.c: 1044: uint8_t i;
 19605                           ;lorawan_eu.c: 1046: Channels[channelId].status = statusNew;
 19606  006002  0100               	movlb	0	; () banked
 19607  006004  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19608  006006  0D0E               	mullw	14
 19609  006008  0E04               	movlw	4
 19610  00600A  26F3               	addwf	prodl,f,c
 19611  00600C  0E00               	movlw	0
 19612  00600E  22F4               	addwfc	prodh,f,c
 19613  006010  0E00               	movlw	low _Channels
 19614  006012  24F3               	addwf	prodl,w,c
 19615  006014  6ED9               	movwf	fsr2l,c
 19616  006016  0E04               	movlw	high _Channels
 19617  006018  20F4               	addwfc	prodh,w,c
 19618  00601A  6EDA               	movwf	fsr2h,c
 19619  00601C  C064  FFDF         	movff	UpdateChannelIdStatus@statusNew,indf2
 19620                           
 19621                           ;lorawan_eu.c: 1047: if(Channels[channelId].status == 0)
 19622  006020  0100               	movlb	0	; () banked
 19623  006022  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19624  006024  0D0E               	mullw	14
 19625  006026  0E04               	movlw	4
 19626  006028  26F3               	addwf	prodl,f,c
 19627  00602A  0E00               	movlw	0
 19628  00602C  22F4               	addwfc	prodh,f,c
 19629  00602E  0E00               	movlw	low _Channels
 19630  006030  24F3               	addwf	prodl,w,c
 19631  006032  6ED9               	movwf	fsr2l,c
 19632  006034  0E04               	movlw	high _Channels
 19633  006036  20F4               	addwfc	prodh,w,c
 19634  006038  6EDA               	movwf	fsr2h,c
 19635  00603A  50DF               	movf	indf2,w,c
 19636  00603C  A4D8               	btfss	status,2,c
 19637  00603E  D011               	goto	l13679
 19638                           
 19639                           ; BSR set to: 0
 19640                           ;lorawan_eu.c: 1048: {
 19641                           ;lorawan_eu.c: 1050: Channels[channelId].channelTimer = 0;
 19642  006040  0100               	movlb	0	; () banked
 19643  006042  5166               	movf	UpdateChannelIdStatus@channelId& (0+255),w,b
 19644  006044  0D0E               	mullw	14
 19645  006046  0E08               	movlw	8
 19646  006048  26F3               	addwf	prodl,f,c
 19647  00604A  0E00               	movlw	0
 19648  00604C  22F4               	addwfc	prodh,f,c
 19649  00604E  0E00               	movlw	low _Channels
 19650  006050  24F3               	addwf	prodl,w,c
 19651  006052  6ED9               	movwf	fsr2l,c
 19652  006054  0E04               	movlw	high _Channels
 19653  006056  20F4               	addwfc	prodh,w,c
 19654  006058  6EDA               	movwf	fsr2h,c
 19655  00605A  6ADE               	clrf	postinc2,c
 19656  00605C  6ADE               	clrf	postinc2,c
 19657  00605E  6ADE               	clrf	postinc2,c
 19658  006060  6ADD               	clrf	postdec2,c
 19659  006062                     l13679:
 19660                           
 19661                           ; BSR set to: 0
 19662                           ;lorawan_eu.c: 1051: }
 19663                           ;lorawan_eu.c: 1053: for (i = 0; i < loRa.maxChannels; i++)
 19664  006062  0E00               	movlw	0
 19665  006064  0100               	movlb	0	; () banked
 19666  006066  6F67               	movwf	UpdateChannelIdStatus@i& (0+255),b
 19667  006068  D071               	goto	l13693
 19668  00606A                     l13681:
 19669                           
 19670                           ; BSR set to: 0
 19671                           ;lorawan_eu.c: 1054: {
 19672                           ;lorawan_eu.c: 1055: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i]
      +                          .status == 1) )
 19673  00606A  0100               	movlb	0	; () banked
 19674  00606C  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19675  00606E  0D0E               	mullw	14
 19676  006070  0E05               	movlw	5
 19677  006072  26F3               	addwf	prodl,f,c
 19678  006074  0E00               	movlw	0
 19679  006076  22F4               	addwfc	prodh,f,c
 19680  006078  0E00               	movlw	low _Channels
 19681  00607A  24F3               	addwf	prodl,w,c
 19682  00607C  6ED9               	movwf	fsr2l,c
 19683  00607E  0E04               	movlw	high _Channels
 19684  006080  20F4               	addwfc	prodh,w,c
 19685  006082  6EDA               	movwf	fsr2h,c
 19686  006084  0104               	movlb	4	; () banked
 19687  006086  50DF               	movf	223,w,c
 19688  006088  0B0F               	andlw	15
 19689  00608A  0100               	movlb	0	; () banked
 19690  00608C  6F65               	movwf	??_UpdateChannelIdStatus& (0+255),b
 19691  00608E  0102               	movlb	2	; () banked
 19692  006090  51EB               	movf	(_loRa+235)& (0+255),w,b
 19693  006092  0100               	movlb	0	; () banked
 19694  006094  5D65               	subwf	??_UpdateChannelIdStatus& (0+255),w,b
 19695  006096  B0D8               	btfsc	status,0,c
 19696  006098  D022               	goto	l1213
 19697                           
 19698                           ; BSR set to: 0
 19699  00609A  0100               	movlb	0	; () banked
 19700  00609C  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19701  00609E  0D0E               	mullw	14
 19702  0060A0  0E04               	movlw	4
 19703  0060A2  26F3               	addwf	prodl,f,c
 19704  0060A4  0E00               	movlw	0
 19705  0060A6  22F4               	addwfc	prodh,f,c
 19706  0060A8  0E00               	movlw	low _Channels
 19707  0060AA  24F3               	addwf	prodl,w,c
 19708  0060AC  6ED9               	movwf	fsr2l,c
 19709  0060AE  0E04               	movlw	high _Channels
 19710  0060B0  20F4               	addwfc	prodh,w,c
 19711  0060B2  6EDA               	movwf	fsr2h,c
 19712  0060B4  04DE               	decf	postinc2,w,c
 19713  0060B6  A4D8               	btfss	status,2,c
 19714  0060B8  D012               	goto	l1213
 19715                           
 19716                           ; BSR set to: 0
 19717                           ;lorawan_eu.c: 1056: {
 19718                           ;lorawan_eu.c: 1057: loRa.minDataRate = Channels[i].dataRange.min;
 19719  0060BA  0100               	movlb	0	; () banked
 19720  0060BC  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19721  0060BE  0D0E               	mullw	14
 19722  0060C0  0E05               	movlw	5
 19723  0060C2  26F3               	addwf	prodl,f,c
 19724  0060C4  0E00               	movlw	0
 19725  0060C6  22F4               	addwfc	prodh,f,c
 19726  0060C8  0E00               	movlw	low _Channels
 19727  0060CA  24F3               	addwf	prodl,w,c
 19728  0060CC  6ED9               	movwf	fsr2l,c
 19729  0060CE  0E04               	movlw	high _Channels
 19730  0060D0  20F4               	addwfc	prodh,w,c
 19731  0060D2  6EDA               	movwf	fsr2h,c
 19732  0060D4  0104               	movlb	4	; () banked
 19733  0060D6  50DF               	movf	223,w,c
 19734  0060D8  0B0F               	andlw	15
 19735  0060DA  0102               	movlb	2	; () banked
 19736  0060DC  6FEB               	movwf	(_loRa+235)& (0+255),b
 19737  0060DE                     l1213:
 19738                           
 19739                           ;lorawan_eu.c: 1058: }
 19740                           ;lorawan_eu.c: 1059: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i]
      +                          .status == 1) )
 19741  0060DE  0100               	movlb	0	; () banked
 19742  0060E0  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19743  0060E2  0D0E               	mullw	14
 19744  0060E4  0E05               	movlw	5
 19745  0060E6  26F3               	addwf	prodl,f,c
 19746  0060E8  0E00               	movlw	0
 19747  0060EA  22F4               	addwfc	prodh,f,c
 19748  0060EC  0E00               	movlw	low _Channels
 19749  0060EE  24F3               	addwf	prodl,w,c
 19750  0060F0  6ED9               	movwf	fsr2l,c
 19751  0060F2  0E04               	movlw	high _Channels
 19752  0060F4  20F4               	addwfc	prodh,w,c
 19753  0060F6  6EDA               	movwf	fsr2h,c
 19754  0060F8  0104               	movlb	4	; () banked
 19755  0060FA  38DF               	swapf	223,w,c
 19756  0060FC  0B0F               	andlw	15
 19757  0060FE  0102               	movlb	2	; () banked
 19758  006100  61EC               	cpfslt	(_loRa+236)& (0+255),b
 19759  006102  D022               	goto	l13691
 19760                           
 19761                           ; BSR set to: 2
 19762  006104  0100               	movlb	0	; () banked
 19763  006106  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19764  006108  0D0E               	mullw	14
 19765  00610A  0E04               	movlw	4
 19766  00610C  26F3               	addwf	prodl,f,c
 19767  00610E  0E00               	movlw	0
 19768  006110  22F4               	addwfc	prodh,f,c
 19769  006112  0E00               	movlw	low _Channels
 19770  006114  24F3               	addwf	prodl,w,c
 19771  006116  6ED9               	movwf	fsr2l,c
 19772  006118  0E04               	movlw	high _Channels
 19773  00611A  20F4               	addwfc	prodh,w,c
 19774  00611C  6EDA               	movwf	fsr2h,c
 19775  00611E  04DE               	decf	postinc2,w,c
 19776  006120  A4D8               	btfss	status,2,c
 19777  006122  D012               	goto	l13691
 19778                           
 19779                           ; BSR set to: 0
 19780                           ;lorawan_eu.c: 1060: {
 19781                           ;lorawan_eu.c: 1061: loRa.maxDataRate = Channels[i].dataRange.max;
 19782  006124  0100               	movlb	0	; () banked
 19783  006126  5167               	movf	UpdateChannelIdStatus@i& (0+255),w,b
 19784  006128  0D0E               	mullw	14
 19785  00612A  0E05               	movlw	5
 19786  00612C  26F3               	addwf	prodl,f,c
 19787  00612E  0E00               	movlw	0
 19788  006130  22F4               	addwfc	prodh,f,c
 19789  006132  0E00               	movlw	low _Channels
 19790  006134  24F3               	addwf	prodl,w,c
 19791  006136  6ED9               	movwf	fsr2l,c
 19792  006138  0E04               	movlw	high _Channels
 19793  00613A  20F4               	addwfc	prodh,w,c
 19794  00613C  6EDA               	movwf	fsr2h,c
 19795  00613E  0104               	movlb	4	; () banked
 19796  006140  38DF               	swapf	223,w,c
 19797  006142  0B0F               	andlw	15
 19798  006144  0102               	movlb	2	; () banked
 19799  006146  6FEC               	movwf	(_loRa+236)& (0+255),b
 19800  006148                     l13691:
 19801  006148  0100               	movlb	0	; () banked
 19802  00614A  2B67               	incf	UpdateChannelIdStatus@i& (0+255),f,b
 19803  00614C                     l13693:
 19804                           
 19805                           ; BSR set to: 0
 19806  00614C  0102               	movlb	2	; () banked
 19807  00614E  51ED               	movf	(_loRa+237)& (0+255),w,b
 19808  006150  0100               	movlb	0	; () banked
 19809  006152  5D67               	subwf	UpdateChannelIdStatus@i& (0+255),w,b
 19810  006154  A0D8               	btfss	status,0,c
 19811  006156  D789               	goto	l13681
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;lorawan_eu.c: 1062: }
 19815                           ;lorawan_eu.c: 1063: }
 19816                           ;lorawan_eu.c: 1065: if (loRa.currentDataRate > loRa.maxDataRate)
 19817                           
 19818                           ; BSR set to: 0
 19819  006158  0102               	movlb	2	; () banked
 19820  00615A  51DF               	movf	(_loRa+223)& (0+255),w,b
 19821  00615C  0102               	movlb	2	; () banked
 19822  00615E  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 19823  006160  A0D8               	btfss	status,0,c
 19824                           
 19825                           ; BSR set to: 2
 19826                           ;lorawan_eu.c: 1066: {
 19827                           ;lorawan_eu.c: 1067: loRa.currentDataRate = loRa.maxDataRate;
 19828  006162  C2EC  F2DF         	movff	_loRa+236,_loRa+223
 19829                           
 19830                           ; BSR set to: 2
 19831                           ;lorawan_eu.c: 1068: }
 19832                           ;lorawan_eu.c: 1070: if (loRa.currentDataRate < loRa.minDataRate)
 19833                           
 19834                           ; BSR set to: 2
 19835  006166  0102               	movlb	2	; () banked
 19836  006168  51EB               	movf	(_loRa+235)& (0+255),w,b
 19837  00616A  0102               	movlb	2	; () banked
 19838  00616C  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 19839  00616E  B0D8               	btfsc	status,0,c
 19840  006170  0012               	return	
 19841                           
 19842                           ; BSR set to: 2
 19843                           ;lorawan_eu.c: 1071: {
 19844                           ;lorawan_eu.c: 1072: loRa.currentDataRate = loRa.minDataRate;
 19845  006172  C2EB  F2DF         	movff	_loRa+235,_loRa+223
 19846  006176  0012               	return	
 19847  006178                     __end_of_UpdateChannelIdStatus:
 19848                           	opt stack 0
 19849                           tosu	equ	0xFFF
 19850                           tosh	equ	0xFFE
 19851                           tosl	equ	0xFFD
 19852                           pclath	equ	0xFFA
 19853                           tblptru	equ	0xFF8
 19854                           tblptrh	equ	0xFF7
 19855                           tblptrl	equ	0xFF6
 19856                           tablat	equ	0xFF5
 19857                           prodh	equ	0xFF4
 19858                           prodl	equ	0xFF3
 19859                           intcon	equ	0xFF2
 19860                           intcon2	equ	0xFF1
 19861                           intcon3	equ	0xFF0
 19862                           indf0	equ	0xFEF
 19863                           postinc0	equ	0xFEE
 19864                           fsr0h	equ	0xFEA
 19865                           fsr0l	equ	0xFE9
 19866                           wreg	equ	0xFE8
 19867                           postinc1	equ	0xFE6
 19868                           postdec1	equ	0xFE5
 19869                           plusw1	equ	0xFE3
 19870                           fsr1h	equ	0xFE2
 19871                           fsr1l	equ	0xFE1
 19872                           indf2	equ	0xFDF
 19873                           postinc2	equ	0xFDE
 19874                           postdec2	equ	0xFDD
 19875                           plusw2	equ	0xFDB
 19876                           fsr2h	equ	0xFDA
 19877                           fsr2l	equ	0xFD9
 19878                           status	equ	0xFD8
 19879                           
 19880 ;; *************** function _ExecuteDutyCycle *****************
 19881 ;; Defined at:
 19882 ;;		line 594 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 19883 ;; Parameters:    Size  Location     Type
 19884 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 19885 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 19886 ;; Auto vars:     Size  Location     Type
 19887 ;;  maxDCycle       1    9[BANK0 ] unsigned char 
 19888 ;; Return value:  Size  Location     Type
 19889 ;;                  2    4[BANK0 ] PTR unsigned char 
 19890 ;; Registers used:
 19891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19892 ;; Tracked objects:
 19893 ;;		On entry : 0/0
 19894 ;;		On exit  : 0/0
 19895 ;;		Unchanged: 0/0
 19896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19897 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19898 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19899 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19900 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19901 ;;Total ram usage:        6 bytes
 19902 ;; Hardware stack levels used:    1
 19903 ;; Hardware stack levels required when called:    7
 19904 ;; This function calls:
 19905 ;;		Nothing
 19906 ;; This function is called by:
 19907 ;;		_MacExecuteCommands
 19908 ;; This function uses a non-reentrant model
 19909 ;;
 19910                           
 19911                           	psect	text92
 19912  00914A                     __ptext92:
 19913                           	opt stack 0
 19914  00914A                     _ExecuteDutyCycle:
 19915                           	opt stack 18
 19916                           
 19917                           ;lorawan_eu.c: 596: uint8_t maxDCycle;
 19918                           ;lorawan_eu.c: 598: maxDCycle = *(ptr++);
 19919                           
 19920                           ; BSR set to: 2
 19921                           ;incstack = 0
 19922  00914A  C064  FFD9         	movff	ExecuteDutyCycle@ptr,fsr2l
 19923  00914E  C065  FFDA         	movff	ExecuteDutyCycle@ptr+1,fsr2h
 19924  009152  50DF               	movf	indf2,w,c
 19925  009154  0100               	movlb	0	; () banked
 19926  009156  6F69               	movwf	ExecuteDutyCycle@maxDCycle& (0+255),b
 19927                           
 19928                           ; BSR set to: 0
 19929  009158  0100               	movlb	0	; () banked
 19930  00915A  4B64               	infsnz	ExecuteDutyCycle@ptr& (0+255),f,b
 19931  00915C  2B65               	incf	(ExecuteDutyCycle@ptr+1)& (0+255),f,b
 19932                           
 19933                           ; BSR set to: 0
 19934                           ;lorawan_eu.c: 599: if (maxDCycle < 15)
 19935  00915E  0E0F               	movlw	15
 19936  009160  0100               	movlb	0	; () banked
 19937  009162  6169               	cpfslt	ExecuteDutyCycle@maxDCycle& (0+255),b
 19938  009164  D018               	goto	l1089
 19939                           
 19940                           ; BSR set to: 0
 19941                           ;lorawan_eu.c: 600: {
 19942                           ;lorawan_eu.c: 601: loRa.prescaler = 1 << maxDCycle;
 19943  009166  C069  F066         	movff	ExecuteDutyCycle@maxDCycle,??_ExecuteDutyCycle
 19944  00916A  0E01               	movlw	1
 19945  00916C  0100               	movlb	0	; () banked
 19946  00916E  6F67               	movwf	(??_ExecuteDutyCycle+1)& (0+255),b
 19947  009170  0E00               	movlw	0
 19948  009172  0100               	movlb	0	; () banked
 19949  009174  6F68               	movwf	(??_ExecuteDutyCycle+2)& (0+255),b
 19950  009176  0100               	movlb	0	; () banked
 19951  009178  2B66               	incf	??_ExecuteDutyCycle& (0+255),f,b
 19952  00917A  D004               	goto	u16914
 19953  00917C                     u16915:
 19954  00917C  90D8               	bcf	status,0,c
 19955  00917E  0100               	movlb	0	; () banked
 19956  009180  3767               	rlcf	(??_ExecuteDutyCycle+1)& (0+255),f,b
 19957  009182  3768               	rlcf	(??_ExecuteDutyCycle+2)& (0+255),f,b
 19958  009184                     u16914:
 19959  009184  0100               	movlb	0	; () banked
 19960  009186  2F66               	decfsz	??_ExecuteDutyCycle& (0+255),f,b
 19961  009188  D7F9               	goto	u16915
 19962  00918A  C067  F2DB         	movff	??_ExecuteDutyCycle+1,_loRa+219
 19963  00918E  C068  F2DC         	movff	??_ExecuteDutyCycle+2,_loRa+220
 19964                           
 19965                           ;lorawan_eu.c: 602: loRa.macStatus.prescalerModified = 1;
 19966  009192  0102               	movlb	2	; () banked
 19967  009194  8D03               	bsf	(_loRa+3)& (0+255),6,b
 19968  009196                     l1089:
 19969                           
 19970                           ;lorawan_eu.c: 603: }
 19971                           ;lorawan_eu.c: 605: if (maxDCycle == 255)
 19972  009196  0100               	movlb	0	; () banked
 19973  009198  2969               	incf	ExecuteDutyCycle@maxDCycle& (0+255),w,b
 19974  00919A  A4D8               	btfss	status,2,c
 19975  00919C  D002               	goto	l14861
 19976                           
 19977                           ; BSR set to: 0
 19978                           ;lorawan_eu.c: 606: {
 19979                           ;lorawan_eu.c: 607: loRa.macStatus.silentImmediately = 1;
 19980  00919E  0102               	movlb	2	; () banked
 19981  0091A0  8F02               	bsf	(_loRa+2)& (0+255),7,b
 19982  0091A2                     l14861:
 19983                           
 19984                           ;lorawan_eu.c: 608: }
 19985                           ;lorawan_eu.c: 610: return ptr;
 19986  0091A2  C064  F064         	movff	ExecuteDutyCycle@ptr,?_ExecuteDutyCycle
 19987  0091A6  C065  F065         	movff	ExecuteDutyCycle@ptr+1,?_ExecuteDutyCycle+1
 19988  0091AA  0012               	return	
 19989  0091AC                     __end_of_ExecuteDutyCycle:
 19990                           	opt stack 0
 19991                           tosu	equ	0xFFF
 19992                           tosh	equ	0xFFE
 19993                           tosl	equ	0xFFD
 19994                           pclath	equ	0xFFA
 19995                           tblptru	equ	0xFF8
 19996                           tblptrh	equ	0xFF7
 19997                           tblptrl	equ	0xFF6
 19998                           tablat	equ	0xFF5
 19999                           prodh	equ	0xFF4
 20000                           prodl	equ	0xFF3
 20001                           intcon	equ	0xFF2
 20002                           intcon2	equ	0xFF1
 20003                           intcon3	equ	0xFF0
 20004                           indf0	equ	0xFEF
 20005                           postinc0	equ	0xFEE
 20006                           fsr0h	equ	0xFEA
 20007                           fsr0l	equ	0xFE9
 20008                           wreg	equ	0xFE8
 20009                           postinc1	equ	0xFE6
 20010                           postdec1	equ	0xFE5
 20011                           plusw1	equ	0xFE3
 20012                           fsr1h	equ	0xFE2
 20013                           fsr1l	equ	0xFE1
 20014                           indf2	equ	0xFDF
 20015                           postinc2	equ	0xFDE
 20016                           postdec2	equ	0xFDD
 20017                           plusw2	equ	0xFDB
 20018                           fsr2h	equ	0xFDA
 20019                           fsr2l	equ	0xFD9
 20020                           status	equ	0xFD8
 20021                           
 20022 ;; *************** function _ExecuteDevStatus *****************
 20023 ;; Defined at:
 20024 ;;		line 672 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 20025 ;; Parameters:    Size  Location     Type
 20026 ;;  ptr             2    4[BANK0 ] PTR unsigned char 
 20027 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 20028 ;; Auto vars:     Size  Location     Type
 20029 ;;		None
 20030 ;; Return value:  Size  Location     Type
 20031 ;;                  2    4[BANK0 ] PTR unsigned char 
 20032 ;; Registers used:
 20033 ;;		wreg, status,2, status,0
 20034 ;; Tracked objects:
 20035 ;;		On entry : 0/0
 20036 ;;		On exit  : 0/0
 20037 ;;		Unchanged: 0/0
 20038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20043 ;;Total ram usage:        2 bytes
 20044 ;; Hardware stack levels used:    1
 20045 ;; Hardware stack levels required when called:    7
 20046 ;; This function calls:
 20047 ;;		Nothing
 20048 ;; This function is called by:
 20049 ;;		_MacExecuteCommands
 20050 ;; This function uses a non-reentrant model
 20051 ;;
 20052                           
 20053                           	psect	text93
 20054  00A3B8                     __ptext93:
 20055                           	opt stack 0
 20056  00A3B8                     _ExecuteDevStatus:
 20057                           	opt stack 18
 20058                           
 20059                           ;lorawan_eu.c: 674: return ptr;
 20060                           
 20061                           ;incstack = 0
 20062  00A3B8  C064  F064         	movff	ExecuteDevStatus@ptr,?_ExecuteDevStatus
 20063  00A3BC  C065  F065         	movff	ExecuteDevStatus@ptr+1,?_ExecuteDevStatus+1
 20064  00A3C0  0012               	return	
 20065  00A3C2                     __end_of_ExecuteDevStatus:
 20066                           	opt stack 0
 20067                           tosu	equ	0xFFF
 20068                           tosh	equ	0xFFE
 20069                           tosl	equ	0xFFD
 20070                           pclath	equ	0xFFA
 20071                           tblptru	equ	0xFF8
 20072                           tblptrh	equ	0xFF7
 20073                           tblptrl	equ	0xFF6
 20074                           tablat	equ	0xFF5
 20075                           prodh	equ	0xFF4
 20076                           prodl	equ	0xFF3
 20077                           intcon	equ	0xFF2
 20078                           intcon2	equ	0xFF1
 20079                           intcon3	equ	0xFF0
 20080                           indf0	equ	0xFEF
 20081                           postinc0	equ	0xFEE
 20082                           fsr0h	equ	0xFEA
 20083                           fsr0l	equ	0xFE9
 20084                           wreg	equ	0xFE8
 20085                           postinc1	equ	0xFE6
 20086                           postdec1	equ	0xFE5
 20087                           plusw1	equ	0xFE3
 20088                           fsr1h	equ	0xFE2
 20089                           fsr1l	equ	0xFE1
 20090                           indf2	equ	0xFDF
 20091                           postinc2	equ	0xFDE
 20092                           postdec2	equ	0xFDD
 20093                           plusw2	equ	0xFDB
 20094                           fsr2h	equ	0xFDA
 20095                           fsr2l	equ	0xFD9
 20096                           status	equ	0xFD8
 20097                           
 20098 ;; *************** function _LORAWAN_Send *****************
 20099 ;; Defined at:
 20100 ;;		line 185 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20101 ;; Parameters:    Size  Location     Type
 20102 ;;  confirmed       1    wreg     enum E7984
 20103 ;;  port            1  135[BANK0 ] unsigned char 
 20104 ;;  buffer          2  136[BANK0 ] PTR void 
 20105 ;;		 -> payload(2), NULL(0), 
 20106 ;;  bufferLength    1  138[BANK0 ] unsigned char 
 20107 ;; Auto vars:     Size  Location     Type
 20108 ;;  confirmed       1  141[BANK0 ] enum E7984
 20109 ;;  result          1  140[BANK0 ] enum E7957
 20110 ;; Return value:  Size  Location     Type
 20111 ;;                  1    wreg      enum E7957
 20112 ;; Registers used:
 20113 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20114 ;; Tracked objects:
 20115 ;;		On entry : 0/0
 20116 ;;		On exit  : 0/0
 20117 ;;		Unchanged: 0/0
 20118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20119 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20120 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20121 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20122 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20123 ;;Total ram usage:        7 bytes
 20124 ;; Hardware stack levels used:    1
 20125 ;; Hardware stack levels required when called:   13
 20126 ;; This function calls:
 20127 ;;		_AssemblePacket
 20128 ;;		_LORAWAN_GetMaxPayloadSize
 20129 ;;		_RADIO_ReceiveStop
 20130 ;;		_RADIO_Transmit
 20131 ;;		_SelectChannelForTransmission
 20132 ;; This function is called by:
 20133 ;;		_AutomaticReplyCallback
 20134 ;;		_LORAWAN_RxDone
 20135 ;;		_readAndSend
 20136 ;; This function uses a non-reentrant model
 20137 ;;
 20138                           
 20139                           	psect	text94
 20140  0077C2                     __ptext94:
 20141                           	opt stack 0
 20142  0077C2                     _LORAWAN_Send:
 20143                           	opt stack 16
 20144                           
 20145                           ;incstack = 0
 20146                           ;LORAWAN_Send@confirmed stored from wreg
 20147  0077C2  0100               	movlb	0	; () banked
 20148  0077C4  6FED               	movwf	LORAWAN_Send@confirmed& (0+255),b
 20149                           
 20150                           ;lorawan.c: 187: LorawanError_t result;
 20151                           ;lorawan.c: 189: if (loRa.macStatus.macPause == 1)
 20152  0077C6  0102               	movlb	2	; () banked
 20153  0077C8  B103               	btfsc	(_loRa+3)& (0+255),0,b
 20154  0077CA  0012               	return	
 20155                           
 20156                           ; BSR set to: 2
 20157                           ;lorawan.c: 192: }
 20158                           ;lorawan.c: 194: if (loRa.macStatus.silentImmediately == 1)
 20159                           
 20160                           ; BSR set to: 2
 20161                           ;lorawan.c: 190: {
 20162                           ;lorawan.c: 191: return MAC_PAUSED;
 20163                           ;	Return value of _LORAWAN_Send is never used
 20164  0077CC  0102               	movlb	2	; () banked
 20165  0077CE  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 20166  0077D0  0012               	return	
 20167                           
 20168                           ; BSR set to: 2
 20169                           ;lorawan.c: 197: }
 20170                           ;lorawan.c: 199: if (loRa.macStatus.networkJoined == 0)
 20171                           
 20172                           ; BSR set to: 2
 20173                           ;lorawan.c: 195: {
 20174                           ;lorawan.c: 196: return SILENT_IMMEDIATELY_ACTIVE;
 20175                           ;	Return value of _LORAWAN_Send is never used
 20176  0077D2  0102               	movlb	2	; () banked
 20177  0077D4  A902               	btfss	(_loRa+2)& (0+255),4,b
 20178  0077D6  0012               	return	
 20179                           
 20180                           ; BSR set to: 2
 20181                           ;lorawan.c: 202: }
 20182                           ;lorawan.c: 204: if ( (port < 1) && (bufferLength != 0) )
 20183                           
 20184                           ; BSR set to: 2
 20185                           
 20186                           ; BSR set to: 2
 20187                           ;lorawan.c: 200: {
 20188                           ;lorawan.c: 201: return NETWORK_NOT_JOINED;
 20189                           ;	Return value of _LORAWAN_Send is never used
 20190  0077D8  0100               	movlb	0	; () banked
 20191  0077DA  51E7               	movf	LORAWAN_Send@port& (0+255),w,b
 20192  0077DC  0100               	movlb	0	; () banked
 20193  0077DE  A4D8               	btfss	status,2,c
 20194  0077E0  D005               	goto	l15321
 20195                           
 20196                           ; BSR set to: 0
 20197  0077E2  0100               	movlb	0	; () banked
 20198  0077E4  51EA               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20199  0077E6  0100               	movlb	0	; () banked
 20200  0077E8  A4D8               	btfss	status,2,c
 20201  0077EA  0012               	return	
 20202  0077EC                     l15321:
 20203                           
 20204                           ; BSR set to: 0
 20205                           ;lorawan.c: 207: }
 20206                           ;lorawan.c: 210: if (bufferLength > LORAWAN_GetMaxPayloadSize ())
 20207  0077EC  ECD8  F047         	call	_LORAWAN_GetMaxPayloadSize	;wreg free
 20208  0077F0  0100               	movlb	0	; () banked
 20209  0077F2  6FEB               	movwf	??_LORAWAN_Send& (0+255),b
 20210  0077F4  0100               	movlb	0	; () banked
 20211  0077F6  51EA               	movf	LORAWAN_Send@bufferLength& (0+255),w,b
 20212  0077F8  0100               	movlb	0	; () banked
 20213  0077FA  5DEB               	subwf	??_LORAWAN_Send& (0+255),w,b
 20214  0077FC  A0D8               	btfss	status,0,c
 20215  0077FE  0012               	return	
 20216                           
 20217                           ; BSR set to: 0
 20218                           ;lorawan.c: 213: }
 20219                           ;lorawan.c: 215: if (loRa.fCntUp.value == (4294967295UL))
 20220                           
 20221                           ; BSR set to: 0
 20222                           
 20223                           ; BSR set to: 0
 20224                           ;lorawan.c: 211: {
 20225                           ;lorawan.c: 212: return INVALID_BUFFER_LENGTH;
 20226                           ;	Return value of _LORAWAN_Send is never used
 20227  007800  0102               	movlb	2	; () banked
 20228  007802  2906               	incf	(_loRa+6)& (0+255),w,b
 20229  007804  E10D               	bnz	l15329
 20230  007806  0102               	movlb	2	; () banked
 20231  007808  2907               	incf	(_loRa+7)& (0+255),w,b
 20232  00780A  E10A               	bnz	l15329
 20233  00780C  0102               	movlb	2	; () banked
 20234  00780E  2908               	incf	(_loRa+8)& (0+255),w,b
 20235  007810  E107               	bnz	l15329
 20236  007812  0102               	movlb	2	; () banked
 20237  007814  2909               	incf	(_loRa+9)& (0+255),w,b
 20238  007816  A4D8               	btfss	status,2,c
 20239  007818  D003               	goto	l15329
 20240                           
 20241                           ; BSR set to: 2
 20242                           ;lorawan.c: 216: {
 20243                           ;lorawan.c: 218: loRa.macStatus.rejoinNeeded = 1;
 20244  00781A  0102               	movlb	2	; () banked
 20245  00781C  8304               	bsf	(_loRa+4)& (0+255),1,b
 20246                           
 20247                           ;lorawan.c: 219: return FRAME_COUNTER_ERROR_REJOIN_NEEDED;
 20248                           ;	Return value of _LORAWAN_Send is never used
 20249  00781E  0012               	return	
 20250  007820                     l15329:
 20251                           
 20252                           ; BSR set to: 2
 20253                           ;lorawan.c: 220: }
 20254                           ;lorawan.c: 222: if ((loRa.macStatus.macState != IDLE) && (CLASS_A == loRa.deviceClass))
 20255  007820  0102               	movlb	2	; () banked
 20256  007822  5102               	movf	(_loRa+2)& (0+255),w,b
 20257  007824  0B0F               	andlw	15
 20258  007826  0900               	iorlw	0
 20259  007828  B4D8               	btfsc	status,2,c
 20260  00782A  D004               	goto	l15335
 20261                           
 20262                           ; BSR set to: 2
 20263  00782C  0102               	movlb	2	; () banked
 20264  00782E  5112               	movf	(_loRa+18)& (0+255),w,b
 20265  007830  B4D8               	btfsc	status,2,c
 20266  007832  0012               	return	
 20267  007834                     l15335:
 20268                           
 20269                           ; BSR set to: 2
 20270                           ;lorawan.c: 225: }
 20271                           ;lorawan.c: 227: result = SelectChannelForTransmission (1);
 20272  007834  0E01               	movlw	1
 20273  007836  EC84  F046         	call	_SelectChannelForTransmission
 20274  00783A  0100               	movlb	0	; () banked
 20275  00783C  6FEC               	movwf	LORAWAN_Send@result& (0+255),b
 20276                           
 20277                           ; BSR set to: 0
 20278                           ;lorawan.c: 228: if (result != OK)
 20279  00783E  0100               	movlb	0	; () banked
 20280  007840  51EC               	movf	LORAWAN_Send@result& (0+255),w,b
 20281  007842  0100               	movlb	0	; () banked
 20282  007844  A4D8               	btfss	status,2,c
 20283  007846  0012               	return	
 20284                           
 20285                           ; BSR set to: 0
 20286                           ;lorawan.c: 232: else
 20287                           ;lorawan.c: 233: {
 20288                           ;lorawan.c: 234: if (CLASS_C == loRa.deviceClass)
 20289                           
 20290                           ; BSR set to: 0
 20291                           
 20292                           ; BSR set to: 0
 20293                           ;lorawan.c: 231: }
 20294                           
 20295                           ; BSR set to: 0
 20296                           ;lorawan.c: 229: {
 20297                           ;lorawan.c: 230: return result;
 20298                           ;	Return value of _LORAWAN_Send is never used
 20299  007848  0E02               	movlw	2
 20300  00784A  0102               	movlb	2	; () banked
 20301  00784C  1912               	xorwf	(_loRa+18)& (0+255),w,b
 20302  00784E  B4D8               	btfsc	status,2,c
 20303                           
 20304                           ; BSR set to: 2
 20305                           ;lorawan.c: 235: {
 20306                           ;lorawan.c: 236: RADIO_ReceiveStop();
 20307  007850  EC26  F050         	call	_RADIO_ReceiveStop	;wreg free
 20308                           
 20309                           ;lorawan.c: 237: }
 20310                           ;lorawan.c: 239: AssemblePacket (confirmed, port, buffer, bufferLength);
 20311  007854  C0E7  F0DB         	movff	LORAWAN_Send@port,AssemblePacket@port
 20312  007858  C0E8  F0DC         	movff	LORAWAN_Send@buffer,AssemblePacket@buffer
 20313  00785C  C0E9  F0DD         	movff	LORAWAN_Send@buffer+1,AssemblePacket@buffer+1
 20314  007860  C0EA  F0DE         	movff	LORAWAN_Send@bufferLength,AssemblePacket@bufferLength
 20315  007864  0100               	movlb	0	; () banked
 20316  007866  6BDF               	clrf	(AssemblePacket@bufferLength+1)& (0+255),b
 20317  007868  0100               	movlb	0	; () banked
 20318  00786A  51ED               	movf	LORAWAN_Send@confirmed& (0+255),w,b
 20319  00786C  ECDE  F013         	call	_AssemblePacket
 20320                           
 20321                           ;lorawan.c: 241: if (RADIO_Transmit (&macBuffer[16], loRa.lastPacketLength) == OK)
 20322  007870  0EF0               	movlw	low (_macBuffer+16)
 20323  007872  0100               	movlb	0	; () banked
 20324  007874  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 20325  007876  0E04               	movlw	high (_macBuffer+16)
 20326  007878  0100               	movlb	0	; () banked
 20327  00787A  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 20328  00787C  C2D4  F0B7         	movff	_loRa+212,RADIO_Transmit@bufferLen
 20329  007880  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 20330  007884  0100               	movlb	0	; () banked
 20331  007886  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 20332  007888  0100               	movlb	0	; () banked
 20333  00788A  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 20334  00788C  A4D8               	btfss	status,2,c
 20335  00788E  0012               	return	
 20336                           
 20337                           ; BSR set to: 0
 20338                           ;lorawan.c: 242: {
 20339                           ;lorawan.c: 243: loRa.fCntUp.value ++;
 20340  007890  0E01               	movlw	1
 20341  007892  0102               	movlb	2	; () banked
 20342  007894  2706               	addwf	(_loRa+6)& (0+255),f,b
 20343  007896  0E00               	movlw	0
 20344  007898  2307               	addwfc	(_loRa+7)& (0+255),f,b
 20345  00789A  2308               	addwfc	(_loRa+8)& (0+255),f,b
 20346  00789C  2309               	addwfc	(_loRa+9)& (0+255),f,b
 20347                           
 20348                           ;lorawan.c: 245: if (CNF == confirmed)
 20349  00789E  0100               	movlb	0	; () banked
 20350  0078A0  05ED               	decf	LORAWAN_Send@confirmed& (0+255),w,b
 20351  0078A2  A4D8               	btfss	status,2,c
 20352  0078A4  D002               	goto	l1694
 20353                           
 20354                           ; BSR set to: 0
 20355                           ;lorawan.c: 246: {
 20356                           ;lorawan.c: 247: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 20357  0078A6  0102               	movlb	2	; () banked
 20358  0078A8  8100               	bsf	_loRa& (0+255),0,b
 20359  0078AA                     l1694:
 20360                           
 20361                           ;lorawan.c: 248: }
 20362                           ;lorawan.c: 249: loRa.lorawanMacStatus.synchronization = 1;
 20363  0078AA  0102               	movlb	2	; () banked
 20364  0078AC  8B00               	bsf	_loRa& (0+255),5,b
 20365                           
 20366                           ; BSR set to: 2
 20367                           ;lorawan.c: 250: loRa.macStatus.macState = TRANSMISSION_OCCURRING;
 20368  0078AE  0102               	movlb	2	; () banked
 20369  0078B0  5102               	movf	(_loRa+2)& (0+255),w,b
 20370  0078B2  0BF0               	andlw	-16
 20371  0078B4  0901               	iorlw	1
 20372  0078B6  6F02               	movwf	(_loRa+2)& (0+255),b
 20373                           
 20374                           ; BSR set to: 2
 20375                           
 20376                           ; BSR set to: 2
 20377                           ;lorawan.c: 252: else
 20378                           ;lorawan.c: 253: {
 20379                           ;lorawan.c: 254: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 20380                           ;	Return value of _LORAWAN_Send is never used
 20381                           
 20382                           ;lorawan.c: 251: }
 20383  0078B8  0012               	return	
 20384  0078BA                     __end_of_LORAWAN_Send:
 20385                           	opt stack 0
 20386                           tosu	equ	0xFFF
 20387                           tosh	equ	0xFFE
 20388                           tosl	equ	0xFFD
 20389                           pclath	equ	0xFFA
 20390                           tblptru	equ	0xFF8
 20391                           tblptrh	equ	0xFF7
 20392                           tblptrl	equ	0xFF6
 20393                           tablat	equ	0xFF5
 20394                           prodh	equ	0xFF4
 20395                           prodl	equ	0xFF3
 20396                           intcon	equ	0xFF2
 20397                           intcon2	equ	0xFF1
 20398                           intcon3	equ	0xFF0
 20399                           indf0	equ	0xFEF
 20400                           postinc0	equ	0xFEE
 20401                           fsr0h	equ	0xFEA
 20402                           fsr0l	equ	0xFE9
 20403                           wreg	equ	0xFE8
 20404                           postinc1	equ	0xFE6
 20405                           postdec1	equ	0xFE5
 20406                           plusw1	equ	0xFE3
 20407                           fsr1h	equ	0xFE2
 20408                           fsr1l	equ	0xFE1
 20409                           indf2	equ	0xFDF
 20410                           postinc2	equ	0xFDE
 20411                           postdec2	equ	0xFDD
 20412                           plusw2	equ	0xFDB
 20413                           fsr2h	equ	0xFDA
 20414                           fsr2l	equ	0xFD9
 20415                           status	equ	0xFD8
 20416                           
 20417 ;; *************** function _LORAWAN_GetMaxPayloadSize *****************
 20418 ;; Defined at:
 20419 ;;		line 1556 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20420 ;; Parameters:    Size  Location     Type
 20421 ;;		None
 20422 ;; Auto vars:     Size  Location     Type
 20423 ;;  result          1   14[BANK0 ] unsigned char 
 20424 ;;  macCommandsL    1   13[BANK0 ] unsigned char 
 20425 ;; Return value:  Size  Location     Type
 20426 ;;                  1    wreg      unsigned char 
 20427 ;; Registers used:
 20428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20429 ;; Tracked objects:
 20430 ;;		On entry : 0/0
 20431 ;;		On exit  : 0/0
 20432 ;;		Unchanged: 0/0
 20433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20435 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20436 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20437 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20438 ;;Total ram usage:        3 bytes
 20439 ;; Hardware stack levels used:    1
 20440 ;; Hardware stack levels required when called:    8
 20441 ;; This function calls:
 20442 ;;		_CountfOptsLength
 20443 ;; This function is called by:
 20444 ;;		_LORAWAN_Send
 20445 ;;		_AckRetransmissionCallback
 20446 ;; This function uses a non-reentrant model
 20447 ;;
 20448                           
 20449                           	psect	text95
 20450  008FB0                     __ptext95:
 20451                           	opt stack 0
 20452  008FB0                     _LORAWAN_GetMaxPayloadSize:
 20453                           	opt stack 20
 20454                           
 20455                           ;lorawan.c: 1558: uint8_t result = 0;
 20456                           
 20457                           ;incstack = 0
 20458  008FB0  0E00               	movlw	0
 20459  008FB2  0100               	movlb	0	; () banked
 20460  008FB4  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;lorawan.c: 1559: uint8_t macCommandsLength;
 20464                           ;lorawan.c: 1561: macCommandsLength = CountfOptsLength();
 20465  008FB6  ECE3  F039         	call	_CountfOptsLength	;wreg free
 20466  008FBA  0100               	movlb	0	; () banked
 20467  008FBC  6F6D               	movwf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),b
 20468                           
 20469                           ; BSR set to: 0
 20470                           ;lorawan.c: 1563: if (loRa.crtMacCmdIndex == 0)
 20471  008FBE  0102               	movlb	2	; () banked
 20472  008FC0  51A7               	movf	(_loRa+167)& (0+255),w,b
 20473  008FC2  A4D8               	btfss	status,2,c
 20474  008FC4  D010               	goto	l15023
 20475                           
 20476                           ; BSR set to: 2
 20477                           ;lorawan.c: 1564: {
 20478                           ;lorawan.c: 1565: result = maxPayloadSize[loRa.currentDataRate];
 20479  008FC6  0102               	movlb	2	; () banked
 20480  008FC8  51DF               	movf	(_loRa+223)& (0+255),w,b
 20481  008FCA  0D01               	mullw	1
 20482  008FCC  0E67               	movlw	low _maxPayloadSize
 20483  008FCE  24F3               	addwf	prodl,w,c
 20484  008FD0  6EF6               	movwf	tblptrl,c
 20485  008FD2  0EFF               	movlw	high _maxPayloadSize
 20486  008FD4  20F4               	addwfc	prodh,w,c
 20487  008FD6  6EF7               	movwf	tblptrh,c
 20488  008FD8                     	if	1	;There are 3 active tblptr bytes
 20489  008FD8  6AF8               	clrf	tblptru,c
 20490  008FDA  0E00               	movlw	low (__mediumconst shr (0+16))
 20491  008FDC  22F8               	addwfc	tblptru,f,c
 20492  008FDE                     	endif
 20493  008FDE  0008               	tblrd		*
 20494  008FE0  CFF5 F06E          	movff	tablat,LORAWAN_GetMaxPayloadSize@result
 20495                           
 20496                           ;lorawan.c: 1566: }
 20497  008FE4  D016               	goto	l15025
 20498  008FE6                     l15023:
 20499                           
 20500                           ; BSR set to: 2
 20501                           ;lorawan.c: 1567: else
 20502                           ;lorawan.c: 1568: {
 20503                           ;lorawan.c: 1569: result = maxPayloadSize[loRa.currentDataRate] - macCommandsLength ;
 20504  008FE6  0102               	movlb	2	; () banked
 20505  008FE8  51DF               	movf	(_loRa+223)& (0+255),w,b
 20506  008FEA  0D01               	mullw	1
 20507  008FEC  0E67               	movlw	low _maxPayloadSize
 20508  008FEE  24F3               	addwf	prodl,w,c
 20509  008FF0  6EF6               	movwf	tblptrl,c
 20510  008FF2  0EFF               	movlw	high _maxPayloadSize
 20511  008FF4  20F4               	addwfc	prodh,w,c
 20512  008FF6  6EF7               	movwf	tblptrh,c
 20513  008FF8                     	if	1	;There are 3 active tblptr bytes
 20514  008FF8  6AF8               	clrf	tblptru,c
 20515  008FFA  0E00               	movlw	low (__mediumconst shr (0+16))
 20516  008FFC  22F8               	addwfc	tblptru,f,c
 20517  008FFE                     	endif
 20518  008FFE  0008               	tblrd		*
 20519  009000  CFF5 F06C          	movff	tablat,??_LORAWAN_GetMaxPayloadSize
 20520  009004  0100               	movlb	0	; () banked
 20521  009006  516D               	movf	LORAWAN_GetMaxPayloadSize@macCommandsLength& (0+255),w,b
 20522  009008  0800               	sublw	0
 20523  00900A  0100               	movlb	0	; () banked
 20524  00900C  256C               	addwf	??_LORAWAN_GetMaxPayloadSize& (0+255),w,b
 20525  00900E  0100               	movlb	0	; () banked
 20526  009010  6F6E               	movwf	LORAWAN_GetMaxPayloadSize@result& (0+255),b
 20527  009012                     l15025:
 20528                           
 20529                           ;lorawan.c: 1570: }
 20530                           ;lorawan.c: 1572: return result;
 20531  009012  0100               	movlb	0	; () banked
 20532  009014  516E               	movf	LORAWAN_GetMaxPayloadSize@result& (0+255),w,b
 20533  009016  0012               	return	
 20534  009018                     __end_of_LORAWAN_GetMaxPayloadSize:
 20535                           	opt stack 0
 20536                           tosu	equ	0xFFF
 20537                           tosh	equ	0xFFE
 20538                           tosl	equ	0xFFD
 20539                           pclath	equ	0xFFA
 20540                           tblptru	equ	0xFF8
 20541                           tblptrh	equ	0xFF7
 20542                           tblptrl	equ	0xFF6
 20543                           tablat	equ	0xFF5
 20544                           prodh	equ	0xFF4
 20545                           prodl	equ	0xFF3
 20546                           intcon	equ	0xFF2
 20547                           intcon2	equ	0xFF1
 20548                           intcon3	equ	0xFF0
 20549                           indf0	equ	0xFEF
 20550                           postinc0	equ	0xFEE
 20551                           fsr0h	equ	0xFEA
 20552                           fsr0l	equ	0xFE9
 20553                           wreg	equ	0xFE8
 20554                           postinc1	equ	0xFE6
 20555                           postdec1	equ	0xFE5
 20556                           plusw1	equ	0xFE3
 20557                           fsr1h	equ	0xFE2
 20558                           fsr1l	equ	0xFE1
 20559                           indf2	equ	0xFDF
 20560                           postinc2	equ	0xFDE
 20561                           postdec2	equ	0xFDD
 20562                           plusw2	equ	0xFDB
 20563                           fsr2h	equ	0xFDA
 20564                           fsr2l	equ	0xFD9
 20565                           status	equ	0xFD8
 20566                           
 20567 ;; *************** function _AssemblePacket *****************
 20568 ;; Defined at:
 20569 ;;		line 1672 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 20570 ;; Parameters:    Size  Location     Type
 20571 ;;  confirmed       1    wreg     unsigned char 
 20572 ;;  port            1  123[BANK0 ] unsigned char 
 20573 ;;  buffer          2  124[BANK0 ] PTR unsigned char 
 20574 ;;		 -> payload(2), NULL(0), 
 20575 ;;  bufferLength    2  126[BANK0 ] unsigned int 
 20576 ;; Auto vars:     Size  Location     Type
 20577 ;;  confirmed       1  130[BANK0 ] unsigned char 
 20578 ;;  bufferIndex     1  134[BANK0 ] unsigned char 
 20579 ;;  macCmdIdx       1  133[BANK0 ] unsigned char 
 20580 ;;  fCtrl           1  132[BANK0 ] struct .
 20581 ;;  mhdr            1  131[BANK0 ] struct .
 20582 ;; Return value:  Size  Location     Type
 20583 ;;                  1    wreg      void 
 20584 ;; Registers used:
 20585 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20586 ;; Tracked objects:
 20587 ;;		On entry : 0/0
 20588 ;;		On exit  : 0/0
 20589 ;;		Unchanged: 0/0
 20590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20591 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20592 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20593 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20594 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20595 ;;Total ram usage:       12 bytes
 20596 ;; Hardware stack levels used:    1
 20597 ;; Hardware stack levels required when called:   12
 20598 ;; This function calls:
 20599 ;;		_AESCmac
 20600 ;;		_AssembleEncryptionBlock
 20601 ;;		_CountfOptsLength
 20602 ;;		_EncryptFRMPayload
 20603 ;;		_FindSmallestDataRate
 20604 ;;		_IncludeMacCommandsResponse
 20605 ;;		_memcpy
 20606 ;;		_memset
 20607 ;; This function is called by:
 20608 ;;		_LORAWAN_Send
 20609 ;; This function uses a non-reentrant model
 20610 ;;
 20611                           
 20612                           	psect	text96
 20613  0027BC                     __ptext96:
 20614                           	opt stack 0
 20615  0027BC                     _AssemblePacket:
 20616                           	opt stack 16
 20617                           
 20618                           ; BSR set to: 0
 20619                           ;incstack = 0
 20620                           ;AssemblePacket@confirmed stored from wreg
 20621  0027BC  0100               	movlb	0	; () banked
 20622  0027BE  6FE2               	movwf	AssemblePacket@confirmed& (0+255),b
 20623                           
 20624                           ;lorawan.c: 1674: Mhdr_t mhdr;
 20625                           ;lorawan.c: 1675: uint8_t bufferIndex = 16;
 20626  0027C0  0E10               	movlw	16
 20627  0027C2  0100               	movlb	0	; () banked
 20628  0027C4  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20629                           
 20630                           ;lorawan.c: 1676: FCtrl_t fCtrl;
 20631                           ;lorawan.c: 1677: uint8_t macCmdIdx = 0;
 20632  0027C6  0E00               	movlw	0
 20633  0027C8  0100               	movlb	0	; () banked
 20634  0027CA  6FE5               	movwf	AssemblePacket@macCmdIdx& (0+255),b
 20635                           
 20636                           ; BSR set to: 0
 20637                           ;lorawan.c: 1679: memset (&mhdr, 0, sizeof (mhdr) );
 20638  0027CC  0EE3               	movlw	low AssemblePacket@mhdr
 20639  0027CE  0100               	movlb	0	; () banked
 20640  0027D0  6F64               	movwf	memset@p1& (0+255),b
 20641  0027D2  0E00               	movlw	high AssemblePacket@mhdr
 20642  0027D4  0100               	movlb	0	; () banked
 20643  0027D6  6F65               	movwf	(memset@p1+1)& (0+255),b
 20644  0027D8  0E00               	movlw	0
 20645  0027DA  0100               	movlb	0	; () banked
 20646  0027DC  6F67               	movwf	(memset@c+1)& (0+255),b
 20647  0027DE  0E00               	movlw	0
 20648  0027E0  6F66               	movwf	memset@c& (0+255),b
 20649  0027E2  0E00               	movlw	0
 20650  0027E4  0100               	movlb	0	; () banked
 20651  0027E6  6F69               	movwf	(memset@n+1)& (0+255),b
 20652  0027E8  0E01               	movlw	1
 20653  0027EA  6F68               	movwf	memset@n& (0+255),b
 20654  0027EC  EC0B  F04E         	call	_memset	;wreg free
 20655                           
 20656                           ;lorawan.c: 1680: memset (&macBuffer[0], 0, sizeof (macBuffer) );
 20657  0027F0  0EE0               	movlw	low _macBuffer
 20658  0027F2  0100               	movlb	0	; () banked
 20659  0027F4  6F64               	movwf	memset@p1& (0+255),b
 20660  0027F6  0E04               	movlw	high _macBuffer
 20661  0027F8  0100               	movlb	0	; () banked
 20662  0027FA  6F65               	movwf	(memset@p1+1)& (0+255),b
 20663  0027FC  0E00               	movlw	0
 20664  0027FE  0100               	movlb	0	; () banked
 20665  002800  6F67               	movwf	(memset@c+1)& (0+255),b
 20666  002802  0E00               	movlw	0
 20667  002804  6F66               	movwf	memset@c& (0+255),b
 20668  002806  0E01               	movlw	1
 20669  002808  0100               	movlb	0	; () banked
 20670  00280A  6F69               	movwf	(memset@n+1)& (0+255),b
 20671  00280C  0E0F               	movlw	15
 20672  00280E  6F68               	movwf	memset@n& (0+255),b
 20673  002810  EC0B  F04E         	call	_memset	;wreg free
 20674                           
 20675                           ;lorawan.c: 1681: memset (aesBuffer, 0, sizeof (aesBuffer) );
 20676  002814  0EC2               	movlw	low _aesBuffer
 20677  002816  0100               	movlb	0	; () banked
 20678  002818  6F64               	movwf	memset@p1& (0+255),b
 20679  00281A  0E01               	movlw	high _aesBuffer
 20680  00281C  0100               	movlb	0	; () banked
 20681  00281E  6F65               	movwf	(memset@p1+1)& (0+255),b
 20682  002820  0E00               	movlw	0
 20683  002822  0100               	movlb	0	; () banked
 20684  002824  6F67               	movwf	(memset@c+1)& (0+255),b
 20685  002826  0E00               	movlw	0
 20686  002828  6F66               	movwf	memset@c& (0+255),b
 20687  00282A  0E00               	movlw	0
 20688  00282C  0100               	movlb	0	; () banked
 20689  00282E  6F69               	movwf	(memset@n+1)& (0+255),b
 20690  002830  0E10               	movlw	16
 20691  002832  6F68               	movwf	memset@n& (0+255),b
 20692  002834  EC0B  F04E         	call	_memset	;wreg free
 20693                           
 20694                           ;lorawan.c: 1683: if (confirmed == 1)
 20695  002838  0100               	movlb	0	; () banked
 20696  00283A  05E2               	decf	AssemblePacket@confirmed& (0+255),w,b
 20697  00283C  A4D8               	btfss	status,2,c
 20698  00283E  D008               	goto	l15043
 20699                           
 20700                           ; BSR set to: 0
 20701                           ;lorawan.c: 1684: {
 20702                           ;lorawan.c: 1685: mhdr.bits.mType = FRAME_TYPE_DATA_CONFIRMED_UP;
 20703  002840  0100               	movlb	0	; () banked
 20704  002842  51E3               	movf	AssemblePacket@mhdr& (0+255),w,b
 20705  002844  0B1F               	andlw	-225
 20706  002846  0980               	iorlw	128
 20707  002848  6FE3               	movwf	AssemblePacket@mhdr& (0+255),b
 20708                           
 20709                           ; BSR set to: 0
 20710                           ;lorawan.c: 1686: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 1;
 20711  00284A  0102               	movlb	2	; () banked
 20712  00284C  8100               	bsf	_loRa& (0+255),0,b
 20713                           
 20714                           ;lorawan.c: 1687: }
 20715  00284E  D005               	goto	l2179
 20716  002850                     l15043:
 20717                           
 20718                           ;lorawan.c: 1688: else
 20719                           ;lorawan.c: 1689: {
 20720                           ;lorawan.c: 1690: mhdr.bits.mType = FRAME_TYPE_DATA_UNCONFIRMED_UP;
 20721  002850  0100               	movlb	0	; () banked
 20722  002852  51E3               	movf	AssemblePacket@mhdr& (0+255),w,b
 20723  002854  0B1F               	andlw	-225
 20724  002856  0940               	iorlw	64
 20725  002858  6FE3               	movwf	AssemblePacket@mhdr& (0+255),b
 20726  00285A                     l2179:
 20727                           
 20728                           ;lorawan.c: 1691: }
 20729                           ;lorawan.c: 1692: mhdr.bits.major = 0;
 20730  00285A  0EFC               	movlw	-4
 20731  00285C  0100               	movlb	0	; () banked
 20732  00285E  17E3               	andwf	AssemblePacket@mhdr& (0+255),f,b
 20733                           
 20734                           ; BSR set to: 0
 20735                           ;lorawan.c: 1693: mhdr.bits.rfu = 0;
 20736  002860  0100               	movlb	0	; () banked
 20737  002862  95E3               	bcf	AssemblePacket@mhdr& (0+255),2,b
 20738  002864  97E3               	bcf	AssemblePacket@mhdr& (0+255),3,b
 20739  002866  99E3               	bcf	AssemblePacket@mhdr& (0+255),4,b
 20740                           
 20741                           ; BSR set to: 0
 20742                           ;lorawan.c: 1694: macBuffer[bufferIndex++] = mhdr.value;
 20743  002868  0100               	movlb	0	; () banked
 20744  00286A  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20745  00286C  0D01               	mullw	1
 20746  00286E  0EE0               	movlw	low _macBuffer
 20747  002870  24F3               	addwf	prodl,w,c
 20748  002872  6ED9               	movwf	fsr2l,c
 20749  002874  0E04               	movlw	high _macBuffer
 20750  002876  20F4               	addwfc	prodh,w,c
 20751  002878  6EDA               	movwf	fsr2h,c
 20752  00287A  C0E3  FFDF         	movff	AssemblePacket@mhdr,indf2
 20753                           
 20754                           ; BSR set to: 0
 20755  00287E  0100               	movlb	0	; () banked
 20756  002880  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 20757                           
 20758                           ; BSR set to: 0
 20759                           ;lorawan.c: 1696: memcpy (&macBuffer[bufferIndex], loRa.activationParameters.deviceAddre
      +                          ss.buffer, sizeof (loRa.activationParameters.deviceAddress.buffer) );
 20760  002882  0100               	movlb	0	; () banked
 20761  002884  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20762  002886  0D01               	mullw	1
 20763  002888  0EE0               	movlw	low _macBuffer
 20764  00288A  24F3               	addwf	prodl,w,c
 20765  00288C  0100               	movlb	0	; () banked
 20766  00288E  6F64               	movwf	memcpy@d1& (0+255),b
 20767  002890  0E04               	movlw	high _macBuffer
 20768  002892  20F4               	addwfc	prodh,w,c
 20769  002894  0100               	movlb	0	; () banked
 20770  002896  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 20771  002898  0E1E               	movlw	low (_loRa+30)
 20772  00289A  0100               	movlb	0	; () banked
 20773  00289C  6F66               	movwf	memcpy@s1& (0+255),b
 20774  00289E  0E02               	movlw	high (_loRa+30)
 20775  0028A0  0100               	movlb	0	; () banked
 20776  0028A2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 20777  0028A4  0E00               	movlw	0
 20778  0028A6  0100               	movlb	0	; () banked
 20779  0028A8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 20780  0028AA  0E04               	movlw	4
 20781  0028AC  6F68               	movwf	memcpy@n& (0+255),b
 20782  0028AE  EC07  F049         	call	_memcpy	;wreg free
 20783                           
 20784                           ;lorawan.c: 1697: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.deviceAdd
      +                          ress.buffer);
 20785  0028B2  0100               	movlb	0	; () banked
 20786  0028B4  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 20787  0028B6  0F04               	addlw	4
 20788  0028B8  0100               	movlb	0	; () banked
 20789  0028BA  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 20790                           
 20791                           ; BSR set to: 0
 20792                           ;lorawan.c: 1699: fCtrl.value = 0;
 20793  0028BC  0E00               	movlw	0
 20794  0028BE  0100               	movlb	0	; () banked
 20795  0028C0  6FE4               	movwf	AssemblePacket@fCtrl& (0+255),b
 20796                           
 20797                           ; BSR set to: 0
 20798                           ;lorawan.c: 1701: if (loRa.macStatus.adr == 1)
 20799  0028C2  0102               	movlb	2	; () banked
 20800  0028C4  AD02               	btfss	(_loRa+2)& (0+255),6,b
 20801  0028C6  D04D               	goto	l2180
 20802                           
 20803                           ; BSR set to: 2
 20804                           ;lorawan.c: 1702: {
 20805                           ;lorawan.c: 1703: fCtrl.adr = 1;
 20806  0028C8  0100               	movlb	0	; () banked
 20807  0028CA  8FE4               	bsf	AssemblePacket@fCtrl& (0+255),7,b
 20808                           
 20809                           ; BSR set to: 0
 20810                           ;lorawan.c: 1704: if(loRa.currentDataRate > loRa.minDataRate)
 20811  0028CC  0102               	movlb	2	; () banked
 20812  0028CE  51DF               	movf	(_loRa+223)& (0+255),w,b
 20813  0028D0  0102               	movlb	2	; () banked
 20814  0028D2  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 20815  0028D4  B0D8               	btfsc	status,0,c
 20816  0028D6  D01B               	goto	l15073
 20817                           
 20818                           ; BSR set to: 2
 20819                           ;lorawan.c: 1705: {
 20820                           ;lorawan.c: 1706: fCtrl.adrAckReq = 1;
 20821  0028D8  0100               	movlb	0	; () banked
 20822  0028DA  8DE4               	bsf	AssemblePacket@fCtrl& (0+255),6,b
 20823                           
 20824                           ;lorawan.c: 1707: loRa.lorawanMacStatus.adrAckRequest = 1;
 20825  0028DC  0102               	movlb	2	; () banked
 20826  0028DE  8900               	bsf	_loRa& (0+255),4,b
 20827                           
 20828                           ; BSR set to: 2
 20829                           ;lorawan.c: 1708: loRa.adrAckCnt ++;
 20830  0028E0  0102               	movlb	2	; () banked
 20831  0028E2  4BD0               	infsnz	(_loRa+208)& (0+255),f,b
 20832  0028E4  2BD1               	incf	(_loRa+209)& (0+255),f,b
 20833                           
 20834                           ; BSR set to: 2
 20835                           ;lorawan.c: 1710: if ( loRa.adrAckCnt == loRa.protocolParameters.adrAckLimit )
 20836  0028E6  0102               	movlb	2	; () banked
 20837  0028E8  51A2               	movf	(_loRa+162)& (0+255),w,b
 20838  0028EA  0100               	movlb	0	; () banked
 20839  0028EC  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20840  0028EE  6BE1               	clrf	(??_AssemblePacket+1)& (0+255),b
 20841  0028F0  0102               	movlb	2	; () banked
 20842  0028F2  51D0               	movf	(_loRa+208)& (0+255),w,b
 20843  0028F4  0100               	movlb	0	; () banked
 20844  0028F6  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 20845  0028F8  E10D               	bnz	l15075
 20846  0028FA  0102               	movlb	2	; () banked
 20847  0028FC  51D1               	movf	(_loRa+209)& (0+255),w,b
 20848  0028FE  0100               	movlb	0	; () banked
 20849  002900  19E1               	xorwf	(??_AssemblePacket+1)& (0+255),w,b
 20850  002902  A4D8               	btfss	status,2,c
 20851  002904  D007               	goto	l15075
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;lorawan.c: 1711: {
 20855                           ;lorawan.c: 1712: loRa.counterAdrAckDelay = 0;
 20856  002906  0E00               	movlw	0
 20857  002908  0102               	movlb	2	; () banked
 20858  00290A  6FEE               	movwf	(_loRa+238)& (0+255),b
 20859  00290C  D027               	goto	l2184
 20860  00290E                     l15073:
 20861                           
 20862                           ; BSR set to: 0
 20863                           ;lorawan.c: 1714: loRa.lorawanMacStatus.adrAckRequest = 0;
 20864  00290E  0102               	movlb	2	; () banked
 20865  002910  9900               	bcf	_loRa& (0+255),4,b
 20866                           
 20867                           ;lorawan.c: 1715: }
 20868  002912  D027               	goto	l2180
 20869  002914                     l15075:
 20870                           
 20871                           ;lorawan.c: 1716: else
 20872                           ;lorawan.c: 1717: {
 20873                           ;lorawan.c: 1718: if (loRa.adrAckCnt > loRa.protocolParameters.adrAckLimit)
 20874  002914  0102               	movlb	2	; () banked
 20875  002916  51A2               	movf	(_loRa+162)& (0+255),w,b
 20876  002918  0100               	movlb	0	; () banked
 20877  00291A  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20878  00291C  6BE1               	clrf	(??_AssemblePacket+1)& (0+255),b
 20879  00291E  0102               	movlb	2	; () banked
 20880  002920  51D0               	movf	(_loRa+208)& (0+255),w,b
 20881  002922  0100               	movlb	0	; () banked
 20882  002924  5DE0               	subwf	??_AssemblePacket& (0+255),w,b
 20883  002926  0102               	movlb	2	; () banked
 20884  002928  51D1               	movf	(_loRa+209)& (0+255),w,b
 20885  00292A  0100               	movlb	0	; () banked
 20886  00292C  59E1               	subwfb	(??_AssemblePacket+1)& (0+255),w,b
 20887  00292E  B0D8               	btfsc	status,0,c
 20888  002930  D015               	goto	l2184
 20889                           
 20890                           ; BSR set to: 0
 20891                           ;lorawan.c: 1719: {
 20892                           ;lorawan.c: 1721: loRa.counterAdrAckDelay ++ ;
 20893  002932  0102               	movlb	2	; () banked
 20894  002934  2BEE               	incf	(_loRa+238)& (0+255),f,b
 20895                           
 20896                           ; BSR set to: 2
 20897                           ;lorawan.c: 1724: if (loRa.counterAdrAckDelay > loRa.protocolParameters.adrAckDelay)
 20898  002936  0102               	movlb	2	; () banked
 20899  002938  51EE               	movf	(_loRa+238)& (0+255),w,b
 20900  00293A  0102               	movlb	2	; () banked
 20901  00293C  5DA3               	subwf	(_loRa+163)& (0+255),w,b
 20902  00293E  B0D8               	btfsc	status,0,c
 20903  002940  D010               	goto	l2180
 20904                           
 20905                           ; BSR set to: 2
 20906                           ;lorawan.c: 1725: {
 20907                           ;lorawan.c: 1726: loRa.counterAdrAckDelay = 0;
 20908  002942  0E00               	movlw	0
 20909  002944  0102               	movlb	2	; () banked
 20910  002946  6FEE               	movwf	(_loRa+238)& (0+255),b
 20911                           
 20912                           ; BSR set to: 2
 20913                           ;lorawan.c: 1728: if(0 == FindSmallestDataRate())
 20914  002948  EC62  F039         	call	_FindSmallestDataRate	;wreg free
 20915  00294C  0900               	iorlw	0
 20916  00294E  A4D8               	btfss	status,2,c
 20917  002950  D008               	goto	l2180
 20918                           
 20919                           ;lorawan.c: 1729: {
 20920                           ;lorawan.c: 1731: loRa.adrAckCnt = 0;
 20921  002952  0E00               	movlw	0
 20922  002954  0102               	movlb	2	; () banked
 20923  002956  6FD1               	movwf	(_loRa+209)& (0+255),b
 20924  002958  0E00               	movlw	0
 20925  00295A  6FD0               	movwf	(_loRa+208)& (0+255),b
 20926  00295C                     l2184:
 20927                           
 20928                           ; BSR set to: 0
 20929                           ;lorawan.c: 1737: else
 20930                           ;lorawan.c: 1738: {
 20931                           ;lorawan.c: 1739: fCtrl.adrAckReq = 0;
 20932  00295C  0100               	movlb	0	; () banked
 20933  00295E  9DE4               	bcf	AssemblePacket@fCtrl& (0+255),6,b
 20934  002960  D7D6               	goto	l15073
 20935  002962                     l2180:
 20936                           
 20937                           ;lorawan.c: 1747: }
 20938                           ;lorawan.c: 1748: }
 20939                           ;lorawan.c: 1750: if (loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage == 1)
 20940  002962  0102               	movlb	2	; () banked
 20941  002964  A300               	btfss	_loRa& (0+255),1,b
 20942  002966  D004               	goto	l2189
 20943                           
 20944                           ; BSR set to: 2
 20945                           ;lorawan.c: 1751: {
 20946                           ;lorawan.c: 1752: fCtrl.ack = 1;
 20947  002968  0100               	movlb	0	; () banked
 20948  00296A  8BE4               	bsf	AssemblePacket@fCtrl& (0+255),5,b
 20949                           
 20950                           ;lorawan.c: 1753: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 0;
 20951  00296C  0102               	movlb	2	; () banked
 20952  00296E  9300               	bcf	_loRa& (0+255),1,b
 20953  002970                     l2189:
 20954                           
 20955                           ; BSR set to: 2
 20956                           ;lorawan.c: 1754: }
 20957                           ;lorawan.c: 1756: fCtrl.fPending = 0;
 20958  002970  0100               	movlb	0	; () banked
 20959  002972  99E4               	bcf	AssemblePacket@fCtrl& (0+255),4,b
 20960                           
 20961                           ; BSR set to: 0
 20962                           ;lorawan.c: 1758: if ( (loRa.crtMacCmdIndex == 0) || (bufferLength == 0) )
 20963  002974  0102               	movlb	2	; () banked
 20964  002976  51A7               	movf	(_loRa+167)& (0+255),w,b
 20965  002978  B4D8               	btfsc	status,2,c
 20966  00297A  D006               	goto	l2192
 20967                           
 20968                           ; BSR set to: 2
 20969  00297C  0100               	movlb	0	; () banked
 20970  00297E  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 20971  002980  0100               	movlb	0	; () banked
 20972  002982  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 20973  002984  A4D8               	btfss	status,2,c
 20974  002986  D006               	goto	l15097
 20975  002988                     l2192:
 20976                           
 20977                           ;lorawan.c: 1759: {
 20978                           ;lorawan.c: 1760: fCtrl.fOptsLen = 0;
 20979  002988  0100               	movlb	0	; () banked
 20980  00298A  91E4               	bcf	AssemblePacket@fCtrl& (0+255),0,b
 20981  00298C  93E4               	bcf	AssemblePacket@fCtrl& (0+255),1,b
 20982  00298E  95E4               	bcf	AssemblePacket@fCtrl& (0+255),2,b
 20983  002990  97E4               	bcf	AssemblePacket@fCtrl& (0+255),3,b
 20984                           
 20985                           ;lorawan.c: 1761: }
 20986  002992  D00C               	goto	l15099
 20987  002994                     l15097:
 20988                           
 20989                           ; BSR set to: 0
 20990                           ;lorawan.c: 1763: else
 20991                           ;lorawan.c: 1764: {
 20992                           ;lorawan.c: 1765: fCtrl.fOptsLen = CountfOptsLength();
 20993  002994  ECE3  F039         	call	_CountfOptsLength	;wreg free
 20994  002998  0100               	movlb	0	; () banked
 20995  00299A  6FE0               	movwf	??_AssemblePacket& (0+255),b
 20996  00299C  0100               	movlb	0	; () banked
 20997  00299E  51E4               	movf	AssemblePacket@fCtrl& (0+255),w,b
 20998  0029A0  0100               	movlb	0	; () banked
 20999  0029A2  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 21000  0029A4  0BF0               	andlw	-16
 21001  0029A6  19E0               	xorwf	??_AssemblePacket& (0+255),w,b
 21002  0029A8  0100               	movlb	0	; () banked
 21003  0029AA  6FE4               	movwf	AssemblePacket@fCtrl& (0+255),b
 21004  0029AC                     l15099:
 21005                           
 21006                           ; BSR set to: 0
 21007                           ;lorawan.c: 1766: }
 21008                           ;lorawan.c: 1767: macBuffer[bufferIndex++] = fCtrl.value;
 21009  0029AC  0100               	movlb	0	; () banked
 21010  0029AE  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21011  0029B0  0D01               	mullw	1
 21012  0029B2  0EE0               	movlw	low _macBuffer
 21013  0029B4  24F3               	addwf	prodl,w,c
 21014  0029B6  6ED9               	movwf	fsr2l,c
 21015  0029B8  0E04               	movlw	high _macBuffer
 21016  0029BA  20F4               	addwfc	prodh,w,c
 21017  0029BC  6EDA               	movwf	fsr2h,c
 21018  0029BE  C0E4  FFDF         	movff	AssemblePacket@fCtrl,indf2
 21019                           
 21020                           ; BSR set to: 0
 21021  0029C2  0100               	movlb	0	; () banked
 21022  0029C4  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 21023                           
 21024                           ; BSR set to: 0
 21025                           ;lorawan.c: 1769: memcpy (&macBuffer[bufferIndex], &loRa.fCntUp.members.valueLow, sizeof
      +                           (loRa.fCntUp.members.valueLow) );
 21026  0029C6  0100               	movlb	0	; () banked
 21027  0029C8  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21028  0029CA  0D01               	mullw	1
 21029  0029CC  0EE0               	movlw	low _macBuffer
 21030  0029CE  24F3               	addwf	prodl,w,c
 21031  0029D0  0100               	movlb	0	; () banked
 21032  0029D2  6F64               	movwf	memcpy@d1& (0+255),b
 21033  0029D4  0E04               	movlw	high _macBuffer
 21034  0029D6  20F4               	addwfc	prodh,w,c
 21035  0029D8  0100               	movlb	0	; () banked
 21036  0029DA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21037  0029DC  0E06               	movlw	low (_loRa+6)
 21038  0029DE  0100               	movlb	0	; () banked
 21039  0029E0  6F66               	movwf	memcpy@s1& (0+255),b
 21040  0029E2  0E02               	movlw	high (_loRa+6)
 21041  0029E4  0100               	movlb	0	; () banked
 21042  0029E6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21043  0029E8  0E00               	movlw	0
 21044  0029EA  0100               	movlb	0	; () banked
 21045  0029EC  6F69               	movwf	(memcpy@n+1)& (0+255),b
 21046  0029EE  0E02               	movlw	2
 21047  0029F0  6F68               	movwf	memcpy@n& (0+255),b
 21048  0029F2  EC07  F049         	call	_memcpy	;wreg free
 21049                           
 21050                           ;lorawan.c: 1771: bufferIndex = bufferIndex + sizeof(loRa.fCntUp.members.valueLow);
 21051  0029F6  0100               	movlb	0	; () banked
 21052  0029F8  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21053  0029FA  0F02               	addlw	2
 21054  0029FC  0100               	movlb	0	; () banked
 21055  0029FE  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21056                           
 21057                           ; BSR set to: 0
 21058                           ;lorawan.c: 1773: if ( (loRa.crtMacCmdIndex != 0) && (bufferLength != 0) )
 21059  002A00  0102               	movlb	2	; () banked
 21060  002A02  51A7               	movf	(_loRa+167)& (0+255),w,b
 21061  002A04  B4D8               	btfsc	status,2,c
 21062  002A06  D017               	goto	l15113
 21063                           
 21064                           ; BSR set to: 2
 21065  002A08  0100               	movlb	0	; () banked
 21066  002A0A  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 21067  002A0C  0100               	movlb	0	; () banked
 21068  002A0E  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 21069  002A10  B4D8               	btfsc	status,2,c
 21070  002A12  D011               	goto	l15113
 21071                           
 21072                           ; BSR set to: 0
 21073                           ;lorawan.c: 1774: {
 21074                           ;lorawan.c: 1775: IncludeMacCommandsResponse (macBuffer, &bufferIndex, 1);
 21075  002A14  0EE0               	movlw	low _macBuffer
 21076  002A16  0100               	movlb	0	; () banked
 21077  002A18  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 21078  002A1A  0E04               	movlw	high _macBuffer
 21079  002A1C  0100               	movlb	0	; () banked
 21080  002A1E  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 21081  002A20  0EE6               	movlw	low AssemblePacket@bufferIndex
 21082  002A22  0100               	movlb	0	; () banked
 21083  002A24  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 21084  002A26  0E00               	movlw	high AssemblePacket@bufferIndex
 21085  002A28  0100               	movlb	0	; () banked
 21086  002A2A  6F67               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 21087  002A2C  0E01               	movlw	1
 21088  002A2E  0100               	movlb	0	; () banked
 21089  002A30  6F68               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 21090  002A32  ECB3  F00E         	call	_IncludeMacCommandsResponse	;wreg free
 21091  002A36                     l15113:
 21092                           
 21093                           ;lorawan.c: 1776: }
 21094                           ;lorawan.c: 1778: macBuffer[bufferIndex++] = port;
 21095  002A36  0100               	movlb	0	; () banked
 21096  002A38  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21097  002A3A  0D01               	mullw	1
 21098  002A3C  0EE0               	movlw	low _macBuffer
 21099  002A3E  24F3               	addwf	prodl,w,c
 21100  002A40  6ED9               	movwf	fsr2l,c
 21101  002A42  0E04               	movlw	high _macBuffer
 21102  002A44  20F4               	addwfc	prodh,w,c
 21103  002A46  6EDA               	movwf	fsr2h,c
 21104  002A48  C0DB  FFDF         	movff	AssemblePacket@port,indf2
 21105                           
 21106                           ; BSR set to: 0
 21107  002A4C  0100               	movlb	0	; () banked
 21108  002A4E  2BE6               	incf	AssemblePacket@bufferIndex& (0+255),f,b
 21109                           
 21110                           ; BSR set to: 0
 21111                           ;lorawan.c: 1780: if (bufferLength != 0)
 21112  002A50  0100               	movlb	0	; () banked
 21113  002A52  51DE               	movf	AssemblePacket@bufferLength& (0+255),w,b
 21114  002A54  0100               	movlb	0	; () banked
 21115  002A56  11DF               	iorwf	(AssemblePacket@bufferLength+1)& (0+255),w,b
 21116  002A58  B4D8               	btfsc	status,2,c
 21117  002A5A  D03E               	goto	l15123
 21118                           
 21119                           ; BSR set to: 0
 21120                           ;lorawan.c: 1781: {
 21121                           ;lorawan.c: 1782: memcpy (&macBuffer[bufferIndex], buffer, bufferLength);
 21122  002A5C  0100               	movlb	0	; () banked
 21123  002A5E  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21124  002A60  0D01               	mullw	1
 21125  002A62  0EE0               	movlw	low _macBuffer
 21126  002A64  24F3               	addwf	prodl,w,c
 21127  002A66  0100               	movlb	0	; () banked
 21128  002A68  6F64               	movwf	memcpy@d1& (0+255),b
 21129  002A6A  0E04               	movlw	high _macBuffer
 21130  002A6C  20F4               	addwfc	prodh,w,c
 21131  002A6E  0100               	movlb	0	; () banked
 21132  002A70  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21133  002A72  C0DC  F066         	movff	AssemblePacket@buffer,memcpy@s1
 21134  002A76  C0DD  F067         	movff	AssemblePacket@buffer+1,memcpy@s1+1
 21135  002A7A  C0DE  F068         	movff	AssemblePacket@bufferLength,memcpy@n
 21136  002A7E  C0DF  F069         	movff	AssemblePacket@bufferLength+1,memcpy@n+1
 21137  002A82  EC07  F049         	call	_memcpy	;wreg free
 21138                           
 21139                           ;lorawan.c: 1783: EncryptFRMPayload (buffer, bufferLength, 0, loRa.fCntUp.value, loRa.ac
      +                          tivationParameters.applicationSessionKey, bufferIndex, macBuffer, 0);
 21140  002A86  C0DC  F0A5         	movff	AssemblePacket@buffer,EncryptFRMPayload@buffer
 21141  002A8A  C0DD  F0A6         	movff	AssemblePacket@buffer+1,EncryptFRMPayload@buffer+1
 21142  002A8E  C0DE  F0A7         	movff	AssemblePacket@bufferLength,EncryptFRMPayload@bufferLength
 21143  002A92  0E00               	movlw	0
 21144  002A94  0100               	movlb	0	; () banked
 21145  002A96  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 21146  002A98  C206  F0A9         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21147  002A9C  C207  F0AA         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21148  002AA0  C208  F0AB         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21149  002AA4  C209  F0AC         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21150  002AA8  0E32               	movlw	low (_loRa+50)
 21151  002AAA  0100               	movlb	0	; () banked
 21152  002AAC  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 21153  002AAE  0E02               	movlw	high (_loRa+50)
 21154  002AB0  0100               	movlb	0	; () banked
 21155  002AB2  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21156  002AB4  C0E6  F0AF         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21157  002AB8  0EE0               	movlw	low _macBuffer
 21158  002ABA  0100               	movlb	0	; () banked
 21159  002ABC  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21160  002ABE  0E04               	movlw	high _macBuffer
 21161  002AC0  0100               	movlb	0	; () banked
 21162  002AC2  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21163  002AC4  0E00               	movlw	0
 21164  002AC6  0100               	movlb	0	; () banked
 21165  002AC8  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21166  002ACA  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 21167                           
 21168                           ;lorawan.c: 1784: bufferIndex = bufferIndex + bufferLength;
 21169  002ACE  0100               	movlb	0	; () banked
 21170  002AD0  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21171  002AD2  0100               	movlb	0	; () banked
 21172  002AD4  25DE               	addwf	AssemblePacket@bufferLength& (0+255),w,b
 21173  002AD6  D03F               	goto	L10
 21174  002AD8                     l15123:
 21175                           
 21176                           ; BSR set to: 0
 21177                           ;lorawan.c: 1786: else if ( (loRa.crtMacCmdIndex > 0) )
 21178  002AD8  0102               	movlb	2	; () banked
 21179  002ADA  51A7               	movf	(_loRa+167)& (0+255),w,b
 21180  002ADC  B4D8               	btfsc	status,2,c
 21181  002ADE  D03D               	goto	l15129
 21182                           
 21183                           ; BSR set to: 2
 21184                           ;lorawan.c: 1787: {
 21185                           ;lorawan.c: 1790: IncludeMacCommandsResponse (radioBuffer, &macCmdIdx, 0 );
 21186  002AE0  0EEF               	movlw	low _radioBuffer
 21187  002AE2  0100               	movlb	0	; () banked
 21188  002AE4  6F64               	movwf	IncludeMacCommandsResponse@macBuffer& (0+255),b
 21189  002AE6  0E05               	movlw	high _radioBuffer
 21190  002AE8  0100               	movlb	0	; () banked
 21191  002AEA  6F65               	movwf	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),b
 21192  002AEC  0EE5               	movlw	low AssemblePacket@macCmdIdx
 21193  002AEE  0100               	movlb	0	; () banked
 21194  002AF0  6F66               	movwf	IncludeMacCommandsResponse@pBufferIndex& (0+255),b
 21195  002AF2  0E00               	movlw	high AssemblePacket@macCmdIdx
 21196  002AF4  0100               	movlb	0	; () banked
 21197  002AF6  6F67               	movwf	(IncludeMacCommandsResponse@pBufferIndex+1)& (0+255),b
 21198  002AF8  0E00               	movlw	0
 21199  002AFA  0100               	movlb	0	; () banked
 21200  002AFC  6F68               	movwf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),b
 21201  002AFE  ECB3  F00E         	call	_IncludeMacCommandsResponse	;wreg free
 21202                           
 21203                           ;lorawan.c: 1791: EncryptFRMPayload (radioBuffer, macCmdIdx, 0, loRa.fCntUp.value, loRa.
      +                          activationParameters.networkSessionKey, bufferIndex, macBuffer, 0);
 21204  002B02  0EEF               	movlw	low _radioBuffer
 21205  002B04  0100               	movlb	0	; () banked
 21206  002B06  6FA5               	movwf	EncryptFRMPayload@buffer& (0+255),b
 21207  002B08  0E05               	movlw	high _radioBuffer
 21208  002B0A  0100               	movlb	0	; () banked
 21209  002B0C  6FA6               	movwf	(EncryptFRMPayload@buffer+1)& (0+255),b
 21210  002B0E  C0E5  F0A7         	movff	AssemblePacket@macCmdIdx,EncryptFRMPayload@bufferLength
 21211  002B12  0E00               	movlw	0
 21212  002B14  0100               	movlb	0	; () banked
 21213  002B16  6FA8               	movwf	EncryptFRMPayload@dir& (0+255),b
 21214  002B18  C206  F0A9         	movff	_loRa+6,EncryptFRMPayload@frameCounter
 21215  002B1C  C207  F0AA         	movff	_loRa+7,EncryptFRMPayload@frameCounter+1
 21216  002B20  C208  F0AB         	movff	_loRa+8,EncryptFRMPayload@frameCounter+2
 21217  002B24  C209  F0AC         	movff	_loRa+9,EncryptFRMPayload@frameCounter+3
 21218  002B28  0E22               	movlw	low (_loRa+34)
 21219  002B2A  0100               	movlb	0	; () banked
 21220  002B2C  6FAD               	movwf	EncryptFRMPayload@key& (0+255),b
 21221  002B2E  0E02               	movlw	high (_loRa+34)
 21222  002B30  0100               	movlb	0	; () banked
 21223  002B32  6FAE               	movwf	(EncryptFRMPayload@key+1)& (0+255),b
 21224  002B34  C0E6  F0AF         	movff	AssemblePacket@bufferIndex,EncryptFRMPayload@macBufferIndex
 21225  002B38  0EE0               	movlw	low _macBuffer
 21226  002B3A  0100               	movlb	0	; () banked
 21227  002B3C  6FB0               	movwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),b
 21228  002B3E  0E04               	movlw	high _macBuffer
 21229  002B40  0100               	movlb	0	; () banked
 21230  002B42  6FB1               	movwf	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),b
 21231  002B44  0E00               	movlw	0
 21232  002B46  0100               	movlb	0	; () banked
 21233  002B48  6FB2               	movwf	EncryptFRMPayload@multicastStatus& (0+255),b
 21234  002B4A  EC22  F02A         	call	_EncryptFRMPayload	;wreg free
 21235                           
 21236                           ;lorawan.c: 1792: bufferIndex = bufferIndex + macCmdIdx;
 21237  002B4E  0100               	movlb	0	; () banked
 21238  002B50  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21239  002B52  0100               	movlb	0	; () banked
 21240  002B54  25E5               	addwf	AssemblePacket@macCmdIdx& (0+255),w,b
 21241  002B56                     L10:
 21242  002B56  0100               	movlb	0	; () banked
 21243  002B58  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21244  002B5A                     l15129:
 21245                           
 21246                           ;lorawan.c: 1793: }
 21247                           ;lorawan.c: 1795: AssembleEncryptionBlock (0, loRa.fCntUp.value, bufferIndex - 16, 0x49,
      +                           0);
 21248  002B5A  C206  F06E         	movff	_loRa+6,AssembleEncryptionBlock@frameCounter
 21249  002B5E  C207  F06F         	movff	_loRa+7,AssembleEncryptionBlock@frameCounter+1
 21250  002B62  C208  F070         	movff	_loRa+8,AssembleEncryptionBlock@frameCounter+2
 21251  002B66  C209  F071         	movff	_loRa+9,AssembleEncryptionBlock@frameCounter+3
 21252  002B6A  0100               	movlb	0	; () banked
 21253  002B6C  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21254  002B6E  0FF0               	addlw	240
 21255  002B70  0100               	movlb	0	; () banked
 21256  002B72  6F72               	movwf	AssembleEncryptionBlock@blockId& (0+255),b
 21257  002B74  0E49               	movlw	73
 21258  002B76  0100               	movlb	0	; () banked
 21259  002B78  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 21260  002B7A  0E00               	movlw	0
 21261  002B7C  0100               	movlb	0	; () banked
 21262  002B7E  6F74               	movwf	AssembleEncryptionBlock@multicastStatus& (0+255),b
 21263  002B80  0E00               	movlw	0
 21264  002B82  EC0F  F036         	call	_AssembleEncryptionBlock
 21265                           
 21266                           ;lorawan.c: 1796: memcpy (&macBuffer[0], aesBuffer, sizeof (aesBuffer));
 21267  002B86  0EE0               	movlw	low _macBuffer
 21268  002B88  0100               	movlb	0	; () banked
 21269  002B8A  6F64               	movwf	memcpy@d1& (0+255),b
 21270  002B8C  0E04               	movlw	high _macBuffer
 21271  002B8E  0100               	movlb	0	; () banked
 21272  002B90  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21273  002B92  0EC2               	movlw	low _aesBuffer
 21274  002B94  0100               	movlb	0	; () banked
 21275  002B96  6F66               	movwf	memcpy@s1& (0+255),b
 21276  002B98  0E01               	movlw	high _aesBuffer
 21277  002B9A  0100               	movlb	0	; () banked
 21278  002B9C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21279  002B9E  0E00               	movlw	0
 21280  002BA0  0100               	movlb	0	; () banked
 21281  002BA2  6F69               	movwf	(memcpy@n+1)& (0+255),b
 21282  002BA4  0E10               	movlw	16
 21283  002BA6  6F68               	movwf	memcpy@n& (0+255),b
 21284  002BA8  EC07  F049         	call	_memcpy	;wreg free
 21285                           
 21286                           ;lorawan.c: 1798: AESCmac (loRa.activationParameters.networkSessionKey, aesBuffer, macBu
      +                          ffer, bufferIndex );
 21287  002BAC  0E22               	movlw	low (_loRa+34)
 21288  002BAE  0100               	movlb	0	; () banked
 21289  002BB0  6FCD               	movwf	AESCmac@key& (0+255),b
 21290  002BB2  0E02               	movlw	high (_loRa+34)
 21291  002BB4  0100               	movlb	0	; () banked
 21292  002BB6  6FCE               	movwf	(AESCmac@key+1)& (0+255),b
 21293  002BB8  0EC2               	movlw	low _aesBuffer
 21294  002BBA  0100               	movlb	0	; () banked
 21295  002BBC  6FCF               	movwf	AESCmac@output& (0+255),b
 21296  002BBE  0E01               	movlw	high _aesBuffer
 21297  002BC0  0100               	movlb	0	; () banked
 21298  002BC2  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 21299  002BC4  0EE0               	movlw	low _macBuffer
 21300  002BC6  0100               	movlb	0	; () banked
 21301  002BC8  6FD1               	movwf	AESCmac@input& (0+255),b
 21302  002BCA  0E04               	movlw	high _macBuffer
 21303  002BCC  0100               	movlb	0	; () banked
 21304  002BCE  6FD2               	movwf	(AESCmac@input+1)& (0+255),b
 21305  002BD0  C0E6  F0D3         	movff	AssemblePacket@bufferIndex,AESCmac@size
 21306  002BD4  EC13  F016         	call	_AESCmac	;wreg free
 21307                           
 21308                           ;lorawan.c: 1800: memcpy (&macBuffer[bufferIndex], aesBuffer, 4);
 21309  002BD8  0100               	movlb	0	; () banked
 21310  002BDA  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21311  002BDC  0D01               	mullw	1
 21312  002BDE  0EE0               	movlw	low _macBuffer
 21313  002BE0  24F3               	addwf	prodl,w,c
 21314  002BE2  0100               	movlb	0	; () banked
 21315  002BE4  6F64               	movwf	memcpy@d1& (0+255),b
 21316  002BE6  0E04               	movlw	high _macBuffer
 21317  002BE8  20F4               	addwfc	prodh,w,c
 21318  002BEA  0100               	movlb	0	; () banked
 21319  002BEC  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 21320  002BEE  0EC2               	movlw	low _aesBuffer
 21321  002BF0  0100               	movlb	0	; () banked
 21322  002BF2  6F66               	movwf	memcpy@s1& (0+255),b
 21323  002BF4  0E01               	movlw	high _aesBuffer
 21324  002BF6  0100               	movlb	0	; () banked
 21325  002BF8  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 21326  002BFA  0E00               	movlw	0
 21327  002BFC  0100               	movlb	0	; () banked
 21328  002BFE  6F69               	movwf	(memcpy@n+1)& (0+255),b
 21329  002C00  0E04               	movlw	4
 21330  002C02  6F68               	movwf	memcpy@n& (0+255),b
 21331  002C04  EC07  F049         	call	_memcpy	;wreg free
 21332                           
 21333                           ;lorawan.c: 1801: bufferIndex = bufferIndex + 4;
 21334  002C08  0100               	movlb	0	; () banked
 21335  002C0A  51E6               	movf	AssemblePacket@bufferIndex& (0+255),w,b
 21336  002C0C  0F04               	addlw	4
 21337  002C0E  0100               	movlb	0	; () banked
 21338  002C10  6FE6               	movwf	AssemblePacket@bufferIndex& (0+255),b
 21339                           
 21340                           ; BSR set to: 0
 21341                           ;lorawan.c: 1803: loRa.lastPacketLength = bufferIndex - 16;
 21342  002C12  0EF0               	movlw	240
 21343  002C14  0100               	movlb	0	; () banked
 21344  002C16  25E6               	addwf	AssemblePacket@bufferIndex& (0+255),w,b
 21345  002C18  0102               	movlb	2	; () banked
 21346  002C1A  6FD4               	movwf	(_loRa+212)& (0+255),b
 21347  002C1C  0102               	movlb	2	; () banked
 21348  002C1E  6BD5               	clrf	(_loRa+213)& (0+255),b
 21349  002C20  0EFF               	movlw	255
 21350  002C22  23D5               	addwfc	(_loRa+213)& (0+255),f,b
 21351                           
 21352                           ; BSR set to: 2
 21353  002C24  0012               	return		;funcret
 21354  002C26                     __end_of_AssemblePacket:
 21355                           	opt stack 0
 21356                           tosu	equ	0xFFF
 21357                           tosh	equ	0xFFE
 21358                           tosl	equ	0xFFD
 21359                           pclath	equ	0xFFA
 21360                           tblptru	equ	0xFF8
 21361                           tblptrh	equ	0xFF7
 21362                           tblptrl	equ	0xFF6
 21363                           tablat	equ	0xFF5
 21364                           prodh	equ	0xFF4
 21365                           prodl	equ	0xFF3
 21366                           intcon	equ	0xFF2
 21367                           intcon2	equ	0xFF1
 21368                           intcon3	equ	0xFF0
 21369                           indf0	equ	0xFEF
 21370                           postinc0	equ	0xFEE
 21371                           fsr0h	equ	0xFEA
 21372                           fsr0l	equ	0xFE9
 21373                           wreg	equ	0xFE8
 21374                           postinc1	equ	0xFE6
 21375                           postdec1	equ	0xFE5
 21376                           plusw1	equ	0xFE3
 21377                           fsr1h	equ	0xFE2
 21378                           fsr1l	equ	0xFE1
 21379                           indf2	equ	0xFDF
 21380                           postinc2	equ	0xFDE
 21381                           postdec2	equ	0xFDD
 21382                           plusw2	equ	0xFDB
 21383                           fsr2h	equ	0xFDA
 21384                           fsr2l	equ	0xFD9
 21385                           status	equ	0xFD8
 21386                           
 21387 ;; *************** function _IncludeMacCommandsResponse *****************
 21388 ;; Defined at:
 21389 ;;		line 1845 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 21390 ;; Parameters:    Size  Location     Type
 21391 ;;  macBuffer       2    4[BANK0 ] PTR unsigned char 
 21392 ;;		 -> macBuffer(271), radioBuffer(271), 
 21393 ;;  pBufferIndex    2    6[BANK0 ] PTR unsigned char 
 21394 ;;		 -> AssemblePacket@macCmdIdx(1), AssemblePacket@bufferIndex(1), 
 21395 ;;  bIncludeInFo    1    8[BANK0 ] unsigned char 
 21396 ;; Auto vars:     Size  Location     Type
 21397 ;;  bufferIndex     1   18[BANK0 ] unsigned char 
 21398 ;;  i               1   17[BANK0 ] unsigned char 
 21399 ;; Return value:  Size  Location     Type
 21400 ;;                  1    wreg      void 
 21401 ;; Registers used:
 21402 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21403 ;; Tracked objects:
 21404 ;;		On entry : 0/0
 21405 ;;		On exit  : 0/0
 21406 ;;		Unchanged: 0/0
 21407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 21408 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21409 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21410 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21411 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 21412 ;;Total ram usage:       15 bytes
 21413 ;; Hardware stack levels used:    1
 21414 ;; Hardware stack levels required when called:    8
 21415 ;; This function calls:
 21416 ;;		_RADIO_GetPacketSnr
 21417 ;; This function is called by:
 21418 ;;		_AssemblePacket
 21419 ;; This function uses a non-reentrant model
 21420 ;;
 21421                           
 21422                           	psect	text97
 21423  001D66                     __ptext97:
 21424                           	opt stack 0
 21425  001D66                     _IncludeMacCommandsResponse:
 21426                           	opt stack 19
 21427                           
 21428                           ;lorawan.c: 1847: uint8_t i = 0;
 21429                           
 21430                           ; BSR set to: 2
 21431                           ;incstack = 0
 21432  001D66  0E00               	movlw	0
 21433  001D68  0100               	movlb	0	; () banked
 21434  001D6A  6F71               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 21435                           
 21436                           ; BSR set to: 0
 21437                           ;lorawan.c: 1848: uint8_t bufferIndex = *pBufferIndex;
 21438  001D6C  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 21439  001D70  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 21440  001D74  50DF               	movf	indf2,w,c
 21441  001D76  0100               	movlb	0	; () banked
 21442  001D78  6F72               	movwf	IncludeMacCommandsResponse@bufferIndex& (0+255),b
 21443                           
 21444                           ; BSR set to: 0
 21445                           ;lorawan.c: 1850: for(i = 0; i < loRa.crtMacCmdIndex ; i++)
 21446  001D7A  0E00               	movlw	0
 21447  001D7C  0100               	movlb	0	; () banked
 21448  001D7E  6F71               	movwf	IncludeMacCommandsResponse@i& (0+255),b
 21449  001D80  D293               	goto	l14713
 21450  001D82                     l14625:
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;lorawan.c: 1851: {
 21454                           ;lorawan.c: 1852: if((bIncludeInFopts) && (loRa.macCommands[i].receivedCid != 0xFF))
 21455  001D82  0100               	movlb	0	; () banked
 21456  001D84  5168               	movf	IncludeMacCommandsResponse@bIncludeInFopts& (0+255),w,b
 21457  001D86  0100               	movlb	0	; () banked
 21458  001D88  B4D8               	btfsc	status,2,c
 21459  001D8A  D26D               	goto	l14709
 21460                           
 21461                           ; BSR set to: 0
 21462  001D8C  0100               	movlb	0	; () banked
 21463  001D8E  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21464  001D90  0D02               	mullw	2
 21465  001D92  0EA8               	movlw	low (_loRa+168)
 21466  001D94  24F3               	addwf	prodl,w,c
 21467  001D96  6ED9               	movwf	fsr2l,c
 21468  001D98  0E02               	movlw	high (_loRa+168)
 21469  001D9A  20F4               	addwfc	prodh,w,c
 21470  001D9C  6EDA               	movwf	fsr2h,c
 21471  001D9E  28DE               	incf	postinc2,w,c
 21472  001DA0  B4D8               	btfsc	status,2,c
 21473  001DA2  D261               	goto	l14709
 21474                           
 21475                           ; BSR set to: 0
 21476                           ;lorawan.c: 1853: {
 21477                           ;lorawan.c: 1854: if((bufferIndex - (*pBufferIndex) + macEndDevCmdReplyLen[loRa.macComma
      +                          nds[i].receivedCid - 2]) > 0x0F)
 21478  001DA4  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 21479  001DA8  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 21480  001DAC  50DF               	movf	indf2,w,c
 21481  001DAE  0100               	movlb	0	; () banked
 21482  001DB0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21483  001DB2  6B6A               	clrf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21484  001DB4  0100               	movlb	0	; () banked
 21485  001DB6  1F69               	comf	??_IncludeMacCommandsResponse& (0+255),f,b
 21486  001DB8  1F6A               	comf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21487  001DBA  4B69               	infsnz	??_IncludeMacCommandsResponse& (0+255),f,b
 21488  001DBC  2B6A               	incf	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21489  001DBE  0EFE               	movlw	254
 21490  001DC0  0100               	movlb	0	; () banked
 21491  001DC2  6F6B               	movwf	(??_IncludeMacCommandsResponse+2)& (0+255),b
 21492  001DC4  0EFF               	movlw	255
 21493  001DC6  0100               	movlb	0	; () banked
 21494  001DC8  6F6C               	movwf	(??_IncludeMacCommandsResponse+3)& (0+255),b
 21495  001DCA  0100               	movlb	0	; () banked
 21496  001DCC  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21497  001DCE  0D02               	mullw	2
 21498  001DD0  0EA8               	movlw	low (_loRa+168)
 21499  001DD2  24F3               	addwf	prodl,w,c
 21500  001DD4  6ED9               	movwf	fsr2l,c
 21501  001DD6  0E02               	movlw	high (_loRa+168)
 21502  001DD8  20F4               	addwfc	prodh,w,c
 21503  001DDA  6EDA               	movwf	fsr2h,c
 21504  001DDC  50DF               	movf	indf2,w,c
 21505  001DDE  0100               	movlb	0	; () banked
 21506  001DE0  6F6D               	movwf	(??_IncludeMacCommandsResponse+4)& (0+255),b
 21507  001DE2  6B6E               	clrf	(??_IncludeMacCommandsResponse+5)& (0+255),b
 21508  001DE4  0100               	movlb	0	; () banked
 21509  001DE6  516B               	movf	(??_IncludeMacCommandsResponse+2)& (0+255),w,b
 21510  001DE8  0100               	movlb	0	; () banked
 21511  001DEA  276D               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),f,b
 21512  001DEC  0100               	movlb	0	; () banked
 21513  001DEE  516C               	movf	(??_IncludeMacCommandsResponse+3)& (0+255),w,b
 21514  001DF0  0100               	movlb	0	; () banked
 21515  001DF2  236E               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),f,b
 21516  001DF4  0E8E               	movlw	low _macEndDevCmdReplyLen
 21517  001DF6  0100               	movlb	0	; () banked
 21518  001DF8  256D               	addwf	(??_IncludeMacCommandsResponse+4)& (0+255),w,b
 21519  001DFA  6EF6               	movwf	tblptrl,c
 21520  001DFC  0EFF               	movlw	high _macEndDevCmdReplyLen
 21521  001DFE  216E               	addwfc	(??_IncludeMacCommandsResponse+5)& (0+255),w,b
 21522  001E00  6EF7               	movwf	tblptrh,c
 21523  001E02                     	if	1	;There are 3 active tblptr bytes
 21524  001E02  6AF8               	clrf	tblptru,c
 21525  001E04  0E00               	movlw	low (__mediumconst shr (0+16))
 21526  001E06  22F8               	addwfc	tblptru,f,c
 21527  001E08                     	endif
 21528  001E08  0008               	tblrd		*
 21529  001E0A  50F5               	movf	tablat,w,c
 21530  001E0C  C072  F06F         	movff	IncludeMacCommandsResponse@bufferIndex,??_IncludeMacCommandsResponse+6
 21531  001E10  0100               	movlb	0	; () banked
 21532  001E12  6B70               	clrf	(??_IncludeMacCommandsResponse+7)& (0+255),b
 21533  001E14  0100               	movlb	0	; () banked
 21534  001E16  276F               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 21535  001E18  0E00               	movlw	0
 21536  001E1A  2370               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 21537  001E1C  0100               	movlb	0	; () banked
 21538  001E1E  5169               	movf	??_IncludeMacCommandsResponse& (0+255),w,b
 21539  001E20  0100               	movlb	0	; () banked
 21540  001E22  276F               	addwf	(??_IncludeMacCommandsResponse+6)& (0+255),f,b
 21541  001E24  0100               	movlb	0	; () banked
 21542  001E26  516A               	movf	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21543  001E28  0100               	movlb	0	; () banked
 21544  001E2A  2370               	addwfc	(??_IncludeMacCommandsResponse+7)& (0+255),f,b
 21545  001E2C  0100               	movlb	0	; () banked
 21546  001E2E  BF70               	btfsc	(??_IncludeMacCommandsResponse+7)& (0+255),7,b
 21547  001E30  D21A               	goto	l14709
 21548  001E32  0100               	movlb	0	; () banked
 21549  001E34  5170               	movf	(??_IncludeMacCommandsResponse+7)& (0+255),w,b
 21550  001E36  E106               	bnz	u16620
 21551  001E38  0E10               	movlw	16
 21552  001E3A  0100               	movlb	0	; () banked
 21553  001E3C  5D6F               	subwf	(??_IncludeMacCommandsResponse+6)& (0+255),w,b
 21554  001E3E  B0D8               	btfsc	status,0,c
 21555  001E40  D239               	goto	l14715
 21556  001E42  D211               	goto	l14709
 21557  001E44                     u16620:
 21558                           
 21559                           ; BSR set to: 0
 21560                           ;lorawan.c: 1855: {
 21561                           ;lorawan.c: 1856: break;
 21562  001E44  D237               	goto	l14715
 21563  001E46                     l14633:
 21564                           
 21565                           ; BSR set to: 0
 21566                           ;lorawan.c: 1862: {
 21567                           ;lorawan.c: 1863: macBuffer[bufferIndex++] = LINK_ADR_CID;
 21568  001E46  0100               	movlb	0	; () banked
 21569  001E48  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21570  001E4A  0D01               	mullw	1
 21571  001E4C  50F3               	movf	prodl,w,c
 21572  001E4E  0100               	movlb	0	; () banked
 21573  001E50  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21574  001E52  6ED9               	movwf	fsr2l,c
 21575  001E54  50F4               	movf	prodh,w,c
 21576  001E56  0100               	movlb	0	; () banked
 21577  001E58  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21578  001E5A  6EDA               	movwf	fsr2h,c
 21579  001E5C  0E03               	movlw	3
 21580  001E5E  6EDF               	movwf	indf2,c
 21581                           
 21582                           ; BSR set to: 0
 21583  001E60  0100               	movlb	0	; () banked
 21584  001E62  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21585                           
 21586                           ; BSR set to: 0
 21587                           ;lorawan.c: 1864: macBuffer[bufferIndex] = 0x00;
 21588  001E64  0100               	movlb	0	; () banked
 21589  001E66  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21590  001E68  0D01               	mullw	1
 21591  001E6A  50F3               	movf	prodl,w,c
 21592  001E6C  0100               	movlb	0	; () banked
 21593  001E6E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21594  001E70  6ED9               	movwf	fsr2l,c
 21595  001E72  50F4               	movf	prodh,w,c
 21596  001E74  0100               	movlb	0	; () banked
 21597  001E76  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21598  001E78  6EDA               	movwf	fsr2h,c
 21599  001E7A  0E00               	movlw	0
 21600  001E7C  6EDF               	movwf	indf2,c
 21601                           
 21602                           ; BSR set to: 0
 21603                           ;lorawan.c: 1865: if (loRa.macCommands[i].channelMaskAck == 1)
 21604  001E7E  0100               	movlb	0	; () banked
 21605  001E80  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21606  001E82  0D02               	mullw	2
 21607  001E84  0E00               	movlw	low _loRa
 21608  001E86  0100               	movlb	0	; () banked
 21609  001E88  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21610  001E8A  0E02               	movlw	high _loRa
 21611  001E8C  0100               	movlb	0	; () banked
 21612  001E8E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21613  001E90  0EA8               	movlw	168
 21614  001E92  0100               	movlb	0	; () banked
 21615  001E94  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21616  001E96  0E00               	movlw	0
 21617  001E98  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21618  001E9A  50F3               	movf	prodl,w,c
 21619  001E9C  0100               	movlb	0	; () banked
 21620  001E9E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21621  001EA0  50F4               	movf	prodh,w,c
 21622  001EA2  0100               	movlb	0	; () banked
 21623  001EA4  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21624  001EA6  0E01               	movlw	1
 21625  001EA8  0100               	movlb	0	; () banked
 21626  001EAA  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21627  001EAC  6ED9               	movwf	fsr2l,c
 21628  001EAE  0E00               	movlw	0
 21629  001EB0  0100               	movlb	0	; () banked
 21630  001EB2  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21631  001EB4  6EDA               	movwf	fsr2h,c
 21632  001EB6  0102               	movlb	2	; () banked
 21633  001EB8  A0DF               	btfss	indf2,0,c
 21634  001EBA  D00D               	goto	l2215
 21635                           
 21636                           ; BSR set to: 2
 21637                           ;lorawan.c: 1866: {
 21638                           ;lorawan.c: 1867: macBuffer[bufferIndex] |= 0x01;
 21639  001EBC  0100               	movlb	0	; () banked
 21640  001EBE  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21641  001EC0  0D01               	mullw	1
 21642  001EC2  50F3               	movf	prodl,w,c
 21643  001EC4  0100               	movlb	0	; () banked
 21644  001EC6  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21645  001EC8  6ED9               	movwf	fsr2l,c
 21646  001ECA  50F4               	movf	prodh,w,c
 21647  001ECC  0100               	movlb	0	; () banked
 21648  001ECE  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21649  001ED0  6EDA               	movwf	fsr2h,c
 21650  001ED2  0E00               	movlw	0
 21651  001ED4  80DB               	bsf	plusw2,0,c
 21652  001ED6                     l2215:
 21653                           
 21654                           ;lorawan.c: 1868: }
 21655                           ;lorawan.c: 1870: if (loRa.macCommands[i].dataRateAck == 1)
 21656  001ED6  0100               	movlb	0	; () banked
 21657  001ED8  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21658  001EDA  0D02               	mullw	2
 21659  001EDC  0E00               	movlw	low _loRa
 21660  001EDE  0100               	movlb	0	; () banked
 21661  001EE0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21662  001EE2  0E02               	movlw	high _loRa
 21663  001EE4  0100               	movlb	0	; () banked
 21664  001EE6  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21665  001EE8  0EA8               	movlw	168
 21666  001EEA  0100               	movlb	0	; () banked
 21667  001EEC  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21668  001EEE  0E00               	movlw	0
 21669  001EF0  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21670  001EF2  50F3               	movf	prodl,w,c
 21671  001EF4  0100               	movlb	0	; () banked
 21672  001EF6  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21673  001EF8  50F4               	movf	prodh,w,c
 21674  001EFA  0100               	movlb	0	; () banked
 21675  001EFC  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21676  001EFE  0E01               	movlw	1
 21677  001F00  0100               	movlb	0	; () banked
 21678  001F02  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21679  001F04  6ED9               	movwf	fsr2l,c
 21680  001F06  0E00               	movlw	0
 21681  001F08  0100               	movlb	0	; () banked
 21682  001F0A  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21683  001F0C  6EDA               	movwf	fsr2h,c
 21684  001F0E  0102               	movlb	2	; () banked
 21685  001F10  A2DF               	btfss	indf2,1,c
 21686  001F12  D00D               	goto	l2216
 21687                           
 21688                           ; BSR set to: 2
 21689                           ;lorawan.c: 1871: {
 21690                           ;lorawan.c: 1872: macBuffer[bufferIndex] |= 0x02;
 21691  001F14  0100               	movlb	0	; () banked
 21692  001F16  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21693  001F18  0D01               	mullw	1
 21694  001F1A  50F3               	movf	prodl,w,c
 21695  001F1C  0100               	movlb	0	; () banked
 21696  001F1E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21697  001F20  6ED9               	movwf	fsr2l,c
 21698  001F22  50F4               	movf	prodh,w,c
 21699  001F24  0100               	movlb	0	; () banked
 21700  001F26  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21701  001F28  6EDA               	movwf	fsr2h,c
 21702  001F2A  0E00               	movlw	0
 21703  001F2C  82DB               	bsf	plusw2,1,c
 21704  001F2E                     l2216:
 21705                           
 21706                           ;lorawan.c: 1873: }
 21707                           ;lorawan.c: 1875: if (loRa.macCommands[i].powerAck == 1)
 21708  001F2E  0100               	movlb	0	; () banked
 21709  001F30  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21710  001F32  0D02               	mullw	2
 21711  001F34  0E00               	movlw	low _loRa
 21712  001F36  0100               	movlb	0	; () banked
 21713  001F38  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21714  001F3A  0E02               	movlw	high _loRa
 21715  001F3C  0100               	movlb	0	; () banked
 21716  001F3E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21717  001F40  0EA8               	movlw	168
 21718  001F42  0100               	movlb	0	; () banked
 21719  001F44  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21720  001F46  0E00               	movlw	0
 21721  001F48  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21722  001F4A  50F3               	movf	prodl,w,c
 21723  001F4C  0100               	movlb	0	; () banked
 21724  001F4E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21725  001F50  50F4               	movf	prodh,w,c
 21726  001F52  0100               	movlb	0	; () banked
 21727  001F54  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21728  001F56  0E01               	movlw	1
 21729  001F58  0100               	movlb	0	; () banked
 21730  001F5A  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21731  001F5C  6ED9               	movwf	fsr2l,c
 21732  001F5E  0E00               	movlw	0
 21733  001F60  0100               	movlb	0	; () banked
 21734  001F62  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21735  001F64  6EDA               	movwf	fsr2h,c
 21736  001F66  0102               	movlb	2	; () banked
 21737  001F68  A4DF               	btfss	indf2,2,c
 21738  001F6A  D0D9               	goto	l14677
 21739  001F6C  D093               	goto	l14661
 21740  001F6E                     l14649:
 21741                           
 21742                           ; BSR set to: 0
 21743                           ;lorawan.c: 1884: {
 21744                           ;lorawan.c: 1885: macBuffer[bufferIndex++] = RX2_SETUP_CID;
 21745  001F6E  0100               	movlb	0	; () banked
 21746  001F70  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21747  001F72  0D01               	mullw	1
 21748  001F74  50F3               	movf	prodl,w,c
 21749  001F76  0100               	movlb	0	; () banked
 21750  001F78  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21751  001F7A  6ED9               	movwf	fsr2l,c
 21752  001F7C  50F4               	movf	prodh,w,c
 21753  001F7E  0100               	movlb	0	; () banked
 21754  001F80  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21755  001F82  6EDA               	movwf	fsr2h,c
 21756  001F84  0E05               	movlw	5
 21757  001F86  6EDF               	movwf	indf2,c
 21758                           
 21759                           ; BSR set to: 0
 21760  001F88  0100               	movlb	0	; () banked
 21761  001F8A  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21762                           
 21763                           ; BSR set to: 0
 21764                           ;lorawan.c: 1886: macBuffer[bufferIndex] = 0x00;
 21765  001F8C  0100               	movlb	0	; () banked
 21766  001F8E  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21767  001F90  0D01               	mullw	1
 21768  001F92  50F3               	movf	prodl,w,c
 21769  001F94  0100               	movlb	0	; () banked
 21770  001F96  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21771  001F98  6ED9               	movwf	fsr2l,c
 21772  001F9A  50F4               	movf	prodh,w,c
 21773  001F9C  0100               	movlb	0	; () banked
 21774  001F9E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21775  001FA0  6EDA               	movwf	fsr2h,c
 21776  001FA2  0E00               	movlw	0
 21777  001FA4  6EDF               	movwf	indf2,c
 21778                           
 21779                           ; BSR set to: 0
 21780                           ;lorawan.c: 1887: if (loRa.macCommands[i].channelAck == 1)
 21781  001FA6  0100               	movlb	0	; () banked
 21782  001FA8  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21783  001FAA  0D02               	mullw	2
 21784  001FAC  0E00               	movlw	low _loRa
 21785  001FAE  0100               	movlb	0	; () banked
 21786  001FB0  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21787  001FB2  0E02               	movlw	high _loRa
 21788  001FB4  0100               	movlb	0	; () banked
 21789  001FB6  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21790  001FB8  0EA8               	movlw	168
 21791  001FBA  0100               	movlb	0	; () banked
 21792  001FBC  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21793  001FBE  0E00               	movlw	0
 21794  001FC0  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21795  001FC2  50F3               	movf	prodl,w,c
 21796  001FC4  0100               	movlb	0	; () banked
 21797  001FC6  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21798  001FC8  50F4               	movf	prodh,w,c
 21799  001FCA  0100               	movlb	0	; () banked
 21800  001FCC  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21801  001FCE  0E01               	movlw	1
 21802  001FD0  0100               	movlb	0	; () banked
 21803  001FD2  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21804  001FD4  6ED9               	movwf	fsr2l,c
 21805  001FD6  0E00               	movlw	0
 21806  001FD8  0100               	movlb	0	; () banked
 21807  001FDA  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21808  001FDC  6EDA               	movwf	fsr2h,c
 21809  001FDE  0102               	movlb	2	; () banked
 21810  001FE0  A6DF               	btfss	indf2,3,c
 21811  001FE2  D00D               	goto	l2220
 21812                           
 21813                           ; BSR set to: 2
 21814                           ;lorawan.c: 1888: {
 21815                           ;lorawan.c: 1889: macBuffer[bufferIndex] |= 0x01;
 21816  001FE4  0100               	movlb	0	; () banked
 21817  001FE6  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21818  001FE8  0D01               	mullw	1
 21819  001FEA  50F3               	movf	prodl,w,c
 21820  001FEC  0100               	movlb	0	; () banked
 21821  001FEE  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21822  001FF0  6ED9               	movwf	fsr2l,c
 21823  001FF2  50F4               	movf	prodh,w,c
 21824  001FF4  0100               	movlb	0	; () banked
 21825  001FF6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21826  001FF8  6EDA               	movwf	fsr2h,c
 21827  001FFA  0E00               	movlw	0
 21828  001FFC  80DB               	bsf	plusw2,0,c
 21829  001FFE                     l2220:
 21830                           
 21831                           ;lorawan.c: 1890: }
 21832                           ;lorawan.c: 1892: if (loRa.macCommands[i].dataRateReceiveWindowAck == 1)
 21833  001FFE  0100               	movlb	0	; () banked
 21834  002000  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21835  002002  0D02               	mullw	2
 21836  002004  0E00               	movlw	low _loRa
 21837  002006  0100               	movlb	0	; () banked
 21838  002008  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21839  00200A  0E02               	movlw	high _loRa
 21840  00200C  0100               	movlb	0	; () banked
 21841  00200E  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21842  002010  0EA8               	movlw	168
 21843  002012  0100               	movlb	0	; () banked
 21844  002014  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21845  002016  0E00               	movlw	0
 21846  002018  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21847  00201A  50F3               	movf	prodl,w,c
 21848  00201C  0100               	movlb	0	; () banked
 21849  00201E  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21850  002020  50F4               	movf	prodh,w,c
 21851  002022  0100               	movlb	0	; () banked
 21852  002024  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21853  002026  0E01               	movlw	1
 21854  002028  0100               	movlb	0	; () banked
 21855  00202A  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21856  00202C  6ED9               	movwf	fsr2l,c
 21857  00202E  0E00               	movlw	0
 21858  002030  0100               	movlb	0	; () banked
 21859  002032  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21860  002034  6EDA               	movwf	fsr2h,c
 21861  002036  0102               	movlb	2	; () banked
 21862  002038  A8DF               	btfss	indf2,4,c
 21863  00203A  D00D               	goto	l2221
 21864                           
 21865                           ; BSR set to: 2
 21866                           ;lorawan.c: 1893: {
 21867                           ;lorawan.c: 1894: macBuffer[bufferIndex] |= 0x02;
 21868  00203C  0100               	movlb	0	; () banked
 21869  00203E  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21870  002040  0D01               	mullw	1
 21871  002042  50F3               	movf	prodl,w,c
 21872  002044  0100               	movlb	0	; () banked
 21873  002046  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21874  002048  6ED9               	movwf	fsr2l,c
 21875  00204A  50F4               	movf	prodh,w,c
 21876  00204C  0100               	movlb	0	; () banked
 21877  00204E  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21878  002050  6EDA               	movwf	fsr2h,c
 21879  002052  0E00               	movlw	0
 21880  002054  82DB               	bsf	plusw2,1,c
 21881  002056                     l2221:
 21882                           
 21883                           ;lorawan.c: 1895: }
 21884                           ;lorawan.c: 1897: if (loRa.macCommands[i].rx1DROffestAck == 1)
 21885  002056  0100               	movlb	0	; () banked
 21886  002058  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 21887  00205A  0D02               	mullw	2
 21888  00205C  0E00               	movlw	low _loRa
 21889  00205E  0100               	movlb	0	; () banked
 21890  002060  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 21891  002062  0E02               	movlw	high _loRa
 21892  002064  0100               	movlb	0	; () banked
 21893  002066  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 21894  002068  0EA8               	movlw	168
 21895  00206A  0100               	movlb	0	; () banked
 21896  00206C  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21897  00206E  0E00               	movlw	0
 21898  002070  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21899  002072  50F3               	movf	prodl,w,c
 21900  002074  0100               	movlb	0	; () banked
 21901  002076  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 21902  002078  50F4               	movf	prodh,w,c
 21903  00207A  0100               	movlb	0	; () banked
 21904  00207C  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 21905  00207E  0E01               	movlw	1
 21906  002080  0100               	movlb	0	; () banked
 21907  002082  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 21908  002084  6ED9               	movwf	fsr2l,c
 21909  002086  0E00               	movlw	0
 21910  002088  0100               	movlb	0	; () banked
 21911  00208A  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 21912  00208C  6EDA               	movwf	fsr2h,c
 21913  00208E  0102               	movlb	2	; () banked
 21914  002090  AADF               	btfss	indf2,5,c
 21915  002092  D045               	goto	l14677
 21916  002094                     l14661:
 21917                           
 21918                           ; BSR set to: 2
 21919                           ;lorawan.c: 1898: {
 21920                           ;lorawan.c: 1899: macBuffer[bufferIndex] |= 0x04;
 21921  002094  0100               	movlb	0	; () banked
 21922  002096  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21923  002098  0D01               	mullw	1
 21924  00209A  50F3               	movf	prodl,w,c
 21925  00209C  0100               	movlb	0	; () banked
 21926  00209E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21927  0020A0  6ED9               	movwf	fsr2l,c
 21928  0020A2  50F4               	movf	prodh,w,c
 21929  0020A4  0100               	movlb	0	; () banked
 21930  0020A6  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21931  0020A8  6EDA               	movwf	fsr2h,c
 21932  0020AA  0E00               	movlw	0
 21933  0020AC  84DB               	bsf	plusw2,2,c
 21934  0020AE  D037               	goto	l14677
 21935  0020B0                     l14665:
 21936                           
 21937                           ; BSR set to: 0
 21938                           ;lorawan.c: 1907: {
 21939                           ;lorawan.c: 1908: macBuffer[bufferIndex++] = DEV_STATUS_CID;
 21940  0020B0  0100               	movlb	0	; () banked
 21941  0020B2  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21942  0020B4  0D01               	mullw	1
 21943  0020B6  50F3               	movf	prodl,w,c
 21944  0020B8  0100               	movlb	0	; () banked
 21945  0020BA  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21946  0020BC  6ED9               	movwf	fsr2l,c
 21947  0020BE  50F4               	movf	prodh,w,c
 21948  0020C0  0100               	movlb	0	; () banked
 21949  0020C2  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21950  0020C4  6EDA               	movwf	fsr2h,c
 21951  0020C6  0E06               	movlw	6
 21952  0020C8  6EDF               	movwf	indf2,c
 21953                           
 21954                           ; BSR set to: 0
 21955  0020CA  0100               	movlb	0	; () banked
 21956  0020CC  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21957                           
 21958                           ; BSR set to: 0
 21959                           ;lorawan.c: 1909: macBuffer[bufferIndex++] = loRa.batteryLevel;
 21960  0020CE  0100               	movlb	0	; () banked
 21961  0020D0  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21962  0020D2  0D01               	mullw	1
 21963  0020D4  50F3               	movf	prodl,w,c
 21964  0020D6  0100               	movlb	0	; () banked
 21965  0020D8  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21966  0020DA  6ED9               	movwf	fsr2l,c
 21967  0020DC  50F4               	movf	prodh,w,c
 21968  0020DE  0100               	movlb	0	; () banked
 21969  0020E0  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 21970  0020E2  6EDA               	movwf	fsr2h,c
 21971  0020E4  C2E0  FFDF         	movff	_loRa+224,indf2
 21972  0020E8  0100               	movlb	0	; () banked
 21973  0020EA  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 21974                           
 21975                           ; BSR set to: 0
 21976                           ;lorawan.c: 1910: if ((RADIO_GetPacketSnr() < -32) || (RADIO_GetPacketSnr() > 31))
 21977  0020EC  EC1E  F052         	call	_RADIO_GetPacketSnr	;wreg free
 21978  0020F0  0A80               	xorlw	128
 21979  0020F2  0FA0               	addlw	160
 21980  0020F4  A0D8               	btfss	status,0,c
 21981  0020F6  D006               	goto	l14675
 21982  0020F8  EC1E  F052         	call	_RADIO_GetPacketSnr	;wreg free
 21983  0020FC  0A80               	xorlw	128
 21984  0020FE  0F60               	addlw	-160
 21985  002100  A0D8               	btfss	status,0,c
 21986  002102  D010               	goto	l14679
 21987  002104                     l14675:
 21988                           
 21989                           ;lorawan.c: 1911: {
 21990                           ;lorawan.c: 1912: macBuffer[bufferIndex++] = 0x20;
 21991  002104  0100               	movlb	0	; () banked
 21992  002106  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 21993  002108  0D01               	mullw	1
 21994  00210A  50F3               	movf	prodl,w,c
 21995  00210C  0100               	movlb	0	; () banked
 21996  00210E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 21997  002110  6ED9               	movwf	fsr2l,c
 21998  002112  50F4               	movf	prodh,w,c
 21999  002114  0100               	movlb	0	; () banked
 22000  002116  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22001  002118  6EDA               	movwf	fsr2h,c
 22002  00211A  0E20               	movlw	32
 22003  00211C  D011               	goto	L11
 22004  00211E                     l14677:
 22005                           
 22006                           ; BSR set to: 0
 22007  00211E  0100               	movlb	0	; () banked
 22008  002120  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22009                           
 22010                           ;lorawan.c: 1913: }
 22011  002122  D0C0               	goto	l14711
 22012  002124                     l14679:
 22013                           
 22014                           ;lorawan.c: 1914: else
 22015                           ;lorawan.c: 1915: {
 22016                           ;lorawan.c: 1916: macBuffer[bufferIndex++] = ((uint8_t)RADIO_GetPacketSnr() & 0x3F);
 22017  002124  0100               	movlb	0	; () banked
 22018  002126  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22019  002128  0D01               	mullw	1
 22020  00212A  50F3               	movf	prodl,w,c
 22021  00212C  0100               	movlb	0	; () banked
 22022  00212E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22023  002130  6ED9               	movwf	fsr2l,c
 22024  002132  50F4               	movf	prodh,w,c
 22025  002134  0100               	movlb	0	; () banked
 22026  002136  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22027  002138  6EDA               	movwf	fsr2h,c
 22028  00213A  EC1E  F052         	call	_RADIO_GetPacketSnr	;wreg free
 22029  00213E  0B3F               	andlw	63
 22030  002140                     L11:
 22031  002140  6EDF               	movwf	indf2,c
 22032  002142  D7ED               	goto	l14677
 22033  002144                     l14683:
 22034                           
 22035                           ; BSR set to: 0
 22036                           ;lorawan.c: 1922: {
 22037                           ;lorawan.c: 1923: macBuffer[bufferIndex++] = NEW_CHANNEL_CID;
 22038  002144  0100               	movlb	0	; () banked
 22039  002146  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22040  002148  0D01               	mullw	1
 22041  00214A  50F3               	movf	prodl,w,c
 22042  00214C  0100               	movlb	0	; () banked
 22043  00214E  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22044  002150  6ED9               	movwf	fsr2l,c
 22045  002152  50F4               	movf	prodh,w,c
 22046  002154  0100               	movlb	0	; () banked
 22047  002156  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22048  002158  6EDA               	movwf	fsr2h,c
 22049  00215A  0E07               	movlw	7
 22050  00215C  6EDF               	movwf	indf2,c
 22051                           
 22052                           ; BSR set to: 0
 22053  00215E  0100               	movlb	0	; () banked
 22054  002160  2B72               	incf	IncludeMacCommandsResponse@bufferIndex& (0+255),f,b
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;lorawan.c: 1924: macBuffer[bufferIndex] = 0x00;
 22058  002162  0100               	movlb	0	; () banked
 22059  002164  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22060  002166  0D01               	mullw	1
 22061  002168  50F3               	movf	prodl,w,c
 22062  00216A  0100               	movlb	0	; () banked
 22063  00216C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22064  00216E  6ED9               	movwf	fsr2l,c
 22065  002170  50F4               	movf	prodh,w,c
 22066  002172  0100               	movlb	0	; () banked
 22067  002174  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22068  002176  6EDA               	movwf	fsr2h,c
 22069  002178  0E00               	movlw	0
 22070  00217A  6EDF               	movwf	indf2,c
 22071                           
 22072                           ; BSR set to: 0
 22073                           ;lorawan.c: 1925: if (loRa.macCommands[i].channelFrequencyAck == 1)
 22074  00217C  0100               	movlb	0	; () banked
 22075  00217E  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22076  002180  0D02               	mullw	2
 22077  002182  0E00               	movlw	low _loRa
 22078  002184  0100               	movlb	0	; () banked
 22079  002186  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22080  002188  0E02               	movlw	high _loRa
 22081  00218A  0100               	movlb	0	; () banked
 22082  00218C  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22083  00218E  0EA8               	movlw	168
 22084  002190  0100               	movlb	0	; () banked
 22085  002192  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22086  002194  0E00               	movlw	0
 22087  002196  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22088  002198  50F3               	movf	prodl,w,c
 22089  00219A  0100               	movlb	0	; () banked
 22090  00219C  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22091  00219E  50F4               	movf	prodh,w,c
 22092  0021A0  0100               	movlb	0	; () banked
 22093  0021A2  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22094  0021A4  0E01               	movlw	1
 22095  0021A6  0100               	movlb	0	; () banked
 22096  0021A8  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22097  0021AA  6ED9               	movwf	fsr2l,c
 22098  0021AC  0E00               	movlw	0
 22099  0021AE  0100               	movlb	0	; () banked
 22100  0021B0  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22101  0021B2  6EDA               	movwf	fsr2h,c
 22102  0021B4  0102               	movlb	2	; () banked
 22103  0021B6  AEDF               	btfss	indf2,7,c
 22104  0021B8  D00D               	goto	l2229
 22105                           
 22106                           ; BSR set to: 2
 22107                           ;lorawan.c: 1926: {
 22108                           ;lorawan.c: 1927: macBuffer[bufferIndex] |= 0x01;
 22109  0021BA  0100               	movlb	0	; () banked
 22110  0021BC  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22111  0021BE  0D01               	mullw	1
 22112  0021C0  50F3               	movf	prodl,w,c
 22113  0021C2  0100               	movlb	0	; () banked
 22114  0021C4  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22115  0021C6  6ED9               	movwf	fsr2l,c
 22116  0021C8  50F4               	movf	prodh,w,c
 22117  0021CA  0100               	movlb	0	; () banked
 22118  0021CC  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22119  0021CE  6EDA               	movwf	fsr2h,c
 22120  0021D0  0E00               	movlw	0
 22121  0021D2  80DB               	bsf	plusw2,0,c
 22122  0021D4                     l2229:
 22123                           
 22124                           ;lorawan.c: 1928: }
 22125                           ;lorawan.c: 1930: if (loRa.macCommands[i].dataRateRangeAck == 1)
 22126  0021D4  0100               	movlb	0	; () banked
 22127  0021D6  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22128  0021D8  0D02               	mullw	2
 22129  0021DA  0E00               	movlw	low _loRa
 22130  0021DC  0100               	movlb	0	; () banked
 22131  0021DE  6F69               	movwf	??_IncludeMacCommandsResponse& (0+255),b
 22132  0021E0  0E02               	movlw	high _loRa
 22133  0021E2  0100               	movlb	0	; () banked
 22134  0021E4  6F6A               	movwf	(??_IncludeMacCommandsResponse+1)& (0+255),b
 22135  0021E6  0EA8               	movlw	168
 22136  0021E8  0100               	movlb	0	; () banked
 22137  0021EA  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22138  0021EC  0E00               	movlw	0
 22139  0021EE  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22140  0021F0  50F3               	movf	prodl,w,c
 22141  0021F2  0100               	movlb	0	; () banked
 22142  0021F4  2769               	addwf	??_IncludeMacCommandsResponse& (0+255),f,b
 22143  0021F6  50F4               	movf	prodh,w,c
 22144  0021F8  0100               	movlb	0	; () banked
 22145  0021FA  236A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),f,b
 22146  0021FC  0E01               	movlw	1
 22147  0021FE  0100               	movlb	0	; () banked
 22148  002200  2569               	addwf	??_IncludeMacCommandsResponse& (0+255),w,b
 22149  002202  6ED9               	movwf	fsr2l,c
 22150  002204  0E00               	movlw	0
 22151  002206  0100               	movlb	0	; () banked
 22152  002208  216A               	addwfc	(??_IncludeMacCommandsResponse+1)& (0+255),w,b
 22153  00220A  6EDA               	movwf	fsr2h,c
 22154  00220C  0102               	movlb	2	; () banked
 22155  00220E  ACDF               	btfss	indf2,6,c
 22156  002210  D786               	goto	l14677
 22157                           
 22158                           ; BSR set to: 2
 22159                           ;lorawan.c: 1931: {
 22160                           ;lorawan.c: 1932: macBuffer[bufferIndex] |= 0x02;
 22161  002212  0100               	movlb	0	; () banked
 22162  002214  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22163  002216  0D01               	mullw	1
 22164  002218  50F3               	movf	prodl,w,c
 22165  00221A  0100               	movlb	0	; () banked
 22166  00221C  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22167  00221E  6ED9               	movwf	fsr2l,c
 22168  002220  50F4               	movf	prodh,w,c
 22169  002222  0100               	movlb	0	; () banked
 22170  002224  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22171  002226  6EDA               	movwf	fsr2h,c
 22172  002228  0E00               	movlw	0
 22173  00222A  82DB               	bsf	plusw2,1,c
 22174  00222C  D778               	goto	l14677
 22175  00222E                     l2231:
 22176                           
 22177                           ; BSR set to: 0
 22178                           ;lorawan.c: 1939: {
 22179                           ;lorawan.c: 1940: loRa.linkCheckMargin = 255;
 22180  00222E  0102               	movlb	2	; () banked
 22181  002230  69DD               	setf	(_loRa+221)& (0+255),b
 22182                           
 22183                           ; BSR set to: 2
 22184                           ;lorawan.c: 1941: loRa.linkCheckGwCnt = 0;
 22185  002232  0E00               	movlw	0
 22186  002234  0102               	movlb	2	; () banked
 22187  002236  6FDE               	movwf	(_loRa+222)& (0+255),b
 22188  002238                     l14703:
 22189                           
 22190                           ; BSR set to: 0
 22191                           ;lorawan.c: 1947: case DUTY_CYCLE_CID:
 22192                           ;lorawan.c: 1948: {
 22193                           ;lorawan.c: 1949: macBuffer[bufferIndex++] = loRa.macCommands[i].receivedCid;
 22194  002238  0100               	movlb	0	; () banked
 22195  00223A  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22196  00223C  0D02               	mullw	2
 22197  00223E  0EA8               	movlw	low (_loRa+168)
 22198  002240  24F3               	addwf	prodl,w,c
 22199  002242  6ED9               	movwf	fsr2l,c
 22200  002244  0E02               	movlw	high (_loRa+168)
 22201  002246  20F4               	addwfc	prodh,w,c
 22202  002248  6EDA               	movwf	fsr2h,c
 22203  00224A  0100               	movlb	0	; () banked
 22204  00224C  5172               	movf	IncludeMacCommandsResponse@bufferIndex& (0+255),w,b
 22205  00224E  0D01               	mullw	1
 22206  002250  50F3               	movf	prodl,w,c
 22207  002252  0100               	movlb	0	; () banked
 22208  002254  2564               	addwf	IncludeMacCommandsResponse@macBuffer& (0+255),w,b
 22209  002256  6EE9               	movwf	fsr0l,c
 22210  002258  50F4               	movf	prodh,w,c
 22211  00225A  0100               	movlb	0	; () banked
 22212  00225C  2165               	addwfc	(IncludeMacCommandsResponse@macBuffer+1)& (0+255),w,b
 22213  00225E  6EEA               	movwf	fsr0h,c
 22214  002260  CFDF FFEF          	movff	indf2,indf0
 22215  002264  D75C               	goto	l14677
 22216  002266                     l14709:
 22217                           
 22218                           ; BSR set to: 0
 22219  002266  0100               	movlb	0	; () banked
 22220  002268  5171               	movf	IncludeMacCommandsResponse@i& (0+255),w,b
 22221  00226A  0D02               	mullw	2
 22222  00226C  0EA8               	movlw	low (_loRa+168)
 22223  00226E  24F3               	addwf	prodl,w,c
 22224  002270  6ED9               	movwf	fsr2l,c
 22225  002272  0E02               	movlw	high (_loRa+168)
 22226  002274  20F4               	addwfc	prodh,w,c
 22227  002276  6EDA               	movwf	fsr2h,c
 22228  002278  50DF               	movf	indf2,w,c
 22229                           
 22230                           ; Switch size 1, requested type "space"
 22231                           ; Number of cases is 7, Range of values is 2 to 8
 22232                           ; switch strategies available:
 22233                           ; Name         Instructions Cycles
 22234                           ; simple_byte           22    12 (average)
 22235                           ;	Chosen strategy is simple_byte
 22236  00227A  0A02               	xorlw	2	; case 2
 22237  00227C  B4D8               	btfsc	status,2,c
 22238  00227E  D7D7               	goto	l2231
 22239  002280  0A01               	xorlw	1	; case 3
 22240  002282  B4D8               	btfsc	status,2,c
 22241  002284  D5E0               	goto	l14633
 22242  002286  0A07               	xorlw	7	; case 4
 22243  002288  B4D8               	btfsc	status,2,c
 22244  00228A  D7D6               	goto	l14703
 22245  00228C  0A01               	xorlw	1	; case 5
 22246  00228E  B4D8               	btfsc	status,2,c
 22247  002290  D66E               	goto	l14649
 22248  002292  0A03               	xorlw	3	; case 6
 22249  002294  B4D8               	btfsc	status,2,c
 22250  002296  D70C               	goto	l14665
 22251  002298  0A01               	xorlw	1	; case 7
 22252  00229A  B4D8               	btfsc	status,2,c
 22253  00229C  D753               	goto	l14683
 22254  00229E  0A0F               	xorlw	15	; case 8
 22255  0022A0  B4D8               	btfsc	status,2,c
 22256  0022A2  D7CA               	goto	l14703
 22257  0022A4                     l14711:
 22258                           
 22259                           ; BSR set to: 0
 22260  0022A4  0100               	movlb	0	; () banked
 22261  0022A6  2B71               	incf	IncludeMacCommandsResponse@i& (0+255),f,b
 22262  0022A8                     l14713:
 22263                           
 22264                           ; BSR set to: 0
 22265  0022A8  0102               	movlb	2	; () banked
 22266  0022AA  51A7               	movf	(_loRa+167)& (0+255),w,b
 22267  0022AC  0100               	movlb	0	; () banked
 22268  0022AE  5D71               	subwf	IncludeMacCommandsResponse@i& (0+255),w,b
 22269  0022B0  A0D8               	btfss	status,0,c
 22270  0022B2  D567               	goto	l14625
 22271  0022B4                     l14715:
 22272                           
 22273                           ; BSR set to: 0
 22274                           ;lorawan.c: 1957: }
 22275                           ;lorawan.c: 1959: *pBufferIndex = bufferIndex;
 22276  0022B4  C066  FFD9         	movff	IncludeMacCommandsResponse@pBufferIndex,fsr2l
 22277  0022B8  C067  FFDA         	movff	IncludeMacCommandsResponse@pBufferIndex+1,fsr2h
 22278  0022BC  C072  FFDF         	movff	IncludeMacCommandsResponse@bufferIndex,indf2
 22279                           
 22280                           ; BSR set to: 0
 22281  0022C0  0012               	return		;funcret
 22282  0022C2                     __end_of_IncludeMacCommandsResponse:
 22283                           	opt stack 0
 22284                           tosu	equ	0xFFF
 22285                           tosh	equ	0xFFE
 22286                           tosl	equ	0xFFD
 22287                           pclath	equ	0xFFA
 22288                           tblptru	equ	0xFF8
 22289                           tblptrh	equ	0xFF7
 22290                           tblptrl	equ	0xFF6
 22291                           tablat	equ	0xFF5
 22292                           prodh	equ	0xFF4
 22293                           prodl	equ	0xFF3
 22294                           intcon	equ	0xFF2
 22295                           intcon2	equ	0xFF1
 22296                           intcon3	equ	0xFF0
 22297                           indf0	equ	0xFEF
 22298                           postinc0	equ	0xFEE
 22299                           fsr0h	equ	0xFEA
 22300                           fsr0l	equ	0xFE9
 22301                           wreg	equ	0xFE8
 22302                           postinc1	equ	0xFE6
 22303                           postdec1	equ	0xFE5
 22304                           plusw1	equ	0xFE3
 22305                           fsr1h	equ	0xFE2
 22306                           fsr1l	equ	0xFE1
 22307                           indf2	equ	0xFDF
 22308                           postinc2	equ	0xFDE
 22309                           postdec2	equ	0xFDD
 22310                           plusw2	equ	0xFDB
 22311                           fsr2h	equ	0xFDA
 22312                           fsr2l	equ	0xFD9
 22313                           status	equ	0xFD8
 22314                           
 22315 ;; *************** function _RADIO_GetPacketSnr *****************
 22316 ;; Defined at:
 22317 ;;		line 1429 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 22318 ;; Parameters:    Size  Location     Type
 22319 ;;		None
 22320 ;; Auto vars:     Size  Location     Type
 22321 ;;		None
 22322 ;; Return value:  Size  Location     Type
 22323 ;;                  1    wreg      char 
 22324 ;; Registers used:
 22325 ;;		wreg, status,2
 22326 ;; Tracked objects:
 22327 ;;		On entry : 0/0
 22328 ;;		On exit  : 0/0
 22329 ;;		Unchanged: 0/0
 22330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22333 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22334 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22335 ;;Total ram usage:        0 bytes
 22336 ;; Hardware stack levels used:    1
 22337 ;; Hardware stack levels required when called:    7
 22338 ;; This function calls:
 22339 ;;		Nothing
 22340 ;; This function is called by:
 22341 ;;		_IncludeMacCommandsResponse
 22342 ;; This function uses a non-reentrant model
 22343 ;;
 22344                           
 22345                           	psect	text98
 22346  00A43C                     __ptext98:
 22347                           	opt stack 0
 22348  00A43C                     _RADIO_GetPacketSnr:
 22349                           	opt stack 19
 22350                           
 22351                           ;radio_driver_SX1276.c: 1431: return RadioConfiguration.packetSNR;
 22352                           
 22353                           ; BSR set to: 0
 22354                           ;incstack = 0
 22355  00A43C  0101               	movlb	1	; () banked
 22356  00A43E  51BE               	movf	(_RadioConfiguration+50)& (0+255),w,b
 22357  00A440  0012               	return	
 22358  00A442                     __end_of_RADIO_GetPacketSnr:
 22359                           	opt stack 0
 22360                           tosu	equ	0xFFF
 22361                           tosh	equ	0xFFE
 22362                           tosl	equ	0xFFD
 22363                           pclath	equ	0xFFA
 22364                           tblptru	equ	0xFF8
 22365                           tblptrh	equ	0xFF7
 22366                           tblptrl	equ	0xFF6
 22367                           tablat	equ	0xFF5
 22368                           prodh	equ	0xFF4
 22369                           prodl	equ	0xFF3
 22370                           intcon	equ	0xFF2
 22371                           intcon2	equ	0xFF1
 22372                           intcon3	equ	0xFF0
 22373                           indf0	equ	0xFEF
 22374                           postinc0	equ	0xFEE
 22375                           fsr0h	equ	0xFEA
 22376                           fsr0l	equ	0xFE9
 22377                           wreg	equ	0xFE8
 22378                           postinc1	equ	0xFE6
 22379                           postdec1	equ	0xFE5
 22380                           plusw1	equ	0xFE3
 22381                           fsr1h	equ	0xFE2
 22382                           fsr1l	equ	0xFE1
 22383                           indf2	equ	0xFDF
 22384                           postinc2	equ	0xFDE
 22385                           postdec2	equ	0xFDD
 22386                           plusw2	equ	0xFDB
 22387                           fsr2h	equ	0xFDA
 22388                           fsr2l	equ	0xFD9
 22389                           status	equ	0xFD8
 22390                           
 22391 ;; *************** function _FindSmallestDataRate *****************
 22392 ;; Defined at:
 22393 ;;		line 1963 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22394 ;; Parameters:    Size  Location     Type
 22395 ;;		None
 22396 ;; Auto vars:     Size  Location     Type
 22397 ;;  dataRate        1    7[BANK0 ] unsigned char 
 22398 ;;  i               1    6[BANK0 ] unsigned char 
 22399 ;;  found           1    5[BANK0 ] unsigned char 
 22400 ;; Return value:  Size  Location     Type
 22401 ;;                  1    wreg      unsigned char 
 22402 ;; Registers used:
 22403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 22404 ;; Tracked objects:
 22405 ;;		On entry : 0/0
 22406 ;;		On exit  : 0/0
 22407 ;;		Unchanged: 0/0
 22408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22410 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22411 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22412 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22413 ;;Total ram usage:        4 bytes
 22414 ;; Hardware stack levels used:    1
 22415 ;; Hardware stack levels required when called:    7
 22416 ;; This function calls:
 22417 ;;		Nothing
 22418 ;; This function is called by:
 22419 ;;		_AckRetransmissionCallback
 22420 ;;		_AssemblePacket
 22421 ;; This function uses a non-reentrant model
 22422 ;;
 22423                           
 22424                           	psect	text99
 22425  0072C4                     __ptext99:
 22426                           	opt stack 0
 22427  0072C4                     _FindSmallestDataRate:
 22428                           	opt stack 20
 22429                           
 22430                           ;lorawan.c: 1965: uint8_t i = 0, dataRate;
 22431                           
 22432                           ; BSR set to: 1
 22433                           ;incstack = 0
 22434  0072C4  0E00               	movlw	0
 22435  0072C6  0100               	movlb	0	; () banked
 22436  0072C8  6F66               	movwf	FindSmallestDataRate@i& (0+255),b
 22437                           
 22438                           ;lorawan.c: 1966: bool found = 0;
 22439  0072CA  0E00               	movlw	0
 22440  0072CC  0100               	movlb	0	; () banked
 22441  0072CE  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 22442                           
 22443                           ; BSR set to: 0
 22444                           ;lorawan.c: 1968: if (loRa.currentDataRate > loRa.minDataRate)
 22445  0072D0  0102               	movlb	2	; () banked
 22446  0072D2  51DF               	movf	(_loRa+223)& (0+255),w,b
 22447  0072D4  0102               	movlb	2	; () banked
 22448  0072D6  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 22449  0072D8  B0D8               	btfsc	status,0,c
 22450  0072DA  D072               	goto	l14551
 22451                           
 22452                           ; BSR set to: 2
 22453                           ;lorawan.c: 1969: {
 22454                           ;lorawan.c: 1970: dataRate = loRa.currentDataRate - 1;
 22455  0072DC  0102               	movlb	2	; () banked
 22456  0072DE  05DF               	decf	(_loRa+223)& (0+255),w,b
 22457  0072E0  D05D               	goto	L12
 22458  0072E2                     l14523:
 22459                           
 22460                           ; BSR set to: 0
 22461                           ;lorawan.c: 1973: {
 22462                           ;lorawan.c: 1974: for ( i = 0; i < loRa.maxChannels; i++ )
 22463  0072E2  0E00               	movlw	0
 22464  0072E4  0100               	movlb	0	; () banked
 22465  0072E6  6F66               	movwf	FindSmallestDataRate@i& (0+255),b
 22466  0072E8  D046               	goto	l14535
 22467  0072EA                     l14525:
 22468                           
 22469                           ; BSR set to: 0
 22470                           ;lorawan.c: 1975: {
 22471                           ;lorawan.c: 1976: if ( (dataRate >= Channels[i].dataRange.min) && (dataRate <= Channels[
      +                          i].dataRange.max ) && ( Channels[i].status == 1 ) )
 22472  0072EA  0100               	movlb	0	; () banked
 22473  0072EC  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22474  0072EE  0D0E               	mullw	14
 22475  0072F0  0E05               	movlw	5
 22476  0072F2  26F3               	addwf	prodl,f,c
 22477  0072F4  0E00               	movlw	0
 22478  0072F6  22F4               	addwfc	prodh,f,c
 22479  0072F8  0E00               	movlw	low _Channels
 22480  0072FA  24F3               	addwf	prodl,w,c
 22481  0072FC  6ED9               	movwf	fsr2l,c
 22482  0072FE  0E04               	movlw	high _Channels
 22483  007300  20F4               	addwfc	prodh,w,c
 22484  007302  6EDA               	movwf	fsr2h,c
 22485  007304  0104               	movlb	4	; () banked
 22486  007306  50DF               	movf	223,w,c
 22487  007308  0B0F               	andlw	15
 22488  00730A  0100               	movlb	0	; () banked
 22489  00730C  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 22490  00730E  0100               	movlb	0	; () banked
 22491  007310  5164               	movf	??_FindSmallestDataRate& (0+255),w,b
 22492  007312  0100               	movlb	0	; () banked
 22493  007314  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 22494  007316  A0D8               	btfss	status,0,c
 22495  007318  D02C               	goto	l14533
 22496                           
 22497                           ; BSR set to: 0
 22498  00731A  0100               	movlb	0	; () banked
 22499  00731C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22500  00731E  0D0E               	mullw	14
 22501  007320  0E05               	movlw	5
 22502  007322  26F3               	addwf	prodl,f,c
 22503  007324  0E00               	movlw	0
 22504  007326  22F4               	addwfc	prodh,f,c
 22505  007328  0E00               	movlw	low _Channels
 22506  00732A  24F3               	addwf	prodl,w,c
 22507  00732C  6ED9               	movwf	fsr2l,c
 22508  00732E  0E04               	movlw	high _Channels
 22509  007330  20F4               	addwfc	prodh,w,c
 22510  007332  6EDA               	movwf	fsr2h,c
 22511  007334  0104               	movlb	4	; () banked
 22512  007336  38DF               	swapf	223,w,c
 22513  007338  0B0F               	andlw	15
 22514  00733A  0100               	movlb	0	; () banked
 22515  00733C  6F64               	movwf	??_FindSmallestDataRate& (0+255),b
 22516  00733E  0100               	movlb	0	; () banked
 22517  007340  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 22518  007342  0100               	movlb	0	; () banked
 22519  007344  5D64               	subwf	??_FindSmallestDataRate& (0+255),w,b
 22520  007346  A0D8               	btfss	status,0,c
 22521  007348  D014               	goto	l14533
 22522                           
 22523                           ; BSR set to: 0
 22524  00734A  0100               	movlb	0	; () banked
 22525  00734C  5166               	movf	FindSmallestDataRate@i& (0+255),w,b
 22526  00734E  0D0E               	mullw	14
 22527  007350  0E04               	movlw	4
 22528  007352  26F3               	addwf	prodl,f,c
 22529  007354  0E00               	movlw	0
 22530  007356  22F4               	addwfc	prodh,f,c
 22531  007358  0E00               	movlw	low _Channels
 22532  00735A  24F3               	addwf	prodl,w,c
 22533  00735C  6ED9               	movwf	fsr2l,c
 22534  00735E  0E04               	movlw	high _Channels
 22535  007360  20F4               	addwfc	prodh,w,c
 22536  007362  6EDA               	movwf	fsr2h,c
 22537  007364  04DE               	decf	postinc2,w,c
 22538  007366  A4D8               	btfss	status,2,c
 22539  007368  D004               	goto	l14533
 22540                           
 22541                           ; BSR set to: 0
 22542                           ;lorawan.c: 1977: {
 22543                           ;lorawan.c: 1978: found = 1;
 22544  00736A  0E01               	movlw	1
 22545  00736C  0100               	movlb	0	; () banked
 22546  00736E  6F65               	movwf	FindSmallestDataRate@found& (0+255),b
 22547                           
 22548                           ;lorawan.c: 1979: break;
 22549  007370  D008               	goto	l14537
 22550  007372                     l14533:
 22551                           
 22552                           ; BSR set to: 0
 22553  007372  0100               	movlb	0	; () banked
 22554  007374  2B66               	incf	FindSmallestDataRate@i& (0+255),f,b
 22555  007376                     l14535:
 22556                           
 22557                           ; BSR set to: 0
 22558  007376  0102               	movlb	2	; () banked
 22559  007378  51ED               	movf	(_loRa+237)& (0+255),w,b
 22560  00737A  0100               	movlb	0	; () banked
 22561  00737C  5D66               	subwf	FindSmallestDataRate@i& (0+255),w,b
 22562  00737E  A0D8               	btfss	status,0,c
 22563  007380  D7B4               	goto	l14525
 22564  007382                     l14537:
 22565                           
 22566                           ; BSR set to: 0
 22567                           ;lorawan.c: 1980: }
 22568                           ;lorawan.c: 1981: }
 22569                           ;lorawan.c: 1982: if ( (found == 0) && (dataRate > loRa.minDataRate) )
 22570  007382  0100               	movlb	0	; () banked
 22571  007384  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22572  007386  0100               	movlb	0	; () banked
 22573  007388  A4D8               	btfss	status,2,c
 22574  00738A  D00A               	goto	l14543
 22575                           
 22576                           ; BSR set to: 0
 22577  00738C  0100               	movlb	0	; () banked
 22578  00738E  5167               	movf	FindSmallestDataRate@dataRate& (0+255),w,b
 22579  007390  0102               	movlb	2	; () banked
 22580  007392  5DEB               	subwf	(_loRa+235)& (0+255),w,b
 22581  007394  B0D8               	btfsc	status,0,c
 22582  007396  D004               	goto	l14543
 22583                           
 22584                           ; BSR set to: 2
 22585                           ;lorawan.c: 1983: {
 22586                           ;lorawan.c: 1984: dataRate = dataRate - 1;
 22587  007398  0100               	movlb	0	; () banked
 22588  00739A  0567               	decf	FindSmallestDataRate@dataRate& (0+255),w,b
 22589  00739C                     L12:
 22590  00739C  0100               	movlb	0	; () banked
 22591  00739E  6F67               	movwf	FindSmallestDataRate@dataRate& (0+255),b
 22592  0073A0                     l14543:
 22593  0073A0  0100               	movlb	0	; () banked
 22594  0073A2  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22595  0073A4  0100               	movlb	0	; () banked
 22596  0073A6  A4D8               	btfss	status,2,c
 22597  0073A8  D006               	goto	l14547
 22598                           
 22599                           ; BSR set to: 0
 22600  0073AA  0102               	movlb	2	; () banked
 22601  0073AC  51EB               	movf	(_loRa+235)& (0+255),w,b
 22602  0073AE  0100               	movlb	0	; () banked
 22603  0073B0  5D67               	subwf	FindSmallestDataRate@dataRate& (0+255),w,b
 22604  0073B2  B0D8               	btfsc	status,0,c
 22605  0073B4  D796               	goto	l14523
 22606  0073B6                     l14547:
 22607                           
 22608                           ; BSR set to: 0
 22609                           ;lorawan.c: 1985: }
 22610                           ;lorawan.c: 1986: }
 22611                           ;lorawan.c: 1988: if (found == 1)
 22612  0073B6  0100               	movlb	0	; () banked
 22613  0073B8  0565               	decf	FindSmallestDataRate@found& (0+255),w,b
 22614  0073BA  B4D8               	btfsc	status,2,c
 22615                           
 22616                           ; BSR set to: 0
 22617                           ;lorawan.c: 1989: {
 22618                           ;lorawan.c: 1990: loRa.currentDataRate = dataRate;
 22619  0073BC  C067  F2DF         	movff	FindSmallestDataRate@dataRate,_loRa+223
 22620  0073C0                     l14551:
 22621                           
 22622                           ;lorawan.c: 1991: }
 22623                           ;lorawan.c: 1992: }
 22624                           ;lorawan.c: 1994: return found;
 22625  0073C0  0100               	movlb	0	; () banked
 22626  0073C2  5165               	movf	FindSmallestDataRate@found& (0+255),w,b
 22627  0073C4  0012               	return	
 22628  0073C6                     __end_of_FindSmallestDataRate:
 22629                           	opt stack 0
 22630                           tosu	equ	0xFFF
 22631                           tosh	equ	0xFFE
 22632                           tosl	equ	0xFFD
 22633                           pclath	equ	0xFFA
 22634                           tblptru	equ	0xFF8
 22635                           tblptrh	equ	0xFF7
 22636                           tblptrl	equ	0xFF6
 22637                           tablat	equ	0xFF5
 22638                           prodh	equ	0xFF4
 22639                           prodl	equ	0xFF3
 22640                           intcon	equ	0xFF2
 22641                           intcon2	equ	0xFF1
 22642                           intcon3	equ	0xFF0
 22643                           indf0	equ	0xFEF
 22644                           postinc0	equ	0xFEE
 22645                           fsr0h	equ	0xFEA
 22646                           fsr0l	equ	0xFE9
 22647                           wreg	equ	0xFE8
 22648                           postinc1	equ	0xFE6
 22649                           postdec1	equ	0xFE5
 22650                           plusw1	equ	0xFE3
 22651                           fsr1h	equ	0xFE2
 22652                           fsr1l	equ	0xFE1
 22653                           indf2	equ	0xFDF
 22654                           postinc2	equ	0xFDE
 22655                           postdec2	equ	0xFDD
 22656                           plusw2	equ	0xFDB
 22657                           fsr2h	equ	0xFDA
 22658                           fsr2l	equ	0xFD9
 22659                           status	equ	0xFD8
 22660                           
 22661 ;; *************** function _EncryptFRMPayload *****************
 22662 ;; Defined at:
 22663 ;;		line 2205 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 22664 ;; Parameters:    Size  Location     Type
 22665 ;;  buffer          2   69[BANK0 ] PTR unsigned char 
 22666 ;;		 -> payload(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 22667 ;;  bufferLength    1   71[BANK0 ] unsigned char 
 22668 ;;  dir             1   72[BANK0 ] unsigned char 
 22669 ;;  frameCounter    4   73[BANK0 ] unsigned long 
 22670 ;;  key             2   77[BANK0 ] PTR unsigned char 
 22671 ;;		 -> loRa.activationParameters(105), loRa(245), 
 22672 ;;  macBufferInd    1   79[BANK0 ] unsigned char 
 22673 ;;  bufferToBeEn    2   80[BANK0 ] PTR unsigned char 
 22674 ;;		 -> macBuffer(271), radioBuffer(271), 
 22675 ;;  multicastSta    1   82[BANK0 ] unsigned char 
 22676 ;; Auto vars:     Size  Location     Type
 22677 ;;  j               1   90[BANK0 ] unsigned char 
 22678 ;;  i               1   89[BANK0 ] unsigned char 
 22679 ;;  k               1   88[BANK0 ] unsigned char 
 22680 ;; Return value:  Size  Location     Type
 22681 ;;                  1    wreg      void 
 22682 ;; Registers used:
 22683 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22684 ;; Tracked objects:
 22685 ;;		On entry : 0/0
 22686 ;;		On exit  : 0/0
 22687 ;;		Unchanged: 0/0
 22688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 22689 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22690 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22691 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22692 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 22693 ;;Total ram usage:       22 bytes
 22694 ;; Hardware stack levels used:    1
 22695 ;; Hardware stack levels required when called:   10
 22696 ;; This function calls:
 22697 ;;		_AESEncodeLoRa
 22698 ;;		_AssembleEncryptionBlock
 22699 ;;		___awdiv
 22700 ;; This function is called by:
 22701 ;;		_LORAWAN_RxDone
 22702 ;;		_AssemblePacket
 22703 ;; This function uses a non-reentrant model
 22704 ;;
 22705                           
 22706                           	psect	text100
 22707  005444                     __ptext100:
 22708                           	opt stack 0
 22709  005444                     _EncryptFRMPayload:
 22710                           	opt stack 17
 22711                           
 22712                           ;lorawan.c: 2207: uint8_t k = 0, i = 0, j = 0;
 22713                           
 22714                           ; BSR set to: 0
 22715                           ;incstack = 0
 22716  005444  0E00               	movlw	0
 22717  005446  0100               	movlb	0	; () banked
 22718  005448  6FB8               	movwf	EncryptFRMPayload@k& (0+255),b
 22719  00544A  0E00               	movlw	0
 22720  00544C  0100               	movlb	0	; () banked
 22721  00544E  6FB9               	movwf	EncryptFRMPayload@i& (0+255),b
 22722  005450  0E00               	movlw	0
 22723  005452  0100               	movlb	0	; () banked
 22724  005454  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22725                           
 22726                           ; BSR set to: 0
 22727                           ;lorawan.c: 2209: k = bufferLength / 16;
 22728  005456  C0A7  F064         	movff	EncryptFRMPayload@bufferLength,___awdiv@dividend
 22729  00545A  0100               	movlb	0	; () banked
 22730  00545C  6B65               	clrf	(___awdiv@dividend+1)& (0+255),b
 22731  00545E  0E00               	movlw	0
 22732  005460  0100               	movlb	0	; () banked
 22733  005462  6F67               	movwf	(___awdiv@divisor+1)& (0+255),b
 22734  005464  0E10               	movlw	16
 22735  005466  6F66               	movwf	___awdiv@divisor& (0+255),b
 22736  005468  ECDC  F03E         	call	___awdiv	;wreg free
 22737  00546C  0100               	movlb	0	; () banked
 22738  00546E  5164               	movf	?___awdiv& (0+255),w,b
 22739  005470  0100               	movlb	0	; () banked
 22740  005472  6FB8               	movwf	EncryptFRMPayload@k& (0+255),b
 22741                           
 22742                           ; BSR set to: 0
 22743                           ;lorawan.c: 2210: for (i = 1; i <= k; i++)
 22744  005474  0E01               	movlw	1
 22745  005476  0100               	movlb	0	; () banked
 22746  005478  6FB9               	movwf	EncryptFRMPayload@i& (0+255),b
 22747  00547A  D076               	goto	l14587
 22748  00547C                     l14569:
 22749                           
 22750                           ; BSR set to: 0
 22751                           ;lorawan.c: 2211: {
 22752                           ;lorawan.c: 2212: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 22753  00547C  C0A9  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 22754  005480  C0AA  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 22755  005484  C0AB  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 22756  005488  C0AC  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 22757  00548C  C0B9  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 22758  005490  0E01               	movlw	1
 22759  005492  0100               	movlb	0	; () banked
 22760  005494  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 22761  005496  C0B2  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 22762  00549A  0100               	movlb	0	; () banked
 22763  00549C  51A8               	movf	EncryptFRMPayload@dir& (0+255),w,b
 22764  00549E  EC0F  F036         	call	_AssembleEncryptionBlock
 22765                           
 22766                           ;lorawan.c: 2213: AESEncodeLoRa(aesBuffer, key);
 22767  0054A2  0EC2               	movlw	low _aesBuffer
 22768  0054A4  0100               	movlb	0	; () banked
 22769  0054A6  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 22770  0054A8  0E01               	movlw	high _aesBuffer
 22771  0054AA  0100               	movlb	0	; () banked
 22772  0054AC  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22773  0054AE  C0AD  F093         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 22774  0054B2  C0AE  F094         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 22775  0054B6  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 22776                           
 22777                           ;lorawan.c: 2215: for (j = 0; j < 16; j++)
 22778  0054BA  0E00               	movlw	0
 22779  0054BC  0100               	movlb	0	; () banked
 22780  0054BE  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22781  0054C0                     l14573:
 22782                           
 22783                           ; BSR set to: 0
 22784  0054C0  0E0F               	movlw	15
 22785  0054C2  0100               	movlb	0	; () banked
 22786  0054C4  65BA               	cpfsgt	EncryptFRMPayload@j& (0+255),b
 22787  0054C6  D001               	goto	l14577
 22788  0054C8  D04D               	goto	l14585
 22789  0054CA                     l14577:
 22790                           
 22791                           ; BSR set to: 0
 22792                           ;lorawan.c: 2216: {
 22793                           ;lorawan.c: 2217: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[16*(i-1)
      +                           + j];
 22794  0054CA  0100               	movlb	0	; () banked
 22795  0054CC  51AF               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 22796  0054CE  0D01               	mullw	1
 22797  0054D0  50F3               	movf	prodl,w,c
 22798  0054D2  0100               	movlb	0	; () banked
 22799  0054D4  25B0               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 22800  0054D6  6ED9               	movwf	fsr2l,c
 22801  0054D8  50F4               	movf	prodh,w,c
 22802  0054DA  0100               	movlb	0	; () banked
 22803  0054DC  21B1               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 22804  0054DE  6EDA               	movwf	fsr2h,c
 22805  0054E0  0EF0               	movlw	240
 22806  0054E2  0100               	movlb	0	; () banked
 22807  0054E4  6FB3               	movwf	??_EncryptFRMPayload& (0+255),b
 22808  0054E6  0EFF               	movlw	255
 22809  0054E8  0100               	movlb	0	; () banked
 22810  0054EA  6FB4               	movwf	(??_EncryptFRMPayload+1)& (0+255),b
 22811  0054EC  0100               	movlb	0	; () banked
 22812  0054EE  51B9               	movf	EncryptFRMPayload@i& (0+255),w,b
 22813  0054F0  0100               	movlb	0	; () banked
 22814  0054F2  6FB5               	movwf	(??_EncryptFRMPayload+2)& (0+255),b
 22815  0054F4  6BB6               	clrf	(??_EncryptFRMPayload+3)& (0+255),b
 22816  0054F6  0100               	movlb	0	; () banked
 22817  0054F8  3BB5               	swapf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22818  0054FA  3BB6               	swapf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22819  0054FC  0EF0               	movlw	240
 22820  0054FE  17B6               	andwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22821  005500  51B5               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 22822  005502  0B0F               	andlw	15
 22823  005504  13B6               	iorwf	(??_EncryptFRMPayload+3)& (0+255),f,b
 22824  005506  0EF0               	movlw	240
 22825  005508  17B5               	andwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22826  00550A  0100               	movlb	0	; () banked
 22827  00550C  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22828  00550E  0100               	movlb	0	; () banked
 22829  005510  27B5               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22830  005512  0E00               	movlw	0
 22831  005514  23B6               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 22832  005516  0100               	movlb	0	; () banked
 22833  005518  51B3               	movf	??_EncryptFRMPayload& (0+255),w,b
 22834  00551A  0100               	movlb	0	; () banked
 22835  00551C  27B5               	addwf	(??_EncryptFRMPayload+2)& (0+255),f,b
 22836  00551E  0100               	movlb	0	; () banked
 22837  005520  51B4               	movf	(??_EncryptFRMPayload+1)& (0+255),w,b
 22838  005522  0100               	movlb	0	; () banked
 22839  005524  23B6               	addwfc	(??_EncryptFRMPayload+3)& (0+255),f,b
 22840  005526  0100               	movlb	0	; () banked
 22841  005528  51B5               	movf	(??_EncryptFRMPayload+2)& (0+255),w,b
 22842  00552A  0100               	movlb	0	; () banked
 22843  00552C  25A5               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 22844  00552E  6EE9               	movwf	fsr0l,c
 22845  005530  0100               	movlb	0	; () banked
 22846  005532  51B6               	movf	(??_EncryptFRMPayload+3)& (0+255),w,b
 22847  005534  0100               	movlb	0	; () banked
 22848  005536  21A6               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 22849  005538  6EEA               	movwf	fsr0h,c
 22850  00553A  50EF               	movf	indf0,w,c
 22851  00553C  0100               	movlb	0	; () banked
 22852  00553E  6FB7               	movwf	(??_EncryptFRMPayload+4)& (0+255),b
 22853  005540  0100               	movlb	0	; () banked
 22854  005542  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22855  005544  0D01               	mullw	1
 22856  005546  0EC2               	movlw	low _aesBuffer
 22857  005548  24F3               	addwf	prodl,w,c
 22858  00554A  6EE9               	movwf	fsr0l,c
 22859  00554C  0E01               	movlw	high _aesBuffer
 22860  00554E  20F4               	addwfc	prodh,w,c
 22861  005550  6EEA               	movwf	fsr0h,c
 22862  005552  50EF               	movf	indf0,w,c
 22863  005554  0100               	movlb	0	; () banked
 22864  005556  19B7               	xorwf	(??_EncryptFRMPayload+4)& (0+255),w,b
 22865  005558  6EDF               	movwf	indf2,c
 22866                           
 22867                           ; BSR set to: 0
 22868  00555A  0100               	movlb	0	; () banked
 22869  00555C  2BAF               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 22870                           
 22871                           ; BSR set to: 0
 22872  00555E  0100               	movlb	0	; () banked
 22873  005560  2BBA               	incf	EncryptFRMPayload@j& (0+255),f,b
 22874  005562  D7AE               	goto	l14573
 22875  005564                     l14585:
 22876                           
 22877                           ; BSR set to: 0
 22878  005564  0100               	movlb	0	; () banked
 22879  005566  2BB9               	incf	EncryptFRMPayload@i& (0+255),f,b
 22880  005568                     l14587:
 22881                           
 22882                           ; BSR set to: 0
 22883  005568  0100               	movlb	0	; () banked
 22884  00556A  51B9               	movf	EncryptFRMPayload@i& (0+255),w,b
 22885  00556C  0100               	movlb	0	; () banked
 22886  00556E  5DB8               	subwf	EncryptFRMPayload@k& (0+255),w,b
 22887  005570  B0D8               	btfsc	status,0,c
 22888  005572  D784               	goto	l14569
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;lorawan.c: 2218: }
 22892                           ;lorawan.c: 2219: }
 22893                           ;lorawan.c: 2221: if ( (bufferLength % 16) != 0 )
 22894                           
 22895                           ; BSR set to: 0
 22896  005574  C0A7  F0B3         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 22897  005578  0E0F               	movlw	15
 22898  00557A  0100               	movlb	0	; () banked
 22899  00557C  17B3               	andwf	??_EncryptFRMPayload& (0+255),f,b
 22900  00557E  B4D8               	btfsc	status,2,c
 22901  005580  0012               	return	
 22902                           
 22903                           ; BSR set to: 0
 22904                           ;lorawan.c: 2222: {
 22905                           ;lorawan.c: 2223: AssembleEncryptionBlock (dir, frameCounter, i, 0x01, multicastStatus);
 22906  005582  C0A9  F06E         	movff	EncryptFRMPayload@frameCounter,AssembleEncryptionBlock@frameCounter
 22907  005586  C0AA  F06F         	movff	EncryptFRMPayload@frameCounter+1,AssembleEncryptionBlock@frameCounter+1
 22908  00558A  C0AB  F070         	movff	EncryptFRMPayload@frameCounter+2,AssembleEncryptionBlock@frameCounter+2
 22909  00558E  C0AC  F071         	movff	EncryptFRMPayload@frameCounter+3,AssembleEncryptionBlock@frameCounter+3
 22910  005592  C0B9  F072         	movff	EncryptFRMPayload@i,AssembleEncryptionBlock@blockId
 22911  005596  0E01               	movlw	1
 22912  005598  0100               	movlb	0	; () banked
 22913  00559A  6F73               	movwf	AssembleEncryptionBlock@firstByte& (0+255),b
 22914  00559C  C0B2  F074         	movff	EncryptFRMPayload@multicastStatus,AssembleEncryptionBlock@multicastStatus
 22915  0055A0  0100               	movlb	0	; () banked
 22916  0055A2  51A8               	movf	EncryptFRMPayload@dir& (0+255),w,b
 22917  0055A4  EC0F  F036         	call	_AssembleEncryptionBlock
 22918                           
 22919                           ;lorawan.c: 2224: AESEncodeLoRa (aesBuffer, key);
 22920  0055A8  0EC2               	movlw	low _aesBuffer
 22921  0055AA  0100               	movlb	0	; () banked
 22922  0055AC  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 22923  0055AE  0E01               	movlw	high _aesBuffer
 22924  0055B0  0100               	movlb	0	; () banked
 22925  0055B2  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 22926  0055B4  C0AD  F093         	movff	EncryptFRMPayload@key,AESEncodeLoRa@key
 22927  0055B8  C0AE  F094         	movff	EncryptFRMPayload@key+1,AESEncodeLoRa@key+1
 22928  0055BC  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 22929                           
 22930                           ;lorawan.c: 2226: for (j = 0; j < (bufferLength % 16); j++)
 22931  0055C0  0E00               	movlw	0
 22932  0055C2  0100               	movlb	0	; () banked
 22933  0055C4  6FBA               	movwf	EncryptFRMPayload@j& (0+255),b
 22934  0055C6  D02F               	goto	l14601
 22935  0055C8                     l14595:
 22936                           
 22937                           ; BSR set to: 0
 22938                           ;lorawan.c: 2227: {
 22939                           ;lorawan.c: 2228: bufferToBeEncrypted[macBufferIndex++] = aesBuffer[j] ^ buffer[(16*k) +
      +                           j];
 22940  0055C8  0100               	movlb	0	; () banked
 22941  0055CA  51AF               	movf	EncryptFRMPayload@macBufferIndex& (0+255),w,b
 22942  0055CC  0D01               	mullw	1
 22943  0055CE  50F3               	movf	prodl,w,c
 22944  0055D0  0100               	movlb	0	; () banked
 22945  0055D2  25B0               	addwf	EncryptFRMPayload@bufferToBeEncrypted& (0+255),w,b
 22946  0055D4  6ED9               	movwf	fsr2l,c
 22947  0055D6  50F4               	movf	prodh,w,c
 22948  0055D8  0100               	movlb	0	; () banked
 22949  0055DA  21B1               	addwfc	(EncryptFRMPayload@bufferToBeEncrypted+1)& (0+255),w,b
 22950  0055DC  6EDA               	movwf	fsr2h,c
 22951  0055DE  0100               	movlb	0	; () banked
 22952  0055E0  51B8               	movf	EncryptFRMPayload@k& (0+255),w,b
 22953  0055E2  0D10               	mullw	16
 22954  0055E4  0100               	movlb	0	; () banked
 22955  0055E6  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22956  0055E8  26F3               	addwf	prodl,f,c
 22957  0055EA  0E00               	movlw	0
 22958  0055EC  22F4               	addwfc	prodh,f,c
 22959  0055EE  50F3               	movf	prodl,w,c
 22960  0055F0  0100               	movlb	0	; () banked
 22961  0055F2  25A5               	addwf	EncryptFRMPayload@buffer& (0+255),w,b
 22962  0055F4  6EE9               	movwf	fsr0l,c
 22963  0055F6  50F4               	movf	prodh,w,c
 22964  0055F8  0100               	movlb	0	; () banked
 22965  0055FA  21A6               	addwfc	(EncryptFRMPayload@buffer+1)& (0+255),w,b
 22966  0055FC  6EEA               	movwf	fsr0h,c
 22967  0055FE  50EF               	movf	indf0,w,c
 22968  005600  0100               	movlb	0	; () banked
 22969  005602  6FB3               	movwf	??_EncryptFRMPayload& (0+255),b
 22970  005604  0100               	movlb	0	; () banked
 22971  005606  51BA               	movf	EncryptFRMPayload@j& (0+255),w,b
 22972  005608  0D01               	mullw	1
 22973  00560A  0EC2               	movlw	low _aesBuffer
 22974  00560C  24F3               	addwf	prodl,w,c
 22975  00560E  6EE9               	movwf	fsr0l,c
 22976  005610  0E01               	movlw	high _aesBuffer
 22977  005612  20F4               	addwfc	prodh,w,c
 22978  005614  6EEA               	movwf	fsr0h,c
 22979  005616  50EF               	movf	indf0,w,c
 22980  005618  0100               	movlb	0	; () banked
 22981  00561A  19B3               	xorwf	??_EncryptFRMPayload& (0+255),w,b
 22982  00561C  6EDF               	movwf	indf2,c
 22983                           
 22984                           ; BSR set to: 0
 22985  00561E  0100               	movlb	0	; () banked
 22986  005620  2BAF               	incf	EncryptFRMPayload@macBufferIndex& (0+255),f,b
 22987                           
 22988                           ; BSR set to: 0
 22989  005622  0100               	movlb	0	; () banked
 22990  005624  2BBA               	incf	EncryptFRMPayload@j& (0+255),f,b
 22991  005626                     l14601:
 22992                           
 22993                           ; BSR set to: 0
 22994  005626  C0A7  F0B3         	movff	EncryptFRMPayload@bufferLength,??_EncryptFRMPayload
 22995  00562A  0E0F               	movlw	15
 22996  00562C  0100               	movlb	0	; () banked
 22997  00562E  17B3               	andwf	??_EncryptFRMPayload& (0+255),f,b
 22998  005630  0100               	movlb	0	; () banked
 22999  005632  51B3               	movf	??_EncryptFRMPayload& (0+255),w,b
 23000  005634  0100               	movlb	0	; () banked
 23001  005636  5DBA               	subwf	EncryptFRMPayload@j& (0+255),w,b
 23002  005638  B0D8               	btfsc	status,0,c
 23003  00563A  0012               	return	
 23004  00563C  D7C5               	goto	l14595
 23005  00563E                     __end_of_EncryptFRMPayload:
 23006                           	opt stack 0
 23007                           tosu	equ	0xFFF
 23008                           tosh	equ	0xFFE
 23009                           tosl	equ	0xFFD
 23010                           pclath	equ	0xFFA
 23011                           tblptru	equ	0xFF8
 23012                           tblptrh	equ	0xFF7
 23013                           tblptrl	equ	0xFF6
 23014                           tablat	equ	0xFF5
 23015                           prodh	equ	0xFF4
 23016                           prodl	equ	0xFF3
 23017                           intcon	equ	0xFF2
 23018                           intcon2	equ	0xFF1
 23019                           intcon3	equ	0xFF0
 23020                           indf0	equ	0xFEF
 23021                           postinc0	equ	0xFEE
 23022                           fsr0h	equ	0xFEA
 23023                           fsr0l	equ	0xFE9
 23024                           wreg	equ	0xFE8
 23025                           postinc1	equ	0xFE6
 23026                           postdec1	equ	0xFE5
 23027                           plusw1	equ	0xFE3
 23028                           fsr1h	equ	0xFE2
 23029                           fsr1l	equ	0xFE1
 23030                           indf2	equ	0xFDF
 23031                           postinc2	equ	0xFDE
 23032                           postdec2	equ	0xFDD
 23033                           plusw2	equ	0xFDB
 23034                           fsr2h	equ	0xFDA
 23035                           fsr2l	equ	0xFD9
 23036                           status	equ	0xFD8
 23037                           
 23038 ;; *************** function ___awdiv *****************
 23039 ;; Defined at:
 23040 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
 23041 ;; Parameters:    Size  Location     Type
 23042 ;;  dividend        2    4[BANK0 ] int 
 23043 ;;  divisor         2    6[BANK0 ] int 
 23044 ;; Auto vars:     Size  Location     Type
 23045 ;;  quotient        2   10[BANK0 ] int 
 23046 ;;  sign            1    9[BANK0 ] unsigned char 
 23047 ;;  counter         1    8[BANK0 ] unsigned char 
 23048 ;; Return value:  Size  Location     Type
 23049 ;;                  2    4[BANK0 ] int 
 23050 ;; Registers used:
 23051 ;;		wreg, status,2, status,0
 23052 ;; Tracked objects:
 23053 ;;		On entry : 0/0
 23054 ;;		On exit  : 0/0
 23055 ;;		Unchanged: 0/0
 23056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23057 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23058 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23060 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23061 ;;Total ram usage:        8 bytes
 23062 ;; Hardware stack levels used:    1
 23063 ;; Hardware stack levels required when called:    7
 23064 ;; This function calls:
 23065 ;;		Nothing
 23066 ;; This function is called by:
 23067 ;;		_EncryptFRMPayload
 23068 ;; This function uses a non-reentrant model
 23069 ;;
 23070                           
 23071                           	psect	text101
 23072  007DB8                     __ptext101:
 23073                           	opt stack 0
 23074  007DB8                     ___awdiv:
 23075                           	opt stack 19
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;incstack = 0
 23079  007DB8  0E00               	movlw	0
 23080  007DBA  0100               	movlb	0	; () banked
 23081  007DBC  6F69               	movwf	___awdiv@sign& (0+255),b
 23082                           
 23083                           ; BSR set to: 0
 23084  007DBE  0100               	movlb	0	; () banked
 23085  007DC0  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23086  007DC2  D008               	goto	l14087
 23087                           
 23088                           ; BSR set to: 0
 23089  007DC4  0100               	movlb	0	; () banked
 23090  007DC6  6D66               	negf	___awdiv@divisor& (0+255),b
 23091  007DC8  1F67               	comf	(___awdiv@divisor+1)& (0+255),f,b
 23092  007DCA  B0D8               	btfsc	status,0,c
 23093  007DCC  2B67               	incf	(___awdiv@divisor+1)& (0+255),f,b
 23094                           
 23095                           ; BSR set to: 0
 23096  007DCE  0E01               	movlw	1
 23097  007DD0  0100               	movlb	0	; () banked
 23098  007DD2  6F69               	movwf	___awdiv@sign& (0+255),b
 23099  007DD4                     l14087:
 23100                           
 23101                           ; BSR set to: 0
 23102  007DD4  0100               	movlb	0	; () banked
 23103  007DD6  AF65               	btfss	(___awdiv@dividend+1)& (0+255),7,b
 23104  007DD8  D008               	goto	l14093
 23105                           
 23106                           ; BSR set to: 0
 23107  007DDA  0100               	movlb	0	; () banked
 23108  007DDC  6D64               	negf	___awdiv@dividend& (0+255),b
 23109  007DDE  1F65               	comf	(___awdiv@dividend+1)& (0+255),f,b
 23110  007DE0  B0D8               	btfsc	status,0,c
 23111  007DE2  2B65               	incf	(___awdiv@dividend+1)& (0+255),f,b
 23112                           
 23113                           ; BSR set to: 0
 23114  007DE4  0E01               	movlw	1
 23115  007DE6  0100               	movlb	0	; () banked
 23116  007DE8  1B69               	xorwf	___awdiv@sign& (0+255),f,b
 23117  007DEA                     l14093:
 23118                           
 23119                           ; BSR set to: 0
 23120  007DEA  0E00               	movlw	0
 23121  007DEC  0100               	movlb	0	; () banked
 23122  007DEE  6F6B               	movwf	(___awdiv@quotient+1)& (0+255),b
 23123  007DF0  0E00               	movlw	0
 23124  007DF2  6F6A               	movwf	___awdiv@quotient& (0+255),b
 23125                           
 23126                           ; BSR set to: 0
 23127  007DF4  0100               	movlb	0	; () banked
 23128  007DF6  5166               	movf	___awdiv@divisor& (0+255),w,b
 23129  007DF8  0100               	movlb	0	; () banked
 23130  007DFA  1167               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
 23131  007DFC  B4D8               	btfsc	status,2,c
 23132  007DFE  D02C               	goto	l14115
 23133                           
 23134                           ; BSR set to: 0
 23135  007E00  0E01               	movlw	1
 23136  007E02  0100               	movlb	0	; () banked
 23137  007E04  6F68               	movwf	___awdiv@counter& (0+255),b
 23138  007E06  D006               	goto	l14101
 23139  007E08                     l14099:
 23140                           
 23141                           ; BSR set to: 0
 23142  007E08  0100               	movlb	0	; () banked
 23143  007E0A  90D8               	bcf	status,0,c
 23144  007E0C  3766               	rlcf	___awdiv@divisor& (0+255),f,b
 23145  007E0E  3767               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
 23146  007E10  0100               	movlb	0	; () banked
 23147  007E12  2B68               	incf	___awdiv@counter& (0+255),f,b
 23148  007E14                     l14101:
 23149                           
 23150                           ; BSR set to: 0
 23151  007E14  0100               	movlb	0	; () banked
 23152  007E16  AF67               	btfss	(___awdiv@divisor+1)& (0+255),7,b
 23153  007E18  D7F7               	goto	l14099
 23154  007E1A                     l14103:
 23155                           
 23156                           ; BSR set to: 0
 23157  007E1A  0100               	movlb	0	; () banked
 23158  007E1C  90D8               	bcf	status,0,c
 23159  007E1E  376A               	rlcf	___awdiv@quotient& (0+255),f,b
 23160  007E20  376B               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
 23161                           
 23162                           ; BSR set to: 0
 23163  007E22  0100               	movlb	0	; () banked
 23164  007E24  5166               	movf	___awdiv@divisor& (0+255),w,b
 23165  007E26  0100               	movlb	0	; () banked
 23166  007E28  5D64               	subwf	___awdiv@dividend& (0+255),w,b
 23167  007E2A  0100               	movlb	0	; () banked
 23168  007E2C  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23169  007E2E  0100               	movlb	0	; () banked
 23170  007E30  5965               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
 23171  007E32  A0D8               	btfss	status,0,c
 23172  007E34  D00A               	goto	l14111
 23173                           
 23174                           ; BSR set to: 0
 23175  007E36  0100               	movlb	0	; () banked
 23176  007E38  5166               	movf	___awdiv@divisor& (0+255),w,b
 23177  007E3A  0100               	movlb	0	; () banked
 23178  007E3C  5F64               	subwf	___awdiv@dividend& (0+255),f,b
 23179  007E3E  0100               	movlb	0	; () banked
 23180  007E40  5167               	movf	(___awdiv@divisor+1)& (0+255),w,b
 23181  007E42  0100               	movlb	0	; () banked
 23182  007E44  5B65               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
 23183                           
 23184                           ; BSR set to: 0
 23185  007E46  0100               	movlb	0	; () banked
 23186  007E48  816A               	bsf	___awdiv@quotient& (0+255),0,b
 23187  007E4A                     l14111:
 23188                           
 23189                           ; BSR set to: 0
 23190  007E4A  0100               	movlb	0	; () banked
 23191  007E4C  90D8               	bcf	status,0,c
 23192  007E4E  3367               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
 23193  007E50  3366               	rrcf	___awdiv@divisor& (0+255),f,b
 23194                           
 23195                           ; BSR set to: 0
 23196  007E52  0100               	movlb	0	; () banked
 23197  007E54  2F68               	decfsz	___awdiv@counter& (0+255),f,b
 23198  007E56  D7E1               	goto	l14103
 23199  007E58                     l14115:
 23200                           
 23201                           ; BSR set to: 0
 23202  007E58  0100               	movlb	0	; () banked
 23203  007E5A  5169               	movf	___awdiv@sign& (0+255),w,b
 23204  007E5C  0100               	movlb	0	; () banked
 23205  007E5E  B4D8               	btfsc	status,2,c
 23206  007E60  D005               	goto	l14119
 23207                           
 23208                           ; BSR set to: 0
 23209  007E62  0100               	movlb	0	; () banked
 23210  007E64  6D6A               	negf	___awdiv@quotient& (0+255),b
 23211  007E66  1F6B               	comf	(___awdiv@quotient+1)& (0+255),f,b
 23212  007E68  B0D8               	btfsc	status,0,c
 23213  007E6A  2B6B               	incf	(___awdiv@quotient+1)& (0+255),f,b
 23214  007E6C                     l14119:
 23215                           
 23216                           ; BSR set to: 0
 23217  007E6C  C06A  F064         	movff	___awdiv@quotient,?___awdiv
 23218  007E70  C06B  F065         	movff	___awdiv@quotient+1,?___awdiv+1
 23219  007E74  0012               	return	
 23220  007E76                     __end_of___awdiv:
 23221                           	opt stack 0
 23222                           tosu	equ	0xFFF
 23223                           tosh	equ	0xFFE
 23224                           tosl	equ	0xFFD
 23225                           pclath	equ	0xFFA
 23226                           tblptru	equ	0xFF8
 23227                           tblptrh	equ	0xFF7
 23228                           tblptrl	equ	0xFF6
 23229                           tablat	equ	0xFF5
 23230                           prodh	equ	0xFF4
 23231                           prodl	equ	0xFF3
 23232                           intcon	equ	0xFF2
 23233                           intcon2	equ	0xFF1
 23234                           intcon3	equ	0xFF0
 23235                           indf0	equ	0xFEF
 23236                           postinc0	equ	0xFEE
 23237                           fsr0h	equ	0xFEA
 23238                           fsr0l	equ	0xFE9
 23239                           wreg	equ	0xFE8
 23240                           postinc1	equ	0xFE6
 23241                           postdec1	equ	0xFE5
 23242                           plusw1	equ	0xFE3
 23243                           fsr1h	equ	0xFE2
 23244                           fsr1l	equ	0xFE1
 23245                           indf2	equ	0xFDF
 23246                           postinc2	equ	0xFDE
 23247                           postdec2	equ	0xFDD
 23248                           plusw2	equ	0xFDB
 23249                           fsr2h	equ	0xFDA
 23250                           fsr2l	equ	0xFD9
 23251                           status	equ	0xFD8
 23252                           
 23253 ;; *************** function _AssembleEncryptionBlock *****************
 23254 ;; Defined at:
 23255 ;;		line 2156 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23256 ;; Parameters:    Size  Location     Type
 23257 ;;  dir             1    wreg     unsigned char 
 23258 ;;  frameCounter    4   14[BANK0 ] unsigned long 
 23259 ;;  blockId         1   18[BANK0 ] unsigned char 
 23260 ;;  firstByte       1   19[BANK0 ] unsigned char 
 23261 ;;  multicastSta    1   20[BANK0 ] unsigned char 
 23262 ;; Auto vars:     Size  Location     Type
 23263 ;;  dir             1   21[BANK0 ] unsigned char 
 23264 ;;  bufferIndex     1   22[BANK0 ] unsigned char 
 23265 ;; Return value:  Size  Location     Type
 23266 ;;                  1    wreg      void 
 23267 ;; Registers used:
 23268 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23269 ;; Tracked objects:
 23270 ;;		On entry : 0/0
 23271 ;;		On exit  : 0/0
 23272 ;;		Unchanged: 0/0
 23273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23274 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23275 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23277 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23278 ;;Total ram usage:        9 bytes
 23279 ;; Hardware stack levels used:    1
 23280 ;; Hardware stack levels required when called:    8
 23281 ;; This function calls:
 23282 ;;		_memcpy
 23283 ;;		_memset
 23284 ;; This function is called by:
 23285 ;;		_LORAWAN_RxDone
 23286 ;;		_AssemblePacket
 23287 ;;		_EncryptFRMPayload
 23288 ;; This function uses a non-reentrant model
 23289 ;;
 23290                           
 23291                           	psect	text102
 23292  006C1E                     __ptext102:
 23293                           	opt stack 0
 23294  006C1E                     _AssembleEncryptionBlock:
 23295                           	opt stack 18
 23296                           
 23297                           ; BSR set to: 0
 23298                           ;incstack = 0
 23299                           ;AssembleEncryptionBlock@dir stored from wreg
 23300  006C1E  0100               	movlb	0	; () banked
 23301  006C20  6F75               	movwf	AssembleEncryptionBlock@dir& (0+255),b
 23302                           
 23303                           ;lorawan.c: 2158: uint8_t bufferIndex = 0;
 23304  006C22  0E00               	movlw	0
 23305  006C24  0100               	movlb	0	; () banked
 23306  006C26  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23307                           
 23308                           ; BSR set to: 0
 23309                           ;lorawan.c: 2160: memset (aesBuffer, 0, sizeof (aesBuffer));
 23310  006C28  0EC2               	movlw	low _aesBuffer
 23311  006C2A  0100               	movlb	0	; () banked
 23312  006C2C  6F64               	movwf	memset@p1& (0+255),b
 23313  006C2E  0E01               	movlw	high _aesBuffer
 23314  006C30  0100               	movlb	0	; () banked
 23315  006C32  6F65               	movwf	(memset@p1+1)& (0+255),b
 23316  006C34  0E00               	movlw	0
 23317  006C36  0100               	movlb	0	; () banked
 23318  006C38  6F67               	movwf	(memset@c+1)& (0+255),b
 23319  006C3A  0E00               	movlw	0
 23320  006C3C  6F66               	movwf	memset@c& (0+255),b
 23321  006C3E  0E00               	movlw	0
 23322  006C40  0100               	movlb	0	; () banked
 23323  006C42  6F69               	movwf	(memset@n+1)& (0+255),b
 23324  006C44  0E10               	movlw	16
 23325  006C46  6F68               	movwf	memset@n& (0+255),b
 23326  006C48  EC0B  F04E         	call	_memset	;wreg free
 23327                           
 23328                           ;lorawan.c: 2162: aesBuffer[bufferIndex] = firstByte;
 23329  006C4C  0100               	movlb	0	; () banked
 23330  006C4E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23331  006C50  0D01               	mullw	1
 23332  006C52  0EC2               	movlw	low _aesBuffer
 23333  006C54  24F3               	addwf	prodl,w,c
 23334  006C56  6ED9               	movwf	fsr2l,c
 23335  006C58  0E01               	movlw	high _aesBuffer
 23336  006C5A  20F4               	addwfc	prodh,w,c
 23337  006C5C  6EDA               	movwf	fsr2h,c
 23338  006C5E  C073  FFDF         	movff	AssembleEncryptionBlock@firstByte,indf2
 23339                           
 23340                           ; BSR set to: 0
 23341                           ;lorawan.c: 2164: bufferIndex = bufferIndex + 5;
 23342  006C62  0100               	movlb	0	; () banked
 23343  006C64  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23344  006C66  0F05               	addlw	5
 23345  006C68  0100               	movlb	0	; () banked
 23346  006C6A  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23347                           
 23348                           ; BSR set to: 0
 23349                           ;lorawan.c: 2166: aesBuffer[bufferIndex++] = dir;
 23350  006C6C  0100               	movlb	0	; () banked
 23351  006C6E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23352  006C70  0D01               	mullw	1
 23353  006C72  0EC2               	movlw	low _aesBuffer
 23354  006C74  24F3               	addwf	prodl,w,c
 23355  006C76  6ED9               	movwf	fsr2l,c
 23356  006C78  0E01               	movlw	high _aesBuffer
 23357  006C7A  20F4               	addwfc	prodh,w,c
 23358  006C7C  6EDA               	movwf	fsr2h,c
 23359  006C7E  C075  FFDF         	movff	AssembleEncryptionBlock@dir,indf2
 23360                           
 23361                           ; BSR set to: 0
 23362  006C82  0100               	movlb	0	; () banked
 23363  006C84  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23364                           
 23365                           ; BSR set to: 0
 23366                           ;lorawan.c: 2168: if (0 == multicastStatus)
 23367  006C86  0100               	movlb	0	; () banked
 23368  006C88  5174               	movf	AssembleEncryptionBlock@multicastStatus& (0+255),w,b
 23369  006C8A  0100               	movlb	0	; () banked
 23370  006C8C  A4D8               	btfss	status,2,c
 23371  006C8E  D019               	goto	l14063
 23372                           
 23373                           ; BSR set to: 0
 23374                           ;lorawan.c: 2169: {
 23375                           ;lorawan.c: 2170: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.deviceAddr
      +                          ess, sizeof (loRa.activationParameters.deviceAddress));
 23376  006C90  0100               	movlb	0	; () banked
 23377  006C92  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23378  006C94  0D01               	mullw	1
 23379  006C96  0EC2               	movlw	low _aesBuffer
 23380  006C98  24F3               	addwf	prodl,w,c
 23381  006C9A  0100               	movlb	0	; () banked
 23382  006C9C  6F64               	movwf	memcpy@d1& (0+255),b
 23383  006C9E  0E01               	movlw	high _aesBuffer
 23384  006CA0  20F4               	addwfc	prodh,w,c
 23385  006CA2  0100               	movlb	0	; () banked
 23386  006CA4  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23387  006CA6  0E1E               	movlw	low (_loRa+30)
 23388  006CA8  0100               	movlb	0	; () banked
 23389  006CAA  6F66               	movwf	memcpy@s1& (0+255),b
 23390  006CAC  0E02               	movlw	high (_loRa+30)
 23391  006CAE  0100               	movlb	0	; () banked
 23392  006CB0  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23393  006CB2  0E00               	movlw	0
 23394  006CB4  0100               	movlb	0	; () banked
 23395  006CB6  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23396  006CB8  0E04               	movlw	4
 23397  006CBA  6F68               	movwf	memcpy@n& (0+255),b
 23398  006CBC  EC07  F049         	call	_memcpy	;wreg free
 23399  006CC0  D018               	goto	l14065
 23400  006CC2                     l14063:
 23401                           
 23402                           ; BSR set to: 0
 23403                           ;lorawan.c: 2173: else
 23404                           ;lorawan.c: 2174: {
 23405                           ;lorawan.c: 2175: memcpy (&aesBuffer[bufferIndex], &loRa.activationParameters.mcastDevic
      +                          eAddress, sizeof (loRa.activationParameters.mcastDeviceAddress));
 23406  006CC2  0100               	movlb	0	; () banked
 23407  006CC4  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23408  006CC6  0D01               	mullw	1
 23409  006CC8  0EC2               	movlw	low _aesBuffer
 23410  006CCA  24F3               	addwf	prodl,w,c
 23411  006CCC  0100               	movlb	0	; () banked
 23412  006CCE  6F64               	movwf	memcpy@d1& (0+255),b
 23413  006CD0  0E01               	movlw	high _aesBuffer
 23414  006CD2  20F4               	addwfc	prodh,w,c
 23415  006CD4  0100               	movlb	0	; () banked
 23416  006CD6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23417  006CD8  0E62               	movlw	low (_loRa+98)
 23418  006CDA  0100               	movlb	0	; () banked
 23419  006CDC  6F66               	movwf	memcpy@s1& (0+255),b
 23420  006CDE  0E02               	movlw	high (_loRa+98)
 23421  006CE0  0100               	movlb	0	; () banked
 23422  006CE2  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23423  006CE4  0E00               	movlw	0
 23424  006CE6  0100               	movlb	0	; () banked
 23425  006CE8  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23426  006CEA  0E04               	movlw	4
 23427  006CEC  6F68               	movwf	memcpy@n& (0+255),b
 23428  006CEE  EC07  F049         	call	_memcpy	;wreg free
 23429  006CF2                     l14065:
 23430                           
 23431                           ;lorawan.c: 2176: bufferIndex = bufferIndex + sizeof (loRa.activationParameters.mcastDev
      +                          iceAddress);
 23432  006CF2  0100               	movlb	0	; () banked
 23433  006CF4  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23434  006CF6  0F04               	addlw	4
 23435  006CF8  0100               	movlb	0	; () banked
 23436  006CFA  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23437                           
 23438                           ; BSR set to: 0
 23439                           ;lorawan.c: 2177: }
 23440                           ;lorawan.c: 2179: memcpy (&aesBuffer[bufferIndex], &frameCounter, sizeof (frameCounter))
      +                          ;
 23441                           
 23442                           ; BSR set to: 0
 23443  006CFC  0100               	movlb	0	; () banked
 23444  006CFE  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23445  006D00  0D01               	mullw	1
 23446  006D02  0EC2               	movlw	low _aesBuffer
 23447  006D04  24F3               	addwf	prodl,w,c
 23448  006D06  0100               	movlb	0	; () banked
 23449  006D08  6F64               	movwf	memcpy@d1& (0+255),b
 23450  006D0A  0E01               	movlw	high _aesBuffer
 23451  006D0C  20F4               	addwfc	prodh,w,c
 23452  006D0E  0100               	movlb	0	; () banked
 23453  006D10  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23454  006D12  0E6E               	movlw	low AssembleEncryptionBlock@frameCounter
 23455  006D14  0100               	movlb	0	; () banked
 23456  006D16  6F66               	movwf	memcpy@s1& (0+255),b
 23457  006D18  0E00               	movlw	high AssembleEncryptionBlock@frameCounter
 23458  006D1A  0100               	movlb	0	; () banked
 23459  006D1C  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23460  006D1E  0E00               	movlw	0
 23461  006D20  0100               	movlb	0	; () banked
 23462  006D22  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23463  006D24  0E04               	movlw	4
 23464  006D26  6F68               	movwf	memcpy@n& (0+255),b
 23465  006D28  EC07  F049         	call	_memcpy	;wreg free
 23466                           
 23467                           ;lorawan.c: 2180: bufferIndex = bufferIndex + sizeof (frameCounter) ;
 23468  006D2C  0100               	movlb	0	; () banked
 23469  006D2E  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23470  006D30  0F04               	addlw	4
 23471  006D32  0100               	movlb	0	; () banked
 23472  006D34  6F76               	movwf	AssembleEncryptionBlock@bufferIndex& (0+255),b
 23473                           
 23474                           ; BSR set to: 0
 23475                           ;lorawan.c: 2182: bufferIndex ++;
 23476  006D36  0100               	movlb	0	; () banked
 23477  006D38  2B76               	incf	AssembleEncryptionBlock@bufferIndex& (0+255),f,b
 23478                           
 23479                           ; BSR set to: 0
 23480                           ;lorawan.c: 2184: aesBuffer[bufferIndex] = blockId;
 23481  006D3A  0100               	movlb	0	; () banked
 23482  006D3C  5176               	movf	AssembleEncryptionBlock@bufferIndex& (0+255),w,b
 23483  006D3E  0D01               	mullw	1
 23484  006D40  0EC2               	movlw	low _aesBuffer
 23485  006D42  24F3               	addwf	prodl,w,c
 23486  006D44  6ED9               	movwf	fsr2l,c
 23487  006D46  0E01               	movlw	high _aesBuffer
 23488  006D48  20F4               	addwfc	prodh,w,c
 23489  006D4A  6EDA               	movwf	fsr2h,c
 23490  006D4C  C072  FFDF         	movff	AssembleEncryptionBlock@blockId,indf2
 23491                           
 23492                           ; BSR set to: 0
 23493  006D50  0012               	return		;funcret
 23494  006D52                     __end_of_AssembleEncryptionBlock:
 23495                           	opt stack 0
 23496                           tosu	equ	0xFFF
 23497                           tosh	equ	0xFFE
 23498                           tosl	equ	0xFFD
 23499                           pclath	equ	0xFFA
 23500                           tblptru	equ	0xFF8
 23501                           tblptrh	equ	0xFF7
 23502                           tblptrl	equ	0xFF6
 23503                           tablat	equ	0xFF5
 23504                           prodh	equ	0xFF4
 23505                           prodl	equ	0xFF3
 23506                           intcon	equ	0xFF2
 23507                           intcon2	equ	0xFF1
 23508                           intcon3	equ	0xFF0
 23509                           indf0	equ	0xFEF
 23510                           postinc0	equ	0xFEE
 23511                           fsr0h	equ	0xFEA
 23512                           fsr0l	equ	0xFE9
 23513                           wreg	equ	0xFE8
 23514                           postinc1	equ	0xFE6
 23515                           postdec1	equ	0xFE5
 23516                           plusw1	equ	0xFE3
 23517                           fsr1h	equ	0xFE2
 23518                           fsr1l	equ	0xFE1
 23519                           indf2	equ	0xFDF
 23520                           postinc2	equ	0xFDE
 23521                           postdec2	equ	0xFDD
 23522                           plusw2	equ	0xFDB
 23523                           fsr2h	equ	0xFDA
 23524                           fsr2l	equ	0xFD9
 23525                           status	equ	0xFD8
 23526                           
 23527 ;; *************** function _CountfOptsLength *****************
 23528 ;; Defined at:
 23529 ;;		line 2134 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23530 ;; Parameters:    Size  Location     Type
 23531 ;;		None
 23532 ;; Auto vars:     Size  Location     Type
 23533 ;;  i               1   11[BANK0 ] unsigned char 
 23534 ;;  macCommandLe    1   10[BANK0 ] unsigned char 
 23535 ;; Return value:  Size  Location     Type
 23536 ;;                  1    wreg      unsigned char 
 23537 ;; Registers used:
 23538 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 23539 ;; Tracked objects:
 23540 ;;		On entry : 0/0
 23541 ;;		On exit  : 0/0
 23542 ;;		Unchanged: 0/0
 23543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23546 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23547 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23548 ;;Total ram usage:        8 bytes
 23549 ;; Hardware stack levels used:    1
 23550 ;; Hardware stack levels required when called:    7
 23551 ;; This function calls:
 23552 ;;		Nothing
 23553 ;; This function is called by:
 23554 ;;		_LORAWAN_GetMaxPayloadSize
 23555 ;;		_AssemblePacket
 23556 ;; This function uses a non-reentrant model
 23557 ;;
 23558                           
 23559                           	psect	text103
 23560  0073C6                     __ptext103:
 23561                           	opt stack 0
 23562  0073C6                     _CountfOptsLength:
 23563                           	opt stack 20
 23564                           
 23565                           ;lorawan.c: 2136: uint8_t i, macCommandLength=0;
 23566                           
 23567                           ; BSR set to: 0
 23568                           ;incstack = 0
 23569  0073C6  0E00               	movlw	0
 23570  0073C8  0100               	movlb	0	; () banked
 23571  0073CA  6F6A               	movwf	CountfOptsLength@macCommandLength& (0+255),b
 23572                           
 23573                           ;lorawan.c: 2138: for (i = 0; i < loRa.crtMacCmdIndex; i++)
 23574  0073CC  0E00               	movlw	0
 23575  0073CE  0100               	movlb	0	; () banked
 23576  0073D0  6F6B               	movwf	CountfOptsLength@i& (0+255),b
 23577  0073D2  D071               	goto	l14613
 23578  0073D4                     l14605:
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;lorawan.c: 2139: {
 23582                           ;lorawan.c: 2140: if(loRa.macCommands[i].receivedCid != 0xFF)
 23583  0073D4  0100               	movlb	0	; () banked
 23584  0073D6  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23585  0073D8  0D02               	mullw	2
 23586  0073DA  0EA8               	movlw	low (_loRa+168)
 23587  0073DC  24F3               	addwf	prodl,w,c
 23588  0073DE  6ED9               	movwf	fsr2l,c
 23589  0073E0  0E02               	movlw	high (_loRa+168)
 23590  0073E2  20F4               	addwfc	prodh,w,c
 23591  0073E4  6EDA               	movwf	fsr2h,c
 23592  0073E6  28DE               	incf	postinc2,w,c
 23593  0073E8  B4D8               	btfsc	status,2,c
 23594  0073EA  D063               	goto	l14611
 23595                           
 23596                           ; BSR set to: 0
 23597                           ;lorawan.c: 2141: {
 23598                           ;lorawan.c: 2142: if((macCommandLength + macEndDevCmdReplyLen[loRa.macCommands[i].receiv
      +                          edCid - 2]) <= 0x0F)
 23599  0073EC  0EFE               	movlw	254
 23600  0073EE  0100               	movlb	0	; () banked
 23601  0073F0  6F64               	movwf	??_CountfOptsLength& (0+255),b
 23602  0073F2  0EFF               	movlw	255
 23603  0073F4  0100               	movlb	0	; () banked
 23604  0073F6  6F65               	movwf	(??_CountfOptsLength+1)& (0+255),b
 23605  0073F8  0100               	movlb	0	; () banked
 23606  0073FA  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23607  0073FC  0D02               	mullw	2
 23608  0073FE  0EA8               	movlw	low (_loRa+168)
 23609  007400  24F3               	addwf	prodl,w,c
 23610  007402  6ED9               	movwf	fsr2l,c
 23611  007404  0E02               	movlw	high (_loRa+168)
 23612  007406  20F4               	addwfc	prodh,w,c
 23613  007408  6EDA               	movwf	fsr2h,c
 23614  00740A  50DF               	movf	indf2,w,c
 23615  00740C  0100               	movlb	0	; () banked
 23616  00740E  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 23617  007410  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 23618  007412  0100               	movlb	0	; () banked
 23619  007414  5164               	movf	??_CountfOptsLength& (0+255),w,b
 23620  007416  0100               	movlb	0	; () banked
 23621  007418  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 23622  00741A  0100               	movlb	0	; () banked
 23623  00741C  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 23624  00741E  0100               	movlb	0	; () banked
 23625  007420  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 23626  007422  0E8E               	movlw	low _macEndDevCmdReplyLen
 23627  007424  0100               	movlb	0	; () banked
 23628  007426  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 23629  007428  6EF6               	movwf	tblptrl,c
 23630  00742A  0EFF               	movlw	high _macEndDevCmdReplyLen
 23631  00742C  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 23632  00742E  6EF7               	movwf	tblptrh,c
 23633  007430                     	if	1	;There are 3 active tblptr bytes
 23634  007430  6AF8               	clrf	tblptru,c
 23635  007432  0E00               	movlw	low (__mediumconst shr (0+16))
 23636  007434  22F8               	addwfc	tblptru,f,c
 23637  007436                     	endif
 23638  007436  0008               	tblrd		*
 23639  007438  50F5               	movf	tablat,w,c
 23640  00743A  C06A  F068         	movff	CountfOptsLength@macCommandLength,??_CountfOptsLength+4
 23641  00743E  0100               	movlb	0	; () banked
 23642  007440  6B69               	clrf	(??_CountfOptsLength+5)& (0+255),b
 23643  007442  0100               	movlb	0	; () banked
 23644  007444  2768               	addwf	(??_CountfOptsLength+4)& (0+255),f,b
 23645  007446  0E00               	movlw	0
 23646  007448  2369               	addwfc	(??_CountfOptsLength+5)& (0+255),f,b
 23647  00744A  0100               	movlb	0	; () banked
 23648  00744C  BF69               	btfsc	(??_CountfOptsLength+5)& (0+255),7,b
 23649  00744E  D008               	goto	l14609
 23650  007450  0100               	movlb	0	; () banked
 23651  007452  5169               	movf	(??_CountfOptsLength+5)& (0+255),w,b
 23652  007454  E136               	bnz	l14615
 23653  007456  0E10               	movlw	16
 23654  007458  0100               	movlb	0	; () banked
 23655  00745A  5D68               	subwf	(??_CountfOptsLength+4)& (0+255),w,b
 23656  00745C  B0D8               	btfsc	status,0,c
 23657  00745E  D031               	goto	l14615
 23658  007460                     l14609:
 23659                           
 23660                           ; BSR set to: 0
 23661                           ;lorawan.c: 2143: {
 23662                           ;lorawan.c: 2144: macCommandLength += macEndDevCmdReplyLen[loRa.macCommands[i].receivedC
      +                          id - 2];
 23663  007460  0EFE               	movlw	254
 23664  007462  0100               	movlb	0	; () banked
 23665  007464  6F64               	movwf	??_CountfOptsLength& (0+255),b
 23666  007466  0EFF               	movlw	255
 23667  007468  0100               	movlb	0	; () banked
 23668  00746A  6F65               	movwf	(??_CountfOptsLength+1)& (0+255),b
 23669  00746C  0100               	movlb	0	; () banked
 23670  00746E  516B               	movf	CountfOptsLength@i& (0+255),w,b
 23671  007470  0D02               	mullw	2
 23672  007472  0EA8               	movlw	low (_loRa+168)
 23673  007474  24F3               	addwf	prodl,w,c
 23674  007476  6ED9               	movwf	fsr2l,c
 23675  007478  0E02               	movlw	high (_loRa+168)
 23676  00747A  20F4               	addwfc	prodh,w,c
 23677  00747C  6EDA               	movwf	fsr2h,c
 23678  00747E  50DF               	movf	indf2,w,c
 23679  007480  0100               	movlb	0	; () banked
 23680  007482  6F66               	movwf	(??_CountfOptsLength+2)& (0+255),b
 23681  007484  6B67               	clrf	(??_CountfOptsLength+3)& (0+255),b
 23682  007486  0100               	movlb	0	; () banked
 23683  007488  5164               	movf	??_CountfOptsLength& (0+255),w,b
 23684  00748A  0100               	movlb	0	; () banked
 23685  00748C  2766               	addwf	(??_CountfOptsLength+2)& (0+255),f,b
 23686  00748E  0100               	movlb	0	; () banked
 23687  007490  5165               	movf	(??_CountfOptsLength+1)& (0+255),w,b
 23688  007492  0100               	movlb	0	; () banked
 23689  007494  2367               	addwfc	(??_CountfOptsLength+3)& (0+255),f,b
 23690  007496  0E8E               	movlw	low _macEndDevCmdReplyLen
 23691  007498  0100               	movlb	0	; () banked
 23692  00749A  2566               	addwf	(??_CountfOptsLength+2)& (0+255),w,b
 23693  00749C  6EF6               	movwf	tblptrl,c
 23694  00749E  0EFF               	movlw	high _macEndDevCmdReplyLen
 23695  0074A0  2167               	addwfc	(??_CountfOptsLength+3)& (0+255),w,b
 23696  0074A2  6EF7               	movwf	tblptrh,c
 23697  0074A4                     	if	1	;There are 3 active tblptr bytes
 23698  0074A4  6AF8               	clrf	tblptru,c
 23699  0074A6  0E00               	movlw	low (__mediumconst shr (0+16))
 23700  0074A8  22F8               	addwfc	tblptru,f,c
 23701  0074AA                     	endif
 23702  0074AA  0008               	tblrd		*
 23703  0074AC  50F5               	movf	tablat,w,c
 23704  0074AE  0100               	movlb	0	; () banked
 23705  0074B0  276A               	addwf	CountfOptsLength@macCommandLength& (0+255),f,b
 23706  0074B2                     l14611:
 23707                           
 23708                           ; BSR set to: 0
 23709  0074B2  0100               	movlb	0	; () banked
 23710  0074B4  2B6B               	incf	CountfOptsLength@i& (0+255),f,b
 23711  0074B6                     l14613:
 23712                           
 23713                           ; BSR set to: 0
 23714  0074B6  0102               	movlb	2	; () banked
 23715  0074B8  51A7               	movf	(_loRa+167)& (0+255),w,b
 23716  0074BA  0100               	movlb	0	; () banked
 23717  0074BC  5D6B               	subwf	CountfOptsLength@i& (0+255),w,b
 23718  0074BE  A0D8               	btfss	status,0,c
 23719  0074C0  D789               	goto	l14605
 23720  0074C2                     l14615:
 23721                           
 23722                           ; BSR set to: 0
 23723                           ;lorawan.c: 2149: }
 23724                           ;lorawan.c: 2150: }
 23725                           ;lorawan.c: 2151: }
 23726                           ;lorawan.c: 2153: return macCommandLength;
 23727  0074C2  0100               	movlb	0	; () banked
 23728  0074C4  516A               	movf	CountfOptsLength@macCommandLength& (0+255),w,b
 23729  0074C6  0012               	return	
 23730  0074C8                     __end_of_CountfOptsLength:
 23731                           	opt stack 0
 23732                           tosu	equ	0xFFF
 23733                           tosh	equ	0xFFE
 23734                           tosl	equ	0xFFD
 23735                           pclath	equ	0xFFA
 23736                           tblptru	equ	0xFF8
 23737                           tblptrh	equ	0xFF7
 23738                           tblptrl	equ	0xFF6
 23739                           tablat	equ	0xFF5
 23740                           prodh	equ	0xFF4
 23741                           prodl	equ	0xFF3
 23742                           intcon	equ	0xFF2
 23743                           intcon2	equ	0xFF1
 23744                           intcon3	equ	0xFF0
 23745                           indf0	equ	0xFEF
 23746                           postinc0	equ	0xFEE
 23747                           fsr0h	equ	0xFEA
 23748                           fsr0l	equ	0xFE9
 23749                           wreg	equ	0xFE8
 23750                           postinc1	equ	0xFE6
 23751                           postdec1	equ	0xFE5
 23752                           plusw1	equ	0xFE3
 23753                           fsr1h	equ	0xFE2
 23754                           fsr1l	equ	0xFE1
 23755                           indf2	equ	0xFDF
 23756                           postinc2	equ	0xFDE
 23757                           postdec2	equ	0xFDD
 23758                           plusw2	equ	0xFDB
 23759                           fsr2h	equ	0xFDA
 23760                           fsr2l	equ	0xFD9
 23761                           status	equ	0xFD8
 23762                           
 23763 ;; *************** function _ExtractMic *****************
 23764 ;; Defined at:
 23765 ;;		line 2187 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23766 ;; Parameters:    Size  Location     Type
 23767 ;;  buffer          2   14[BANK0 ] PTR unsigned char 
 23768 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23769 ;;  bufferLength    1   16[BANK0 ] unsigned char 
 23770 ;; Auto vars:     Size  Location     Type
 23771 ;;  mic             4   22[BANK0 ] unsigned long 
 23772 ;; Return value:  Size  Location     Type
 23773 ;;                  4   14[BANK0 ] unsigned long 
 23774 ;; Registers used:
 23775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 23776 ;; Tracked objects:
 23777 ;;		On entry : 0/0
 23778 ;;		On exit  : 0/0
 23779 ;;		Unchanged: 0/0
 23780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23781 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23782 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23784 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23785 ;;Total ram usage:       12 bytes
 23786 ;; Hardware stack levels used:    1
 23787 ;; Hardware stack levels required when called:    8
 23788 ;; This function calls:
 23789 ;;		_memcpy
 23790 ;; This function is called by:
 23791 ;;		_LORAWAN_RxDone
 23792 ;; This function uses a non-reentrant model
 23793 ;;
 23794                           
 23795                           	psect	text104
 23796  008C8C                     __ptext104:
 23797                           	opt stack 0
 23798  008C8C                     _ExtractMic:
 23799                           	opt stack 18
 23800                           
 23801                           ;lorawan.c: 2189: uint32_t mic = 0;
 23802                           
 23803                           ; BSR set to: 0
 23804                           ;incstack = 0
 23805  008C8C  0E00               	movlw	0
 23806  008C8E  0100               	movlb	0	; () banked
 23807  008C90  6F76               	movwf	ExtractMic@mic& (0+255),b
 23808  008C92  0E00               	movlw	0
 23809  008C94  6F77               	movwf	(ExtractMic@mic+1)& (0+255),b
 23810  008C96  0E00               	movlw	0
 23811  008C98  6F78               	movwf	(ExtractMic@mic+2)& (0+255),b
 23812  008C9A  0E00               	movlw	0
 23813  008C9C  6F79               	movwf	(ExtractMic@mic+3)& (0+255),b
 23814                           
 23815                           ; BSR set to: 0
 23816                           ;lorawan.c: 2190: memcpy (&mic, &buffer[bufferLength - 4], sizeof (mic));
 23817  008C9E  0E76               	movlw	low ExtractMic@mic
 23818  008CA0  0100               	movlb	0	; () banked
 23819  008CA2  6F64               	movwf	memcpy@d1& (0+255),b
 23820  008CA4  0E00               	movlw	high ExtractMic@mic
 23821  008CA6  0100               	movlb	0	; () banked
 23822  008CA8  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 23823  008CAA  0EFC               	movlw	252
 23824  008CAC  0100               	movlb	0	; () banked
 23825  008CAE  6F72               	movwf	??_ExtractMic& (0+255),b
 23826  008CB0  0EFF               	movlw	255
 23827  008CB2  0100               	movlb	0	; () banked
 23828  008CB4  6F73               	movwf	(??_ExtractMic+1)& (0+255),b
 23829  008CB6  0100               	movlb	0	; () banked
 23830  008CB8  5170               	movf	ExtractMic@bufferLength& (0+255),w,b
 23831  008CBA  0100               	movlb	0	; () banked
 23832  008CBC  6F74               	movwf	(??_ExtractMic+2)& (0+255),b
 23833  008CBE  6B75               	clrf	(??_ExtractMic+3)& (0+255),b
 23834  008CC0  0100               	movlb	0	; () banked
 23835  008CC2  5172               	movf	??_ExtractMic& (0+255),w,b
 23836  008CC4  0100               	movlb	0	; () banked
 23837  008CC6  2774               	addwf	(??_ExtractMic+2)& (0+255),f,b
 23838  008CC8  0100               	movlb	0	; () banked
 23839  008CCA  5173               	movf	(??_ExtractMic+1)& (0+255),w,b
 23840  008CCC  0100               	movlb	0	; () banked
 23841  008CCE  2375               	addwfc	(??_ExtractMic+3)& (0+255),f,b
 23842  008CD0  0100               	movlb	0	; () banked
 23843  008CD2  5174               	movf	(??_ExtractMic+2)& (0+255),w,b
 23844  008CD4  0100               	movlb	0	; () banked
 23845  008CD6  256E               	addwf	ExtractMic@buffer& (0+255),w,b
 23846  008CD8  0100               	movlb	0	; () banked
 23847  008CDA  6F66               	movwf	memcpy@s1& (0+255),b
 23848  008CDC  0100               	movlb	0	; () banked
 23849  008CDE  5175               	movf	(??_ExtractMic+3)& (0+255),w,b
 23850  008CE0  0100               	movlb	0	; () banked
 23851  008CE2  216F               	addwfc	(ExtractMic@buffer+1)& (0+255),w,b
 23852  008CE4  0100               	movlb	0	; () banked
 23853  008CE6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 23854  008CE8  0E00               	movlw	0
 23855  008CEA  0100               	movlb	0	; () banked
 23856  008CEC  6F69               	movwf	(memcpy@n+1)& (0+255),b
 23857  008CEE  0E04               	movlw	4
 23858  008CF0  6F68               	movwf	memcpy@n& (0+255),b
 23859  008CF2  EC07  F049         	call	_memcpy	;wreg free
 23860                           
 23861                           ;lorawan.c: 2191: return mic;
 23862  008CF6  C076  F06E         	movff	ExtractMic@mic,?_ExtractMic
 23863  008CFA  C077  F06F         	movff	ExtractMic@mic+1,?_ExtractMic+1
 23864  008CFE  C078  F070         	movff	ExtractMic@mic+2,?_ExtractMic+2
 23865  008D02  C079  F071         	movff	ExtractMic@mic+3,?_ExtractMic+3
 23866  008D06  0012               	return	
 23867  008D08                     __end_of_ExtractMic:
 23868                           	opt stack 0
 23869                           tosu	equ	0xFFF
 23870                           tosh	equ	0xFFE
 23871                           tosl	equ	0xFFD
 23872                           pclath	equ	0xFFA
 23873                           tblptru	equ	0xFF8
 23874                           tblptrh	equ	0xFF7
 23875                           tblptrl	equ	0xFF6
 23876                           tablat	equ	0xFF5
 23877                           prodh	equ	0xFF4
 23878                           prodl	equ	0xFF3
 23879                           intcon	equ	0xFF2
 23880                           intcon2	equ	0xFF1
 23881                           intcon3	equ	0xFF0
 23882                           indf0	equ	0xFEF
 23883                           postinc0	equ	0xFEE
 23884                           fsr0h	equ	0xFEA
 23885                           fsr0l	equ	0xFE9
 23886                           wreg	equ	0xFE8
 23887                           postinc1	equ	0xFE6
 23888                           postdec1	equ	0xFE5
 23889                           plusw1	equ	0xFE3
 23890                           fsr1h	equ	0xFE2
 23891                           fsr1l	equ	0xFE1
 23892                           indf2	equ	0xFDF
 23893                           postinc2	equ	0xFDE
 23894                           postdec2	equ	0xFDD
 23895                           plusw2	equ	0xFDB
 23896                           fsr2h	equ	0xFDA
 23897                           fsr2l	equ	0xFD9
 23898                           status	equ	0xFD8
 23899                           
 23900 ;; *************** function _ComputeSessionKeys *****************
 23901 ;; Defined at:
 23902 ;;		line 2062 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 23903 ;; Parameters:    Size  Location     Type
 23904 ;;  joinAcceptBu    2   69[BANK0 ] PTR struct .
 23905 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 23906 ;; Auto vars:     Size  Location     Type
 23907 ;;		None
 23908 ;; Return value:  Size  Location     Type
 23909 ;;                  1    wreg      void 
 23910 ;; Registers used:
 23911 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23912 ;; Tracked objects:
 23913 ;;		On entry : 0/0
 23914 ;;		On exit  : 0/0
 23915 ;;		Unchanged: 0/0
 23916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 23917 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23920 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 23921 ;;Total ram usage:        2 bytes
 23922 ;; Hardware stack levels used:    1
 23923 ;; Hardware stack levels required when called:   10
 23924 ;; This function calls:
 23925 ;;		_AESEncodeLoRa
 23926 ;;		_PrepareSessionKeys
 23927 ;; This function is called by:
 23928 ;;		_LORAWAN_RxDone
 23929 ;; This function uses a non-reentrant model
 23930 ;;
 23931                           
 23932                           	psect	text105
 23933  008160                     __ptext105:
 23934                           	opt stack 0
 23935  008160                     _ComputeSessionKeys:
 23936                           	opt stack 16
 23937                           
 23938                           ;lorawan.c: 2064: PrepareSessionKeys(loRa.activationParameters.applicationSessionKey, jo
      +                          inAcceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 23939                           
 23940                           ;incstack = 0
 23941  008160  0E32               	movlw	low (_loRa+50)
 23942  008162  0100               	movlb	0	; () banked
 23943  008164  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 23944  008166  0E02               	movlw	high (_loRa+50)
 23945  008168  0100               	movlb	0	; () banked
 23946  00816A  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 23947  00816C  0E01               	movlw	1
 23948  00816E  0100               	movlb	0	; () banked
 23949  008170  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23950  008172  0100               	movlb	0	; () banked
 23951  008174  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 23952  008176  0E00               	movlw	0
 23953  008178  0100               	movlb	0	; () banked
 23954  00817A  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23955  00817C  0100               	movlb	0	; () banked
 23956  00817E  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 23957  008180  0E04               	movlw	4
 23958  008182  0100               	movlb	0	; () banked
 23959  008184  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 23960  008186  0100               	movlb	0	; () banked
 23961  008188  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 23962  00818A  0E00               	movlw	0
 23963  00818C  0100               	movlb	0	; () banked
 23964  00818E  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 23965  008190  0100               	movlb	0	; () banked
 23966  008192  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 23967  008194  EC49  F03D         	call	_PrepareSessionKeys	;wreg free
 23968                           
 23969                           ;lorawan.c: 2065: loRa.activationParameters.applicationSessionKey[0] = 0x02;
 23970  008198  0E02               	movlw	2
 23971  00819A  0102               	movlb	2	; () banked
 23972  00819C  6F32               	movwf	(_loRa+50)& (0+255),b
 23973                           
 23974                           ; BSR set to: 2
 23975                           ;lorawan.c: 2066: AESEncodeLoRa(loRa.activationParameters.applicationSessionKey, loRa.ac
      +                          tivationParameters.applicationKey);
 23976  00819E  0E32               	movlw	low (_loRa+50)
 23977  0081A0  0100               	movlb	0	; () banked
 23978  0081A2  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 23979  0081A4  0E02               	movlw	high (_loRa+50)
 23980  0081A6  0100               	movlb	0	; () banked
 23981  0081A8  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 23982  0081AA  0E42               	movlw	low (_loRa+66)
 23983  0081AC  0100               	movlb	0	; () banked
 23984  0081AE  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 23985  0081B0  0E02               	movlw	high (_loRa+66)
 23986  0081B2  0100               	movlb	0	; () banked
 23987  0081B4  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 23988  0081B6  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 23989                           
 23990                           ;lorawan.c: 2068: PrepareSessionKeys(loRa.activationParameters.networkSessionKey, joinAc
      +                          ceptBuffer->members.appNonce, joinAcceptBuffer->members.networkId);
 23991  0081BA  0E22               	movlw	low (_loRa+34)
 23992  0081BC  0100               	movlb	0	; () banked
 23993  0081BE  6F6E               	movwf	PrepareSessionKeys@sessionKey& (0+255),b
 23994  0081C0  0E02               	movlw	high (_loRa+34)
 23995  0081C2  0100               	movlb	0	; () banked
 23996  0081C4  6F6F               	movwf	(PrepareSessionKeys@sessionKey+1)& (0+255),b
 23997  0081C6  0E01               	movlw	1
 23998  0081C8  0100               	movlb	0	; () banked
 23999  0081CA  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24000  0081CC  0100               	movlb	0	; () banked
 24001  0081CE  6F70               	movwf	PrepareSessionKeys@appNonce& (0+255),b
 24002  0081D0  0E00               	movlw	0
 24003  0081D2  0100               	movlb	0	; () banked
 24004  0081D4  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24005  0081D6  0100               	movlb	0	; () banked
 24006  0081D8  6F71               	movwf	(PrepareSessionKeys@appNonce+1)& (0+255),b
 24007  0081DA  0E04               	movlw	4
 24008  0081DC  0100               	movlb	0	; () banked
 24009  0081DE  25A5               	addwf	ComputeSessionKeys@joinAcceptBuffer& (0+255),w,b
 24010  0081E0  0100               	movlb	0	; () banked
 24011  0081E2  6F72               	movwf	PrepareSessionKeys@networkId& (0+255),b
 24012  0081E4  0E00               	movlw	0
 24013  0081E6  0100               	movlb	0	; () banked
 24014  0081E8  21A6               	addwfc	(ComputeSessionKeys@joinAcceptBuffer+1)& (0+255),w,b
 24015  0081EA  0100               	movlb	0	; () banked
 24016  0081EC  6F73               	movwf	(PrepareSessionKeys@networkId+1)& (0+255),b
 24017  0081EE  EC49  F03D         	call	_PrepareSessionKeys	;wreg free
 24018                           
 24019                           ;lorawan.c: 2069: loRa.activationParameters.networkSessionKey[0] = 0x01;
 24020  0081F2  0E01               	movlw	1
 24021  0081F4  0102               	movlb	2	; () banked
 24022  0081F6  6F22               	movwf	(_loRa+34)& (0+255),b
 24023                           
 24024                           ;lorawan.c: 2070: AESEncodeLoRa(loRa.activationParameters.networkSessionKey, loRa.activa
      +                          tionParameters.applicationKey);
 24025  0081F8  0E22               	movlw	low (_loRa+34)
 24026  0081FA  0100               	movlb	0	; () banked
 24027  0081FC  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 24028  0081FE  0E02               	movlw	high (_loRa+34)
 24029  008200  0100               	movlb	0	; () banked
 24030  008202  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 24031  008204  0E42               	movlw	low (_loRa+66)
 24032  008206  0100               	movlb	0	; () banked
 24033  008208  6F93               	movwf	AESEncodeLoRa@key& (0+255),b
 24034  00820A  0E02               	movlw	high (_loRa+66)
 24035  00820C  0100               	movlb	0	; () banked
 24036  00820E  6F94               	movwf	(AESEncodeLoRa@key+1)& (0+255),b
 24037  008210  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 24038  008214  0012               	return		;funcret
 24039  008216                     __end_of_ComputeSessionKeys:
 24040                           	opt stack 0
 24041                           tosu	equ	0xFFF
 24042                           tosh	equ	0xFFE
 24043                           tosl	equ	0xFFD
 24044                           pclath	equ	0xFFA
 24045                           tblptru	equ	0xFF8
 24046                           tblptrh	equ	0xFF7
 24047                           tblptrl	equ	0xFF6
 24048                           tablat	equ	0xFF5
 24049                           prodh	equ	0xFF4
 24050                           prodl	equ	0xFF3
 24051                           intcon	equ	0xFF2
 24052                           intcon2	equ	0xFF1
 24053                           intcon3	equ	0xFF0
 24054                           indf0	equ	0xFEF
 24055                           postinc0	equ	0xFEE
 24056                           fsr0h	equ	0xFEA
 24057                           fsr0l	equ	0xFE9
 24058                           wreg	equ	0xFE8
 24059                           postinc1	equ	0xFE6
 24060                           postdec1	equ	0xFE5
 24061                           plusw1	equ	0xFE3
 24062                           fsr1h	equ	0xFE2
 24063                           fsr1l	equ	0xFE1
 24064                           indf2	equ	0xFDF
 24065                           postinc2	equ	0xFDE
 24066                           postdec2	equ	0xFDD
 24067                           plusw2	equ	0xFDB
 24068                           fsr2h	equ	0xFDA
 24069                           fsr2l	equ	0xFD9
 24070                           status	equ	0xFD8
 24071                           
 24072 ;; *************** function _PrepareSessionKeys *****************
 24073 ;; Defined at:
 24074 ;;		line 2045 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24075 ;; Parameters:    Size  Location     Type
 24076 ;;  sessionKey      2   14[BANK0 ] PTR unsigned char 
 24077 ;;		 -> loRa.activationParameters(105), loRa(245), 
 24078 ;;  appNonce        2   16[BANK0 ] PTR unsigned char 
 24079 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24080 ;;  networkId       2   18[BANK0 ] PTR unsigned char 
 24081 ;;		 -> ComputeSessionKeys@joinAcceptBuffer(2), LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24082 ;; Auto vars:     Size  Location     Type
 24083 ;;  index           1   20[BANK0 ] unsigned char 
 24084 ;; Return value:  Size  Location     Type
 24085 ;;                  1    wreg      void 
 24086 ;; Registers used:
 24087 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24088 ;; Tracked objects:
 24089 ;;		On entry : 0/0
 24090 ;;		On exit  : 0/0
 24091 ;;		Unchanged: 0/0
 24092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24093 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24094 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24096 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24097 ;;Total ram usage:        7 bytes
 24098 ;; Hardware stack levels used:    1
 24099 ;; Hardware stack levels required when called:    8
 24100 ;; This function calls:
 24101 ;;		_memcpy
 24102 ;;		_memset
 24103 ;; This function is called by:
 24104 ;;		_ComputeSessionKeys
 24105 ;; This function uses a non-reentrant model
 24106 ;;
 24107                           
 24108                           	psect	text106
 24109  007A92                     __ptext106:
 24110                           	opt stack 0
 24111  007A92                     _PrepareSessionKeys:
 24112                           	opt stack 17
 24113                           
 24114                           ;lorawan.c: 2047: uint8_t index = 0;
 24115                           
 24116                           ;incstack = 0
 24117  007A92  0E00               	movlw	0
 24118  007A94  0100               	movlb	0	; () banked
 24119  007A96  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24120                           
 24121                           ; BSR set to: 0
 24122                           ;lorawan.c: 2049: memset (&sessionKey[index], 0, sizeof(aesBuffer));
 24123  007A98  0100               	movlb	0	; () banked
 24124  007A9A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24125  007A9C  0D01               	mullw	1
 24126  007A9E  50F3               	movf	prodl,w,c
 24127  007AA0  0100               	movlb	0	; () banked
 24128  007AA2  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24129  007AA4  0100               	movlb	0	; () banked
 24130  007AA6  6F64               	movwf	memset@p1& (0+255),b
 24131  007AA8  50F4               	movf	prodh,w,c
 24132  007AAA  0100               	movlb	0	; () banked
 24133  007AAC  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24134  007AAE  0100               	movlb	0	; () banked
 24135  007AB0  6F65               	movwf	(memset@p1+1)& (0+255),b
 24136  007AB2  0E00               	movlw	0
 24137  007AB4  0100               	movlb	0	; () banked
 24138  007AB6  6F67               	movwf	(memset@c+1)& (0+255),b
 24139  007AB8  0E00               	movlw	0
 24140  007ABA  6F66               	movwf	memset@c& (0+255),b
 24141  007ABC  0E00               	movlw	0
 24142  007ABE  0100               	movlb	0	; () banked
 24143  007AC0  6F69               	movwf	(memset@n+1)& (0+255),b
 24144  007AC2  0E10               	movlw	16
 24145  007AC4  6F68               	movwf	memset@n& (0+255),b
 24146  007AC6  EC0B  F04E         	call	_memset	;wreg free
 24147                           
 24148                           ;lorawan.c: 2050: index ++;
 24149  007ACA  0100               	movlb	0	; () banked
 24150  007ACC  2B74               	incf	PrepareSessionKeys@index& (0+255),f,b
 24151                           
 24152                           ; BSR set to: 0
 24153                           ;lorawan.c: 2052: memcpy(&sessionKey[index], appNonce, 3);
 24154  007ACE  0100               	movlb	0	; () banked
 24155  007AD0  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24156  007AD2  0D01               	mullw	1
 24157  007AD4  50F3               	movf	prodl,w,c
 24158  007AD6  0100               	movlb	0	; () banked
 24159  007AD8  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24160  007ADA  0100               	movlb	0	; () banked
 24161  007ADC  6F64               	movwf	memcpy@d1& (0+255),b
 24162  007ADE  50F4               	movf	prodh,w,c
 24163  007AE0  0100               	movlb	0	; () banked
 24164  007AE2  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24165  007AE4  0100               	movlb	0	; () banked
 24166  007AE6  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24167  007AE8  C070  F066         	movff	PrepareSessionKeys@appNonce,memcpy@s1
 24168  007AEC  C071  F067         	movff	PrepareSessionKeys@appNonce+1,memcpy@s1+1
 24169  007AF0  0E00               	movlw	0
 24170  007AF2  0100               	movlb	0	; () banked
 24171  007AF4  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24172  007AF6  0E03               	movlw	3
 24173  007AF8  6F68               	movwf	memcpy@n& (0+255),b
 24174  007AFA  EC07  F049         	call	_memcpy	;wreg free
 24175                           
 24176                           ;lorawan.c: 2053: index = index + 3;
 24177  007AFE  0100               	movlb	0	; () banked
 24178  007B00  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24179  007B02  0F03               	addlw	3
 24180  007B04  0100               	movlb	0	; () banked
 24181  007B06  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24182                           
 24183                           ; BSR set to: 0
 24184                           ;lorawan.c: 2055: memcpy(&sessionKey[index], networkId, 3);
 24185  007B08  0100               	movlb	0	; () banked
 24186  007B0A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24187  007B0C  0D01               	mullw	1
 24188  007B0E  50F3               	movf	prodl,w,c
 24189  007B10  0100               	movlb	0	; () banked
 24190  007B12  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24191  007B14  0100               	movlb	0	; () banked
 24192  007B16  6F64               	movwf	memcpy@d1& (0+255),b
 24193  007B18  50F4               	movf	prodh,w,c
 24194  007B1A  0100               	movlb	0	; () banked
 24195  007B1C  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24196  007B1E  0100               	movlb	0	; () banked
 24197  007B20  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24198  007B22  C072  F066         	movff	PrepareSessionKeys@networkId,memcpy@s1
 24199  007B26  C073  F067         	movff	PrepareSessionKeys@networkId+1,memcpy@s1+1
 24200  007B2A  0E00               	movlw	0
 24201  007B2C  0100               	movlb	0	; () banked
 24202  007B2E  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24203  007B30  0E03               	movlw	3
 24204  007B32  6F68               	movwf	memcpy@n& (0+255),b
 24205  007B34  EC07  F049         	call	_memcpy	;wreg free
 24206                           
 24207                           ;lorawan.c: 2056: index = index + 3;
 24208  007B38  0100               	movlb	0	; () banked
 24209  007B3A  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24210  007B3C  0F03               	addlw	3
 24211  007B3E  0100               	movlb	0	; () banked
 24212  007B40  6F74               	movwf	PrepareSessionKeys@index& (0+255),b
 24213                           
 24214                           ; BSR set to: 0
 24215                           ;lorawan.c: 2058: memcpy(&sessionKey[index], &loRa.devNonce, sizeof(loRa.devNonce) );
 24216  007B42  0100               	movlb	0	; () banked
 24217  007B44  5174               	movf	PrepareSessionKeys@index& (0+255),w,b
 24218  007B46  0D01               	mullw	1
 24219  007B48  50F3               	movf	prodl,w,c
 24220  007B4A  0100               	movlb	0	; () banked
 24221  007B4C  256E               	addwf	PrepareSessionKeys@sessionKey& (0+255),w,b
 24222  007B4E  0100               	movlb	0	; () banked
 24223  007B50  6F64               	movwf	memcpy@d1& (0+255),b
 24224  007B52  50F4               	movf	prodh,w,c
 24225  007B54  0100               	movlb	0	; () banked
 24226  007B56  216F               	addwfc	(PrepareSessionKeys@sessionKey+1)& (0+255),w,b
 24227  007B58  0100               	movlb	0	; () banked
 24228  007B5A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 24229  007B5C  0ED2               	movlw	low (_loRa+210)
 24230  007B5E  0100               	movlb	0	; () banked
 24231  007B60  6F66               	movwf	memcpy@s1& (0+255),b
 24232  007B62  0E02               	movlw	high (_loRa+210)
 24233  007B64  0100               	movlb	0	; () banked
 24234  007B66  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 24235  007B68  0E00               	movlw	0
 24236  007B6A  0100               	movlb	0	; () banked
 24237  007B6C  6F69               	movwf	(memcpy@n+1)& (0+255),b
 24238  007B6E  0E02               	movlw	2
 24239  007B70  6F68               	movwf	memcpy@n& (0+255),b
 24240  007B72  EC07  F049         	call	_memcpy	;wreg free
 24241  007B76  0012               	return		;funcret
 24242  007B78                     __end_of_PrepareSessionKeys:
 24243                           	opt stack 0
 24244                           tosu	equ	0xFFF
 24245                           tosh	equ	0xFFE
 24246                           tosl	equ	0xFFD
 24247                           pclath	equ	0xFFA
 24248                           tblptru	equ	0xFF8
 24249                           tblptrh	equ	0xFF7
 24250                           tblptrl	equ	0xFF6
 24251                           tablat	equ	0xFF5
 24252                           prodh	equ	0xFF4
 24253                           prodl	equ	0xFF3
 24254                           intcon	equ	0xFF2
 24255                           intcon2	equ	0xFF1
 24256                           intcon3	equ	0xFF0
 24257                           indf0	equ	0xFEF
 24258                           postinc0	equ	0xFEE
 24259                           fsr0h	equ	0xFEA
 24260                           fsr0l	equ	0xFE9
 24261                           wreg	equ	0xFE8
 24262                           postinc1	equ	0xFE6
 24263                           postdec1	equ	0xFE5
 24264                           plusw1	equ	0xFE3
 24265                           fsr1h	equ	0xFE2
 24266                           fsr1l	equ	0xFE1
 24267                           indf2	equ	0xFDF
 24268                           postinc2	equ	0xFDE
 24269                           postdec2	equ	0xFDD
 24270                           plusw2	equ	0xFDB
 24271                           fsr2h	equ	0xFDA
 24272                           fsr2l	equ	0xFD9
 24273                           status	equ	0xFD8
 24274                           
 24275 ;; *************** function _CheckMcastFlags *****************
 24276 ;; Defined at:
 24277 ;;		line 2097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24278 ;; Parameters:    Size  Location     Type
 24279 ;;  hdr             2    4[BANK0 ] PTR struct .
 24280 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24281 ;; Auto vars:     Size  Location     Type
 24282 ;;		None
 24283 ;; Return value:  Size  Location     Type
 24284 ;;                  1    wreg      unsigned char 
 24285 ;; Registers used:
 24286 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24287 ;; Tracked objects:
 24288 ;;		On entry : 0/0
 24289 ;;		On exit  : 0/0
 24290 ;;		Unchanged: 0/0
 24291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24296 ;;Total ram usage:        2 bytes
 24297 ;; Hardware stack levels used:    1
 24298 ;; Hardware stack levels required when called:    7
 24299 ;; This function calls:
 24300 ;;		Nothing
 24301 ;; This function is called by:
 24302 ;;		_LORAWAN_RxDone
 24303 ;; This function uses a non-reentrant model
 24304 ;;
 24305                           
 24306                           	psect	text107
 24307  0088E0                     __ptext107:
 24308                           	opt stack 0
 24309  0088E0                     _CheckMcastFlags:
 24310                           	opt stack 19
 24311                           
 24312                           ;lorawan.c: 2109: if ((0 != hdr->members.fCtrl.ack) || (0 != hdr->members.fCtrl.adrAckRe
      +                          q) || (FRAME_TYPE_DATA_UNCONFIRMED_DOWN != hdr->members.mhdr.bits.mType))
 24313                           
 24314                           ;incstack = 0
 24315  0088E0  0100               	movlb	0	; () banked
 24316  0088E2  EE20 F005          	lfsr	2,5
 24317  0088E6  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24318  0088E8  26D9               	addwf	fsr2l,f,c
 24319  0088EA  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24320  0088EC  22DA               	addwfc	fsr2h,f,c
 24321  0088EE  0100               	movlb	0	; () banked
 24322  0088F0  BADF               	btfsc	indf2,5,c
 24323  0088F2  D015               	goto	l15421
 24324                           
 24325                           ; BSR set to: 0
 24326  0088F4  0100               	movlb	0	; () banked
 24327  0088F6  EE20 F005          	lfsr	2,5
 24328  0088FA  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24329  0088FC  26D9               	addwf	fsr2l,f,c
 24330  0088FE  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24331  008900  22DA               	addwfc	fsr2h,f,c
 24332  008902  0100               	movlb	0	; () banked
 24333  008904  BCDF               	btfsc	indf2,6,c
 24334  008906  D00B               	goto	l15421
 24335                           
 24336                           ; BSR set to: 0
 24337  008908  C064  FFD9         	movff	CheckMcastFlags@hdr,fsr2l
 24338  00890C  C065  FFDA         	movff	CheckMcastFlags@hdr+1,fsr2h
 24339  008910  0100               	movlb	0	; () banked
 24340  008912  38DF               	swapf	223,w,c
 24341  008914  32E8               	rrcf	wreg,f,c
 24342  008916  0B07               	andlw	7
 24343  008918  0A03               	xorlw	3
 24344  00891A  B4D8               	btfsc	status,2,c
 24345  00891C  D002               	goto	l15425
 24346  00891E                     l15421:
 24347                           
 24348                           ; BSR set to: 0
 24349                           ;lorawan.c: 2110: {
 24350                           ;lorawan.c: 2111: return 0;
 24351  00891E  0E00               	movlw	0
 24352                           
 24353                           ; BSR set to: 0
 24354  008920  0012               	return	
 24355  008922                     l15425:
 24356                           
 24357                           ; BSR set to: 0
 24358                           ;lorawan.c: 2112: }
 24359                           ;lorawan.c: 2114: if (0 != hdr->members.fCtrl.fOptsLen)
 24360  008922  0100               	movlb	0	; () banked
 24361  008924  EE20 F005          	lfsr	2,5
 24362  008928  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24363  00892A  26D9               	addwf	fsr2l,f,c
 24364  00892C  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24365  00892E  22DA               	addwfc	fsr2h,f,c
 24366  008930  0100               	movlb	0	; () banked
 24367  008932  50DF               	movf	223,w,c
 24368  008934  0B0F               	andlw	15
 24369  008936  0900               	iorlw	0
 24370  008938  B4D8               	btfsc	status,2,c
 24371  00893A  D002               	goto	l15433
 24372  00893C                     l15427:
 24373                           
 24374                           ; BSR set to: 0
 24375                           ;lorawan.c: 2115: {
 24376                           ;lorawan.c: 2116: return 0;
 24377  00893C  0E00               	movlw	0
 24378                           
 24379                           ; BSR set to: 0
 24380  00893E  0012               	return	
 24381  008940                     l15433:
 24382                           
 24383                           ; BSR set to: 0
 24384                           ;lorawan.c: 2118: else
 24385                           ;lorawan.c: 2119: {
 24386                           ;lorawan.c: 2120: if ( 0 == *(((uint8_t *)hdr) + 8))
 24387  008940  0100               	movlb	0	; () banked
 24388  008942  EE20 F008          	lfsr	2,8
 24389  008946  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24390  008948  26D9               	addwf	fsr2l,f,c
 24391  00894A  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24392  00894C  22DA               	addwfc	fsr2h,f,c
 24393  00894E  50DF               	movf	indf2,w,c
 24394  008950  B4D8               	btfsc	status,2,c
 24395  008952  D7F4               	goto	l15427
 24396                           
 24397                           ; BSR set to: 0
 24398                           ;lorawan.c: 2123: }
 24399                           ;lorawan.c: 2124: }
 24400                           ;lorawan.c: 2126: if (hdr->members.fCtrl.fPending == 1)
 24401                           
 24402                           ; BSR set to: 0
 24403                           
 24404                           ; BSR set to: 0
 24405                           
 24406                           ; BSR set to: 0
 24407                           
 24408                           ; BSR set to: 0
 24409                           ;lorawan.c: 2121: {
 24410                           ;lorawan.c: 2122: return 0;
 24411  008954  0100               	movlb	0	; () banked
 24412  008956  EE20 F005          	lfsr	2,5
 24413  00895A  5164               	movf	CheckMcastFlags@hdr& (0+255),w,b
 24414  00895C  26D9               	addwf	fsr2l,f,c
 24415  00895E  5165               	movf	(CheckMcastFlags@hdr+1)& (0+255),w,b
 24416  008960  22DA               	addwfc	fsr2h,f,c
 24417  008962  0100               	movlb	0	; () banked
 24418  008964  A8DF               	btfss	indf2,4,c
 24419  008966  D002               	goto	l15443
 24420                           
 24421                           ; BSR set to: 0
 24422                           ;lorawan.c: 2127: {
 24423                           ;lorawan.c: 2128: loRa.lorawanMacStatus.fPending = 1;
 24424  008968  0102               	movlb	2	; () banked
 24425  00896A  8700               	bsf	_loRa& (0+255),3,b
 24426  00896C                     l15443:
 24427                           
 24428                           ;lorawan.c: 2129: }
 24429                           ;lorawan.c: 2131: return 1;
 24430  00896C  0E01               	movlw	1
 24431  00896E  0012               	return	
 24432  008970                     __end_of_CheckMcastFlags:
 24433                           	opt stack 0
 24434                           tosu	equ	0xFFF
 24435                           tosh	equ	0xFFE
 24436                           tosl	equ	0xFFD
 24437                           pclath	equ	0xFFA
 24438                           tblptru	equ	0xFF8
 24439                           tblptrh	equ	0xFF7
 24440                           tblptrl	equ	0xFF6
 24441                           tablat	equ	0xFF5
 24442                           prodh	equ	0xFF4
 24443                           prodl	equ	0xFF3
 24444                           intcon	equ	0xFF2
 24445                           intcon2	equ	0xFF1
 24446                           intcon3	equ	0xFF0
 24447                           indf0	equ	0xFEF
 24448                           postinc0	equ	0xFEE
 24449                           fsr0h	equ	0xFEA
 24450                           fsr0l	equ	0xFE9
 24451                           wreg	equ	0xFE8
 24452                           postinc1	equ	0xFE6
 24453                           postdec1	equ	0xFE5
 24454                           plusw1	equ	0xFE3
 24455                           fsr1h	equ	0xFE2
 24456                           fsr1l	equ	0xFE1
 24457                           indf2	equ	0xFDF
 24458                           postinc2	equ	0xFDE
 24459                           postdec2	equ	0xFDD
 24460                           plusw2	equ	0xFDB
 24461                           fsr2h	equ	0xFDA
 24462                           fsr2l	equ	0xFD9
 24463                           status	equ	0xFD8
 24464                           
 24465 ;; *************** function _CheckFlags *****************
 24466 ;; Defined at:
 24467 ;;		line 2074 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 24468 ;; Parameters:    Size  Location     Type
 24469 ;;  hdr             2    4[BANK0 ] PTR struct .
 24470 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), 
 24471 ;; Auto vars:     Size  Location     Type
 24472 ;;		None
 24473 ;; Return value:  Size  Location     Type
 24474 ;;                  1    wreg      void 
 24475 ;; Registers used:
 24476 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24477 ;; Tracked objects:
 24478 ;;		On entry : 0/0
 24479 ;;		On exit  : 0/0
 24480 ;;		Unchanged: 0/0
 24481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24482 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24483 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24485 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24486 ;;Total ram usage:        2 bytes
 24487 ;; Hardware stack levels used:    1
 24488 ;; Hardware stack levels required when called:    7
 24489 ;; This function calls:
 24490 ;;		Nothing
 24491 ;; This function is called by:
 24492 ;;		_LORAWAN_RxDone
 24493 ;; This function uses a non-reentrant model
 24494 ;;
 24495                           
 24496                           	psect	text108
 24497  0090E6                     __ptext108:
 24498                           	opt stack 0
 24499  0090E6                     _CheckFlags:
 24500                           	opt stack 19
 24501                           
 24502                           ;lorawan.c: 2076: if (hdr->members.fCtrl.adr == 1)
 24503                           
 24504                           ;incstack = 0
 24505  0090E6  0100               	movlb	0	; () banked
 24506  0090E8  EE20 F005          	lfsr	2,5
 24507  0090EC  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24508  0090EE  26D9               	addwf	fsr2l,f,c
 24509  0090F0  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24510  0090F2  22DA               	addwfc	fsr2h,f,c
 24511  0090F4  0100               	movlb	0	; () banked
 24512  0090F6  AEDF               	btfss	indf2,7,c
 24513  0090F8  D002               	goto	l15473
 24514                           
 24515                           ; BSR set to: 0
 24516                           ;lorawan.c: 2077: {
 24517                           ;lorawan.c: 2078: loRa.macStatus.adr = 1;
 24518  0090FA  0102               	movlb	2	; () banked
 24519  0090FC  8D02               	bsf	(_loRa+2)& (0+255),6,b
 24520  0090FE                     l15473:
 24521                           
 24522                           ;lorawan.c: 2079: }
 24523                           ;lorawan.c: 2081: if (hdr->members.fCtrl.fPending == 1)
 24524  0090FE  0100               	movlb	0	; () banked
 24525  009100  EE20 F005          	lfsr	2,5
 24526  009104  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24527  009106  26D9               	addwf	fsr2l,f,c
 24528  009108  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24529  00910A  22DA               	addwfc	fsr2h,f,c
 24530  00910C  0100               	movlb	0	; () banked
 24531  00910E  A8DF               	btfss	indf2,4,c
 24532  009110  D002               	goto	l15477
 24533                           
 24534                           ; BSR set to: 0
 24535                           ;lorawan.c: 2082: {
 24536                           ;lorawan.c: 2083: loRa.lorawanMacStatus.fPending = 1;
 24537  009112  0102               	movlb	2	; () banked
 24538  009114  8700               	bsf	_loRa& (0+255),3,b
 24539  009116                     l15477:
 24540                           
 24541                           ;lorawan.c: 2084: }
 24542                           ;lorawan.c: 2086: if (hdr->members.fCtrl.adrAckReq == 1)
 24543  009116  0100               	movlb	0	; () banked
 24544  009118  EE20 F005          	lfsr	2,5
 24545  00911C  5164               	movf	CheckFlags@hdr& (0+255),w,b
 24546  00911E  26D9               	addwf	fsr2l,f,c
 24547  009120  5165               	movf	(CheckFlags@hdr+1)& (0+255),w,b
 24548  009122  22DA               	addwfc	fsr2h,f,c
 24549  009124  0100               	movlb	0	; () banked
 24550  009126  ACDF               	btfss	indf2,6,c
 24551  009128  D002               	goto	l15481
 24552                           
 24553                           ; BSR set to: 0
 24554                           ;lorawan.c: 2087: {
 24555                           ;lorawan.c: 2088: loRa.lorawanMacStatus.adrAckRequest = 1;
 24556  00912A  0102               	movlb	2	; () banked
 24557  00912C  8900               	bsf	_loRa& (0+255),4,b
 24558  00912E                     l15481:
 24559                           
 24560                           ;lorawan.c: 2089: }
 24561                           ;lorawan.c: 2091: if (hdr->members.mhdr.bits.mType == FRAME_TYPE_DATA_CONFIRMED_DOWN)
 24562  00912E  C064  FFD9         	movff	CheckFlags@hdr,fsr2l
 24563  009132  C065  FFDA         	movff	CheckFlags@hdr+1,fsr2h
 24564  009136  0100               	movlb	0	; () banked
 24565  009138  38DF               	swapf	223,w,c
 24566  00913A  32E8               	rrcf	wreg,f,c
 24567  00913C  0B07               	andlw	7
 24568  00913E  0A05               	xorlw	5
 24569  009140  A4D8               	btfss	status,2,c
 24570  009142  0012               	return	
 24571                           
 24572                           ; BSR set to: 0
 24573                           ;lorawan.c: 2092: {
 24574                           ;lorawan.c: 2093: loRa.lorawanMacStatus.ackRequiredFromNextUplinkMessage = 1;
 24575  009144  0102               	movlb	2	; () banked
 24576  009146  8300               	bsf	_loRa& (0+255),1,b
 24577  009148  0012               	return	
 24578  00914A                     __end_of_CheckFlags:
 24579                           	opt stack 0
 24580                           tosu	equ	0xFFF
 24581                           tosh	equ	0xFFE
 24582                           tosl	equ	0xFFD
 24583                           pclath	equ	0xFFA
 24584                           tblptru	equ	0xFF8
 24585                           tblptrh	equ	0xFF7
 24586                           tblptrl	equ	0xFF6
 24587                           tablat	equ	0xFF5
 24588                           prodh	equ	0xFF4
 24589                           prodl	equ	0xFF3
 24590                           intcon	equ	0xFF2
 24591                           intcon2	equ	0xFF1
 24592                           intcon3	equ	0xFF0
 24593                           indf0	equ	0xFEF
 24594                           postinc0	equ	0xFEE
 24595                           fsr0h	equ	0xFEA
 24596                           fsr0l	equ	0xFE9
 24597                           wreg	equ	0xFE8
 24598                           postinc1	equ	0xFE6
 24599                           postdec1	equ	0xFE5
 24600                           plusw1	equ	0xFE3
 24601                           fsr1h	equ	0xFE2
 24602                           fsr1l	equ	0xFE1
 24603                           indf2	equ	0xFDF
 24604                           postinc2	equ	0xFDE
 24605                           postdec2	equ	0xFDD
 24606                           plusw2	equ	0xFDB
 24607                           fsr2h	equ	0xFDA
 24608                           fsr2l	equ	0xFD9
 24609                           status	equ	0xFD8
 24610                           
 24611 ;; *************** function _RADIO_FSKPacketSent *****************
 24612 ;; Defined at:
 24613 ;;		line 1093 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 24614 ;; Parameters:    Size  Location     Type
 24615 ;;		None
 24616 ;; Auto vars:     Size  Location     Type
 24617 ;;  timeOnAir       4  139[BANK0 ] unsigned long 
 24618 ;;  irqFlags        1  147[BANK0 ] unsigned char 
 24619 ;; Return value:  Size  Location     Type
 24620 ;;                  1    wreg      void 
 24621 ;; Registers used:
 24622 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24623 ;; Tracked objects:
 24624 ;;		On entry : 0/0
 24625 ;;		On exit  : 0/0
 24626 ;;		Unchanged: 0/0
 24627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24628 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24629 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24630 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24631 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24632 ;;Total ram usage:       13 bytes
 24633 ;; Hardware stack levels used:    1
 24634 ;; Hardware stack levels required when called:   15
 24635 ;; This function calls:
 24636 ;;		_LORAWAN_TxDone
 24637 ;;		_RADIO_RegisterRead
 24638 ;;		_RADIO_WriteMode
 24639 ;;		_SwTimerReadValue
 24640 ;;		_SwTimerStop
 24641 ;;		___lmul
 24642 ;; This function is called by:
 24643 ;;		_RADIO_DIO0
 24644 ;; This function uses a non-reentrant model
 24645 ;;
 24646                           
 24647                           	psect	text109
 24648  006704                     __ptext109:
 24649                           	opt stack 0
 24650  006704                     _RADIO_FSKPacketSent:
 24651                           	opt stack 13
 24652                           
 24653                           ;radio_driver_SX1276.c: 1095: uint8_t irqFlags;
 24654                           ;radio_driver_SX1276.c: 1096: uint32_t timeOnAir;
 24655                           ;radio_driver_SX1276.c: 1098: irqFlags = RADIO_RegisterRead(0x3F);
 24656                           
 24657                           ;incstack = 0
 24658  006704  0E3F               	movlw	63
 24659  006706  EC4D  F04F         	call	_RADIO_RegisterRead
 24660  00670A  0100               	movlb	0	; () banked
 24661  00670C  6FF3               	movwf	RADIO_FSKPacketSent@irqFlags& (0+255),b
 24662                           
 24663                           ; BSR set to: 0
 24664                           ;radio_driver_SX1276.c: 1099: if ((1<<(3)) == (irqFlags & (1<<(3))))
 24665  00670E  0100               	movlb	0	; () banked
 24666  006710  A7F3               	btfss	RADIO_FSKPacketSent@irqFlags& (0+255),3,b
 24667  006712  0012               	return	
 24668                           
 24669                           ; BSR set to: 0
 24670                           ;radio_driver_SX1276.c: 1100: {
 24671                           ;radio_driver_SX1276.c: 1101: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation,
      +                           0);
 24672  006714  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 24673  006718  0E00               	movlw	0
 24674  00671A  0100               	movlb	0	; () banked
 24675  00671C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 24676  00671E  0E00               	movlw	0
 24677  006720  EC70  F035         	call	_RADIO_WriteMode
 24678                           
 24679                           ;radio_driver_SX1276.c: 1102: RadioConfiguration.flags &= ~(1 << (0));
 24680  006724  0101               	movlb	1	; () banked
 24681  006726  91AF               	bcf	(_RadioConfiguration+35)& (0+255),0,b
 24682                           
 24683                           ; BSR set to: 1
 24684                           ;radio_driver_SX1276.c: 1104: SwTimerStop(RadioConfiguration.watchdogTimerId);
 24685  006728  0101               	movlb	1	; () banked
 24686  00672A  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 24687  00672C  EC61  F04F         	call	_SwTimerStop
 24688                           
 24689                           ;radio_driver_SX1276.c: 1106: if ((RadioConfiguration.flags & (1 << (4))) == 0)
 24690  006730  0101               	movlb	1	; () banked
 24691  006732  B9AF               	btfsc	(_RadioConfiguration+35)& (0+255),4,b
 24692  006734  0012               	return	
 24693                           
 24694                           ; BSR set to: 1
 24695                           ;radio_driver_SX1276.c: 1107: {
 24696                           ;radio_driver_SX1276.c: 1108: timeOnAir = ((uint32_t)20000) - ((SwTimerReadValue(RadioCo
      +                          nfiguration.timeOnAirTimerId)) < 0x00DFAC1FUL ? ( (((uint32_t)(SwTimerReadValue(RadioCon
      +                          figuration.timeOnAirTimerId))) * 125UL) >> (12) ) : ( (((uint32_t)(SwTimerReadValue(Radi
      +                          oConfiguration.t
 24697  006736  0101               	movlb	1	; () banked
 24698  006738  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24699  00673A  EC96  F04C         	call	_SwTimerReadValue
 24700  00673E  0100               	movlb	0	; () banked
 24701  006740  5198               	movf	(?_SwTimerReadValue+3)& (0+255),w,b
 24702  006742  E10B               	bnz	u19530
 24703  006744  0E1F               	movlw	31
 24704  006746  0100               	movlb	0	; () banked
 24705  006748  5D95               	subwf	?_SwTimerReadValue& (0+255),w,b
 24706  00674A  0EAC               	movlw	172
 24707  00674C  0100               	movlb	0	; () banked
 24708  00674E  5996               	subwfb	(?_SwTimerReadValue+1)& (0+255),w,b
 24709  006750  0EDF               	movlw	223
 24710  006752  0100               	movlb	0	; () banked
 24711  006754  5997               	subwfb	(?_SwTimerReadValue+2)& (0+255),w,b
 24712  006756  A0D8               	btfss	status,0,c
 24713  006758  D023               	goto	l16375
 24714  00675A                     u19530:
 24715                           
 24716                           ; BSR set to: 0
 24717  00675A  0101               	movlb	1	; () banked
 24718  00675C  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24719  00675E  EC96  F04C         	call	_SwTimerReadValue
 24720  006762  0E0D               	movlw	13
 24721  006764  D007               	goto	u19540
 24722  006766                     u19545:
 24723  006766  0100               	movlb	0	; () banked
 24724  006768  90D8               	bcf	status,0,c
 24725  00676A  3398               	rrcf	(?_SwTimerReadValue+3)& (0+255),f,b
 24726  00676C  3397               	rrcf	(?_SwTimerReadValue+2)& (0+255),f,b
 24727  00676E  0100               	movlb	0	; () banked
 24728  006770  3396               	rrcf	(?_SwTimerReadValue+1)& (0+255),f,b
 24729  006772  3395               	rrcf	?_SwTimerReadValue& (0+255),f,b
 24730  006774                     u19540:
 24731  006774  2EE8               	decfsz	wreg,f,c
 24732  006776  D7F7               	goto	u19545
 24733  006778  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
 24734  00677C  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 24735  006780  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 24736  006784  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 24737  006788  0E7D               	movlw	125
 24738  00678A  0100               	movlb	0	; () banked
 24739  00678C  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 24740  00678E  0E00               	movlw	0
 24741  006790  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24742  006792  0E00               	movlw	0
 24743  006794  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24744  006796  0E00               	movlw	0
 24745  006798  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24746  00679A  ECBF  F046         	call	___lmul	;wreg free
 24747  00679E  D022               	goto	L13
 24748  0067A0                     l16375:
 24749  0067A0  0101               	movlb	1	; () banked
 24750  0067A2  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24751  0067A4  EC96  F04C         	call	_SwTimerReadValue
 24752  0067A8  C095  F09E         	movff	?_SwTimerReadValue,___lmul@multiplier
 24753  0067AC  C096  F09F         	movff	?_SwTimerReadValue+1,___lmul@multiplier+1
 24754  0067B0  C097  F0A0         	movff	?_SwTimerReadValue+2,___lmul@multiplier+2
 24755  0067B4  C098  F0A1         	movff	?_SwTimerReadValue+3,___lmul@multiplier+3
 24756  0067B8  0E7D               	movlw	125
 24757  0067BA  0100               	movlb	0	; () banked
 24758  0067BC  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 24759  0067BE  0E00               	movlw	0
 24760  0067C0  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 24761  0067C2  0E00               	movlw	0
 24762  0067C4  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 24763  0067C6  0E00               	movlw	0
 24764  0067C8  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 24765  0067CA  ECBF  F046         	call	___lmul	;wreg free
 24766  0067CE  0E0D               	movlw	13
 24767  0067D0  D007               	goto	u19550
 24768  0067D2                     u19555:
 24769  0067D2  0100               	movlb	0	; () banked
 24770  0067D4  90D8               	bcf	status,0,c
 24771  0067D6  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
 24772  0067D8  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
 24773  0067DA  0100               	movlb	0	; () banked
 24774  0067DC  339F               	rrcf	(?___lmul+1)& (0+255),f,b
 24775  0067DE  339E               	rrcf	?___lmul& (0+255),f,b
 24776  0067E0                     u19550:
 24777  0067E0  2EE8               	decfsz	wreg,f,c
 24778  0067E2  D7F7               	goto	u19555
 24779  0067E4                     L13:
 24780  0067E4  C09E  F0EF         	movff	?___lmul,_RADIO_FSKPacketSent$1211
 24781  0067E8  C09F  F0F0         	movff	?___lmul+1,_RADIO_FSKPacketSent$1211+1
 24782  0067EC  C0A0  F0F1         	movff	?___lmul+2,_RADIO_FSKPacketSent$1211+2
 24783  0067F0  C0A1  F0F2         	movff	?___lmul+3,_RADIO_FSKPacketSent$1211+3
 24784                           
 24785                           ; BSR set to: 0
 24786  0067F4  C0EF  F0E7         	movff	_RADIO_FSKPacketSent$1211,??_RADIO_FSKPacketSent
 24787  0067F8  C0F0  F0E8         	movff	_RADIO_FSKPacketSent$1211+1,??_RADIO_FSKPacketSent+1
 24788  0067FC  C0F1  F0E9         	movff	_RADIO_FSKPacketSent$1211+2,??_RADIO_FSKPacketSent+2
 24789  006800  C0F2  F0EA         	movff	_RADIO_FSKPacketSent$1211+3,??_RADIO_FSKPacketSent+3
 24790  006804  0100               	movlb	0	; () banked
 24791  006806  1FE7               	comf	??_RADIO_FSKPacketSent& (0+255),f,b
 24792  006808  1FE8               	comf	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 24793  00680A  1FE9               	comf	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 24794  00680C  1FEA               	comf	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 24795  00680E  2BE7               	incf	??_RADIO_FSKPacketSent& (0+255),f,b
 24796  006810  0E00               	movlw	0
 24797  006812  23E8               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),f,b
 24798  006814  23E9               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),f,b
 24799  006816  23EA               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),f,b
 24800  006818  0E20               	movlw	32
 24801  00681A  0100               	movlb	0	; () banked
 24802  00681C  25E7               	addwf	??_RADIO_FSKPacketSent& (0+255),w,b
 24803  00681E  0100               	movlb	0	; () banked
 24804  006820  6FEB               	movwf	RADIO_FSKPacketSent@timeOnAir& (0+255),b
 24805  006822  0E4E               	movlw	78
 24806  006824  0100               	movlb	0	; () banked
 24807  006826  21E8               	addwfc	(??_RADIO_FSKPacketSent+1)& (0+255),w,b
 24808  006828  0100               	movlb	0	; () banked
 24809  00682A  6FEC               	movwf	(RADIO_FSKPacketSent@timeOnAir+1)& (0+255),b
 24810  00682C  0E00               	movlw	0
 24811  00682E  0100               	movlb	0	; () banked
 24812  006830  21E9               	addwfc	(??_RADIO_FSKPacketSent+2)& (0+255),w,b
 24813  006832  0100               	movlb	0	; () banked
 24814  006834  6FED               	movwf	(RADIO_FSKPacketSent@timeOnAir+2)& (0+255),b
 24815  006836  0E00               	movlw	0
 24816  006838  0100               	movlb	0	; () banked
 24817  00683A  21EA               	addwfc	(??_RADIO_FSKPacketSent+3)& (0+255),w,b
 24818  00683C  0100               	movlb	0	; () banked
 24819  00683E  6FEE               	movwf	(RADIO_FSKPacketSent@timeOnAir+3)& (0+255),b
 24820                           
 24821                           ; BSR set to: 0
 24822                           ;radio_driver_SX1276.c: 1109: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 24823  006840  0101               	movlb	1	; () banked
 24824  006842  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 24825  006844  EC61  F04F         	call	_SwTimerStop
 24826                           
 24827                           ;radio_driver_SX1276.c: 1110: LORAWAN_TxDone((uint16_t)timeOnAir);
 24828  006848  C0EB  F0BF         	movff	RADIO_FSKPacketSent@timeOnAir,LORAWAN_TxDone@timeOnAir
 24829  00684C  C0EC  F0C0         	movff	RADIO_FSKPacketSent@timeOnAir+1,LORAWAN_TxDone@timeOnAir+1
 24830  006850  EC9C  F007         	call	_LORAWAN_TxDone	;wreg free
 24831  006854  0012               	return	
 24832  006856                     __end_of_RADIO_FSKPacketSent:
 24833                           	opt stack 0
 24834                           tosu	equ	0xFFF
 24835                           tosh	equ	0xFFE
 24836                           tosl	equ	0xFFD
 24837                           pclath	equ	0xFFA
 24838                           tblptru	equ	0xFF8
 24839                           tblptrh	equ	0xFF7
 24840                           tblptrl	equ	0xFF6
 24841                           tablat	equ	0xFF5
 24842                           prodh	equ	0xFF4
 24843                           prodl	equ	0xFF3
 24844                           intcon	equ	0xFF2
 24845                           intcon2	equ	0xFF1
 24846                           intcon3	equ	0xFF0
 24847                           indf0	equ	0xFEF
 24848                           postinc0	equ	0xFEE
 24849                           fsr0h	equ	0xFEA
 24850                           fsr0l	equ	0xFE9
 24851                           wreg	equ	0xFE8
 24852                           postinc1	equ	0xFE6
 24853                           postdec1	equ	0xFE5
 24854                           plusw1	equ	0xFE3
 24855                           fsr1h	equ	0xFE2
 24856                           fsr1l	equ	0xFE1
 24857                           indf2	equ	0xFDF
 24858                           postinc2	equ	0xFDE
 24859                           postdec2	equ	0xFDD
 24860                           plusw2	equ	0xFDB
 24861                           fsr2h	equ	0xFDA
 24862                           fsr2l	equ	0xFD9
 24863                           status	equ	0xFD8
 24864                           
 24865 ;; *************** function _LORAWAN_TxDone *****************
 24866 ;; Defined at:
 24867 ;;		line 365 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 24868 ;; Parameters:    Size  Location     Type
 24869 ;;  timeOnAir       2   95[BANK0 ] unsigned int 
 24870 ;; Auto vars:     Size  Location     Type
 24871 ;;  minim           4  130[BANK0 ] unsigned long 
 24872 ;;  ticks           4  126[BANK0 ] unsigned long 
 24873 ;;  delta           4  118[BANK0 ] unsigned long 
 24874 ;;  i               1  134[BANK0 ] unsigned char 
 24875 ;;  found           1  117[BANK0 ] unsigned char 
 24876 ;; Return value:  Size  Location     Type
 24877 ;;                  1    wreg      void 
 24878 ;; Registers used:
 24879 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24880 ;; Tracked objects:
 24881 ;;		On entry : 0/0
 24882 ;;		On exit  : 0/0
 24883 ;;		Unchanged: 0/0
 24884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 24885 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24886 ;;      Locals:         0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24887 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24888 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 24889 ;;Total ram usage:       40 bytes
 24890 ;; Hardware stack levels used:    1
 24891 ;; Hardware stack levels required when called:   14
 24892 ;; This function calls:
 24893 ;;		_LORAWAN_EnterContinuousReceive
 24894 ;;		_RADIO_GetStatus
 24895 ;;		_RxDataDone
 24896 ;;		_SwTimerIsRunning
 24897 ;;		_SwTimerReadValue
 24898 ;;		_SwTimerSetTimeout
 24899 ;;		_SwTimerStart
 24900 ;;		_SwTimerStop
 24901 ;;		___lldiv
 24902 ;;		___lmul
 24903 ;; This function is called by:
 24904 ;;		_RADIO_TxDone
 24905 ;;		_RADIO_FSKPacketSent
 24906 ;;		_RADIO_WatchdogTimeout
 24907 ;; This function uses a non-reentrant model
 24908 ;;
 24909                           
 24910                           	psect	text110
 24911  000F38                     __ptext110:
 24912                           	opt stack 0
 24913  000F38                     _LORAWAN_TxDone:
 24914                           	opt stack 13
 24915                           
 24916                           ;lorawan_eu.c: 367: if (loRa.macStatus.macPause == 0)
 24917                           
 24918                           ;incstack = 0
 24919  000F38  0102               	movlb	2	; () banked
 24920  000F3A  B103               	btfsc	(_loRa+3)& (0+255),0,b
 24921  000F3C  EFBE  F00B         	goto	l16143
 24922                           
 24923                           ; BSR set to: 2
 24924                           ;lorawan_eu.c: 368: {
 24925                           ;lorawan_eu.c: 369: bool found = 0;
 24926  000F40  0E00               	movlw	0
 24927  000F42  0100               	movlb	0	; () banked
 24928  000F44  6FD5               	movwf	LORAWAN_TxDone@found& (0+255),b
 24929                           
 24930                           ;lorawan_eu.c: 370: uint8_t i;
 24931                           ;lorawan_eu.c: 371: uint32_t delta = 0, minim = (4294967295UL), ticks;
 24932  000F46  0E00               	movlw	0
 24933  000F48  0100               	movlb	0	; () banked
 24934  000F4A  6FD6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 24935  000F4C  0E00               	movlw	0
 24936  000F4E  6FD7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 24937  000F50  0E00               	movlw	0
 24938  000F52  6FD8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 24939  000F54  0E00               	movlw	0
 24940  000F56  6FD9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 24941                           
 24942                           ; BSR set to: 0
 24943  000F58  0100               	movlb	0	; () banked
 24944  000F5A  69E2               	setf	LORAWAN_TxDone@minim& (0+255),b
 24945  000F5C  69E3               	setf	(LORAWAN_TxDone@minim+1)& (0+255),b
 24946  000F5E  69E4               	setf	(LORAWAN_TxDone@minim+2)& (0+255),b
 24947  000F60  69E5               	setf	(LORAWAN_TxDone@minim+3)& (0+255),b
 24948                           
 24949                           ;lorawan_eu.c: 374: loRa.rx2DelayExpired = 0;
 24950  000F62  0E00               	movlw	0
 24951  000F64  0102               	movlb	2	; () banked
 24952  000F66  6FF1               	movwf	(_loRa+241)& (0+255),b
 24953                           
 24954                           ;lorawan_eu.c: 376: loRa.macStatus.macState = BEFORE_RX1;
 24955  000F68  0102               	movlb	2	; () banked
 24956  000F6A  5102               	movf	(_loRa+2)& (0+255),w,b
 24957  000F6C  0BF0               	andlw	-16
 24958  000F6E  0902               	iorlw	2
 24959  000F70  6F02               	movwf	(_loRa+2)& (0+255),b
 24960                           
 24961                           ; BSR set to: 2
 24962                           ;lorawan_eu.c: 378: i = loRa.lastUsedChannelIndex;
 24963  000F72  C2DA  F0E6         	movff	_loRa+218,LORAWAN_TxDone@i
 24964                           
 24965                           ; BSR set to: 2
 24966                           ;lorawan_eu.c: 381: if (loRa.lorawanMacStatus.joining == 1)
 24967  000F76  0102               	movlb	2	; () banked
 24968  000F78  A500               	btfss	_loRa& (0+255),2,b
 24969  000F7A  D0D2               	goto	l16077
 24970                           
 24971                           ; BSR set to: 2
 24972                           ;lorawan_eu.c: 382: {
 24973                           ;lorawan_eu.c: 383: SwTimerSetTimeout(loRa.joinAccept1TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 24974  000F7C  0102               	movlb	2	; () banked
 24975  000F7E  5117               	movf	(_loRa+23)& (0+255),w,b
 24976  000F80  0D01               	mullw	1
 24977  000F82  0E77               	movlw	low _rxWindowOffset
 24978  000F84  24F3               	addwf	prodl,w,c
 24979  000F86  6EF6               	movwf	tblptrl,c
 24980  000F88  0EFF               	movlw	high _rxWindowOffset
 24981  000F8A  20F4               	addwfc	prodh,w,c
 24982  000F8C  6EF7               	movwf	tblptrh,c
 24983  000F8E                     	if	1	;There are 3 active tblptr bytes
 24984  000F8E  6AF8               	clrf	tblptru,c
 24985  000F90  0E00               	movlw	low (__mediumconst shr (0+16))
 24986  000F92  22F8               	addwfc	tblptru,f,c
 24987  000F94                     	endif
 24988  000F94  0008               	tblrd		*
 24989  000F96  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 24990  000F9A  0102               	movlb	2	; () banked
 24991  000F9C  5198               	movf	(_loRa+152)& (0+255),w,b
 24992  000F9E  0100               	movlb	0	; () banked
 24993  000FA0  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 24994  000FA2  0100               	movlb	0	; () banked
 24995  000FA4  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 24996  000FA6  0E00               	movlw	0
 24997  000FA8  0100               	movlb	0	; () banked
 24998  000FAA  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 24999  000FAC  0EFF               	movlw	255
 25000  000FAE  0102               	movlb	2	; () banked
 25001  000FB0  2199               	addwfc	(_loRa+153)& (0+255),w,b
 25002  000FB2  0100               	movlb	0	; () banked
 25003  000FB4  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25004  000FB6  0100               	movlb	0	; () banked
 25005  000FB8  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25006  000FBA  0100               	movlb	0	; () banked
 25007  000FBC  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25008  000FBE  0E0C               	movlw	12
 25009  000FC0                     u19035:
 25010  000FC0  90D8               	bcf	status,0,c
 25011  000FC2  0100               	movlb	0	; () banked
 25012  000FC4  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25013  000FC6  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25014  000FC8  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25015  000FCA  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25016  000FCC  2EE8               	decfsz	wreg,f,c
 25017  000FCE  D7F8               	goto	u19035
 25018  000FD0  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25019  000FD4  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25020  000FD8  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25021  000FDC  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25022  000FE0  0E7D               	movlw	125
 25023  000FE2  0100               	movlb	0	; () banked
 25024  000FE4  6F68               	movwf	___lldiv@divisor& (0+255),b
 25025  000FE6  0E00               	movlw	0
 25026  000FE8  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25027  000FEA  0E00               	movlw	0
 25028  000FEC  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25029  000FEE  0E00               	movlw	0
 25030  000FF0  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25031  000FF2  EC99  F03F         	call	___lldiv	;wreg free
 25032  000FF6  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25033  000FFA  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25034  000FFE  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25035  001002  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25036  001006  0102               	movlb	2	; () banked
 25037  001008  51E2               	movf	(_loRa+226)& (0+255),w,b
 25038  00100A  EC70  F04A         	call	_SwTimerSetTimeout
 25039                           
 25040                           ;lorawan_eu.c: 384: SwTimerSetTimeout(loRa.joinAccept2TimerId, ( (((uint32_t)(loRa.proto
      +                          colParameters.joinAcceptDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25041  00100E  0102               	movlb	2	; () banked
 25042  001010  511C               	movf	(_loRa+28)& (0+255),w,b
 25043  001012  0D01               	mullw	1
 25044  001014  0E77               	movlw	low _rxWindowOffset
 25045  001016  24F3               	addwf	prodl,w,c
 25046  001018  6EF6               	movwf	tblptrl,c
 25047  00101A  0EFF               	movlw	high _rxWindowOffset
 25048  00101C  20F4               	addwfc	prodh,w,c
 25049  00101E  6EF7               	movwf	tblptrh,c
 25050  001020                     	if	1	;There are 3 active tblptr bytes
 25051  001020  6AF8               	clrf	tblptru,c
 25052  001022  0E00               	movlw	low (__mediumconst shr (0+16))
 25053  001024  22F8               	addwfc	tblptru,f,c
 25054  001026                     	endif
 25055  001026  0008               	tblrd		*
 25056  001028  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 25057  00102C  0102               	movlb	2	; () banked
 25058  00102E  519A               	movf	(_loRa+154)& (0+255),w,b
 25059  001030  0100               	movlb	0	; () banked
 25060  001032  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25061  001034  0100               	movlb	0	; () banked
 25062  001036  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25063  001038  0E00               	movlw	0
 25064  00103A  0100               	movlb	0	; () banked
 25065  00103C  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25066  00103E  0EFF               	movlw	255
 25067  001040  0102               	movlb	2	; () banked
 25068  001042  219B               	addwfc	(_loRa+155)& (0+255),w,b
 25069  001044  0100               	movlb	0	; () banked
 25070  001046  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25071  001048  0100               	movlb	0	; () banked
 25072  00104A  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25073  00104C  0100               	movlb	0	; () banked
 25074  00104E  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25075  001050  0E0C               	movlw	12
 25076  001052                     u19045:
 25077  001052  90D8               	bcf	status,0,c
 25078  001054  0100               	movlb	0	; () banked
 25079  001056  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25080  001058  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25081  00105A  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25082  00105C  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25083  00105E  2EE8               	decfsz	wreg,f,c
 25084  001060  D7F8               	goto	u19045
 25085  001062  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25086  001066  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25087  00106A  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25088  00106E  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25089  001072  0E7D               	movlw	125
 25090  001074  0100               	movlb	0	; () banked
 25091  001076  6F68               	movwf	___lldiv@divisor& (0+255),b
 25092  001078  0E00               	movlw	0
 25093  00107A  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25094  00107C  0E00               	movlw	0
 25095  00107E  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25096  001080  0E00               	movlw	0
 25097  001082  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25098  001084  EC99  F03F         	call	___lldiv	;wreg free
 25099  001088  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25100  00108C  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25101  001090  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25102  001094  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25103  001098  0102               	movlb	2	; () banked
 25104  00109A  51E3               	movf	(_loRa+227)& (0+255),w,b
 25105  00109C  EC70  F04A         	call	_SwTimerSetTimeout
 25106                           
 25107                           ;lorawan_eu.c: 385: SwTimerStart(loRa.joinAccept1TimerId);
 25108  0010A0  0102               	movlb	2	; () banked
 25109  0010A2  51E2               	movf	(_loRa+226)& (0+255),w,b
 25110  0010A4  EC06  F042         	call	_SwTimerStart
 25111                           
 25112                           ;lorawan_eu.c: 386: SwTimerStart(loRa.joinAccept2TimerId);
 25113  0010A8  0102               	movlb	2	; () banked
 25114  0010AA  51E3               	movf	(_loRa+227)& (0+255),w,b
 25115  0010AC  EC06  F042         	call	_SwTimerStart
 25116                           
 25117                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25118  0010B0  C2DB  F09E         	movff	_loRa+219,___lmul@multiplier
 25119  0010B4  C2DC  F09F         	movff	_loRa+220,___lmul@multiplier+1
 25120  0010B8  0100               	movlb	0	; () banked
 25121  0010BA  6BA0               	clrf	(___lmul@multiplier+2)& (0+255),b
 25122  0010BC  6BA1               	clrf	(___lmul@multiplier+3)& (0+255),b
 25123  0010BE  0ED6               	movlw	214
 25124  0010C0  0100               	movlb	0	; () banked
 25125  0010C2  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25126  0010C4  0E0B               	movlw	11
 25127  0010C6  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25128  0010C8  0E00               	movlw	0
 25129  0010CA  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25130  0010CC  0E00               	movlw	0
 25131  0010CE  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25132  0010D0  ECBF  F046         	call	___lmul	;wreg free
 25133  0010D4  0EFF               	movlw	255
 25134  0010D6  0100               	movlb	0	; () banked
 25135  0010D8  259E               	addwf	?___lmul& (0+255),w,b
 25136  0010DA  0100               	movlb	0	; () banked
 25137  0010DC  6FDA               	movwf	_LORAWAN_TxDone$6297& (0+255),b
 25138  0010DE  0EFF               	movlw	255
 25139  0010E0  0100               	movlb	0	; () banked
 25140  0010E2  219F               	addwfc	(?___lmul+1)& (0+255),w,b
 25141  0010E4  0100               	movlb	0	; () banked
 25142  0010E6  6FDB               	movwf	(_LORAWAN_TxDone$6297+1)& (0+255),b
 25143  0010E8  0EFF               	movlw	255
 25144  0010EA  0100               	movlb	0	; () banked
 25145  0010EC  21A0               	addwfc	(?___lmul+2)& (0+255),w,b
 25146  0010EE  0100               	movlb	0	; () banked
 25147  0010F0  6FDC               	movwf	(_LORAWAN_TxDone$6297+2)& (0+255),b
 25148  0010F2  0EFF               	movlw	255
 25149  0010F4  0100               	movlb	0	; () banked
 25150  0010F6  21A1               	addwfc	(?___lmul+3)& (0+255),w,b
 25151  0010F8  0100               	movlb	0	; () banked
 25152  0010FA  6FDD               	movwf	(_LORAWAN_TxDone$6297+3)& (0+255),b
 25153                           
 25154                           ; BSR set to: 0
 25155                           ;lorawan_eu.c: 388: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)3029 
      +                          + 1) * ((uint32_t)loRa.prescaler) - 1);
 25156  0010FC  C0DA  F09E         	movff	_LORAWAN_TxDone$6297,___lmul@multiplier
 25157  001100  C0DB  F09F         	movff	_LORAWAN_TxDone$6297+1,___lmul@multiplier+1
 25158  001104  C0DC  F0A0         	movff	_LORAWAN_TxDone$6297+2,___lmul@multiplier+2
 25159  001108  C0DD  F0A1         	movff	_LORAWAN_TxDone$6297+3,___lmul@multiplier+3
 25160  00110C  C0BF  F0A2         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25161  001110  C0C0  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25162  001114  0100               	movlb	0	; () banked
 25163  001116  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25164  001118  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25165  00111A  ECBF  F046         	call	___lmul	;wreg free
 25166  00111E  D0FD               	goto	L14
 25167  001120                     l16077:
 25168                           
 25169                           ;lorawan_eu.c: 390: else
 25170                           ;lorawan_eu.c: 391: {
 25171                           ;lorawan_eu.c: 392: SwTimerSetTimeout(loRa.receiveWindow1TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay1 + rxWindowOffset[loRa.receiveWindow1Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25172  001120  0102               	movlb	2	; () banked
 25173  001122  5117               	movf	(_loRa+23)& (0+255),w,b
 25174  001124  0D01               	mullw	1
 25175  001126  0E77               	movlw	low _rxWindowOffset
 25176  001128  24F3               	addwf	prodl,w,c
 25177  00112A  6EF6               	movwf	tblptrl,c
 25178  00112C  0EFF               	movlw	high _rxWindowOffset
 25179  00112E  20F4               	addwfc	prodh,w,c
 25180  001130  6EF7               	movwf	tblptrh,c
 25181  001132                     	if	1	;There are 3 active tblptr bytes
 25182  001132  6AF8               	clrf	tblptru,c
 25183  001134  0E00               	movlw	low (__mediumconst shr (0+16))
 25184  001136  22F8               	addwfc	tblptru,f,c
 25185  001138                     	endif
 25186  001138  0008               	tblrd		*
 25187  00113A  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 25188  00113E  0102               	movlb	2	; () banked
 25189  001140  5194               	movf	(_loRa+148)& (0+255),w,b
 25190  001142  0100               	movlb	0	; () banked
 25191  001144  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25192  001146  0100               	movlb	0	; () banked
 25193  001148  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25194  00114A  0E00               	movlw	0
 25195  00114C  0100               	movlb	0	; () banked
 25196  00114E  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25197  001150  0EFF               	movlw	255
 25198  001152  0102               	movlb	2	; () banked
 25199  001154  2195               	addwfc	(_loRa+149)& (0+255),w,b
 25200  001156  0100               	movlb	0	; () banked
 25201  001158  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25202  00115A  0100               	movlb	0	; () banked
 25203  00115C  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25204  00115E  0100               	movlb	0	; () banked
 25205  001160  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25206  001162  0E0C               	movlw	12
 25207  001164                     u19055:
 25208  001164  90D8               	bcf	status,0,c
 25209  001166  0100               	movlb	0	; () banked
 25210  001168  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25211  00116A  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25212  00116C  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25213  00116E  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25214  001170  2EE8               	decfsz	wreg,f,c
 25215  001172  D7F8               	goto	u19055
 25216  001174  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25217  001178  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25218  00117C  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25219  001180  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25220  001184  0E7D               	movlw	125
 25221  001186  0100               	movlb	0	; () banked
 25222  001188  6F68               	movwf	___lldiv@divisor& (0+255),b
 25223  00118A  0E00               	movlw	0
 25224  00118C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25225  00118E  0E00               	movlw	0
 25226  001190  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25227  001192  0E00               	movlw	0
 25228  001194  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25229  001196  EC99  F03F         	call	___lldiv	;wreg free
 25230  00119A  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25231  00119E  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25232  0011A2  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25233  0011A6  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25234  0011AA  0102               	movlb	2	; () banked
 25235  0011AC  51E4               	movf	(_loRa+228)& (0+255),w,b
 25236  0011AE  EC70  F04A         	call	_SwTimerSetTimeout
 25237                           
 25238                           ;lorawan_eu.c: 393: SwTimerSetTimeout(loRa.receiveWindow2TimerId, ( (((uint32_t)(loRa.pr
      +                          otocolParameters.receiveDelay2 + rxWindowOffset[loRa.receiveWindow2Parameters.dataRate])
      +                          ) << (12)) / 125UL ));
 25239  0011B2  0102               	movlb	2	; () banked
 25240  0011B4  511C               	movf	(_loRa+28)& (0+255),w,b
 25241  0011B6  0D01               	mullw	1
 25242  0011B8  0E77               	movlw	low _rxWindowOffset
 25243  0011BA  24F3               	addwf	prodl,w,c
 25244  0011BC  6EF6               	movwf	tblptrl,c
 25245  0011BE  0EFF               	movlw	high _rxWindowOffset
 25246  0011C0  20F4               	addwfc	prodh,w,c
 25247  0011C2  6EF7               	movwf	tblptrh,c
 25248  0011C4                     	if	1	;There are 3 active tblptr bytes
 25249  0011C4  6AF8               	clrf	tblptru,c
 25250  0011C6  0E00               	movlw	low (__mediumconst shr (0+16))
 25251  0011C8  22F8               	addwfc	tblptru,f,c
 25252  0011CA                     	endif
 25253  0011CA  0008               	tblrd		*
 25254  0011CC  CFF5 F0C1          	movff	tablat,??_LORAWAN_TxDone
 25255  0011D0  0102               	movlb	2	; () banked
 25256  0011D2  5196               	movf	(_loRa+150)& (0+255),w,b
 25257  0011D4  0100               	movlb	0	; () banked
 25258  0011D6  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25259  0011D8  0100               	movlb	0	; () banked
 25260  0011DA  6FC2               	movwf	(??_LORAWAN_TxDone+1)& (0+255),b
 25261  0011DC  0E00               	movlw	0
 25262  0011DE  0100               	movlb	0	; () banked
 25263  0011E0  BFC1               	btfsc	??_LORAWAN_TxDone& (0+255),7,b
 25264  0011E2  0EFF               	movlw	255
 25265  0011E4  0102               	movlb	2	; () banked
 25266  0011E6  2197               	addwfc	(_loRa+151)& (0+255),w,b
 25267  0011E8  0100               	movlb	0	; () banked
 25268  0011EA  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25269  0011EC  0100               	movlb	0	; () banked
 25270  0011EE  6BC4               	clrf	(??_LORAWAN_TxDone+3)& (0+255),b
 25271  0011F0  0100               	movlb	0	; () banked
 25272  0011F2  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25273  0011F4  0E0C               	movlw	12
 25274  0011F6                     u19065:
 25275  0011F6  90D8               	bcf	status,0,c
 25276  0011F8  0100               	movlb	0	; () banked
 25277  0011FA  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25278  0011FC  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25279  0011FE  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25280  001200  37C5               	rlcf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25281  001202  2EE8               	decfsz	wreg,f,c
 25282  001204  D7F8               	goto	u19065
 25283  001206  C0C2  F064         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend
 25284  00120A  C0C3  F065         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+1
 25285  00120E  C0C4  F066         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+2
 25286  001212  C0C5  F067         	movff	??_LORAWAN_TxDone+4,___lldiv@dividend+3
 25287  001216  0E7D               	movlw	125
 25288  001218  0100               	movlb	0	; () banked
 25289  00121A  6F68               	movwf	___lldiv@divisor& (0+255),b
 25290  00121C  0E00               	movlw	0
 25291  00121E  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25292  001220  0E00               	movlw	0
 25293  001222  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25294  001224  0E00               	movlw	0
 25295  001226  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25296  001228  EC99  F03F         	call	___lldiv	;wreg free
 25297  00122C  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 25298  001230  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 25299  001234  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 25300  001238  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 25301  00123C  0102               	movlb	2	; () banked
 25302  00123E  51E5               	movf	(_loRa+229)& (0+255),w,b
 25303  001240  EC70  F04A         	call	_SwTimerSetTimeout
 25304                           
 25305                           ;lorawan_eu.c: 394: SwTimerStart(loRa.receiveWindow1TimerId);
 25306  001244  0102               	movlb	2	; () banked
 25307  001246  51E4               	movf	(_loRa+228)& (0+255),w,b
 25308  001248  EC06  F042         	call	_SwTimerStart
 25309                           
 25310                           ;lorawan_eu.c: 395: if (CLASS_A == loRa.deviceClass)
 25311  00124C  0102               	movlb	2	; () banked
 25312  00124E  5112               	movf	(_loRa+18)& (0+255),w,b
 25313  001250  A4D8               	btfss	status,2,c
 25314  001252  D004               	goto	l1020
 25315                           
 25316                           ; BSR set to: 2
 25317                           ;lorawan_eu.c: 396: {
 25318                           ;lorawan_eu.c: 397: SwTimerStart(loRa.receiveWindow2TimerId);
 25319  001254  0102               	movlb	2	; () banked
 25320  001256  51E5               	movf	(_loRa+229)& (0+255),w,b
 25321  001258  EC06  F042         	call	_SwTimerStart
 25322  00125C                     l1020:
 25323                           
 25324                           ;lorawan_eu.c: 398: }
 25325                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25326  00125C  0100               	movlb	0	; () banked
 25327  00125E  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25328  001260  0D0E               	mullw	14
 25329  001262  0E06               	movlw	6
 25330  001264  26F3               	addwf	prodl,f,c
 25331  001266  0E00               	movlw	0
 25332  001268  22F4               	addwfc	prodh,f,c
 25333  00126A  0E00               	movlw	low _Channels
 25334  00126C  24F3               	addwf	prodl,w,c
 25335  00126E  6ED9               	movwf	fsr2l,c
 25336  001270  0E04               	movlw	high _Channels
 25337  001272  20F4               	addwfc	prodh,w,c
 25338  001274  6EDA               	movwf	fsr2h,c
 25339  001276  CFDE F0C1          	movff	postinc2,??_LORAWAN_TxDone
 25340  00127A  CFDD F0C2          	movff	postdec2,??_LORAWAN_TxDone+1
 25341  00127E  0100               	movlb	0	; () banked
 25342  001280  51C1               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25343  001282  0100               	movlb	0	; () banked
 25344  001284  6FC3               	movwf	(??_LORAWAN_TxDone+2)& (0+255),b
 25345  001286  0100               	movlb	0	; () banked
 25346  001288  51C2               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25347  00128A  0100               	movlb	0	; () banked
 25348  00128C  6FC4               	movwf	(??_LORAWAN_TxDone+3)& (0+255),b
 25349  00128E  0100               	movlb	0	; () banked
 25350  001290  6BC5               	clrf	(??_LORAWAN_TxDone+4)& (0+255),b
 25351  001292  0100               	movlb	0	; () banked
 25352  001294  6BC6               	clrf	(??_LORAWAN_TxDone+5)& (0+255),b
 25353  001296  0E01               	movlw	1
 25354  001298  0100               	movlb	0	; () banked
 25355  00129A  25C3               	addwf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25356  00129C  0100               	movlb	0	; () banked
 25357  00129E  6F9E               	movwf	___lmul@multiplier& (0+255),b
 25358  0012A0  0E00               	movlw	0
 25359  0012A2  0100               	movlb	0	; () banked
 25360  0012A4  21C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25361  0012A6  0100               	movlb	0	; () banked
 25362  0012A8  6F9F               	movwf	(___lmul@multiplier+1)& (0+255),b
 25363  0012AA  0E00               	movlw	0
 25364  0012AC  0100               	movlb	0	; () banked
 25365  0012AE  21C5               	addwfc	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25366  0012B0  0100               	movlb	0	; () banked
 25367  0012B2  6FA0               	movwf	(___lmul@multiplier+2)& (0+255),b
 25368  0012B4  0E00               	movlw	0
 25369  0012B6  0100               	movlb	0	; () banked
 25370  0012B8  21C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25371  0012BA  0100               	movlb	0	; () banked
 25372  0012BC  6FA1               	movwf	(___lmul@multiplier+3)& (0+255),b
 25373  0012BE  C2DB  F0A2         	movff	_loRa+219,___lmul@multiplicand
 25374  0012C2  C2DC  F0A3         	movff	_loRa+220,___lmul@multiplicand+1
 25375  0012C6  0100               	movlb	0	; () banked
 25376  0012C8  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25377  0012CA  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25378  0012CC  ECBF  F046         	call	___lmul	;wreg free
 25379  0012D0  0EFF               	movlw	255
 25380  0012D2  0100               	movlb	0	; () banked
 25381  0012D4  259E               	addwf	?___lmul& (0+255),w,b
 25382  0012D6  0100               	movlb	0	; () banked
 25383  0012D8  6FDA               	movwf	_LORAWAN_TxDone$6297& (0+255),b
 25384  0012DA  0EFF               	movlw	255
 25385  0012DC  0100               	movlb	0	; () banked
 25386  0012DE  219F               	addwfc	(?___lmul+1)& (0+255),w,b
 25387  0012E0  0100               	movlb	0	; () banked
 25388  0012E2  6FDB               	movwf	(_LORAWAN_TxDone$6297+1)& (0+255),b
 25389  0012E4  0EFF               	movlw	255
 25390  0012E6  0100               	movlb	0	; () banked
 25391  0012E8  21A0               	addwfc	(?___lmul+2)& (0+255),w,b
 25392  0012EA  0100               	movlb	0	; () banked
 25393  0012EC  6FDC               	movwf	(_LORAWAN_TxDone$6297+2)& (0+255),b
 25394  0012EE  0EFF               	movlw	255
 25395  0012F0  0100               	movlb	0	; () banked
 25396  0012F2  21A1               	addwfc	(?___lmul+3)& (0+255),w,b
 25397  0012F4  0100               	movlb	0	; () banked
 25398  0012F6  6FDD               	movwf	(_LORAWAN_TxDone$6297+3)& (0+255),b
 25399                           
 25400                           ;lorawan_eu.c: 398: }
 25401                           ;lorawan_eu.c: 400: Channels[i].channelTimer = ((uint32_t)timeOnAir) * (((uint32_t)Chann
      +                          els[i].dutyCycle + 1) * ((uint32_t)loRa.prescaler) - 1);
 25402  0012F8  C0DA  F09E         	movff	_LORAWAN_TxDone$6297,___lmul@multiplier
 25403  0012FC  C0DB  F09F         	movff	_LORAWAN_TxDone$6297+1,___lmul@multiplier+1
 25404  001300  C0DC  F0A0         	movff	_LORAWAN_TxDone$6297+2,___lmul@multiplier+2
 25405  001304  C0DD  F0A1         	movff	_LORAWAN_TxDone$6297+3,___lmul@multiplier+3
 25406  001308  C0BF  F0A2         	movff	LORAWAN_TxDone@timeOnAir,___lmul@multiplicand
 25407  00130C  C0C0  F0A3         	movff	LORAWAN_TxDone@timeOnAir+1,___lmul@multiplicand+1
 25408  001310  0100               	movlb	0	; () banked
 25409  001312  6BA4               	clrf	(___lmul@multiplicand+2)& (0+255),b
 25410  001314  6BA5               	clrf	(___lmul@multiplicand+3)& (0+255),b
 25411  001316  ECBF  F046         	call	___lmul	;wreg free
 25412  00131A                     L14:
 25413  00131A  0100               	movlb	0	; () banked
 25414  00131C  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25415  00131E  0D0E               	mullw	14
 25416  001320  0E08               	movlw	8
 25417  001322  26F3               	addwf	prodl,f,c
 25418  001324  0E00               	movlw	0
 25419  001326  22F4               	addwfc	prodh,f,c
 25420  001328  0E00               	movlw	low _Channels
 25421  00132A  24F3               	addwf	prodl,w,c
 25422  00132C  6ED9               	movwf	fsr2l,c
 25423  00132E  0E04               	movlw	high _Channels
 25424  001330  20F4               	addwfc	prodh,w,c
 25425  001332  6EDA               	movwf	fsr2h,c
 25426  001334  0100               	movlb	0	; () banked
 25427  001336  C09E  FFDE         	movff	?___lmul,postinc2
 25428  00133A  0100               	movlb	0	; () banked
 25429  00133C  C09F  FFDE         	movff	?___lmul+1,postinc2
 25430  001340  0100               	movlb	0	; () banked
 25431  001342  C0A0  FFDE         	movff	?___lmul+2,postinc2
 25432  001346  0100               	movlb	0	; () banked
 25433  001348  C0A1  FFDE         	movff	?___lmul+3,postinc2
 25434                           
 25435                           ; BSR set to: 0
 25436                           ;lorawan_eu.c: 401: }
 25437                           ;lorawan_eu.c: 403: if(SwTimerIsRunning(loRa.dutyCycleTimerId))
 25438  00134C  0102               	movlb	2	; () banked
 25439  00134E  51E9               	movf	(_loRa+233)& (0+255),w,b
 25440  001350  ECB5  F04E         	call	_SwTimerIsRunning
 25441  001354  0900               	iorlw	0
 25442  001356  B4D8               	btfsc	status,2,c
 25443  001358  D094               	goto	l16095
 25444                           
 25445                           ;lorawan_eu.c: 404: {
 25446                           ;lorawan_eu.c: 405: SwTimerStop(loRa.dutyCycleTimerId);
 25447  00135A  0102               	movlb	2	; () banked
 25448  00135C  51E9               	movf	(_loRa+233)& (0+255),w,b
 25449  00135E  EC61  F04F         	call	_SwTimerStop
 25450                           
 25451                           ;lorawan_eu.c: 407: ticks = SwTimerReadValue (loRa.dutyCycleTimerId);
 25452  001362  0102               	movlb	2	; () banked
 25453  001364  51E9               	movf	(_loRa+233)& (0+255),w,b
 25454  001366  EC96  F04C         	call	_SwTimerReadValue
 25455  00136A  C095  F0DE         	movff	?_SwTimerReadValue,LORAWAN_TxDone@ticks
 25456  00136E  C096  F0DF         	movff	?_SwTimerReadValue+1,LORAWAN_TxDone@ticks+1
 25457  001372  C097  F0E0         	movff	?_SwTimerReadValue+2,LORAWAN_TxDone@ticks+2
 25458  001376  C098  F0E1         	movff	?_SwTimerReadValue+3,LORAWAN_TxDone@ticks+3
 25459                           
 25460                           ;lorawan_eu.c: 408: delta = loRa.lastTimerValue - ((ticks) < 0x00DFAC1FUL ? ( (((uint32_
      +                          t)(ticks)) * 125UL) >> (12) ) : ( (((uint32_t)(ticks)) >> (12)) * 125UL ) );
 25461  00137A  0100               	movlb	0	; () banked
 25462  00137C  51E1               	movf	(LORAWAN_TxDone@ticks+3)& (0+255),w,b
 25463  00137E  E10B               	bnz	u19090
 25464  001380  0E1F               	movlw	31
 25465  001382  0100               	movlb	0	; () banked
 25466  001384  5DDE               	subwf	LORAWAN_TxDone@ticks& (0+255),w,b
 25467  001386  0EAC               	movlw	172
 25468  001388  0100               	movlb	0	; () banked
 25469  00138A  59DF               	subwfb	(LORAWAN_TxDone@ticks+1)& (0+255),w,b
 25470  00138C  0EDF               	movlw	223
 25471  00138E  0100               	movlb	0	; () banked
 25472  001390  59E0               	subwfb	(LORAWAN_TxDone@ticks+2)& (0+255),w,b
 25473  001392  A0D8               	btfss	status,0,c
 25474  001394  D026               	goto	l16091
 25475  001396                     u19090:
 25476                           
 25477                           ; BSR set to: 0
 25478  001396  C0DE  F0C1         	movff	LORAWAN_TxDone@ticks,??_LORAWAN_TxDone
 25479  00139A  C0DF  F0C2         	movff	LORAWAN_TxDone@ticks+1,??_LORAWAN_TxDone+1
 25480  00139E  C0E0  F0C3         	movff	LORAWAN_TxDone@ticks+2,??_LORAWAN_TxDone+2
 25481  0013A2  C0E1  F0C4         	movff	LORAWAN_TxDone@ticks+3,??_LORAWAN_TxDone+3
 25482  0013A6  0E0D               	movlw	13
 25483  0013A8  D006               	goto	u19100
 25484  0013AA                     u19105:
 25485  0013AA  0100               	movlb	0	; () banked
 25486  0013AC  90D8               	bcf	status,0,c
 25487  0013AE  33C4               	rrcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25488  0013B0  33C3               	rrcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25489  0013B2  33C2               	rrcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25490  0013B4  33C1               	rrcf	??_LORAWAN_TxDone& (0+255),f,b
 25491  0013B6                     u19100:
 25492  0013B6  2EE8               	decfsz	wreg,f,c
 25493  0013B8  D7F8               	goto	u19105
 25494  0013BA  C0C1  F09E         	movff	??_LORAWAN_TxDone,___lmul@multiplier
 25495  0013BE  C0C2  F09F         	movff	??_LORAWAN_TxDone+1,___lmul@multiplier+1
 25496  0013C2  C0C3  F0A0         	movff	??_LORAWAN_TxDone+2,___lmul@multiplier+2
 25497  0013C6  C0C4  F0A1         	movff	??_LORAWAN_TxDone+3,___lmul@multiplier+3
 25498  0013CA  0E7D               	movlw	125
 25499  0013CC  0100               	movlb	0	; () banked
 25500  0013CE  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25501  0013D0  0E00               	movlw	0
 25502  0013D2  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25503  0013D4  0E00               	movlw	0
 25504  0013D6  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25505  0013D8  0E00               	movlw	0
 25506  0013DA  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25507  0013DC  ECBF  F046         	call	___lmul	;wreg free
 25508  0013E0  D01E               	goto	L15
 25509  0013E2                     l16091:
 25510  0013E2  C0DE  F09E         	movff	LORAWAN_TxDone@ticks,___lmul@multiplier
 25511  0013E6  C0DF  F09F         	movff	LORAWAN_TxDone@ticks+1,___lmul@multiplier+1
 25512  0013EA  C0E0  F0A0         	movff	LORAWAN_TxDone@ticks+2,___lmul@multiplier+2
 25513  0013EE  C0E1  F0A1         	movff	LORAWAN_TxDone@ticks+3,___lmul@multiplier+3
 25514  0013F2  0E7D               	movlw	125
 25515  0013F4  0100               	movlb	0	; () banked
 25516  0013F6  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 25517  0013F8  0E00               	movlw	0
 25518  0013FA  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 25519  0013FC  0E00               	movlw	0
 25520  0013FE  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 25521  001400  0E00               	movlw	0
 25522  001402  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 25523  001404  ECBF  F046         	call	___lmul	;wreg free
 25524  001408  0E0D               	movlw	13
 25525  00140A  D007               	goto	u19110
 25526  00140C                     u19115:
 25527  00140C  0100               	movlb	0	; () banked
 25528  00140E  90D8               	bcf	status,0,c
 25529  001410  33A1               	rrcf	(?___lmul+3)& (0+255),f,b
 25530  001412  33A0               	rrcf	(?___lmul+2)& (0+255),f,b
 25531  001414  0100               	movlb	0	; () banked
 25532  001416  339F               	rrcf	(?___lmul+1)& (0+255),f,b
 25533  001418  339E               	rrcf	?___lmul& (0+255),f,b
 25534  00141A                     u19110:
 25535  00141A  2EE8               	decfsz	wreg,f,c
 25536  00141C  D7F7               	goto	u19115
 25537  00141E                     L15:
 25538  00141E  C09E  F0CD         	movff	?___lmul,_LORAWAN_TxDone$2088
 25539  001422  C09F  F0CE         	movff	?___lmul+1,_LORAWAN_TxDone$2088+1
 25540  001426  C0A0  F0CF         	movff	?___lmul+2,_LORAWAN_TxDone$2088+2
 25541  00142A  C0A1  F0D0         	movff	?___lmul+3,_LORAWAN_TxDone$2088+3
 25542                           
 25543                           ; BSR set to: 0
 25544  00142E  C0CD  F0C1         	movff	_LORAWAN_TxDone$2088,??_LORAWAN_TxDone
 25545  001432  C0CE  F0C2         	movff	_LORAWAN_TxDone$2088+1,??_LORAWAN_TxDone+1
 25546  001436  C0CF  F0C3         	movff	_LORAWAN_TxDone$2088+2,??_LORAWAN_TxDone+2
 25547  00143A  C0D0  F0C4         	movff	_LORAWAN_TxDone$2088+3,??_LORAWAN_TxDone+3
 25548  00143E  0100               	movlb	0	; () banked
 25549  001440  1FC1               	comf	??_LORAWAN_TxDone& (0+255),f,b
 25550  001442  1FC2               	comf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25551  001444  1FC3               	comf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25552  001446  1FC4               	comf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25553  001448  2BC1               	incf	??_LORAWAN_TxDone& (0+255),f,b
 25554  00144A  0E00               	movlw	0
 25555  00144C  23C2               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25556  00144E  23C3               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25557  001450  23C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25558  001452  0102               	movlb	2	; () banked
 25559  001454  51C8               	movf	(_loRa+200)& (0+255),w,b
 25560  001456  0100               	movlb	0	; () banked
 25561  001458  25C1               	addwf	??_LORAWAN_TxDone& (0+255),w,b
 25562  00145A  0100               	movlb	0	; () banked
 25563  00145C  6FD6               	movwf	LORAWAN_TxDone@delta& (0+255),b
 25564  00145E  0102               	movlb	2	; () banked
 25565  001460  51C9               	movf	(_loRa+201)& (0+255),w,b
 25566  001462  0100               	movlb	0	; () banked
 25567  001464  21C2               	addwfc	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25568  001466  0100               	movlb	0	; () banked
 25569  001468  6FD7               	movwf	(LORAWAN_TxDone@delta+1)& (0+255),b
 25570  00146A  0102               	movlb	2	; () banked
 25571  00146C  51CA               	movf	(_loRa+202)& (0+255),w,b
 25572  00146E  0100               	movlb	0	; () banked
 25573  001470  21C3               	addwfc	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25574  001472  0100               	movlb	0	; () banked
 25575  001474  6FD8               	movwf	(LORAWAN_TxDone@delta+2)& (0+255),b
 25576  001476  0102               	movlb	2	; () banked
 25577  001478  51CB               	movf	(_loRa+203)& (0+255),w,b
 25578  00147A  0100               	movlb	0	; () banked
 25579  00147C  21C4               	addwfc	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25580  00147E  0100               	movlb	0	; () banked
 25581  001480  6FD9               	movwf	(LORAWAN_TxDone@delta+3)& (0+255),b
 25582  001482                     l16095:
 25583                           
 25584                           ;lorawan_eu.c: 409: }
 25585                           ;lorawan_eu.c: 411: for (i=0; i < 16; i++)
 25586  001482  0E00               	movlw	0
 25587  001484  0100               	movlb	0	; () banked
 25588  001486  6FE6               	movwf	LORAWAN_TxDone@i& (0+255),b
 25589  001488                     l16097:
 25590                           
 25591                           ; BSR set to: 0
 25592  001488  0E0F               	movlw	15
 25593  00148A  0100               	movlb	0	; () banked
 25594  00148C  65E6               	cpfsgt	LORAWAN_TxDone@i& (0+255),b
 25595  00148E  D001               	goto	l16101
 25596  001490  D0F3               	goto	l16123
 25597  001492                     l16101:
 25598                           
 25599                           ; BSR set to: 0
 25600                           ;lorawan_eu.c: 412: {
 25601                           ;lorawan_eu.c: 413: if ((Channels[i].status == 1) && ( Channels[i].channelTimer != 0 ))
 25602  001492  0100               	movlb	0	; () banked
 25603  001494  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25604  001496  0D0E               	mullw	14
 25605  001498  0E04               	movlw	4
 25606  00149A  26F3               	addwf	prodl,f,c
 25607  00149C  0E00               	movlw	0
 25608  00149E  22F4               	addwfc	prodh,f,c
 25609  0014A0  0E00               	movlw	low _Channels
 25610  0014A2  24F3               	addwf	prodl,w,c
 25611  0014A4  6ED9               	movwf	fsr2l,c
 25612  0014A6  0E04               	movlw	high _Channels
 25613  0014A8  20F4               	addwfc	prodh,w,c
 25614  0014AA  6EDA               	movwf	fsr2h,c
 25615  0014AC  04DE               	decf	postinc2,w,c
 25616  0014AE  A4D8               	btfss	status,2,c
 25617  0014B0  D0E0               	goto	l16119
 25618                           
 25619                           ; BSR set to: 0
 25620  0014B2  0100               	movlb	0	; () banked
 25621  0014B4  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25622  0014B6  0D0E               	mullw	14
 25623  0014B8  0E08               	movlw	8
 25624  0014BA  26F3               	addwf	prodl,f,c
 25625  0014BC  0E00               	movlw	0
 25626  0014BE  22F4               	addwfc	prodh,f,c
 25627  0014C0  0E00               	movlw	low _Channels
 25628  0014C2  24F3               	addwf	prodl,w,c
 25629  0014C4  6ED9               	movwf	fsr2l,c
 25630  0014C6  0E04               	movlw	high _Channels
 25631  0014C8  20F4               	addwfc	prodh,w,c
 25632  0014CA  6EDA               	movwf	fsr2h,c
 25633  0014CC  50DE               	movf	postinc2,w,c
 25634  0014CE  10DE               	iorwf	postinc2,w,c
 25635  0014D0  10DE               	iorwf	postinc2,w,c
 25636  0014D2  10DE               	iorwf	postinc2,w,c
 25637  0014D4  B4D8               	btfsc	status,2,c
 25638  0014D6  D0CD               	goto	l16119
 25639                           
 25640                           ; BSR set to: 0
 25641                           ;lorawan_eu.c: 414: {
 25642                           ;lorawan_eu.c: 415: if( i != loRa.lastUsedChannelIndex )
 25643  0014D8  0100               	movlb	0	; () banked
 25644  0014DA  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25645  0014DC  0102               	movlb	2	; () banked
 25646  0014DE  19DA               	xorwf	(_loRa+218)& (0+255),w,b
 25647  0014E0  B4D8               	btfsc	status,2,c
 25648  0014E2  D081               	goto	l1029
 25649                           
 25650                           ; BSR set to: 2
 25651                           ;lorawan_eu.c: 416: {
 25652                           ;lorawan_eu.c: 417: if (Channels[i].channelTimer > delta)
 25653  0014E4  0100               	movlb	0	; () banked
 25654  0014E6  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25655  0014E8  0D0E               	mullw	14
 25656  0014EA  0E08               	movlw	8
 25657  0014EC  26F3               	addwf	prodl,f,c
 25658  0014EE  0E00               	movlw	0
 25659  0014F0  22F4               	addwfc	prodh,f,c
 25660  0014F2  0E00               	movlw	low _Channels
 25661  0014F4  24F3               	addwf	prodl,w,c
 25662  0014F6  6ED9               	movwf	fsr2l,c
 25663  0014F8  0E04               	movlw	high _Channels
 25664  0014FA  20F4               	addwfc	prodh,w,c
 25665  0014FC  6EDA               	movwf	fsr2h,c
 25666  0014FE  50DE               	movf	postinc2,w,c
 25667  001500  0100               	movlb	0	; () banked
 25668  001502  5DD6               	subwf	LORAWAN_TxDone@delta& (0+255),w,b
 25669  001504  50DE               	movf	postinc2,w,c
 25670  001506  0100               	movlb	0	; () banked
 25671  001508  59D7               	subwfb	(LORAWAN_TxDone@delta+1)& (0+255),w,b
 25672  00150A  50DE               	movf	postinc2,w,c
 25673  00150C  0100               	movlb	0	; () banked
 25674  00150E  59D8               	subwfb	(LORAWAN_TxDone@delta+2)& (0+255),w,b
 25675  001510  50DE               	movf	postinc2,w,c
 25676  001512  0100               	movlb	0	; () banked
 25677  001514  59D9               	subwfb	(LORAWAN_TxDone@delta+3)& (0+255),w,b
 25678  001516  B0D8               	btfsc	status,0,c
 25679  001518  D055               	goto	l16111
 25680                           
 25681                           ; BSR set to: 0
 25682                           ;lorawan_eu.c: 418: {
 25683                           ;lorawan_eu.c: 419: Channels[i].channelTimer = Channels[i].channelTimer - delta;
 25684  00151A  0100               	movlb	0	; () banked
 25685  00151C  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25686  00151E  0D0E               	mullw	14
 25687  001520  0E08               	movlw	8
 25688  001522  26F3               	addwf	prodl,f,c
 25689  001524  0E00               	movlw	0
 25690  001526  22F4               	addwfc	prodh,f,c
 25691  001528  0E00               	movlw	low _Channels
 25692  00152A  24F3               	addwf	prodl,w,c
 25693  00152C  6ED9               	movwf	fsr2l,c
 25694  00152E  0E04               	movlw	high _Channels
 25695  001530  20F4               	addwfc	prodh,w,c
 25696  001532  6EDA               	movwf	fsr2h,c
 25697  001534  CFDE F0C1          	movff	postinc2,??_LORAWAN_TxDone
 25698  001538  CFDE F0C2          	movff	postinc2,??_LORAWAN_TxDone+1
 25699  00153C  CFDE F0C3          	movff	postinc2,??_LORAWAN_TxDone+2
 25700  001540  CFDE F0C4          	movff	postinc2,??_LORAWAN_TxDone+3
 25701  001544  C0D6  F0C5         	movff	LORAWAN_TxDone@delta,??_LORAWAN_TxDone+4
 25702  001548  C0D7  F0C6         	movff	LORAWAN_TxDone@delta+1,??_LORAWAN_TxDone+5
 25703  00154C  C0D8  F0C7         	movff	LORAWAN_TxDone@delta+2,??_LORAWAN_TxDone+6
 25704  001550  C0D9  F0C8         	movff	LORAWAN_TxDone@delta+3,??_LORAWAN_TxDone+7
 25705  001554  0100               	movlb	0	; () banked
 25706  001556  1FC5               	comf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25707  001558  1FC6               	comf	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25708  00155A  1FC7               	comf	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25709  00155C  1FC8               	comf	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25710  00155E  2BC5               	incf	(??_LORAWAN_TxDone+4)& (0+255),f,b
 25711  001560  0E00               	movlw	0
 25712  001562  23C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),f,b
 25713  001564  23C7               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),f,b
 25714  001566  23C8               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),f,b
 25715  001568  0100               	movlb	0	; () banked
 25716  00156A  51C1               	movf	??_LORAWAN_TxDone& (0+255),w,b
 25717  00156C  0100               	movlb	0	; () banked
 25718  00156E  25C5               	addwf	(??_LORAWAN_TxDone+4)& (0+255),w,b
 25719  001570  0100               	movlb	0	; () banked
 25720  001572  6FC9               	movwf	(??_LORAWAN_TxDone+8)& (0+255),b
 25721  001574  0100               	movlb	0	; () banked
 25722  001576  51C2               	movf	(??_LORAWAN_TxDone+1)& (0+255),w,b
 25723  001578  0100               	movlb	0	; () banked
 25724  00157A  21C6               	addwfc	(??_LORAWAN_TxDone+5)& (0+255),w,b
 25725  00157C  0100               	movlb	0	; () banked
 25726  00157E  6FCA               	movwf	(??_LORAWAN_TxDone+9)& (0+255),b
 25727  001580  0100               	movlb	0	; () banked
 25728  001582  51C3               	movf	(??_LORAWAN_TxDone+2)& (0+255),w,b
 25729  001584  0100               	movlb	0	; () banked
 25730  001586  21C7               	addwfc	(??_LORAWAN_TxDone+6)& (0+255),w,b
 25731  001588  0100               	movlb	0	; () banked
 25732  00158A  6FCB               	movwf	(??_LORAWAN_TxDone+10)& (0+255),b
 25733  00158C  0100               	movlb	0	; () banked
 25734  00158E  51C4               	movf	(??_LORAWAN_TxDone+3)& (0+255),w,b
 25735  001590  0100               	movlb	0	; () banked
 25736  001592  21C8               	addwfc	(??_LORAWAN_TxDone+7)& (0+255),w,b
 25737  001594  0100               	movlb	0	; () banked
 25738  001596  6FCC               	movwf	(??_LORAWAN_TxDone+11)& (0+255),b
 25739  001598  0100               	movlb	0	; () banked
 25740  00159A  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25741  00159C  0D0E               	mullw	14
 25742  00159E  0E08               	movlw	8
 25743  0015A0  26F3               	addwf	prodl,f,c
 25744  0015A2  0E00               	movlw	0
 25745  0015A4  22F4               	addwfc	prodh,f,c
 25746  0015A6  0E00               	movlw	low _Channels
 25747  0015A8  24F3               	addwf	prodl,w,c
 25748  0015AA  6ED9               	movwf	fsr2l,c
 25749  0015AC  0E04               	movlw	high _Channels
 25750  0015AE  20F4               	addwfc	prodh,w,c
 25751  0015B0  6EDA               	movwf	fsr2h,c
 25752  0015B2  C0C9  FFDE         	movff	??_LORAWAN_TxDone+8,postinc2
 25753  0015B6  C0CA  FFDE         	movff	??_LORAWAN_TxDone+9,postinc2
 25754  0015BA  C0CB  FFDE         	movff	??_LORAWAN_TxDone+10,postinc2
 25755  0015BE  C0CC  FFDE         	movff	??_LORAWAN_TxDone+11,postinc2
 25756                           
 25757                           ;lorawan_eu.c: 420: }
 25758  0015C2  D011               	goto	l1029
 25759  0015C4                     l16111:
 25760                           
 25761                           ; BSR set to: 0
 25762                           ;lorawan_eu.c: 421: else
 25763                           ;lorawan_eu.c: 422: {
 25764                           ;lorawan_eu.c: 423: Channels[i].channelTimer = 0;
 25765  0015C4  0100               	movlb	0	; () banked
 25766  0015C6  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25767  0015C8  0D0E               	mullw	14
 25768  0015CA  0E08               	movlw	8
 25769  0015CC  26F3               	addwf	prodl,f,c
 25770  0015CE  0E00               	movlw	0
 25771  0015D0  22F4               	addwfc	prodh,f,c
 25772  0015D2  0E00               	movlw	low _Channels
 25773  0015D4  24F3               	addwf	prodl,w,c
 25774  0015D6  6ED9               	movwf	fsr2l,c
 25775  0015D8  0E04               	movlw	high _Channels
 25776  0015DA  20F4               	addwfc	prodh,w,c
 25777  0015DC  6EDA               	movwf	fsr2h,c
 25778  0015DE  6ADE               	clrf	postinc2,c
 25779  0015E0  6ADE               	clrf	postinc2,c
 25780  0015E2  6ADE               	clrf	postinc2,c
 25781  0015E4  6ADD               	clrf	postdec2,c
 25782  0015E6                     l1029:
 25783                           
 25784                           ;lorawan_eu.c: 424: }
 25785                           ;lorawan_eu.c: 425: }
 25786                           ;lorawan_eu.c: 426: if ( (Channels[i].channelTimer <= minim) && (Channels[i].channelTime
      +                          r !=0) )
 25787  0015E6  0100               	movlb	0	; () banked
 25788  0015E8  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25789  0015EA  0D0E               	mullw	14
 25790  0015EC  0E08               	movlw	8
 25791  0015EE  26F3               	addwf	prodl,f,c
 25792  0015F0  0E00               	movlw	0
 25793  0015F2  22F4               	addwfc	prodh,f,c
 25794  0015F4  0E00               	movlw	low _Channels
 25795  0015F6  24F3               	addwf	prodl,w,c
 25796  0015F8  6ED9               	movwf	fsr2l,c
 25797  0015FA  0E04               	movlw	high _Channels
 25798  0015FC  20F4               	addwfc	prodh,w,c
 25799  0015FE  6EDA               	movwf	fsr2h,c
 25800  001600  50DE               	movf	postinc2,w,c
 25801  001602  0100               	movlb	0	; () banked
 25802  001604  5DE2               	subwf	LORAWAN_TxDone@minim& (0+255),w,b
 25803  001606  50DE               	movf	postinc2,w,c
 25804  001608  0100               	movlb	0	; () banked
 25805  00160A  59E3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 25806  00160C  50DE               	movf	postinc2,w,c
 25807  00160E  0100               	movlb	0	; () banked
 25808  001610  59E4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 25809  001612  50DE               	movf	postinc2,w,c
 25810  001614  0100               	movlb	0	; () banked
 25811  001616  59E5               	subwfb	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 25812  001618  A0D8               	btfss	status,0,c
 25813  00161A  D02B               	goto	l16119
 25814                           
 25815                           ; BSR set to: 0
 25816  00161C  0100               	movlb	0	; () banked
 25817  00161E  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25818  001620  0D0E               	mullw	14
 25819  001622  0E08               	movlw	8
 25820  001624  26F3               	addwf	prodl,f,c
 25821  001626  0E00               	movlw	0
 25822  001628  22F4               	addwfc	prodh,f,c
 25823  00162A  0E00               	movlw	low _Channels
 25824  00162C  24F3               	addwf	prodl,w,c
 25825  00162E  6ED9               	movwf	fsr2l,c
 25826  001630  0E04               	movlw	high _Channels
 25827  001632  20F4               	addwfc	prodh,w,c
 25828  001634  6EDA               	movwf	fsr2h,c
 25829  001636  50DE               	movf	postinc2,w,c
 25830  001638  10DE               	iorwf	postinc2,w,c
 25831  00163A  10DE               	iorwf	postinc2,w,c
 25832  00163C  10DE               	iorwf	postinc2,w,c
 25833  00163E  B4D8               	btfsc	status,2,c
 25834  001640  D018               	goto	l16119
 25835                           
 25836                           ; BSR set to: 0
 25837                           ;lorawan_eu.c: 427: {
 25838                           ;lorawan_eu.c: 428: minim = Channels[i].channelTimer;
 25839  001642  0100               	movlb	0	; () banked
 25840  001644  51E6               	movf	LORAWAN_TxDone@i& (0+255),w,b
 25841  001646  0D0E               	mullw	14
 25842  001648  0E08               	movlw	8
 25843  00164A  26F3               	addwf	prodl,f,c
 25844  00164C  0E00               	movlw	0
 25845  00164E  22F4               	addwfc	prodh,f,c
 25846  001650  0E00               	movlw	low _Channels
 25847  001652  24F3               	addwf	prodl,w,c
 25848  001654  6ED9               	movwf	fsr2l,c
 25849  001656  0E04               	movlw	high _Channels
 25850  001658  20F4               	addwfc	prodh,w,c
 25851  00165A  6EDA               	movwf	fsr2h,c
 25852  00165C  CFDE F0E2          	movff	postinc2,LORAWAN_TxDone@minim
 25853  001660  CFDE F0E3          	movff	postinc2,LORAWAN_TxDone@minim+1
 25854  001664  CFDE F0E4          	movff	postinc2,LORAWAN_TxDone@minim+2
 25855  001668  CFDE F0E5          	movff	postinc2,LORAWAN_TxDone@minim+3
 25856                           
 25857                           ; BSR set to: 0
 25858                           ;lorawan_eu.c: 429: found = 1;
 25859  00166C  0E01               	movlw	1
 25860  00166E  0100               	movlb	0	; () banked
 25861  001670  6FD5               	movwf	LORAWAN_TxDone@found& (0+255),b
 25862  001672                     l16119:
 25863                           
 25864                           ; BSR set to: 0
 25865  001672  0100               	movlb	0	; () banked
 25866  001674  2BE6               	incf	LORAWAN_TxDone@i& (0+255),f,b
 25867  001676  D708               	goto	l16097
 25868  001678                     l16123:
 25869                           
 25870                           ; BSR set to: 0
 25871                           ;lorawan_eu.c: 430: }
 25872                           ;lorawan_eu.c: 431: }
 25873                           ;lorawan_eu.c: 432: }
 25874                           ;lorawan_eu.c: 433: if (found == 1)
 25875  001678  0100               	movlb	0	; () banked
 25876  00167A  05D5               	decf	LORAWAN_TxDone@found& (0+255),w,b
 25877  00167C  A4D8               	btfss	status,2,c
 25878  00167E  D071               	goto	l16137
 25879                           
 25880                           ; BSR set to: 0
 25881                           ;lorawan_eu.c: 434: {
 25882                           ;lorawan_eu.c: 435: loRa.lastTimerValue = minim;
 25883  001680  C0E2  F2C8         	movff	LORAWAN_TxDone@minim,_loRa+200
 25884  001684  C0E3  F2C9         	movff	LORAWAN_TxDone@minim+1,_loRa+201
 25885  001688  C0E4  F2CA         	movff	LORAWAN_TxDone@minim+2,_loRa+202
 25886  00168C  C0E5  F2CB         	movff	LORAWAN_TxDone@minim+3,_loRa+203
 25887                           
 25888                           ; BSR set to: 0
 25889                           ;lorawan_eu.c: 436: SwTimerSetTimeout (loRa.dutyCycleTimerId, ((minim) < 0x000FFFFFUL ? 
      +                          ( (((uint32_t)(minim)) << (12)) / 125UL ) : ( (((uint32_t)(minim)) / 125UL) << (12) ) ))
      +                          ;
 25890  001690  0100               	movlb	0	; () banked
 25891  001692  51E5               	movf	(LORAWAN_TxDone@minim+3)& (0+255),w,b
 25892  001694  E10A               	bnz	u19210
 25893  001696  0100               	movlb	0	; () banked
 25894  001698  29E2               	incf	LORAWAN_TxDone@minim& (0+255),w,b
 25895  00169A  0EFF               	movlw	255
 25896  00169C  0100               	movlb	0	; () banked
 25897  00169E  59E3               	subwfb	(LORAWAN_TxDone@minim+1)& (0+255),w,b
 25898  0016A0  0E0F               	movlw	15
 25899  0016A2  0100               	movlb	0	; () banked
 25900  0016A4  59E4               	subwfb	(LORAWAN_TxDone@minim+2)& (0+255),w,b
 25901  0016A6  A0D8               	btfss	status,0,c
 25902  0016A8  D020               	goto	l16131
 25903  0016AA                     u19210:
 25904                           
 25905                           ; BSR set to: 0
 25906  0016AA  C0E2  F064         	movff	LORAWAN_TxDone@minim,___lldiv@dividend
 25907  0016AE  C0E3  F065         	movff	LORAWAN_TxDone@minim+1,___lldiv@dividend+1
 25908  0016B2  C0E4  F066         	movff	LORAWAN_TxDone@minim+2,___lldiv@dividend+2
 25909  0016B6  C0E5  F067         	movff	LORAWAN_TxDone@minim+3,___lldiv@dividend+3
 25910  0016BA  0E7D               	movlw	125
 25911  0016BC  0100               	movlb	0	; () banked
 25912  0016BE  6F68               	movwf	___lldiv@divisor& (0+255),b
 25913  0016C0  0E00               	movlw	0
 25914  0016C2  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25915  0016C4  0E00               	movlw	0
 25916  0016C6  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25917  0016C8  0E00               	movlw	0
 25918  0016CA  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25919  0016CC  EC99  F03F         	call	___lldiv	;wreg free
 25920  0016D0  0E0C               	movlw	12
 25921  0016D2                     u19225:
 25922  0016D2  90D8               	bcf	status,0,c
 25923  0016D4  0100               	movlb	0	; () banked
 25924  0016D6  3764               	rlcf	?___lldiv& (0+255),f,b
 25925  0016D8  0100               	movlb	0	; () banked
 25926  0016DA  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 25927  0016DC  0100               	movlb	0	; () banked
 25928  0016DE  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 25929  0016E0  0100               	movlb	0	; () banked
 25930  0016E2  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 25931  0016E4  2EE8               	decfsz	wreg,f,c
 25932  0016E6  D7F5               	goto	u19225
 25933  0016E8  D024               	goto	L16
 25934  0016EA                     l16131:
 25935                           
 25936                           ; BSR set to: 0
 25937  0016EA  C0E2  F0C1         	movff	LORAWAN_TxDone@minim,??_LORAWAN_TxDone
 25938  0016EE  C0E3  F0C2         	movff	LORAWAN_TxDone@minim+1,??_LORAWAN_TxDone+1
 25939  0016F2  C0E4  F0C3         	movff	LORAWAN_TxDone@minim+2,??_LORAWAN_TxDone+2
 25940  0016F6  C0E5  F0C4         	movff	LORAWAN_TxDone@minim+3,??_LORAWAN_TxDone+3
 25941  0016FA  0E0C               	movlw	12
 25942  0016FC                     u19235:
 25943  0016FC  90D8               	bcf	status,0,c
 25944  0016FE  0100               	movlb	0	; () banked
 25945  001700  37C1               	rlcf	??_LORAWAN_TxDone& (0+255),f,b
 25946  001702  37C2               	rlcf	(??_LORAWAN_TxDone+1)& (0+255),f,b
 25947  001704  37C3               	rlcf	(??_LORAWAN_TxDone+2)& (0+255),f,b
 25948  001706  37C4               	rlcf	(??_LORAWAN_TxDone+3)& (0+255),f,b
 25949  001708  2EE8               	decfsz	wreg,f,c
 25950  00170A  D7F8               	goto	u19235
 25951  00170C  C0C1  F064         	movff	??_LORAWAN_TxDone,___lldiv@dividend
 25952  001710  C0C2  F065         	movff	??_LORAWAN_TxDone+1,___lldiv@dividend+1
 25953  001714  C0C3  F066         	movff	??_LORAWAN_TxDone+2,___lldiv@dividend+2
 25954  001718  C0C4  F067         	movff	??_LORAWAN_TxDone+3,___lldiv@dividend+3
 25955  00171C  0E7D               	movlw	125
 25956  00171E  0100               	movlb	0	; () banked
 25957  001720  6F68               	movwf	___lldiv@divisor& (0+255),b
 25958  001722  0E00               	movlw	0
 25959  001724  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 25960  001726  0E00               	movlw	0
 25961  001728  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 25962  00172A  0E00               	movlw	0
 25963  00172C  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 25964  00172E  EC99  F03F         	call	___lldiv	;wreg free
 25965  001732                     L16:
 25966  001732  C064  F0D1         	movff	?___lldiv,_LORAWAN_TxDone$2089
 25967  001736  C065  F0D2         	movff	?___lldiv+1,_LORAWAN_TxDone$2089+1
 25968  00173A  C066  F0D3         	movff	?___lldiv+2,_LORAWAN_TxDone$2089+2
 25969  00173E  C067  F0D4         	movff	?___lldiv+3,_LORAWAN_TxDone$2089+3
 25970  001742  C0D1  F071         	movff	_LORAWAN_TxDone$2089,SwTimerSetTimeout@timeout
 25971  001746  C0D2  F072         	movff	_LORAWAN_TxDone$2089+1,SwTimerSetTimeout@timeout+1
 25972  00174A  C0D3  F073         	movff	_LORAWAN_TxDone$2089+2,SwTimerSetTimeout@timeout+2
 25973  00174E  C0D4  F074         	movff	_LORAWAN_TxDone$2089+3,SwTimerSetTimeout@timeout+3
 25974  001752  0102               	movlb	2	; () banked
 25975  001754  51E9               	movf	(_loRa+233)& (0+255),w,b
 25976  001756  EC70  F04A         	call	_SwTimerSetTimeout
 25977                           
 25978                           ;lorawan_eu.c: 437: SwTimerStart (loRa.dutyCycleTimerId);
 25979  00175A  0102               	movlb	2	; () banked
 25980  00175C  51E9               	movf	(_loRa+233)& (0+255),w,b
 25981  00175E  EC06  F042         	call	_SwTimerStart
 25982  001762                     l16137:
 25983                           
 25984                           ;lorawan_eu.c: 438: }
 25985                           ;lorawan_eu.c: 439: if (CLASS_C == loRa.deviceClass)
 25986  001762  0E02               	movlw	2
 25987  001764  0102               	movlb	2	; () banked
 25988  001766  1912               	xorwf	(_loRa+18)& (0+255),w,b
 25989  001768  A4D8               	btfss	status,2,c
 25990  00176A  0012               	return	
 25991                           
 25992                           ; BSR set to: 2
 25993                           ;lorawan_eu.c: 440: {
 25994                           ;lorawan_eu.c: 441: loRa.macStatus.macState = CLASS_C_RX2_1_OPEN;
 25995  00176C  0102               	movlb	2	; () banked
 25996  00176E  5102               	movf	(_loRa+2)& (0+255),w,b
 25997  001770  0BF0               	andlw	-16
 25998  001772  0908               	iorlw	8
 25999  001774  6F02               	movwf	(_loRa+2)& (0+255),b
 26000                           
 26001                           ; BSR set to: 2
 26002                           ;lorawan_eu.c: 442: LORAWAN_EnterContinuousReceive();
 26003  001776  ECFE  F044         	call	_LORAWAN_EnterContinuousReceive	;wreg free
 26004                           
 26005                           ;lorawan_eu.c: 443: }
 26006                           ;lorawan_eu.c: 444: }
 26007  00177A  0012               	return	
 26008  00177C                     l16143:
 26009                           
 26010                           ;lorawan_eu.c: 445: else
 26011                           ;lorawan_eu.c: 446: {
 26012                           ;lorawan_eu.c: 447: if ((RADIO_GetStatus() & (1 << (4))) != 0)
 26013  00177C  EC21  F052         	call	_RADIO_GetStatus	;wreg free
 26014  001780  0100               	movlb	0	; () banked
 26015  001782  6FC1               	movwf	??_LORAWAN_TxDone& (0+255),b
 26016  001784  0100               	movlb	0	; () banked
 26017  001786  A9C1               	btfss	??_LORAWAN_TxDone& (0+255),4,b
 26018  001788  D018               	goto	l16147
 26019                           
 26020                           ; BSR set to: 0
 26021                           ;lorawan_eu.c: 448: {
 26022                           ;lorawan_eu.c: 450: rxPayload.RxAppData( (0), 0, RADIO_NOT_OK );
 26023  00178A  0E00               	movlw	0
 26024  00178C  0100               	movlb	0	; () banked
 26025  00178E  6F67               	movwf	RxDataDone@pData& (0+255),b
 26026  001790  0E00               	movlw	0
 26027  001792  0100               	movlb	0	; () banked
 26028  001794  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 26029  001796  0E00               	movlw	0
 26030  001798  0100               	movlb	0	; () banked
 26031  00179A  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 26032  00179C  0E02               	movlw	2
 26033  00179E  0100               	movlb	0	; () banked
 26034  0017A0  6F6A               	movwf	RxDataDone@status& (0+255),b
 26035  0017A2  D801               	call	u19268
 26036  0017A4  0012               	return	
 26037  0017A6                     u19268:
 26038  0017A6  0005               	push	
 26039  0017A8  6EFA               	movwf	pclath,c
 26040  0017AA  0101               	movlb	1	; () banked
 26041  0017AC  5186               	movf	_rxPayload& (0+255),w,b
 26042  0017AE  6EFD               	movwf	tosl,c
 26043  0017B0  5187               	movf	(_rxPayload+1)& (0+255),w,b
 26044  0017B2  6EFE               	movwf	tosh,c
 26045  0017B4  6AFF               	clrf	tosu,c
 26046  0017B6  50FA               	movf	pclath,w,c
 26047  0017B8  0012               	return		;indir
 26048  0017BA                     l16147:
 26049                           
 26050                           ;lorawan_eu.c: 452: else
 26051                           ;lorawan_eu.c: 453: {
 26052                           ;lorawan_eu.c: 455: if ( rxPayload.RxAppData != (0) )
 26053  0017BA  0101               	movlb	1	; () banked
 26054  0017BC  5186               	movf	_rxPayload& (0+255),w,b
 26055  0017BE  0101               	movlb	1	; () banked
 26056  0017C0  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 26057  0017C2  B4D8               	btfsc	status,2,c
 26058  0017C4  0012               	return	
 26059                           
 26060                           ; BSR set to: 1
 26061                           ;lorawan_eu.c: 456: {
 26062                           ;lorawan_eu.c: 457: rxPayload.RxAppData( (0), 0, RADIO_OK );
 26063  0017C6  0E00               	movlw	0
 26064  0017C8  0100               	movlb	0	; () banked
 26065  0017CA  6F67               	movwf	RxDataDone@pData& (0+255),b
 26066  0017CC  0E00               	movlw	0
 26067  0017CE  0100               	movlb	0	; () banked
 26068  0017D0  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 26069  0017D2  0E00               	movlw	0
 26070  0017D4  0100               	movlb	0	; () banked
 26071  0017D6  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 26072  0017D8  0E03               	movlw	3
 26073  0017DA  0100               	movlb	0	; () banked
 26074  0017DC  6F6A               	movwf	RxDataDone@status& (0+255),b
 26075  0017DE  D801               	call	u19288
 26076  0017E0  0012               	return	
 26077  0017E2                     u19288:
 26078  0017E2  0005               	push	
 26079  0017E4  6EFA               	movwf	pclath,c
 26080  0017E6  0101               	movlb	1	; () banked
 26081  0017E8  5186               	movf	_rxPayload& (0+255),w,b
 26082  0017EA  6EFD               	movwf	tosl,c
 26083  0017EC  5187               	movf	(_rxPayload+1)& (0+255),w,b
 26084  0017EE  6EFE               	movwf	tosh,c
 26085  0017F0  6AFF               	clrf	tosu,c
 26086  0017F2  50FA               	movf	pclath,w,c
 26087  0017F4  0012               	return		;indir
 26088  0017F6                     __end_of_LORAWAN_TxDone:
 26089                           	opt stack 0
 26090                           tosu	equ	0xFFF
 26091                           tosh	equ	0xFFE
 26092                           tosl	equ	0xFFD
 26093                           pclath	equ	0xFFA
 26094                           tblptru	equ	0xFF8
 26095                           tblptrh	equ	0xFF7
 26096                           tblptrl	equ	0xFF6
 26097                           tablat	equ	0xFF5
 26098                           prodh	equ	0xFF4
 26099                           prodl	equ	0xFF3
 26100                           intcon	equ	0xFF2
 26101                           intcon2	equ	0xFF1
 26102                           intcon3	equ	0xFF0
 26103                           indf0	equ	0xFEF
 26104                           postinc0	equ	0xFEE
 26105                           fsr0h	equ	0xFEA
 26106                           fsr0l	equ	0xFE9
 26107                           wreg	equ	0xFE8
 26108                           postinc1	equ	0xFE6
 26109                           postdec1	equ	0xFE5
 26110                           plusw1	equ	0xFE3
 26111                           fsr1h	equ	0xFE2
 26112                           fsr1l	equ	0xFE1
 26113                           indf2	equ	0xFDF
 26114                           postinc2	equ	0xFDE
 26115                           postdec2	equ	0xFDD
 26116                           plusw2	equ	0xFDB
 26117                           fsr2h	equ	0xFDA
 26118                           fsr2l	equ	0xFD9
 26119                           status	equ	0xFD8
 26120                           
 26121 ;; *************** function _SwTimerReadValue *****************
 26122 ;; Defined at:
 26123 ;;		line 193 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26124 ;; Parameters:    Size  Location     Type
 26125 ;;  timerId         1    wreg     unsigned char 
 26126 ;; Auto vars:     Size  Location     Type
 26127 ;;  timerId         1   61[BANK0 ] unsigned char 
 26128 ;;  ticksCount      4   57[BANK0 ] unsigned long 
 26129 ;; Return value:  Size  Location     Type
 26130 ;;                  4   53[BANK0 ] unsigned long 
 26131 ;; Registers used:
 26132 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26133 ;; Tracked objects:
 26134 ;;		On entry : 0/0
 26135 ;;		On exit  : 0/0
 26136 ;;		Unchanged: 0/0
 26137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26138 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26139 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26141 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26142 ;;Total ram usage:        9 bytes
 26143 ;; Hardware stack levels used:    1
 26144 ;; Hardware stack levels required when called:   10
 26145 ;; This function calls:
 26146 ;;		_SwTimersInterrupt
 26147 ;; This function is called by:
 26148 ;;		_RADIO_TxDone
 26149 ;;		_RADIO_FSKPacketSent
 26150 ;;		_LORAWAN_TxDone
 26151 ;;		_LORAWAN_Pause
 26152 ;; This function uses a non-reentrant model
 26153 ;;
 26154                           
 26155                           	psect	text111
 26156  00992C                     __ptext111:
 26157                           	opt stack 0
 26158  00992C                     _SwTimerReadValue:
 26159                           	opt stack 16
 26160                           
 26161                           ;incstack = 0
 26162                           ;SwTimerReadValue@timerId stored from wreg
 26163  00992C  0100               	movlb	0	; () banked
 26164  00992E  6F9D               	movwf	SwTimerReadValue@timerId& (0+255),b
 26165                           
 26166                           ;sw_timer.c: 195: uint32_t ticksCount;
 26167                           ;sw_timer.c: 197: (INTCONbits.GIE = 0);
 26168  009930  9EF2               	bcf	intcon,7,c	;volatile
 26169                           
 26170                           ;sw_timer.c: 200: SwTimersInterrupt();
 26171  009932  EC3C  F037         	call	_SwTimersInterrupt	;wreg free
 26172                           
 26173                           ;sw_timer.c: 201: ticksCount = swTimers[timerId].ticksRemaining;
 26174  009936  0100               	movlb	0	; () banked
 26175  009938  519D               	movf	SwTimerReadValue@timerId& (0+255),w,b
 26176  00993A  0D08               	mullw	8
 26177  00993C  0E00               	movlw	low _swTimers
 26178  00993E  24F3               	addwf	prodl,w,c
 26179  009940  6ED9               	movwf	fsr2l,c
 26180  009942  0E03               	movlw	high _swTimers
 26181  009944  20F4               	addwfc	prodh,w,c
 26182  009946  6EDA               	movwf	fsr2h,c
 26183  009948  CFDE F099          	movff	postinc2,SwTimerReadValue@ticksCount
 26184  00994C  CFDE F09A          	movff	postinc2,SwTimerReadValue@ticksCount+1
 26185  009950  CFDE F09B          	movff	postinc2,SwTimerReadValue@ticksCount+2
 26186  009954  CFDE F09C          	movff	postinc2,SwTimerReadValue@ticksCount+3
 26187                           
 26188                           ; BSR set to: 0
 26189                           ;sw_timer.c: 202: (INTCONbits.GIE = 1);
 26190  009958  8EF2               	bsf	intcon,7,c	;volatile
 26191                           
 26192                           ; BSR set to: 0
 26193                           ;sw_timer.c: 204: return ticksCount;
 26194  00995A  C099  F095         	movff	SwTimerReadValue@ticksCount,?_SwTimerReadValue
 26195  00995E  C09A  F096         	movff	SwTimerReadValue@ticksCount+1,?_SwTimerReadValue+1
 26196  009962  C09B  F097         	movff	SwTimerReadValue@ticksCount+2,?_SwTimerReadValue+2
 26197  009966  C09C  F098         	movff	SwTimerReadValue@ticksCount+3,?_SwTimerReadValue+3
 26198  00996A  0012               	return	
 26199  00996C                     __end_of_SwTimerReadValue:
 26200                           	opt stack 0
 26201                           tosu	equ	0xFFF
 26202                           tosh	equ	0xFFE
 26203                           tosl	equ	0xFFD
 26204                           pclath	equ	0xFFA
 26205                           tblptru	equ	0xFF8
 26206                           tblptrh	equ	0xFF7
 26207                           tblptrl	equ	0xFF6
 26208                           tablat	equ	0xFF5
 26209                           prodh	equ	0xFF4
 26210                           prodl	equ	0xFF3
 26211                           intcon	equ	0xFF2
 26212                           intcon2	equ	0xFF1
 26213                           intcon3	equ	0xFF0
 26214                           indf0	equ	0xFEF
 26215                           postinc0	equ	0xFEE
 26216                           fsr0h	equ	0xFEA
 26217                           fsr0l	equ	0xFE9
 26218                           wreg	equ	0xFE8
 26219                           postinc1	equ	0xFE6
 26220                           postdec1	equ	0xFE5
 26221                           plusw1	equ	0xFE3
 26222                           fsr1h	equ	0xFE2
 26223                           fsr1l	equ	0xFE1
 26224                           indf2	equ	0xFDF
 26225                           postinc2	equ	0xFDE
 26226                           postdec2	equ	0xFDD
 26227                           plusw2	equ	0xFDB
 26228                           fsr2h	equ	0xFDA
 26229                           fsr2l	equ	0xFD9
 26230                           status	equ	0xFD8
 26231                           
 26232 ;; *************** function _SwTimerIsRunning *****************
 26233 ;; Defined at:
 26234 ;;		line 207 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 26235 ;; Parameters:    Size  Location     Type
 26236 ;;  timerId         1    wreg     unsigned char 
 26237 ;; Auto vars:     Size  Location     Type
 26238 ;;  timerId         1    4[BANK0 ] unsigned char 
 26239 ;;  isRunning       1    5[BANK0 ] unsigned char 
 26240 ;; Return value:  Size  Location     Type
 26241 ;;                  1    wreg      unsigned char 
 26242 ;; Registers used:
 26243 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26244 ;; Tracked objects:
 26245 ;;		On entry : 0/0
 26246 ;;		On exit  : 0/0
 26247 ;;		Unchanged: 0/0
 26248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26249 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26250 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26251 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26252 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26253 ;;Total ram usage:        2 bytes
 26254 ;; Hardware stack levels used:    1
 26255 ;; Hardware stack levels required when called:    7
 26256 ;; This function calls:
 26257 ;;		Nothing
 26258 ;; This function is called by:
 26259 ;;		_LORAWAN_TxDone
 26260 ;; This function uses a non-reentrant model
 26261 ;;
 26262                           
 26263                           	psect	text112
 26264  009D6A                     __ptext112:
 26265                           	opt stack 0
 26266  009D6A                     _SwTimerIsRunning:
 26267                           	opt stack 19
 26268                           
 26269                           ; BSR set to: 0
 26270                           ;incstack = 0
 26271                           ;SwTimerIsRunning@timerId stored from wreg
 26272  009D6A  0100               	movlb	0	; () banked
 26273  009D6C  6F64               	movwf	SwTimerIsRunning@timerId& (0+255),b
 26274                           
 26275                           ;sw_timer.c: 209: uint8_t isRunning;
 26276                           ;sw_timer.c: 211: (INTCONbits.GIE = 0);
 26277  009D6E  9EF2               	bcf	intcon,7,c	;volatile
 26278                           
 26279                           ;sw_timer.c: 212: isRunning = swTimers[timerId].running;
 26280  009D70  0100               	movlb	0	; () banked
 26281  009D72  5164               	movf	SwTimerIsRunning@timerId& (0+255),w,b
 26282  009D74  0D08               	mullw	8
 26283  009D76  0E04               	movlw	4
 26284  009D78  26F3               	addwf	prodl,f,c
 26285  009D7A  0E00               	movlw	0
 26286  009D7C  22F4               	addwfc	prodh,f,c
 26287  009D7E  0E00               	movlw	low _swTimers
 26288  009D80  24F3               	addwf	prodl,w,c
 26289  009D82  6ED9               	movwf	fsr2l,c
 26290  009D84  0E03               	movlw	high _swTimers
 26291  009D86  20F4               	addwfc	prodh,w,c
 26292  009D88  6EDA               	movwf	fsr2h,c
 26293  009D8A  50DF               	movf	indf2,w,c
 26294  009D8C  0100               	movlb	0	; () banked
 26295  009D8E  6F65               	movwf	SwTimerIsRunning@isRunning& (0+255),b
 26296                           
 26297                           ; BSR set to: 0
 26298                           ;sw_timer.c: 213: (INTCONbits.GIE = 1);
 26299  009D90  8EF2               	bsf	intcon,7,c	;volatile
 26300                           
 26301                           ; BSR set to: 0
 26302                           ;sw_timer.c: 215: return isRunning;
 26303  009D92  0100               	movlb	0	; () banked
 26304  009D94  5165               	movf	SwTimerIsRunning@isRunning& (0+255),w,b
 26305  009D96  0012               	return	
 26306  009D98                     __end_of_SwTimerIsRunning:
 26307                           	opt stack 0
 26308                           tosu	equ	0xFFF
 26309                           tosh	equ	0xFFE
 26310                           tosl	equ	0xFFD
 26311                           pclath	equ	0xFFA
 26312                           tblptru	equ	0xFF8
 26313                           tblptrh	equ	0xFF7
 26314                           tblptrl	equ	0xFF6
 26315                           tablat	equ	0xFF5
 26316                           prodh	equ	0xFF4
 26317                           prodl	equ	0xFF3
 26318                           intcon	equ	0xFF2
 26319                           intcon2	equ	0xFF1
 26320                           intcon3	equ	0xFF0
 26321                           indf0	equ	0xFEF
 26322                           postinc0	equ	0xFEE
 26323                           fsr0h	equ	0xFEA
 26324                           fsr0l	equ	0xFE9
 26325                           wreg	equ	0xFE8
 26326                           postinc1	equ	0xFE6
 26327                           postdec1	equ	0xFE5
 26328                           plusw1	equ	0xFE3
 26329                           fsr1h	equ	0xFE2
 26330                           fsr1l	equ	0xFE1
 26331                           indf2	equ	0xFDF
 26332                           postinc2	equ	0xFDE
 26333                           postdec2	equ	0xFDD
 26334                           plusw2	equ	0xFDB
 26335                           fsr2h	equ	0xFDA
 26336                           fsr2l	equ	0xFD9
 26337                           status	equ	0xFD8
 26338                           
 26339 ;; *************** function _RADIO_GetStatus *****************
 26340 ;; Defined at:
 26341 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 26342 ;; Parameters:    Size  Location     Type
 26343 ;;		None
 26344 ;; Auto vars:     Size  Location     Type
 26345 ;;		None
 26346 ;; Return value:  Size  Location     Type
 26347 ;;                  1    wreg      unsigned char 
 26348 ;; Registers used:
 26349 ;;		wreg, status,2
 26350 ;; Tracked objects:
 26351 ;;		On entry : 0/0
 26352 ;;		On exit  : 0/0
 26353 ;;		Unchanged: 0/0
 26354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26355 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26358 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26359 ;;Total ram usage:        0 bytes
 26360 ;; Hardware stack levels used:    1
 26361 ;; Hardware stack levels required when called:    7
 26362 ;; This function calls:
 26363 ;;		Nothing
 26364 ;; This function is called by:
 26365 ;;		_LORAWAN_TxDone
 26366 ;;		_LORAWAN_ReceiveWindow2Callback
 26367 ;;		_LORAWAN_RxDone
 26368 ;; This function uses a non-reentrant model
 26369 ;;
 26370                           
 26371                           	psect	text113
 26372  00A442                     __ptext113:
 26373                           	opt stack 0
 26374  00A442                     _RADIO_GetStatus:
 26375                           	opt stack 19
 26376                           
 26377                           ;radio_driver_SX1276.c: 1118: return RadioConfiguration.flags;
 26378                           
 26379                           ; BSR set to: 0
 26380                           ;incstack = 0
 26381  00A442  0101               	movlb	1	; () banked
 26382  00A444  51AF               	movf	(_RadioConfiguration+35)& (0+255),w,b
 26383  00A446  0012               	return	
 26384  00A448                     __end_of_RADIO_GetStatus:
 26385                           	opt stack 0
 26386                           tosu	equ	0xFFF
 26387                           tosh	equ	0xFFE
 26388                           tosl	equ	0xFFD
 26389                           pclath	equ	0xFFA
 26390                           tblptru	equ	0xFF8
 26391                           tblptrh	equ	0xFF7
 26392                           tblptrl	equ	0xFF6
 26393                           tablat	equ	0xFF5
 26394                           prodh	equ	0xFF4
 26395                           prodl	equ	0xFF3
 26396                           intcon	equ	0xFF2
 26397                           intcon2	equ	0xFF1
 26398                           intcon3	equ	0xFF0
 26399                           indf0	equ	0xFEF
 26400                           postinc0	equ	0xFEE
 26401                           fsr0h	equ	0xFEA
 26402                           fsr0l	equ	0xFE9
 26403                           wreg	equ	0xFE8
 26404                           postinc1	equ	0xFE6
 26405                           postdec1	equ	0xFE5
 26406                           plusw1	equ	0xFE3
 26407                           fsr1h	equ	0xFE2
 26408                           fsr1l	equ	0xFE1
 26409                           indf2	equ	0xFDF
 26410                           postinc2	equ	0xFDE
 26411                           postdec2	equ	0xFDD
 26412                           plusw2	equ	0xFDB
 26413                           fsr2h	equ	0xFDA
 26414                           fsr2l	equ	0xFD9
 26415                           status	equ	0xFD8
 26416                           
 26417 ;; *************** function _LORAWAN_EnterContinuousReceive *****************
 26418 ;; Defined at:
 26419 ;;		line 915 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26420 ;; Parameters:    Size  Location     Type
 26421 ;;		None
 26422 ;; Auto vars:     Size  Location     Type
 26423 ;;		None
 26424 ;; Return value:  Size  Location     Type
 26425 ;;                  1    wreg      void 
 26426 ;; Registers used:
 26427 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26428 ;; Tracked objects:
 26429 ;;		On entry : 0/0
 26430 ;;		On exit  : 0/0
 26431 ;;		Unchanged: 0/0
 26432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26434 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26436 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26437 ;;Total ram usage:        0 bytes
 26438 ;; Hardware stack levels used:    1
 26439 ;; Hardware stack levels required when called:   13
 26440 ;; This function calls:
 26441 ;;		_ConfigureRadioRx
 26442 ;;		_RADIO_ReceiveStart
 26443 ;;		_RADIO_ReceiveStop
 26444 ;;		_RADIO_ReleaseData
 26445 ;;		_ResetParametersForConfirmedTransmission
 26446 ;;		_ResetParametersForUnconfirmedTransmission
 26447 ;;		_RxDataDone
 26448 ;; This function is called by:
 26449 ;;		_LORAWAN_TxDone
 26450 ;;		_LORAWAN_ReceiveWindow2Callback
 26451 ;;		_LORAWAN_RxDone
 26452 ;;		_SetReceptionNotOkState
 26453 ;; This function uses a non-reentrant model
 26454 ;;
 26455                           
 26456                           	psect	text114
 26457  0089FC                     __ptext114:
 26458                           	opt stack 0
 26459  0089FC                     _LORAWAN_EnterContinuousReceive:
 26460                           	opt stack 13
 26461                           
 26462                           ;lorawan.c: 917: RADIO_ReceiveStop();
 26463                           
 26464                           ; BSR set to: 1
 26465                           ;incstack = 0
 26466  0089FC  EC26  F050         	call	_RADIO_ReceiveStop	;wreg free
 26467                           
 26468                           ;lorawan.c: 918: RADIO_ReleaseData();
 26469  008A00  EC24  F052         	call	_RADIO_ReleaseData	;wreg free
 26470                           
 26471                           ;lorawan.c: 920: ConfigureRadioRx(loRa.receiveWindow2Parameters.dataRate, loRa.receiveWi
      +                          ndow2Parameters.frequency);
 26472  008A04  C218  F076         	movff	_loRa+24,ConfigureRadioRx@freq
 26473  008A08  C219  F077         	movff	_loRa+25,ConfigureRadioRx@freq+1
 26474  008A0C  C21A  F078         	movff	_loRa+26,ConfigureRadioRx@freq+2
 26475  008A10  C21B  F079         	movff	_loRa+27,ConfigureRadioRx@freq+3
 26476  008A14  0102               	movlb	2	; () banked
 26477  008A16  511C               	movf	(_loRa+28)& (0+255),w,b
 26478  008A18  EC38  F04F         	call	_ConfigureRadioRx
 26479                           
 26480                           ;lorawan.c: 922: if (RADIO_ReceiveStart(0) != OK)
 26481  008A1C  0E00               	movlw	0
 26482  008A1E  0100               	movlb	0	; () banked
 26483  008A20  6FB6               	movwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),b
 26484  008A22  0E00               	movlw	0
 26485  008A24  6FB5               	movwf	RADIO_ReceiveStart@rxWindowSize& (0+255),b
 26486  008A26  ECA0  F024         	call	_RADIO_ReceiveStart	;wreg free
 26487  008A2A  0100               	movlb	0	; () banked
 26488  008A2C  51B5               	movf	?_RADIO_ReceiveStart& (0+255),w,b
 26489  008A2E  0100               	movlb	0	; () banked
 26490  008A30  11B6               	iorwf	(?_RADIO_ReceiveStart+1)& (0+255),w,b
 26491  008A32  B4D8               	btfsc	status,2,c
 26492  008A34  0012               	return	
 26493                           
 26494                           ; BSR set to: 0
 26495                           ;lorawan.c: 923: {
 26496                           ;lorawan.c: 924: ResetParametersForConfirmedTransmission ();
 26497  008A36  EC27  F051         	call	_ResetParametersForConfirmedTransmission	;wreg free
 26498                           
 26499                           ;lorawan.c: 925: ResetParametersForUnconfirmedTransmission ();
 26500  008A3A  EC04  F051         	call	_ResetParametersForUnconfirmedTransmission	;wreg free
 26501                           
 26502                           ;lorawan.c: 926: loRa.macStatus.macState = IDLE;
 26503  008A3E  0102               	movlb	2	; () banked
 26504  008A40  9102               	bcf	(_loRa+2)& (0+255),0,b
 26505  008A42  9302               	bcf	(_loRa+2)& (0+255),1,b
 26506  008A44  9502               	bcf	(_loRa+2)& (0+255),2,b
 26507  008A46  9702               	bcf	(_loRa+2)& (0+255),3,b
 26508                           
 26509                           ; BSR set to: 2
 26510                           ;lorawan.c: 927: if (rxPayload.RxAppData != (0))
 26511  008A48  0101               	movlb	1	; () banked
 26512  008A4A  5186               	movf	_rxPayload& (0+255),w,b
 26513  008A4C  0101               	movlb	1	; () banked
 26514  008A4E  1187               	iorwf	(_rxPayload+1)& (0+255),w,b
 26515  008A50  B4D8               	btfsc	status,2,c
 26516  008A52  0012               	return	
 26517                           
 26518                           ; BSR set to: 1
 26519                           ;lorawan.c: 928: {
 26520                           ;lorawan.c: 929: rxPayload.RxAppData ((0), 0, MAC_NOT_OK);
 26521  008A54  0E00               	movlw	0
 26522  008A56  0100               	movlb	0	; () banked
 26523  008A58  6F67               	movwf	RxDataDone@pData& (0+255),b
 26524  008A5A  0E00               	movlw	0
 26525  008A5C  0100               	movlb	0	; () banked
 26526  008A5E  6F68               	movwf	(RxDataDone@pData+1)& (0+255),b
 26527  008A60  0E00               	movlw	0
 26528  008A62  0100               	movlb	0	; () banked
 26529  008A64  6F69               	movwf	RxDataDone@dataLength& (0+255),b
 26530  008A66  0E00               	movlw	0
 26531  008A68  0100               	movlb	0	; () banked
 26532  008A6A  6F6A               	movwf	RxDataDone@status& (0+255),b
 26533  008A6C  D801               	call	u16888
 26534  008A6E  0012               	return	
 26535  008A70                     u16888:
 26536  008A70  0005               	push	
 26537  008A72  6EFA               	movwf	pclath,c
 26538  008A74  0101               	movlb	1	; () banked
 26539  008A76  5186               	movf	_rxPayload& (0+255),w,b
 26540  008A78  6EFD               	movwf	tosl,c
 26541  008A7A  5187               	movf	(_rxPayload+1)& (0+255),w,b
 26542  008A7C  6EFE               	movwf	tosh,c
 26543  008A7E  6AFF               	clrf	tosu,c
 26544  008A80  50FA               	movf	pclath,w,c
 26545  008A82  0012               	return		;indir
 26546  008A84                     __end_of_LORAWAN_EnterContinuousReceive:
 26547                           	opt stack 0
 26548                           tosu	equ	0xFFF
 26549                           tosh	equ	0xFFE
 26550                           tosl	equ	0xFFD
 26551                           pclath	equ	0xFFA
 26552                           tblptru	equ	0xFF8
 26553                           tblptrh	equ	0xFF7
 26554                           tblptrl	equ	0xFF6
 26555                           tablat	equ	0xFF5
 26556                           prodh	equ	0xFF4
 26557                           prodl	equ	0xFF3
 26558                           intcon	equ	0xFF2
 26559                           intcon2	equ	0xFF1
 26560                           intcon3	equ	0xFF0
 26561                           indf0	equ	0xFEF
 26562                           postinc0	equ	0xFEE
 26563                           fsr0h	equ	0xFEA
 26564                           fsr0l	equ	0xFE9
 26565                           wreg	equ	0xFE8
 26566                           postinc1	equ	0xFE6
 26567                           postdec1	equ	0xFE5
 26568                           plusw1	equ	0xFE3
 26569                           fsr1h	equ	0xFE2
 26570                           fsr1l	equ	0xFE1
 26571                           indf2	equ	0xFDF
 26572                           postinc2	equ	0xFDE
 26573                           postdec2	equ	0xFDD
 26574                           plusw2	equ	0xFDB
 26575                           fsr2h	equ	0xFDA
 26576                           fsr2l	equ	0xFD9
 26577                           status	equ	0xFD8
 26578                           
 26579 ;; *************** function _RxDataDone *****************
 26580 ;; Defined at:
 26581 ;;		line 116 in file "main.c"
 26582 ;; Parameters:    Size  Location     Type
 26583 ;;  pData           2    7[BANK0 ] PTR unsigned char 
 26584 ;;		 -> LORAWAN_RxDone@hdr(2), radioBuffer(271), NULL(0), 
 26585 ;;  dataLength      1    9[BANK0 ] unsigned char 
 26586 ;;  status          1   10[BANK0 ] enum E8009
 26587 ;; Auto vars:     Size  Location     Type
 26588 ;;		None
 26589 ;; Return value:  Size  Location     Type
 26590 ;;                  1    wreg      void 
 26591 ;; Registers used:
 26592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 26593 ;; Tracked objects:
 26594 ;;		On entry : 0/0
 26595 ;;		On exit  : 0/0
 26596 ;;		Unchanged: 0/0
 26597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26598 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26601 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26602 ;;Total ram usage:        5 bytes
 26603 ;; Hardware stack levels used:    1
 26604 ;; Hardware stack levels required when called:    9
 26605 ;; This function calls:
 26606 ;;		_LORAWAN_SetCurrentDataRate
 26607 ;; This function is called by:
 26608 ;;		_main
 26609 ;;		_LORAWAN_EnterContinuousReceive
 26610 ;;		_LORAWAN_ReceiveWindow2Callback
 26611 ;;		_SetReceptionNotOkState
 26612 ;;		_LORAWAN_RxDone
 26613 ;;		_LORAWAN_RxTimeout
 26614 ;;		_LORAWAN_TxDone
 26615 ;;		_AckRetransmissionCallback
 26616 ;;		_UnconfirmedTransmissionCallback
 26617 ;; This function uses a non-reentrant model
 26618 ;;
 26619                           
 26620                           	psect	text115
 26621  0096BE                     __ptext115:
 26622                           	opt stack 0
 26623  0096BE                     _RxDataDone:
 26624                           	opt stack 18
 26625                           
 26626                           ;main.c: 121: if(pData[0]==30){
 26627                           
 26628                           ;incstack = 0
 26629  0096BE  C067  FFD9         	movff	RxDataDone@pData,fsr2l
 26630  0096C2  C068  FFDA         	movff	RxDataDone@pData+1,fsr2h
 26631  0096C6  0E1E               	movlw	30
 26632  0096C8  18DE               	xorwf	postinc2,w,c
 26633  0096CA  A4D8               	btfss	status,2,c
 26634  0096CC  0012               	return	
 26635                           
 26636                           ;main.c: 122: LORAWAN_SetCurrentDataRate(pData[1]);
 26637  0096CE  0100               	movlb	0	; () banked
 26638  0096D0  EE20 F001          	lfsr	2,1
 26639  0096D4  5167               	movf	RxDataDone@pData& (0+255),w,b
 26640  0096D6  26D9               	addwf	fsr2l,f,c
 26641  0096D8  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 26642  0096DA  22DA               	addwfc	fsr2h,f,c
 26643  0096DC  50DF               	movf	indf2,w,c
 26644  0096DE  ECF1  F04D         	call	_LORAWAN_SetCurrentDataRate
 26645                           
 26646                           ;main.c: 123: PORTAbits.RA4 = pData[2];
 26647  0096E2  0100               	movlb	0	; () banked
 26648  0096E4  EE20 F002          	lfsr	2,2
 26649  0096E8  5167               	movf	RxDataDone@pData& (0+255),w,b
 26650  0096EA  26D9               	addwf	fsr2l,f,c
 26651  0096EC  5168               	movf	(RxDataDone@pData+1)& (0+255),w,b
 26652  0096EE  22DA               	addwfc	fsr2h,f,c
 26653  0096F0  50DF               	movf	indf2,w,c
 26654  0096F2  0100               	movlb	0	; () banked
 26655  0096F4  6F6B               	movwf	??_RxDataDone& (0+255),b
 26656  0096F6  0100               	movlb	0	; () banked
 26657  0096F8  3B6B               	swapf	??_RxDataDone& (0+255),f,b
 26658  0096FA  5080               	movf	3968,w,c	;volatile
 26659  0096FC  0100               	movlb	0	; () banked
 26660  0096FE  196B               	xorwf	??_RxDataDone& (0+255),w,b
 26661  009700  0BEF               	andlw	-17
 26662  009702  196B               	xorwf	??_RxDataDone& (0+255),w,b
 26663  009704  6E80               	movwf	3968,c	;volatile
 26664  009706  0012               	return	
 26665  009708                     __end_of_RxDataDone:
 26666                           	opt stack 0
 26667                           tosu	equ	0xFFF
 26668                           tosh	equ	0xFFE
 26669                           tosl	equ	0xFFD
 26670                           pclath	equ	0xFFA
 26671                           tblptru	equ	0xFF8
 26672                           tblptrh	equ	0xFF7
 26673                           tblptrl	equ	0xFF6
 26674                           tablat	equ	0xFF5
 26675                           prodh	equ	0xFF4
 26676                           prodl	equ	0xFF3
 26677                           intcon	equ	0xFF2
 26678                           intcon2	equ	0xFF1
 26679                           intcon3	equ	0xFF0
 26680                           indf0	equ	0xFEF
 26681                           postinc0	equ	0xFEE
 26682                           fsr0h	equ	0xFEA
 26683                           fsr0l	equ	0xFE9
 26684                           wreg	equ	0xFE8
 26685                           postinc1	equ	0xFE6
 26686                           postdec1	equ	0xFE5
 26687                           plusw1	equ	0xFE3
 26688                           fsr1h	equ	0xFE2
 26689                           fsr1l	equ	0xFE1
 26690                           indf2	equ	0xFDF
 26691                           postinc2	equ	0xFDE
 26692                           postdec2	equ	0xFDD
 26693                           plusw2	equ	0xFDB
 26694                           fsr2h	equ	0xFDA
 26695                           fsr2l	equ	0xFD9
 26696                           status	equ	0xFD8
 26697                           
 26698 ;; *************** function _LORAWAN_SetCurrentDataRate *****************
 26699 ;; Defined at:
 26700 ;;		line 436 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26701 ;; Parameters:    Size  Location     Type
 26702 ;;  valueNew        1    wreg     unsigned char 
 26703 ;; Auto vars:     Size  Location     Type
 26704 ;;  valueNew        1    6[BANK0 ] unsigned char 
 26705 ;; Return value:  Size  Location     Type
 26706 ;;                  1    wreg      enum E7957
 26707 ;; Registers used:
 26708 ;;		wreg, status,2, status,0, cstack
 26709 ;; Tracked objects:
 26710 ;;		On entry : 0/0
 26711 ;;		On exit  : 0/0
 26712 ;;		Unchanged: 0/0
 26713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26715 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26717 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26718 ;;Total ram usage:        1 bytes
 26719 ;; Hardware stack levels used:    1
 26720 ;; Hardware stack levels required when called:    8
 26721 ;; This function calls:
 26722 ;;		_UpdateCurrentDataRate
 26723 ;;		_ValidateDataRate
 26724 ;; This function is called by:
 26725 ;;		_RxDataDone
 26726 ;; This function uses a non-reentrant model
 26727 ;;
 26728                           
 26729                           	psect	text116
 26730  009BE2                     __ptext116:
 26731                           	opt stack 0
 26732  009BE2                     _LORAWAN_SetCurrentDataRate:
 26733                           	opt stack 18
 26734                           
 26735                           ;incstack = 0
 26736                           ;LORAWAN_SetCurrentDataRate@valueNew stored from wreg
 26737  009BE2  0100               	movlb	0	; () banked
 26738  009BE4  6F66               	movwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),b
 26739                           
 26740                           ;lorawan.c: 440: if ( (valueNew < loRa.minDataRate) || (valueNew > loRa.maxDataRate) || 
      +                          (ValidateDataRate(valueNew) != OK) )
 26741  009BE6  0102               	movlb	2	; () banked
 26742  009BE8  51EB               	movf	(_loRa+235)& (0+255),w,b
 26743  009BEA  0100               	movlb	0	; () banked
 26744  009BEC  5D66               	subwf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26745  009BEE  A0D8               	btfss	status,0,c
 26746  009BF0  0012               	return	
 26747                           
 26748                           ; BSR set to: 0
 26749  009BF2  0100               	movlb	0	; () banked
 26750  009BF4  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26751  009BF6  0102               	movlb	2	; () banked
 26752  009BF8  5DEC               	subwf	(_loRa+236)& (0+255),w,b
 26753  009BFA  A0D8               	btfss	status,0,c
 26754  009BFC  0012               	return	
 26755                           
 26756                           ; BSR set to: 2
 26757  009BFE  0100               	movlb	0	; () banked
 26758  009C00  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26759  009C02  EC92  F050         	call	_ValidateDataRate
 26760  009C06  0900               	iorlw	0
 26761  009C08  A4D8               	btfss	status,2,c
 26762  009C0A  0012               	return	
 26763                           
 26764                           ;lorawan.c: 444: else
 26765                           ;lorawan.c: 445: {
 26766                           ;lorawan.c: 446: UpdateCurrentDataRate (valueNew);
 26767                           
 26768                           ;lorawan.c: 443: }
 26769                           
 26770                           ;lorawan.c: 441: {
 26771                           ;lorawan.c: 442: return INVALID_PARAMETER;
 26772                           ;	Return value of _LORAWAN_SetCurrentDataRate is never used
 26773  009C0C  0100               	movlb	0	; () banked
 26774  009C0E  5166               	movf	LORAWAN_SetCurrentDataRate@valueNew& (0+255),w,b
 26775  009C10  ECE1  F051         	call	_UpdateCurrentDataRate
 26776                           
 26777                           ;lorawan.c: 447: return OK;
 26778                           ;	Return value of _LORAWAN_SetCurrentDataRate is never used
 26779  009C14  0012               	return	
 26780  009C16                     __end_of_LORAWAN_SetCurrentDataRate:
 26781                           	opt stack 0
 26782                           tosu	equ	0xFFF
 26783                           tosh	equ	0xFFE
 26784                           tosl	equ	0xFFD
 26785                           pclath	equ	0xFFA
 26786                           tblptru	equ	0xFF8
 26787                           tblptrh	equ	0xFF7
 26788                           tblptrl	equ	0xFF6
 26789                           tablat	equ	0xFF5
 26790                           prodh	equ	0xFF4
 26791                           prodl	equ	0xFF3
 26792                           intcon	equ	0xFF2
 26793                           intcon2	equ	0xFF1
 26794                           intcon3	equ	0xFF0
 26795                           indf0	equ	0xFEF
 26796                           postinc0	equ	0xFEE
 26797                           fsr0h	equ	0xFEA
 26798                           fsr0l	equ	0xFE9
 26799                           wreg	equ	0xFE8
 26800                           postinc1	equ	0xFE6
 26801                           postdec1	equ	0xFE5
 26802                           plusw1	equ	0xFE3
 26803                           fsr1h	equ	0xFE2
 26804                           fsr1l	equ	0xFE1
 26805                           indf2	equ	0xFDF
 26806                           postinc2	equ	0xFDE
 26807                           postdec2	equ	0xFDD
 26808                           plusw2	equ	0xFDB
 26809                           fsr2h	equ	0xFDA
 26810                           fsr2l	equ	0xFD9
 26811                           status	equ	0xFD8
 26812                           
 26813 ;; *************** function _ValidateDataRate *****************
 26814 ;; Defined at:
 26815 ;;		line 570 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 26816 ;; Parameters:    Size  Location     Type
 26817 ;;  dataRate        1    wreg     unsigned char 
 26818 ;; Auto vars:     Size  Location     Type
 26819 ;;  dataRate        1    4[BANK0 ] unsigned char 
 26820 ;;  result          1    5[BANK0 ] enum E8016
 26821 ;; Return value:  Size  Location     Type
 26822 ;;                  1    wreg      enum E8016
 26823 ;; Registers used:
 26824 ;;		wreg, status,2, status,0
 26825 ;; Tracked objects:
 26826 ;;		On entry : 0/0
 26827 ;;		On exit  : 0/0
 26828 ;;		Unchanged: 0/0
 26829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26831 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26833 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26834 ;;Total ram usage:        2 bytes
 26835 ;; Hardware stack levels used:    1
 26836 ;; Hardware stack levels required when called:    7
 26837 ;; This function calls:
 26838 ;;		Nothing
 26839 ;; This function is called by:
 26840 ;;		_ExecuteLinkAdr
 26841 ;;		_ExecuteRxParamSetupReq
 26842 ;;		_ValidateDataRange
 26843 ;;		_LORAWAN_SetCurrentDataRate
 26844 ;;		_LORAWAN_SetReceiveWindow2Parameters
 26845 ;; This function uses a non-reentrant model
 26846 ;;
 26847                           
 26848                           	psect	text117
 26849  00A124                     __ptext117:
 26850                           	opt stack 0
 26851  00A124                     _ValidateDataRate:
 26852                           	opt stack 18
 26853                           
 26854                           ;incstack = 0
 26855                           ;ValidateDataRate@dataRate stored from wreg
 26856  00A124  0100               	movlb	0	; () banked
 26857  00A126  6F64               	movwf	ValidateDataRate@dataRate& (0+255),b
 26858                           
 26859                           ;lorawan_eu.c: 572: LorawanError_t result = OK;
 26860  00A128  0E00               	movlw	0
 26861  00A12A  0100               	movlb	0	; () banked
 26862  00A12C  6F65               	movwf	ValidateDataRate@result& (0+255),b
 26863                           
 26864                           ; BSR set to: 0
 26865                           ;lorawan_eu.c: 574: if ( dataRate > 7 )
 26866  00A12E  0E07               	movlw	7
 26867  00A130  0100               	movlb	0	; () banked
 26868  00A132  6564               	cpfsgt	ValidateDataRate@dataRate& (0+255),b
 26869  00A134  D003               	goto	l1077
 26870                           
 26871                           ; BSR set to: 0
 26872                           ;lorawan_eu.c: 575: {
 26873                           ;lorawan_eu.c: 576: result = INVALID_PARAMETER;
 26874  00A136  0E03               	movlw	3
 26875  00A138  0100               	movlb	0	; () banked
 26876  00A13A  6F65               	movwf	ValidateDataRate@result& (0+255),b
 26877  00A13C                     l1077:
 26878                           
 26879                           ; BSR set to: 0
 26880                           ;lorawan_eu.c: 577: }
 26881                           ;lorawan_eu.c: 579: return result;
 26882  00A13C  0100               	movlb	0	; () banked
 26883  00A13E  5165               	movf	ValidateDataRate@result& (0+255),w,b
 26884  00A140  0012               	return	
 26885  00A142                     __end_of_ValidateDataRate:
 26886                           	opt stack 0
 26887                           tosu	equ	0xFFF
 26888                           tosh	equ	0xFFE
 26889                           tosl	equ	0xFFD
 26890                           pclath	equ	0xFFA
 26891                           tblptru	equ	0xFF8
 26892                           tblptrh	equ	0xFF7
 26893                           tblptrl	equ	0xFF6
 26894                           tablat	equ	0xFF5
 26895                           prodh	equ	0xFF4
 26896                           prodl	equ	0xFF3
 26897                           intcon	equ	0xFF2
 26898                           intcon2	equ	0xFF1
 26899                           intcon3	equ	0xFF0
 26900                           indf0	equ	0xFEF
 26901                           postinc0	equ	0xFEE
 26902                           fsr0h	equ	0xFEA
 26903                           fsr0l	equ	0xFE9
 26904                           wreg	equ	0xFE8
 26905                           postinc1	equ	0xFE6
 26906                           postdec1	equ	0xFE5
 26907                           plusw1	equ	0xFE3
 26908                           fsr1h	equ	0xFE2
 26909                           fsr1l	equ	0xFE1
 26910                           indf2	equ	0xFDF
 26911                           postinc2	equ	0xFDE
 26912                           postdec2	equ	0xFDD
 26913                           plusw2	equ	0xFDB
 26914                           fsr2h	equ	0xFDA
 26915                           fsr2l	equ	0xFD9
 26916                           status	equ	0xFD8
 26917                           
 26918 ;; *************** function _UpdateCurrentDataRate *****************
 26919 ;; Defined at:
 26920 ;;		line 1024 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 26921 ;; Parameters:    Size  Location     Type
 26922 ;;  valueNew        1    wreg     unsigned char 
 26923 ;; Auto vars:     Size  Location     Type
 26924 ;;  valueNew        1    4[BANK0 ] unsigned char 
 26925 ;; Return value:  Size  Location     Type
 26926 ;;                  1    wreg      void 
 26927 ;; Registers used:
 26928 ;;		wreg
 26929 ;; Tracked objects:
 26930 ;;		On entry : 0/0
 26931 ;;		On exit  : 0/0
 26932 ;;		Unchanged: 0/0
 26933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 26934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26935 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26937 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 26938 ;;Total ram usage:        1 bytes
 26939 ;; Hardware stack levels used:    1
 26940 ;; Hardware stack levels required when called:    7
 26941 ;; This function calls:
 26942 ;;		Nothing
 26943 ;; This function is called by:
 26944 ;;		_ExecuteLinkAdr
 26945 ;;		_LORAWAN_SetCurrentDataRate
 26946 ;; This function uses a non-reentrant model
 26947 ;;
 26948                           
 26949                           	psect	text118
 26950  00A3C2                     __ptext118:
 26951                           	opt stack 0
 26952  00A3C2                     _UpdateCurrentDataRate:
 26953                           	opt stack 18
 26954                           
 26955                           ; BSR set to: 0
 26956                           ;incstack = 0
 26957                           ;UpdateCurrentDataRate@valueNew stored from wreg
 26958  00A3C2  0100               	movlb	0	; () banked
 26959  00A3C4  6F64               	movwf	UpdateCurrentDataRate@valueNew& (0+255),b
 26960                           
 26961                           ;lorawan.c: 1026: loRa.currentDataRate = valueNew;
 26962  00A3C6  C064  F2DF         	movff	UpdateCurrentDataRate@valueNew,_loRa+223
 26963  00A3CA  0012               	return		;funcret
 26964  00A3CC                     __end_of_UpdateCurrentDataRate:
 26965                           	opt stack 0
 26966                           tosu	equ	0xFFF
 26967                           tosh	equ	0xFFE
 26968                           tosl	equ	0xFFD
 26969                           pclath	equ	0xFFA
 26970                           tblptru	equ	0xFF8
 26971                           tblptrh	equ	0xFF7
 26972                           tblptrl	equ	0xFF6
 26973                           tablat	equ	0xFF5
 26974                           prodh	equ	0xFF4
 26975                           prodl	equ	0xFF3
 26976                           intcon	equ	0xFF2
 26977                           intcon2	equ	0xFF1
 26978                           intcon3	equ	0xFF0
 26979                           indf0	equ	0xFEF
 26980                           postinc0	equ	0xFEE
 26981                           fsr0h	equ	0xFEA
 26982                           fsr0l	equ	0xFE9
 26983                           wreg	equ	0xFE8
 26984                           postinc1	equ	0xFE6
 26985                           postdec1	equ	0xFE5
 26986                           plusw1	equ	0xFE3
 26987                           fsr1h	equ	0xFE2
 26988                           fsr1l	equ	0xFE1
 26989                           indf2	equ	0xFDF
 26990                           postinc2	equ	0xFDE
 26991                           postdec2	equ	0xFDD
 26992                           plusw2	equ	0xFDB
 26993                           fsr2h	equ	0xFDA
 26994                           fsr2l	equ	0xFD9
 26995                           status	equ	0xFD8
 26996                           
 26997 ;; *************** function _ResetParametersForUnconfirmedTransmission *****************
 26998 ;; Defined at:
 26999 ;;		line 1097 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27000 ;; Parameters:    Size  Location     Type
 27001 ;;		None
 27002 ;; Auto vars:     Size  Location     Type
 27003 ;;		None
 27004 ;; Return value:  Size  Location     Type
 27005 ;;                  1    wreg      void 
 27006 ;; Registers used:
 27007 ;;		wreg, status,2
 27008 ;; Tracked objects:
 27009 ;;		On entry : 0/0
 27010 ;;		On exit  : 0/0
 27011 ;;		Unchanged: 0/0
 27012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27013 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27014 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27015 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27016 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27017 ;;Total ram usage:        0 bytes
 27018 ;; Hardware stack levels used:    1
 27019 ;; Hardware stack levels required when called:    7
 27020 ;; This function calls:
 27021 ;;		Nothing
 27022 ;; This function is called by:
 27023 ;;		_LORAWAN_RxTimeout
 27024 ;;		_LORAWAN_ReceiveWindow2Callback
 27025 ;;		_LORAWAN_EnterContinuousReceive
 27026 ;;		_UnconfirmedTransmissionCallback
 27027 ;; This function uses a non-reentrant model
 27028 ;;
 27029                           
 27030                           	psect	text119
 27031  00A208                     __ptext119:
 27032                           	opt stack 0
 27033  00A208                     _ResetParametersForUnconfirmedTransmission:
 27034                           	opt stack 20
 27035                           
 27036                           ;lorawan.c: 1099: loRa.macStatus.macState = IDLE;
 27037                           
 27038                           ;incstack = 0
 27039  00A208  0102               	movlb	2	; () banked
 27040  00A20A  9102               	bcf	(_loRa+2)& (0+255),0,b
 27041  00A20C  9302               	bcf	(_loRa+2)& (0+255),1,b
 27042  00A20E  9502               	bcf	(_loRa+2)& (0+255),2,b
 27043  00A210  9702               	bcf	(_loRa+2)& (0+255),3,b
 27044                           
 27045                           ; BSR set to: 2
 27046                           ;lorawan.c: 1100: loRa.counterRepetitionsUnconfirmedUplink = 1;
 27047  00A212  0E01               	movlw	1
 27048  00A214  0102               	movlb	2	; () banked
 27049  00A216  6FD8               	movwf	(_loRa+216)& (0+255),b
 27050                           
 27051                           ;lorawan.c: 1101: loRa.crtMacCmdIndex = 0;
 27052  00A218  0E00               	movlw	0
 27053  00A21A  0102               	movlb	2	; () banked
 27054  00A21C  6FA7               	movwf	(_loRa+167)& (0+255),b
 27055                           
 27056                           ; BSR set to: 2
 27057  00A21E  0012               	return		;funcret
 27058  00A220                     __end_of_ResetParametersForUnconfirmedTransmission:
 27059                           	opt stack 0
 27060                           tosu	equ	0xFFF
 27061                           tosh	equ	0xFFE
 27062                           tosl	equ	0xFFD
 27063                           pclath	equ	0xFFA
 27064                           tblptru	equ	0xFF8
 27065                           tblptrh	equ	0xFF7
 27066                           tblptrl	equ	0xFF6
 27067                           tablat	equ	0xFF5
 27068                           prodh	equ	0xFF4
 27069                           prodl	equ	0xFF3
 27070                           intcon	equ	0xFF2
 27071                           intcon2	equ	0xFF1
 27072                           intcon3	equ	0xFF0
 27073                           indf0	equ	0xFEF
 27074                           postinc0	equ	0xFEE
 27075                           fsr0h	equ	0xFEA
 27076                           fsr0l	equ	0xFE9
 27077                           wreg	equ	0xFE8
 27078                           postinc1	equ	0xFE6
 27079                           postdec1	equ	0xFE5
 27080                           plusw1	equ	0xFE3
 27081                           fsr1h	equ	0xFE2
 27082                           fsr1l	equ	0xFE1
 27083                           indf2	equ	0xFDF
 27084                           postinc2	equ	0xFDE
 27085                           postdec2	equ	0xFDD
 27086                           plusw2	equ	0xFDB
 27087                           fsr2h	equ	0xFDA
 27088                           fsr2l	equ	0xFD9
 27089                           status	equ	0xFD8
 27090                           
 27091 ;; *************** function _ResetParametersForConfirmedTransmission *****************
 27092 ;; Defined at:
 27093 ;;		line 1090 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27094 ;; Parameters:    Size  Location     Type
 27095 ;;		None
 27096 ;; Auto vars:     Size  Location     Type
 27097 ;;		None
 27098 ;; Return value:  Size  Location     Type
 27099 ;;                  1    wreg      void 
 27100 ;; Registers used:
 27101 ;;		wreg, status,2
 27102 ;; Tracked objects:
 27103 ;;		On entry : 0/0
 27104 ;;		On exit  : 0/0
 27105 ;;		Unchanged: 0/0
 27106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27111 ;;Total ram usage:        0 bytes
 27112 ;; Hardware stack levels used:    1
 27113 ;; Hardware stack levels required when called:    7
 27114 ;; This function calls:
 27115 ;;		Nothing
 27116 ;; This function is called by:
 27117 ;;		_LORAWAN_RxTimeout
 27118 ;;		_LORAWAN_ReceiveWindow2Callback
 27119 ;;		_LORAWAN_EnterContinuousReceive
 27120 ;;		_AckRetransmissionCallback
 27121 ;; This function uses a non-reentrant model
 27122 ;;
 27123                           
 27124                           	psect	text120
 27125  00A24E                     __ptext120:
 27126                           	opt stack 0
 27127  00A24E                     _ResetParametersForConfirmedTransmission:
 27128                           	opt stack 18
 27129                           
 27130                           ;lorawan.c: 1092: loRa.macStatus.macState = IDLE;
 27131                           
 27132                           ; BSR set to: 2
 27133                           ;incstack = 0
 27134  00A24E  0102               	movlb	2	; () banked
 27135  00A250  9102               	bcf	(_loRa+2)& (0+255),0,b
 27136  00A252  9302               	bcf	(_loRa+2)& (0+255),1,b
 27137  00A254  9502               	bcf	(_loRa+2)& (0+255),2,b
 27138  00A256  9702               	bcf	(_loRa+2)& (0+255),3,b
 27139                           
 27140                           ; BSR set to: 2
 27141                           ;lorawan.c: 1093: loRa.counterRepetitionsConfirmedUplink = 1;
 27142  00A258  0E01               	movlw	1
 27143  00A25A  0102               	movlb	2	; () banked
 27144  00A25C  6FD9               	movwf	(_loRa+217)& (0+255),b
 27145                           
 27146                           ; BSR set to: 2
 27147                           ;lorawan.c: 1094: loRa.lorawanMacStatus.ackRequiredFromNextDownlinkMessage = 0;
 27148  00A25E  0102               	movlb	2	; () banked
 27149  00A260  9100               	bcf	_loRa& (0+255),0,b
 27150                           
 27151                           ; BSR set to: 2
 27152  00A262  0012               	return		;funcret
 27153  00A264                     __end_of_ResetParametersForConfirmedTransmission:
 27154                           	opt stack 0
 27155                           tosu	equ	0xFFF
 27156                           tosh	equ	0xFFE
 27157                           tosl	equ	0xFFD
 27158                           pclath	equ	0xFFA
 27159                           tblptru	equ	0xFF8
 27160                           tblptrh	equ	0xFF7
 27161                           tblptrl	equ	0xFF6
 27162                           tablat	equ	0xFF5
 27163                           prodh	equ	0xFF4
 27164                           prodl	equ	0xFF3
 27165                           intcon	equ	0xFF2
 27166                           intcon2	equ	0xFF1
 27167                           intcon3	equ	0xFF0
 27168                           indf0	equ	0xFEF
 27169                           postinc0	equ	0xFEE
 27170                           fsr0h	equ	0xFEA
 27171                           fsr0l	equ	0xFE9
 27172                           wreg	equ	0xFE8
 27173                           postinc1	equ	0xFE6
 27174                           postdec1	equ	0xFE5
 27175                           plusw1	equ	0xFE3
 27176                           fsr1h	equ	0xFE2
 27177                           fsr1l	equ	0xFE1
 27178                           indf2	equ	0xFDF
 27179                           postinc2	equ	0xFDE
 27180                           postdec2	equ	0xFDD
 27181                           plusw2	equ	0xFDB
 27182                           fsr2h	equ	0xFDA
 27183                           fsr2l	equ	0xFD9
 27184                           status	equ	0xFD8
 27185                           
 27186 ;; *************** function _RADIO_ReleaseData *****************
 27187 ;; Defined at:
 27188 ;;		line 1134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27189 ;; Parameters:    Size  Location     Type
 27190 ;;		None
 27191 ;; Auto vars:     Size  Location     Type
 27192 ;;		None
 27193 ;; Return value:  Size  Location     Type
 27194 ;;                  1    wreg      void 
 27195 ;; Registers used:
 27196 ;;		status,2, status,0
 27197 ;; Tracked objects:
 27198 ;;		On entry : 0/0
 27199 ;;		On exit  : 0/0
 27200 ;;		Unchanged: 0/0
 27201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27204 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27205 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27206 ;;Total ram usage:        0 bytes
 27207 ;; Hardware stack levels used:    1
 27208 ;; Hardware stack levels required when called:    7
 27209 ;; This function calls:
 27210 ;;		Nothing
 27211 ;; This function is called by:
 27212 ;;		_LORAWAN_ReceiveWindow1Callback
 27213 ;;		_LORAWAN_ReceiveWindow2Callback
 27214 ;;		_LORAWAN_EnterContinuousReceive
 27215 ;;		_LORAWAN_RxDone
 27216 ;; This function uses a non-reentrant model
 27217 ;;
 27218                           
 27219                           	psect	text121
 27220  00A448                     __ptext121:
 27221                           	opt stack 0
 27222  00A448                     _RADIO_ReleaseData:
 27223                           	opt stack 18
 27224                           
 27225                           ;radio_driver_SX1276.c: 1136: RadioConfiguration.flags &= ~(1 << (2));
 27226                           
 27227                           ; BSR set to: 2
 27228                           ;incstack = 0
 27229  00A448  0101               	movlb	1	; () banked
 27230  00A44A  95AF               	bcf	(_RadioConfiguration+35)& (0+255),2,b
 27231                           
 27232                           ; BSR set to: 1
 27233  00A44C  0012               	return		;funcret
 27234  00A44E                     __end_of_RADIO_ReleaseData:
 27235                           	opt stack 0
 27236                           tosu	equ	0xFFF
 27237                           tosh	equ	0xFFE
 27238                           tosl	equ	0xFFD
 27239                           pclath	equ	0xFFA
 27240                           tblptru	equ	0xFF8
 27241                           tblptrh	equ	0xFF7
 27242                           tblptrl	equ	0xFF6
 27243                           tablat	equ	0xFF5
 27244                           prodh	equ	0xFF4
 27245                           prodl	equ	0xFF3
 27246                           intcon	equ	0xFF2
 27247                           intcon2	equ	0xFF1
 27248                           intcon3	equ	0xFF0
 27249                           indf0	equ	0xFEF
 27250                           postinc0	equ	0xFEE
 27251                           fsr0h	equ	0xFEA
 27252                           fsr0l	equ	0xFE9
 27253                           wreg	equ	0xFE8
 27254                           postinc1	equ	0xFE6
 27255                           postdec1	equ	0xFE5
 27256                           plusw1	equ	0xFE3
 27257                           fsr1h	equ	0xFE2
 27258                           fsr1l	equ	0xFE1
 27259                           indf2	equ	0xFDF
 27260                           postinc2	equ	0xFDE
 27261                           postdec2	equ	0xFDD
 27262                           plusw2	equ	0xFDB
 27263                           fsr2h	equ	0xFDA
 27264                           fsr2l	equ	0xFD9
 27265                           status	equ	0xFD8
 27266                           
 27267 ;; *************** function _RADIO_ReceiveStop *****************
 27268 ;; Defined at:
 27269 ;;		line 951 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27270 ;; Parameters:    Size  Location     Type
 27271 ;;		None
 27272 ;; Auto vars:     Size  Location     Type
 27273 ;;		None
 27274 ;; Return value:  Size  Location     Type
 27275 ;;                  1    wreg      void 
 27276 ;; Registers used:
 27277 ;;		wreg, status,2, status,0, cstack
 27278 ;; Tracked objects:
 27279 ;;		On entry : 0/0
 27280 ;;		On exit  : 0/0
 27281 ;;		Unchanged: 0/0
 27282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27287 ;;Total ram usage:        0 bytes
 27288 ;; Hardware stack levels used:    1
 27289 ;; Hardware stack levels required when called:   11
 27290 ;; This function calls:
 27291 ;;		_RADIO_WriteMode
 27292 ;; This function is called by:
 27293 ;;		_LORAWAN_Send
 27294 ;;		_LORAWAN_ReceiveWindow1Callback
 27295 ;;		_LORAWAN_ReceiveWindow2Callback
 27296 ;;		_LORAWAN_EnterContinuousReceive
 27297 ;;		_LORAWAN_SetClass
 27298 ;; This function uses a non-reentrant model
 27299 ;;
 27300                           
 27301                           	psect	text122
 27302  00A04C                     __ptext122:
 27303                           	opt stack 0
 27304  00A04C                     _RADIO_ReceiveStop:
 27305                           	opt stack 17
 27306                           
 27307                           ;radio_driver_SX1276.c: 953: if ((1 << (1)) == RadioConfiguration.flags)
 27308                           
 27309                           ; BSR set to: 1
 27310                           ;incstack = 0
 27311  00A04C  0E02               	movlw	2
 27312  00A04E  0101               	movlb	1	; () banked
 27313  00A050  19AF               	xorwf	(_RadioConfiguration+35)& (0+255),w,b
 27314  00A052  A4D8               	btfss	status,2,c
 27315  00A054  0012               	return	
 27316                           
 27317                           ; BSR set to: 1
 27318                           ;radio_driver_SX1276.c: 954: {
 27319                           ;radio_driver_SX1276.c: 955: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 27320  00A056  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27321  00A05A  0E00               	movlw	0
 27322  00A05C  0100               	movlb	0	; () banked
 27323  00A05E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27324  00A060  0E00               	movlw	0
 27325  00A062  EC70  F035         	call	_RADIO_WriteMode
 27326                           
 27327                           ;radio_driver_SX1276.c: 956: RadioConfiguration.flags &= ~(1 << (1));
 27328  00A066  0101               	movlb	1	; () banked
 27329  00A068  93AF               	bcf	(_RadioConfiguration+35)& (0+255),1,b
 27330  00A06A  0012               	return	
 27331  00A06C                     __end_of_RADIO_ReceiveStop:
 27332                           	opt stack 0
 27333                           tosu	equ	0xFFF
 27334                           tosh	equ	0xFFE
 27335                           tosl	equ	0xFFD
 27336                           pclath	equ	0xFFA
 27337                           tblptru	equ	0xFF8
 27338                           tblptrh	equ	0xFF7
 27339                           tblptrl	equ	0xFF6
 27340                           tablat	equ	0xFF5
 27341                           prodh	equ	0xFF4
 27342                           prodl	equ	0xFF3
 27343                           intcon	equ	0xFF2
 27344                           intcon2	equ	0xFF1
 27345                           intcon3	equ	0xFF0
 27346                           indf0	equ	0xFEF
 27347                           postinc0	equ	0xFEE
 27348                           fsr0h	equ	0xFEA
 27349                           fsr0l	equ	0xFE9
 27350                           wreg	equ	0xFE8
 27351                           postinc1	equ	0xFE6
 27352                           postdec1	equ	0xFE5
 27353                           plusw1	equ	0xFE3
 27354                           fsr1h	equ	0xFE2
 27355                           fsr1l	equ	0xFE1
 27356                           indf2	equ	0xFDF
 27357                           postinc2	equ	0xFDE
 27358                           postdec2	equ	0xFDD
 27359                           plusw2	equ	0xFDB
 27360                           fsr2h	equ	0xFDA
 27361                           fsr2l	equ	0xFD9
 27362                           status	equ	0xFD8
 27363                           
 27364 ;; *************** function _RADIO_ReceiveStart *****************
 27365 ;; Defined at:
 27366 ;;		line 875 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 27367 ;; Parameters:    Size  Location     Type
 27368 ;;  rxWindowSize    2   85[BANK0 ] unsigned int 
 27369 ;; Auto vars:     Size  Location     Type
 27370 ;;		None
 27371 ;; Return value:  Size  Location     Type
 27372 ;;                  2   85[BANK0 ] enum E7805
 27373 ;; Registers used:
 27374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27375 ;; Tracked objects:
 27376 ;;		On entry : 0/0
 27377 ;;		On exit  : 0/0
 27378 ;;		Unchanged: 0/0
 27379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27380 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27381 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27382 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27383 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27384 ;;Total ram usage:       10 bytes
 27385 ;; Hardware stack levels used:    1
 27386 ;; Hardware stack levels required when called:   12
 27387 ;; This function calls:
 27388 ;;		_RADIO_RegisterWrite
 27389 ;;		_RADIO_WriteConfiguration
 27390 ;;		_RADIO_WriteMode
 27391 ;;		_SwTimerSetTimeout
 27392 ;;		_SwTimerStart
 27393 ;;		___lldiv
 27394 ;; This function is called by:
 27395 ;;		_LORAWAN_ReceiveWindow1Callback
 27396 ;;		_LORAWAN_ReceiveWindow2Callback
 27397 ;;		_LORAWAN_EnterContinuousReceive
 27398 ;; This function uses a non-reentrant model
 27399 ;;
 27400                           
 27401                           	psect	text123
 27402  004940                     __ptext123:
 27403                           	opt stack 0
 27404  004940                     _RADIO_ReceiveStart:
 27405                           	opt stack 13
 27406                           
 27407                           ;radio_driver_SX1276.c: 877: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 27408                           
 27409                           ; BSR set to: 1
 27410                           ;incstack = 0
 27411  004940  0101               	movlb	1	; () banked
 27412  004942  A5AF               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 27413  004944  D006               	goto	l14135
 27414                           
 27415                           ; BSR set to: 1
 27416                           ;radio_driver_SX1276.c: 878: {
 27417                           ;radio_driver_SX1276.c: 879: return ERR_BUFFER_LOCKED;
 27418  004946  0E80               	movlw	128
 27419  004948  0100               	movlb	0	; () banked
 27420  00494A  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27421  00494C  0E03               	movlw	3
 27422  00494E  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27423                           
 27424                           ; BSR set to: 0
 27425  004950  0012               	return	
 27426  004952                     l14135:
 27427                           
 27428                           ;radio_driver_SX1276.c: 880: }
 27429                           ;radio_driver_SX1276.c: 882: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 27430  004952  C1AF  F0B7         	movff	_RadioConfiguration+35,??_RADIO_ReceiveStart
 27431  004956  0E03               	movlw	3
 27432  004958  0100               	movlb	0	; () banked
 27433  00495A  17B7               	andwf	??_RADIO_ReceiveStart& (0+255),f,b
 27434  00495C  B4D8               	btfsc	status,2,c
 27435  00495E  D006               	goto	l14141
 27436                           
 27437                           ; BSR set to: 0
 27438                           ;radio_driver_SX1276.c: 883: {
 27439                           ;radio_driver_SX1276.c: 884: return ERR_RADIO_BUSY;
 27440  004960  0E80               	movlw	128
 27441  004962  0100               	movlb	0	; () banked
 27442  004964  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27443  004966  0E04               	movlw	4
 27444  004968  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27445                           
 27446                           ; BSR set to: 0
 27447  00496A  0012               	return	
 27448  00496C                     l14141:
 27449                           
 27450                           ; BSR set to: 0
 27451                           ;radio_driver_SX1276.c: 885: }
 27452                           ;radio_driver_SX1276.c: 887: if (0 == rxWindowSize)
 27453  00496C  0100               	movlb	0	; () banked
 27454  00496E  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27455  004970  0100               	movlb	0	; () banked
 27456  004972  11B6               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27457  004974  A4D8               	btfss	status,2,c
 27458  004976  D008               	goto	l14145
 27459                           
 27460                           ; BSR set to: 0
 27461                           ;radio_driver_SX1276.c: 888: {
 27462                           ;radio_driver_SX1276.c: 889: RADIO_WriteConfiguration(4);
 27463  004978  0E00               	movlw	0
 27464  00497A  0100               	movlb	0	; () banked
 27465  00497C  6FAB               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 27466  00497E  0E04               	movlw	4
 27467  004980  6FAA               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 27468  004982  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 27469                           
 27470                           ;radio_driver_SX1276.c: 890: }
 27471  004986  D006               	goto	l14147
 27472  004988                     l14145:
 27473                           
 27474                           ;radio_driver_SX1276.c: 891: else
 27475                           ;radio_driver_SX1276.c: 892: {
 27476                           ;radio_driver_SX1276.c: 893: RADIO_WriteConfiguration(rxWindowSize);
 27477  004988  C0B5  F0AA         	movff	RADIO_ReceiveStart@rxWindowSize,RADIO_WriteConfiguration@symbolTimeout
 27478  00498C  C0B6  F0AB         	movff	RADIO_ReceiveStart@rxWindowSize+1,RADIO_WriteConfiguration@symbolTimeout+1
 27479  004990  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 27480  004994                     l14147:
 27481                           
 27482                           ;radio_driver_SX1276.c: 894: }
 27483                           ;radio_driver_SX1276.c: 896: if (MODULATION_LORA == RadioConfiguration.modulation)
 27484  004994  0101               	movlb	1	; () banked
 27485  004996  05A4               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27486  004998  A4D8               	btfss	status,2,c
 27487  00499A  D013               	goto	l14151
 27488                           
 27489                           ; BSR set to: 1
 27490                           ;radio_driver_SX1276.c: 897: {
 27491                           ;radio_driver_SX1276.c: 900: RADIO_RegisterWrite(0x22, 0x01);
 27492  00499C  0E01               	movlw	1
 27493  00499E  0100               	movlb	0	; () banked
 27494  0049A0  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27495  0049A2  0E22               	movlw	34
 27496  0049A4  EC36  F050         	call	_RADIO_RegisterWrite
 27497                           
 27498                           ;radio_driver_SX1276.c: 906: RADIO_RegisterWrite(0x40, 0x00);
 27499  0049A8  0E00               	movlw	0
 27500  0049AA  0100               	movlb	0	; () banked
 27501  0049AC  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27502  0049AE  0E40               	movlw	64
 27503  0049B0  EC36  F050         	call	_RADIO_RegisterWrite
 27504                           
 27505                           ;radio_driver_SX1276.c: 907: RADIO_RegisterWrite(0x41, 0x00);
 27506  0049B4  0E00               	movlw	0
 27507  0049B6  0100               	movlb	0	; () banked
 27508  0049B8  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27509  0049BA  0E41               	movlw	65
 27510  0049BC  EC36  F050         	call	_RADIO_RegisterWrite
 27511                           
 27512                           ;radio_driver_SX1276.c: 908: }
 27513  0049C0  D016               	goto	l14153
 27514  0049C2                     l14151:
 27515                           
 27516                           ;radio_driver_SX1276.c: 909: else
 27517                           ;radio_driver_SX1276.c: 910: {
 27518                           ;radio_driver_SX1276.c: 911: RADIO_RegisterWrite(0x12, RadioConfiguration.rxBw);
 27519  0049C2  C1C0  F066         	movff	_RadioConfiguration+52,RADIO_RegisterWrite@value
 27520  0049C6  0E12               	movlw	18
 27521  0049C8  EC36  F050         	call	_RADIO_RegisterWrite
 27522                           
 27523                           ;radio_driver_SX1276.c: 912: RADIO_RegisterWrite(0x13, RadioConfiguration.afcBw);
 27524  0049CC  C1C1  F066         	movff	_RadioConfiguration+53,RADIO_RegisterWrite@value
 27525  0049D0  0E13               	movlw	19
 27526  0049D2  EC36  F050         	call	_RADIO_RegisterWrite
 27527                           
 27528                           ;radio_driver_SX1276.c: 915: RADIO_RegisterWrite(0x40, 0x00);
 27529  0049D6  0E00               	movlw	0
 27530  0049D8  0100               	movlb	0	; () banked
 27531  0049DA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27532  0049DC  0E40               	movlw	64
 27533  0049DE  EC36  F050         	call	_RADIO_RegisterWrite
 27534                           
 27535                           ;radio_driver_SX1276.c: 916: RADIO_RegisterWrite(0x41, 0x00);
 27536  0049E2  0E00               	movlw	0
 27537  0049E4  0100               	movlb	0	; () banked
 27538  0049E6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 27539  0049E8  0E41               	movlw	65
 27540  0049EA  EC36  F050         	call	_RADIO_RegisterWrite
 27541  0049EE                     l14153:
 27542                           
 27543                           ;radio_driver_SX1276.c: 917: }
 27544                           ;radio_driver_SX1276.c: 919: RadioConfiguration.flags |= (1 << (1));
 27545  0049EE  0101               	movlb	1	; () banked
 27546  0049F0  83AF               	bsf	(_RadioConfiguration+35)& (0+255),1,b
 27547                           
 27548                           ; BSR set to: 1
 27549                           ;radio_driver_SX1276.c: 920: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 27550  0049F2  0EE7               	movlw	231
 27551  0049F4  0101               	movlb	1	; () banked
 27552  0049F6  17AF               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 27553                           
 27554                           ; BSR set to: 1
 27555                           ;radio_driver_SX1276.c: 924: if (0 == rxWindowSize)
 27556  0049F8  0100               	movlb	0	; () banked
 27557  0049FA  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27558  0049FC  0100               	movlb	0	; () banked
 27559  0049FE  11B6               	iorwf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27560  004A00  A4D8               	btfss	status,2,c
 27561  004A02  D009               	goto	l14161
 27562                           
 27563                           ; BSR set to: 0
 27564                           ;radio_driver_SX1276.c: 925: {
 27565                           ;radio_driver_SX1276.c: 926: RADIO_WriteMode(MODE_RXCONT, RadioConfiguration.modulation,
      +                           0);
 27566  004A04  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 27567  004A08  0E00               	movlw	0
 27568  004A0A  0100               	movlb	0	; () banked
 27569  004A0C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27570  004A0E  0E05               	movlw	5
 27571  004A10  EC70  F035         	call	_RADIO_WriteMode
 27572                           
 27573                           ;radio_driver_SX1276.c: 927: }
 27574  004A14  D04F               	goto	l14171
 27575  004A16                     l14161:
 27576                           
 27577                           ;radio_driver_SX1276.c: 928: else
 27578                           ;radio_driver_SX1276.c: 929: {
 27579                           ;radio_driver_SX1276.c: 930: if (MODULATION_LORA == RadioConfiguration.modulation)
 27580  004A16  0101               	movlb	1	; () banked
 27581  004A18  05A4               	decf	(_RadioConfiguration+24)& (0+255),w,b
 27582  004A1A  A4D8               	btfss	status,2,c
 27583  004A1C  D00A               	goto	l14165
 27584                           
 27585                           ; BSR set to: 1
 27586                           ;radio_driver_SX1276.c: 931: {
 27587                           ;radio_driver_SX1276.c: 932: RADIO_WriteMode(MODE_RXSINGLE, MODULATION_LORA, 0);
 27588  004A1E  0E01               	movlw	1
 27589  004A20  0100               	movlb	0	; () banked
 27590  004A22  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27591  004A24  0E00               	movlw	0
 27592  004A26  0100               	movlb	0	; () banked
 27593  004A28  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27594  004A2A  0E06               	movlw	6
 27595  004A2C  EC70  F035         	call	_RADIO_WriteMode
 27596                           
 27597                           ;radio_driver_SX1276.c: 933: }
 27598  004A30  D041               	goto	l14171
 27599  004A32                     l14165:
 27600                           
 27601                           ;radio_driver_SX1276.c: 934: else
 27602                           ;radio_driver_SX1276.c: 935: {
 27603                           ;radio_driver_SX1276.c: 936: RADIO_WriteMode(MODE_RXCONT, MODULATION_FSK, 0);
 27604  004A32  0E00               	movlw	0
 27605  004A34  0100               	movlb	0	; () banked
 27606  004A36  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 27607  004A38  0E00               	movlw	0
 27608  004A3A  0100               	movlb	0	; () banked
 27609  004A3C  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 27610  004A3E  0E05               	movlw	5
 27611  004A40  EC70  F035         	call	_RADIO_WriteMode
 27612                           
 27613                           ;radio_driver_SX1276.c: 937: SwTimerSetTimeout(RadioConfiguration.fskRxWindowTimerId, ( 
      +                          (((uint32_t)(rxWindowSize)) << (12)) / 125UL ));
 27614  004A44  0100               	movlb	0	; () banked
 27615  004A46  51B5               	movf	RADIO_ReceiveStart@rxWindowSize& (0+255),w,b
 27616  004A48  0100               	movlb	0	; () banked
 27617  004A4A  6FB7               	movwf	??_RADIO_ReceiveStart& (0+255),b
 27618  004A4C  0100               	movlb	0	; () banked
 27619  004A4E  51B6               	movf	(RADIO_ReceiveStart@rxWindowSize+1)& (0+255),w,b
 27620  004A50  0100               	movlb	0	; () banked
 27621  004A52  6FB8               	movwf	(??_RADIO_ReceiveStart+1)& (0+255),b
 27622  004A54  0100               	movlb	0	; () banked
 27623  004A56  6BB9               	clrf	(??_RADIO_ReceiveStart+2)& (0+255),b
 27624  004A58  0100               	movlb	0	; () banked
 27625  004A5A  6BBA               	clrf	(??_RADIO_ReceiveStart+3)& (0+255),b
 27626  004A5C  0E0C               	movlw	12
 27627  004A5E                     u15785:
 27628  004A5E  90D8               	bcf	status,0,c
 27629  004A60  0100               	movlb	0	; () banked
 27630  004A62  37B7               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27631  004A64  37B8               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27632  004A66  37B9               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27633  004A68  37BA               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27634  004A6A  2EE8               	decfsz	wreg,f,c
 27635  004A6C  D7F8               	goto	u15785
 27636  004A6E  C0B7  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27637  004A72  C0B8  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27638  004A76  C0B9  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27639  004A7A  C0BA  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27640  004A7E  0E7D               	movlw	125
 27641  004A80  0100               	movlb	0	; () banked
 27642  004A82  6F68               	movwf	___lldiv@divisor& (0+255),b
 27643  004A84  0E00               	movlw	0
 27644  004A86  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27645  004A88  0E00               	movlw	0
 27646  004A8A  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27647  004A8C  0E00               	movlw	0
 27648  004A8E  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27649  004A90  EC99  F03F         	call	___lldiv	;wreg free
 27650  004A94  C064  F071         	movff	?___lldiv,SwTimerSetTimeout@timeout
 27651  004A98  C065  F072         	movff	?___lldiv+1,SwTimerSetTimeout@timeout+1
 27652  004A9C  C066  F073         	movff	?___lldiv+2,SwTimerSetTimeout@timeout+2
 27653  004AA0  C067  F074         	movff	?___lldiv+3,SwTimerSetTimeout@timeout+3
 27654  004AA4  0101               	movlb	1	; () banked
 27655  004AA6  51B4               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27656  004AA8  EC70  F04A         	call	_SwTimerSetTimeout
 27657                           
 27658                           ;radio_driver_SX1276.c: 938: SwTimerStart(RadioConfiguration.fskRxWindowTimerId);
 27659  004AAC  0101               	movlb	1	; () banked
 27660  004AAE  51B4               	movf	(_RadioConfiguration+40)& (0+255),w,b
 27661  004AB0  EC06  F042         	call	_SwTimerStart
 27662  004AB4                     l14171:
 27663                           
 27664                           ;radio_driver_SX1276.c: 939: }
 27665                           ;radio_driver_SX1276.c: 940: }
 27666                           ;radio_driver_SX1276.c: 942: if (0 != RadioConfiguration.watchdogTimerTimeout)
 27667  004AB4  0101               	movlb	1	; () banked
 27668  004AB6  51B6               	movf	(_RadioConfiguration+42)& (0+255),w,b
 27669  004AB8  0101               	movlb	1	; () banked
 27670  004ABA  11B7               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 27671  004ABC  0101               	movlb	1	; () banked
 27672  004ABE  11B8               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 27673  004AC0  0101               	movlb	1	; () banked
 27674  004AC2  11B9               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 27675  004AC4  B4D8               	btfsc	status,2,c
 27676  004AC6  D069               	goto	l14183
 27677                           
 27678                           ; BSR set to: 1
 27679                           ;radio_driver_SX1276.c: 943: {
 27680                           ;radio_driver_SX1276.c: 944: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 27681  004AC8  0101               	movlb	1	; () banked
 27682  004ACA  51B9               	movf	(_RadioConfiguration+45)& (0+255),w,b
 27683  004ACC  E10A               	bnz	u15800
 27684  004ACE  0101               	movlb	1	; () banked
 27685  004AD0  29B6               	incf	(_RadioConfiguration+42)& (0+255),w,b
 27686  004AD2  0EFF               	movlw	255
 27687  004AD4  0101               	movlb	1	; () banked
 27688  004AD6  59B7               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 27689  004AD8  0E0F               	movlw	15
 27690  004ADA  0101               	movlb	1	; () banked
 27691  004ADC  59B8               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 27692  004ADE  A0D8               	btfss	status,0,c
 27693  004AE0  D020               	goto	l14177
 27694  004AE2                     u15800:
 27695                           
 27696                           ; BSR set to: 1
 27697  004AE2  C1B6  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 27698  004AE6  C1B7  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 27699  004AEA  C1B8  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 27700  004AEE  C1B9  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 27701  004AF2  0E7D               	movlw	125
 27702  004AF4  0100               	movlb	0	; () banked
 27703  004AF6  6F68               	movwf	___lldiv@divisor& (0+255),b
 27704  004AF8  0E00               	movlw	0
 27705  004AFA  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27706  004AFC  0E00               	movlw	0
 27707  004AFE  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27708  004B00  0E00               	movlw	0
 27709  004B02  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27710  004B04  EC99  F03F         	call	___lldiv	;wreg free
 27711  004B08  0E0C               	movlw	12
 27712  004B0A                     u15815:
 27713  004B0A  90D8               	bcf	status,0,c
 27714  004B0C  0100               	movlb	0	; () banked
 27715  004B0E  3764               	rlcf	?___lldiv& (0+255),f,b
 27716  004B10  0100               	movlb	0	; () banked
 27717  004B12  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 27718  004B14  0100               	movlb	0	; () banked
 27719  004B16  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 27720  004B18  0100               	movlb	0	; () banked
 27721  004B1A  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 27722  004B1C  2EE8               	decfsz	wreg,f,c
 27723  004B1E  D7F5               	goto	u15815
 27724  004B20  D024               	goto	L17
 27725  004B22                     l14177:
 27726  004B22  C1B6  F0B7         	movff	_RadioConfiguration+42,??_RADIO_ReceiveStart
 27727  004B26  C1B7  F0B8         	movff	_RadioConfiguration+43,??_RADIO_ReceiveStart+1
 27728  004B2A  C1B8  F0B9         	movff	_RadioConfiguration+44,??_RADIO_ReceiveStart+2
 27729  004B2E  C1B9  F0BA         	movff	_RadioConfiguration+45,??_RADIO_ReceiveStart+3
 27730  004B32  0E0C               	movlw	12
 27731  004B34                     u15825:
 27732  004B34  90D8               	bcf	status,0,c
 27733  004B36  0100               	movlb	0	; () banked
 27734  004B38  37B7               	rlcf	??_RADIO_ReceiveStart& (0+255),f,b
 27735  004B3A  37B8               	rlcf	(??_RADIO_ReceiveStart+1)& (0+255),f,b
 27736  004B3C  37B9               	rlcf	(??_RADIO_ReceiveStart+2)& (0+255),f,b
 27737  004B3E  37BA               	rlcf	(??_RADIO_ReceiveStart+3)& (0+255),f,b
 27738  004B40  2EE8               	decfsz	wreg,f,c
 27739  004B42  D7F8               	goto	u15825
 27740  004B44  C0B7  F064         	movff	??_RADIO_ReceiveStart,___lldiv@dividend
 27741  004B48  C0B8  F065         	movff	??_RADIO_ReceiveStart+1,___lldiv@dividend+1
 27742  004B4C  C0B9  F066         	movff	??_RADIO_ReceiveStart+2,___lldiv@dividend+2
 27743  004B50  C0BA  F067         	movff	??_RADIO_ReceiveStart+3,___lldiv@dividend+3
 27744  004B54  0E7D               	movlw	125
 27745  004B56  0100               	movlb	0	; () banked
 27746  004B58  6F68               	movwf	___lldiv@divisor& (0+255),b
 27747  004B5A  0E00               	movlw	0
 27748  004B5C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 27749  004B5E  0E00               	movlw	0
 27750  004B60  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 27751  004B62  0E00               	movlw	0
 27752  004B64  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 27753  004B66  EC99  F03F         	call	___lldiv	;wreg free
 27754  004B6A                     L17:
 27755  004B6A  C064  F0BB         	movff	?___lldiv,_RADIO_ReceiveStart$1195
 27756  004B6E  C065  F0BC         	movff	?___lldiv+1,_RADIO_ReceiveStart$1195+1
 27757  004B72  C066  F0BD         	movff	?___lldiv+2,_RADIO_ReceiveStart$1195+2
 27758  004B76  C067  F0BE         	movff	?___lldiv+3,_RADIO_ReceiveStart$1195+3
 27759  004B7A  C0BB  F071         	movff	_RADIO_ReceiveStart$1195,SwTimerSetTimeout@timeout
 27760  004B7E  C0BC  F072         	movff	_RADIO_ReceiveStart$1195+1,SwTimerSetTimeout@timeout+1
 27761  004B82  C0BD  F073         	movff	_RADIO_ReceiveStart$1195+2,SwTimerSetTimeout@timeout+2
 27762  004B86  C0BE  F074         	movff	_RADIO_ReceiveStart$1195+3,SwTimerSetTimeout@timeout+3
 27763  004B8A  0101               	movlb	1	; () banked
 27764  004B8C  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27765  004B8E  EC70  F04A         	call	_SwTimerSetTimeout
 27766                           
 27767                           ;radio_driver_SX1276.c: 945: SwTimerStart(RadioConfiguration.watchdogTimerId);
 27768  004B92  0101               	movlb	1	; () banked
 27769  004B94  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 27770  004B96  EC06  F042         	call	_SwTimerStart
 27771  004B9A                     l14183:
 27772                           
 27773                           ;radio_driver_SX1276.c: 946: }
 27774                           ;radio_driver_SX1276.c: 947: return ERR_NONE;
 27775  004B9A  0E00               	movlw	0
 27776  004B9C  0100               	movlb	0	; () banked
 27777  004B9E  6FB6               	movwf	(?_RADIO_ReceiveStart+1)& (0+255),b
 27778  004BA0  0E00               	movlw	0
 27779  004BA2  6FB5               	movwf	?_RADIO_ReceiveStart& (0+255),b
 27780  004BA4  0012               	return	
 27781  004BA6                     __end_of_RADIO_ReceiveStart:
 27782                           	opt stack 0
 27783                           tosu	equ	0xFFF
 27784                           tosh	equ	0xFFE
 27785                           tosl	equ	0xFFD
 27786                           pclath	equ	0xFFA
 27787                           tblptru	equ	0xFF8
 27788                           tblptrh	equ	0xFF7
 27789                           tblptrl	equ	0xFF6
 27790                           tablat	equ	0xFF5
 27791                           prodh	equ	0xFF4
 27792                           prodl	equ	0xFF3
 27793                           intcon	equ	0xFF2
 27794                           intcon2	equ	0xFF1
 27795                           intcon3	equ	0xFF0
 27796                           indf0	equ	0xFEF
 27797                           postinc0	equ	0xFEE
 27798                           fsr0h	equ	0xFEA
 27799                           fsr0l	equ	0xFE9
 27800                           wreg	equ	0xFE8
 27801                           postinc1	equ	0xFE6
 27802                           postdec1	equ	0xFE5
 27803                           plusw1	equ	0xFE3
 27804                           fsr1h	equ	0xFE2
 27805                           fsr1l	equ	0xFE1
 27806                           indf2	equ	0xFDF
 27807                           postinc2	equ	0xFDE
 27808                           postdec2	equ	0xFDD
 27809                           plusw2	equ	0xFDB
 27810                           fsr2h	equ	0xFDA
 27811                           fsr2l	equ	0xFD9
 27812                           status	equ	0xFD8
 27813                           
 27814 ;; *************** function _ConfigureRadioRx *****************
 27815 ;; Defined at:
 27816 ;;		line 2019 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 27817 ;; Parameters:    Size  Location     Type
 27818 ;;  dataRate        1    wreg     unsigned char 
 27819 ;;  freq            4   22[BANK0 ] unsigned long 
 27820 ;; Auto vars:     Size  Location     Type
 27821 ;;  dataRate        1   26[BANK0 ] unsigned char 
 27822 ;; Return value:  Size  Location     Type
 27823 ;;                  1    wreg      void 
 27824 ;; Registers used:
 27825 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27826 ;; Tracked objects:
 27827 ;;		On entry : 0/0
 27828 ;;		On exit  : 0/0
 27829 ;;		Unchanged: 0/0
 27830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27831 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27832 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27833 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27834 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27835 ;;Total ram usage:        5 bytes
 27836 ;; Hardware stack levels used:    1
 27837 ;; Hardware stack levels required when called:   10
 27838 ;; This function calls:
 27839 ;;		_ConfigureRadio
 27840 ;;		_RADIO_SetCRC
 27841 ;;		_RADIO_SetIQInverted
 27842 ;; This function is called by:
 27843 ;;		_LORAWAN_ReceiveWindow1Callback
 27844 ;;		_LORAWAN_ReceiveWindow2Callback
 27845 ;;		_LORAWAN_EnterContinuousReceive
 27846 ;; This function uses a non-reentrant model
 27847 ;;
 27848                           
 27849                           	psect	text124
 27850  009E70                     __ptext124:
 27851                           	opt stack 0
 27852  009E70                     _ConfigureRadioRx:
 27853                           	opt stack 15
 27854                           
 27855                           ; BSR set to: 0
 27856                           ;incstack = 0
 27857                           ;ConfigureRadioRx@dataRate stored from wreg
 27858  009E70  0100               	movlb	0	; () banked
 27859  009E72  6F7A               	movwf	ConfigureRadioRx@dataRate& (0+255),b
 27860                           
 27861                           ;lorawan.c: 2021: ConfigureRadio(dataRate, freq);
 27862  009E74  C076  F071         	movff	ConfigureRadioRx@freq,ConfigureRadio@freq
 27863  009E78  C077  F072         	movff	ConfigureRadioRx@freq+1,ConfigureRadio@freq+1
 27864  009E7C  C078  F073         	movff	ConfigureRadioRx@freq+2,ConfigureRadio@freq+2
 27865  009E80  C079  F074         	movff	ConfigureRadioRx@freq+3,ConfigureRadio@freq+3
 27866  009E84  0100               	movlb	0	; () banked
 27867  009E86  517A               	movf	ConfigureRadioRx@dataRate& (0+255),w,b
 27868  009E88  EC0B  F041         	call	_ConfigureRadio
 27869                           
 27870                           ;lorawan.c: 2022: RADIO_SetCRC(0);
 27871  009E8C  0E00               	movlw	0
 27872  009E8E  ECF0  F051         	call	_RADIO_SetCRC
 27873                           
 27874                           ;lorawan.c: 2023: RADIO_SetIQInverted(1);
 27875  009E92  0E01               	movlw	1
 27876  009E94  ECEB  F051         	call	_RADIO_SetIQInverted
 27877  009E98  0012               	return		;funcret
 27878  009E9A                     __end_of_ConfigureRadioRx:
 27879                           	opt stack 0
 27880                           tosu	equ	0xFFF
 27881                           tosh	equ	0xFFE
 27882                           tosl	equ	0xFFD
 27883                           pclath	equ	0xFFA
 27884                           tblptru	equ	0xFF8
 27885                           tblptrh	equ	0xFF7
 27886                           tblptrl	equ	0xFF6
 27887                           tablat	equ	0xFF5
 27888                           prodh	equ	0xFF4
 27889                           prodl	equ	0xFF3
 27890                           intcon	equ	0xFF2
 27891                           intcon2	equ	0xFF1
 27892                           intcon3	equ	0xFF0
 27893                           indf0	equ	0xFEF
 27894                           postinc0	equ	0xFEE
 27895                           fsr0h	equ	0xFEA
 27896                           fsr0l	equ	0xFE9
 27897                           wreg	equ	0xFE8
 27898                           postinc1	equ	0xFE6
 27899                           postdec1	equ	0xFE5
 27900                           plusw1	equ	0xFE3
 27901                           fsr1h	equ	0xFE2
 27902                           fsr1l	equ	0xFE1
 27903                           indf2	equ	0xFDF
 27904                           postinc2	equ	0xFDE
 27905                           postdec2	equ	0xFDD
 27906                           plusw2	equ	0xFDB
 27907                           fsr2h	equ	0xFDA
 27908                           fsr2l	equ	0xFD9
 27909                           status	equ	0xFD8
 27910                           
 27911 ;; *************** function _INTERRUPT_GetDioStatus *****************
 27912 ;; Defined at:
 27913 ;;		line 48 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 27914 ;; Parameters:    Size  Location     Type
 27915 ;;		None
 27916 ;; Auto vars:     Size  Location     Type
 27917 ;;  a               1    4[BANK0 ] unsigned char 
 27918 ;; Return value:  Size  Location     Type
 27919 ;;                  1    wreg      unsigned char 
 27920 ;; Registers used:
 27921 ;;		wreg, status,2
 27922 ;; Tracked objects:
 27923 ;;		On entry : 0/0
 27924 ;;		On exit  : 0/0
 27925 ;;		Unchanged: 0/0
 27926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 27927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27928 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27930 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 27931 ;;Total ram usage:        1 bytes
 27932 ;; Hardware stack levels used:    1
 27933 ;; Hardware stack levels required when called:    7
 27934 ;; This function calls:
 27935 ;;		Nothing
 27936 ;; This function is called by:
 27937 ;;		_LORAWAN_Mainloop
 27938 ;; This function uses a non-reentrant model
 27939 ;;
 27940                           
 27941                           	psect	text125
 27942  00A2D0                     __ptext125:
 27943                           	opt stack 0
 27944  00A2D0                     _INTERRUPT_GetDioStatus:
 27945                           	opt stack 22
 27946                           
 27947                           ;interrupt_manager_lora_addons.c: 50: uint8_t a;
 27948                           ;interrupt_manager_lora_addons.c: 51: (INTCONbits.GIE = 0);
 27949                           
 27950                           ;incstack = 0
 27951  00A2D0  9EF2               	bcf	intcon,7,c	;volatile
 27952                           
 27953                           ;interrupt_manager_lora_addons.c: 52: a = dioStatus;
 27954  00A2D2  C04C  F064         	movff	_dioStatus,INTERRUPT_GetDioStatus@a	;volatile
 27955                           
 27956                           ;interrupt_manager_lora_addons.c: 53: dioStatus = 0;
 27957  00A2D6  0E00               	movlw	0
 27958  00A2D8  6E4C               	movwf	_dioStatus,c	;volatile
 27959                           
 27960                           ;interrupt_manager_lora_addons.c: 54: (INTCONbits.GIE = 1);
 27961  00A2DA  8EF2               	bsf	intcon,7,c	;volatile
 27962                           
 27963                           ;interrupt_manager_lora_addons.c: 55: return a;
 27964  00A2DC  0100               	movlb	0	; () banked
 27965  00A2DE  5164               	movf	INTERRUPT_GetDioStatus@a& (0+255),w,b
 27966  00A2E0  0012               	return	
 27967  00A2E2                     __end_of_INTERRUPT_GetDioStatus:
 27968                           	opt stack 0
 27969                           tosu	equ	0xFFF
 27970                           tosh	equ	0xFFE
 27971                           tosl	equ	0xFFD
 27972                           pclath	equ	0xFFA
 27973                           tblptru	equ	0xFF8
 27974                           tblptrh	equ	0xFF7
 27975                           tblptrl	equ	0xFF6
 27976                           tablat	equ	0xFF5
 27977                           prodh	equ	0xFF4
 27978                           prodl	equ	0xFF3
 27979                           intcon	equ	0xFF2
 27980                           intcon2	equ	0xFF1
 27981                           intcon3	equ	0xFF0
 27982                           indf0	equ	0xFEF
 27983                           postinc0	equ	0xFEE
 27984                           fsr0h	equ	0xFEA
 27985                           fsr0l	equ	0xFE9
 27986                           wreg	equ	0xFE8
 27987                           postinc1	equ	0xFE6
 27988                           postdec1	equ	0xFE5
 27989                           plusw1	equ	0xFE3
 27990                           fsr1h	equ	0xFE2
 27991                           fsr1l	equ	0xFE1
 27992                           indf2	equ	0xFDF
 27993                           postinc2	equ	0xFDE
 27994                           postdec2	equ	0xFDD
 27995                           plusw2	equ	0xFDB
 27996                           fsr2h	equ	0xFDA
 27997                           fsr2l	equ	0xFD9
 27998                           status	equ	0xFD8
 27999                           
 28000 ;; *************** function _LORAWAN_Join *****************
 28001 ;; Defined at:
 28002 ;;		line 115 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28003 ;; Parameters:    Size  Location     Type
 28004 ;;  activationTy    1    wreg     enum E7980
 28005 ;; Auto vars:     Size  Location     Type
 28006 ;;  activationTy    1  145[BANK0 ] enum E7980
 28007 ;;  result          1  144[BANK0 ] enum E7957
 28008 ;;  bufferIndex     1  143[BANK0 ] unsigned char 
 28009 ;; Return value:  Size  Location     Type
 28010 ;;                  1    wreg      enum E7957
 28011 ;; Registers used:
 28012 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28013 ;; Tracked objects:
 28014 ;;		On entry : 0/0
 28015 ;;		On exit  : 0/0
 28016 ;;		Unchanged: 0/0
 28017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28019 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28021 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28022 ;;Total ram usage:        3 bytes
 28023 ;; Hardware stack levels used:    1
 28024 ;; Hardware stack levels required when called:   14
 28025 ;; This function calls:
 28026 ;;		_PrepareJoinRequestFrame
 28027 ;;		_RADIO_Transmit
 28028 ;;		_SelectChannelForTransmission
 28029 ;;		_SwTimerSetTimeout
 28030 ;;		_SwTimerStart
 28031 ;;		_UpdateJoinInProgress
 28032 ;; This function is called by:
 28033 ;;		_main
 28034 ;; This function uses a non-reentrant model
 28035 ;;
 28036                           
 28037                           	psect	text126
 28038  007E76                     __ptext126:
 28039                           	opt stack 0
 28040  007E76                     _LORAWAN_Join:
 28041                           	opt stack 16
 28042                           
 28043                           ; BSR set to: 0
 28044                           ;incstack = 0
 28045                           ;LORAWAN_Join@activationTypeNew stored from wreg
 28046  007E76  0100               	movlb	0	; () banked
 28047  007E78  6FF1               	movwf	LORAWAN_Join@activationTypeNew& (0+255),b
 28048                           
 28049                           ;lorawan.c: 117: uint8_t bufferIndex;
 28050                           ;lorawan.c: 118: LorawanError_t result;
 28051                           ;lorawan.c: 120: if (loRa.macStatus.macPause == 1)
 28052  007E7A  0102               	movlb	2	; () banked
 28053  007E7C  B103               	btfsc	(_loRa+3)& (0+255),0,b
 28054  007E7E  0012               	return	
 28055                           
 28056                           ; BSR set to: 2
 28057                           ;lorawan.c: 123: }
 28058                           ;lorawan.c: 125: if (loRa.macStatus.silentImmediately == 1)
 28059                           
 28060                           ; BSR set to: 2
 28061                           ;lorawan.c: 121: {
 28062                           ;lorawan.c: 122: return MAC_PAUSED;
 28063                           ;	Return value of _LORAWAN_Join is never used
 28064  007E80  0102               	movlb	2	; () banked
 28065  007E82  BF02               	btfsc	(_loRa+2)& (0+255),7,b
 28066  007E84  0012               	return	
 28067                           
 28068                           ; BSR set to: 2
 28069                           ;lorawan.c: 128: }
 28070                           ;lorawan.c: 130: if (loRa.macStatus.macState != IDLE)
 28071                           
 28072                           ; BSR set to: 2
 28073                           
 28074                           ; BSR set to: 2
 28075                           ;lorawan.c: 126: {
 28076                           ;lorawan.c: 127: return SILENT_IMMEDIATELY_ACTIVE;
 28077                           ;	Return value of _LORAWAN_Join is never used
 28078  007E86  0102               	movlb	2	; () banked
 28079  007E88  5102               	movf	(_loRa+2)& (0+255),w,b
 28080  007E8A  0B0F               	andlw	15
 28081  007E8C  0900               	iorlw	0
 28082  007E8E  A4D8               	btfss	status,2,c
 28083  007E90  0012               	return	
 28084                           
 28085                           ; BSR set to: 2
 28086                           ;lorawan.c: 133: }
 28087                           ;lorawan.c: 135: loRa.activationParameters.activationType = activationTypeNew;
 28088                           
 28089                           ; BSR set to: 2
 28090                           ;lorawan.c: 131: {
 28091                           ;lorawan.c: 132: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 28092                           ;	Return value of _LORAWAN_Join is never used
 28093  007E92  C0F1  F21D         	movff	LORAWAN_Join@activationTypeNew,_loRa+29
 28094                           
 28095                           ; BSR set to: 2
 28096                           ;lorawan.c: 137: if (OTAA == activationTypeNew)
 28097  007E96  0100               	movlb	0	; () banked
 28098  007E98  51F1               	movf	LORAWAN_Join@activationTypeNew& (0+255),w,b
 28099  007E9A  0100               	movlb	0	; () banked
 28100  007E9C  A4D8               	btfss	status,2,c
 28101  007E9E  D02B               	goto	l1666
 28102                           
 28103                           ; BSR set to: 0
 28104                           ;lorawan.c: 138: {
 28105                           ;lorawan.c: 140: if ( (loRa.macKeys.deviceEui == 0) || (loRa.macKeys.applicationEui == 0
      +                          ) || (loRa.macKeys.applicationKey == 0) )
 28106  007EA0  0102               	movlb	2	; () banked
 28107  007EA2  A1A5               	btfss	(_loRa+165)& (0+255),0,b
 28108  007EA4  0012               	return	
 28109                           
 28110                           ; BSR set to: 2
 28111  007EA6  0102               	movlb	2	; () banked
 28112  007EA8  A3A5               	btfss	(_loRa+165)& (0+255),1,b
 28113  007EAA  0012               	return	
 28114                           
 28115                           ; BSR set to: 2
 28116  007EAC  0102               	movlb	2	; () banked
 28117  007EAE  A7A5               	btfss	(_loRa+165)& (0+255),3,b
 28118  007EB0  0012               	return	
 28119                           
 28120                           ; BSR set to: 2
 28121                           ;lorawan.c: 144: else
 28122                           ;lorawan.c: 145: {
 28123                           ;lorawan.c: 146: bufferIndex = PrepareJoinRequestFrame ();
 28124                           
 28125                           ; BSR set to: 2
 28126                           
 28127                           ; BSR set to: 2
 28128                           ;lorawan.c: 143: }
 28129                           
 28130                           ; BSR set to: 2
 28131                           ;lorawan.c: 141: {
 28132                           ;lorawan.c: 142: return KEYS_NOT_INITIALIZED;
 28133                           ;	Return value of _LORAWAN_Join is never used
 28134  007EB2  EC20  F029         	call	_PrepareJoinRequestFrame	;wreg free
 28135  007EB6  0100               	movlb	0	; () banked
 28136  007EB8  6FEF               	movwf	LORAWAN_Join@bufferIndex& (0+255),b
 28137                           
 28138                           ;lorawan.c: 147: result = SelectChannelForTransmission (0);
 28139  007EBA  0E00               	movlw	0
 28140  007EBC  EC84  F046         	call	_SelectChannelForTransmission
 28141  007EC0  0100               	movlb	0	; () banked
 28142  007EC2  6FF0               	movwf	LORAWAN_Join@result& (0+255),b
 28143                           
 28144                           ; BSR set to: 0
 28145                           ;lorawan.c: 149: if (result == OK)
 28146  007EC4  0100               	movlb	0	; () banked
 28147  007EC6  51F0               	movf	LORAWAN_Join@result& (0+255),w,b
 28148  007EC8  0100               	movlb	0	; () banked
 28149  007ECA  A4D8               	btfss	status,2,c
 28150  007ECC  0012               	return	
 28151                           
 28152                           ; BSR set to: 0
 28153                           ;lorawan.c: 150: {
 28154                           ;lorawan.c: 151: if (RADIO_Transmit(macBuffer, bufferIndex) == OK)
 28155  007ECE  0EE0               	movlw	low _macBuffer
 28156  007ED0  0100               	movlb	0	; () banked
 28157  007ED2  6FB5               	movwf	RADIO_Transmit@buffer& (0+255),b
 28158  007ED4  0E04               	movlw	high _macBuffer
 28159  007ED6  0100               	movlb	0	; () banked
 28160  007ED8  6FB6               	movwf	(RADIO_Transmit@buffer+1)& (0+255),b
 28161  007EDA  C0EF  F0B7         	movff	LORAWAN_Join@bufferIndex,RADIO_Transmit@bufferLen
 28162  007EDE  ECD3  F025         	call	_RADIO_Transmit	;wreg free
 28163  007EE2  0100               	movlb	0	; () banked
 28164  007EE4  51B5               	movf	?_RADIO_Transmit& (0+255),w,b
 28165  007EE6  0100               	movlb	0	; () banked
 28166  007EE8  11B6               	iorwf	(?_RADIO_Transmit+1)& (0+255),w,b
 28167  007EEA  A4D8               	btfss	status,2,c
 28168  007EEC  0012               	return	
 28169                           
 28170                           ; BSR set to: 0
 28171                           ;lorawan.c: 152: {
 28172                           ;lorawan.c: 153: UpdateJoinInProgress(TRANSMISSION_OCCURRING);
 28173  007EEE  0E01               	movlw	1
 28174  007EF0  ECA1  F050         	call	_UpdateJoinInProgress
 28175                           
 28176                           ;lorawan.c: 164: }
 28177                           ;lorawan.c: 165: }
 28178                           ;lorawan.c: 166: }
 28179                           
 28180                           ;lorawan.c: 161: else
 28181                           ;lorawan.c: 162: {
 28182                           ;lorawan.c: 163: return result;
 28183                           ;	Return value of _LORAWAN_Join is never used
 28184                           
 28185                           ;lorawan.c: 159: }
 28186                           ;lorawan.c: 160: }
 28187                           
 28188                           ;lorawan.c: 156: else
 28189                           ;lorawan.c: 157: {
 28190                           ;lorawan.c: 158: return MAC_STATE_NOT_READY_FOR_TRANSMISSION;
 28191                           ;	Return value of _LORAWAN_Join is never used
 28192                           
 28193                           ;lorawan.c: 155: }
 28194                           
 28195                           ;lorawan.c: 154: return OK;
 28196                           ;	Return value of _LORAWAN_Join is never used
 28197  007EF4  0012               	return	
 28198  007EF6                     l1666:
 28199                           
 28200                           ; BSR set to: 0
 28201                           ;lorawan.c: 167: else
 28202                           ;lorawan.c: 168: {
 28203                           ;lorawan.c: 170: if ( (loRa.macKeys.applicationSessionKey == 0) || (loRa.macKeys.network
      +                          SessionKey == 0) || (loRa.macKeys.deviceAddress == 0) )
 28204  007EF6  0102               	movlb	2	; () banked
 28205  007EF8  ABA5               	btfss	(_loRa+165)& (0+255),5,b
 28206  007EFA  0012               	return	
 28207                           
 28208                           ; BSR set to: 2
 28209  007EFC  0102               	movlb	2	; () banked
 28210  007EFE  A9A5               	btfss	(_loRa+165)& (0+255),4,b
 28211  007F00  0012               	return	
 28212                           
 28213                           ; BSR set to: 2
 28214  007F02  0102               	movlb	2	; () banked
 28215  007F04  A5A5               	btfss	(_loRa+165)& (0+255),2,b
 28216  007F06  0012               	return	
 28217                           
 28218                           ; BSR set to: 2
 28219                           ;lorawan.c: 174: else
 28220                           ;lorawan.c: 175: {
 28221                           ;lorawan.c: 176: UpdateJoinInProgress(ABP_DELAY);
 28222                           
 28223                           ; BSR set to: 2
 28224                           
 28225                           ; BSR set to: 2
 28226                           ;lorawan.c: 173: }
 28227                           
 28228                           ; BSR set to: 2
 28229                           ;lorawan.c: 171: {
 28230                           ;lorawan.c: 172: return KEYS_NOT_INITIALIZED;
 28231                           ;	Return value of _LORAWAN_Join is never used
 28232  007F08  0E07               	movlw	7
 28233  007F0A  ECA1  F050         	call	_UpdateJoinInProgress
 28234                           
 28235                           ;lorawan.c: 177: SwTimerSetTimeout(loRa.abpJoinTimerId, ( (((uint32_t)(20)) << (12)) / 1
      +                          25UL ));
 28236  007F0E  0E8F               	movlw	143
 28237  007F10  0100               	movlb	0	; () banked
 28238  007F12  6F71               	movwf	SwTimerSetTimeout@timeout& (0+255),b
 28239  007F14  0E02               	movlw	2
 28240  007F16  6F72               	movwf	(SwTimerSetTimeout@timeout+1)& (0+255),b
 28241  007F18  0E00               	movlw	0
 28242  007F1A  6F73               	movwf	(SwTimerSetTimeout@timeout+2)& (0+255),b
 28243  007F1C  0E00               	movlw	0
 28244  007F1E  6F74               	movwf	(SwTimerSetTimeout@timeout+3)& (0+255),b
 28245  007F20  0102               	movlb	2	; () banked
 28246  007F22  51F3               	movf	(_loRa+243)& (0+255),w,b
 28247  007F24  EC70  F04A         	call	_SwTimerSetTimeout
 28248                           
 28249                           ;lorawan.c: 178: SwTimerStart(loRa.abpJoinTimerId);
 28250  007F28  0102               	movlb	2	; () banked
 28251  007F2A  51F3               	movf	(_loRa+243)& (0+255),w,b
 28252  007F2C  EC06  F042         	call	_SwTimerStart
 28253                           
 28254                           ;lorawan.c: 180: return OK;
 28255                           ;	Return value of _LORAWAN_Join is never used
 28256  007F30  0012               	return	
 28257  007F32                     __end_of_LORAWAN_Join:
 28258                           	opt stack 0
 28259                           tosu	equ	0xFFF
 28260                           tosh	equ	0xFFE
 28261                           tosl	equ	0xFFD
 28262                           pclath	equ	0xFFA
 28263                           tblptru	equ	0xFF8
 28264                           tblptrh	equ	0xFF7
 28265                           tblptrl	equ	0xFF6
 28266                           tablat	equ	0xFF5
 28267                           prodh	equ	0xFF4
 28268                           prodl	equ	0xFF3
 28269                           intcon	equ	0xFF2
 28270                           intcon2	equ	0xFF1
 28271                           intcon3	equ	0xFF0
 28272                           indf0	equ	0xFEF
 28273                           postinc0	equ	0xFEE
 28274                           fsr0h	equ	0xFEA
 28275                           fsr0l	equ	0xFE9
 28276                           wreg	equ	0xFE8
 28277                           postinc1	equ	0xFE6
 28278                           postdec1	equ	0xFE5
 28279                           plusw1	equ	0xFE3
 28280                           fsr1h	equ	0xFE2
 28281                           fsr1l	equ	0xFE1
 28282                           indf2	equ	0xFDF
 28283                           postinc2	equ	0xFDE
 28284                           postdec2	equ	0xFDD
 28285                           plusw2	equ	0xFDB
 28286                           fsr2h	equ	0xFDA
 28287                           fsr2l	equ	0xFD9
 28288                           status	equ	0xFD8
 28289                           
 28290 ;; *************** function _UpdateJoinInProgress *****************
 28291 ;; Defined at:
 28292 ;;		line 2037 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 28293 ;; Parameters:    Size  Location     Type
 28294 ;;  state           1    wreg     unsigned char 
 28295 ;; Auto vars:     Size  Location     Type
 28296 ;;  state           1    4[BANK0 ] unsigned char 
 28297 ;; Return value:  Size  Location     Type
 28298 ;;                  1    wreg      void 
 28299 ;; Registers used:
 28300 ;;		wreg, status,2, status,0
 28301 ;; Tracked objects:
 28302 ;;		On entry : 0/0
 28303 ;;		On exit  : 0/0
 28304 ;;		Unchanged: 0/0
 28305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28307 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28309 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28310 ;;Total ram usage:        1 bytes
 28311 ;; Hardware stack levels used:    1
 28312 ;; Hardware stack levels required when called:    7
 28313 ;; This function calls:
 28314 ;;		Nothing
 28315 ;; This function is called by:
 28316 ;;		_LORAWAN_Join
 28317 ;; This function uses a non-reentrant model
 28318 ;;
 28319                           
 28320                           	psect	text127
 28321  00A142                     __ptext127:
 28322                           	opt stack 0
 28323  00A142                     _UpdateJoinInProgress:
 28324                           	opt stack 22
 28325                           
 28326                           ;incstack = 0
 28327                           ;UpdateJoinInProgress@state stored from wreg
 28328  00A142  0100               	movlb	0	; () banked
 28329  00A144  6F64               	movwf	UpdateJoinInProgress@state& (0+255),b
 28330                           
 28331                           ;lorawan.c: 2040: loRa.macStatus.networkJoined = 0;
 28332  00A146  0102               	movlb	2	; () banked
 28333  00A148  9902               	bcf	(_loRa+2)& (0+255),4,b
 28334                           
 28335                           ;lorawan.c: 2041: loRa.lorawanMacStatus.joining = 1;
 28336  00A14A  0102               	movlb	2	; () banked
 28337  00A14C  8500               	bsf	_loRa& (0+255),2,b
 28338                           
 28339                           ; BSR set to: 2
 28340                           ;lorawan.c: 2042: loRa.macStatus.macState = state;
 28341  00A14E  0102               	movlb	2	; () banked
 28342  00A150  5102               	movf	(_loRa+2)& (0+255),w,b
 28343  00A152  0100               	movlb	0	; () banked
 28344  00A154  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28345  00A156  0BF0               	andlw	-16
 28346  00A158  1964               	xorwf	UpdateJoinInProgress@state& (0+255),w,b
 28347  00A15A  0102               	movlb	2	; () banked
 28348  00A15C  6F02               	movwf	(_loRa+2)& (0+255),b
 28349                           
 28350                           ; BSR set to: 2
 28351  00A15E  0012               	return		;funcret
 28352  00A160                     __end_of_UpdateJoinInProgress:
 28353                           	opt stack 0
 28354                           tosu	equ	0xFFF
 28355                           tosh	equ	0xFFE
 28356                           tosl	equ	0xFFD
 28357                           pclath	equ	0xFFA
 28358                           tblptru	equ	0xFF8
 28359                           tblptrh	equ	0xFF7
 28360                           tblptrl	equ	0xFF6
 28361                           tablat	equ	0xFF5
 28362                           prodh	equ	0xFF4
 28363                           prodl	equ	0xFF3
 28364                           intcon	equ	0xFF2
 28365                           intcon2	equ	0xFF1
 28366                           intcon3	equ	0xFF0
 28367                           indf0	equ	0xFEF
 28368                           postinc0	equ	0xFEE
 28369                           fsr0h	equ	0xFEA
 28370                           fsr0l	equ	0xFE9
 28371                           wreg	equ	0xFE8
 28372                           postinc1	equ	0xFE6
 28373                           postdec1	equ	0xFE5
 28374                           plusw1	equ	0xFE3
 28375                           fsr1h	equ	0xFE2
 28376                           fsr1l	equ	0xFE1
 28377                           indf2	equ	0xFDF
 28378                           postinc2	equ	0xFDE
 28379                           postdec2	equ	0xFDD
 28380                           plusw2	equ	0xFDB
 28381                           fsr2h	equ	0xFDA
 28382                           fsr2l	equ	0xFD9
 28383                           status	equ	0xFD8
 28384                           
 28385 ;; *************** function _SelectChannelForTransmission *****************
 28386 ;; Defined at:
 28387 ;;		line 919 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28388 ;; Parameters:    Size  Location     Type
 28389 ;;  transmission    1    wreg     unsigned char 
 28390 ;; Auto vars:     Size  Location     Type
 28391 ;;  transmission    1   95[BANK0 ] unsigned char 
 28392 ;;  channelIndex    1   97[BANK0 ] unsigned char 
 28393 ;;  result          1   96[BANK0 ] enum E8016
 28394 ;; Return value:  Size  Location     Type
 28395 ;;                  1    wreg      enum E8016
 28396 ;; Registers used:
 28397 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28398 ;; Tracked objects:
 28399 ;;		On entry : 0/0
 28400 ;;		On exit  : 0/0
 28401 ;;		Unchanged: 0/0
 28402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28404 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28406 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28407 ;;Total ram usage:        3 bytes
 28408 ;; Hardware stack levels used:    1
 28409 ;; Hardware stack levels required when called:   11
 28410 ;; This function calls:
 28411 ;;		_ConfigureRadioTx
 28412 ;;		_SearchAvailableChannel
 28413 ;; This function is called by:
 28414 ;;		_LORAWAN_RxTimeout
 28415 ;;		_LORAWAN_Join
 28416 ;;		_LORAWAN_Send
 28417 ;;		_AckRetransmissionCallback
 28418 ;;		_UnconfirmedTransmissionCallback
 28419 ;; This function uses a non-reentrant model
 28420 ;;
 28421                           
 28422                           	psect	text128
 28423  008D08                     __ptext128:
 28424                           	opt stack 0
 28425  008D08                     _SelectChannelForTransmission:
 28426                           	opt stack 17
 28427                           
 28428                           ; BSR set to: 2
 28429                           ;incstack = 0
 28430                           ;SelectChannelForTransmission@transmissionType stored from wreg
 28431  008D08  0100               	movlb	0	; () banked
 28432  008D0A  6FBF               	movwf	SelectChannelForTransmission@transmissionType& (0+255),b
 28433                           
 28434                           ;lorawan_eu.c: 921: LorawanError_t result = OK;
 28435  008D0C  0E00               	movlw	0
 28436  008D0E  0100               	movlb	0	; () banked
 28437  008D10  6FC0               	movwf	SelectChannelForTransmission@result& (0+255),b
 28438                           
 28439                           ; BSR set to: 0
 28440                           ;lorawan_eu.c: 922: uint8_t channelIndex;
 28441                           ;lorawan_eu.c: 924: result = SearchAvailableChannel (16, transmissionType, &channelIndex
      +                          );
 28442  008D12  C0BF  F0B3         	movff	SelectChannelForTransmission@transmissionType,SearchAvailableChannel@transmission
      +                          Type
 28443  008D16  0EC1               	movlw	low SelectChannelForTransmission@channelIndex
 28444  008D18  0100               	movlb	0	; () banked
 28445  008D1A  6FB4               	movwf	SearchAvailableChannel@channelIndex& (0+255),b
 28446  008D1C  0E00               	movlw	high SelectChannelForTransmission@channelIndex
 28447  008D1E  0100               	movlb	0	; () banked
 28448  008D20  6FB5               	movwf	(SearchAvailableChannel@channelIndex+1)& (0+255),b
 28449  008D22  0E10               	movlw	16
 28450  008D24  EC29  F032         	call	_SearchAvailableChannel
 28451  008D28  0100               	movlb	0	; () banked
 28452  008D2A  6FC0               	movwf	SelectChannelForTransmission@result& (0+255),b
 28453                           
 28454                           ; BSR set to: 0
 28455                           ;lorawan_eu.c: 926: if (result == OK)
 28456  008D2C  0100               	movlb	0	; () banked
 28457  008D2E  51C0               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28458  008D30  0100               	movlb	0	; () banked
 28459  008D32  A4D8               	btfss	status,2,c
 28460  008D34  D021               	goto	l14845
 28461                           
 28462                           ; BSR set to: 0
 28463                           ;lorawan_eu.c: 927: {
 28464                           ;lorawan_eu.c: 928: loRa.lastUsedChannelIndex = channelIndex;
 28465  008D36  C0C1  F2DA         	movff	SelectChannelForTransmission@channelIndex,_loRa+218
 28466                           
 28467                           ; BSR set to: 0
 28468                           ;lorawan_eu.c: 929: loRa.receiveWindow1Parameters.frequency = Channels[channelIndex].fre
      +                          quency;
 28469  008D3A  0100               	movlb	0	; () banked
 28470  008D3C  51C1               	movf	SelectChannelForTransmission@channelIndex& (0+255),w,b
 28471  008D3E  0D0E               	mullw	14
 28472  008D40  0E00               	movlw	low _Channels
 28473  008D42  24F3               	addwf	prodl,w,c
 28474  008D44  6ED9               	movwf	fsr2l,c
 28475  008D46  0E04               	movlw	high _Channels
 28476  008D48  20F4               	addwfc	prodh,w,c
 28477  008D4A  6EDA               	movwf	fsr2h,c
 28478  008D4C  CFDE F213          	movff	postinc2,_loRa+19
 28479  008D50  CFDE F214          	movff	postinc2,_loRa+20
 28480  008D54  CFDE F215          	movff	postinc2,_loRa+21
 28481  008D58  CFDE F216          	movff	postinc2,_loRa+22
 28482                           
 28483                           ; BSR set to: 0
 28484                           ;lorawan_eu.c: 930: loRa.receiveWindow1Parameters.dataRate = loRa.currentDataRate;
 28485  008D5C  C2DF  F217         	movff	_loRa+223,_loRa+23
 28486                           
 28487                           ; BSR set to: 0
 28488                           ;lorawan_eu.c: 932: ConfigureRadioTx(loRa.receiveWindow1Parameters.dataRate, loRa.receiv
      +                          eWindow1Parameters.frequency);
 28489  008D60  C213  F076         	movff	_loRa+19,ConfigureRadioTx@freq
 28490  008D64  C214  F077         	movff	_loRa+20,ConfigureRadioTx@freq+1
 28491  008D68  C215  F078         	movff	_loRa+21,ConfigureRadioTx@freq+2
 28492  008D6C  C216  F079         	movff	_loRa+22,ConfigureRadioTx@freq+3
 28493  008D70  0102               	movlb	2	; () banked
 28494  008D72  5117               	movf	(_loRa+23)& (0+255),w,b
 28495  008D74  EC46  F04A         	call	_ConfigureRadioTx
 28496  008D78                     l14845:
 28497                           
 28498                           ;lorawan_eu.c: 933: }
 28499                           ;lorawan_eu.c: 934: return result;
 28500  008D78  0100               	movlb	0	; () banked
 28501  008D7A  51C0               	movf	SelectChannelForTransmission@result& (0+255),w,b
 28502  008D7C  0012               	return	
 28503  008D7E                     __end_of_SelectChannelForTransmission:
 28504                           	opt stack 0
 28505                           tosu	equ	0xFFF
 28506                           tosh	equ	0xFFE
 28507                           tosl	equ	0xFFD
 28508                           pclath	equ	0xFFA
 28509                           tblptru	equ	0xFF8
 28510                           tblptrh	equ	0xFF7
 28511                           tblptrl	equ	0xFF6
 28512                           tablat	equ	0xFF5
 28513                           prodh	equ	0xFF4
 28514                           prodl	equ	0xFF3
 28515                           intcon	equ	0xFF2
 28516                           intcon2	equ	0xFF1
 28517                           intcon3	equ	0xFF0
 28518                           indf0	equ	0xFEF
 28519                           postinc0	equ	0xFEE
 28520                           fsr0h	equ	0xFEA
 28521                           fsr0l	equ	0xFE9
 28522                           wreg	equ	0xFE8
 28523                           postinc1	equ	0xFE6
 28524                           postdec1	equ	0xFE5
 28525                           plusw1	equ	0xFE3
 28526                           fsr1h	equ	0xFE2
 28527                           fsr1l	equ	0xFE1
 28528                           indf2	equ	0xFDF
 28529                           postinc2	equ	0xFDE
 28530                           postdec2	equ	0xFDD
 28531                           plusw2	equ	0xFDB
 28532                           fsr2h	equ	0xFDA
 28533                           fsr2l	equ	0xFD9
 28534                           status	equ	0xFD8
 28535                           
 28536 ;; *************** function _SearchAvailableChannel *****************
 28537 ;; Defined at:
 28538 ;;		line 778 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28539 ;; Parameters:    Size  Location     Type
 28540 ;;  maxChannels     1    wreg     unsigned char 
 28541 ;;  transmission    1   83[BANK0 ] unsigned char 
 28542 ;;  channelIndex    2   84[BANK0 ] PTR unsigned char 
 28543 ;;		 -> LORAWAN_RxDone@channelIndex(1), SelectChannelForTransmission@channelIndex(1), 
 28544 ;; Auto vars:     Size  Location     Type
 28545 ;;  maxChannels     1   92[BANK0 ] unsigned char 
 28546 ;;  i               1   94[BANK0 ] unsigned char 
 28547 ;;  randomNumber    1   93[BANK0 ] unsigned char 
 28548 ;;  result          1   91[BANK0 ] enum E8016
 28549 ;;  randomNumber    1   90[BANK0 ] unsigned char 
 28550 ;; Return value:  Size  Location     Type
 28551 ;;                  1    wreg      enum E8016
 28552 ;; Registers used:
 28553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28554 ;; Tracked objects:
 28555 ;;		On entry : 0/0
 28556 ;;		On exit  : 0/0
 28557 ;;		Unchanged: 0/0
 28558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28559 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28560 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28561 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28562 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28563 ;;Total ram usage:       12 bytes
 28564 ;; Hardware stack levels used:    1
 28565 ;; Hardware stack levels required when called:   10
 28566 ;; This function calls:
 28567 ;;		_Random
 28568 ;; This function is called by:
 28569 ;;		_SelectChannelForTransmission
 28570 ;;		_LORAWAN_RxDone
 28571 ;; This function uses a non-reentrant model
 28572 ;;
 28573                           
 28574                           	psect	text129
 28575  006452                     __ptext129:
 28576                           	opt stack 0
 28577  006452                     _SearchAvailableChannel:
 28578                           	opt stack 17
 28579                           
 28580                           ; BSR set to: 0
 28581                           ;incstack = 0
 28582                           ;SearchAvailableChannel@maxChannels stored from wreg
 28583  006452  0100               	movlb	0	; () banked
 28584  006454  6FBC               	movwf	SearchAvailableChannel@maxChannels& (0+255),b
 28585                           
 28586                           ;lorawan_eu.c: 780: uint8_t randomNumberCopy, randomNumber, i;
 28587                           ;lorawan_eu.c: 781: LorawanError_t result = OK;
 28588  006456  0E00               	movlw	0
 28589  006458  0100               	movlb	0	; () banked
 28590  00645A  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28591                           
 28592                           ; BSR set to: 0
 28593                           ;lorawan_eu.c: 783: randomNumber = Random (maxChannels) + 1;
 28594  00645C  C0BC  F0B1         	movff	SearchAvailableChannel@maxChannels,Random@max
 28595  006460  0100               	movlb	0	; () banked
 28596  006462  6BB2               	clrf	(Random@max+1)& (0+255),b
 28597  006464  EC05  F050         	call	_Random	;wreg free
 28598  006468  0100               	movlb	0	; () banked
 28599  00646A  29B1               	incf	?_Random& (0+255),w,b
 28600  00646C  0100               	movlb	0	; () banked
 28601  00646E  6FBD               	movwf	SearchAvailableChannel@randomNumber& (0+255),b
 28602                           
 28603                           ; BSR set to: 0
 28604                           ;lorawan_eu.c: 784: randomNumberCopy = randomNumber;
 28605  006470  C0BD  F0BA         	movff	SearchAvailableChannel@randomNumber,SearchAvailableChannel@randomNumberCopy
 28606                           
 28607                           ;lorawan_eu.c: 786: while (randomNumber)
 28608  006474  D085               	goto	l14387
 28609  006476                     l14361:
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;lorawan_eu.c: 787: {
 28613                           ;lorawan_eu.c: 788: for (i=0; (i < maxChannels) && (randomNumber != 0) ; i++)
 28614  006476  0E00               	movlw	0
 28615  006478  0100               	movlb	0	; () banked
 28616  00647A  6FBE               	movwf	SearchAvailableChannel@i& (0+255),b
 28617  00647C  D06C               	goto	l14379
 28618  00647E                     l14363:
 28619                           
 28620                           ; BSR set to: 0
 28621                           ;lorawan_eu.c: 789: {
 28622                           ;lorawan_eu.c: 790: if ( ( Channels[i].status == 1 ) && ( Channels[i].channelTimer == 0 
      +                          ) && ( loRa.currentDataRate >= Channels[i].dataRange.min ) && ( loRa.currentDataRate <= 
      +                          Channels[i].dataRange.max ) )
 28623  00647E  0100               	movlb	0	; () banked
 28624  006480  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28625  006482  0D0E               	mullw	14
 28626  006484  0E04               	movlw	4
 28627  006486  26F3               	addwf	prodl,f,c
 28628  006488  0E00               	movlw	0
 28629  00648A  22F4               	addwfc	prodh,f,c
 28630  00648C  0E00               	movlw	low _Channels
 28631  00648E  24F3               	addwf	prodl,w,c
 28632  006490  6ED9               	movwf	fsr2l,c
 28633  006492  0E04               	movlw	high _Channels
 28634  006494  20F4               	addwfc	prodh,w,c
 28635  006496  6EDA               	movwf	fsr2h,c
 28636  006498  04DE               	decf	postinc2,w,c
 28637  00649A  A4D8               	btfss	status,2,c
 28638  00649C  D05A               	goto	l1134
 28639                           
 28640                           ; BSR set to: 0
 28641  00649E  0100               	movlb	0	; () banked
 28642  0064A0  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28643  0064A2  0D0E               	mullw	14
 28644  0064A4  0E08               	movlw	8
 28645  0064A6  26F3               	addwf	prodl,f,c
 28646  0064A8  0E00               	movlw	0
 28647  0064AA  22F4               	addwfc	prodh,f,c
 28648  0064AC  0E00               	movlw	low _Channels
 28649  0064AE  24F3               	addwf	prodl,w,c
 28650  0064B0  6ED9               	movwf	fsr2l,c
 28651  0064B2  0E04               	movlw	high _Channels
 28652  0064B4  20F4               	addwfc	prodh,w,c
 28653  0064B6  6EDA               	movwf	fsr2h,c
 28654  0064B8  50DE               	movf	postinc2,w,c
 28655  0064BA  10DE               	iorwf	postinc2,w,c
 28656  0064BC  10DE               	iorwf	postinc2,w,c
 28657  0064BE  10DE               	iorwf	postinc2,w,c
 28658  0064C0  A4D8               	btfss	status,2,c
 28659  0064C2  D047               	goto	l1134
 28660                           
 28661                           ; BSR set to: 0
 28662  0064C4  0100               	movlb	0	; () banked
 28663  0064C6  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28664  0064C8  0D0E               	mullw	14
 28665  0064CA  0E05               	movlw	5
 28666  0064CC  26F3               	addwf	prodl,f,c
 28667  0064CE  0E00               	movlw	0
 28668  0064D0  22F4               	addwfc	prodh,f,c
 28669  0064D2  0E00               	movlw	low _Channels
 28670  0064D4  24F3               	addwf	prodl,w,c
 28671  0064D6  6ED9               	movwf	fsr2l,c
 28672  0064D8  0E04               	movlw	high _Channels
 28673  0064DA  20F4               	addwfc	prodh,w,c
 28674  0064DC  6EDA               	movwf	fsr2h,c
 28675  0064DE  0104               	movlb	4	; () banked
 28676  0064E0  50DF               	movf	223,w,c
 28677  0064E2  0B0F               	andlw	15
 28678  0064E4  0100               	movlb	0	; () banked
 28679  0064E6  6FB6               	movwf	??_SearchAvailableChannel& (0+255),b
 28680  0064E8  0100               	movlb	0	; () banked
 28681  0064EA  51B6               	movf	??_SearchAvailableChannel& (0+255),w,b
 28682  0064EC  0102               	movlb	2	; () banked
 28683  0064EE  5DDF               	subwf	(_loRa+223)& (0+255),w,b
 28684  0064F0  A0D8               	btfss	status,0,c
 28685  0064F2  D02F               	goto	l1134
 28686                           
 28687                           ; BSR set to: 2
 28688  0064F4  0100               	movlb	0	; () banked
 28689  0064F6  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28690  0064F8  0D0E               	mullw	14
 28691  0064FA  0E05               	movlw	5
 28692  0064FC  26F3               	addwf	prodl,f,c
 28693  0064FE  0E00               	movlw	0
 28694  006500  22F4               	addwfc	prodh,f,c
 28695  006502  0E00               	movlw	low _Channels
 28696  006504  24F3               	addwf	prodl,w,c
 28697  006506  6ED9               	movwf	fsr2l,c
 28698  006508  0E04               	movlw	high _Channels
 28699  00650A  20F4               	addwfc	prodh,w,c
 28700  00650C  6EDA               	movwf	fsr2h,c
 28701  00650E  0104               	movlb	4	; () banked
 28702  006510  38DF               	swapf	223,w,c
 28703  006512  0B0F               	andlw	15
 28704  006514  0100               	movlb	0	; () banked
 28705  006516  6FB6               	movwf	??_SearchAvailableChannel& (0+255),b
 28706  006518  0102               	movlb	2	; () banked
 28707  00651A  51DF               	movf	(_loRa+223)& (0+255),w,b
 28708  00651C  0100               	movlb	0	; () banked
 28709  00651E  5DB6               	subwf	??_SearchAvailableChannel& (0+255),w,b
 28710  006520  A0D8               	btfss	status,0,c
 28711  006522  D017               	goto	l1134
 28712                           
 28713                           ; BSR set to: 0
 28714                           ;lorawan_eu.c: 791: {
 28715                           ;lorawan_eu.c: 792: if (transmissionType == 0)
 28716  006524  0100               	movlb	0	; () banked
 28717  006526  51B3               	movf	SearchAvailableChannel@transmissionType& (0+255),w,b
 28718  006528  0100               	movlb	0	; () banked
 28719  00652A  A4D8               	btfss	status,2,c
 28720  00652C  D010               	goto	l14377
 28721                           
 28722                           ; BSR set to: 0
 28723                           ;lorawan_eu.c: 793: {
 28724                           ;lorawan_eu.c: 794: if ( Channels[i].joinRequestChannel == 1 )
 28725  00652E  0100               	movlb	0	; () banked
 28726  006530  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28727  006532  0D0E               	mullw	14
 28728  006534  0E0C               	movlw	12
 28729  006536  26F3               	addwf	prodl,f,c
 28730  006538  0E00               	movlw	0
 28731  00653A  22F4               	addwfc	prodh,f,c
 28732  00653C  0E00               	movlw	low _Channels
 28733  00653E  24F3               	addwf	prodl,w,c
 28734  006540  6ED9               	movwf	fsr2l,c
 28735  006542  0E04               	movlw	high _Channels
 28736  006544  20F4               	addwfc	prodh,w,c
 28737  006546  6EDA               	movwf	fsr2h,c
 28738  006548  04DE               	decf	postinc2,w,c
 28739  00654A  A4D8               	btfss	status,2,c
 28740  00654C  D002               	goto	l1134
 28741  00654E                     l14377:
 28742                           
 28743                           ; BSR set to: 0
 28744                           ;lorawan_eu.c: 799: else
 28745                           ;lorawan_eu.c: 800: {
 28746                           ;lorawan_eu.c: 801: randomNumber --;
 28747  00654E  0100               	movlb	0	; () banked
 28748  006550  07BD               	decf	SearchAvailableChannel@randomNumber& (0+255),f,b
 28749  006552                     l1134:
 28750  006552  0100               	movlb	0	; () banked
 28751  006554  2BBE               	incf	SearchAvailableChannel@i& (0+255),f,b
 28752  006556                     l14379:
 28753                           
 28754                           ; BSR set to: 0
 28755  006556  0100               	movlb	0	; () banked
 28756  006558  51BC               	movf	SearchAvailableChannel@maxChannels& (0+255),w,b
 28757  00655A  0100               	movlb	0	; () banked
 28758  00655C  5DBE               	subwf	SearchAvailableChannel@i& (0+255),w,b
 28759  00655E  B0D8               	btfsc	status,0,c
 28760  006560  D005               	goto	l14383
 28761                           
 28762                           ; BSR set to: 0
 28763  006562  0100               	movlb	0	; () banked
 28764  006564  51BD               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28765  006566  0100               	movlb	0	; () banked
 28766  006568  A4D8               	btfss	status,2,c
 28767  00656A  D789               	goto	l14363
 28768  00656C                     l14383:
 28769                           
 28770                           ; BSR set to: 0
 28771                           ;lorawan_eu.c: 802: }
 28772                           ;lorawan_eu.c: 803: }
 28773                           ;lorawan_eu.c: 804: }
 28774                           ;lorawan_eu.c: 806: if ( randomNumber == randomNumberCopy )
 28775  00656C  0100               	movlb	0	; () banked
 28776  00656E  51BA               	movf	SearchAvailableChannel@randomNumberCopy& (0+255),w,b
 28777  006570  0100               	movlb	0	; () banked
 28778  006572  19BD               	xorwf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28779  006574  A4D8               	btfss	status,2,c
 28780  006576  D004               	goto	l14387
 28781                           
 28782                           ; BSR set to: 0
 28783                           ;lorawan_eu.c: 807: {
 28784                           ;lorawan_eu.c: 808: result = NO_CHANNELS_FOUND;
 28785  006578  0E09               	movlw	9
 28786  00657A  0100               	movlb	0	; () banked
 28787  00657C  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28788                           
 28789                           ;lorawan_eu.c: 809: break;
 28790  00657E  D005               	goto	l14389
 28791  006580                     l14387:
 28792                           
 28793                           ; BSR set to: 0
 28794  006580  0100               	movlb	0	; () banked
 28795  006582  51BD               	movf	SearchAvailableChannel@randomNumber& (0+255),w,b
 28796  006584  0100               	movlb	0	; () banked
 28797  006586  A4D8               	btfss	status,2,c
 28798  006588  D776               	goto	l14361
 28799  00658A                     l14389:
 28800                           
 28801                           ; BSR set to: 0
 28802                           ;lorawan_eu.c: 810: }
 28803                           ;lorawan_eu.c: 811: }
 28804                           ;lorawan_eu.c: 813: if ( i != 0)
 28805  00658A  0100               	movlb	0	; () banked
 28806  00658C  51BE               	movf	SearchAvailableChannel@i& (0+255),w,b
 28807  00658E  0100               	movlb	0	; () banked
 28808  006590  B4D8               	btfsc	status,2,c
 28809  006592  D008               	goto	l14393
 28810                           
 28811                           ; BSR set to: 0
 28812                           ;lorawan_eu.c: 814: {
 28813                           ;lorawan_eu.c: 815: *channelIndex = i - 1;
 28814  006594  0100               	movlb	0	; () banked
 28815  006596  05BE               	decf	SearchAvailableChannel@i& (0+255),w,b
 28816  006598  C0B4  FFD9         	movff	SearchAvailableChannel@channelIndex,fsr2l
 28817  00659C  C0B5  FFDA         	movff	SearchAvailableChannel@channelIndex+1,fsr2h
 28818  0065A0  6EDF               	movwf	indf2,c
 28819                           
 28820                           ;lorawan_eu.c: 816: }
 28821  0065A2  D003               	goto	l1144
 28822  0065A4                     l14393:
 28823                           
 28824                           ; BSR set to: 0
 28825                           ;lorawan_eu.c: 817: else
 28826                           ;lorawan_eu.c: 818: {
 28827                           ;lorawan_eu.c: 819: result = NO_CHANNELS_FOUND;
 28828  0065A4  0E09               	movlw	9
 28829  0065A6  0100               	movlb	0	; () banked
 28830  0065A8  6FBB               	movwf	SearchAvailableChannel@result& (0+255),b
 28831  0065AA                     l1144:
 28832                           
 28833                           ; BSR set to: 0
 28834                           ;lorawan_eu.c: 820: }
 28835                           ;lorawan_eu.c: 821: return result;
 28836  0065AA  0100               	movlb	0	; () banked
 28837  0065AC  51BB               	movf	SearchAvailableChannel@result& (0+255),w,b
 28838  0065AE  0012               	return	
 28839  0065B0                     __end_of_SearchAvailableChannel:
 28840                           	opt stack 0
 28841                           tosu	equ	0xFFF
 28842                           tosh	equ	0xFFE
 28843                           tosl	equ	0xFFD
 28844                           pclath	equ	0xFFA
 28845                           tblptru	equ	0xFF8
 28846                           tblptrh	equ	0xFF7
 28847                           tblptrl	equ	0xFF6
 28848                           tablat	equ	0xFF5
 28849                           prodh	equ	0xFF4
 28850                           prodl	equ	0xFF3
 28851                           intcon	equ	0xFF2
 28852                           intcon2	equ	0xFF1
 28853                           intcon3	equ	0xFF0
 28854                           indf0	equ	0xFEF
 28855                           postinc0	equ	0xFEE
 28856                           fsr0h	equ	0xFEA
 28857                           fsr0l	equ	0xFE9
 28858                           wreg	equ	0xFE8
 28859                           postinc1	equ	0xFE6
 28860                           postdec1	equ	0xFE5
 28861                           plusw1	equ	0xFE3
 28862                           fsr1h	equ	0xFE2
 28863                           fsr1l	equ	0xFE1
 28864                           indf2	equ	0xFDF
 28865                           postinc2	equ	0xFDE
 28866                           postdec2	equ	0xFDD
 28867                           plusw2	equ	0xFDB
 28868                           fsr2h	equ	0xFDA
 28869                           fsr2l	equ	0xFD9
 28870                           status	equ	0xFD8
 28871                           
 28872 ;; *************** function _ConfigureRadioTx *****************
 28873 ;; Defined at:
 28874 ;;		line 1255 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 28875 ;; Parameters:    Size  Location     Type
 28876 ;;  dataRate        1    wreg     unsigned char 
 28877 ;;  freq            4   22[BANK0 ] unsigned long 
 28878 ;; Auto vars:     Size  Location     Type
 28879 ;;  dataRate        1   26[BANK0 ] unsigned char 
 28880 ;;  txPower         1   27[BANK0 ] char 
 28881 ;; Return value:  Size  Location     Type
 28882 ;;                  1    wreg      void 
 28883 ;; Registers used:
 28884 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28885 ;; Tracked objects:
 28886 ;;		On entry : 0/0
 28887 ;;		On exit  : 0/0
 28888 ;;		Unchanged: 0/0
 28889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 28890 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28891 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28893 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 28894 ;;Total ram usage:        6 bytes
 28895 ;; Hardware stack levels used:    1
 28896 ;; Hardware stack levels required when called:   10
 28897 ;; This function calls:
 28898 ;;		_ConfigureRadio
 28899 ;;		_RADIO_SetCRC
 28900 ;;		_RADIO_SetIQInverted
 28901 ;;		_RADIO_SetOutputPower
 28902 ;; This function is called by:
 28903 ;;		_SelectChannelForTransmission
 28904 ;; This function uses a non-reentrant model
 28905 ;;
 28906                           
 28907                           	psect	text130
 28908  00948C                     __ptext130:
 28909                           	opt stack 0
 28910  00948C                     _ConfigureRadioTx:
 28911                           	opt stack 17
 28912                           
 28913                           ; BSR set to: 0
 28914                           ;incstack = 0
 28915                           ;ConfigureRadioTx@dataRate stored from wreg
 28916  00948C  0100               	movlb	0	; () banked
 28917  00948E  6F7A               	movwf	ConfigureRadioTx@dataRate& (0+255),b
 28918                           
 28919                           ;lorawan_eu.c: 1257: int8_t txPower;
 28920                           ;lorawan_eu.c: 1259: ConfigureRadio(dataRate, freq);
 28921  009490  C076  F071         	movff	ConfigureRadioTx@freq,ConfigureRadio@freq
 28922  009494  C077  F072         	movff	ConfigureRadioTx@freq+1,ConfigureRadio@freq+1
 28923  009498  C078  F073         	movff	ConfigureRadioTx@freq+2,ConfigureRadio@freq+2
 28924  00949C  C079  F074         	movff	ConfigureRadioTx@freq+3,ConfigureRadio@freq+3
 28925  0094A0  0100               	movlb	0	; () banked
 28926  0094A2  517A               	movf	ConfigureRadioTx@dataRate& (0+255),w,b
 28927  0094A4  EC0B  F041         	call	_ConfigureRadio
 28928                           
 28929                           ;lorawan_eu.c: 1261: if (ISM_EU868 == loRa.ismBand)
 28930  0094A8  0102               	movlb	2	; () banked
 28931  0094AA  51A4               	movf	(_loRa+164)& (0+255),w,b
 28932                           
 28933                           ; BSR set to: 2
 28934                           ;lorawan_eu.c: 1265: else
 28935                           ;lorawan_eu.c: 1266: {
 28936                           ;lorawan_eu.c: 1267: txPower = txPower868[loRa.txPower];
 28937                           
 28938                           ; BSR set to: 2
 28939                           
 28940                           ;lorawan_eu.c: 1264: }
 28941                           
 28942                           ; BSR set to: 2
 28943                           ;lorawan_eu.c: 1262: {
 28944                           ;lorawan_eu.c: 1263: txPower = txPower868[loRa.txPower];
 28945  0094AC  0102               	movlb	2	; () banked
 28946  0094AE  51E1               	movf	(_loRa+225)& (0+255),w,b
 28947  0094B0  0D01               	mullw	1
 28948  0094B2  0EA2               	movlw	low _txPower868
 28949  0094B4  24F3               	addwf	prodl,w,c
 28950  0094B6  6EF6               	movwf	tblptrl,c
 28951  0094B8  0EFF               	movlw	high _txPower868
 28952  0094BA  20F4               	addwfc	prodh,w,c
 28953  0094BC  6EF7               	movwf	tblptrh,c
 28954  0094BE                     	if	1	;There are 3 active tblptr bytes
 28955  0094BE  6AF8               	clrf	tblptru,c
 28956  0094C0  0E00               	movlw	low (__mediumconst shr (0+16))
 28957  0094C2  22F8               	addwfc	tblptru,f,c
 28958  0094C4                     	endif
 28959  0094C4  0008               	tblrd		*
 28960  0094C6  CFF5 F07B          	movff	tablat,ConfigureRadioTx@txPower
 28961                           
 28962                           ; BSR set to: 2
 28963                           ;lorawan_eu.c: 1268: }
 28964                           ;lorawan_eu.c: 1270: RADIO_SetOutputPower (txPower);
 28965                           
 28966                           ; BSR set to: 2
 28967  0094CA  0100               	movlb	0	; () banked
 28968  0094CC  517B               	movf	ConfigureRadioTx@txPower& (0+255),w,b
 28969  0094CE  ECE6  F051         	call	_RADIO_SetOutputPower
 28970                           
 28971                           ;lorawan_eu.c: 1272: RADIO_SetCRC(1);
 28972  0094D2  0E01               	movlw	1
 28973  0094D4  ECF0  F051         	call	_RADIO_SetCRC
 28974                           
 28975                           ;lorawan_eu.c: 1273: RADIO_SetIQInverted(0);
 28976  0094D8  0E00               	movlw	0
 28977  0094DA  ECEB  F051         	call	_RADIO_SetIQInverted
 28978  0094DE  0012               	return		;funcret
 28979  0094E0                     __end_of_ConfigureRadioTx:
 28980                           	opt stack 0
 28981                           tosu	equ	0xFFF
 28982                           tosh	equ	0xFFE
 28983                           tosl	equ	0xFFD
 28984                           pclath	equ	0xFFA
 28985                           tblptru	equ	0xFF8
 28986                           tblptrh	equ	0xFF7
 28987                           tblptrl	equ	0xFF6
 28988                           tablat	equ	0xFF5
 28989                           prodh	equ	0xFF4
 28990                           prodl	equ	0xFF3
 28991                           intcon	equ	0xFF2
 28992                           intcon2	equ	0xFF1
 28993                           intcon3	equ	0xFF0
 28994                           indf0	equ	0xFEF
 28995                           postinc0	equ	0xFEE
 28996                           fsr0h	equ	0xFEA
 28997                           fsr0l	equ	0xFE9
 28998                           wreg	equ	0xFE8
 28999                           postinc1	equ	0xFE6
 29000                           postdec1	equ	0xFE5
 29001                           plusw1	equ	0xFE3
 29002                           fsr1h	equ	0xFE2
 29003                           fsr1l	equ	0xFE1
 29004                           indf2	equ	0xFDF
 29005                           postinc2	equ	0xFDE
 29006                           postdec2	equ	0xFDD
 29007                           plusw2	equ	0xFDB
 29008                           fsr2h	equ	0xFDA
 29009                           fsr2l	equ	0xFD9
 29010                           status	equ	0xFD8
 29011                           
 29012 ;; *************** function _RADIO_SetOutputPower *****************
 29013 ;; Defined at:
 29014 ;;		line 1464 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29015 ;; Parameters:    Size  Location     Type
 29016 ;;  power           1    wreg     char 
 29017 ;; Auto vars:     Size  Location     Type
 29018 ;;  power           1    4[BANK0 ] char 
 29019 ;; Return value:  Size  Location     Type
 29020 ;;                  1    wreg      void 
 29021 ;; Registers used:
 29022 ;;		wreg
 29023 ;; Tracked objects:
 29024 ;;		On entry : 0/0
 29025 ;;		On exit  : 0/0
 29026 ;;		Unchanged: 0/0
 29027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29028 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29029 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29030 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29031 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29032 ;;Total ram usage:        1 bytes
 29033 ;; Hardware stack levels used:    1
 29034 ;; Hardware stack levels required when called:    7
 29035 ;; This function calls:
 29036 ;;		Nothing
 29037 ;; This function is called by:
 29038 ;;		_ConfigureRadioTx
 29039 ;; This function uses a non-reentrant model
 29040 ;;
 29041                           
 29042                           	psect	text131
 29043  00A3CC                     __ptext131:
 29044                           	opt stack 0
 29045  00A3CC                     _RADIO_SetOutputPower:
 29046                           	opt stack 19
 29047                           
 29048                           ;incstack = 0
 29049                           ;RADIO_SetOutputPower@power stored from wreg
 29050  00A3CC  0100               	movlb	0	; () banked
 29051  00A3CE  6F64               	movwf	RADIO_SetOutputPower@power& (0+255),b
 29052                           
 29053                           ;radio_driver_SX1276.c: 1466: RadioConfiguration.outputPower = power;
 29054  00A3D0  C064  F1A7         	movff	RADIO_SetOutputPower@power,_RadioConfiguration+27
 29055  00A3D4  0012               	return		;funcret
 29056  00A3D6                     __end_of_RADIO_SetOutputPower:
 29057                           	opt stack 0
 29058                           tosu	equ	0xFFF
 29059                           tosh	equ	0xFFE
 29060                           tosl	equ	0xFFD
 29061                           pclath	equ	0xFFA
 29062                           tblptru	equ	0xFF8
 29063                           tblptrh	equ	0xFF7
 29064                           tblptrl	equ	0xFF6
 29065                           tablat	equ	0xFF5
 29066                           prodh	equ	0xFF4
 29067                           prodl	equ	0xFF3
 29068                           intcon	equ	0xFF2
 29069                           intcon2	equ	0xFF1
 29070                           intcon3	equ	0xFF0
 29071                           indf0	equ	0xFEF
 29072                           postinc0	equ	0xFEE
 29073                           fsr0h	equ	0xFEA
 29074                           fsr0l	equ	0xFE9
 29075                           wreg	equ	0xFE8
 29076                           postinc1	equ	0xFE6
 29077                           postdec1	equ	0xFE5
 29078                           plusw1	equ	0xFE3
 29079                           fsr1h	equ	0xFE2
 29080                           fsr1l	equ	0xFE1
 29081                           indf2	equ	0xFDF
 29082                           postinc2	equ	0xFDE
 29083                           postdec2	equ	0xFDD
 29084                           plusw2	equ	0xFDB
 29085                           fsr2h	equ	0xFDA
 29086                           fsr2l	equ	0xFD9
 29087                           status	equ	0xFD8
 29088                           
 29089 ;; *************** function _RADIO_SetIQInverted *****************
 29090 ;; Defined at:
 29091 ;;		line 1484 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29092 ;; Parameters:    Size  Location     Type
 29093 ;;  iqInverted      1    wreg     unsigned char 
 29094 ;; Auto vars:     Size  Location     Type
 29095 ;;  iqInverted      1    4[BANK0 ] unsigned char 
 29096 ;; Return value:  Size  Location     Type
 29097 ;;                  1    wreg      void 
 29098 ;; Registers used:
 29099 ;;		wreg
 29100 ;; Tracked objects:
 29101 ;;		On entry : 0/0
 29102 ;;		On exit  : 0/0
 29103 ;;		Unchanged: 0/0
 29104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29108 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29109 ;;Total ram usage:        1 bytes
 29110 ;; Hardware stack levels used:    1
 29111 ;; Hardware stack levels required when called:    7
 29112 ;; This function calls:
 29113 ;;		Nothing
 29114 ;; This function is called by:
 29115 ;;		_ConfigureRadioTx
 29116 ;;		_ConfigureRadioRx
 29117 ;; This function uses a non-reentrant model
 29118 ;;
 29119                           
 29120                           	psect	text132
 29121  00A3D6                     __ptext132:
 29122                           	opt stack 0
 29123  00A3D6                     _RADIO_SetIQInverted:
 29124                           	opt stack 19
 29125                           
 29126                           ;incstack = 0
 29127                           ;RADIO_SetIQInverted@iqInverted stored from wreg
 29128  00A3D6  0100               	movlb	0	; () banked
 29129  00A3D8  6F64               	movwf	RADIO_SetIQInverted@iqInverted& (0+255),b
 29130                           
 29131                           ;radio_driver_SX1276.c: 1486: RadioConfiguration.iqInverted = iqInverted;
 29132  00A3DA  C064  F1AC         	movff	RADIO_SetIQInverted@iqInverted,_RadioConfiguration+32
 29133  00A3DE  0012               	return		;funcret
 29134  00A3E0                     __end_of_RADIO_SetIQInverted:
 29135                           	opt stack 0
 29136                           tosu	equ	0xFFF
 29137                           tosh	equ	0xFFE
 29138                           tosl	equ	0xFFD
 29139                           pclath	equ	0xFFA
 29140                           tblptru	equ	0xFF8
 29141                           tblptrh	equ	0xFF7
 29142                           tblptrl	equ	0xFF6
 29143                           tablat	equ	0xFF5
 29144                           prodh	equ	0xFF4
 29145                           prodl	equ	0xFF3
 29146                           intcon	equ	0xFF2
 29147                           intcon2	equ	0xFF1
 29148                           intcon3	equ	0xFF0
 29149                           indf0	equ	0xFEF
 29150                           postinc0	equ	0xFEE
 29151                           fsr0h	equ	0xFEA
 29152                           fsr0l	equ	0xFE9
 29153                           wreg	equ	0xFE8
 29154                           postinc1	equ	0xFE6
 29155                           postdec1	equ	0xFE5
 29156                           plusw1	equ	0xFE3
 29157                           fsr1h	equ	0xFE2
 29158                           fsr1l	equ	0xFE1
 29159                           indf2	equ	0xFDF
 29160                           postinc2	equ	0xFDE
 29161                           postdec2	equ	0xFDD
 29162                           plusw2	equ	0xFDB
 29163                           fsr2h	equ	0xFDA
 29164                           fsr2l	equ	0xFD9
 29165                           status	equ	0xFD8
 29166                           
 29167 ;; *************** function _RADIO_SetCRC *****************
 29168 ;; Defined at:
 29169 ;;		line 1474 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29170 ;; Parameters:    Size  Location     Type
 29171 ;;  crc             1    wreg     unsigned char 
 29172 ;; Auto vars:     Size  Location     Type
 29173 ;;  crc             1    4[BANK0 ] unsigned char 
 29174 ;; Return value:  Size  Location     Type
 29175 ;;                  1    wreg      void 
 29176 ;; Registers used:
 29177 ;;		wreg
 29178 ;; Tracked objects:
 29179 ;;		On entry : 0/0
 29180 ;;		On exit  : 0/0
 29181 ;;		Unchanged: 0/0
 29182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29187 ;;Total ram usage:        1 bytes
 29188 ;; Hardware stack levels used:    1
 29189 ;; Hardware stack levels required when called:    7
 29190 ;; This function calls:
 29191 ;;		Nothing
 29192 ;; This function is called by:
 29193 ;;		_ConfigureRadioTx
 29194 ;;		_ConfigureRadioRx
 29195 ;; This function uses a non-reentrant model
 29196 ;;
 29197                           
 29198                           	psect	text133
 29199  00A3E0                     __ptext133:
 29200                           	opt stack 0
 29201  00A3E0                     _RADIO_SetCRC:
 29202                           	opt stack 19
 29203                           
 29204                           ;incstack = 0
 29205                           ;RADIO_SetCRC@crc stored from wreg
 29206  00A3E0  0100               	movlb	0	; () banked
 29207  00A3E2  6F64               	movwf	RADIO_SetCRC@crc& (0+255),b
 29208                           
 29209                           ;radio_driver_SX1276.c: 1476: RadioConfiguration.crcOn = crc;
 29210  00A3E4  C064  F1A8         	movff	RADIO_SetCRC@crc,_RadioConfiguration+28
 29211  00A3E8  0012               	return		;funcret
 29212  00A3EA                     __end_of_RADIO_SetCRC:
 29213                           	opt stack 0
 29214                           tosu	equ	0xFFF
 29215                           tosh	equ	0xFFE
 29216                           tosl	equ	0xFFD
 29217                           pclath	equ	0xFFA
 29218                           tblptru	equ	0xFF8
 29219                           tblptrh	equ	0xFF7
 29220                           tblptrl	equ	0xFF6
 29221                           tablat	equ	0xFF5
 29222                           prodh	equ	0xFF4
 29223                           prodl	equ	0xFF3
 29224                           intcon	equ	0xFF2
 29225                           intcon2	equ	0xFF1
 29226                           intcon3	equ	0xFF0
 29227                           indf0	equ	0xFEF
 29228                           postinc0	equ	0xFEE
 29229                           fsr0h	equ	0xFEA
 29230                           fsr0l	equ	0xFE9
 29231                           wreg	equ	0xFE8
 29232                           postinc1	equ	0xFE6
 29233                           postdec1	equ	0xFE5
 29234                           plusw1	equ	0xFE3
 29235                           fsr1h	equ	0xFE2
 29236                           fsr1l	equ	0xFE1
 29237                           indf2	equ	0xFDF
 29238                           postinc2	equ	0xFDE
 29239                           postdec2	equ	0xFDD
 29240                           plusw2	equ	0xFDB
 29241                           fsr2h	equ	0xFDA
 29242                           fsr2l	equ	0xFD9
 29243                           status	equ	0xFD8
 29244                           
 29245 ;; *************** function _ConfigureRadio *****************
 29246 ;; Defined at:
 29247 ;;		line 863 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 29248 ;; Parameters:    Size  Location     Type
 29249 ;;  dataRate        1    wreg     unsigned char 
 29250 ;;  freq            4   17[BANK0 ] unsigned long 
 29251 ;; Auto vars:     Size  Location     Type
 29252 ;;  dataRate        1   21[BANK0 ] unsigned char 
 29253 ;; Return value:  Size  Location     Type
 29254 ;;                  1    wreg      void 
 29255 ;; Registers used:
 29256 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29257 ;; Tracked objects:
 29258 ;;		On entry : 0/0
 29259 ;;		On exit  : 0/0
 29260 ;;		Unchanged: 0/0
 29261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29262 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29263 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29265 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29266 ;;Total ram usage:        5 bytes
 29267 ;; Hardware stack levels used:    1
 29268 ;; Hardware stack levels required when called:    9
 29269 ;; This function calls:
 29270 ;;		_RADIO_SetBandwidth
 29271 ;;		_RADIO_SetChannelFrequency
 29272 ;;		_RADIO_SetFSKSyncWord
 29273 ;;		_RADIO_SetFrequencyHopPeriod
 29274 ;;		_RADIO_SetLoRaSyncWord
 29275 ;;		_RADIO_SetModulation
 29276 ;;		_RADIO_SetSpreadingFactor
 29277 ;; This function is called by:
 29278 ;;		_ConfigureRadioTx
 29279 ;;		_ConfigureRadioRx
 29280 ;; This function uses a non-reentrant model
 29281 ;;
 29282                           
 29283                           	psect	text134
 29284  008216                     __ptext134:
 29285                           	opt stack 0
 29286  008216                     _ConfigureRadio:
 29287                           	opt stack 17
 29288                           
 29289                           ;incstack = 0
 29290                           ;ConfigureRadio@dataRate stored from wreg
 29291  008216  0100               	movlb	0	; () banked
 29292  008218  6F75               	movwf	ConfigureRadio@dataRate& (0+255),b
 29293                           
 29294                           ;lorawan_eu.c: 865: RADIO_SetModulation (modulation[dataRate]);
 29295  00821A  0100               	movlb	0	; () banked
 29296  00821C  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29297  00821E  0D01               	mullw	1
 29298  008220  0E6F               	movlw	low _modulation
 29299  008222  24F3               	addwf	prodl,w,c
 29300  008224  6EF6               	movwf	tblptrl,c
 29301  008226  0EFF               	movlw	high _modulation
 29302  008228  20F4               	addwfc	prodh,w,c
 29303  00822A  6EF7               	movwf	tblptrh,c
 29304  00822C                     	if	1	;There are 3 active tblptr bytes
 29305  00822C  6AF8               	clrf	tblptru,c
 29306  00822E  0E00               	movlw	low (__mediumconst shr (0+16))
 29307  008230  22F8               	addwfc	tblptru,f,c
 29308  008232                     	endif
 29309  008232  0008               	tblrd		*
 29310  008234  50F5               	movf	tablat,w,c
 29311  008236  ECFA  F051         	call	_RADIO_SetModulation
 29312                           
 29313                           ;lorawan_eu.c: 866: RADIO_SetChannelFrequency (freq);
 29314  00823A  C071  F064         	movff	ConfigureRadio@freq,RADIO_SetChannelFrequency@frequency
 29315  00823E  C072  F065         	movff	ConfigureRadio@freq+1,RADIO_SetChannelFrequency@frequency+1
 29316  008242  C073  F066         	movff	ConfigureRadio@freq+2,RADIO_SetChannelFrequency@frequency+2
 29317  008246  C074  F067         	movff	ConfigureRadio@freq+3,RADIO_SetChannelFrequency@frequency+3
 29318  00824A  EC54  F040         	call	_RADIO_SetChannelFrequency	;wreg free
 29319                           
 29320                           ;lorawan_eu.c: 867: RADIO_SetFrequencyHopPeriod (0);
 29321  00824E  0E00               	movlw	0
 29322  008250  0100               	movlb	0	; () banked
 29323  008252  6F65               	movwf	(RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1)& (0+255),b
 29324  008254  0E00               	movlw	0
 29325  008256  6F64               	movwf	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod& (0+255),b
 29326  008258  ECFF  F051         	call	_RADIO_SetFrequencyHopPeriod	;wreg free
 29327                           
 29328                           ;lorawan_eu.c: 869: if (dataRate <= 6)
 29329  00825C  0E07               	movlw	7
 29330  00825E  0100               	movlb	0	; () banked
 29331  008260  6175               	cpfslt	ConfigureRadio@dataRate& (0+255),b
 29332  008262  D025               	goto	l13963
 29333                           
 29334                           ; BSR set to: 0
 29335                           ;lorawan_eu.c: 870: {
 29336                           ;lorawan_eu.c: 872: RADIO_SetSpreadingFactor (spreadingFactor[dataRate]);
 29337  008264  0100               	movlb	0	; () banked
 29338  008266  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29339  008268  0D01               	mullw	1
 29340  00826A  0E95               	movlw	low _spreadingFactor
 29341  00826C  24F3               	addwf	prodl,w,c
 29342  00826E  6EF6               	movwf	tblptrl,c
 29343  008270  0EFF               	movlw	high _spreadingFactor
 29344  008272  20F4               	addwfc	prodh,w,c
 29345  008274  6EF7               	movwf	tblptrh,c
 29346  008276                     	if	1	;There are 3 active tblptr bytes
 29347  008276  6AF8               	clrf	tblptru,c
 29348  008278  0E00               	movlw	low (__mediumconst shr (0+16))
 29349  00827A  22F8               	addwfc	tblptru,f,c
 29350  00827C                     	endif
 29351  00827C  0008               	tblrd		*
 29352  00827E  50F5               	movf	tablat,w,c
 29353  008280  ECF5  F051         	call	_RADIO_SetSpreadingFactor
 29354                           
 29355                           ;lorawan_eu.c: 873: RADIO_SetBandwidth (bandwidth[dataRate]);
 29356  008284  0100               	movlb	0	; () banked
 29357  008286  5175               	movf	ConfigureRadio@dataRate& (0+255),w,b
 29358  008288  0D01               	mullw	1
 29359  00828A  0E87               	movlw	low _bandwidth
 29360  00828C  24F3               	addwf	prodl,w,c
 29361  00828E  6EF6               	movwf	tblptrl,c
 29362  008290  0EFF               	movlw	high _bandwidth
 29363  008292  20F4               	addwfc	prodh,w,c
 29364  008294  6EF7               	movwf	tblptrh,c
 29365  008296                     	if	1	;There are 3 active tblptr bytes
 29366  008296  6AF8               	clrf	tblptru,c
 29367  008298  0E00               	movlw	low (__mediumconst shr (0+16))
 29368  00829A  22F8               	addwfc	tblptru,f,c
 29369  00829C                     	endif
 29370  00829C  0008               	tblrd		*
 29371  00829E  50F5               	movf	tablat,w,c
 29372  0082A0  EC04  F052         	call	_RADIO_SetBandwidth
 29373                           
 29374                           ;lorawan_eu.c: 874: RADIO_SetLoRaSyncWord(loRa.syncWord);
 29375  0082A4  0102               	movlb	2	; () banked
 29376  0082A6  51F4               	movf	(_loRa+244)& (0+255),w,b
 29377  0082A8  EC09  F052         	call	_RADIO_SetLoRaSyncWord
 29378                           
 29379                           ;lorawan_eu.c: 875: }
 29380  0082AC  0012               	return	
 29381  0082AE                     l13963:
 29382                           
 29383                           ;lorawan_eu.c: 876: else
 29384                           ;lorawan_eu.c: 877: {
 29385                           ;lorawan_eu.c: 879: RADIO_SetFSKSyncWord(sizeof(FskSyncWordBuff) / sizeof(FskSyncWordBuf
      +                          f[0]), (uint8_t*)FskSyncWordBuff);
 29386  0082AE  0EFC               	movlw	low _FskSyncWordBuff
 29387  0082B0  0100               	movlb	0	; () banked
 29388  0082B2  6F6E               	movwf	RADIO_SetFSKSyncWord@syncWord& (0+255),b
 29389  0082B4  0EFF               	movlw	high _FskSyncWordBuff
 29390  0082B6  0100               	movlb	0	; () banked
 29391  0082B8  6F6F               	movwf	(RADIO_SetFSKSyncWord@syncWord+1)& (0+255),b
 29392  0082BA  0E03               	movlw	3
 29393  0082BC  EC85  F04D         	call	_RADIO_SetFSKSyncWord
 29394  0082C0  0012               	return	
 29395  0082C2                     __end_of_ConfigureRadio:
 29396                           	opt stack 0
 29397                           tosu	equ	0xFFF
 29398                           tosh	equ	0xFFE
 29399                           tosl	equ	0xFFD
 29400                           pclath	equ	0xFFA
 29401                           tblptru	equ	0xFF8
 29402                           tblptrh	equ	0xFF7
 29403                           tblptrl	equ	0xFF6
 29404                           tablat	equ	0xFF5
 29405                           prodh	equ	0xFF4
 29406                           prodl	equ	0xFF3
 29407                           intcon	equ	0xFF2
 29408                           intcon2	equ	0xFF1
 29409                           intcon3	equ	0xFF0
 29410                           indf0	equ	0xFEF
 29411                           postinc0	equ	0xFEE
 29412                           fsr0h	equ	0xFEA
 29413                           fsr0l	equ	0xFE9
 29414                           wreg	equ	0xFE8
 29415                           postinc1	equ	0xFE6
 29416                           postdec1	equ	0xFE5
 29417                           plusw1	equ	0xFE3
 29418                           fsr1h	equ	0xFE2
 29419                           fsr1l	equ	0xFE1
 29420                           indf2	equ	0xFDF
 29421                           postinc2	equ	0xFDE
 29422                           postdec2	equ	0xFDD
 29423                           plusw2	equ	0xFDB
 29424                           fsr2h	equ	0xFDA
 29425                           fsr2l	equ	0xFD9
 29426                           status	equ	0xFD8
 29427                           
 29428 ;; *************** function _RADIO_SetSpreadingFactor *****************
 29429 ;; Defined at:
 29430 ;;		line 1434 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29431 ;; Parameters:    Size  Location     Type
 29432 ;;  spreadingFac    1    wreg     enum E7761
 29433 ;; Auto vars:     Size  Location     Type
 29434 ;;  spreadingFac    1    4[BANK0 ] enum E7761
 29435 ;; Return value:  Size  Location     Type
 29436 ;;                  1    wreg      void 
 29437 ;; Registers used:
 29438 ;;		wreg
 29439 ;; Tracked objects:
 29440 ;;		On entry : 0/0
 29441 ;;		On exit  : 0/0
 29442 ;;		Unchanged: 0/0
 29443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29444 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29445 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29447 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29448 ;;Total ram usage:        1 bytes
 29449 ;; Hardware stack levels used:    1
 29450 ;; Hardware stack levels required when called:    7
 29451 ;; This function calls:
 29452 ;;		Nothing
 29453 ;; This function is called by:
 29454 ;;		_ConfigureRadio
 29455 ;; This function uses a non-reentrant model
 29456 ;;
 29457                           
 29458                           	psect	text135
 29459  00A3EA                     __ptext135:
 29460                           	opt stack 0
 29461  00A3EA                     _RADIO_SetSpreadingFactor:
 29462                           	opt stack 18
 29463                           
 29464                           ;incstack = 0
 29465                           ;RADIO_SetSpreadingFactor@spreadingFactor stored from wreg
 29466  00A3EA  0100               	movlb	0	; () banked
 29467  00A3EC  6F64               	movwf	RADIO_SetSpreadingFactor@spreadingFactor& (0+255),b
 29468                           
 29469                           ;radio_driver_SX1276.c: 1436: RadioConfiguration.dataRate = spreadingFactor;
 29470  00A3EE  C064  F1A5         	movff	RADIO_SetSpreadingFactor@spreadingFactor,_RadioConfiguration+25
 29471  00A3F2  0012               	return		;funcret
 29472  00A3F4                     __end_of_RADIO_SetSpreadingFactor:
 29473                           	opt stack 0
 29474                           tosu	equ	0xFFF
 29475                           tosh	equ	0xFFE
 29476                           tosl	equ	0xFFD
 29477                           pclath	equ	0xFFA
 29478                           tblptru	equ	0xFF8
 29479                           tblptrh	equ	0xFF7
 29480                           tblptrl	equ	0xFF6
 29481                           tablat	equ	0xFF5
 29482                           prodh	equ	0xFF4
 29483                           prodl	equ	0xFF3
 29484                           intcon	equ	0xFF2
 29485                           intcon2	equ	0xFF1
 29486                           intcon3	equ	0xFF0
 29487                           indf0	equ	0xFEF
 29488                           postinc0	equ	0xFEE
 29489                           fsr0h	equ	0xFEA
 29490                           fsr0l	equ	0xFE9
 29491                           wreg	equ	0xFE8
 29492                           postinc1	equ	0xFE6
 29493                           postdec1	equ	0xFE5
 29494                           plusw1	equ	0xFE3
 29495                           fsr1h	equ	0xFE2
 29496                           fsr1l	equ	0xFE1
 29497                           indf2	equ	0xFDF
 29498                           postinc2	equ	0xFDE
 29499                           postdec2	equ	0xFDD
 29500                           plusw2	equ	0xFDB
 29501                           fsr2h	equ	0xFDA
 29502                           fsr2l	equ	0xFD9
 29503                           status	equ	0xFD8
 29504                           
 29505 ;; *************** function _RADIO_SetModulation *****************
 29506 ;; Defined at:
 29507 ;;		line 1515 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29508 ;; Parameters:    Size  Location     Type
 29509 ;;  modulation      1    wreg     enum E7751
 29510 ;; Auto vars:     Size  Location     Type
 29511 ;;  modulation      1    4[BANK0 ] enum E7751
 29512 ;; Return value:  Size  Location     Type
 29513 ;;                  1    wreg      void 
 29514 ;; Registers used:
 29515 ;;		wreg
 29516 ;; Tracked objects:
 29517 ;;		On entry : 0/0
 29518 ;;		On exit  : 0/0
 29519 ;;		Unchanged: 0/0
 29520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29522 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29524 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29525 ;;Total ram usage:        1 bytes
 29526 ;; Hardware stack levels used:    1
 29527 ;; Hardware stack levels required when called:    7
 29528 ;; This function calls:
 29529 ;;		Nothing
 29530 ;; This function is called by:
 29531 ;;		_ConfigureRadio
 29532 ;; This function uses a non-reentrant model
 29533 ;;
 29534                           
 29535                           	psect	text136
 29536  00A3F4                     __ptext136:
 29537                           	opt stack 0
 29538  00A3F4                     _RADIO_SetModulation:
 29539                           	opt stack 18
 29540                           
 29541                           ;incstack = 0
 29542                           ;RADIO_SetModulation@modulation stored from wreg
 29543  00A3F4  0100               	movlb	0	; () banked
 29544  00A3F6  6F64               	movwf	RADIO_SetModulation@modulation& (0+255),b
 29545                           
 29546                           ;radio_driver_SX1276.c: 1517: RadioConfiguration.modulation = modulation;
 29547  00A3F8  C064  F1A4         	movff	RADIO_SetModulation@modulation,_RadioConfiguration+24
 29548  00A3FC  0012               	return		;funcret
 29549  00A3FE                     __end_of_RADIO_SetModulation:
 29550                           	opt stack 0
 29551                           tosu	equ	0xFFF
 29552                           tosh	equ	0xFFE
 29553                           tosl	equ	0xFFD
 29554                           pclath	equ	0xFFA
 29555                           tblptru	equ	0xFF8
 29556                           tblptrh	equ	0xFF7
 29557                           tblptrl	equ	0xFF6
 29558                           tablat	equ	0xFF5
 29559                           prodh	equ	0xFF4
 29560                           prodl	equ	0xFF3
 29561                           intcon	equ	0xFF2
 29562                           intcon2	equ	0xFF1
 29563                           intcon3	equ	0xFF0
 29564                           indf0	equ	0xFEF
 29565                           postinc0	equ	0xFEE
 29566                           fsr0h	equ	0xFEA
 29567                           fsr0l	equ	0xFE9
 29568                           wreg	equ	0xFE8
 29569                           postinc1	equ	0xFE6
 29570                           postdec1	equ	0xFE5
 29571                           plusw1	equ	0xFE3
 29572                           fsr1h	equ	0xFE2
 29573                           fsr1l	equ	0xFE1
 29574                           indf2	equ	0xFDF
 29575                           postinc2	equ	0xFDE
 29576                           postdec2	equ	0xFDD
 29577                           plusw2	equ	0xFDB
 29578                           fsr2h	equ	0xFDA
 29579                           fsr2l	equ	0xFD9
 29580                           status	equ	0xFD8
 29581                           
 29582 ;; *************** function _RADIO_SetFrequencyHopPeriod *****************
 29583 ;; Defined at:
 29584 ;;		line 1550 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29585 ;; Parameters:    Size  Location     Type
 29586 ;;  frequencyHop    2    4[BANK0 ] unsigned int 
 29587 ;; Auto vars:     Size  Location     Type
 29588 ;;		None
 29589 ;; Return value:  Size  Location     Type
 29590 ;;                  1    wreg      void 
 29591 ;; Registers used:
 29592 ;;		None
 29593 ;; Tracked objects:
 29594 ;;		On entry : 0/0
 29595 ;;		On exit  : 0/0
 29596 ;;		Unchanged: 0/0
 29597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29598 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29601 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29602 ;;Total ram usage:        2 bytes
 29603 ;; Hardware stack levels used:    1
 29604 ;; Hardware stack levels required when called:    7
 29605 ;; This function calls:
 29606 ;;		Nothing
 29607 ;; This function is called by:
 29608 ;;		_ConfigureRadio
 29609 ;; This function uses a non-reentrant model
 29610 ;;
 29611                           
 29612                           	psect	text137
 29613  00A3FE                     __ptext137:
 29614                           	opt stack 0
 29615  00A3FE                     _RADIO_SetFrequencyHopPeriod:
 29616                           	opt stack 18
 29617                           
 29618                           ;radio_driver_SX1276.c: 1552: RadioConfiguration.frequencyHopPeriod = frequencyHopPeriod
      +                          ;
 29619                           
 29620                           ;incstack = 0
 29621  00A3FE  C064  F1AA         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod,_RadioConfiguration+30
 29622  00A402  C065  F1AB         	movff	RADIO_SetFrequencyHopPeriod@frequencyHopPeriod+1,_RadioConfiguration+31
 29623  00A406  0012               	return		;funcret
 29624  00A408                     __end_of_RADIO_SetFrequencyHopPeriod:
 29625                           	opt stack 0
 29626                           tosu	equ	0xFFF
 29627                           tosh	equ	0xFFE
 29628                           tosl	equ	0xFFD
 29629                           pclath	equ	0xFFA
 29630                           tblptru	equ	0xFF8
 29631                           tblptrh	equ	0xFF7
 29632                           tblptrl	equ	0xFF6
 29633                           tablat	equ	0xFF5
 29634                           prodh	equ	0xFF4
 29635                           prodl	equ	0xFF3
 29636                           intcon	equ	0xFF2
 29637                           intcon2	equ	0xFF1
 29638                           intcon3	equ	0xFF0
 29639                           indf0	equ	0xFEF
 29640                           postinc0	equ	0xFEE
 29641                           fsr0h	equ	0xFEA
 29642                           fsr0l	equ	0xFE9
 29643                           wreg	equ	0xFE8
 29644                           postinc1	equ	0xFE6
 29645                           postdec1	equ	0xFE5
 29646                           plusw1	equ	0xFE3
 29647                           fsr1h	equ	0xFE2
 29648                           fsr1l	equ	0xFE1
 29649                           indf2	equ	0xFDF
 29650                           postinc2	equ	0xFDE
 29651                           postdec2	equ	0xFDD
 29652                           plusw2	equ	0xFDB
 29653                           fsr2h	equ	0xFDA
 29654                           fsr2l	equ	0xFD9
 29655                           status	equ	0xFD8
 29656                           
 29657 ;; *************** function _RADIO_SetFSKSyncWord *****************
 29658 ;; Defined at:
 29659 ;;		line 1624 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29660 ;; Parameters:    Size  Location     Type
 29661 ;;  syncWordLen     1    wreg     unsigned char 
 29662 ;;  syncWord        2   14[BANK0 ] PTR unsigned char 
 29663 ;;		 -> FskSyncWordBuff(3), 
 29664 ;; Auto vars:     Size  Location     Type
 29665 ;;  syncWordLen     1   16[BANK0 ] unsigned char 
 29666 ;; Return value:  Size  Location     Type
 29667 ;;                  1    wreg      void 
 29668 ;; Registers used:
 29669 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 29670 ;; Tracked objects:
 29671 ;;		On entry : 0/0
 29672 ;;		On exit  : 0/0
 29673 ;;		Unchanged: 0/0
 29674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29675 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29676 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29678 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29679 ;;Total ram usage:        3 bytes
 29680 ;; Hardware stack levels used:    1
 29681 ;; Hardware stack levels required when called:    8
 29682 ;; This function calls:
 29683 ;;		_memcpy
 29684 ;; This function is called by:
 29685 ;;		_ConfigureRadio
 29686 ;; This function uses a non-reentrant model
 29687 ;;
 29688                           
 29689                           	psect	text138
 29690  009B0A                     __ptext138:
 29691                           	opt stack 0
 29692  009B0A                     _RADIO_SetFSKSyncWord:
 29693                           	opt stack 17
 29694                           
 29695                           ;incstack = 0
 29696                           ;RADIO_SetFSKSyncWord@syncWordLen stored from wreg
 29697  009B0A  0100               	movlb	0	; () banked
 29698  009B0C  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29699                           
 29700                           ;radio_driver_SX1276.c: 1626: if (syncWordLen > 8)
 29701  009B0E  0E08               	movlw	8
 29702  009B10  0100               	movlb	0	; () banked
 29703  009B12  6570               	cpfsgt	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29704  009B14  D003               	goto	l13655
 29705                           
 29706                           ; BSR set to: 0
 29707                           ;radio_driver_SX1276.c: 1627: {
 29708                           ;radio_driver_SX1276.c: 1628: syncWordLen = 8;
 29709  009B16  0E08               	movlw	8
 29710  009B18  0100               	movlb	0	; () banked
 29711  009B1A  6F70               	movwf	RADIO_SetFSKSyncWord@syncWordLen& (0+255),b
 29712  009B1C                     l13655:
 29713                           
 29714                           ; BSR set to: 0
 29715                           ;radio_driver_SX1276.c: 1629: }
 29716                           ;radio_driver_SX1276.c: 1630: memcpy(RadioConfiguration.syncWord, syncWord, syncWordLen)
      +                          ;
 29717  009B1C  0E9B               	movlw	low (_RadioConfiguration+15)
 29718  009B1E  0100               	movlb	0	; () banked
 29719  009B20  6F64               	movwf	memcpy@d1& (0+255),b
 29720  009B22  0E01               	movlw	high (_RadioConfiguration+15)
 29721  009B24  0100               	movlb	0	; () banked
 29722  009B26  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 29723  009B28  C06E  F066         	movff	RADIO_SetFSKSyncWord@syncWord,memcpy@s1
 29724  009B2C  C06F  F067         	movff	RADIO_SetFSKSyncWord@syncWord+1,memcpy@s1+1
 29725  009B30  C070  F068         	movff	RADIO_SetFSKSyncWord@syncWordLen,memcpy@n
 29726  009B34  0100               	movlb	0	; () banked
 29727  009B36  6B69               	clrf	(memcpy@n+1)& (0+255),b
 29728  009B38  EC07  F049         	call	_memcpy	;wreg free
 29729                           
 29730                           ;radio_driver_SX1276.c: 1631: RadioConfiguration.syncWordLen = syncWordLen;
 29731  009B3C  C070  F1A3         	movff	RADIO_SetFSKSyncWord@syncWordLen,_RadioConfiguration+23
 29732  009B40  0012               	return		;funcret
 29733  009B42                     __end_of_RADIO_SetFSKSyncWord:
 29734                           	opt stack 0
 29735                           tosu	equ	0xFFF
 29736                           tosh	equ	0xFFE
 29737                           tosl	equ	0xFFD
 29738                           pclath	equ	0xFFA
 29739                           tblptru	equ	0xFF8
 29740                           tblptrh	equ	0xFF7
 29741                           tblptrl	equ	0xFF6
 29742                           tablat	equ	0xFF5
 29743                           prodh	equ	0xFF4
 29744                           prodl	equ	0xFF3
 29745                           intcon	equ	0xFF2
 29746                           intcon2	equ	0xFF1
 29747                           intcon3	equ	0xFF0
 29748                           indf0	equ	0xFEF
 29749                           postinc0	equ	0xFEE
 29750                           fsr0h	equ	0xFEA
 29751                           fsr0l	equ	0xFE9
 29752                           wreg	equ	0xFE8
 29753                           postinc1	equ	0xFE6
 29754                           postdec1	equ	0xFE5
 29755                           plusw1	equ	0xFE3
 29756                           fsr1h	equ	0xFE2
 29757                           fsr1l	equ	0xFE1
 29758                           indf2	equ	0xFDF
 29759                           postinc2	equ	0xFDE
 29760                           postdec2	equ	0xFDD
 29761                           plusw2	equ	0xFDB
 29762                           fsr2h	equ	0xFDA
 29763                           fsr2l	equ	0xFD9
 29764                           status	equ	0xFD8
 29765                           
 29766 ;; *************** function _RADIO_SetChannelFrequency *****************
 29767 ;; Defined at:
 29768 ;;		line 1444 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29769 ;; Parameters:    Size  Location     Type
 29770 ;;  frequency       4    4[BANK0 ] unsigned long 
 29771 ;; Auto vars:     Size  Location     Type
 29772 ;;		None
 29773 ;; Return value:  Size  Location     Type
 29774 ;;                  2    4[BANK0 ] enum E7805
 29775 ;; Registers used:
 29776 ;;		wreg, status,2, status,0
 29777 ;; Tracked objects:
 29778 ;;		On entry : 0/0
 29779 ;;		On exit  : 0/0
 29780 ;;		Unchanged: 0/0
 29781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29782 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29785 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29786 ;;Total ram usage:        4 bytes
 29787 ;; Hardware stack levels used:    1
 29788 ;; Hardware stack levels required when called:    7
 29789 ;; This function calls:
 29790 ;;		Nothing
 29791 ;; This function is called by:
 29792 ;;		_ConfigureRadio
 29793 ;; This function uses a non-reentrant model
 29794 ;;
 29795                           
 29796                           	psect	text139
 29797  0080A8                     __ptext139:
 29798                           	opt stack 0
 29799  0080A8                     _RADIO_SetChannelFrequency:
 29800                           	opt stack 18
 29801                           
 29802                           ;radio_driver_SX1276.c: 1446: if ( (frequency >= 137000000) && (frequency <= 175000000) 
      +                          ||
 29803                           ;radio_driver_SX1276.c: 1447: (frequency >= 410000000) && (frequency <= 525000000) ||
 29804                           ;radio_driver_SX1276.c: 1448: (frequency >= 862000000) && (frequency <= 1020000000) )
 29805                           
 29806                           ;incstack = 0
 29807  0080A8  0E40               	movlw	64
 29808  0080AA  0100               	movlb	0	; () banked
 29809  0080AC  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29810  0080AE  0E74               	movlw	116
 29811  0080B0  0100               	movlb	0	; () banked
 29812  0080B2  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29813  0080B4  0E2A               	movlw	42
 29814  0080B6  0100               	movlb	0	; () banked
 29815  0080B8  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29816  0080BA  0E08               	movlw	8
 29817  0080BC  0100               	movlb	0	; () banked
 29818  0080BE  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29819  0080C0  A0D8               	btfss	status,0,c
 29820  0080C2  D00E               	goto	l13635
 29821                           
 29822                           ; BSR set to: 0
 29823  0080C4  0EC1               	movlw	193
 29824  0080C6  0100               	movlb	0	; () banked
 29825  0080C8  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29826  0080CA  0E49               	movlw	73
 29827  0080CC  0100               	movlb	0	; () banked
 29828  0080CE  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29829  0080D0  0E6E               	movlw	110
 29830  0080D2  0100               	movlb	0	; () banked
 29831  0080D4  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29832  0080D6  0E0A               	movlw	10
 29833  0080D8  0100               	movlb	0	; () banked
 29834  0080DA  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29835  0080DC  A0D8               	btfss	status,0,c
 29836  0080DE  D037               	goto	l688
 29837  0080E0                     l13635:
 29838                           
 29839                           ; BSR set to: 0
 29840  0080E0  0E80               	movlw	128
 29841  0080E2  0100               	movlb	0	; () banked
 29842  0080E4  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29843  0080E6  0E1A               	movlw	26
 29844  0080E8  0100               	movlb	0	; () banked
 29845  0080EA  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29846  0080EC  0E70               	movlw	112
 29847  0080EE  0100               	movlb	0	; () banked
 29848  0080F0  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29849  0080F2  0E18               	movlw	24
 29850  0080F4  0100               	movlb	0	; () banked
 29851  0080F6  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29852  0080F8  A0D8               	btfss	status,0,c
 29853  0080FA  D00E               	goto	l13639
 29854                           
 29855                           ; BSR set to: 0
 29856  0080FC  0E41               	movlw	65
 29857  0080FE  0100               	movlb	0	; () banked
 29858  008100  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29859  008102  0EDD               	movlw	221
 29860  008104  0100               	movlb	0	; () banked
 29861  008106  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29862  008108  0E4A               	movlw	74
 29863  00810A  0100               	movlb	0	; () banked
 29864  00810C  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29865  00810E  0E1F               	movlw	31
 29866  008110  0100               	movlb	0	; () banked
 29867  008112  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29868  008114  A0D8               	btfss	status,0,c
 29869  008116  D01B               	goto	l688
 29870  008118                     l13639:
 29871                           
 29872                           ; BSR set to: 0
 29873  008118  0E80               	movlw	128
 29874  00811A  0100               	movlb	0	; () banked
 29875  00811C  5D64               	subwf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29876  00811E  0E13               	movlw	19
 29877  008120  0100               	movlb	0	; () banked
 29878  008122  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29879  008124  0E61               	movlw	97
 29880  008126  0100               	movlb	0	; () banked
 29881  008128  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29882  00812A  0E33               	movlw	51
 29883  00812C  0100               	movlb	0	; () banked
 29884  00812E  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29885  008130  A0D8               	btfss	status,0,c
 29886  008132  0012               	return	
 29887                           
 29888                           ; BSR set to: 0
 29889  008134  0100               	movlb	0	; () banked
 29890  008136  0564               	decf	RADIO_SetChannelFrequency@frequency& (0+255),w,b
 29891  008138  0EF7               	movlw	247
 29892  00813A  0100               	movlb	0	; () banked
 29893  00813C  5965               	subwfb	(RADIO_SetChannelFrequency@frequency+1)& (0+255),w,b
 29894  00813E  0ECB               	movlw	203
 29895  008140  0100               	movlb	0	; () banked
 29896  008142  5966               	subwfb	(RADIO_SetChannelFrequency@frequency+2)& (0+255),w,b
 29897  008144  0E3C               	movlw	60
 29898  008146  0100               	movlb	0	; () banked
 29899  008148  5967               	subwfb	(RADIO_SetChannelFrequency@frequency+3)& (0+255),w,b
 29900  00814A  B0D8               	btfsc	status,0,c
 29901  00814C  0012               	return	
 29902  00814E                     l688:
 29903                           
 29904                           ; BSR set to: 0
 29905                           ;radio_driver_SX1276.c: 1449: {
 29906                           ;radio_driver_SX1276.c: 1450: RadioConfiguration.frequency = frequency;
 29907  00814E  C064  F18C         	movff	RADIO_SetChannelFrequency@frequency,_RadioConfiguration
 29908  008152  C065  F18D         	movff	RADIO_SetChannelFrequency@frequency+1,_RadioConfiguration+1
 29909  008156  C066  F18E         	movff	RADIO_SetChannelFrequency@frequency+2,_RadioConfiguration+2
 29910  00815A  C067  F18F         	movff	RADIO_SetChannelFrequency@frequency+3,_RadioConfiguration+3
 29911                           
 29912                           ; BSR set to: 0
 29913                           ;radio_driver_SX1276.c: 1453: else
 29914                           ;radio_driver_SX1276.c: 1454: {
 29915                           ;radio_driver_SX1276.c: 1455: return ERR_OUT_OF_RANGE;
 29916                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29917                           
 29918                           ; BSR set to: 0
 29919                           ;radio_driver_SX1276.c: 1452: }
 29920                           
 29921                           ;radio_driver_SX1276.c: 1451: return ERR_NONE;
 29922                           ;	Return value of _RADIO_SetChannelFrequency is never used
 29923  00815E  0012               	return	
 29924  008160                     __end_of_RADIO_SetChannelFrequency:
 29925                           	opt stack 0
 29926                           tosu	equ	0xFFF
 29927                           tosh	equ	0xFFE
 29928                           tosl	equ	0xFFD
 29929                           pclath	equ	0xFFA
 29930                           tblptru	equ	0xFF8
 29931                           tblptrh	equ	0xFF7
 29932                           tblptrl	equ	0xFF6
 29933                           tablat	equ	0xFF5
 29934                           prodh	equ	0xFF4
 29935                           prodl	equ	0xFF3
 29936                           intcon	equ	0xFF2
 29937                           intcon2	equ	0xFF1
 29938                           intcon3	equ	0xFF0
 29939                           indf0	equ	0xFEF
 29940                           postinc0	equ	0xFEE
 29941                           fsr0h	equ	0xFEA
 29942                           fsr0l	equ	0xFE9
 29943                           wreg	equ	0xFE8
 29944                           postinc1	equ	0xFE6
 29945                           postdec1	equ	0xFE5
 29946                           plusw1	equ	0xFE3
 29947                           fsr1h	equ	0xFE2
 29948                           fsr1l	equ	0xFE1
 29949                           indf2	equ	0xFDF
 29950                           postinc2	equ	0xFDE
 29951                           postdec2	equ	0xFDD
 29952                           plusw2	equ	0xFDB
 29953                           fsr2h	equ	0xFDA
 29954                           fsr2l	equ	0xFD9
 29955                           status	equ	0xFD8
 29956                           
 29957 ;; *************** function _RADIO_SetBandwidth *****************
 29958 ;; Defined at:
 29959 ;;		line 1495 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 29960 ;; Parameters:    Size  Location     Type
 29961 ;;  bandwidth       1    wreg     enum E7769
 29962 ;; Auto vars:     Size  Location     Type
 29963 ;;  bandwidth       1    4[BANK0 ] enum E7769
 29964 ;; Return value:  Size  Location     Type
 29965 ;;                  1    wreg      void 
 29966 ;; Registers used:
 29967 ;;		wreg
 29968 ;; Tracked objects:
 29969 ;;		On entry : 0/0
 29970 ;;		On exit  : 0/0
 29971 ;;		Unchanged: 0/0
 29972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 29973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29976 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 29977 ;;Total ram usage:        1 bytes
 29978 ;; Hardware stack levels used:    1
 29979 ;; Hardware stack levels required when called:    7
 29980 ;; This function calls:
 29981 ;;		Nothing
 29982 ;; This function is called by:
 29983 ;;		_ConfigureRadio
 29984 ;; This function uses a non-reentrant model
 29985 ;;
 29986                           
 29987                           	psect	text140
 29988  00A408                     __ptext140:
 29989                           	opt stack 0
 29990  00A408                     _RADIO_SetBandwidth:
 29991                           	opt stack 18
 29992                           
 29993                           ; BSR set to: 0
 29994                           ;incstack = 0
 29995                           ;RADIO_SetBandwidth@bandwidth stored from wreg
 29996  00A408  0100               	movlb	0	; () banked
 29997  00A40A  6F64               	movwf	RADIO_SetBandwidth@bandwidth& (0+255),b
 29998                           
 29999                           ;radio_driver_SX1276.c: 1497: RadioConfiguration.bandWidth = bandwidth;
 30000  00A40C  C064  F1A6         	movff	RADIO_SetBandwidth@bandwidth,_RadioConfiguration+26
 30001  00A410  0012               	return		;funcret
 30002  00A412                     __end_of_RADIO_SetBandwidth:
 30003                           	opt stack 0
 30004                           tosu	equ	0xFFF
 30005                           tosh	equ	0xFFE
 30006                           tosl	equ	0xFFD
 30007                           pclath	equ	0xFFA
 30008                           tblptru	equ	0xFF8
 30009                           tblptrh	equ	0xFF7
 30010                           tblptrl	equ	0xFF6
 30011                           tablat	equ	0xFF5
 30012                           prodh	equ	0xFF4
 30013                           prodl	equ	0xFF3
 30014                           intcon	equ	0xFF2
 30015                           intcon2	equ	0xFF1
 30016                           intcon3	equ	0xFF0
 30017                           indf0	equ	0xFEF
 30018                           postinc0	equ	0xFEE
 30019                           fsr0h	equ	0xFEA
 30020                           fsr0l	equ	0xFE9
 30021                           wreg	equ	0xFE8
 30022                           postinc1	equ	0xFE6
 30023                           postdec1	equ	0xFE5
 30024                           plusw1	equ	0xFE3
 30025                           fsr1h	equ	0xFE2
 30026                           fsr1l	equ	0xFE1
 30027                           indf2	equ	0xFDF
 30028                           postinc2	equ	0xFDE
 30029                           postdec2	equ	0xFDD
 30030                           plusw2	equ	0xFDB
 30031                           fsr2h	equ	0xFDA
 30032                           fsr2l	equ	0xFD9
 30033                           status	equ	0xFD8
 30034                           
 30035 ;; *************** function _RADIO_Transmit *****************
 30036 ;; Defined at:
 30037 ;;		line 786 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30038 ;; Parameters:    Size  Location     Type
 30039 ;;  buffer          2   85[BANK0 ] PTR unsigned char 
 30040 ;;		 -> macBuffer(271), 
 30041 ;;  bufferLen       1   87[BANK0 ] unsigned char 
 30042 ;; Auto vars:     Size  Location     Type
 30043 ;;  i               1  101[BANK0 ] unsigned char 
 30044 ;;  regValue        1  100[BANK0 ] unsigned char 
 30045 ;; Return value:  Size  Location     Type
 30046 ;;                  2   85[BANK0 ] enum E7805
 30047 ;; Registers used:
 30048 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30049 ;; Tracked objects:
 30050 ;;		On entry : 0/0
 30051 ;;		On exit  : 0/0
 30052 ;;		Unchanged: 0/0
 30053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30054 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30055 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30056 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30057 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30058 ;;Total ram usage:       17 bytes
 30059 ;; Hardware stack levels used:    1
 30060 ;; Hardware stack levels required when called:   12
 30061 ;; This function calls:
 30062 ;;		_HALSPICSAssert
 30063 ;;		_HALSPICSDeassert
 30064 ;;		_HALSPISend
 30065 ;;		_RADIO_RegisterRead
 30066 ;;		_RADIO_RegisterWrite
 30067 ;;		_RADIO_WriteConfiguration
 30068 ;;		_RADIO_WriteMode
 30069 ;;		_SwTimerSetTimeout
 30070 ;;		_SwTimerStart
 30071 ;;		_SwTimerStop
 30072 ;;		___lldiv
 30073 ;; This function is called by:
 30074 ;;		_LORAWAN_RxTimeout
 30075 ;;		_LORAWAN_Join
 30076 ;;		_LORAWAN_Send
 30077 ;;		_AckRetransmissionCallback
 30078 ;;		_UnconfirmedTransmissionCallback
 30079 ;; This function uses a non-reentrant model
 30080 ;;
 30081                           
 30082                           	psect	text141
 30083  004BA6                     __ptext141:
 30084                           	opt stack 0
 30085  004BA6                     _RADIO_Transmit:
 30086                           	opt stack 16
 30087                           
 30088                           ;radio_driver_SX1276.c: 788: uint8_t regValue;
 30089                           ;radio_driver_SX1276.c: 789: uint8_t i;
 30090                           ;radio_driver_SX1276.c: 791: if ((RadioConfiguration.flags & (1 << (2))) != 0)
 30091                           
 30092                           ;incstack = 0
 30093  004BA6  0101               	movlb	1	; () banked
 30094  004BA8  A5AF               	btfss	(_RadioConfiguration+35)& (0+255),2,b
 30095  004BAA  D006               	goto	l14729
 30096                           
 30097                           ; BSR set to: 1
 30098                           ;radio_driver_SX1276.c: 792: {
 30099                           ;radio_driver_SX1276.c: 793: return ERR_BUFFER_LOCKED;
 30100  004BAC  0E80               	movlw	128
 30101  004BAE  0100               	movlb	0	; () banked
 30102  004BB0  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30103  004BB2  0E03               	movlw	3
 30104  004BB4  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30105                           
 30106                           ; BSR set to: 0
 30107  004BB6  0012               	return	
 30108  004BB8                     l14729:
 30109                           
 30110                           ;radio_driver_SX1276.c: 794: }
 30111                           ;radio_driver_SX1276.c: 796: if ((RadioConfiguration.flags & ((1 << (0)) | (1 << (1)))) 
      +                          != 0)
 30112  004BB8  C1AF  F0B8         	movff	_RadioConfiguration+35,??_RADIO_Transmit
 30113  004BBC  0E03               	movlw	3
 30114  004BBE  0100               	movlb	0	; () banked
 30115  004BC0  17B8               	andwf	??_RADIO_Transmit& (0+255),f,b
 30116  004BC2  B4D8               	btfsc	status,2,c
 30117  004BC4  D006               	goto	l14735
 30118                           
 30119                           ; BSR set to: 0
 30120                           ;radio_driver_SX1276.c: 797: {
 30121                           ;radio_driver_SX1276.c: 798: return ERR_RADIO_BUSY;
 30122  004BC6  0E80               	movlw	128
 30123  004BC8  0100               	movlb	0	; () banked
 30124  004BCA  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30125  004BCC  0E04               	movlw	4
 30126  004BCE  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30127                           
 30128                           ; BSR set to: 0
 30129  004BD0  0012               	return	
 30130  004BD2                     l14735:
 30131                           
 30132                           ; BSR set to: 0
 30133                           ;radio_driver_SX1276.c: 799: }
 30134                           ;radio_driver_SX1276.c: 801: if ((MODULATION_FSK == RadioConfiguration.modulation) && (b
      +                          ufferLen > 64))
 30135  004BD2  0101               	movlb	1	; () banked
 30136  004BD4  51A4               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30137  004BD6  A4D8               	btfss	status,2,c
 30138  004BD8  D00A               	goto	l14743
 30139                           
 30140                           ; BSR set to: 1
 30141  004BDA  0E40               	movlw	64
 30142  004BDC  0100               	movlb	0	; () banked
 30143  004BDE  65B7               	cpfsgt	RADIO_Transmit@bufferLen& (0+255),b
 30144  004BE0  D006               	goto	l14743
 30145                           
 30146                           ; BSR set to: 0
 30147                           ;radio_driver_SX1276.c: 802: {
 30148                           ;radio_driver_SX1276.c: 803: return ERR_DATA_SIZE;
 30149  004BE2  0E80               	movlw	128
 30150  004BE4  0100               	movlb	0	; () banked
 30151  004BE6  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30152  004BE8  0E02               	movlw	2
 30153  004BEA  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30154                           
 30155                           ; BSR set to: 0
 30156  004BEC  0012               	return	
 30157  004BEE                     l14743:
 30158                           
 30159                           ;radio_driver_SX1276.c: 804: }
 30160                           ;radio_driver_SX1276.c: 806: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 30161  004BEE  0101               	movlb	1	; () banked
 30162  004BF0  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30163  004BF2  EC61  F04F         	call	_SwTimerStop
 30164                           
 30165                           ;radio_driver_SX1276.c: 810: RADIO_WriteConfiguration(4);
 30166  004BF6  0E00               	movlw	0
 30167  004BF8  0100               	movlb	0	; () banked
 30168  004BFA  6FAB               	movwf	(RADIO_WriteConfiguration@symbolTimeout+1)& (0+255),b
 30169  004BFC  0E04               	movlw	4
 30170  004BFE  6FAA               	movwf	RADIO_WriteConfiguration@symbolTimeout& (0+255),b
 30171  004C00  ECFB  F00B         	call	_RADIO_WriteConfiguration	;wreg free
 30172                           
 30173                           ;radio_driver_SX1276.c: 812: if (MODULATION_LORA == RadioConfiguration.modulation)
 30174  004C04  0101               	movlb	1	; () banked
 30175  004C06  05A4               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30176  004C08  A4D8               	btfss	status,2,c
 30177  004C0A  D029               	goto	l14761
 30178                           
 30179                           ; BSR set to: 1
 30180                           ;radio_driver_SX1276.c: 813: {
 30181                           ;radio_driver_SX1276.c: 814: RADIO_RegisterWrite(0x22, bufferLen);
 30182  004C0C  C0B7  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30183  004C10  0E22               	movlw	34
 30184  004C12  EC36  F050         	call	_RADIO_RegisterWrite
 30185                           
 30186                           ;radio_driver_SX1276.c: 817: regValue = RADIO_RegisterRead(0x0A);
 30187  004C16  0E0A               	movlw	10
 30188  004C18  EC4D  F04F         	call	_RADIO_RegisterRead
 30189  004C1C  0100               	movlb	0	; () banked
 30190  004C1E  6FC4               	movwf	RADIO_Transmit@regValue& (0+255),b
 30191                           
 30192                           ; BSR set to: 0
 30193                           ;radio_driver_SX1276.c: 818: regValue &= ~0x0F;
 30194  004C20  0EF0               	movlw	240
 30195  004C22  0100               	movlb	0	; () banked
 30196  004C24  17C4               	andwf	RADIO_Transmit@regValue& (0+255),f,b
 30197                           
 30198                           ; BSR set to: 0
 30199                           ;radio_driver_SX1276.c: 819: regValue |= 0x08;
 30200  004C26  0100               	movlb	0	; () banked
 30201  004C28  87C4               	bsf	RADIO_Transmit@regValue& (0+255),3,b
 30202                           
 30203                           ; BSR set to: 0
 30204                           ;radio_driver_SX1276.c: 820: RADIO_RegisterWrite(0x0A, regValue);
 30205  004C2A  C0C4  F066         	movff	RADIO_Transmit@regValue,RADIO_RegisterWrite@value
 30206  004C2E  0E0A               	movlw	10
 30207  004C30  EC36  F050         	call	_RADIO_RegisterWrite
 30208                           
 30209                           ;radio_driver_SX1276.c: 824: RADIO_RegisterWrite(0x40, 0x40);
 30210  004C34  0E40               	movlw	64
 30211  004C36  0100               	movlb	0	; () banked
 30212  004C38  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30213  004C3A  0E40               	movlw	64
 30214  004C3C  EC36  F050         	call	_RADIO_RegisterWrite
 30215                           
 30216                           ;radio_driver_SX1276.c: 825: RADIO_RegisterWrite(0x41, 0x00);
 30217  004C40  0E00               	movlw	0
 30218  004C42  0100               	movlb	0	; () banked
 30219  004C44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30220  004C46  0E41               	movlw	65
 30221  004C48  EC36  F050         	call	_RADIO_RegisterWrite
 30222                           
 30223                           ;radio_driver_SX1276.c: 827: RADIO_WriteMode(MODE_STANDBY, RadioConfiguration.modulation
      +                          , 1);
 30224  004C4C  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30225  004C50  0E01               	movlw	1
 30226  004C52  0100               	movlb	0	; () banked
 30227  004C54  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30228  004C56  0E01               	movlw	1
 30229  004C58  EC70  F035         	call	_RADIO_WriteMode
 30230                           
 30231                           ;radio_driver_SX1276.c: 828: }
 30232  004C5C  D00C               	goto	l14763
 30233  004C5E                     l14761:
 30234                           
 30235                           ;radio_driver_SX1276.c: 829: else
 30236                           ;radio_driver_SX1276.c: 830: {
 30237                           ;radio_driver_SX1276.c: 832: RADIO_RegisterWrite(0x40, 0x00);
 30238  004C5E  0E00               	movlw	0
 30239  004C60  0100               	movlb	0	; () banked
 30240  004C62  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30241  004C64  0E40               	movlw	64
 30242  004C66  EC36  F050         	call	_RADIO_RegisterWrite
 30243                           
 30244                           ;radio_driver_SX1276.c: 833: RADIO_RegisterWrite(0x41, 0x00);
 30245  004C6A  0E00               	movlw	0
 30246  004C6C  0100               	movlb	0	; () banked
 30247  004C6E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30248  004C70  0E41               	movlw	65
 30249  004C72  EC36  F050         	call	_RADIO_RegisterWrite
 30250  004C76                     l14763:
 30251                           
 30252                           ;radio_driver_SX1276.c: 834: }
 30253                           ;radio_driver_SX1276.c: 836: if (MODULATION_FSK == RadioConfiguration.modulation)
 30254  004C76  0101               	movlb	1	; () banked
 30255  004C78  51A4               	movf	(_RadioConfiguration+24)& (0+255),w,b
 30256  004C7A  A4D8               	btfss	status,2,c
 30257  004C7C  D005               	goto	l14767
 30258                           
 30259                           ; BSR set to: 1
 30260                           ;radio_driver_SX1276.c: 837: {
 30261                           ;radio_driver_SX1276.c: 839: RADIO_RegisterWrite(0x00, bufferLen);
 30262  004C7E  C0B7  F066         	movff	RADIO_Transmit@bufferLen,RADIO_RegisterWrite@value
 30263  004C82  0E00               	movlw	0
 30264  004C84  EC36  F050         	call	_RADIO_RegisterWrite
 30265  004C88                     l14767:
 30266                           
 30267                           ;radio_driver_SX1276.c: 840: }
 30268                           ;radio_driver_SX1276.c: 842: HALSPICSAssert();
 30269  004C88  EC31  F052         	call	_HALSPICSAssert	;wreg free
 30270                           
 30271                           ;radio_driver_SX1276.c: 843: HALSPISend(0x80 | 0x00);
 30272  004C8C  0E80               	movlw	128
 30273  004C8E  ECA0  F051         	call	_HALSPISend
 30274                           
 30275                           ;radio_driver_SX1276.c: 845: for (i = 0; i < bufferLen; i++)
 30276  004C92  0E00               	movlw	0
 30277  004C94  0100               	movlb	0	; () banked
 30278  004C96  6FC5               	movwf	RADIO_Transmit@i& (0+255),b
 30279  004C98  D010               	goto	l14777
 30280  004C9A                     l14773:
 30281                           
 30282                           ; BSR set to: 0
 30283                           ;radio_driver_SX1276.c: 846: {
 30284                           ;radio_driver_SX1276.c: 847: HALSPISend(buffer[i]);
 30285  004C9A  0100               	movlb	0	; () banked
 30286  004C9C  51C5               	movf	RADIO_Transmit@i& (0+255),w,b
 30287  004C9E  0D01               	mullw	1
 30288  004CA0  50F3               	movf	prodl,w,c
 30289  004CA2  0100               	movlb	0	; () banked
 30290  004CA4  25B5               	addwf	RADIO_Transmit@buffer& (0+255),w,b
 30291  004CA6  6ED9               	movwf	fsr2l,c
 30292  004CA8  50F4               	movf	prodh,w,c
 30293  004CAA  0100               	movlb	0	; () banked
 30294  004CAC  21B6               	addwfc	(RADIO_Transmit@buffer+1)& (0+255),w,b
 30295  004CAE  6EDA               	movwf	fsr2h,c
 30296  004CB0  50DF               	movf	indf2,w,c
 30297  004CB2  ECA0  F051         	call	_HALSPISend
 30298  004CB6  0100               	movlb	0	; () banked
 30299  004CB8  2BC5               	incf	RADIO_Transmit@i& (0+255),f,b
 30300  004CBA                     l14777:
 30301                           
 30302                           ; BSR set to: 0
 30303  004CBA  0100               	movlb	0	; () banked
 30304  004CBC  51B7               	movf	RADIO_Transmit@bufferLen& (0+255),w,b
 30305  004CBE  0100               	movlb	0	; () banked
 30306  004CC0  5DC5               	subwf	RADIO_Transmit@i& (0+255),w,b
 30307  004CC2  A0D8               	btfss	status,0,c
 30308  004CC4  D7EA               	goto	l14773
 30309                           
 30310                           ; BSR set to: 0
 30311                           ;radio_driver_SX1276.c: 848: }
 30312                           ;radio_driver_SX1276.c: 849: HALSPICSDeassert();
 30313                           
 30314                           ; BSR set to: 0
 30315  004CC6  EC2F  F052         	call	_HALSPICSDeassert	;wreg free
 30316                           
 30317                           ;radio_driver_SX1276.c: 851: RadioConfiguration.flags |= (1 << (0));
 30318  004CCA  0101               	movlb	1	; () banked
 30319  004CCC  81AF               	bsf	(_RadioConfiguration+35)& (0+255),0,b
 30320                           
 30321                           ; BSR set to: 1
 30322                           ;radio_driver_SX1276.c: 852: RadioConfiguration.flags &= ~((1 << (4)) | (1 << (3)));
 30323  004CCE  0EE7               	movlw	231
 30324  004CD0  0101               	movlb	1	; () banked
 30325  004CD2  17AF               	andwf	(_RadioConfiguration+35)& (0+255),f,b
 30326                           
 30327                           ; BSR set to: 1
 30328                           ;radio_driver_SX1276.c: 857: RADIO_WriteMode(MODE_TX, RadioConfiguration.modulation, 0);
 30329  004CD4  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30330  004CD8  0E00               	movlw	0
 30331  004CDA  0100               	movlb	0	; () banked
 30332  004CDC  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30333  004CDE  0E03               	movlw	3
 30334  004CE0  EC70  F035         	call	_RADIO_WriteMode
 30335                           
 30336                           ; BSR set to: 0
 30337                           
 30338                           ;radio_driver_SX1276.c: 862: SwTimerSetTimeout(RadioConfiguration.timeOnAirTimerId, ((((
      +                          uint32_t)20000)) < 0x000FFFFFUL ? ( (((uint32_t)(((uint32_t)20000))) << (12)) / 125UL ) 
      +                          : ( (((uint32_t)(((uint32_t)20000))) / 125UL) << (12) ) ));
 30339  004CE4  0E00               	movlw	0
 30340  004CE6  0100               	movlb	0	; () banked
 30341  004CE8  6FBC               	movwf	_RADIO_Transmit$1190& (0+255),b
 30342  004CEA  0E00               	movlw	0
 30343  004CEC  6FBD               	movwf	(_RADIO_Transmit$1190+1)& (0+255),b
 30344  004CEE  0E0A               	movlw	10
 30345  004CF0  6FBE               	movwf	(_RADIO_Transmit$1190+2)& (0+255),b
 30346  004CF2  0E00               	movlw	0
 30347  004CF4  6FBF               	movwf	(_RADIO_Transmit$1190+3)& (0+255),b
 30348                           
 30349                           ; BSR set to: 0
 30350                           
 30351                           ; BSR set to: 0
 30352  004CF6  C0BC  F071         	movff	_RADIO_Transmit$1190,SwTimerSetTimeout@timeout
 30353  004CFA  C0BD  F072         	movff	_RADIO_Transmit$1190+1,SwTimerSetTimeout@timeout+1
 30354  004CFE  C0BE  F073         	movff	_RADIO_Transmit$1190+2,SwTimerSetTimeout@timeout+2
 30355  004D02  C0BF  F074         	movff	_RADIO_Transmit$1190+3,SwTimerSetTimeout@timeout+3
 30356  004D06  0101               	movlb	1	; () banked
 30357  004D08  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30358  004D0A  EC70  F04A         	call	_SwTimerSetTimeout
 30359                           
 30360                           ;radio_driver_SX1276.c: 863: SwTimerStart(RadioConfiguration.timeOnAirTimerId);
 30361  004D0E  0101               	movlb	1	; () banked
 30362  004D10  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 30363  004D12  EC06  F042         	call	_SwTimerStart
 30364                           
 30365                           ;radio_driver_SX1276.c: 865: if (0 != RadioConfiguration.watchdogTimerTimeout)
 30366  004D16  0101               	movlb	1	; () banked
 30367  004D18  51B6               	movf	(_RadioConfiguration+42)& (0+255),w,b
 30368  004D1A  0101               	movlb	1	; () banked
 30369  004D1C  11B7               	iorwf	(_RadioConfiguration+43)& (0+255),w,b
 30370  004D1E  0101               	movlb	1	; () banked
 30371  004D20  11B8               	iorwf	(_RadioConfiguration+44)& (0+255),w,b
 30372  004D22  0101               	movlb	1	; () banked
 30373  004D24  11B9               	iorwf	(_RadioConfiguration+45)& (0+255),w,b
 30374  004D26  B4D8               	btfsc	status,2,c
 30375  004D28  D069               	goto	l14807
 30376                           
 30377                           ; BSR set to: 1
 30378                           ;radio_driver_SX1276.c: 866: {
 30379                           ;radio_driver_SX1276.c: 867: SwTimerSetTimeout(RadioConfiguration.watchdogTimerId, ((Rad
      +                          ioConfiguration.watchdogTimerTimeout) < 0x000FFFFFUL ? ( (((uint32_t)(RadioConfiguration
      +                          .watchdogTimerTimeout)) << (12)) / 125UL ) : ( (((uint32_t)(RadioConfiguration.watchdogT
      +                          imerTimeout)) /
 30380  004D2A  0101               	movlb	1	; () banked
 30381  004D2C  51B9               	movf	(_RadioConfiguration+45)& (0+255),w,b
 30382  004D2E  E10A               	bnz	u16830
 30383  004D30  0101               	movlb	1	; () banked
 30384  004D32  29B6               	incf	(_RadioConfiguration+42)& (0+255),w,b
 30385  004D34  0EFF               	movlw	255
 30386  004D36  0101               	movlb	1	; () banked
 30387  004D38  59B7               	subwfb	(_RadioConfiguration+43)& (0+255),w,b
 30388  004D3A  0E0F               	movlw	15
 30389  004D3C  0101               	movlb	1	; () banked
 30390  004D3E  59B8               	subwfb	(_RadioConfiguration+44)& (0+255),w,b
 30391  004D40  A0D8               	btfss	status,0,c
 30392  004D42  D020               	goto	l14801
 30393  004D44                     u16830:
 30394                           
 30395                           ; BSR set to: 1
 30396  004D44  C1B6  F064         	movff	_RadioConfiguration+42,___lldiv@dividend
 30397  004D48  C1B7  F065         	movff	_RadioConfiguration+43,___lldiv@dividend+1
 30398  004D4C  C1B8  F066         	movff	_RadioConfiguration+44,___lldiv@dividend+2
 30399  004D50  C1B9  F067         	movff	_RadioConfiguration+45,___lldiv@dividend+3
 30400  004D54  0E7D               	movlw	125
 30401  004D56  0100               	movlb	0	; () banked
 30402  004D58  6F68               	movwf	___lldiv@divisor& (0+255),b
 30403  004D5A  0E00               	movlw	0
 30404  004D5C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 30405  004D5E  0E00               	movlw	0
 30406  004D60  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 30407  004D62  0E00               	movlw	0
 30408  004D64  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 30409  004D66  EC99  F03F         	call	___lldiv	;wreg free
 30410  004D6A  0E0C               	movlw	12
 30411  004D6C                     u16845:
 30412  004D6C  90D8               	bcf	status,0,c
 30413  004D6E  0100               	movlb	0	; () banked
 30414  004D70  3764               	rlcf	?___lldiv& (0+255),f,b
 30415  004D72  0100               	movlb	0	; () banked
 30416  004D74  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 30417  004D76  0100               	movlb	0	; () banked
 30418  004D78  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 30419  004D7A  0100               	movlb	0	; () banked
 30420  004D7C  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 30421  004D7E  2EE8               	decfsz	wreg,f,c
 30422  004D80  D7F5               	goto	u16845
 30423  004D82  D024               	goto	L18
 30424  004D84                     l14801:
 30425  004D84  C1B6  F0B8         	movff	_RadioConfiguration+42,??_RADIO_Transmit
 30426  004D88  C1B7  F0B9         	movff	_RadioConfiguration+43,??_RADIO_Transmit+1
 30427  004D8C  C1B8  F0BA         	movff	_RadioConfiguration+44,??_RADIO_Transmit+2
 30428  004D90  C1B9  F0BB         	movff	_RadioConfiguration+45,??_RADIO_Transmit+3
 30429  004D94  0E0C               	movlw	12
 30430  004D96                     u16855:
 30431  004D96  90D8               	bcf	status,0,c
 30432  004D98  0100               	movlb	0	; () banked
 30433  004D9A  37B8               	rlcf	??_RADIO_Transmit& (0+255),f,b
 30434  004D9C  37B9               	rlcf	(??_RADIO_Transmit+1)& (0+255),f,b
 30435  004D9E  37BA               	rlcf	(??_RADIO_Transmit+2)& (0+255),f,b
 30436  004DA0  37BB               	rlcf	(??_RADIO_Transmit+3)& (0+255),f,b
 30437  004DA2  2EE8               	decfsz	wreg,f,c
 30438  004DA4  D7F8               	goto	u16855
 30439  004DA6  C0B8  F064         	movff	??_RADIO_Transmit,___lldiv@dividend
 30440  004DAA  C0B9  F065         	movff	??_RADIO_Transmit+1,___lldiv@dividend+1
 30441  004DAE  C0BA  F066         	movff	??_RADIO_Transmit+2,___lldiv@dividend+2
 30442  004DB2  C0BB  F067         	movff	??_RADIO_Transmit+3,___lldiv@dividend+3
 30443  004DB6  0E7D               	movlw	125
 30444  004DB8  0100               	movlb	0	; () banked
 30445  004DBA  6F68               	movwf	___lldiv@divisor& (0+255),b
 30446  004DBC  0E00               	movlw	0
 30447  004DBE  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 30448  004DC0  0E00               	movlw	0
 30449  004DC2  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 30450  004DC4  0E00               	movlw	0
 30451  004DC6  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 30452  004DC8  EC99  F03F         	call	___lldiv	;wreg free
 30453  004DCC                     L18:
 30454  004DCC  C064  F0C0         	movff	?___lldiv,_RADIO_Transmit$1192
 30455  004DD0  C065  F0C1         	movff	?___lldiv+1,_RADIO_Transmit$1192+1
 30456  004DD4  C066  F0C2         	movff	?___lldiv+2,_RADIO_Transmit$1192+2
 30457  004DD8  C067  F0C3         	movff	?___lldiv+3,_RADIO_Transmit$1192+3
 30458  004DDC  C0C0  F071         	movff	_RADIO_Transmit$1192,SwTimerSetTimeout@timeout
 30459  004DE0  C0C1  F072         	movff	_RADIO_Transmit$1192+1,SwTimerSetTimeout@timeout+1
 30460  004DE4  C0C2  F073         	movff	_RADIO_Transmit$1192+2,SwTimerSetTimeout@timeout+2
 30461  004DE8  C0C3  F074         	movff	_RADIO_Transmit$1192+3,SwTimerSetTimeout@timeout+3
 30462  004DEC  0101               	movlb	1	; () banked
 30463  004DEE  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30464  004DF0  EC70  F04A         	call	_SwTimerSetTimeout
 30465                           
 30466                           ;radio_driver_SX1276.c: 868: SwTimerStart(RadioConfiguration.watchdogTimerId);
 30467  004DF4  0101               	movlb	1	; () banked
 30468  004DF6  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 30469  004DF8  EC06  F042         	call	_SwTimerStart
 30470  004DFC                     l14807:
 30471                           
 30472                           ;radio_driver_SX1276.c: 869: }
 30473                           ;radio_driver_SX1276.c: 871: return ERR_NONE;
 30474  004DFC  0E00               	movlw	0
 30475  004DFE  0100               	movlb	0	; () banked
 30476  004E00  6FB6               	movwf	(?_RADIO_Transmit+1)& (0+255),b
 30477  004E02  0E00               	movlw	0
 30478  004E04  6FB5               	movwf	?_RADIO_Transmit& (0+255),b
 30479  004E06  0012               	return	
 30480  004E08                     __end_of_RADIO_Transmit:
 30481                           	opt stack 0
 30482                           tosu	equ	0xFFF
 30483                           tosh	equ	0xFFE
 30484                           tosl	equ	0xFFD
 30485                           pclath	equ	0xFFA
 30486                           tblptru	equ	0xFF8
 30487                           tblptrh	equ	0xFF7
 30488                           tblptrl	equ	0xFF6
 30489                           tablat	equ	0xFF5
 30490                           prodh	equ	0xFF4
 30491                           prodl	equ	0xFF3
 30492                           intcon	equ	0xFF2
 30493                           intcon2	equ	0xFF1
 30494                           intcon3	equ	0xFF0
 30495                           indf0	equ	0xFEF
 30496                           postinc0	equ	0xFEE
 30497                           fsr0h	equ	0xFEA
 30498                           fsr0l	equ	0xFE9
 30499                           wreg	equ	0xFE8
 30500                           postinc1	equ	0xFE6
 30501                           postdec1	equ	0xFE5
 30502                           plusw1	equ	0xFE3
 30503                           fsr1h	equ	0xFE2
 30504                           fsr1l	equ	0xFE1
 30505                           indf2	equ	0xFDF
 30506                           postinc2	equ	0xFDE
 30507                           postdec2	equ	0xFDD
 30508                           plusw2	equ	0xFDB
 30509                           fsr2h	equ	0xFDA
 30510                           fsr2l	equ	0xFD9
 30511                           status	equ	0xFD8
 30512                           
 30513 ;; *************** function _RADIO_WriteConfiguration *****************
 30514 ;; Defined at:
 30515 ;;		line 533 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 30516 ;; Parameters:    Size  Location     Type
 30517 ;;  symbolTimeou    2   74[BANK0 ] unsigned int 
 30518 ;; Auto vars:     Size  Location     Type
 30519 ;;  tempValue       4   80[BANK0 ] unsigned long 
 30520 ;;  regValue        1   84[BANK0 ] unsigned char 
 30521 ;;  i               1   79[BANK0 ] unsigned char 
 30522 ;; Return value:  Size  Location     Type
 30523 ;;                  1    wreg      void 
 30524 ;; Registers used:
 30525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30526 ;; Tracked objects:
 30527 ;;		On entry : 0/0
 30528 ;;		On exit  : 0/0
 30529 ;;		Unchanged: 0/0
 30530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 30531 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30532 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30533 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30534 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 30535 ;;Total ram usage:       11 bytes
 30536 ;; Hardware stack levels used:    1
 30537 ;; Hardware stack levels required when called:   11
 30538 ;; This function calls:
 30539 ;;		_RADIO_RegisterRead
 30540 ;;		_RADIO_RegisterWrite
 30541 ;;		_RADIO_WriteFSKBitRate
 30542 ;;		_RADIO_WriteFSKFrequencyDeviation
 30543 ;;		_RADIO_WriteFrequency
 30544 ;;		_RADIO_WriteMode
 30545 ;;		_RADIO_WritePower
 30546 ;;		___lmul
 30547 ;; This function is called by:
 30548 ;;		_RADIO_Transmit
 30549 ;;		_RADIO_ReceiveStart
 30550 ;;		_RADIO_TransmitCW
 30551 ;; This function uses a non-reentrant model
 30552 ;;
 30553                           
 30554                           	psect	text142
 30555  0017F6                     __ptext142:
 30556                           	opt stack 0
 30557  0017F6                     _RADIO_WriteConfiguration:
 30558                           	opt stack 16
 30559                           
 30560                           ;radio_driver_SX1276.c: 535: uint32_t tempValue;
 30561                           ;radio_driver_SX1276.c: 536: uint8_t regValue;
 30562                           ;radio_driver_SX1276.c: 537: uint8_t i;
 30563                           ;radio_driver_SX1276.c: 540: RADIO_WriteMode(MODE_SLEEP, RadioConfiguration.modulation, 
      +                          0);
 30564                           
 30565                           ; BSR set to: 0
 30566                           ;incstack = 0
 30567  0017F6  C1A4  F069         	movff	_RadioConfiguration+24,RADIO_WriteMode@newModulation
 30568  0017FA  0E00               	movlw	0
 30569  0017FC  0100               	movlb	0	; () banked
 30570  0017FE  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 30571  001800  0E00               	movlw	0
 30572  001802  EC70  F035         	call	_RADIO_WriteMode
 30573                           
 30574                           ;radio_driver_SX1276.c: 541: RADIO_WriteFrequency(RadioConfiguration.frequency);
 30575  001806  C18C  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 30576  00180A  C18D  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 30577  00180E  C18E  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 30578  001812  C18F  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 30579  001816  EC64  F03A         	call	_RADIO_WriteFrequency	;wreg free
 30580                           
 30581                           ;radio_driver_SX1276.c: 542: RADIO_WritePower(RadioConfiguration.outputPower);
 30582  00181A  0101               	movlb	1	; () banked
 30583  00181C  51A7               	movf	(_RadioConfiguration+27)& (0+255),w,b
 30584  00181E  ECCF  F037         	call	_RADIO_WritePower
 30585                           
 30586                           ;radio_driver_SX1276.c: 544: if (MODULATION_LORA == RadioConfiguration.modulation)
 30587  001822  0101               	movlb	1	; () banked
 30588  001824  05A4               	decf	(_RadioConfiguration+24)& (0+255),w,b
 30589  001826  A4D8               	btfss	status,2,c
 30590  001828  D220               	goto	l13897
 30591                           
 30592                           ; BSR set to: 1
 30593                           ;radio_driver_SX1276.c: 545: {
 30594                           ;radio_driver_SX1276.c: 546: RADIO_RegisterWrite(0x39, RadioConfiguration.syncWordLoRa);
 30595  00182A  C19A  F066         	movff	_RadioConfiguration+14,RADIO_RegisterWrite@value
 30596  00182E  0E39               	movlw	57
 30597  001830  EC36  F050         	call	_RADIO_RegisterWrite
 30598                           
 30599                           ;radio_driver_SX1276.c: 548: RADIO_RegisterWrite(0x1D,
 30600                           ;radio_driver_SX1276.c: 549: (RadioConfiguration.bandWidth << (4)) |
 30601                           ;radio_driver_SX1276.c: 550: (RadioConfiguration.errorCodingRate << (1)) |
 30602                           ;radio_driver_SX1276.c: 551: (RadioConfiguration.implicitHeaderMode & 0x01));
 30603  001834  C1AE  F0AC         	movff	_RadioConfiguration+34,??_RADIO_WriteConfiguration
 30604  001838  0E01               	movlw	1
 30605  00183A  0100               	movlb	0	; () banked
 30606  00183C  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30607  00183E  0101               	movlb	1	; () banked
 30608  001840  90D8               	bcf	status,0,c
 30609  001842  35AD               	rlcf	(_RadioConfiguration+33)& (0+255),w,b
 30610  001844  0100               	movlb	0	; () banked
 30611  001846  6FAD               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30612  001848  0101               	movlb	1	; () banked
 30613  00184A  39A6               	swapf	(_RadioConfiguration+26)& (0+255),w,b
 30614  00184C  0BF0               	andlw	240
 30615  00184E  0100               	movlb	0	; () banked
 30616  001850  11AD               	iorwf	(??_RADIO_WriteConfiguration+1)& (0+255),w,b
 30617  001852  0100               	movlb	0	; () banked
 30618  001854  11AC               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30619  001856  0100               	movlb	0	; () banked
 30620  001858  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30621  00185A  0E1D               	movlw	29
 30622  00185C  EC36  F050         	call	_RADIO_RegisterWrite
 30623                           
 30624                           ;radio_driver_SX1276.c: 553: RADIO_RegisterWrite(0x1E,
 30625                           ;radio_driver_SX1276.c: 554: (RadioConfiguration.dataRate << (4)) |
 30626                           ;radio_driver_SX1276.c: 555: ((RadioConfiguration.crcOn & 0x01) << (2)) |
 30627                           ;radio_driver_SX1276.c: 556: ((symbolTimeout & 0x0300) >> (8)));
 30628  001860  C0AA  F0AC         	movff	RADIO_WriteConfiguration@symbolTimeout,??_RADIO_WriteConfiguration
 30629  001864  C0AB  F0AD         	movff	RADIO_WriteConfiguration@symbolTimeout+1,??_RADIO_WriteConfiguration+1
 30630  001868  C0AD  F0AC         	movff	??_RADIO_WriteConfiguration+1,??_RADIO_WriteConfiguration
 30631  00186C  0100               	movlb	0	; () banked
 30632  00186E  6BAD               	clrf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 30633  001870  0E03               	movlw	3
 30634  001872  0100               	movlb	0	; () banked
 30635  001874  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 30636  001876  C1A8  F0AE         	movff	_RadioConfiguration+28,??_RADIO_WriteConfiguration+2
 30637  00187A  0E01               	movlw	1
 30638  00187C  0100               	movlb	0	; () banked
 30639  00187E  17AE               	andwf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30640  001880  0100               	movlb	0	; () banked
 30641  001882  90D8               	bcf	status,0,c
 30642  001884  37AE               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30643  001886  0100               	movlb	0	; () banked
 30644  001888  90D8               	bcf	status,0,c
 30645  00188A  37AE               	rlcf	(??_RADIO_WriteConfiguration+2)& (0+255),f,b
 30646  00188C  0101               	movlb	1	; () banked
 30647  00188E  39A5               	swapf	(_RadioConfiguration+25)& (0+255),w,b
 30648  001890  0BF0               	andlw	240
 30649  001892  0100               	movlb	0	; () banked
 30650  001894  11AE               	iorwf	(??_RADIO_WriteConfiguration+2)& (0+255),w,b
 30651  001896  0100               	movlb	0	; () banked
 30652  001898  11AC               	iorwf	??_RADIO_WriteConfiguration& (0+255),w,b
 30653  00189A  0100               	movlb	0	; () banked
 30654  00189C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30655  00189E  0E1E               	movlw	30
 30656  0018A0  EC36  F050         	call	_RADIO_RegisterWrite
 30657                           
 30658                           ;radio_driver_SX1276.c: 560: if (0 != RadioConfiguration.frequencyHopPeriod)
 30659  0018A4  0101               	movlb	1	; () banked
 30660  0018A6  51AA               	movf	(_RadioConfiguration+30)& (0+255),w,b
 30661  0018A8  0101               	movlb	1	; () banked
 30662  0018AA  11AB               	iorwf	(_RadioConfiguration+31)& (0+255),w,b
 30663  0018AC  B4D8               	btfsc	status,2,c
 30664  0018AE  D071               	goto	l13787
 30665                           
 30666                           ; BSR set to: 1
 30667                           ;radio_driver_SX1276.c: 561: {
 30668                           ;radio_driver_SX1276.c: 562: tempValue = RadioConfiguration.frequencyHopPeriod;
 30669  0018B0  C1AA  F0B0         	movff	_RadioConfiguration+30,RADIO_WriteConfiguration@tempValue
 30670  0018B4  C1AB  F0B1         	movff	_RadioConfiguration+31,RADIO_WriteConfiguration@tempValue+1
 30671  0018B8  0100               	movlb	0	; () banked
 30672  0018BA  6BB2               	clrf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30673  0018BC  6BB3               	clrf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30674                           
 30675                           ;radio_driver_SX1276.c: 564: switch (RadioConfiguration.bandWidth)
 30676  0018BE  D04E               	goto	l13783
 30677  0018C0                     l13773:
 30678                           
 30679                           ;radio_driver_SX1276.c: 567: tempValue *= 125;
 30680  0018C0  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30681  0018C4  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30682  0018C8  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30683  0018CC  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30684  0018D0  0E7D               	movlw	125
 30685  0018D2  0100               	movlb	0	; () banked
 30686  0018D4  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30687  0018D6  0E00               	movlw	0
 30688  0018D8  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30689  0018DA  0E00               	movlw	0
 30690  0018DC  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30691  0018DE  0E00               	movlw	0
 30692  0018E0  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30693  0018E2  ECBF  F046         	call	___lmul	;wreg free
 30694  0018E6  D027               	goto	L20
 30695  0018E8                     l13775:
 30696                           
 30697                           ;radio_driver_SX1276.c: 570: tempValue *= 250;
 30698  0018E8  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30699  0018EC  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30700  0018F0  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30701  0018F4  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30702  0018F8  0EFA               	movlw	250
 30703  0018FA  0100               	movlb	0	; () banked
 30704  0018FC  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30705  0018FE  0E00               	movlw	0
 30706  001900  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30707  001902  0E00               	movlw	0
 30708  001904  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30709  001906  0E00               	movlw	0
 30710  001908  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30711  00190A  ECBF  F046         	call	___lmul	;wreg free
 30712  00190E  D013               	goto	L20
 30713  001910                     l13777:
 30714                           
 30715                           ;radio_driver_SX1276.c: 573: tempValue *= 500;
 30716  001910  C0B0  F09E         	movff	RADIO_WriteConfiguration@tempValue,___lmul@multiplier
 30717  001914  C0B1  F09F         	movff	RADIO_WriteConfiguration@tempValue+1,___lmul@multiplier+1
 30718  001918  C0B2  F0A0         	movff	RADIO_WriteConfiguration@tempValue+2,___lmul@multiplier+2
 30719  00191C  C0B3  F0A1         	movff	RADIO_WriteConfiguration@tempValue+3,___lmul@multiplier+3
 30720  001920  0EF4               	movlw	244
 30721  001922  0100               	movlb	0	; () banked
 30722  001924  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 30723  001926  0E01               	movlw	1
 30724  001928  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 30725  00192A  0E00               	movlw	0
 30726  00192C  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 30727  00192E  0E00               	movlw	0
 30728  001930  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 30729  001932  ECBF  F046         	call	___lmul	;wreg free
 30730  001936                     L20:
 30731  001936  C09E  F0B0         	movff	?___lmul,RADIO_WriteConfiguration@tempValue
 30732  00193A  C09F  F0B1         	movff	?___lmul+1,RADIO_WriteConfiguration@tempValue+1
 30733  00193E  C0A0  F0B2         	movff	?___lmul+2,RADIO_WriteConfiguration@tempValue+2
 30734  001942  C0A1  F0B3         	movff	?___lmul+3,RADIO_WriteConfiguration@tempValue+3
 30735                           
 30736                           ;radio_driver_SX1276.c: 574: break;
 30737  001946  D016               	goto	l13785
 30738  001948                     l13779:
 30739                           
 30740                           ;radio_driver_SX1276.c: 577: tempValue = 0;
 30741  001948  0E00               	movlw	0
 30742  00194A  0100               	movlb	0	; () banked
 30743  00194C  6FB0               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30744  00194E  0E00               	movlw	0
 30745  001950  6FB1               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30746  001952  0E00               	movlw	0
 30747  001954  6FB2               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30748  001956  0E00               	movlw	0
 30749  001958  6FB3               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30750                           
 30751                           ; BSR set to: 0
 30752                           ;radio_driver_SX1276.c: 579: }
 30753                           
 30754                           ;radio_driver_SX1276.c: 578: break;
 30755  00195A  D00C               	goto	l13785
 30756  00195C                     l13783:
 30757                           
 30758                           ; BSR set to: 0
 30759  00195C  0101               	movlb	1	; () banked
 30760  00195E  51A6               	movf	(_RadioConfiguration+26)& (0+255),w,b
 30761                           
 30762                           ; Switch size 1, requested type "space"
 30763                           ; Number of cases is 3, Range of values is 7 to 9
 30764                           ; switch strategies available:
 30765                           ; Name         Instructions Cycles
 30766                           ; simple_byte           10     6 (average)
 30767                           ;	Chosen strategy is simple_byte
 30768  001960  0A07               	xorlw	7	; case 7
 30769  001962  B4D8               	btfsc	status,2,c
 30770  001964  D7AD               	goto	l13773
 30771  001966  0A0F               	xorlw	15	; case 8
 30772  001968  B4D8               	btfsc	status,2,c
 30773  00196A  D7BE               	goto	l13775
 30774  00196C  0A01               	xorlw	1	; case 9
 30775  00196E  B4D8               	btfsc	status,2,c
 30776  001970  D7CF               	goto	l13777
 30777  001972  D7EA               	goto	l13779
 30778  001974                     l13785:
 30779                           
 30780                           ;radio_driver_SX1276.c: 581: tempValue >>= RadioConfiguration.dataRate;
 30781  001974  0101               	movlb	1	; () banked
 30782  001976  29A5               	incf	(_RadioConfiguration+25)& (0+255),w,b
 30783  001978  0100               	movlb	0	; () banked
 30784  00197A  6FAC               	movwf	??_RADIO_WriteConfiguration& (0+255),b
 30785  00197C  D006               	goto	u15230
 30786  00197E                     u15235:
 30787  00197E  90D8               	bcf	status,0,c
 30788  001980  0100               	movlb	0	; () banked
 30789  001982  33B3               	rrcf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),f,b
 30790  001984  33B2               	rrcf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),f,b
 30791  001986  33B1               	rrcf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),f,b
 30792  001988  33B0               	rrcf	RADIO_WriteConfiguration@tempValue& (0+255),f,b
 30793  00198A                     u15230:
 30794  00198A  0100               	movlb	0	; () banked
 30795  00198C  2FAC               	decfsz	??_RADIO_WriteConfiguration& (0+255),f,b
 30796  00198E  D7F7               	goto	u15235
 30797                           
 30798                           ;radio_driver_SX1276.c: 582: }
 30799  001990  D009               	goto	l13789
 30800  001992                     l13787:
 30801                           
 30802                           ;radio_driver_SX1276.c: 583: else
 30803                           ;radio_driver_SX1276.c: 584: {
 30804                           ;radio_driver_SX1276.c: 585: tempValue = 0;
 30805  001992  0E00               	movlw	0
 30806  001994  0100               	movlb	0	; () banked
 30807  001996  6FB0               	movwf	RADIO_WriteConfiguration@tempValue& (0+255),b
 30808  001998  0E00               	movlw	0
 30809  00199A  6FB1               	movwf	(RADIO_WriteConfiguration@tempValue+1)& (0+255),b
 30810  00199C  0E00               	movlw	0
 30811  00199E  6FB2               	movwf	(RADIO_WriteConfiguration@tempValue+2)& (0+255),b
 30812  0019A0  0E00               	movlw	0
 30813  0019A2  6FB3               	movwf	(RADIO_WriteConfiguration@tempValue+3)& (0+255),b
 30814  0019A4                     l13789:
 30815                           
 30816                           ;radio_driver_SX1276.c: 586: }
 30817                           ;radio_driver_SX1276.c: 587: RADIO_RegisterWrite(0x24, (uint8_t)tempValue);
 30818  0019A4  C0B0  F066         	movff	RADIO_WriteConfiguration@tempValue,RADIO_RegisterWrite@value
 30819  0019A8  0E24               	movlw	36
 30820  0019AA  EC36  F050         	call	_RADIO_RegisterWrite
 30821                           
 30822                           ;radio_driver_SX1276.c: 589: RADIO_RegisterWrite(0x1F, (symbolTimeout & 0xFF));
 30823  0019AE  C0AA  F066         	movff	RADIO_WriteConfiguration@symbolTimeout,RADIO_RegisterWrite@value
 30824  0019B2  0E1F               	movlw	31
 30825  0019B4  EC36  F050         	call	_RADIO_RegisterWrite
 30826                           
 30827                           ;radio_driver_SX1276.c: 595: regValue = RADIO_RegisterRead(0x26);
 30828  0019B8  0E26               	movlw	38
 30829  0019BA  EC4D  F04F         	call	_RADIO_RegisterRead
 30830  0019BE  0100               	movlb	0	; () banked
 30831  0019C0  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30832                           
 30833                           ; BSR set to: 0
 30834                           ;radio_driver_SX1276.c: 596: if (
 30835                           ;radio_driver_SX1276.c: 597: (
 30836                           ;radio_driver_SX1276.c: 598: (SF_12 == RadioConfiguration.dataRate) &&
 30837                           ;radio_driver_SX1276.c: 599: ((BW_125KHZ == RadioConfiguration.bandWidth) || (BW_250KHZ 
      +                          == RadioConfiguration.bandWidth))
 30838                           ;radio_driver_SX1276.c: 600: ) ||
 30839                           ;radio_driver_SX1276.c: 601: (
 30840                           ;radio_driver_SX1276.c: 602: (SF_11 == RadioConfiguration.dataRate) &&
 30841                           ;radio_driver_SX1276.c: 603: (BW_125KHZ == RadioConfiguration.bandWidth)
 30842                           ;radio_driver_SX1276.c: 604: )
 30843                           ;radio_driver_SX1276.c: 605: )
 30844  0019C2  0E0C               	movlw	12
 30845  0019C4  0101               	movlb	1	; () banked
 30846  0019C6  19A5               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30847  0019C8  A4D8               	btfss	status,2,c
 30848  0019CA  D00A               	goto	l13801
 30849                           
 30850                           ; BSR set to: 1
 30851  0019CC  0E07               	movlw	7
 30852  0019CE  0101               	movlb	1	; () banked
 30853  0019D0  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30854  0019D2  B4D8               	btfsc	status,2,c
 30855  0019D4  D00F               	goto	l13805
 30856                           
 30857                           ; BSR set to: 1
 30858  0019D6  0E08               	movlw	8
 30859  0019D8  0101               	movlb	1	; () banked
 30860  0019DA  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30861  0019DC  B4D8               	btfsc	status,2,c
 30862  0019DE  D00A               	goto	l13805
 30863  0019E0                     l13801:
 30864                           
 30865                           ; BSR set to: 1
 30866  0019E0  0E0B               	movlw	11
 30867  0019E2  0101               	movlb	1	; () banked
 30868  0019E4  19A5               	xorwf	(_RadioConfiguration+25)& (0+255),w,b
 30869  0019E6  A4D8               	btfss	status,2,c
 30870  0019E8  D008               	goto	l13807
 30871                           
 30872                           ; BSR set to: 1
 30873  0019EA  0E07               	movlw	7
 30874  0019EC  0101               	movlb	1	; () banked
 30875  0019EE  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30876  0019F0  A4D8               	btfss	status,2,c
 30877  0019F2  D003               	goto	l13807
 30878  0019F4                     l13805:
 30879                           
 30880                           ; BSR set to: 1
 30881                           ;radio_driver_SX1276.c: 606: {
 30882                           ;radio_driver_SX1276.c: 607: regValue |= 1 << (3);
 30883  0019F4  0100               	movlb	0	; () banked
 30884  0019F6  87B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30885                           
 30886                           ;radio_driver_SX1276.c: 608: }
 30887  0019F8  D002               	goto	l458
 30888  0019FA                     l13807:
 30889                           
 30890                           ;radio_driver_SX1276.c: 609: else
 30891                           ;radio_driver_SX1276.c: 610: {
 30892                           ;radio_driver_SX1276.c: 611: regValue &= ~(1 << (3));
 30893  0019FA  0100               	movlb	0	; () banked
 30894  0019FC  97B4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),3,b
 30895  0019FE                     l458:
 30896                           
 30897                           ; BSR set to: 0
 30898                           ;radio_driver_SX1276.c: 612: }
 30899                           ;radio_driver_SX1276.c: 613: regValue |= 1 << (2);
 30900  0019FE  0100               	movlb	0	; () banked
 30901  001A00  85B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),2,b
 30902                           
 30903                           ; BSR set to: 0
 30904                           ;radio_driver_SX1276.c: 614: RADIO_RegisterWrite(0x26, regValue);
 30905  001A02  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30906  001A06  0E26               	movlw	38
 30907  001A08  EC36  F050         	call	_RADIO_RegisterWrite
 30908                           
 30909                           ;radio_driver_SX1276.c: 616: regValue = RADIO_RegisterRead(0x31);
 30910  001A0C  0E31               	movlw	49
 30911  001A0E  EC4D  F04F         	call	_RADIO_RegisterRead
 30912  001A12  0100               	movlb	0	; () banked
 30913  001A14  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30914                           
 30915                           ; BSR set to: 0
 30916                           ;radio_driver_SX1276.c: 617: regValue &= ~(0x07);
 30917  001A16  0EF8               	movlw	248
 30918  001A18  0100               	movlb	0	; () banked
 30919  001A1A  17B4               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30920                           
 30921                           ; BSR set to: 0
 30922                           ;radio_driver_SX1276.c: 618: regValue |= 0x03;
 30923  001A1C  0E03               	movlw	3
 30924  001A1E  0100               	movlb	0	; () banked
 30925  001A20  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 30926                           
 30927                           ; BSR set to: 0
 30928                           ;radio_driver_SX1276.c: 619: RADIO_RegisterWrite(0x31, regValue);
 30929  001A22  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30930  001A26  0E31               	movlw	49
 30931  001A28  EC36  F050         	call	_RADIO_RegisterWrite
 30932                           
 30933                           ;radio_driver_SX1276.c: 622: RADIO_RegisterWrite(0x37, 0x0A);
 30934  001A2C  0E0A               	movlw	10
 30935  001A2E  0100               	movlb	0	; () banked
 30936  001A30  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30937  001A32  0E37               	movlw	55
 30938  001A34  EC36  F050         	call	_RADIO_RegisterWrite
 30939                           
 30940                           ;radio_driver_SX1276.c: 625: if (0x12 == RadioConfiguration.regVersion)
 30941  001A38  0E12               	movlw	18
 30942  001A3A  0101               	movlb	1	; () banked
 30943  001A3C  19BD               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 30944  001A3E  A4D8               	btfss	status,2,c
 30945  001A40  D033               	goto	l13845
 30946                           
 30947                           ; BSR set to: 1
 30948                           ;radio_driver_SX1276.c: 626: {
 30949                           ;radio_driver_SX1276.c: 629: if ( (BW_125KHZ == RadioConfiguration.bandWidth) ||
 30950                           ;radio_driver_SX1276.c: 630: (BW_250KHZ == RadioConfiguration.bandWidth) )
 30951  001A42  0E07               	movlw	7
 30952  001A44  0101               	movlb	1	; () banked
 30953  001A46  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30954  001A48  B4D8               	btfsc	status,2,c
 30955  001A4A  D005               	goto	l13827
 30956                           
 30957                           ; BSR set to: 1
 30958  001A4C  0E08               	movlw	8
 30959  001A4E  0101               	movlb	1	; () banked
 30960  001A50  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 30961  001A52  A4D8               	btfss	status,2,c
 30962  001A54  D018               	goto	l13837
 30963  001A56                     l13827:
 30964                           
 30965                           ; BSR set to: 1
 30966                           ;radio_driver_SX1276.c: 631: {
 30967                           ;radio_driver_SX1276.c: 632: regValue = RADIO_RegisterRead(0x31);
 30968  001A56  0E31               	movlw	49
 30969  001A58  EC4D  F04F         	call	_RADIO_RegisterRead
 30970  001A5C  0100               	movlb	0	; () banked
 30971  001A5E  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 30972                           
 30973                           ; BSR set to: 0
 30974                           ;radio_driver_SX1276.c: 633: regValue &= ~0x80;
 30975  001A60  0100               	movlb	0	; () banked
 30976  001A62  9FB4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 30977                           
 30978                           ; BSR set to: 0
 30979                           ;radio_driver_SX1276.c: 634: RADIO_RegisterWrite(0x31, regValue);
 30980  001A64  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 30981  001A68  0E31               	movlw	49
 30982  001A6A  EC36  F050         	call	_RADIO_RegisterWrite
 30983                           
 30984                           ;radio_driver_SX1276.c: 635: RADIO_RegisterWrite(0x2F, 0x40);
 30985  001A6E  0E40               	movlw	64
 30986  001A70  0100               	movlb	0	; () banked
 30987  001A72  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30988  001A74  0E2F               	movlw	47
 30989  001A76  EC36  F050         	call	_RADIO_RegisterWrite
 30990                           
 30991                           ;radio_driver_SX1276.c: 636: RADIO_RegisterWrite(0x30, 0x00);
 30992  001A7A  0E00               	movlw	0
 30993  001A7C  0100               	movlb	0	; () banked
 30994  001A7E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 30995  001A80  0E30               	movlw	48
 30996  001A82  EC36  F050         	call	_RADIO_RegisterWrite
 30997  001A86                     l13837:
 30998                           
 30999                           ;radio_driver_SX1276.c: 637: }
 31000                           ;radio_driver_SX1276.c: 639: if (BW_500KHZ == RadioConfiguration.bandWidth)
 31001  001A86  0E09               	movlw	9
 31002  001A88  0101               	movlb	1	; () banked
 31003  001A8A  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31004  001A8C  A4D8               	btfss	status,2,c
 31005  001A8E  D00C               	goto	l13845
 31006                           
 31007                           ; BSR set to: 1
 31008                           ;radio_driver_SX1276.c: 640: {
 31009                           ;radio_driver_SX1276.c: 641: regValue = RADIO_RegisterRead(0x31);
 31010  001A90  0E31               	movlw	49
 31011  001A92  EC4D  F04F         	call	_RADIO_RegisterRead
 31012  001A96  0100               	movlb	0	; () banked
 31013  001A98  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31014                           
 31015                           ; BSR set to: 0
 31016                           ;radio_driver_SX1276.c: 642: regValue |= 0x80;
 31017  001A9A  0100               	movlb	0	; () banked
 31018  001A9C  8FB4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),7,b
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;radio_driver_SX1276.c: 643: RADIO_RegisterWrite(0x31, regValue);
 31022  001A9E  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31023  001AA2  0E31               	movlw	49
 31024  001AA4  EC36  F050         	call	_RADIO_RegisterWrite
 31025  001AA8                     l13845:
 31026                           
 31027                           ;radio_driver_SX1276.c: 644: }
 31028                           ;radio_driver_SX1276.c: 645: }
 31029                           ;radio_driver_SX1276.c: 647: regValue = RADIO_RegisterRead(0x33);
 31030  001AA8  0E33               	movlw	51
 31031  001AAA  EC4D  F04F         	call	_RADIO_RegisterRead
 31032  001AAE  0100               	movlb	0	; () banked
 31033  001AB0  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31034                           
 31035                           ; BSR set to: 0
 31036                           ;radio_driver_SX1276.c: 648: regValue &= ~(1 << (6));
 31037  001AB2  0100               	movlb	0	; () banked
 31038  001AB4  9DB4               	bcf	RADIO_WriteConfiguration@regValue& (0+255),6,b
 31039                           
 31040                           ; BSR set to: 0
 31041                           ;radio_driver_SX1276.c: 649: regValue |= (1 << (0));
 31042  001AB6  0100               	movlb	0	; () banked
 31043  001AB8  81B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),0,b
 31044                           
 31045                           ; BSR set to: 0
 31046                           ;radio_driver_SX1276.c: 650: regValue |= (RadioConfiguration.iqInverted & 0x01) << (6);
 31047  001ABA  C1AC  F0AC         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 31048  001ABE  0E01               	movlw	1
 31049  001AC0  0100               	movlb	0	; () banked
 31050  001AC2  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 31051  001AC4  0E06               	movlw	6
 31052  001AC6  0100               	movlb	0	; () banked
 31053  001AC8  6FAD               	movwf	(??_RADIO_WriteConfiguration+1)& (0+255),b
 31054  001ACA                     u15335:
 31055  001ACA  0100               	movlb	0	; () banked
 31056  001ACC  90D8               	bcf	status,0,c
 31057  001ACE  37AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 31058  001AD0  0100               	movlb	0	; () banked
 31059  001AD2  2FAD               	decfsz	(??_RADIO_WriteConfiguration+1)& (0+255),f,b
 31060  001AD4  D7FA               	goto	u15335
 31061  001AD6  0100               	movlb	0	; () banked
 31062  001AD8  51AC               	movf	??_RADIO_WriteConfiguration& (0+255),w,b
 31063  001ADA  0100               	movlb	0	; () banked
 31064  001ADC  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31065                           
 31066                           ; BSR set to: 0
 31067                           ;radio_driver_SX1276.c: 651: RADIO_RegisterWrite(0x33, regValue);
 31068  001ADE  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31069  001AE2  0E33               	movlw	51
 31070  001AE4  EC36  F050         	call	_RADIO_RegisterWrite
 31071                           
 31072                           ;radio_driver_SX1276.c: 653: regValue = 0x1D & (~((RadioConfiguration.iqInverted & 0x01)
      +                           << (2)));
 31073  001AE8  C1AC  F0AC         	movff	_RadioConfiguration+32,??_RADIO_WriteConfiguration
 31074  001AEC  0E01               	movlw	1
 31075  001AEE  0100               	movlb	0	; () banked
 31076  001AF0  17AC               	andwf	??_RADIO_WriteConfiguration& (0+255),f,b
 31077  001AF2  0100               	movlb	0	; () banked
 31078  001AF4  90D8               	bcf	status,0,c
 31079  001AF6  37AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),f,b
 31080  001AF8  0100               	movlb	0	; () banked
 31081  001AFA  90D8               	bcf	status,0,c
 31082  001AFC  35AC               	rlcf	??_RADIO_WriteConfiguration& (0+255),w,b
 31083  001AFE  0AFF               	xorlw	255
 31084  001B00  0B1D               	andlw	29
 31085  001B02  0100               	movlb	0	; () banked
 31086  001B04  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31087                           
 31088                           ; BSR set to: 0
 31089                           ;radio_driver_SX1276.c: 654: RADIO_RegisterWrite(0x3B, regValue);
 31090  001B06  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31091  001B0A  0E3B               	movlw	59
 31092  001B0C  EC36  F050         	call	_RADIO_RegisterWrite
 31093                           
 31094                           ;radio_driver_SX1276.c: 656: RADIO_RegisterWrite(0x20, RadioConfiguration.preambleLen >>
      +                           (8));
 31095  001B10  0101               	movlb	1	; () banked
 31096  001B12  5199               	movf	(_RadioConfiguration+13)& (0+255),w,b
 31097  001B14  0100               	movlb	0	; () banked
 31098  001B16  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31099  001B18  0E20               	movlw	32
 31100  001B1A  EC36  F050         	call	_RADIO_RegisterWrite
 31101                           
 31102                           ;radio_driver_SX1276.c: 657: RADIO_RegisterWrite(0x21, RadioConfiguration.preambleLen & 
      +                          0xFF);
 31103  001B1E  C198  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 31104  001B22  0E21               	movlw	33
 31105  001B24  EC36  F050         	call	_RADIO_RegisterWrite
 31106                           
 31107                           ;radio_driver_SX1276.c: 659: RADIO_RegisterWrite(0x0D, 0x00);
 31108  001B28  0E00               	movlw	0
 31109  001B2A  0100               	movlb	0	; () banked
 31110  001B2C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31111  001B2E  0E0D               	movlw	13
 31112  001B30  EC36  F050         	call	_RADIO_RegisterWrite
 31113                           
 31114                           ;radio_driver_SX1276.c: 660: RADIO_RegisterWrite(0x0E, 0x00);
 31115  001B34  0E00               	movlw	0
 31116  001B36  0100               	movlb	0	; () banked
 31117  001B38  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31118  001B3A  0E0E               	movlw	14
 31119  001B3C  EC36  F050         	call	_RADIO_RegisterWrite
 31120                           
 31121                           ;radio_driver_SX1276.c: 661: RADIO_RegisterWrite(0x0F, 0x00);
 31122  001B40  0E00               	movlw	0
 31123  001B42  0100               	movlb	0	; () banked
 31124  001B44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31125  001B46  0E0F               	movlw	15
 31126  001B48  EC36  F050         	call	_RADIO_RegisterWrite
 31127                           
 31128                           ;radio_driver_SX1276.c: 664: if (0x12 == RadioConfiguration.regVersion)
 31129  001B4C  0E12               	movlw	18
 31130  001B4E  0101               	movlb	1	; () banked
 31131  001B50  19BD               	xorwf	(_RadioConfiguration+49)& (0+255),w,b
 31132  001B52  A4D8               	btfss	status,2,c
 31133  001B54  D083               	goto	l464
 31134                           
 31135                           ; BSR set to: 1
 31136                           ;radio_driver_SX1276.c: 665: {
 31137                           ;radio_driver_SX1276.c: 666: if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 31138                           ;radio_driver_SX1276.c: 667: (RadioConfiguration.frequency >= 862000000) &&
 31139                           ;radio_driver_SX1276.c: 668: (RadioConfiguration.frequency <= 1020000000)
 31140                           ;radio_driver_SX1276.c: 669: )
 31141  001B56  0E09               	movlw	9
 31142  001B58  0101               	movlb	1	; () banked
 31143  001B5A  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31144  001B5C  A4D8               	btfss	status,2,c
 31145  001B5E  D028               	goto	l13879
 31146                           
 31147                           ; BSR set to: 1
 31148  001B60  0E80               	movlw	128
 31149  001B62  0101               	movlb	1	; () banked
 31150  001B64  5D8C               	subwf	_RadioConfiguration& (0+255),w,b
 31151  001B66  0E13               	movlw	19
 31152  001B68  0101               	movlb	1	; () banked
 31153  001B6A  598D               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31154  001B6C  0E61               	movlw	97
 31155  001B6E  0101               	movlb	1	; () banked
 31156  001B70  598E               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31157  001B72  0E33               	movlw	51
 31158  001B74  0101               	movlb	1	; () banked
 31159  001B76  598F               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31160  001B78  A0D8               	btfss	status,0,c
 31161  001B7A  D01A               	goto	l13879
 31162                           
 31163                           ; BSR set to: 1
 31164  001B7C  0101               	movlb	1	; () banked
 31165  001B7E  058C               	decf	_RadioConfiguration& (0+255),w,b
 31166  001B80  0EF7               	movlw	247
 31167  001B82  0101               	movlb	1	; () banked
 31168  001B84  598D               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31169  001B86  0ECB               	movlw	203
 31170  001B88  0101               	movlb	1	; () banked
 31171  001B8A  598E               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31172  001B8C  0E3C               	movlw	60
 31173  001B8E  0101               	movlb	1	; () banked
 31174  001B90  598F               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31175  001B92  B0D8               	btfsc	status,0,c
 31176  001B94  D00D               	goto	l13879
 31177                           
 31178                           ; BSR set to: 1
 31179                           ;radio_driver_SX1276.c: 670: {
 31180                           ;radio_driver_SX1276.c: 671: RADIO_RegisterWrite(0x36, 0x02);
 31181  001B96  0E02               	movlw	2
 31182  001B98  0100               	movlb	0	; () banked
 31183  001B9A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31184  001B9C  0E36               	movlw	54
 31185  001B9E  EC36  F050         	call	_RADIO_RegisterWrite
 31186                           
 31187                           ;radio_driver_SX1276.c: 672: RADIO_RegisterWrite(0x3a, 0x64);
 31188  001BA2  0E64               	movlw	100
 31189  001BA4  0100               	movlb	0	; () banked
 31190  001BA6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31191  001BA8  0E3A               	movlw	58
 31192  001BAA  EC36  F050         	call	_RADIO_RegisterWrite
 31193                           
 31194                           ;radio_driver_SX1276.c: 673: }
 31195  001BAE  D034               	goto	l13889
 31196  001BB0                     l13879:
 31197                           
 31198                           ;radio_driver_SX1276.c: 674: else if ( (BW_500KHZ == RadioConfiguration.bandWidth) &&
 31199                           ;radio_driver_SX1276.c: 675: (RadioConfiguration.frequency >= 410000000) &&
 31200                           ;radio_driver_SX1276.c: 676: (RadioConfiguration.frequency <= 525000000)
 31201                           ;radio_driver_SX1276.c: 677: )
 31202  001BB0  0E09               	movlw	9
 31203  001BB2  0101               	movlb	1	; () banked
 31204  001BB4  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31205  001BB6  A4D8               	btfss	status,2,c
 31206  001BB8  D029               	goto	l13887
 31207                           
 31208                           ; BSR set to: 1
 31209  001BBA  0E80               	movlw	128
 31210  001BBC  0101               	movlb	1	; () banked
 31211  001BBE  5D8C               	subwf	_RadioConfiguration& (0+255),w,b
 31212  001BC0  0E1A               	movlw	26
 31213  001BC2  0101               	movlb	1	; () banked
 31214  001BC4  598D               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31215  001BC6  0E70               	movlw	112
 31216  001BC8  0101               	movlb	1	; () banked
 31217  001BCA  598E               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31218  001BCC  0E18               	movlw	24
 31219  001BCE  0101               	movlb	1	; () banked
 31220  001BD0  598F               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31221  001BD2  A0D8               	btfss	status,0,c
 31222  001BD4  D01B               	goto	l13887
 31223                           
 31224                           ; BSR set to: 1
 31225  001BD6  0E41               	movlw	65
 31226  001BD8  0101               	movlb	1	; () banked
 31227  001BDA  5D8C               	subwf	_RadioConfiguration& (0+255),w,b
 31228  001BDC  0EDD               	movlw	221
 31229  001BDE  0101               	movlb	1	; () banked
 31230  001BE0  598D               	subwfb	(_RadioConfiguration+1)& (0+255),w,b
 31231  001BE2  0E4A               	movlw	74
 31232  001BE4  0101               	movlb	1	; () banked
 31233  001BE6  598E               	subwfb	(_RadioConfiguration+2)& (0+255),w,b
 31234  001BE8  0E1F               	movlw	31
 31235  001BEA  0101               	movlb	1	; () banked
 31236  001BEC  598F               	subwfb	(_RadioConfiguration+3)& (0+255),w,b
 31237  001BEE  B0D8               	btfsc	status,0,c
 31238  001BF0  D00D               	goto	l13887
 31239                           
 31240                           ; BSR set to: 1
 31241                           ;radio_driver_SX1276.c: 678: {
 31242                           ;radio_driver_SX1276.c: 679: RADIO_RegisterWrite(0x36, 0x02);
 31243  001BF2  0E02               	movlw	2
 31244  001BF4  0100               	movlb	0	; () banked
 31245  001BF6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31246  001BF8  0E36               	movlw	54
 31247  001BFA  EC36  F050         	call	_RADIO_RegisterWrite
 31248                           
 31249                           ;radio_driver_SX1276.c: 680: RADIO_RegisterWrite(0x3a, 0x7F);
 31250  001BFE  0E7F               	movlw	127
 31251  001C00  0100               	movlb	0	; () banked
 31252  001C02  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31253  001C04  0E3A               	movlw	58
 31254  001C06  EC36  F050         	call	_RADIO_RegisterWrite
 31255                           
 31256                           ;radio_driver_SX1276.c: 681: }
 31257  001C0A  D006               	goto	l13889
 31258  001C0C                     l13887:
 31259                           
 31260                           ;radio_driver_SX1276.c: 682: else
 31261                           ;radio_driver_SX1276.c: 683: {
 31262                           ;radio_driver_SX1276.c: 684: RADIO_RegisterWrite(0x36, 0x03);
 31263  001C0C  0E03               	movlw	3
 31264  001C0E  0100               	movlb	0	; () banked
 31265  001C10  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31266  001C12  0E36               	movlw	54
 31267  001C14  EC36  F050         	call	_RADIO_RegisterWrite
 31268  001C18                     l13889:
 31269                           
 31270                           ;radio_driver_SX1276.c: 685: }
 31271                           ;radio_driver_SX1276.c: 688: if ((BW_500KHZ == RadioConfiguration.bandWidth) && (1 == Ra
      +                          dioConfiguration.iqInverted))
 31272  001C18  0E09               	movlw	9
 31273  001C1A  0101               	movlb	1	; () banked
 31274  001C1C  19A6               	xorwf	(_RadioConfiguration+26)& (0+255),w,b
 31275  001C1E  A4D8               	btfss	status,2,c
 31276  001C20  D011               	goto	l13895
 31277                           
 31278                           ; BSR set to: 1
 31279  001C22  0101               	movlb	1	; () banked
 31280  001C24  05AC               	decf	(_RadioConfiguration+32)& (0+255),w,b
 31281  001C26  A4D8               	btfss	status,2,c
 31282  001C28  D00D               	goto	l13895
 31283                           
 31284                           ; BSR set to: 1
 31285                           ;radio_driver_SX1276.c: 689: {
 31286                           ;radio_driver_SX1276.c: 690: RADIO_RegisterWrite(0x3A, 0x65);
 31287  001C2A  0E65               	movlw	101
 31288  001C2C  0100               	movlb	0	; () banked
 31289  001C2E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31290  001C30  0E3A               	movlw	58
 31291  001C32  EC36  F050         	call	_RADIO_RegisterWrite
 31292                           
 31293                           ;radio_driver_SX1276.c: 691: RADIO_RegisterWrite(0x3B, 25);
 31294  001C36  0E19               	movlw	25
 31295  001C38  0100               	movlb	0	; () banked
 31296  001C3A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31297  001C3C  0E3B               	movlw	59
 31298  001C3E  EC36  F050         	call	_RADIO_RegisterWrite
 31299                           
 31300                           ;radio_driver_SX1276.c: 692: }
 31301  001C42  D00C               	goto	l464
 31302  001C44                     l13895:
 31303                           
 31304                           ;radio_driver_SX1276.c: 693: else
 31305                           ;radio_driver_SX1276.c: 694: {
 31306                           ;radio_driver_SX1276.c: 695: RADIO_RegisterWrite(0x3A, 0x65);
 31307  001C44  0E65               	movlw	101
 31308  001C46  0100               	movlb	0	; () banked
 31309  001C48  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31310  001C4A  0E3A               	movlw	58
 31311  001C4C  EC36  F050         	call	_RADIO_RegisterWrite
 31312                           
 31313                           ;radio_driver_SX1276.c: 696: RADIO_RegisterWrite(0x3B, 29);
 31314  001C50  0E1D               	movlw	29
 31315  001C52  0100               	movlb	0	; () banked
 31316  001C54  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31317  001C56  0E3B               	movlw	59
 31318  001C58  EC36  F050         	call	_RADIO_RegisterWrite
 31319  001C5C                     l464:
 31320                           
 31321                           ;radio_driver_SX1276.c: 697: }
 31322                           ;radio_driver_SX1276.c: 698: }
 31323                           ;radio_driver_SX1276.c: 701: RADIO_RegisterWrite(0x12, 0xFF);
 31324  001C5C  0EFF               	movlw	255
 31325  001C5E  0100               	movlb	0	; () banked
 31326  001C60  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31327  001C62  0E12               	movlw	18
 31328  001C64  EC36  F050         	call	_RADIO_RegisterWrite
 31329                           
 31330                           ;radio_driver_SX1276.c: 702: }
 31331  001C68  0012               	return	
 31332  001C6A                     l13897:
 31333                           
 31334                           ;radio_driver_SX1276.c: 703: else
 31335                           ;radio_driver_SX1276.c: 704: {
 31336                           ;radio_driver_SX1276.c: 706: RADIO_WriteFSKFrequencyDeviation(RadioConfiguration.frequen
      +                          cyDeviation);
 31337  001C6A  C190  F071         	movff	_RadioConfiguration+4,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation
 31338  001C6E  C191  F072         	movff	_RadioConfiguration+5,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1
 31339  001C72  C192  F073         	movff	_RadioConfiguration+6,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2
 31340  001C76  C193  F074         	movff	_RadioConfiguration+7,RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3
 31341  001C7A  ECA2  F047         	call	_RADIO_WriteFSKFrequencyDeviation	;wreg free
 31342                           
 31343                           ;radio_driver_SX1276.c: 707: RADIO_WriteFSKBitRate(RadioConfiguration.bitRate);
 31344  001C7E  C194  F071         	movff	_RadioConfiguration+8,RADIO_WriteFSKBitRate@bitRate
 31345  001C82  C195  F072         	movff	_RadioConfiguration+9,RADIO_WriteFSKBitRate@bitRate+1
 31346  001C86  C196  F073         	movff	_RadioConfiguration+10,RADIO_WriteFSKBitRate@bitRate+2
 31347  001C8A  C197  F074         	movff	_RadioConfiguration+11,RADIO_WriteFSKBitRate@bitRate+3
 31348  001C8E  EC0C  F048         	call	_RADIO_WriteFSKBitRate	;wreg free
 31349                           
 31350                           ;radio_driver_SX1276.c: 709: RADIO_RegisterWrite(0x25, RadioConfiguration.preambleLen >>
      +                           (8));
 31351  001C92  0101               	movlb	1	; () banked
 31352  001C94  5199               	movf	(_RadioConfiguration+13)& (0+255),w,b
 31353  001C96  0100               	movlb	0	; () banked
 31354  001C98  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31355  001C9A  0E25               	movlw	37
 31356  001C9C  EC36  F050         	call	_RADIO_RegisterWrite
 31357                           
 31358                           ;radio_driver_SX1276.c: 710: RADIO_RegisterWrite(0x26, RadioConfiguration.preambleLen & 
      +                          0xFF);
 31359  001CA0  C198  F066         	movff	_RadioConfiguration+12,RADIO_RegisterWrite@value
 31360  001CA4  0E26               	movlw	38
 31361  001CA6  EC36  F050         	call	_RADIO_RegisterWrite
 31362                           
 31363                           ;radio_driver_SX1276.c: 713: regValue = RADIO_RegisterRead(0x0A);
 31364  001CAA  0E0A               	movlw	10
 31365  001CAC  EC4D  F04F         	call	_RADIO_RegisterRead
 31366  001CB0  0100               	movlb	0	; () banked
 31367  001CB2  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31368                           
 31369                           ; BSR set to: 0
 31370                           ;radio_driver_SX1276.c: 714: regValue &= ~0x60;
 31371  001CB4  0E9F               	movlw	159
 31372  001CB6  0100               	movlb	0	; () banked
 31373  001CB8  17B4               	andwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31374                           
 31375                           ; BSR set to: 0
 31376                           ;radio_driver_SX1276.c: 715: regValue |= RadioConfiguration.fskDataShaping << (5);
 31377  001CBA  0101               	movlb	1	; () banked
 31378  001CBC  39BF               	swapf	(_RadioConfiguration+51)& (0+255),w,b
 31379  001CBE  46E8               	rlncf	wreg,f,c
 31380  001CC0  0BE0               	andlw	224
 31381  001CC2  0100               	movlb	0	; () banked
 31382  001CC4  13B4               	iorwf	RADIO_WriteConfiguration@regValue& (0+255),f,b
 31383                           
 31384                           ;radio_driver_SX1276.c: 716: RADIO_RegisterWrite(0x0A, regValue);
 31385  001CC6  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31386  001CCA  0E0A               	movlw	10
 31387  001CCC  EC36  F050         	call	_RADIO_RegisterWrite
 31388                           
 31389                           ;radio_driver_SX1276.c: 720: regValue = 0xC8;
 31390  001CD0  0EC8               	movlw	200
 31391  001CD2  0100               	movlb	0	; () banked
 31392  001CD4  6FB4               	movwf	RADIO_WriteConfiguration@regValue& (0+255),b
 31393                           
 31394                           ; BSR set to: 0
 31395                           ;radio_driver_SX1276.c: 721: if (RadioConfiguration.crcOn)
 31396  001CD6  0101               	movlb	1	; () banked
 31397  001CD8  51A8               	movf	(_RadioConfiguration+28)& (0+255),w,b
 31398  001CDA  B4D8               	btfsc	status,2,c
 31399  001CDC  D002               	goto	l13909
 31400                           
 31401                           ; BSR set to: 1
 31402                           ;radio_driver_SX1276.c: 722: {
 31403                           ;radio_driver_SX1276.c: 723: regValue |= 0x10;
 31404  001CDE  0100               	movlb	0	; () banked
 31405  001CE0  89B4               	bsf	RADIO_WriteConfiguration@regValue& (0+255),4,b
 31406  001CE2                     l13909:
 31407                           
 31408                           ;radio_driver_SX1276.c: 724: }
 31409                           ;radio_driver_SX1276.c: 725: RADIO_RegisterWrite(0x30, regValue);
 31410  001CE2  C0B4  F066         	movff	RADIO_WriteConfiguration@regValue,RADIO_RegisterWrite@value
 31411  001CE6  0E30               	movlw	48
 31412  001CE8  EC36  F050         	call	_RADIO_RegisterWrite
 31413                           
 31414                           ;radio_driver_SX1276.c: 728: for (i = 0; i < RadioConfiguration.syncWordLen; i++)
 31415  001CEC  0E00               	movlw	0
 31416  001CEE  0100               	movlb	0	; () banked
 31417  001CF0  6FAF               	movwf	RADIO_WriteConfiguration@i& (0+255),b
 31418  001CF2  D013               	goto	l13917
 31419  001CF4                     l13913:
 31420                           
 31421                           ; BSR set to: 0
 31422                           ;radio_driver_SX1276.c: 729: {
 31423                           ;radio_driver_SX1276.c: 732: RADIO_RegisterWrite(0x28 + i, RadioConfiguration.syncWord[i
      +                          ]);
 31424  001CF4  0100               	movlb	0	; () banked
 31425  001CF6  51AF               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31426  001CF8  0D01               	mullw	1
 31427  001CFA  0E9B               	movlw	low (_RadioConfiguration+15)
 31428  001CFC  24F3               	addwf	prodl,w,c
 31429  001CFE  6ED9               	movwf	fsr2l,c
 31430  001D00  0E01               	movlw	high (_RadioConfiguration+15)
 31431  001D02  20F4               	addwfc	prodh,w,c
 31432  001D04  6EDA               	movwf	fsr2h,c
 31433  001D06  50DF               	movf	indf2,w,c
 31434  001D08  0100               	movlb	0	; () banked
 31435  001D0A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31436  001D0C  0100               	movlb	0	; () banked
 31437  001D0E  51AF               	movf	RADIO_WriteConfiguration@i& (0+255),w,b
 31438  001D10  0F28               	addlw	40
 31439  001D12  EC36  F050         	call	_RADIO_RegisterWrite
 31440  001D16  0100               	movlb	0	; () banked
 31441  001D18  2BAF               	incf	RADIO_WriteConfiguration@i& (0+255),f,b
 31442  001D1A                     l13917:
 31443                           
 31444                           ; BSR set to: 0
 31445  001D1A  0101               	movlb	1	; () banked
 31446  001D1C  51A3               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31447  001D1E  0100               	movlb	0	; () banked
 31448  001D20  5DAF               	subwf	RADIO_WriteConfiguration@i& (0+255),w,b
 31449  001D22  A0D8               	btfss	status,0,c
 31450  001D24  D7E7               	goto	l13913
 31451                           
 31452                           ; BSR set to: 0
 31453                           ;radio_driver_SX1276.c: 733: }
 31454                           ;radio_driver_SX1276.c: 736: if (RadioConfiguration.syncWordLen != 0)
 31455                           
 31456                           ; BSR set to: 0
 31457  001D26  0101               	movlb	1	; () banked
 31458  001D28  51A3               	movf	(_RadioConfiguration+23)& (0+255),w,b
 31459  001D2A  B4D8               	btfsc	status,2,c
 31460  001D2C  D009               	goto	l13923
 31461                           
 31462                           ; BSR set to: 1
 31463                           ;radio_driver_SX1276.c: 737: {
 31464                           ;radio_driver_SX1276.c: 738: RADIO_RegisterWrite(0x27, 0x10 | (RadioConfiguration.syncWo
      +                          rdLen - 1));
 31465  001D2E  0101               	movlb	1	; () banked
 31466  001D30  05A3               	decf	(_RadioConfiguration+23)& (0+255),w,b
 31467  001D32  0910               	iorlw	16
 31468  001D34  0100               	movlb	0	; () banked
 31469  001D36  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31470  001D38  0E27               	movlw	39
 31471  001D3A  EC36  F050         	call	_RADIO_RegisterWrite
 31472                           
 31473                           ;radio_driver_SX1276.c: 739: }
 31474  001D3E  D006               	goto	l477
 31475  001D40                     l13923:
 31476                           
 31477                           ;radio_driver_SX1276.c: 740: else
 31478                           ;radio_driver_SX1276.c: 741: {
 31479                           ;radio_driver_SX1276.c: 742: RADIO_RegisterWrite(0x27, 0x00);
 31480  001D40  0E00               	movlw	0
 31481  001D42  0100               	movlb	0	; () banked
 31482  001D44  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31483  001D46  0E27               	movlw	39
 31484  001D48  EC36  F050         	call	_RADIO_RegisterWrite
 31485  001D4C                     l477:
 31486                           
 31487                           ;radio_driver_SX1276.c: 743: }
 31488                           ;radio_driver_SX1276.c: 746: RADIO_RegisterWrite(0x3E, 0xFF);
 31489  001D4C  0EFF               	movlw	255
 31490  001D4E  0100               	movlb	0	; () banked
 31491  001D50  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31492  001D52  0E3E               	movlw	62
 31493  001D54  EC36  F050         	call	_RADIO_RegisterWrite
 31494                           
 31495                           ;radio_driver_SX1276.c: 747: RADIO_RegisterWrite(0x3F, 0xFF);
 31496  001D58  0EFF               	movlw	255
 31497  001D5A  0100               	movlb	0	; () banked
 31498  001D5C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31499  001D5E  0E3F               	movlw	63
 31500  001D60  EC36  F050         	call	_RADIO_RegisterWrite
 31501  001D64  0012               	return	
 31502  001D66                     __end_of_RADIO_WriteConfiguration:
 31503                           	opt stack 0
 31504                           tosu	equ	0xFFF
 31505                           tosh	equ	0xFFE
 31506                           tosl	equ	0xFFD
 31507                           pclath	equ	0xFFA
 31508                           tblptru	equ	0xFF8
 31509                           tblptrh	equ	0xFF7
 31510                           tblptrl	equ	0xFF6
 31511                           tablat	equ	0xFF5
 31512                           prodh	equ	0xFF4
 31513                           prodl	equ	0xFF3
 31514                           intcon	equ	0xFF2
 31515                           intcon2	equ	0xFF1
 31516                           intcon3	equ	0xFF0
 31517                           indf0	equ	0xFEF
 31518                           postinc0	equ	0xFEE
 31519                           fsr0h	equ	0xFEA
 31520                           fsr0l	equ	0xFE9
 31521                           wreg	equ	0xFE8
 31522                           postinc1	equ	0xFE6
 31523                           postdec1	equ	0xFE5
 31524                           plusw1	equ	0xFE3
 31525                           fsr1h	equ	0xFE2
 31526                           fsr1l	equ	0xFE1
 31527                           indf2	equ	0xFDF
 31528                           postinc2	equ	0xFDE
 31529                           postdec2	equ	0xFDD
 31530                           plusw2	equ	0xFDB
 31531                           fsr2h	equ	0xFDA
 31532                           fsr2l	equ	0xFD9
 31533                           status	equ	0xFD8
 31534                           
 31535 ;; *************** function _RADIO_WritePower *****************
 31536 ;; Defined at:
 31537 ;;		line 342 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31538 ;; Parameters:    Size  Location     Type
 31539 ;;  power           1    wreg     char 
 31540 ;; Auto vars:     Size  Location     Type
 31541 ;;  power           1   10[BANK0 ] char 
 31542 ;;  paDac           1    9[BANK0 ] unsigned char 
 31543 ;;  ocp             1    8[BANK0 ] unsigned char 
 31544 ;; Return value:  Size  Location     Type
 31545 ;;                  1    wreg      void 
 31546 ;; Registers used:
 31547 ;;		wreg, status,2, status,0, cstack
 31548 ;; Tracked objects:
 31549 ;;		On entry : 0/0
 31550 ;;		On exit  : 0/0
 31551 ;;		Unchanged: 0/0
 31552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31554 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31556 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31557 ;;Total ram usage:        3 bytes
 31558 ;; Hardware stack levels used:    1
 31559 ;; Hardware stack levels required when called:   10
 31560 ;; This function calls:
 31561 ;;		_RADIO_RegisterRead
 31562 ;;		_RADIO_RegisterWrite
 31563 ;; This function is called by:
 31564 ;;		_RADIO_WriteConfiguration
 31565 ;; This function uses a non-reentrant model
 31566 ;;
 31567                           
 31568                           	psect	text143
 31569  006F9E                     __ptext143:
 31570                           	opt stack 0
 31571  006F9E                     _RADIO_WritePower:
 31572                           	opt stack 16
 31573                           
 31574                           ;incstack = 0
 31575                           ;RADIO_WritePower@power stored from wreg
 31576  006F9E  0100               	movlb	0	; () banked
 31577  006FA0  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31578                           
 31579                           ;radio_driver_SX1276.c: 344: uint8_t paDac;
 31580                           ;radio_driver_SX1276.c: 345: uint8_t ocp;
 31581                           ;radio_driver_SX1276.c: 347: if (RadioConfiguration.paBoost == 0)
 31582  006FA2  0101               	movlb	1	; () banked
 31583  006FA4  51A9               	movf	(_RadioConfiguration+29)& (0+255),w,b
 31584  006FA6  A4D8               	btfss	status,2,c
 31585  006FA8  D039               	goto	l13589
 31586                           
 31587                           ; BSR set to: 1
 31588                           ;radio_driver_SX1276.c: 348: {
 31589                           ;radio_driver_SX1276.c: 350: if (power < -3)
 31590  006FAA  0100               	movlb	0	; () banked
 31591  006FAC  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31592  006FAE  0A80               	xorlw	128
 31593  006FB0  0F83               	addlw	131
 31594  006FB2  B0D8               	btfsc	status,0,c
 31595  006FB4  D003               	goto	l13569
 31596                           
 31597                           ; BSR set to: 0
 31598                           ;radio_driver_SX1276.c: 351: {
 31599                           ;radio_driver_SX1276.c: 352: power = -3;
 31600  006FB6  0EFD               	movlw	253
 31601  006FB8  0100               	movlb	0	; () banked
 31602  006FBA  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31603  006FBC                     l13569:
 31604                           
 31605                           ; BSR set to: 0
 31606                           ;radio_driver_SX1276.c: 353: }
 31607                           ;radio_driver_SX1276.c: 354: if (power > 15)
 31608  006FBC  0100               	movlb	0	; () banked
 31609  006FBE  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31610  006FC0  0A80               	xorlw	128
 31611  006FC2  0F70               	addlw	-144
 31612  006FC4  A0D8               	btfss	status,0,c
 31613  006FC6  D003               	goto	l13573
 31614                           
 31615                           ; BSR set to: 0
 31616                           ;radio_driver_SX1276.c: 355: {
 31617                           ;radio_driver_SX1276.c: 356: power = 15;
 31618  006FC8  0E0F               	movlw	15
 31619  006FCA  0100               	movlb	0	; () banked
 31620  006FCC  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31621  006FCE                     l13573:
 31622                           
 31623                           ; BSR set to: 0
 31624                           ;radio_driver_SX1276.c: 357: }
 31625                           ;radio_driver_SX1276.c: 359: paDac = RADIO_RegisterRead(0x4D);
 31626  006FCE  0E4D               	movlw	77
 31627  006FD0  EC4D  F04F         	call	_RADIO_RegisterRead
 31628  006FD4  0100               	movlb	0	; () banked
 31629  006FD6  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 31630                           
 31631                           ; BSR set to: 0
 31632                           ;radio_driver_SX1276.c: 360: paDac &= ~(0x07);
 31633  006FD8  0EF8               	movlw	248
 31634  006FDA  0100               	movlb	0	; () banked
 31635  006FDC  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31636                           
 31637                           ; BSR set to: 0
 31638                           ;radio_driver_SX1276.c: 361: paDac |= 0x04;
 31639  006FDE  0100               	movlb	0	; () banked
 31640  006FE0  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31641                           
 31642                           ; BSR set to: 0
 31643                           ;radio_driver_SX1276.c: 362: RADIO_RegisterWrite(0x4D, paDac);
 31644  006FE2  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31645  006FE6  0E4D               	movlw	77
 31646  006FE8  EC36  F050         	call	_RADIO_RegisterWrite
 31647                           
 31648                           ;radio_driver_SX1276.c: 364: if (power < 0)
 31649  006FEC  0100               	movlb	0	; () banked
 31650  006FEE  AF6A               	btfss	RADIO_WritePower@power& (0+255),7,b
 31651  006FF0  D00C               	goto	l13587
 31652                           
 31653                           ; BSR set to: 0
 31654                           ;radio_driver_SX1276.c: 365: {
 31655                           ;radio_driver_SX1276.c: 369: power += 3;
 31656  006FF2  0E03               	movlw	3
 31657  006FF4  0100               	movlb	0	; () banked
 31658  006FF6  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 31659                           
 31660                           ; BSR set to: 0
 31661                           ;radio_driver_SX1276.c: 370: RADIO_RegisterWrite(0x09, 0x20 | power);
 31662  006FF8  0100               	movlb	0	; () banked
 31663  006FFA  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31664  006FFC  0920               	iorlw	32
 31665  006FFE  0100               	movlb	0	; () banked
 31666  007000  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31667  007002  0E09               	movlw	9
 31668  007004  EC36  F050         	call	_RADIO_RegisterWrite
 31669                           
 31670                           ;radio_driver_SX1276.c: 371: }
 31671  007008  0012               	return	
 31672  00700A                     l13587:
 31673                           
 31674                           ;radio_driver_SX1276.c: 372: else
 31675                           ;radio_driver_SX1276.c: 373: {
 31676                           ;radio_driver_SX1276.c: 377: RADIO_RegisterWrite(0x09, 0x70 | power);
 31677  00700A  0100               	movlb	0	; () banked
 31678  00700C  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31679  00700E  0970               	iorlw	112
 31680  007010  0100               	movlb	0	; () banked
 31681  007012  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31682  007014  0E09               	movlw	9
 31683  007016  EC36  F050         	call	_RADIO_RegisterWrite
 31684                           
 31685                           ;radio_driver_SX1276.c: 378: }
 31686                           ;radio_driver_SX1276.c: 379: }
 31687  00701A  0012               	return	
 31688  00701C                     l13589:
 31689                           
 31690                           ;radio_driver_SX1276.c: 380: else
 31691                           ;radio_driver_SX1276.c: 381: {
 31692                           ;radio_driver_SX1276.c: 385: if (power < 2)
 31693  00701C  0100               	movlb	0	; () banked
 31694  00701E  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31695  007020  0A80               	xorlw	128
 31696  007022  0F7E               	addlw	-130
 31697  007024  B0D8               	btfsc	status,0,c
 31698  007026  D003               	goto	l13593
 31699                           
 31700                           ; BSR set to: 0
 31701                           ;radio_driver_SX1276.c: 386: {
 31702                           ;radio_driver_SX1276.c: 387: power = 2;
 31703  007028  0E02               	movlw	2
 31704  00702A  0100               	movlb	0	; () banked
 31705  00702C  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31706  00702E                     l13593:
 31707                           
 31708                           ; BSR set to: 0
 31709                           ;radio_driver_SX1276.c: 388: }
 31710                           ;radio_driver_SX1276.c: 391: if (power >= 20)
 31711  00702E  0100               	movlb	0	; () banked
 31712  007030  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31713  007032  0A80               	xorlw	128
 31714  007034  0F6C               	addlw	-148
 31715  007036  A0D8               	btfss	status,0,c
 31716  007038  D002               	goto	l13597
 31717                           
 31718                           ; BSR set to: 0
 31719                           ;radio_driver_SX1276.c: 392: {
 31720                           ;radio_driver_SX1276.c: 393: power = 20;
 31721  00703A  0E14               	movlw	20
 31722  00703C  D007               	goto	L21
 31723  00703E                     l13597:
 31724                           
 31725                           ; BSR set to: 0
 31726                           ;radio_driver_SX1276.c: 395: else if (power > 17)
 31727  00703E  0100               	movlb	0	; () banked
 31728  007040  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31729  007042  0A80               	xorlw	128
 31730  007044  0F6E               	addlw	-146
 31731  007046  A0D8               	btfss	status,0,c
 31732  007048  D003               	goto	l13601
 31733                           
 31734                           ; BSR set to: 0
 31735                           ;radio_driver_SX1276.c: 396: {
 31736                           ;radio_driver_SX1276.c: 397: power = 17;
 31737  00704A  0E11               	movlw	17
 31738  00704C                     L21:
 31739  00704C  0100               	movlb	0	; () banked
 31740  00704E  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31741  007050                     l13601:
 31742                           
 31743                           ; BSR set to: 0
 31744                           ;radio_driver_SX1276.c: 398: }
 31745                           ;radio_driver_SX1276.c: 400: ocp = RADIO_RegisterRead(0x0B);
 31746  007050  0E0B               	movlw	11
 31747  007052  EC4D  F04F         	call	_RADIO_RegisterRead
 31748  007056  0100               	movlb	0	; () banked
 31749  007058  6F68               	movwf	RADIO_WritePower@ocp& (0+255),b
 31750                           
 31751                           ; BSR set to: 0
 31752                           ;radio_driver_SX1276.c: 401: paDac = RADIO_RegisterRead(0x4D);
 31753  00705A  0E4D               	movlw	77
 31754  00705C  EC4D  F04F         	call	_RADIO_RegisterRead
 31755  007060  0100               	movlb	0	; () banked
 31756  007062  6F69               	movwf	RADIO_WritePower@paDac& (0+255),b
 31757                           
 31758                           ; BSR set to: 0
 31759                           ;radio_driver_SX1276.c: 402: paDac &= ~(0x07);
 31760  007064  0EF8               	movlw	248
 31761  007066  0100               	movlb	0	; () banked
 31762  007068  1769               	andwf	RADIO_WritePower@paDac& (0+255),f,b
 31763                           
 31764                           ; BSR set to: 0
 31765                           ;radio_driver_SX1276.c: 403: if (power == 20)
 31766  00706A  0E14               	movlw	20
 31767  00706C  0100               	movlb	0	; () banked
 31768  00706E  196A               	xorwf	RADIO_WritePower@power& (0+255),w,b
 31769  007070  A4D8               	btfss	status,2,c
 31770  007072  D009               	goto	l13615
 31771                           
 31772                           ; BSR set to: 0
 31773                           ;radio_driver_SX1276.c: 404: {
 31774                           ;radio_driver_SX1276.c: 405: paDac |= 0x07;
 31775  007074  0E07               	movlw	7
 31776  007076  0100               	movlb	0	; () banked
 31777  007078  1369               	iorwf	RADIO_WritePower@paDac& (0+255),f,b
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;radio_driver_SX1276.c: 406: power = 15;
 31781  00707A  0E0F               	movlw	15
 31782  00707C  0100               	movlb	0	; () banked
 31783  00707E  6F6A               	movwf	RADIO_WritePower@power& (0+255),b
 31784                           
 31785                           ; BSR set to: 0
 31786                           ;radio_driver_SX1276.c: 407: ocp &= ~(0x20);
 31787  007080  0100               	movlb	0	; () banked
 31788  007082  9B68               	bcf	RADIO_WritePower@ocp& (0+255),5,b
 31789                           
 31790                           ;radio_driver_SX1276.c: 408: }
 31791  007084  D007               	goto	l13621
 31792  007086                     l13615:
 31793                           
 31794                           ; BSR set to: 0
 31795                           ;radio_driver_SX1276.c: 409: else
 31796                           ;radio_driver_SX1276.c: 410: {
 31797                           ;radio_driver_SX1276.c: 411: paDac |= 0x04;
 31798  007086  0100               	movlb	0	; () banked
 31799  007088  8569               	bsf	RADIO_WritePower@paDac& (0+255),2,b
 31800                           
 31801                           ; BSR set to: 0
 31802                           ;radio_driver_SX1276.c: 412: power -= 2;
 31803  00708A  0EFE               	movlw	254
 31804  00708C  0100               	movlb	0	; () banked
 31805  00708E  276A               	addwf	RADIO_WritePower@power& (0+255),f,b
 31806                           
 31807                           ; BSR set to: 0
 31808                           ;radio_driver_SX1276.c: 413: ocp |= 0x20;
 31809  007090  0100               	movlb	0	; () banked
 31810  007092  8B68               	bsf	RADIO_WritePower@ocp& (0+255),5,b
 31811  007094                     l13621:
 31812                           
 31813                           ; BSR set to: 0
 31814                           ;radio_driver_SX1276.c: 414: }
 31815                           ;radio_driver_SX1276.c: 416: RADIO_RegisterWrite(0x4D, paDac);
 31816  007094  C069  F066         	movff	RADIO_WritePower@paDac,RADIO_RegisterWrite@value
 31817  007098  0E4D               	movlw	77
 31818  00709A  EC36  F050         	call	_RADIO_RegisterWrite
 31819                           
 31820                           ;radio_driver_SX1276.c: 417: RADIO_RegisterWrite(0x09, 0x80 | power);
 31821  00709E  0100               	movlb	0	; () banked
 31822  0070A0  516A               	movf	RADIO_WritePower@power& (0+255),w,b
 31823  0070A2  0980               	iorlw	128
 31824  0070A4  0100               	movlb	0	; () banked
 31825  0070A6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 31826  0070A8  0E09               	movlw	9
 31827  0070AA  EC36  F050         	call	_RADIO_RegisterWrite
 31828                           
 31829                           ;radio_driver_SX1276.c: 418: RADIO_RegisterWrite(0x0B, ocp);
 31830  0070AE  C068  F066         	movff	RADIO_WritePower@ocp,RADIO_RegisterWrite@value
 31831  0070B2  0E0B               	movlw	11
 31832  0070B4  EC36  F050         	call	_RADIO_RegisterWrite
 31833  0070B8  0012               	return	
 31834  0070BA                     __end_of_RADIO_WritePower:
 31835                           	opt stack 0
 31836                           tosu	equ	0xFFF
 31837                           tosh	equ	0xFFE
 31838                           tosl	equ	0xFFD
 31839                           pclath	equ	0xFFA
 31840                           tblptru	equ	0xFF8
 31841                           tblptrh	equ	0xFF7
 31842                           tblptrl	equ	0xFF6
 31843                           tablat	equ	0xFF5
 31844                           prodh	equ	0xFF4
 31845                           prodl	equ	0xFF3
 31846                           intcon	equ	0xFF2
 31847                           intcon2	equ	0xFF1
 31848                           intcon3	equ	0xFF0
 31849                           indf0	equ	0xFEF
 31850                           postinc0	equ	0xFEE
 31851                           fsr0h	equ	0xFEA
 31852                           fsr0l	equ	0xFE9
 31853                           wreg	equ	0xFE8
 31854                           postinc1	equ	0xFE6
 31855                           postdec1	equ	0xFE5
 31856                           plusw1	equ	0xFE3
 31857                           fsr1h	equ	0xFE2
 31858                           fsr1l	equ	0xFE1
 31859                           indf2	equ	0xFDF
 31860                           postinc2	equ	0xFDE
 31861                           postdec2	equ	0xFDD
 31862                           plusw2	equ	0xFDB
 31863                           fsr2h	equ	0xFDA
 31864                           fsr2l	equ	0xFD9
 31865                           status	equ	0xFD8
 31866                           
 31867 ;; *************** function _RADIO_WriteFSKFrequencyDeviation *****************
 31868 ;; Defined at:
 31869 ;;		line 294 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31870 ;; Parameters:    Size  Location     Type
 31871 ;;  frequencyDev    4   17[BANK0 ] unsigned long 
 31872 ;; Auto vars:     Size  Location     Type
 31873 ;;  num             4   21[BANK0 ] unsigned long 
 31874 ;; Return value:  Size  Location     Type
 31875 ;;                  1    wreg      void 
 31876 ;; Registers used:
 31877 ;;		wreg, status,2, status,0, cstack
 31878 ;; Tracked objects:
 31879 ;;		On entry : 0/0
 31880 ;;		On exit  : 0/0
 31881 ;;		Unchanged: 0/0
 31882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 31883 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31884 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31886 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 31887 ;;Total ram usage:        8 bytes
 31888 ;; Hardware stack levels used:    1
 31889 ;; Hardware stack levels required when called:   10
 31890 ;; This function calls:
 31891 ;;		_RADIO_RegisterWrite
 31892 ;;		___lldiv
 31893 ;; This function is called by:
 31894 ;;		_RADIO_WriteConfiguration
 31895 ;; This function uses a non-reentrant model
 31896 ;;
 31897                           
 31898                           	psect	text144
 31899  008F44                     __ptext144:
 31900                           	opt stack 0
 31901  008F44                     _RADIO_WriteFSKFrequencyDeviation:
 31902                           	opt stack 16
 31903                           
 31904                           ;radio_driver_SX1276.c: 296: uint32_t num;
 31905                           ;radio_driver_SX1276.c: 303: num = frequencyDeviation;
 31906                           
 31907                           ;incstack = 0
 31908  008F44  C071  F075         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation,RADIO_WriteFSKFrequencyDeviat
      +                          ion@num
 31909  008F48  C072  F076         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+1,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+1
 31910  008F4C  C073  F077         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+2,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+2
 31911  008F50  C074  F078         	movff	RADIO_WriteFSKFrequencyDeviation@frequencyDeviation+3,RADIO_WriteFSKFrequencyDevi
      +                          ation@num+3
 31912                           
 31913                           ;radio_driver_SX1276.c: 304: num <<= (8);
 31914  008F54  C077  F078         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,RADIO_WriteFSKFrequencyDeviation@num+3
 31915  008F58  C076  F077         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_WriteFSKFrequencyDeviation@num+2
 31916  008F5C  C075  F076         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_WriteFSKFrequencyDeviation@num+1
 31917  008F60  0100               	movlb	0	; () banked
 31918  008F62  6B75               	clrf	RADIO_WriteFSKFrequencyDeviation@num& (0+255),b
 31919                           
 31920                           ; BSR set to: 0
 31921                           ;radio_driver_SX1276.c: 305: num /= 15625;
 31922  008F64  C075  F064         	movff	RADIO_WriteFSKFrequencyDeviation@num,___lldiv@dividend
 31923  008F68  C076  F065         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,___lldiv@dividend+1
 31924  008F6C  C077  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+2,___lldiv@dividend+2
 31925  008F70  C078  F067         	movff	RADIO_WriteFSKFrequencyDeviation@num+3,___lldiv@dividend+3
 31926  008F74  0E09               	movlw	9
 31927  008F76  0100               	movlb	0	; () banked
 31928  008F78  6F68               	movwf	___lldiv@divisor& (0+255),b
 31929  008F7A  0E3D               	movlw	61
 31930  008F7C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 31931  008F7E  0E00               	movlw	0
 31932  008F80  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 31933  008F82  0E00               	movlw	0
 31934  008F84  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 31935  008F86  EC99  F03F         	call	___lldiv	;wreg free
 31936  008F8A  C064  F075         	movff	?___lldiv,RADIO_WriteFSKFrequencyDeviation@num
 31937  008F8E  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKFrequencyDeviation@num+1
 31938  008F92  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKFrequencyDeviation@num+2
 31939  008F96  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKFrequencyDeviation@num+3
 31940                           
 31941                           ;radio_driver_SX1276.c: 309: RADIO_RegisterWrite(0x04, (num >> (8)) & 0xFF);
 31942  008F9A  C076  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num+1,RADIO_RegisterWrite@value
 31943  008F9E  0E04               	movlw	4
 31944  008FA0  EC36  F050         	call	_RADIO_RegisterWrite
 31945                           
 31946                           ;radio_driver_SX1276.c: 310: RADIO_RegisterWrite(0x05, num & 0xFF);
 31947  008FA4  C075  F066         	movff	RADIO_WriteFSKFrequencyDeviation@num,RADIO_RegisterWrite@value
 31948  008FA8  0E05               	movlw	5
 31949  008FAA  EC36  F050         	call	_RADIO_RegisterWrite
 31950  008FAE  0012               	return		;funcret
 31951  008FB0                     __end_of_RADIO_WriteFSKFrequencyDeviation:
 31952                           	opt stack 0
 31953                           tosu	equ	0xFFF
 31954                           tosh	equ	0xFFE
 31955                           tosl	equ	0xFFD
 31956                           pclath	equ	0xFFA
 31957                           tblptru	equ	0xFF8
 31958                           tblptrh	equ	0xFF7
 31959                           tblptrl	equ	0xFF6
 31960                           tablat	equ	0xFF5
 31961                           prodh	equ	0xFF4
 31962                           prodl	equ	0xFF3
 31963                           intcon	equ	0xFF2
 31964                           intcon2	equ	0xFF1
 31965                           intcon3	equ	0xFF0
 31966                           indf0	equ	0xFEF
 31967                           postinc0	equ	0xFEE
 31968                           fsr0h	equ	0xFEA
 31969                           fsr0l	equ	0xFE9
 31970                           wreg	equ	0xFE8
 31971                           postinc1	equ	0xFE6
 31972                           postdec1	equ	0xFE5
 31973                           plusw1	equ	0xFE3
 31974                           fsr1h	equ	0xFE2
 31975                           fsr1l	equ	0xFE1
 31976                           indf2	equ	0xFDF
 31977                           postinc2	equ	0xFDE
 31978                           postdec2	equ	0xFDD
 31979                           plusw2	equ	0xFDB
 31980                           fsr2h	equ	0xFDA
 31981                           fsr2l	equ	0xFD9
 31982                           status	equ	0xFD8
 31983                           
 31984 ;; *************** function _RADIO_WriteFSKBitRate *****************
 31985 ;; Defined at:
 31986 ;;		line 316 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 31987 ;; Parameters:    Size  Location     Type
 31988 ;;  bitRate         4   17[BANK0 ] unsigned long 
 31989 ;; Auto vars:     Size  Location     Type
 31990 ;;  num             4   21[BANK0 ] unsigned long 
 31991 ;; Return value:  Size  Location     Type
 31992 ;;                  1    wreg      void 
 31993 ;; Registers used:
 31994 ;;		wreg, status,2, status,0, cstack
 31995 ;; Tracked objects:
 31996 ;;		On entry : 0/0
 31997 ;;		On exit  : 0/0
 31998 ;;		Unchanged: 0/0
 31999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32000 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32001 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32003 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32004 ;;Total ram usage:        8 bytes
 32005 ;; Hardware stack levels used:    1
 32006 ;; Hardware stack levels required when called:   10
 32007 ;; This function calls:
 32008 ;;		_RADIO_RegisterWrite
 32009 ;;		___lldiv
 32010 ;; This function is called by:
 32011 ;;		_RADIO_WriteConfiguration
 32012 ;; This function uses a non-reentrant model
 32013 ;;
 32014                           
 32015                           	psect	text145
 32016  009018                     __ptext145:
 32017                           	opt stack 0
 32018  009018                     _RADIO_WriteFSKBitRate:
 32019                           	opt stack 16
 32020                           
 32021                           ;radio_driver_SX1276.c: 318: uint32_t num;
 32022                           ;radio_driver_SX1276.c: 320: num = 32000000;
 32023                           
 32024                           ;incstack = 0
 32025  009018  0E00               	movlw	0
 32026  00901A  0100               	movlb	0	; () banked
 32027  00901C  6F75               	movwf	RADIO_WriteFSKBitRate@num& (0+255),b
 32028  00901E  0E48               	movlw	72
 32029  009020  6F76               	movwf	(RADIO_WriteFSKBitRate@num+1)& (0+255),b
 32030  009022  0EE8               	movlw	232
 32031  009024  6F77               	movwf	(RADIO_WriteFSKBitRate@num+2)& (0+255),b
 32032  009026  0E01               	movlw	1
 32033  009028  6F78               	movwf	(RADIO_WriteFSKBitRate@num+3)& (0+255),b
 32034                           
 32035                           ; BSR set to: 0
 32036                           ;radio_driver_SX1276.c: 321: num /= bitRate;
 32037  00902A  C075  F064         	movff	RADIO_WriteFSKBitRate@num,___lldiv@dividend
 32038  00902E  C076  F065         	movff	RADIO_WriteFSKBitRate@num+1,___lldiv@dividend+1
 32039  009032  C077  F066         	movff	RADIO_WriteFSKBitRate@num+2,___lldiv@dividend+2
 32040  009036  C078  F067         	movff	RADIO_WriteFSKBitRate@num+3,___lldiv@dividend+3
 32041  00903A  C071  F068         	movff	RADIO_WriteFSKBitRate@bitRate,___lldiv@divisor
 32042  00903E  C072  F069         	movff	RADIO_WriteFSKBitRate@bitRate+1,___lldiv@divisor+1
 32043  009042  C073  F06A         	movff	RADIO_WriteFSKBitRate@bitRate+2,___lldiv@divisor+2
 32044  009046  C074  F06B         	movff	RADIO_WriteFSKBitRate@bitRate+3,___lldiv@divisor+3
 32045  00904A  EC99  F03F         	call	___lldiv	;wreg free
 32046  00904E  C064  F075         	movff	?___lldiv,RADIO_WriteFSKBitRate@num
 32047  009052  C065  F076         	movff	?___lldiv+1,RADIO_WriteFSKBitRate@num+1
 32048  009056  C066  F077         	movff	?___lldiv+2,RADIO_WriteFSKBitRate@num+2
 32049  00905A  C067  F078         	movff	?___lldiv+3,RADIO_WriteFSKBitRate@num+3
 32050                           
 32051                           ;radio_driver_SX1276.c: 325: RADIO_RegisterWrite(0x02, (num >> (8)) & 0xFF);
 32052  00905E  C076  F066         	movff	RADIO_WriteFSKBitRate@num+1,RADIO_RegisterWrite@value
 32053  009062  0E02               	movlw	2
 32054  009064  EC36  F050         	call	_RADIO_RegisterWrite
 32055                           
 32056                           ;radio_driver_SX1276.c: 326: RADIO_RegisterWrite(0x03, num & 0xFF);
 32057  009068  C075  F066         	movff	RADIO_WriteFSKBitRate@num,RADIO_RegisterWrite@value
 32058  00906C  0E03               	movlw	3
 32059  00906E  EC36  F050         	call	_RADIO_RegisterWrite
 32060                           
 32061                           ;radio_driver_SX1276.c: 327: RADIO_RegisterWrite(0x5D, 0x00);
 32062  009072  0E00               	movlw	0
 32063  009074  0100               	movlb	0	; () banked
 32064  009076  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 32065  009078  0E5D               	movlw	93
 32066  00907A  EC36  F050         	call	_RADIO_RegisterWrite
 32067  00907E  0012               	return		;funcret
 32068  009080                     __end_of_RADIO_WriteFSKBitRate:
 32069                           	opt stack 0
 32070                           tosu	equ	0xFFF
 32071                           tosh	equ	0xFFE
 32072                           tosl	equ	0xFFD
 32073                           pclath	equ	0xFFA
 32074                           tblptru	equ	0xFF8
 32075                           tblptrh	equ	0xFF7
 32076                           tblptrl	equ	0xFF6
 32077                           tablat	equ	0xFF5
 32078                           prodh	equ	0xFF4
 32079                           prodl	equ	0xFF3
 32080                           intcon	equ	0xFF2
 32081                           intcon2	equ	0xFF1
 32082                           intcon3	equ	0xFF0
 32083                           indf0	equ	0xFEF
 32084                           postinc0	equ	0xFEE
 32085                           fsr0h	equ	0xFEA
 32086                           fsr0l	equ	0xFE9
 32087                           wreg	equ	0xFE8
 32088                           postinc1	equ	0xFE6
 32089                           postdec1	equ	0xFE5
 32090                           plusw1	equ	0xFE3
 32091                           fsr1h	equ	0xFE2
 32092                           fsr1l	equ	0xFE1
 32093                           indf2	equ	0xFDF
 32094                           postinc2	equ	0xFDE
 32095                           postdec2	equ	0xFDD
 32096                           plusw2	equ	0xFDB
 32097                           fsr2h	equ	0xFDA
 32098                           fsr2l	equ	0xFD9
 32099                           status	equ	0xFD8
 32100                           
 32101 ;; *************** function _PrepareJoinRequestFrame *****************
 32102 ;; Defined at:
 32103 ;;		line 1806 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32104 ;; Parameters:    Size  Location     Type
 32105 ;;		None
 32106 ;; Auto vars:     Size  Location     Type
 32107 ;;  mic             4  136[BANK0 ] unsigned long 
 32108 ;;  bufferIndex     1  142[BANK0 ] unsigned char 
 32109 ;;  iCtr            1  141[BANK0 ] unsigned char 
 32110 ;;  mhdr            1  140[BANK0 ] struct .
 32111 ;; Return value:  Size  Location     Type
 32112 ;;                  1    wreg      unsigned char 
 32113 ;; Registers used:
 32114 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32115 ;; Tracked objects:
 32116 ;;		On entry : 0/0
 32117 ;;		On exit  : 0/0
 32118 ;;		Unchanged: 0/0
 32119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32121 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32122 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32123 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32124 ;;Total ram usage:       11 bytes
 32125 ;; Hardware stack levels used:    1
 32126 ;; Hardware stack levels required when called:   13
 32127 ;; This function calls:
 32128 ;;		_ComputeMic
 32129 ;;		_Random
 32130 ;;		_memcpy
 32131 ;;		_memset
 32132 ;; This function is called by:
 32133 ;;		_LORAWAN_Join
 32134 ;; This function uses a non-reentrant model
 32135 ;;
 32136                           
 32137                           	psect	text146
 32138  005240                     __ptext146:
 32139                           	opt stack 0
 32140  005240                     _PrepareJoinRequestFrame:
 32141                           	opt stack 16
 32142                           
 32143                           ;lorawan.c: 1808: uint8_t bufferIndex = 0, iCtr;
 32144                           
 32145                           ;incstack = 0
 32146  005240  0E00               	movlw	0
 32147  005242  0100               	movlb	0	; () banked
 32148  005244  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32149                           
 32150                           ; BSR set to: 0
 32151                           ;lorawan.c: 1809: Mhdr_t mhdr;
 32152                           ;lorawan.c: 1810: uint32_t mic;
 32153                           ;lorawan.c: 1812: memset (macBuffer, 0, sizeof(macBuffer) );
 32154  005246  0EE0               	movlw	low _macBuffer
 32155  005248  0100               	movlb	0	; () banked
 32156  00524A  6F64               	movwf	memset@p1& (0+255),b
 32157  00524C  0E04               	movlw	high _macBuffer
 32158  00524E  0100               	movlb	0	; () banked
 32159  005250  6F65               	movwf	(memset@p1+1)& (0+255),b
 32160  005252  0E00               	movlw	0
 32161  005254  0100               	movlb	0	; () banked
 32162  005256  6F67               	movwf	(memset@c+1)& (0+255),b
 32163  005258  0E00               	movlw	0
 32164  00525A  6F66               	movwf	memset@c& (0+255),b
 32165  00525C  0E01               	movlw	1
 32166  00525E  0100               	movlb	0	; () banked
 32167  005260  6F69               	movwf	(memset@n+1)& (0+255),b
 32168  005262  0E0F               	movlw	15
 32169  005264  6F68               	movwf	memset@n& (0+255),b
 32170  005266  EC0B  F04E         	call	_memset	;wreg free
 32171                           
 32172                           ;lorawan.c: 1814: mhdr.bits.mType = FRAME_TYPE_JOIN_REQ;
 32173  00526A  0100               	movlb	0	; () banked
 32174  00526C  9BEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),5,b
 32175  00526E  9DEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),6,b
 32176  005270  9FEC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),7,b
 32177                           
 32178                           ; BSR set to: 0
 32179                           ;lorawan.c: 1815: mhdr.bits.major = 0;
 32180  005272  0EFC               	movlw	-4
 32181  005274  0100               	movlb	0	; () banked
 32182  005276  17EC               	andwf	PrepareJoinRequestFrame@mhdr& (0+255),f,b
 32183                           
 32184                           ; BSR set to: 0
 32185                           ;lorawan.c: 1816: mhdr.bits.rfu = 0;
 32186  005278  0100               	movlb	0	; () banked
 32187  00527A  95EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),2,b
 32188  00527C  97EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),3,b
 32189  00527E  99EC               	bcf	PrepareJoinRequestFrame@mhdr& (0+255),4,b
 32190                           
 32191                           ; BSR set to: 0
 32192                           ;lorawan.c: 1818: macBuffer[bufferIndex++] = mhdr.value;
 32193  005280  0100               	movlb	0	; () banked
 32194  005282  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32195  005284  0D01               	mullw	1
 32196  005286  0EE0               	movlw	low _macBuffer
 32197  005288  24F3               	addwf	prodl,w,c
 32198  00528A  6ED9               	movwf	fsr2l,c
 32199  00528C  0E04               	movlw	high _macBuffer
 32200  00528E  20F4               	addwfc	prodh,w,c
 32201  005290  6EDA               	movwf	fsr2h,c
 32202  005292  C0EC  FFDF         	movff	PrepareJoinRequestFrame@mhdr,indf2
 32203                           
 32204                           ; BSR set to: 0
 32205  005296  0100               	movlb	0	; () banked
 32206  005298  2BEE               	incf	PrepareJoinRequestFrame@bufferIndex& (0+255),f,b
 32207                           
 32208                           ; BSR set to: 0
 32209                           ;lorawan.c: 1820: for(iCtr = 0; iCtr < 8; iCtr ++)
 32210  00529A  0E00               	movlw	0
 32211  00529C  0100               	movlb	0	; () banked
 32212  00529E  6FED               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 32213  0052A0                     l17029:
 32214                           
 32215                           ; BSR set to: 0
 32216  0052A0  0E07               	movlw	7
 32217  0052A2  0100               	movlb	0	; () banked
 32218  0052A4  65ED               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 32219  0052A6  D001               	goto	l17033
 32220  0052A8  D02E               	goto	l17039
 32221  0052AA                     l17033:
 32222                           
 32223                           ; BSR set to: 0
 32224                           ;lorawan.c: 1821: {
 32225                           ;lorawan.c: 1822: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.applicationE
      +                          ui.buffer[7 - iCtr];
 32226  0052AA  0100               	movlb	0	; () banked
 32227  0052AC  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32228  0052AE  0100               	movlb	0	; () banked
 32229  0052B0  6FE4               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 32230  0052B2  6BE5               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 32231  0052B4  0100               	movlb	0	; () banked
 32232  0052B6  1FE4               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 32233  0052B8  1FE5               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32234  0052BA  4BE4               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 32235  0052BC  2BE5               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32236  0052BE  0E07               	movlw	7
 32237  0052C0  0100               	movlb	0	; () banked
 32238  0052C2  27E4               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 32239  0052C4  0E00               	movlw	0
 32240  0052C6  23E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32241  0052C8  0E52               	movlw	low (_loRa+82)
 32242  0052CA  0100               	movlb	0	; () banked
 32243  0052CC  25E4               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 32244  0052CE  6ED9               	movwf	fsr2l,c
 32245  0052D0  0E02               	movlw	high (_loRa+82)
 32246  0052D2  0100               	movlb	0	; () banked
 32247  0052D4  21E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 32248  0052D6  6EDA               	movwf	fsr2h,c
 32249  0052D8  0100               	movlb	0	; () banked
 32250  0052DA  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32251  0052DC  C0EE  F0E6         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 32252  0052E0  0100               	movlb	0	; () banked
 32253  0052E2  6BE7               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 32254  0052E4  0100               	movlb	0	; () banked
 32255  0052E6  27E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 32256  0052E8  0E00               	movlw	0
 32257  0052EA  23E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 32258  0052EC  0EE0               	movlw	low _macBuffer
 32259  0052EE  0100               	movlb	0	; () banked
 32260  0052F0  25E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 32261  0052F2  6EE9               	movwf	fsr0l,c
 32262  0052F4  0E04               	movlw	high _macBuffer
 32263  0052F6  0100               	movlb	0	; () banked
 32264  0052F8  21E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 32265  0052FA  6EEA               	movwf	fsr0h,c
 32266  0052FC  CFDF FFEF          	movff	indf2,indf0
 32267                           
 32268                           ; BSR set to: 0
 32269  005300  0100               	movlb	0	; () banked
 32270  005302  2BED               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 32271  005304  D7CD               	goto	l17029
 32272  005306                     l17039:
 32273                           
 32274                           ; BSR set to: 0
 32275                           ;lorawan.c: 1823: }
 32276                           ;lorawan.c: 1824: bufferIndex = bufferIndex + sizeof(loRa.activationParameters.applicati
      +                          onEui);
 32277  005306  0100               	movlb	0	; () banked
 32278  005308  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32279  00530A  0F08               	addlw	8
 32280  00530C  0100               	movlb	0	; () banked
 32281  00530E  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32282                           
 32283                           ; BSR set to: 0
 32284                           ;lorawan.c: 1827: for (iCtr = 0; iCtr < 8; iCtr ++)
 32285  005310  0E00               	movlw	0
 32286  005312  0100               	movlb	0	; () banked
 32287  005314  6FED               	movwf	PrepareJoinRequestFrame@iCtr& (0+255),b
 32288  005316                     l17043:
 32289                           
 32290                           ; BSR set to: 0
 32291  005316  0E07               	movlw	7
 32292  005318  0100               	movlb	0	; () banked
 32293  00531A  65ED               	cpfsgt	PrepareJoinRequestFrame@iCtr& (0+255),b
 32294  00531C  D001               	goto	l17047
 32295  00531E  D02E               	goto	l17053
 32296  005320                     l17047:
 32297                           
 32298                           ; BSR set to: 0
 32299                           ;lorawan.c: 1828: {
 32300                           ;lorawan.c: 1829: macBuffer[bufferIndex + iCtr] = loRa.activationParameters.deviceEui.bu
      +                          ffer[7 - iCtr];
 32301  005320  0100               	movlb	0	; () banked
 32302  005322  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32303  005324  0100               	movlb	0	; () banked
 32304  005326  6FE4               	movwf	??_PrepareJoinRequestFrame& (0+255),b
 32305  005328  6BE5               	clrf	(??_PrepareJoinRequestFrame+1)& (0+255),b
 32306  00532A  0100               	movlb	0	; () banked
 32307  00532C  1FE4               	comf	??_PrepareJoinRequestFrame& (0+255),f,b
 32308  00532E  1FE5               	comf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32309  005330  4BE4               	infsnz	??_PrepareJoinRequestFrame& (0+255),f,b
 32310  005332  2BE5               	incf	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32311  005334  0E07               	movlw	7
 32312  005336  0100               	movlb	0	; () banked
 32313  005338  27E4               	addwf	??_PrepareJoinRequestFrame& (0+255),f,b
 32314  00533A  0E00               	movlw	0
 32315  00533C  23E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),f,b
 32316  00533E  0E5A               	movlw	low (_loRa+90)
 32317  005340  0100               	movlb	0	; () banked
 32318  005342  25E4               	addwf	??_PrepareJoinRequestFrame& (0+255),w,b
 32319  005344  6ED9               	movwf	fsr2l,c
 32320  005346  0E02               	movlw	high (_loRa+90)
 32321  005348  0100               	movlb	0	; () banked
 32322  00534A  21E5               	addwfc	(??_PrepareJoinRequestFrame+1)& (0+255),w,b
 32323  00534C  6EDA               	movwf	fsr2h,c
 32324  00534E  0100               	movlb	0	; () banked
 32325  005350  51ED               	movf	PrepareJoinRequestFrame@iCtr& (0+255),w,b
 32326  005352  C0EE  F0E6         	movff	PrepareJoinRequestFrame@bufferIndex,??_PrepareJoinRequestFrame+2
 32327  005356  0100               	movlb	0	; () banked
 32328  005358  6BE7               	clrf	(??_PrepareJoinRequestFrame+3)& (0+255),b
 32329  00535A  0100               	movlb	0	; () banked
 32330  00535C  27E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),f,b
 32331  00535E  0E00               	movlw	0
 32332  005360  23E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),f,b
 32333  005362  0EE0               	movlw	low _macBuffer
 32334  005364  0100               	movlb	0	; () banked
 32335  005366  25E6               	addwf	(??_PrepareJoinRequestFrame+2)& (0+255),w,b
 32336  005368  6EE9               	movwf	fsr0l,c
 32337  00536A  0E04               	movlw	high _macBuffer
 32338  00536C  0100               	movlb	0	; () banked
 32339  00536E  21E7               	addwfc	(??_PrepareJoinRequestFrame+3)& (0+255),w,b
 32340  005370  6EEA               	movwf	fsr0h,c
 32341  005372  CFDF FFEF          	movff	indf2,indf0
 32342                           
 32343                           ; BSR set to: 0
 32344  005376  0100               	movlb	0	; () banked
 32345  005378  2BED               	incf	PrepareJoinRequestFrame@iCtr& (0+255),f,b
 32346  00537A  D7CD               	goto	l17043
 32347  00537C                     l17053:
 32348                           
 32349                           ; BSR set to: 0
 32350                           ;lorawan.c: 1830: }
 32351                           ;lorawan.c: 1831: bufferIndex = bufferIndex + sizeof( loRa.activationParameters.deviceEu
      +                          i );
 32352  00537C  0100               	movlb	0	; () banked
 32353  00537E  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32354  005380  0F08               	addlw	8
 32355  005382  0100               	movlb	0	; () banked
 32356  005384  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32357                           
 32358                           ; BSR set to: 0
 32359                           ;lorawan.c: 1833: loRa.devNonce = Random ((65535U));
 32360  005386  0EFF               	movlw	255
 32361  005388  0100               	movlb	0	; () banked
 32362  00538A  6FB2               	movwf	(Random@max+1)& (0+255),b
 32363  00538C  69B1               	setf	Random@max& (0+255),b
 32364  00538E  EC05  F050         	call	_Random	;wreg free
 32365  005392  C0B1  F2D2         	movff	?_Random,_loRa+210
 32366  005396  C0B2  F2D3         	movff	?_Random+1,_loRa+211
 32367                           
 32368                           ;lorawan.c: 1834: memcpy (&macBuffer[bufferIndex], &loRa.devNonce, sizeof (loRa.devNonce
      +                          ) );
 32369  00539A  0100               	movlb	0	; () banked
 32370  00539C  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32371  00539E  0D01               	mullw	1
 32372  0053A0  0EE0               	movlw	low _macBuffer
 32373  0053A2  24F3               	addwf	prodl,w,c
 32374  0053A4  0100               	movlb	0	; () banked
 32375  0053A6  6F64               	movwf	memcpy@d1& (0+255),b
 32376  0053A8  0E04               	movlw	high _macBuffer
 32377  0053AA  20F4               	addwfc	prodh,w,c
 32378  0053AC  0100               	movlb	0	; () banked
 32379  0053AE  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32380  0053B0  0ED2               	movlw	low (_loRa+210)
 32381  0053B2  0100               	movlb	0	; () banked
 32382  0053B4  6F66               	movwf	memcpy@s1& (0+255),b
 32383  0053B6  0E02               	movlw	high (_loRa+210)
 32384  0053B8  0100               	movlb	0	; () banked
 32385  0053BA  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32386  0053BC  0E00               	movlw	0
 32387  0053BE  0100               	movlb	0	; () banked
 32388  0053C0  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32389  0053C2  0E02               	movlw	2
 32390  0053C4  6F68               	movwf	memcpy@n& (0+255),b
 32391  0053C6  EC07  F049         	call	_memcpy	;wreg free
 32392                           
 32393                           ;lorawan.c: 1835: bufferIndex = bufferIndex + sizeof( loRa.devNonce );
 32394  0053CA  0100               	movlb	0	; () banked
 32395  0053CC  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32396  0053CE  0F02               	addlw	2
 32397  0053D0  0100               	movlb	0	; () banked
 32398  0053D2  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32399                           
 32400                           ; BSR set to: 0
 32401                           ;lorawan.c: 1837: mic = ComputeMic (loRa.activationParameters.applicationKey, macBuffer,
      +                           bufferIndex);
 32402  0053D4  0E42               	movlw	low (_loRa+66)
 32403  0053D6  0100               	movlb	0	; () banked
 32404  0053D8  6FDB               	movwf	ComputeMic@key& (0+255),b
 32405  0053DA  0E02               	movlw	high (_loRa+66)
 32406  0053DC  0100               	movlb	0	; () banked
 32407  0053DE  6FDC               	movwf	(ComputeMic@key+1)& (0+255),b
 32408  0053E0  0EE0               	movlw	low _macBuffer
 32409  0053E2  0100               	movlb	0	; () banked
 32410  0053E4  6FDD               	movwf	ComputeMic@buffer& (0+255),b
 32411  0053E6  0E04               	movlw	high _macBuffer
 32412  0053E8  0100               	movlb	0	; () banked
 32413  0053EA  6FDE               	movwf	(ComputeMic@buffer+1)& (0+255),b
 32414  0053EC  C0EE  F0DF         	movff	PrepareJoinRequestFrame@bufferIndex,ComputeMic@bufferLength
 32415  0053F0  EC6B  F047         	call	_ComputeMic	;wreg free
 32416  0053F4  C0DB  F0E8         	movff	?_ComputeMic,PrepareJoinRequestFrame@mic
 32417  0053F8  C0DC  F0E9         	movff	?_ComputeMic+1,PrepareJoinRequestFrame@mic+1
 32418  0053FC  C0DD  F0EA         	movff	?_ComputeMic+2,PrepareJoinRequestFrame@mic+2
 32419  005400  C0DE  F0EB         	movff	?_ComputeMic+3,PrepareJoinRequestFrame@mic+3
 32420                           
 32421                           ;lorawan.c: 1839: memcpy ( &macBuffer[bufferIndex], &mic, sizeof (mic));
 32422  005404  0100               	movlb	0	; () banked
 32423  005406  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32424  005408  0D01               	mullw	1
 32425  00540A  0EE0               	movlw	low _macBuffer
 32426  00540C  24F3               	addwf	prodl,w,c
 32427  00540E  0100               	movlb	0	; () banked
 32428  005410  6F64               	movwf	memcpy@d1& (0+255),b
 32429  005412  0E04               	movlw	high _macBuffer
 32430  005414  20F4               	addwfc	prodh,w,c
 32431  005416  0100               	movlb	0	; () banked
 32432  005418  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32433  00541A  0EE8               	movlw	low PrepareJoinRequestFrame@mic
 32434  00541C  0100               	movlb	0	; () banked
 32435  00541E  6F66               	movwf	memcpy@s1& (0+255),b
 32436  005420  0E00               	movlw	high PrepareJoinRequestFrame@mic
 32437  005422  0100               	movlb	0	; () banked
 32438  005424  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32439  005426  0E00               	movlw	0
 32440  005428  0100               	movlb	0	; () banked
 32441  00542A  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32442  00542C  0E04               	movlw	4
 32443  00542E  6F68               	movwf	memcpy@n& (0+255),b
 32444  005430  EC07  F049         	call	_memcpy	;wreg free
 32445                           
 32446                           ;lorawan.c: 1840: bufferIndex = bufferIndex + sizeof(mic);
 32447  005434  0100               	movlb	0	; () banked
 32448  005436  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32449  005438  0F04               	addlw	4
 32450  00543A  0100               	movlb	0	; () banked
 32451  00543C  6FEE               	movwf	PrepareJoinRequestFrame@bufferIndex& (0+255),b
 32452                           
 32453                           ; BSR set to: 0
 32454                           ;lorawan.c: 1842: return bufferIndex;
 32455  00543E  0100               	movlb	0	; () banked
 32456  005440  51EE               	movf	PrepareJoinRequestFrame@bufferIndex& (0+255),w,b
 32457  005442  0012               	return	
 32458  005444                     __end_of_PrepareJoinRequestFrame:
 32459                           	opt stack 0
 32460                           tosu	equ	0xFFF
 32461                           tosh	equ	0xFFE
 32462                           tosl	equ	0xFFD
 32463                           pclath	equ	0xFFA
 32464                           tblptru	equ	0xFF8
 32465                           tblptrh	equ	0xFF7
 32466                           tblptrl	equ	0xFF6
 32467                           tablat	equ	0xFF5
 32468                           prodh	equ	0xFF4
 32469                           prodl	equ	0xFF3
 32470                           intcon	equ	0xFF2
 32471                           intcon2	equ	0xFF1
 32472                           intcon3	equ	0xFF0
 32473                           indf0	equ	0xFEF
 32474                           postinc0	equ	0xFEE
 32475                           fsr0h	equ	0xFEA
 32476                           fsr0l	equ	0xFE9
 32477                           wreg	equ	0xFE8
 32478                           postinc1	equ	0xFE6
 32479                           postdec1	equ	0xFE5
 32480                           plusw1	equ	0xFE3
 32481                           fsr1h	equ	0xFE2
 32482                           fsr1l	equ	0xFE1
 32483                           indf2	equ	0xFDF
 32484                           postinc2	equ	0xFDE
 32485                           postdec2	equ	0xFDD
 32486                           plusw2	equ	0xFDB
 32487                           fsr2h	equ	0xFDA
 32488                           fsr2l	equ	0xFD9
 32489                           status	equ	0xFD8
 32490                           
 32491 ;; *************** function _Random *****************
 32492 ;; Defined at:
 32493 ;;		line 1116 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32494 ;; Parameters:    Size  Location     Type
 32495 ;;  max             2   81[BANK0 ] unsigned int 
 32496 ;; Auto vars:     Size  Location     Type
 32497 ;;		None
 32498 ;; Return value:  Size  Location     Type
 32499 ;;                  2   81[BANK0 ] unsigned int 
 32500 ;; Registers used:
 32501 ;;		wreg, status,2, status,0, cstack
 32502 ;; Tracked objects:
 32503 ;;		On entry : 0/0
 32504 ;;		On exit  : 0/0
 32505 ;;		Unchanged: 0/0
 32506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32507 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32510 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32511 ;;Total ram usage:        2 bytes
 32512 ;; Hardware stack levels used:    1
 32513 ;; Hardware stack levels required when called:    9
 32514 ;; This function calls:
 32515 ;;		___lwmod
 32516 ;;		_rand
 32517 ;; This function is called by:
 32518 ;;		_SearchAvailableChannel
 32519 ;;		_PrepareJoinRequestFrame
 32520 ;; This function uses a non-reentrant model
 32521 ;;
 32522                           
 32523                           	psect	text147
 32524  00A00A                     __ptext147:
 32525                           	opt stack 0
 32526  00A00A                     _Random:
 32527                           	opt stack 17
 32528                           
 32529                           ;lorawan.c: 1118: return (rand () % max);
 32530                           
 32531                           ; BSR set to: 0
 32532                           ;incstack = 0
 32533  00A00A  EC97  F049         	call	_rand	;wreg free
 32534  00A00E  C0AA  F0AC         	movff	?_rand,___lwmod@dividend
 32535  00A012  C0AB  F0AD         	movff	?_rand+1,___lwmod@dividend+1
 32536  00A016  C0B1  F0AE         	movff	Random@max,___lwmod@divisor
 32537  00A01A  C0B2  F0AF         	movff	Random@max+1,___lwmod@divisor+1
 32538  00A01E  ECD6  F048         	call	___lwmod	;wreg free
 32539  00A022  C0AC  F0B1         	movff	?___lwmod,?_Random
 32540  00A026  C0AD  F0B2         	movff	?___lwmod+1,?_Random+1
 32541  00A02A  0012               	return	
 32542  00A02C                     __end_of_Random:
 32543                           	opt stack 0
 32544                           tosu	equ	0xFFF
 32545                           tosh	equ	0xFFE
 32546                           tosl	equ	0xFFD
 32547                           pclath	equ	0xFFA
 32548                           tblptru	equ	0xFF8
 32549                           tblptrh	equ	0xFF7
 32550                           tblptrl	equ	0xFF6
 32551                           tablat	equ	0xFF5
 32552                           prodh	equ	0xFF4
 32553                           prodl	equ	0xFF3
 32554                           intcon	equ	0xFF2
 32555                           intcon2	equ	0xFF1
 32556                           intcon3	equ	0xFF0
 32557                           indf0	equ	0xFEF
 32558                           postinc0	equ	0xFEE
 32559                           fsr0h	equ	0xFEA
 32560                           fsr0l	equ	0xFE9
 32561                           wreg	equ	0xFE8
 32562                           postinc1	equ	0xFE6
 32563                           postdec1	equ	0xFE5
 32564                           plusw1	equ	0xFE3
 32565                           fsr1h	equ	0xFE2
 32566                           fsr1l	equ	0xFE1
 32567                           indf2	equ	0xFDF
 32568                           postinc2	equ	0xFDE
 32569                           postdec2	equ	0xFDD
 32570                           plusw2	equ	0xFDB
 32571                           fsr2h	equ	0xFDA
 32572                           fsr2l	equ	0xFD9
 32573                           status	equ	0xFD8
 32574                           
 32575 ;; *************** function _rand *****************
 32576 ;; Defined at:
 32577 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 32578 ;; Parameters:    Size  Location     Type
 32579 ;;		None
 32580 ;; Auto vars:     Size  Location     Type
 32581 ;;		None
 32582 ;; Return value:  Size  Location     Type
 32583 ;;                  2   74[BANK0 ] int 
 32584 ;; Registers used:
 32585 ;;		wreg, status,2, status,0, cstack
 32586 ;; Tracked objects:
 32587 ;;		On entry : 0/0
 32588 ;;		On exit  : 0/0
 32589 ;;		Unchanged: 0/0
 32590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32591 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32594 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32595 ;;Total ram usage:        2 bytes
 32596 ;; Hardware stack levels used:    1
 32597 ;; Hardware stack levels required when called:    8
 32598 ;; This function calls:
 32599 ;;		___lmul
 32600 ;; This function is called by:
 32601 ;;		_Random
 32602 ;; This function uses a non-reentrant model
 32603 ;;
 32604                           
 32605                           	psect	text148
 32606  00932E                     __ptext148:
 32607                           	opt stack 0
 32608  00932E                     _rand:
 32609                           	opt stack 17
 32610                           
 32611                           ;incstack = 0
 32612  00932E  C1E8  F09E         	movff	_randx,___lmul@multiplier
 32613  009332  C1E9  F09F         	movff	_randx+1,___lmul@multiplier+1
 32614  009336  C1EA  F0A0         	movff	_randx+2,___lmul@multiplier+2
 32615  00933A  C1EB  F0A1         	movff	_randx+3,___lmul@multiplier+3
 32616  00933E  0E6D               	movlw	109
 32617  009340  0100               	movlb	0	; () banked
 32618  009342  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 32619  009344  0E4E               	movlw	78
 32620  009346  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 32621  009348  0EC6               	movlw	198
 32622  00934A  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 32623  00934C  0E41               	movlw	65
 32624  00934E  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 32625  009350  ECBF  F046         	call	___lmul	;wreg free
 32626  009354  C09E  F1E8         	movff	?___lmul,_randx
 32627  009358  C09F  F1E9         	movff	?___lmul+1,_randx+1
 32628  00935C  C0A0  F1EA         	movff	?___lmul+2,_randx+2
 32629  009360  C0A1  F1EB         	movff	?___lmul+3,_randx+3
 32630  009364  0E39               	movlw	57
 32631  009366  0101               	movlb	1	; () banked
 32632  009368  27E8               	addwf	_randx& (0+255),f,b
 32633  00936A  0E30               	movlw	48
 32634  00936C  23E9               	addwfc	(_randx+1)& (0+255),f,b
 32635  00936E  0E00               	movlw	0
 32636  009370  23EA               	addwfc	(_randx+2)& (0+255),f,b
 32637  009372  0E00               	movlw	0
 32638  009374  23EB               	addwfc	(_randx+3)& (0+255),f,b
 32639                           
 32640                           ; BSR set to: 1
 32641  009376  0EFF               	movlw	255
 32642  009378  0101               	movlb	1	; () banked
 32643  00937A  15EA               	andwf	(_randx+2)& (0+255),w,b
 32644  00937C  0100               	movlb	0	; () banked
 32645  00937E  6FAA               	movwf	?_rand& (0+255),b
 32646  009380  0E7F               	movlw	127
 32647  009382  0101               	movlb	1	; () banked
 32648  009384  15EB               	andwf	(_randx+3)& (0+255),w,b
 32649  009386  0100               	movlb	0	; () banked
 32650  009388  6FAB               	movwf	(?_rand+1)& (0+255),b
 32651  00938A  0012               	return	
 32652  00938C                     __end_of_rand:
 32653                           	opt stack 0
 32654                           tosu	equ	0xFFF
 32655                           tosh	equ	0xFFE
 32656                           tosl	equ	0xFFD
 32657                           pclath	equ	0xFFA
 32658                           tblptru	equ	0xFF8
 32659                           tblptrh	equ	0xFF7
 32660                           tblptrl	equ	0xFF6
 32661                           tablat	equ	0xFF5
 32662                           prodh	equ	0xFF4
 32663                           prodl	equ	0xFF3
 32664                           intcon	equ	0xFF2
 32665                           intcon2	equ	0xFF1
 32666                           intcon3	equ	0xFF0
 32667                           indf0	equ	0xFEF
 32668                           postinc0	equ	0xFEE
 32669                           fsr0h	equ	0xFEA
 32670                           fsr0l	equ	0xFE9
 32671                           wreg	equ	0xFE8
 32672                           postinc1	equ	0xFE6
 32673                           postdec1	equ	0xFE5
 32674                           plusw1	equ	0xFE3
 32675                           fsr1h	equ	0xFE2
 32676                           fsr1l	equ	0xFE1
 32677                           indf2	equ	0xFDF
 32678                           postinc2	equ	0xFDE
 32679                           postdec2	equ	0xFDD
 32680                           plusw2	equ	0xFDB
 32681                           fsr2h	equ	0xFDA
 32682                           fsr2l	equ	0xFD9
 32683                           status	equ	0xFD8
 32684                           
 32685 ;; *************** function ___lwmod *****************
 32686 ;; Defined at:
 32687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lwmod.c"
 32688 ;; Parameters:    Size  Location     Type
 32689 ;;  dividend        2   76[BANK0 ] unsigned int 
 32690 ;;  divisor         2   78[BANK0 ] unsigned int 
 32691 ;; Auto vars:     Size  Location     Type
 32692 ;;  counter         1   80[BANK0 ] unsigned char 
 32693 ;; Return value:  Size  Location     Type
 32694 ;;                  2   76[BANK0 ] unsigned int 
 32695 ;; Registers used:
 32696 ;;		wreg, status,2, status,0
 32697 ;; Tracked objects:
 32698 ;;		On entry : 0/0
 32699 ;;		On exit  : 0/0
 32700 ;;		Unchanged: 0/0
 32701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32702 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32703 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32704 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32705 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32706 ;;Total ram usage:        5 bytes
 32707 ;; Hardware stack levels used:    1
 32708 ;; Hardware stack levels required when called:    7
 32709 ;; This function calls:
 32710 ;;		Nothing
 32711 ;; This function is called by:
 32712 ;;		_Random
 32713 ;; This function uses a non-reentrant model
 32714 ;;
 32715                           
 32716                           	psect	text149
 32717  0091AC                     __ptext149:
 32718                           	opt stack 0
 32719  0091AC                     ___lwmod:
 32720                           	opt stack 18
 32721                           
 32722                           ; BSR set to: 0
 32723                           ;incstack = 0
 32724  0091AC  0100               	movlb	0	; () banked
 32725  0091AE  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32726  0091B0  0100               	movlb	0	; () banked
 32727  0091B2  11AF               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 32728  0091B4  B4D8               	btfsc	status,2,c
 32729  0091B6  D026               	goto	l3112
 32730                           
 32731                           ; BSR set to: 0
 32732  0091B8  0E01               	movlw	1
 32733  0091BA  0100               	movlb	0	; () banked
 32734  0091BC  6FB0               	movwf	___lwmod@counter& (0+255),b
 32735  0091BE  D006               	goto	l13733
 32736  0091C0                     l13731:
 32737                           
 32738                           ; BSR set to: 0
 32739  0091C0  0100               	movlb	0	; () banked
 32740  0091C2  90D8               	bcf	status,0,c
 32741  0091C4  37AE               	rlcf	___lwmod@divisor& (0+255),f,b
 32742  0091C6  37AF               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 32743  0091C8  0100               	movlb	0	; () banked
 32744  0091CA  2BB0               	incf	___lwmod@counter& (0+255),f,b
 32745  0091CC                     l13733:
 32746                           
 32747                           ; BSR set to: 0
 32748  0091CC  0100               	movlb	0	; () banked
 32749  0091CE  AFAF               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 32750  0091D0  D7F7               	goto	l13731
 32751  0091D2                     l13735:
 32752                           
 32753                           ; BSR set to: 0
 32754  0091D2  0100               	movlb	0	; () banked
 32755  0091D4  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32756  0091D6  0100               	movlb	0	; () banked
 32757  0091D8  5DAC               	subwf	___lwmod@dividend& (0+255),w,b
 32758  0091DA  0100               	movlb	0	; () banked
 32759  0091DC  51AF               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32760  0091DE  0100               	movlb	0	; () banked
 32761  0091E0  59AD               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 32762  0091E2  A0D8               	btfss	status,0,c
 32763  0091E4  D008               	goto	l13739
 32764                           
 32765                           ; BSR set to: 0
 32766  0091E6  0100               	movlb	0	; () banked
 32767  0091E8  51AE               	movf	___lwmod@divisor& (0+255),w,b
 32768  0091EA  0100               	movlb	0	; () banked
 32769  0091EC  5FAC               	subwf	___lwmod@dividend& (0+255),f,b
 32770  0091EE  0100               	movlb	0	; () banked
 32771  0091F0  51AF               	movf	(___lwmod@divisor+1)& (0+255),w,b
 32772  0091F2  0100               	movlb	0	; () banked
 32773  0091F4  5BAD               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 32774  0091F6                     l13739:
 32775                           
 32776                           ; BSR set to: 0
 32777  0091F6  0100               	movlb	0	; () banked
 32778  0091F8  90D8               	bcf	status,0,c
 32779  0091FA  33AF               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 32780  0091FC  33AE               	rrcf	___lwmod@divisor& (0+255),f,b
 32781                           
 32782                           ; BSR set to: 0
 32783  0091FE  0100               	movlb	0	; () banked
 32784  009200  2FB0               	decfsz	___lwmod@counter& (0+255),f,b
 32785  009202  D7E7               	goto	l13735
 32786  009204                     l3112:
 32787                           
 32788                           ; BSR set to: 0
 32789  009204  C0AC  F0AC         	movff	___lwmod@dividend,?___lwmod
 32790  009208  C0AD  F0AD         	movff	___lwmod@dividend+1,?___lwmod+1
 32791                           
 32792                           ; BSR set to: 0
 32793  00920C  0012               	return		;funcret
 32794  00920E                     __end_of___lwmod:
 32795                           	opt stack 0
 32796                           tosu	equ	0xFFF
 32797                           tosh	equ	0xFFE
 32798                           tosl	equ	0xFFD
 32799                           pclath	equ	0xFFA
 32800                           tblptru	equ	0xFF8
 32801                           tblptrh	equ	0xFF7
 32802                           tblptrl	equ	0xFF6
 32803                           tablat	equ	0xFF5
 32804                           prodh	equ	0xFF4
 32805                           prodl	equ	0xFF3
 32806                           intcon	equ	0xFF2
 32807                           intcon2	equ	0xFF1
 32808                           intcon3	equ	0xFF0
 32809                           indf0	equ	0xFEF
 32810                           postinc0	equ	0xFEE
 32811                           fsr0h	equ	0xFEA
 32812                           fsr0l	equ	0xFE9
 32813                           wreg	equ	0xFE8
 32814                           postinc1	equ	0xFE6
 32815                           postdec1	equ	0xFE5
 32816                           plusw1	equ	0xFE3
 32817                           fsr1h	equ	0xFE2
 32818                           fsr1l	equ	0xFE1
 32819                           indf2	equ	0xFDF
 32820                           postinc2	equ	0xFDE
 32821                           postdec2	equ	0xFDD
 32822                           plusw2	equ	0xFDB
 32823                           fsr2h	equ	0xFDA
 32824                           fsr2l	equ	0xFD9
 32825                           status	equ	0xFD8
 32826                           
 32827 ;; *************** function _ComputeMic *****************
 32828 ;; Defined at:
 32829 ;;		line 2194 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 32830 ;; Parameters:    Size  Location     Type
 32831 ;;  key             2  123[BANK0 ] PTR unsigned char 
 32832 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32833 ;;  buffer          2  125[BANK0 ] PTR unsigned char 
 32834 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32835 ;;  bufferLength    1  127[BANK0 ] unsigned char 
 32836 ;; Auto vars:     Size  Location     Type
 32837 ;;  mic             4  128[BANK0 ] unsigned long 
 32838 ;; Return value:  Size  Location     Type
 32839 ;;                  4  123[BANK0 ] unsigned long 
 32840 ;; Registers used:
 32841 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32842 ;; Tracked objects:
 32843 ;;		On entry : 0/0
 32844 ;;		On exit  : 0/0
 32845 ;;		Unchanged: 0/0
 32846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32847 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32848 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32850 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32851 ;;Total ram usage:        9 bytes
 32852 ;; Hardware stack levels used:    1
 32853 ;; Hardware stack levels required when called:   12
 32854 ;; This function calls:
 32855 ;;		_AESCmac
 32856 ;;		_memcpy
 32857 ;; This function is called by:
 32858 ;;		_LORAWAN_RxDone
 32859 ;;		_PrepareJoinRequestFrame
 32860 ;; This function uses a non-reentrant model
 32861 ;;
 32862                           
 32863                           	psect	text150
 32864  008ED6                     __ptext150:
 32865                           	opt stack 0
 32866  008ED6                     _ComputeMic:
 32867                           	opt stack 14
 32868                           
 32869                           ;lorawan.c: 2196: uint32_t mic = 0;
 32870                           
 32871                           ; BSR set to: 0
 32872                           ;incstack = 0
 32873  008ED6  0E00               	movlw	0
 32874  008ED8  0100               	movlb	0	; () banked
 32875  008EDA  6FE0               	movwf	ComputeMic@mic& (0+255),b
 32876  008EDC  0E00               	movlw	0
 32877  008EDE  6FE1               	movwf	(ComputeMic@mic+1)& (0+255),b
 32878  008EE0  0E00               	movlw	0
 32879  008EE2  6FE2               	movwf	(ComputeMic@mic+2)& (0+255),b
 32880  008EE4  0E00               	movlw	0
 32881  008EE6  6FE3               	movwf	(ComputeMic@mic+3)& (0+255),b
 32882                           
 32883                           ; BSR set to: 0
 32884                           ;lorawan.c: 2198: AESCmac(key, aesBuffer, buffer, bufferLength);
 32885  008EE8  C0DB  F0CD         	movff	ComputeMic@key,AESCmac@key
 32886  008EEC  C0DC  F0CE         	movff	ComputeMic@key+1,AESCmac@key+1
 32887  008EF0  0EC2               	movlw	low _aesBuffer
 32888  008EF2  0100               	movlb	0	; () banked
 32889  008EF4  6FCF               	movwf	AESCmac@output& (0+255),b
 32890  008EF6  0E01               	movlw	high _aesBuffer
 32891  008EF8  0100               	movlb	0	; () banked
 32892  008EFA  6FD0               	movwf	(AESCmac@output+1)& (0+255),b
 32893  008EFC  C0DD  F0D1         	movff	ComputeMic@buffer,AESCmac@input
 32894  008F00  C0DE  F0D2         	movff	ComputeMic@buffer+1,AESCmac@input+1
 32895  008F04  C0DF  F0D3         	movff	ComputeMic@bufferLength,AESCmac@size
 32896  008F08  EC13  F016         	call	_AESCmac	;wreg free
 32897                           
 32898                           ;lorawan.c: 2200: memcpy(&mic, aesBuffer, sizeof( mic ));
 32899  008F0C  0EE0               	movlw	low ComputeMic@mic
 32900  008F0E  0100               	movlb	0	; () banked
 32901  008F10  6F64               	movwf	memcpy@d1& (0+255),b
 32902  008F12  0E00               	movlw	high ComputeMic@mic
 32903  008F14  0100               	movlb	0	; () banked
 32904  008F16  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 32905  008F18  0EC2               	movlw	low _aesBuffer
 32906  008F1A  0100               	movlb	0	; () banked
 32907  008F1C  6F66               	movwf	memcpy@s1& (0+255),b
 32908  008F1E  0E01               	movlw	high _aesBuffer
 32909  008F20  0100               	movlb	0	; () banked
 32910  008F22  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 32911  008F24  0E00               	movlw	0
 32912  008F26  0100               	movlb	0	; () banked
 32913  008F28  6F69               	movwf	(memcpy@n+1)& (0+255),b
 32914  008F2A  0E04               	movlw	4
 32915  008F2C  6F68               	movwf	memcpy@n& (0+255),b
 32916  008F2E  EC07  F049         	call	_memcpy	;wreg free
 32917                           
 32918                           ;lorawan.c: 2202: return mic;
 32919  008F32  C0E0  F0DB         	movff	ComputeMic@mic,?_ComputeMic
 32920  008F36  C0E1  F0DC         	movff	ComputeMic@mic+1,?_ComputeMic+1
 32921  008F3A  C0E2  F0DD         	movff	ComputeMic@mic+2,?_ComputeMic+2
 32922  008F3E  C0E3  F0DE         	movff	ComputeMic@mic+3,?_ComputeMic+3
 32923  008F42  0012               	return	
 32924  008F44                     __end_of_ComputeMic:
 32925                           	opt stack 0
 32926                           tosu	equ	0xFFF
 32927                           tosh	equ	0xFFE
 32928                           tosl	equ	0xFFD
 32929                           pclath	equ	0xFFA
 32930                           tblptru	equ	0xFF8
 32931                           tblptrh	equ	0xFF7
 32932                           tblptrl	equ	0xFF6
 32933                           tablat	equ	0xFF5
 32934                           prodh	equ	0xFF4
 32935                           prodl	equ	0xFF3
 32936                           intcon	equ	0xFF2
 32937                           intcon2	equ	0xFF1
 32938                           intcon3	equ	0xFF0
 32939                           indf0	equ	0xFEF
 32940                           postinc0	equ	0xFEE
 32941                           fsr0h	equ	0xFEA
 32942                           fsr0l	equ	0xFE9
 32943                           wreg	equ	0xFE8
 32944                           postinc1	equ	0xFE6
 32945                           postdec1	equ	0xFE5
 32946                           plusw1	equ	0xFE3
 32947                           fsr1h	equ	0xFE2
 32948                           fsr1l	equ	0xFE1
 32949                           indf2	equ	0xFDF
 32950                           postinc2	equ	0xFDE
 32951                           postdec2	equ	0xFDD
 32952                           plusw2	equ	0xFDB
 32953                           fsr2h	equ	0xFDA
 32954                           fsr2l	equ	0xFD9
 32955                           status	equ	0xFD8
 32956                           
 32957 ;; *************** function _AESCmac *****************
 32958 ;; Defined at:
 32959 ;;		line 41 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 32960 ;; Parameters:    Size  Location     Type
 32961 ;;  key             2  109[BANK0 ] PTR unsigned char 
 32962 ;;		 -> loRa.activationParameters(105), loRa(245), 
 32963 ;;  output          2  111[BANK0 ] PTR unsigned char 
 32964 ;;		 -> aesBuffer(16), 
 32965 ;;  input           2  113[BANK0 ] PTR unsigned char 
 32966 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), 
 32967 ;;  size            1  115[BANK0 ] unsigned char 
 32968 ;; Auto vars:     Size  Location     Type
 32969 ;;  x              16   80[BANK1 ] unsigned char [16]
 32970 ;;  y              16   64[BANK1 ] unsigned char [16]
 32971 ;;  padded         16   48[BANK1 ] unsigned char [16]
 32972 ;;  mLast          16   32[BANK1 ] unsigned char [16]
 32973 ;;  k1             16   16[BANK1 ] unsigned char [16]
 32974 ;;  k2             16    0[BANK1 ] unsigned char [16]
 32975 ;;  ptr             2   96[BANK1 ] PTR unsigned char 
 32976 ;;		 -> LORAWAN_RxDone@hdr(2), macBuffer(271), radioBuffer(271), NULL(0), 
 32977 ;;  i               1  101[BANK1 ] unsigned char 
 32978 ;;  j               1  100[BANK1 ] unsigned char 
 32979 ;;  n               1   99[BANK1 ] unsigned char 
 32980 ;;  flag            1   98[BANK1 ] unsigned char 
 32981 ;; Return value:  Size  Location     Type
 32982 ;;                  1    wreg      void 
 32983 ;; Registers used:
 32984 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32985 ;; Tracked objects:
 32986 ;;		On entry : 0/0
 32987 ;;		On exit  : 0/0
 32988 ;;		Unchanged: 0/0
 32989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 32990 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32991 ;;      Locals:         0       0     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32992 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32993 ;;      Totals:         0      14     102       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 32994 ;;Total ram usage:      116 bytes
 32995 ;; Hardware stack levels used:    1
 32996 ;; Hardware stack levels required when called:   11
 32997 ;; This function calls:
 32998 ;;		_AESEncodeLoRa
 32999 ;;		_GenerateSubkey
 33000 ;;		_memcpy
 33001 ;;		_memset
 33002 ;; This function is called by:
 33003 ;;		_LORAWAN_RxDone
 33004 ;;		_AssemblePacket
 33005 ;;		_ComputeMic
 33006 ;; This function uses a non-reentrant model
 33007 ;;
 33008                           
 33009                           	psect	text151
 33010  002C26                     __ptext151:
 33011                           	opt stack 0
 33012  002C26                     _AESCmac:
 33013                           	opt stack 16
 33014                           
 33015                           ;lorawan_aes_cmac.c: 43: uint8_t n = 0, i = 0, j =0;
 33016                           
 33017                           ;incstack = 0
 33018  002C26  0E00               	movlw	0
 33019  002C28  0101               	movlb	1	; () banked
 33020  002C2A  6F63               	movwf	AESCmac@n& (0+255),b
 33021  002C2C  0E00               	movlw	0
 33022  002C2E  0101               	movlb	1	; () banked
 33023  002C30  6F65               	movwf	AESCmac@i& (0+255),b
 33024  002C32  0E00               	movlw	0
 33025  002C34  0101               	movlb	1	; () banked
 33026  002C36  6F64               	movwf	AESCmac@j& (0+255),b
 33027                           
 33028                           ;lorawan_aes_cmac.c: 44: bool flag = 0;
 33029  002C38  0E00               	movlw	0
 33030  002C3A  0101               	movlb	1	; () banked
 33031  002C3C  6F62               	movwf	AESCmac@flag& (0+255),b
 33032                           
 33033                           ; BSR set to: 1
 33034                           ;lorawan_aes_cmac.c: 45: uint8_t k1[16], k2[16];
 33035                           ;lorawan_aes_cmac.c: 46: uint8_t x[16], y[16], mLast[16], padded[16];
 33036                           ;lorawan_aes_cmac.c: 47: uint8_t *ptr = (0);
 33037  002C3E  0E00               	movlw	0
 33038  002C40  0101               	movlb	1	; () banked
 33039  002C42  6F60               	movwf	AESCmac@ptr& (0+255),b
 33040  002C44  0E00               	movlw	0
 33041  002C46  0101               	movlb	1	; () banked
 33042  002C48  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 33043                           
 33044                           ; BSR set to: 1
 33045                           ;lorawan_aes_cmac.c: 49: GenerateSubkey(key, k1, k2);
 33046  002C4A  C0CD  F0A5         	movff	AESCmac@key,GenerateSubkey@key
 33047  002C4E  C0CE  F0A6         	movff	AESCmac@key+1,GenerateSubkey@key+1
 33048  002C52  0E10               	movlw	low AESCmac@k1
 33049  002C54  0100               	movlb	0	; () banked
 33050  002C56  6FA7               	movwf	GenerateSubkey@k1& (0+255),b
 33051  002C58  0E01               	movlw	high AESCmac@k1
 33052  002C5A  0100               	movlb	0	; () banked
 33053  002C5C  6FA8               	movwf	(GenerateSubkey@k1+1)& (0+255),b
 33054  002C5E  0E00               	movlw	low AESCmac@k2
 33055  002C60  0100               	movlb	0	; () banked
 33056  002C62  6FA9               	movwf	GenerateSubkey@k2& (0+255),b
 33057  002C64  0E01               	movlw	high AESCmac@k2
 33058  002C66  0100               	movlb	0	; () banked
 33059  002C68  6FAA               	movwf	(GenerateSubkey@k2+1)& (0+255),b
 33060  002C6A  ECB5  F02D         	call	_GenerateSubkey	;wreg free
 33061                           
 33062                           ;lorawan_aes_cmac.c: 51: n = (size + 15) >> (4);
 33063  002C6E  0100               	movlb	0	; () banked
 33064  002C70  51D3               	movf	AESCmac@size& (0+255),w,b
 33065  002C72  0100               	movlb	0	; () banked
 33066  002C74  6FD4               	movwf	??_AESCmac& (0+255),b
 33067  002C76  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33068  002C78  0E0F               	movlw	15
 33069  002C7A  0100               	movlb	0	; () banked
 33070  002C7C  27D4               	addwf	??_AESCmac& (0+255),f,b
 33071  002C7E  0E00               	movlw	0
 33072  002C80  23D5               	addwfc	(??_AESCmac+1)& (0+255),f,b
 33073  002C82  0E04               	movlw	4
 33074  002C84  0100               	movlb	0	; () banked
 33075  002C86  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33076  002C88                     u16245:
 33077  002C88  0100               	movlb	0	; () banked
 33078  002C8A  35D5               	rlcf	(??_AESCmac+1)& (0+255),w,b
 33079  002C8C  33D5               	rrcf	(??_AESCmac+1)& (0+255),f,b
 33080  002C8E  33D4               	rrcf	??_AESCmac& (0+255),f,b
 33081  002C90  0100               	movlb	0	; () banked
 33082  002C92  2FD6               	decfsz	(??_AESCmac+2)& (0+255),f,b
 33083  002C94  D7F9               	goto	u16245
 33084  002C96  0100               	movlb	0	; () banked
 33085  002C98  51D4               	movf	??_AESCmac& (0+255),w,b
 33086  002C9A  0101               	movlb	1	; () banked
 33087  002C9C  6F63               	movwf	AESCmac@n& (0+255),b
 33088                           
 33089                           ; BSR set to: 1
 33090                           ;lorawan_aes_cmac.c: 52: if (n == 0)
 33091  002C9E  0101               	movlb	1	; () banked
 33092  002CA0  5163               	movf	AESCmac@n& (0+255),w,b
 33093  002CA2  0101               	movlb	1	; () banked
 33094  002CA4  A4D8               	btfss	status,2,c
 33095  002CA6  D004               	goto	l14423
 33096                           
 33097                           ; BSR set to: 1
 33098                           ;lorawan_aes_cmac.c: 53: {
 33099                           ;lorawan_aes_cmac.c: 54: n = 1;
 33100  002CA8  0E01               	movlw	1
 33101  002CAA  0101               	movlb	1	; () banked
 33102  002CAC  6F63               	movwf	AESCmac@n& (0+255),b
 33103  002CAE  D009               	goto	u16260
 33104  002CB0                     l14423:
 33105                           
 33106                           ; BSR set to: 1
 33107                           ;lorawan_aes_cmac.c: 57: else
 33108                           ;lorawan_aes_cmac.c: 58: {
 33109                           ;lorawan_aes_cmac.c: 59: flag = !(size % 16);
 33110  002CB0  C0D3  F0D4         	movff	AESCmac@size,??_AESCmac
 33111  002CB4  0E0F               	movlw	15
 33112  002CB6  0100               	movlb	0	; () banked
 33113  002CB8  17D4               	andwf	??_AESCmac& (0+255),f,b
 33114  002CBA  A4D8               	btfss	status,2,c
 33115  002CBC  D002               	goto	u16260
 33116  002CBE  0E01               	movlw	1
 33117  002CC0  D001               	goto	u16270
 33118  002CC2                     u16260:
 33119  002CC2  0E00               	movlw	0
 33120  002CC4                     u16270:
 33121  002CC4  0101               	movlb	1	; () banked
 33122  002CC6  6F62               	movwf	AESCmac@flag& (0+255),b
 33123                           
 33124                           ; BSR set to: 1
 33125                           ;lorawan_aes_cmac.c: 60: }
 33126                           ;lorawan_aes_cmac.c: 62: if ( flag == 1 )
 33127  002CC8  0101               	movlb	1	; () banked
 33128  002CCA  0562               	decf	AESCmac@flag& (0+255),w,b
 33129  002CCC  A4D8               	btfss	status,2,c
 33130  002CCE  D057               	goto	l14437
 33131                           
 33132                           ; BSR set to: 1
 33133                           ;lorawan_aes_cmac.c: 63: {
 33134                           ;lorawan_aes_cmac.c: 64: j = 0;
 33135  002CD0  0E00               	movlw	0
 33136  002CD2  0101               	movlb	1	; () banked
 33137  002CD4  6F64               	movwf	AESCmac@j& (0+255),b
 33138                           
 33139                           ; BSR set to: 1
 33140                           ;lorawan_aes_cmac.c: 65: for (i=((n-1) << (4)); i<(n << (4)); i++)
 33141  002CD6  0101               	movlb	1	; () banked
 33142  002CD8  3963               	swapf	AESCmac@n& (0+255),w,b
 33143  002CDA  0BF0               	andlw	240
 33144  002CDC  0FF0               	addlw	240
 33145  002CDE  0101               	movlb	1	; () banked
 33146  002CE0  6F65               	movwf	AESCmac@i& (0+255),b
 33147  002CE2  D028               	goto	l14435
 33148  002CE4                     l14429:
 33149                           
 33150                           ;lorawan_aes_cmac.c: 66: {
 33151                           ;lorawan_aes_cmac.c: 67: mLast[j] = input[i] ^ k1[j];
 33152  002CE4  0101               	movlb	1	; () banked
 33153  002CE6  5164               	movf	AESCmac@j& (0+255),w,b
 33154  002CE8  0D01               	mullw	1
 33155  002CEA  0E20               	movlw	low AESCmac@mLast
 33156  002CEC  24F3               	addwf	prodl,w,c
 33157  002CEE  6ED9               	movwf	fsr2l,c
 33158  002CF0  0E01               	movlw	high AESCmac@mLast
 33159  002CF2  20F4               	addwfc	prodh,w,c
 33160  002CF4  6EDA               	movwf	fsr2h,c
 33161  002CF6  0101               	movlb	1	; () banked
 33162  002CF8  5164               	movf	AESCmac@j& (0+255),w,b
 33163  002CFA  0D01               	mullw	1
 33164  002CFC  0E10               	movlw	low AESCmac@k1
 33165  002CFE  24F3               	addwf	prodl,w,c
 33166  002D00  6EE9               	movwf	fsr0l,c
 33167  002D02  0E01               	movlw	high AESCmac@k1
 33168  002D04  20F4               	addwfc	prodh,w,c
 33169  002D06  6EEA               	movwf	fsr0h,c
 33170  002D08  50EF               	movf	indf0,w,c
 33171  002D0A  0100               	movlb	0	; () banked
 33172  002D0C  6FD4               	movwf	??_AESCmac& (0+255),b
 33173  002D0E  0101               	movlb	1	; () banked
 33174  002D10  5165               	movf	AESCmac@i& (0+255),w,b
 33175  002D12  0D01               	mullw	1
 33176  002D14  50F3               	movf	prodl,w,c
 33177  002D16  0100               	movlb	0	; () banked
 33178  002D18  25D1               	addwf	AESCmac@input& (0+255),w,b
 33179  002D1A  6EE9               	movwf	fsr0l,c
 33180  002D1C  50F4               	movf	prodh,w,c
 33181  002D1E  0100               	movlb	0	; () banked
 33182  002D20  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33183  002D22  6EEA               	movwf	fsr0h,c
 33184  002D24  50EF               	movf	indf0,w,c
 33185  002D26  0100               	movlb	0	; () banked
 33186  002D28  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33187  002D2A  6EDF               	movwf	indf2,c
 33188                           
 33189                           ; BSR set to: 0
 33190                           ;lorawan_aes_cmac.c: 68: j++;
 33191  002D2C  0101               	movlb	1	; () banked
 33192  002D2E  2B64               	incf	AESCmac@j& (0+255),f,b
 33193                           
 33194                           ; BSR set to: 1
 33195  002D30  0101               	movlb	1	; () banked
 33196  002D32  2B65               	incf	AESCmac@i& (0+255),f,b
 33197  002D34                     l14435:
 33198                           
 33199                           ; BSR set to: 1
 33200  002D34  0101               	movlb	1	; () banked
 33201  002D36  5163               	movf	AESCmac@n& (0+255),w,b
 33202  002D38  0100               	movlb	0	; () banked
 33203  002D3A  6FD4               	movwf	??_AESCmac& (0+255),b
 33204  002D3C  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33205  002D3E  0100               	movlb	0	; () banked
 33206  002D40  3BD4               	swapf	??_AESCmac& (0+255),f,b
 33207  002D42  3BD5               	swapf	(??_AESCmac+1)& (0+255),f,b
 33208  002D44  0EF0               	movlw	240
 33209  002D46  17D5               	andwf	(??_AESCmac+1)& (0+255),f,b
 33210  002D48  51D4               	movf	??_AESCmac& (0+255),w,b
 33211  002D4A  0B0F               	andlw	15
 33212  002D4C  13D5               	iorwf	(??_AESCmac+1)& (0+255),f,b
 33213  002D4E  0EF0               	movlw	240
 33214  002D50  17D4               	andwf	??_AESCmac& (0+255),f,b
 33215  002D52  0101               	movlb	1	; () banked
 33216  002D54  5165               	movf	AESCmac@i& (0+255),w,b
 33217  002D56  0100               	movlb	0	; () banked
 33218  002D58  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33219  002D5A  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33220  002D5C  0100               	movlb	0	; () banked
 33221  002D5E  51D4               	movf	??_AESCmac& (0+255),w,b
 33222  002D60  0100               	movlb	0	; () banked
 33223  002D62  5DD6               	subwf	(??_AESCmac+2)& (0+255),w,b
 33224  002D64  0100               	movlb	0	; () banked
 33225  002D66  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33226  002D68  0A80               	xorlw	128
 33227  002D6A  0100               	movlb	0	; () banked
 33228  002D6C  6FD8               	movwf	(??_AESCmac+4)& (0+255),b
 33229  002D6E  0100               	movlb	0	; () banked
 33230  002D70  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33231  002D72  0A80               	xorlw	128
 33232  002D74  0100               	movlb	0	; () banked
 33233  002D76  59D8               	subwfb	(??_AESCmac+4)& (0+255),w,b
 33234  002D78  B0D8               	btfsc	status,0,c
 33235  002D7A  D097               	goto	l14471
 33236  002D7C  D7B3               	goto	l14429
 33237  002D7E                     l14437:
 33238                           
 33239                           ;lorawan_aes_cmac.c: 71: else
 33240                           ;lorawan_aes_cmac.c: 72: {
 33241                           ;lorawan_aes_cmac.c: 74: ptr = &input[size - (size%16)];
 33242  002D7E  0100               	movlb	0	; () banked
 33243  002D80  51D3               	movf	AESCmac@size& (0+255),w,b
 33244  002D82  0B0F               	andlw	15
 33245  002D84  0100               	movlb	0	; () banked
 33246  002D86  6FD4               	movwf	??_AESCmac& (0+255),b
 33247  002D88  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33248  002D8A  0100               	movlb	0	; () banked
 33249  002D8C  1FD4               	comf	??_AESCmac& (0+255),f,b
 33250  002D8E  1FD5               	comf	(??_AESCmac+1)& (0+255),f,b
 33251  002D90  4BD4               	infsnz	??_AESCmac& (0+255),f,b
 33252  002D92  2BD5               	incf	(??_AESCmac+1)& (0+255),f,b
 33253  002D94  0100               	movlb	0	; () banked
 33254  002D96  51D3               	movf	AESCmac@size& (0+255),w,b
 33255  002D98  0100               	movlb	0	; () banked
 33256  002D9A  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33257  002D9C  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33258  002D9E  0100               	movlb	0	; () banked
 33259  002DA0  51D4               	movf	??_AESCmac& (0+255),w,b
 33260  002DA2  0100               	movlb	0	; () banked
 33261  002DA4  27D6               	addwf	(??_AESCmac+2)& (0+255),f,b
 33262  002DA6  0100               	movlb	0	; () banked
 33263  002DA8  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33264  002DAA  0100               	movlb	0	; () banked
 33265  002DAC  23D7               	addwfc	(??_AESCmac+3)& (0+255),f,b
 33266  002DAE  0100               	movlb	0	; () banked
 33267  002DB0  51D6               	movf	(??_AESCmac+2)& (0+255),w,b
 33268  002DB2  0100               	movlb	0	; () banked
 33269  002DB4  25D1               	addwf	AESCmac@input& (0+255),w,b
 33270  002DB6  0101               	movlb	1	; () banked
 33271  002DB8  6F60               	movwf	AESCmac@ptr& (0+255),b
 33272  002DBA  0100               	movlb	0	; () banked
 33273  002DBC  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33274  002DBE  0100               	movlb	0	; () banked
 33275  002DC0  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33276  002DC2  0101               	movlb	1	; () banked
 33277  002DC4  6F61               	movwf	(AESCmac@ptr+1)& (0+255),b
 33278                           
 33279                           ; BSR set to: 1
 33280                           ;lorawan_aes_cmac.c: 75: for (i=0; i<16; i++)
 33281  002DC6  0E00               	movlw	0
 33282  002DC8  0101               	movlb	1	; () banked
 33283  002DCA  6F65               	movwf	AESCmac@i& (0+255),b
 33284  002DCC                     l14441:
 33285                           
 33286                           ; BSR set to: 1
 33287  002DCC  0E0F               	movlw	15
 33288  002DCE  0101               	movlb	1	; () banked
 33289  002DD0  6565               	cpfsgt	AESCmac@i& (0+255),b
 33290  002DD2  D001               	goto	l14445
 33291  002DD4  D03D               	goto	l14459
 33292  002DD6                     l14445:
 33293                           
 33294                           ; BSR set to: 1
 33295                           ;lorawan_aes_cmac.c: 76: {
 33296                           ;lorawan_aes_cmac.c: 77: if ( i < (size%16) )
 33297  002DD6  0100               	movlb	0	; () banked
 33298  002DD8  51D3               	movf	AESCmac@size& (0+255),w,b
 33299  002DDA  0B0F               	andlw	15
 33300  002DDC  0101               	movlb	1	; () banked
 33301  002DDE  6165               	cpfslt	AESCmac@i& (0+255),b
 33302  002DE0  D017               	goto	l14449
 33303                           
 33304                           ; BSR set to: 1
 33305                           ;lorawan_aes_cmac.c: 78: {
 33306                           ;lorawan_aes_cmac.c: 79: padded[i] = ptr[i];
 33307  002DE2  0101               	movlb	1	; () banked
 33308  002DE4  5165               	movf	AESCmac@i& (0+255),w,b
 33309  002DE6  0D01               	mullw	1
 33310  002DE8  50F3               	movf	prodl,w,c
 33311  002DEA  0101               	movlb	1	; () banked
 33312  002DEC  2560               	addwf	AESCmac@ptr& (0+255),w,b
 33313  002DEE  6ED9               	movwf	fsr2l,c
 33314  002DF0  50F4               	movf	prodh,w,c
 33315  002DF2  0101               	movlb	1	; () banked
 33316  002DF4  2161               	addwfc	(AESCmac@ptr+1)& (0+255),w,b
 33317  002DF6  6EDA               	movwf	fsr2h,c
 33318  002DF8  0101               	movlb	1	; () banked
 33319  002DFA  5165               	movf	AESCmac@i& (0+255),w,b
 33320  002DFC  0D01               	mullw	1
 33321  002DFE  0E30               	movlw	low AESCmac@padded
 33322  002E00  24F3               	addwf	prodl,w,c
 33323  002E02  6EE9               	movwf	fsr0l,c
 33324  002E04  0E01               	movlw	high AESCmac@padded
 33325  002E06  20F4               	addwfc	prodh,w,c
 33326  002E08  6EEA               	movwf	fsr0h,c
 33327  002E0A  CFDF FFEF          	movff	indf2,indf0
 33328                           
 33329                           ;lorawan_aes_cmac.c: 80: }
 33330  002E0E  D01D               	goto	l14455
 33331  002E10                     l14449:
 33332                           
 33333                           ; BSR set to: 1
 33334                           ;lorawan_aes_cmac.c: 81: else
 33335                           ;lorawan_aes_cmac.c: 82: {
 33336                           ;lorawan_aes_cmac.c: 83: if ( i == (size%16) )
 33337  002E10  0100               	movlb	0	; () banked
 33338  002E12  51D3               	movf	AESCmac@size& (0+255),w,b
 33339  002E14  0B0F               	andlw	15
 33340  002E16  0101               	movlb	1	; () banked
 33341  002E18  1965               	xorwf	AESCmac@i& (0+255),w,b
 33342  002E1A  A4D8               	btfss	status,2,c
 33343  002E1C  D00B               	goto	l14453
 33344                           
 33345                           ; BSR set to: 1
 33346                           ;lorawan_aes_cmac.c: 84: {
 33347                           ;lorawan_aes_cmac.c: 85: padded[i] = 0x80;
 33348  002E1E  0101               	movlb	1	; () banked
 33349  002E20  5165               	movf	AESCmac@i& (0+255),w,b
 33350  002E22  0D01               	mullw	1
 33351  002E24  0E30               	movlw	low AESCmac@padded
 33352  002E26  24F3               	addwf	prodl,w,c
 33353  002E28  6ED9               	movwf	fsr2l,c
 33354  002E2A  0E01               	movlw	high AESCmac@padded
 33355  002E2C  20F4               	addwfc	prodh,w,c
 33356  002E2E  6EDA               	movwf	fsr2h,c
 33357  002E30  0E80               	movlw	128
 33358  002E32  D00A               	goto	L22
 33359  002E34                     l14453:
 33360                           
 33361                           ; BSR set to: 1
 33362                           ;lorawan_aes_cmac.c: 87: else
 33363                           ;lorawan_aes_cmac.c: 88: {
 33364                           ;lorawan_aes_cmac.c: 89: padded[i] = 0x00;
 33365  002E34  0101               	movlb	1	; () banked
 33366  002E36  5165               	movf	AESCmac@i& (0+255),w,b
 33367  002E38  0D01               	mullw	1
 33368  002E3A  0E30               	movlw	low AESCmac@padded
 33369  002E3C  24F3               	addwf	prodl,w,c
 33370  002E3E  6ED9               	movwf	fsr2l,c
 33371  002E40  0E01               	movlw	high AESCmac@padded
 33372  002E42  20F4               	addwfc	prodh,w,c
 33373  002E44  6EDA               	movwf	fsr2h,c
 33374  002E46  0E00               	movlw	0
 33375  002E48                     L22:
 33376  002E48  6EDF               	movwf	indf2,c
 33377  002E4A                     l14455:
 33378                           
 33379                           ; BSR set to: 1
 33380  002E4A  0101               	movlb	1	; () banked
 33381  002E4C  2B65               	incf	AESCmac@i& (0+255),f,b
 33382  002E4E  D7BE               	goto	l14441
 33383  002E50                     l14459:
 33384                           
 33385                           ; BSR set to: 1
 33386                           ;lorawan_aes_cmac.c: 90: }
 33387                           ;lorawan_aes_cmac.c: 91: }
 33388                           ;lorawan_aes_cmac.c: 92: }
 33389                           ;lorawan_aes_cmac.c: 95: for (i=0; i<sizeof(mLast); i++)
 33390  002E50  0E00               	movlw	0
 33391  002E52  0101               	movlb	1	; () banked
 33392  002E54  6F65               	movwf	AESCmac@i& (0+255),b
 33393  002E56                     l14461:
 33394                           
 33395                           ; BSR set to: 1
 33396  002E56  0E0F               	movlw	15
 33397  002E58  0101               	movlb	1	; () banked
 33398  002E5A  6565               	cpfsgt	AESCmac@i& (0+255),b
 33399  002E5C  D001               	goto	l14465
 33400  002E5E  D025               	goto	l14471
 33401  002E60                     l14465:
 33402                           
 33403                           ; BSR set to: 1
 33404                           ;lorawan_aes_cmac.c: 96: {
 33405                           ;lorawan_aes_cmac.c: 97: mLast[i] = padded[i] ^ k2[i];
 33406  002E60  0101               	movlb	1	; () banked
 33407  002E62  5165               	movf	AESCmac@i& (0+255),w,b
 33408  002E64  0D01               	mullw	1
 33409  002E66  0E20               	movlw	low AESCmac@mLast
 33410  002E68  24F3               	addwf	prodl,w,c
 33411  002E6A  6ED9               	movwf	fsr2l,c
 33412  002E6C  0E01               	movlw	high AESCmac@mLast
 33413  002E6E  20F4               	addwfc	prodh,w,c
 33414  002E70  6EDA               	movwf	fsr2h,c
 33415  002E72  0101               	movlb	1	; () banked
 33416  002E74  5165               	movf	AESCmac@i& (0+255),w,b
 33417  002E76  0D01               	mullw	1
 33418  002E78  0E00               	movlw	low AESCmac@k2
 33419  002E7A  24F3               	addwf	prodl,w,c
 33420  002E7C  6EE9               	movwf	fsr0l,c
 33421  002E7E  0E01               	movlw	high AESCmac@k2
 33422  002E80  20F4               	addwfc	prodh,w,c
 33423  002E82  6EEA               	movwf	fsr0h,c
 33424  002E84  50EF               	movf	indf0,w,c
 33425  002E86  0100               	movlb	0	; () banked
 33426  002E88  6FD4               	movwf	??_AESCmac& (0+255),b
 33427  002E8A  0101               	movlb	1	; () banked
 33428  002E8C  5165               	movf	AESCmac@i& (0+255),w,b
 33429  002E8E  0D01               	mullw	1
 33430  002E90  0E30               	movlw	low AESCmac@padded
 33431  002E92  24F3               	addwf	prodl,w,c
 33432  002E94  6EE9               	movwf	fsr0l,c
 33433  002E96  0E01               	movlw	high AESCmac@padded
 33434  002E98  20F4               	addwfc	prodh,w,c
 33435  002E9A  6EEA               	movwf	fsr0h,c
 33436  002E9C  50EF               	movf	indf0,w,c
 33437  002E9E  0100               	movlb	0	; () banked
 33438  002EA0  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33439  002EA2  6EDF               	movwf	indf2,c
 33440                           
 33441                           ; BSR set to: 0
 33442  002EA4  0101               	movlb	1	; () banked
 33443  002EA6  2B65               	incf	AESCmac@i& (0+255),f,b
 33444  002EA8  D7D6               	goto	l14461
 33445  002EAA                     l14471:
 33446                           
 33447                           ;lorawan_aes_cmac.c: 98: }
 33448                           ;lorawan_aes_cmac.c: 99: }
 33449                           ;lorawan_aes_cmac.c: 101: memset(x, 0, sizeof(x));
 33450  002EAA  0E50               	movlw	low AESCmac@x
 33451  002EAC  0100               	movlb	0	; () banked
 33452  002EAE  6F64               	movwf	memset@p1& (0+255),b
 33453  002EB0  0E01               	movlw	high AESCmac@x
 33454  002EB2  0100               	movlb	0	; () banked
 33455  002EB4  6F65               	movwf	(memset@p1+1)& (0+255),b
 33456  002EB6  0E00               	movlw	0
 33457  002EB8  0100               	movlb	0	; () banked
 33458  002EBA  6F67               	movwf	(memset@c+1)& (0+255),b
 33459  002EBC  0E00               	movlw	0
 33460  002EBE  6F66               	movwf	memset@c& (0+255),b
 33461  002EC0  0E00               	movlw	0
 33462  002EC2  0100               	movlb	0	; () banked
 33463  002EC4  6F69               	movwf	(memset@n+1)& (0+255),b
 33464  002EC6  0E10               	movlw	16
 33465  002EC8  6F68               	movwf	memset@n& (0+255),b
 33466  002ECA  EC0B  F04E         	call	_memset	;wreg free
 33467                           
 33468                           ;lorawan_aes_cmac.c: 103: for (i=0; i<(n-1); i++)
 33469  002ECE  0E00               	movlw	0
 33470  002ED0  0101               	movlb	1	; () banked
 33471  002ED2  6F65               	movwf	AESCmac@i& (0+255),b
 33472  002ED4  D064               	goto	l14493
 33473  002ED6                     l14475:
 33474                           
 33475                           ;lorawan_aes_cmac.c: 104: {
 33476                           ;lorawan_aes_cmac.c: 105: for (j=0; j<16; j++)
 33477  002ED6  0E00               	movlw	0
 33478  002ED8  0101               	movlb	1	; () banked
 33479  002EDA  6F64               	movwf	AESCmac@j& (0+255),b
 33480  002EDC                     l14477:
 33481                           
 33482                           ; BSR set to: 1
 33483  002EDC  0E0F               	movlw	15
 33484  002EDE  0101               	movlb	1	; () banked
 33485  002EE0  6564               	cpfsgt	AESCmac@j& (0+255),b
 33486  002EE2  D001               	goto	l14481
 33487  002EE4  D03B               	goto	l14487
 33488  002EE6                     l14481:
 33489                           
 33490                           ; BSR set to: 1
 33491                           ;lorawan_aes_cmac.c: 106: {
 33492                           ;lorawan_aes_cmac.c: 107: y[j] = x[j] ^ input[(i << (4))+j];
 33493  002EE6  0101               	movlb	1	; () banked
 33494  002EE8  5164               	movf	AESCmac@j& (0+255),w,b
 33495  002EEA  0D01               	mullw	1
 33496  002EEC  0E40               	movlw	low AESCmac@y
 33497  002EEE  24F3               	addwf	prodl,w,c
 33498  002EF0  6ED9               	movwf	fsr2l,c
 33499  002EF2  0E01               	movlw	high AESCmac@y
 33500  002EF4  20F4               	addwfc	prodh,w,c
 33501  002EF6  6EDA               	movwf	fsr2h,c
 33502  002EF8  0101               	movlb	1	; () banked
 33503  002EFA  5165               	movf	AESCmac@i& (0+255),w,b
 33504  002EFC  0100               	movlb	0	; () banked
 33505  002EFE  6FD4               	movwf	??_AESCmac& (0+255),b
 33506  002F00  6BD5               	clrf	(??_AESCmac+1)& (0+255),b
 33507  002F02  0100               	movlb	0	; () banked
 33508  002F04  3BD4               	swapf	??_AESCmac& (0+255),f,b
 33509  002F06  3BD5               	swapf	(??_AESCmac+1)& (0+255),f,b
 33510  002F08  0EF0               	movlw	240
 33511  002F0A  17D5               	andwf	(??_AESCmac+1)& (0+255),f,b
 33512  002F0C  51D4               	movf	??_AESCmac& (0+255),w,b
 33513  002F0E  0B0F               	andlw	15
 33514  002F10  13D5               	iorwf	(??_AESCmac+1)& (0+255),f,b
 33515  002F12  0EF0               	movlw	240
 33516  002F14  17D4               	andwf	??_AESCmac& (0+255),f,b
 33517  002F16  0101               	movlb	1	; () banked
 33518  002F18  5164               	movf	AESCmac@j& (0+255),w,b
 33519  002F1A  0100               	movlb	0	; () banked
 33520  002F1C  27D4               	addwf	??_AESCmac& (0+255),f,b
 33521  002F1E  0E00               	movlw	0
 33522  002F20  23D5               	addwfc	(??_AESCmac+1)& (0+255),f,b
 33523  002F22  0100               	movlb	0	; () banked
 33524  002F24  51D4               	movf	??_AESCmac& (0+255),w,b
 33525  002F26  0100               	movlb	0	; () banked
 33526  002F28  25D1               	addwf	AESCmac@input& (0+255),w,b
 33527  002F2A  6EE9               	movwf	fsr0l,c
 33528  002F2C  0100               	movlb	0	; () banked
 33529  002F2E  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33530  002F30  0100               	movlb	0	; () banked
 33531  002F32  21D2               	addwfc	(AESCmac@input+1)& (0+255),w,b
 33532  002F34  6EEA               	movwf	fsr0h,c
 33533  002F36  50EF               	movf	indf0,w,c
 33534  002F38  0100               	movlb	0	; () banked
 33535  002F3A  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33536  002F3C  0101               	movlb	1	; () banked
 33537  002F3E  5164               	movf	AESCmac@j& (0+255),w,b
 33538  002F40  0D01               	mullw	1
 33539  002F42  0E50               	movlw	low AESCmac@x
 33540  002F44  24F3               	addwf	prodl,w,c
 33541  002F46  6EE9               	movwf	fsr0l,c
 33542  002F48  0E01               	movlw	high AESCmac@x
 33543  002F4A  20F4               	addwfc	prodh,w,c
 33544  002F4C  6EEA               	movwf	fsr0h,c
 33545  002F4E  50EF               	movf	indf0,w,c
 33546  002F50  0100               	movlb	0	; () banked
 33547  002F52  19D6               	xorwf	(??_AESCmac+2)& (0+255),w,b
 33548  002F54  6EDF               	movwf	indf2,c
 33549                           
 33550                           ; BSR set to: 0
 33551  002F56  0101               	movlb	1	; () banked
 33552  002F58  2B64               	incf	AESCmac@j& (0+255),f,b
 33553  002F5A  D7C0               	goto	l14477
 33554  002F5C                     l14487:
 33555                           
 33556                           ; BSR set to: 1
 33557                           ;lorawan_aes_cmac.c: 108: }
 33558                           ;lorawan_aes_cmac.c: 109: memcpy(x, y, sizeof(y));
 33559  002F5C  0E50               	movlw	low AESCmac@x
 33560  002F5E  0100               	movlb	0	; () banked
 33561  002F60  6F64               	movwf	memcpy@d1& (0+255),b
 33562  002F62  0E01               	movlw	high AESCmac@x
 33563  002F64  0100               	movlb	0	; () banked
 33564  002F66  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 33565  002F68  0E40               	movlw	low AESCmac@y
 33566  002F6A  0100               	movlb	0	; () banked
 33567  002F6C  6F66               	movwf	memcpy@s1& (0+255),b
 33568  002F6E  0E01               	movlw	high AESCmac@y
 33569  002F70  0100               	movlb	0	; () banked
 33570  002F72  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 33571  002F74  0E00               	movlw	0
 33572  002F76  0100               	movlb	0	; () banked
 33573  002F78  6F69               	movwf	(memcpy@n+1)& (0+255),b
 33574  002F7A  0E10               	movlw	16
 33575  002F7C  6F68               	movwf	memcpy@n& (0+255),b
 33576  002F7E  EC07  F049         	call	_memcpy	;wreg free
 33577                           
 33578                           ;lorawan_aes_cmac.c: 110: AESEncodeLoRa(x,key);
 33579  002F82  0E50               	movlw	low AESCmac@x
 33580  002F84  0100               	movlb	0	; () banked
 33581  002F86  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33582  002F88  0E01               	movlw	high AESCmac@x
 33583  002F8A  0100               	movlb	0	; () banked
 33584  002F8C  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33585  002F8E  C0CD  F093         	movff	AESCmac@key,AESEncodeLoRa@key
 33586  002F92  C0CE  F094         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33587  002F96  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 33588  002F9A  0101               	movlb	1	; () banked
 33589  002F9C  2B65               	incf	AESCmac@i& (0+255),f,b
 33590  002F9E                     l14493:
 33591                           
 33592                           ; BSR set to: 1
 33593  002F9E  0EFF               	movlw	255
 33594  002FA0  0100               	movlb	0	; () banked
 33595  002FA2  6FD4               	movwf	??_AESCmac& (0+255),b
 33596  002FA4  0EFF               	movlw	255
 33597  002FA6  0100               	movlb	0	; () banked
 33598  002FA8  6FD5               	movwf	(??_AESCmac+1)& (0+255),b
 33599  002FAA  0101               	movlb	1	; () banked
 33600  002FAC  5163               	movf	AESCmac@n& (0+255),w,b
 33601  002FAE  0100               	movlb	0	; () banked
 33602  002FB0  6FD6               	movwf	(??_AESCmac+2)& (0+255),b
 33603  002FB2  6BD7               	clrf	(??_AESCmac+3)& (0+255),b
 33604  002FB4  0100               	movlb	0	; () banked
 33605  002FB6  51D4               	movf	??_AESCmac& (0+255),w,b
 33606  002FB8  0100               	movlb	0	; () banked
 33607  002FBA  27D6               	addwf	(??_AESCmac+2)& (0+255),f,b
 33608  002FBC  0100               	movlb	0	; () banked
 33609  002FBE  51D5               	movf	(??_AESCmac+1)& (0+255),w,b
 33610  002FC0  0100               	movlb	0	; () banked
 33611  002FC2  23D7               	addwfc	(??_AESCmac+3)& (0+255),f,b
 33612  002FC4  0101               	movlb	1	; () banked
 33613  002FC6  5165               	movf	AESCmac@i& (0+255),w,b
 33614  002FC8  0100               	movlb	0	; () banked
 33615  002FCA  6FD8               	movwf	(??_AESCmac+4)& (0+255),b
 33616  002FCC  6BD9               	clrf	(??_AESCmac+5)& (0+255),b
 33617  002FCE  0100               	movlb	0	; () banked
 33618  002FD0  51D6               	movf	(??_AESCmac+2)& (0+255),w,b
 33619  002FD2  0100               	movlb	0	; () banked
 33620  002FD4  5DD8               	subwf	(??_AESCmac+4)& (0+255),w,b
 33621  002FD6  0100               	movlb	0	; () banked
 33622  002FD8  51D9               	movf	(??_AESCmac+5)& (0+255),w,b
 33623  002FDA  0A80               	xorlw	128
 33624  002FDC  0100               	movlb	0	; () banked
 33625  002FDE  6FDA               	movwf	(??_AESCmac+6)& (0+255),b
 33626  002FE0  0100               	movlb	0	; () banked
 33627  002FE2  51D7               	movf	(??_AESCmac+3)& (0+255),w,b
 33628  002FE4  0A80               	xorlw	128
 33629  002FE6  0100               	movlb	0	; () banked
 33630  002FE8  59DA               	subwfb	(??_AESCmac+6)& (0+255),w,b
 33631  002FEA  A0D8               	btfss	status,0,c
 33632  002FEC  D774               	goto	l14475
 33633                           
 33634                           ; BSR set to: 0
 33635                           ;lorawan_aes_cmac.c: 111: }
 33636                           ;lorawan_aes_cmac.c: 113: for (i=0; i<sizeof(x); i++)
 33637                           
 33638                           ; BSR set to: 0
 33639  002FEE  0E00               	movlw	0
 33640  002FF0  0101               	movlb	1	; () banked
 33641  002FF2  6F65               	movwf	AESCmac@i& (0+255),b
 33642  002FF4                     l14497:
 33643                           
 33644                           ; BSR set to: 1
 33645  002FF4  0E0F               	movlw	15
 33646  002FF6  0101               	movlb	1	; () banked
 33647  002FF8  6565               	cpfsgt	AESCmac@i& (0+255),b
 33648  002FFA  D001               	goto	l14501
 33649  002FFC  D025               	goto	l14507
 33650  002FFE                     l14501:
 33651                           
 33652                           ; BSR set to: 1
 33653                           ;lorawan_aes_cmac.c: 114: {
 33654                           ;lorawan_aes_cmac.c: 115: y[i] = x[i] ^ mLast[i];
 33655  002FFE  0101               	movlb	1	; () banked
 33656  003000  5165               	movf	AESCmac@i& (0+255),w,b
 33657  003002  0D01               	mullw	1
 33658  003004  0E40               	movlw	low AESCmac@y
 33659  003006  24F3               	addwf	prodl,w,c
 33660  003008  6ED9               	movwf	fsr2l,c
 33661  00300A  0E01               	movlw	high AESCmac@y
 33662  00300C  20F4               	addwfc	prodh,w,c
 33663  00300E  6EDA               	movwf	fsr2h,c
 33664  003010  0101               	movlb	1	; () banked
 33665  003012  5165               	movf	AESCmac@i& (0+255),w,b
 33666  003014  0D01               	mullw	1
 33667  003016  0E20               	movlw	low AESCmac@mLast
 33668  003018  24F3               	addwf	prodl,w,c
 33669  00301A  6EE9               	movwf	fsr0l,c
 33670  00301C  0E01               	movlw	high AESCmac@mLast
 33671  00301E  20F4               	addwfc	prodh,w,c
 33672  003020  6EEA               	movwf	fsr0h,c
 33673  003022  50EF               	movf	indf0,w,c
 33674  003024  0100               	movlb	0	; () banked
 33675  003026  6FD4               	movwf	??_AESCmac& (0+255),b
 33676  003028  0101               	movlb	1	; () banked
 33677  00302A  5165               	movf	AESCmac@i& (0+255),w,b
 33678  00302C  0D01               	mullw	1
 33679  00302E  0E50               	movlw	low AESCmac@x
 33680  003030  24F3               	addwf	prodl,w,c
 33681  003032  6EE9               	movwf	fsr0l,c
 33682  003034  0E01               	movlw	high AESCmac@x
 33683  003036  20F4               	addwfc	prodh,w,c
 33684  003038  6EEA               	movwf	fsr0h,c
 33685  00303A  50EF               	movf	indf0,w,c
 33686  00303C  0100               	movlb	0	; () banked
 33687  00303E  19D4               	xorwf	??_AESCmac& (0+255),w,b
 33688  003040  6EDF               	movwf	indf2,c
 33689                           
 33690                           ; BSR set to: 0
 33691  003042  0101               	movlb	1	; () banked
 33692  003044  2B65               	incf	AESCmac@i& (0+255),f,b
 33693  003046  D7D6               	goto	l14497
 33694  003048                     l14507:
 33695                           
 33696                           ; BSR set to: 1
 33697                           ;lorawan_aes_cmac.c: 116: }
 33698                           ;lorawan_aes_cmac.c: 118: AESEncodeLoRa(y, key);
 33699  003048  0E40               	movlw	low AESCmac@y
 33700  00304A  0100               	movlb	0	; () banked
 33701  00304C  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33702  00304E  0E01               	movlw	high AESCmac@y
 33703  003050  0100               	movlb	0	; () banked
 33704  003052  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33705  003054  C0CD  F093         	movff	AESCmac@key,AESEncodeLoRa@key
 33706  003058  C0CE  F094         	movff	AESCmac@key+1,AESEncodeLoRa@key+1
 33707  00305C  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 33708                           
 33709                           ;lorawan_aes_cmac.c: 120: memcpy(output, y, sizeof(y));
 33710  003060  C0CF  F064         	movff	AESCmac@output,memcpy@d1
 33711  003064  C0D0  F065         	movff	AESCmac@output+1,memcpy@d1+1
 33712  003068  0E40               	movlw	low AESCmac@y
 33713  00306A  0100               	movlb	0	; () banked
 33714  00306C  6F66               	movwf	memcpy@s1& (0+255),b
 33715  00306E  0E01               	movlw	high AESCmac@y
 33716  003070  0100               	movlb	0	; () banked
 33717  003072  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 33718  003074  0E00               	movlw	0
 33719  003076  0100               	movlb	0	; () banked
 33720  003078  6F69               	movwf	(memcpy@n+1)& (0+255),b
 33721  00307A  0E10               	movlw	16
 33722  00307C  6F68               	movwf	memcpy@n& (0+255),b
 33723  00307E  EC07  F049         	call	_memcpy	;wreg free
 33724  003082  0012               	return		;funcret
 33725  003084                     __end_of_AESCmac:
 33726                           	opt stack 0
 33727                           tosu	equ	0xFFF
 33728                           tosh	equ	0xFFE
 33729                           tosl	equ	0xFFD
 33730                           pclath	equ	0xFFA
 33731                           tblptru	equ	0xFF8
 33732                           tblptrh	equ	0xFF7
 33733                           tblptrl	equ	0xFF6
 33734                           tablat	equ	0xFF5
 33735                           prodh	equ	0xFF4
 33736                           prodl	equ	0xFF3
 33737                           intcon	equ	0xFF2
 33738                           intcon2	equ	0xFF1
 33739                           intcon3	equ	0xFF0
 33740                           indf0	equ	0xFEF
 33741                           postinc0	equ	0xFEE
 33742                           fsr0h	equ	0xFEA
 33743                           fsr0l	equ	0xFE9
 33744                           wreg	equ	0xFE8
 33745                           postinc1	equ	0xFE6
 33746                           postdec1	equ	0xFE5
 33747                           plusw1	equ	0xFE3
 33748                           fsr1h	equ	0xFE2
 33749                           fsr1l	equ	0xFE1
 33750                           indf2	equ	0xFDF
 33751                           postinc2	equ	0xFDE
 33752                           postdec2	equ	0xFDD
 33753                           plusw2	equ	0xFDB
 33754                           fsr2h	equ	0xFDA
 33755                           fsr2l	equ	0xFD9
 33756                           status	equ	0xFD8
 33757                           
 33758 ;; *************** function _GenerateSubkey *****************
 33759 ;; Defined at:
 33760 ;;		line 124 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 33761 ;; Parameters:    Size  Location     Type
 33762 ;;  key             2   69[BANK0 ] PTR unsigned char 
 33763 ;;		 -> loRa.activationParameters(105), loRa(245), 
 33764 ;;  k1              2   71[BANK0 ] PTR unsigned char 
 33765 ;;		 -> AESCmac@k1(16), 
 33766 ;;  k2              2   73[BANK0 ] PTR unsigned char 
 33767 ;;		 -> AESCmac@k2(16), 
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;  l              16   92[BANK0 ] unsigned char [16]
 33770 ;;  const_Rb       16   76[BANK0 ] unsigned char [16]
 33771 ;;  i               1  108[BANK0 ] unsigned char 
 33772 ;; Return value:  Size  Location     Type
 33773 ;;                  1    wreg      void 
 33774 ;; Registers used:
 33775 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 33776 ;; Tracked objects:
 33777 ;;		On entry : 0/0
 33778 ;;		On exit  : 0/0
 33779 ;;		Unchanged: 0/0
 33780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 33781 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33782 ;;      Locals:         0      33       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33783 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33784 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 33785 ;;Total ram usage:       40 bytes
 33786 ;; Hardware stack levels used:    1
 33787 ;; Hardware stack levels required when called:   10
 33788 ;; This function calls:
 33789 ;;		_AESEncodeLoRa
 33790 ;;		_FillSubKey
 33791 ;;		_memset
 33792 ;; This function is called by:
 33793 ;;		_AESCmac
 33794 ;; This function uses a non-reentrant model
 33795 ;;
 33796                           
 33797                           	psect	text152
 33798  005B6A                     __ptext152:
 33799                           	opt stack 0
 33800  005B6A                     _GenerateSubkey:
 33801                           	opt stack 16
 33802                           
 33803                           ;lorawan_aes_cmac.c: 126: uint8_t i = 0;
 33804                           
 33805                           ;incstack = 0
 33806  005B6A  0E00               	movlw	0
 33807  005B6C  0100               	movlb	0	; () banked
 33808  005B6E  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33809                           
 33810                           ; BSR set to: 0
 33811                           ;lorawan_aes_cmac.c: 127: uint8_t l[16];
 33812                           ;lorawan_aes_cmac.c: 128: uint8_t const_Rb[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x
      +                          00, 0x00,
 33813                           ;lorawan_aes_cmac.c: 129: 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x87};
 33814  005B70  EE21  F0D4         	lfsr	2,GenerateSubkey@F7870
 33815  005B74  EE00  F0AC         	lfsr	0,GenerateSubkey@const_Rb
 33816  005B78  0E0F               	movlw	15
 33817  005B7A                     u15551:
 33818  005B7A  CFDB FFEB          	movff	plusw2,plusw0
 33819  005B7E  06E8               	decf	wreg,f,c
 33820  005B80  E2FC               	bc	u15551
 33821                           
 33822                           ; BSR set to: 0
 33823                           ;lorawan_aes_cmac.c: 132: memset(l, 0, sizeof(l));
 33824  005B82  0EBC               	movlw	low GenerateSubkey@l
 33825  005B84  0100               	movlb	0	; () banked
 33826  005B86  6F64               	movwf	memset@p1& (0+255),b
 33827  005B88  0E00               	movlw	high GenerateSubkey@l
 33828  005B8A  0100               	movlb	0	; () banked
 33829  005B8C  6F65               	movwf	(memset@p1+1)& (0+255),b
 33830  005B8E  0E00               	movlw	0
 33831  005B90  0100               	movlb	0	; () banked
 33832  005B92  6F67               	movwf	(memset@c+1)& (0+255),b
 33833  005B94  0E00               	movlw	0
 33834  005B96  6F66               	movwf	memset@c& (0+255),b
 33835  005B98  0E00               	movlw	0
 33836  005B9A  0100               	movlb	0	; () banked
 33837  005B9C  6F69               	movwf	(memset@n+1)& (0+255),b
 33838  005B9E  0E10               	movlw	16
 33839  005BA0  6F68               	movwf	memset@n& (0+255),b
 33840  005BA2  EC0B  F04E         	call	_memset	;wreg free
 33841                           
 33842                           ;lorawan_aes_cmac.c: 134: AESEncodeLoRa(l, key);
 33843  005BA6  0EBC               	movlw	low GenerateSubkey@l
 33844  005BA8  0100               	movlb	0	; () banked
 33845  005BAA  6F91               	movwf	AESEncodeLoRa@block& (0+255),b
 33846  005BAC  0E00               	movlw	high GenerateSubkey@l
 33847  005BAE  0100               	movlb	0	; () banked
 33848  005BB0  6F92               	movwf	(AESEncodeLoRa@block+1)& (0+255),b
 33849  005BB2  C0A5  F093         	movff	GenerateSubkey@key,AESEncodeLoRa@key
 33850  005BB6  C0A6  F094         	movff	GenerateSubkey@key+1,AESEncodeLoRa@key+1
 33851  005BBA  EC13  F04D         	call	_AESEncodeLoRa	;wreg free
 33852                           
 33853                           ;lorawan_aes_cmac.c: 137: if ( (l[0] & 0x80) == 0x00 )
 33854  005BBE  0100               	movlb	0	; () banked
 33855  005BC0  BFBC               	btfsc	GenerateSubkey@l& (0+255),7,b
 33856  005BC2  D010               	goto	l14001
 33857                           
 33858                           ; BSR set to: 0
 33859                           ;lorawan_aes_cmac.c: 138: {
 33860                           ;lorawan_aes_cmac.c: 139: FillSubKey( l, k1, (sizeof(l) ) );
 33861  005BC4  0EBC               	movlw	low GenerateSubkey@l
 33862  005BC6  0100               	movlb	0	; () banked
 33863  005BC8  6F64               	movwf	FillSubKey@source& (0+255),b
 33864  005BCA  0E00               	movlw	high GenerateSubkey@l
 33865  005BCC  0100               	movlb	0	; () banked
 33866  005BCE  6F65               	movwf	(FillSubKey@source+1)& (0+255),b
 33867  005BD0  C0A7  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 33868  005BD4  C0A8  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33869  005BD8  0E10               	movlw	16
 33870  005BDA  0100               	movlb	0	; () banked
 33871  005BDC  6F68               	movwf	FillSubKey@size& (0+255),b
 33872  005BDE  ECC6  F045         	call	_FillSubKey	;wreg free
 33873                           
 33874                           ;lorawan_aes_cmac.c: 140: }
 33875  005BE2  D034               	goto	l14015
 33876  005BE4                     l14001:
 33877                           
 33878                           ;lorawan_aes_cmac.c: 141: else
 33879                           ;lorawan_aes_cmac.c: 142: {
 33880                           ;lorawan_aes_cmac.c: 143: FillSubKey( l, k1, (sizeof(l) ) );
 33881  005BE4  0EBC               	movlw	low GenerateSubkey@l
 33882  005BE6  0100               	movlb	0	; () banked
 33883  005BE8  6F64               	movwf	FillSubKey@source& (0+255),b
 33884  005BEA  0E00               	movlw	high GenerateSubkey@l
 33885  005BEC  0100               	movlb	0	; () banked
 33886  005BEE  6F65               	movwf	(FillSubKey@source+1)& (0+255),b
 33887  005BF0  C0A7  F066         	movff	GenerateSubkey@k1,FillSubKey@key
 33888  005BF4  C0A8  F067         	movff	GenerateSubkey@k1+1,FillSubKey@key+1
 33889  005BF8  0E10               	movlw	16
 33890  005BFA  0100               	movlb	0	; () banked
 33891  005BFC  6F68               	movwf	FillSubKey@size& (0+255),b
 33892  005BFE  ECC6  F045         	call	_FillSubKey	;wreg free
 33893                           
 33894                           ;lorawan_aes_cmac.c: 145: for (i=0; i<sizeof(l); i++)
 33895  005C02  0E00               	movlw	0
 33896  005C04  0100               	movlb	0	; () banked
 33897  005C06  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33898  005C08                     l14005:
 33899                           
 33900                           ; BSR set to: 0
 33901  005C08  0E0F               	movlw	15
 33902  005C0A  0100               	movlb	0	; () banked
 33903  005C0C  65CC               	cpfsgt	GenerateSubkey@i& (0+255),b
 33904  005C0E  D001               	goto	l14009
 33905  005C10  D01D               	goto	l14015
 33906  005C12                     l14009:
 33907                           
 33908                           ; BSR set to: 0
 33909                           ;lorawan_aes_cmac.c: 146: {
 33910                           ;lorawan_aes_cmac.c: 147: k1[i] ^= const_Rb[i];
 33911  005C12  0100               	movlb	0	; () banked
 33912  005C14  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33913  005C16  0D01               	mullw	1
 33914  005C18  0EAC               	movlw	low GenerateSubkey@const_Rb
 33915  005C1A  24F3               	addwf	prodl,w,c
 33916  005C1C  6ED9               	movwf	fsr2l,c
 33917  005C1E  0E00               	movlw	high GenerateSubkey@const_Rb
 33918  005C20  20F4               	addwfc	prodh,w,c
 33919  005C22  6EDA               	movwf	fsr2h,c
 33920  005C24  50DF               	movf	indf2,w,c
 33921  005C26  0100               	movlb	0	; () banked
 33922  005C28  6FAB               	movwf	??_GenerateSubkey& (0+255),b
 33923  005C2A  0100               	movlb	0	; () banked
 33924  005C2C  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 33925  005C2E  0D01               	mullw	1
 33926  005C30  50F3               	movf	prodl,w,c
 33927  005C32  0100               	movlb	0	; () banked
 33928  005C34  25A7               	addwf	GenerateSubkey@k1& (0+255),w,b
 33929  005C36  6ED9               	movwf	fsr2l,c
 33930  005C38  50F4               	movf	prodh,w,c
 33931  005C3A  0100               	movlb	0	; () banked
 33932  005C3C  21A8               	addwfc	(GenerateSubkey@k1+1)& (0+255),w,b
 33933  005C3E  6EDA               	movwf	fsr2h,c
 33934  005C40  0100               	movlb	0	; () banked
 33935  005C42  51AB               	movf	??_GenerateSubkey& (0+255),w,b
 33936  005C44  1ADF               	xorwf	indf2,f,c
 33937                           
 33938                           ; BSR set to: 0
 33939  005C46  0100               	movlb	0	; () banked
 33940  005C48  2BCC               	incf	GenerateSubkey@i& (0+255),f,b
 33941  005C4A  D7DE               	goto	l14005
 33942  005C4C                     l14015:
 33943                           
 33944                           ;lorawan_aes_cmac.c: 148: }
 33945                           ;lorawan_aes_cmac.c: 149: }
 33946                           ;lorawan_aes_cmac.c: 152: if ( (k1[0] & 0x80) == 0x00 )
 33947  005C4C  C0A7  FFD9         	movff	GenerateSubkey@k1,fsr2l
 33948  005C50  C0A8  FFDA         	movff	GenerateSubkey@k1+1,fsr2h
 33949  005C54  0100               	movlb	0	; () banked
 33950  005C56  BEDF               	btfsc	indf2,7,c
 33951  005C58  D00E               	goto	l14019
 33952                           
 33953                           ; BSR set to: 0
 33954                           ;lorawan_aes_cmac.c: 153: {
 33955                           ;lorawan_aes_cmac.c: 154: FillSubKey( k1, k2, (sizeof(l)) );
 33956  005C5A  C0A7  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 33957  005C5E  C0A8  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33958  005C62  C0A9  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 33959  005C66  C0AA  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33960  005C6A  0E10               	movlw	16
 33961  005C6C  0100               	movlb	0	; () banked
 33962  005C6E  6F68               	movwf	FillSubKey@size& (0+255),b
 33963  005C70  ECC6  F045         	call	_FillSubKey	;wreg free
 33964                           
 33965                           ;lorawan_aes_cmac.c: 155: }
 33966  005C74  0012               	return	
 33967  005C76                     l14019:
 33968                           
 33969                           ;lorawan_aes_cmac.c: 156: else
 33970                           ;lorawan_aes_cmac.c: 157: {
 33971                           ;lorawan_aes_cmac.c: 158: FillSubKey( k1, k2, (sizeof(l) ) );
 33972  005C76  C0A7  F064         	movff	GenerateSubkey@k1,FillSubKey@source
 33973  005C7A  C0A8  F065         	movff	GenerateSubkey@k1+1,FillSubKey@source+1
 33974  005C7E  C0A9  F066         	movff	GenerateSubkey@k2,FillSubKey@key
 33975  005C82  C0AA  F067         	movff	GenerateSubkey@k2+1,FillSubKey@key+1
 33976  005C86  0E10               	movlw	16
 33977  005C88  0100               	movlb	0	; () banked
 33978  005C8A  6F68               	movwf	FillSubKey@size& (0+255),b
 33979  005C8C  ECC6  F045         	call	_FillSubKey	;wreg free
 33980                           
 33981                           ;lorawan_aes_cmac.c: 160: for (i=0; i<sizeof(l); i++)
 33982  005C90  0E00               	movlw	0
 33983  005C92  0100               	movlb	0	; () banked
 33984  005C94  6FCC               	movwf	GenerateSubkey@i& (0+255),b
 33985  005C96                     l14023:
 33986                           
 33987                           ; BSR set to: 0
 33988  005C96  0E0F               	movlw	15
 33989  005C98  0100               	movlb	0	; () banked
 33990  005C9A  65CC               	cpfsgt	GenerateSubkey@i& (0+255),b
 33991  005C9C  D001               	goto	l14027
 33992  005C9E  0012               	return	
 33993  005CA0                     l14027:
 33994                           
 33995                           ; BSR set to: 0
 33996                           ;lorawan_aes_cmac.c: 161: {
 33997                           ;lorawan_aes_cmac.c: 162: k2[i] = k2[i] ^ const_Rb[i];
 33998  005CA0  0100               	movlb	0	; () banked
 33999  005CA2  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 34000  005CA4  0D01               	mullw	1
 34001  005CA6  50F3               	movf	prodl,w,c
 34002  005CA8  0100               	movlb	0	; () banked
 34003  005CAA  25A9               	addwf	GenerateSubkey@k2& (0+255),w,b
 34004  005CAC  6ED9               	movwf	fsr2l,c
 34005  005CAE  50F4               	movf	prodh,w,c
 34006  005CB0  0100               	movlb	0	; () banked
 34007  005CB2  21AA               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 34008  005CB4  6EDA               	movwf	fsr2h,c
 34009  005CB6  0100               	movlb	0	; () banked
 34010  005CB8  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 34011  005CBA  0D01               	mullw	1
 34012  005CBC  0EAC               	movlw	low GenerateSubkey@const_Rb
 34013  005CBE  24F3               	addwf	prodl,w,c
 34014  005CC0  6EE9               	movwf	fsr0l,c
 34015  005CC2  0E00               	movlw	high GenerateSubkey@const_Rb
 34016  005CC4  20F4               	addwfc	prodh,w,c
 34017  005CC6  6EEA               	movwf	fsr0h,c
 34018  005CC8  50EF               	movf	indf0,w,c
 34019  005CCA  0100               	movlb	0	; () banked
 34020  005CCC  6FAB               	movwf	??_GenerateSubkey& (0+255),b
 34021  005CCE  0100               	movlb	0	; () banked
 34022  005CD0  51CC               	movf	GenerateSubkey@i& (0+255),w,b
 34023  005CD2  0D01               	mullw	1
 34024  005CD4  50F3               	movf	prodl,w,c
 34025  005CD6  0100               	movlb	0	; () banked
 34026  005CD8  25A9               	addwf	GenerateSubkey@k2& (0+255),w,b
 34027  005CDA  6EE9               	movwf	fsr0l,c
 34028  005CDC  50F4               	movf	prodh,w,c
 34029  005CDE  0100               	movlb	0	; () banked
 34030  005CE0  21AA               	addwfc	(GenerateSubkey@k2+1)& (0+255),w,b
 34031  005CE2  6EEA               	movwf	fsr0h,c
 34032  005CE4  50EF               	movf	indf0,w,c
 34033  005CE6  0100               	movlb	0	; () banked
 34034  005CE8  19AB               	xorwf	??_GenerateSubkey& (0+255),w,b
 34035  005CEA  6EDF               	movwf	indf2,c
 34036                           
 34037                           ; BSR set to: 0
 34038  005CEC  0100               	movlb	0	; () banked
 34039  005CEE  2BCC               	incf	GenerateSubkey@i& (0+255),f,b
 34040  005CF0  D7D2               	goto	l14023
 34041  005CF2                     __end_of_GenerateSubkey:
 34042                           	opt stack 0
 34043                           tosu	equ	0xFFF
 34044                           tosh	equ	0xFFE
 34045                           tosl	equ	0xFFD
 34046                           pclath	equ	0xFFA
 34047                           tblptru	equ	0xFF8
 34048                           tblptrh	equ	0xFF7
 34049                           tblptrl	equ	0xFF6
 34050                           tablat	equ	0xFF5
 34051                           prodh	equ	0xFF4
 34052                           prodl	equ	0xFF3
 34053                           intcon	equ	0xFF2
 34054                           intcon2	equ	0xFF1
 34055                           intcon3	equ	0xFF0
 34056                           indf0	equ	0xFEF
 34057                           postinc0	equ	0xFEE
 34058                           plusw0	equ	0xFEB
 34059                           fsr0h	equ	0xFEA
 34060                           fsr0l	equ	0xFE9
 34061                           wreg	equ	0xFE8
 34062                           postinc1	equ	0xFE6
 34063                           postdec1	equ	0xFE5
 34064                           plusw1	equ	0xFE3
 34065                           fsr1h	equ	0xFE2
 34066                           fsr1l	equ	0xFE1
 34067                           indf2	equ	0xFDF
 34068                           postinc2	equ	0xFDE
 34069                           postdec2	equ	0xFDD
 34070                           plusw2	equ	0xFDB
 34071                           fsr2h	equ	0xFDA
 34072                           fsr2l	equ	0xFD9
 34073                           status	equ	0xFD8
 34074                           
 34075 ;; *************** function _FillSubKey *****************
 34076 ;; Defined at:
 34077 ;;		line 167 in file "mcc_generated_files/LoRaWAN/lorawan_aes_cmac.c"
 34078 ;; Parameters:    Size  Location     Type
 34079 ;;  source          2    4[BANK0 ] PTR unsigned char 
 34080 ;;		 -> GenerateSubkey@l(16), AESCmac@k1(16), 
 34081 ;;  key             2    6[BANK0 ] PTR unsigned char 
 34082 ;;		 -> AESCmac@k2(16), AESCmac@k1(16), 
 34083 ;;  size            1    8[BANK0 ] unsigned char 
 34084 ;; Auto vars:     Size  Location     Type
 34085 ;;  i               1   11[BANK0 ] unsigned char 
 34086 ;;  carry           1   10[BANK0 ] unsigned char 
 34087 ;; Return value:  Size  Location     Type
 34088 ;;                  1    wreg      void 
 34089 ;; Registers used:
 34090 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 34091 ;; Tracked objects:
 34092 ;;		On entry : 0/0
 34093 ;;		On exit  : 0/0
 34094 ;;		Unchanged: 0/0
 34095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34096 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34097 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34098 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34099 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34100 ;;Total ram usage:        8 bytes
 34101 ;; Hardware stack levels used:    1
 34102 ;; Hardware stack levels required when called:    7
 34103 ;; This function calls:
 34104 ;;		Nothing
 34105 ;; This function is called by:
 34106 ;;		_GenerateSubkey
 34107 ;; This function uses a non-reentrant model
 34108 ;;
 34109                           
 34110                           	psect	text153
 34111  008B8C                     __ptext153:
 34112                           	opt stack 0
 34113  008B8C                     _FillSubKey:
 34114                           	opt stack 18
 34115                           
 34116                           ;lorawan_aes_cmac.c: 169: uint8_t i = 0;
 34117                           
 34118                           ;incstack = 0
 34119  008B8C  0E00               	movlw	0
 34120  008B8E  0100               	movlb	0	; () banked
 34121  008B90  6F6B               	movwf	FillSubKey@i& (0+255),b
 34122                           
 34123                           ;lorawan_aes_cmac.c: 170: uint8_t carry = 0;
 34124  008B92  0E00               	movlw	0
 34125  008B94  0100               	movlb	0	; () banked
 34126  008B96  6F6A               	movwf	FillSubKey@carry& (0+255),b
 34127                           
 34128                           ; BSR set to: 0
 34129                           ;lorawan_aes_cmac.c: 172: i=size;
 34130  008B98  C068  F06B         	movff	FillSubKey@size,FillSubKey@i
 34131                           
 34132                           ;lorawan_aes_cmac.c: 174: while(i--)
 34133  008B9C  D032               	goto	l13717
 34134  008B9E                     l13713:
 34135                           
 34136                           ; BSR set to: 0
 34137                           ;lorawan_aes_cmac.c: 175: {
 34138                           ;lorawan_aes_cmac.c: 176: key[i] = (source[i] << (1)) | carry;
 34139  008B9E  0100               	movlb	0	; () banked
 34140  008BA0  516B               	movf	FillSubKey@i& (0+255),w,b
 34141  008BA2  0D01               	mullw	1
 34142  008BA4  50F3               	movf	prodl,w,c
 34143  008BA6  0100               	movlb	0	; () banked
 34144  008BA8  2566               	addwf	FillSubKey@key& (0+255),w,b
 34145  008BAA  6ED9               	movwf	fsr2l,c
 34146  008BAC  50F4               	movf	prodh,w,c
 34147  008BAE  0100               	movlb	0	; () banked
 34148  008BB0  2167               	addwfc	(FillSubKey@key+1)& (0+255),w,b
 34149  008BB2  6EDA               	movwf	fsr2h,c
 34150  008BB4  0100               	movlb	0	; () banked
 34151  008BB6  516B               	movf	FillSubKey@i& (0+255),w,b
 34152  008BB8  0D01               	mullw	1
 34153  008BBA  50F3               	movf	prodl,w,c
 34154  008BBC  0100               	movlb	0	; () banked
 34155  008BBE  2564               	addwf	FillSubKey@source& (0+255),w,b
 34156  008BC0  6EE9               	movwf	fsr0l,c
 34157  008BC2  50F4               	movf	prodh,w,c
 34158  008BC4  0100               	movlb	0	; () banked
 34159  008BC6  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 34160  008BC8  6EEA               	movwf	fsr0h,c
 34161  008BCA  50EF               	movf	indf0,w,c
 34162  008BCC  0100               	movlb	0	; () banked
 34163  008BCE  6F69               	movwf	??_FillSubKey& (0+255),b
 34164  008BD0  0100               	movlb	0	; () banked
 34165  008BD2  90D8               	bcf	status,0,c
 34166  008BD4  3569               	rlcf	??_FillSubKey& (0+255),w,b
 34167  008BD6  0100               	movlb	0	; () banked
 34168  008BD8  116A               	iorwf	FillSubKey@carry& (0+255),w,b
 34169  008BDA  6EDF               	movwf	indf2,c
 34170                           
 34171                           ; BSR set to: 0
 34172                           ;lorawan_aes_cmac.c: 177: carry = !!(source[i] & 0x80);
 34173  008BDC  0100               	movlb	0	; () banked
 34174  008BDE  516B               	movf	FillSubKey@i& (0+255),w,b
 34175  008BE0  0D01               	mullw	1
 34176  008BE2  50F3               	movf	prodl,w,c
 34177  008BE4  0100               	movlb	0	; () banked
 34178  008BE6  2564               	addwf	FillSubKey@source& (0+255),w,b
 34179  008BE8  6ED9               	movwf	fsr2l,c
 34180  008BEA  50F4               	movf	prodh,w,c
 34181  008BEC  0100               	movlb	0	; () banked
 34182  008BEE  2165               	addwfc	(FillSubKey@source+1)& (0+255),w,b
 34183  008BF0  6EDA               	movwf	fsr2h,c
 34184  008BF2  0100               	movlb	0	; () banked
 34185  008BF4  AEDF               	btfss	indf2,7,c
 34186  008BF6  D002               	goto	u15140
 34187  008BF8  0E01               	movlw	1
 34188  008BFA  D001               	goto	u15150
 34189  008BFC                     u15140:
 34190  008BFC  0E00               	movlw	0
 34191  008BFE                     u15150:
 34192  008BFE  0100               	movlb	0	; () banked
 34193  008C00  6F6A               	movwf	FillSubKey@carry& (0+255),b
 34194  008C02                     l13717:
 34195                           
 34196                           ; BSR set to: 0
 34197  008C02  0100               	movlb	0	; () banked
 34198  008C04  076B               	decf	FillSubKey@i& (0+255),f,b
 34199  008C06  0100               	movlb	0	; () banked
 34200  008C08  296B               	incf	FillSubKey@i& (0+255),w,b
 34201  008C0A  B4D8               	btfsc	status,2,c
 34202  008C0C  0012               	return	
 34203  008C0E  D7C7               	goto	l13713
 34204  008C10                     __end_of_FillSubKey:
 34205                           	opt stack 0
 34206                           tosu	equ	0xFFF
 34207                           tosh	equ	0xFFE
 34208                           tosl	equ	0xFFD
 34209                           pclath	equ	0xFFA
 34210                           tblptru	equ	0xFF8
 34211                           tblptrh	equ	0xFF7
 34212                           tblptrl	equ	0xFF6
 34213                           tablat	equ	0xFF5
 34214                           prodh	equ	0xFF4
 34215                           prodl	equ	0xFF3
 34216                           intcon	equ	0xFF2
 34217                           intcon2	equ	0xFF1
 34218                           intcon3	equ	0xFF0
 34219                           indf0	equ	0xFEF
 34220                           postinc0	equ	0xFEE
 34221                           plusw0	equ	0xFEB
 34222                           fsr0h	equ	0xFEA
 34223                           fsr0l	equ	0xFE9
 34224                           wreg	equ	0xFE8
 34225                           postinc1	equ	0xFE6
 34226                           postdec1	equ	0xFE5
 34227                           plusw1	equ	0xFE3
 34228                           fsr1h	equ	0xFE2
 34229                           fsr1l	equ	0xFE1
 34230                           indf2	equ	0xFDF
 34231                           postinc2	equ	0xFDE
 34232                           postdec2	equ	0xFDD
 34233                           plusw2	equ	0xFDB
 34234                           fsr2h	equ	0xFDA
 34235                           fsr2l	equ	0xFD9
 34236                           status	equ	0xFD8
 34237                           
 34238 ;; *************** function _AESEncodeLoRa *****************
 34239 ;; Defined at:
 34240 ;;		line 34 in file "mcc_generated_files/LoRaWAN/lorawan_aes.c"
 34241 ;; Parameters:    Size  Location     Type
 34242 ;;  block           2   49[BANK0 ] PTR unsigned char 
 34243 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 34244 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 34245 ;;  key             2   51[BANK0 ] PTR unsigned char 
 34246 ;;		 -> loRa.activationParameters(105), loRa(245), 
 34247 ;; Auto vars:     Size  Location     Type
 34248 ;;  useKey         16   53[BANK0 ] unsigned char [16]
 34249 ;; Return value:  Size  Location     Type
 34250 ;;                  1    wreg      void 
 34251 ;; Registers used:
 34252 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34253 ;; Tracked objects:
 34254 ;;		On entry : 0/0
 34255 ;;		On exit  : 0/0
 34256 ;;		Unchanged: 0/0
 34257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34258 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34259 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34261 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34262 ;;Total ram usage:       20 bytes
 34263 ;; Hardware stack levels used:    1
 34264 ;; Hardware stack levels required when called:    9
 34265 ;; This function calls:
 34266 ;;		_AESEncode
 34267 ;;		_memcpy
 34268 ;; This function is called by:
 34269 ;;		_AESCmac
 34270 ;;		_GenerateSubkey
 34271 ;;		_LORAWAN_RxDone
 34272 ;;		_ComputeSessionKeys
 34273 ;;		_EncryptFRMPayload
 34274 ;; This function uses a non-reentrant model
 34275 ;;
 34276                           
 34277                           	psect	text154
 34278  009A26                     __ptext154:
 34279                           	opt stack 0
 34280  009A26                     _AESEncodeLoRa:
 34281                           	opt stack 17
 34282                           
 34283                           ;lorawan_aes.c: 36: uint8_t useKey[16];
 34284                           ;lorawan_aes.c: 37: memcpy(useKey, key, sizeof(useKey));
 34285                           
 34286                           ; BSR set to: 0
 34287                           ;incstack = 0
 34288  009A26  0E95               	movlw	low AESEncodeLoRa@useKey
 34289  009A28  0100               	movlb	0	; () banked
 34290  009A2A  6F64               	movwf	memcpy@d1& (0+255),b
 34291  009A2C  0E00               	movlw	high AESEncodeLoRa@useKey
 34292  009A2E  0100               	movlb	0	; () banked
 34293  009A30  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 34294  009A32  C093  F066         	movff	AESEncodeLoRa@key,memcpy@s1
 34295  009A36  C094  F067         	movff	AESEncodeLoRa@key+1,memcpy@s1+1
 34296  009A3A  0E00               	movlw	0
 34297  009A3C  0100               	movlb	0	; () banked
 34298  009A3E  6F69               	movwf	(memcpy@n+1)& (0+255),b
 34299  009A40  0E10               	movlw	16
 34300  009A42  6F68               	movwf	memcpy@n& (0+255),b
 34301  009A44  EC07  F049         	call	_memcpy	;wreg free
 34302                           
 34303                           ;lorawan_aes.c: 38: AESEncode(block, useKey);
 34304  009A48  C091  F06A         	movff	AESEncodeLoRa@block,AESEncode@block
 34305  009A4C  C092  F06B         	movff	AESEncodeLoRa@block+1,AESEncode@block+1
 34306  009A50  0E95               	movlw	low AESEncodeLoRa@useKey
 34307  009A52  0100               	movlb	0	; () banked
 34308  009A54  6F6C               	movwf	AESEncode@masterKey& (0+255),b
 34309  009A56  0E00               	movlw	high AESEncodeLoRa@useKey
 34310  009A58  0100               	movlb	0	; () banked
 34311  009A5A  6F6D               	movwf	(AESEncode@masterKey+1)& (0+255),b
 34312  009A5C  EC61  F011         	call	_AESEncode	;wreg free
 34313  009A60  0012               	return		;funcret
 34314  009A62                     __end_of_AESEncodeLoRa:
 34315                           	opt stack 0
 34316                           tosu	equ	0xFFF
 34317                           tosh	equ	0xFFE
 34318                           tosl	equ	0xFFD
 34319                           pclath	equ	0xFFA
 34320                           tblptru	equ	0xFF8
 34321                           tblptrh	equ	0xFF7
 34322                           tblptrl	equ	0xFF6
 34323                           tablat	equ	0xFF5
 34324                           prodh	equ	0xFF4
 34325                           prodl	equ	0xFF3
 34326                           intcon	equ	0xFF2
 34327                           intcon2	equ	0xFF1
 34328                           intcon3	equ	0xFF0
 34329                           indf0	equ	0xFEF
 34330                           postinc0	equ	0xFEE
 34331                           plusw0	equ	0xFEB
 34332                           fsr0h	equ	0xFEA
 34333                           fsr0l	equ	0xFE9
 34334                           wreg	equ	0xFE8
 34335                           postinc1	equ	0xFE6
 34336                           postdec1	equ	0xFE5
 34337                           plusw1	equ	0xFE3
 34338                           fsr1h	equ	0xFE2
 34339                           fsr1l	equ	0xFE1
 34340                           indf2	equ	0xFDF
 34341                           postinc2	equ	0xFDE
 34342                           postdec2	equ	0xFDD
 34343                           plusw2	equ	0xFDB
 34344                           fsr2h	equ	0xFDA
 34345                           fsr2l	equ	0xFD9
 34346                           status	equ	0xFD8
 34347                           
 34348 ;; *************** function _AESEncode *****************
 34349 ;; Defined at:
 34350 ;;		line 236 in file "mcc_generated_files/LoRaWAN/AES.c"
 34351 ;; Parameters:    Size  Location     Type
 34352 ;;  block           2   10[BANK0 ] PTR unsigned char 
 34353 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 34354 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 34355 ;;  masterKey       2   12[BANK0 ] PTR unsigned char 
 34356 ;;		 -> AESEncodeLoRa@useKey(16), 
 34357 ;; Auto vars:     Size  Location     Type
 34358 ;;  aux3            1   47[BANK0 ] unsigned char 
 34359 ;;  aux1            1   46[BANK0 ] unsigned char 
 34360 ;;  aux2            1   45[BANK0 ] unsigned char 
 34361 ;;  aux             1   44[BANK0 ] unsigned char 
 34362 ;;  key            16   22[BANK0 ] unsigned char [16]
 34363 ;;  i               1   48[BANK0 ] unsigned char 
 34364 ;; Return value:  Size  Location     Type
 34365 ;;                  1    wreg      void 
 34366 ;; Registers used:
 34367 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 34368 ;; Tracked objects:
 34369 ;;		On entry : 0/0
 34370 ;;		On exit  : 0/0
 34371 ;;		Unchanged: 0/0
 34372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 34373 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34374 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34375 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34376 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 34377 ;;Total ram usage:       39 bytes
 34378 ;; Hardware stack levels used:    1
 34379 ;; Hardware stack levels required when called:    8
 34380 ;; This function calls:
 34381 ;;		_EncKeySchedule
 34382 ;;		_EncodeShiftRow
 34383 ;; This function is called by:
 34384 ;;		_AESEncodeLoRa
 34385 ;; This function uses a non-reentrant model
 34386 ;;
 34387                           
 34388                           	psect	text155
 34389  0022C2                     __ptext155:
 34390                           	opt stack 0
 34391  0022C2                     _AESEncode:
 34392                           	opt stack 17
 34393                           
 34394                           ;AES.c: 238: unsigned char i;
 34395                           ;AES.c: 240: unsigned char key[16];
 34396                           ;AES.c: 242: for (i = 0; i < 16; i++)
 34397                           
 34398                           ;incstack = 0
 34399  0022C2  0E00               	movlw	0
 34400  0022C4  0100               	movlb	0	; () banked
 34401  0022C6  6F90               	movwf	AESEncode@i& (0+255),b
 34402  0022C8                     l13293:
 34403                           
 34404                           ; BSR set to: 0
 34405  0022C8  0E0F               	movlw	15
 34406  0022CA  0100               	movlb	0	; () banked
 34407  0022CC  6590               	cpfsgt	AESEncode@i& (0+255),b
 34408  0022CE  D001               	goto	l13297
 34409  0022D0  D019               	goto	l13303
 34410  0022D2                     l13297:
 34411                           
 34412                           ; BSR set to: 0
 34413                           ;AES.c: 243: {
 34414                           ;AES.c: 244: key[i] = masterKey[i];
 34415  0022D2  0100               	movlb	0	; () banked
 34416  0022D4  5190               	movf	AESEncode@i& (0+255),w,b
 34417  0022D6  0D01               	mullw	1
 34418  0022D8  50F3               	movf	prodl,w,c
 34419  0022DA  0100               	movlb	0	; () banked
 34420  0022DC  256C               	addwf	AESEncode@masterKey& (0+255),w,b
 34421  0022DE  6ED9               	movwf	fsr2l,c
 34422  0022E0  50F4               	movf	prodh,w,c
 34423  0022E2  0100               	movlb	0	; () banked
 34424  0022E4  216D               	addwfc	(AESEncode@masterKey+1)& (0+255),w,b
 34425  0022E6  6EDA               	movwf	fsr2h,c
 34426  0022E8  0100               	movlb	0	; () banked
 34427  0022EA  5190               	movf	AESEncode@i& (0+255),w,b
 34428  0022EC  0D01               	mullw	1
 34429  0022EE  0E76               	movlw	low AESEncode@key
 34430  0022F0  24F3               	addwf	prodl,w,c
 34431  0022F2  6EE9               	movwf	fsr0l,c
 34432  0022F4  0E00               	movlw	high AESEncode@key
 34433  0022F6  20F4               	addwfc	prodh,w,c
 34434  0022F8  6EEA               	movwf	fsr0h,c
 34435  0022FA  CFDF FFEF          	movff	indf2,indf0
 34436                           
 34437                           ; BSR set to: 0
 34438  0022FE  0100               	movlb	0	; () banked
 34439  002300  2B90               	incf	AESEncode@i& (0+255),f,b
 34440  002302  D7E2               	goto	l13293
 34441  002304                     l13303:
 34442                           
 34443                           ; BSR set to: 0
 34444                           ;AES.c: 245: }
 34445                           ;AES.c: 248: _roundCounter = 10;
 34446  002304  0E0A               	movlw	10
 34447  002306  6E4B               	movwf	__roundCounter,c
 34448                           
 34449                           ;AES.c: 250: _rcon = 0x01;
 34450  002308  0E01               	movlw	1
 34451  00230A  6E4A               	movwf	__rcon,c
 34452                           
 34453                           ;AES.c: 253: for(i=0;i<16;i++)
 34454  00230C  0E00               	movlw	0
 34455  00230E  0100               	movlb	0	; () banked
 34456  002310  6F90               	movwf	AESEncode@i& (0+255),b
 34457  002312                     l13305:
 34458                           
 34459                           ; BSR set to: 0
 34460  002312  0E0F               	movlw	15
 34461  002314  0100               	movlb	0	; () banked
 34462  002316  6590               	cpfsgt	AESEncode@i& (0+255),b
 34463  002318  D001               	goto	l13309
 34464  00231A  D01D               	goto	l13315
 34465  00231C                     l13309:
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;AES.c: 254: {
 34469                           ;AES.c: 255: block[i] ^= key[i];
 34470  00231C  0100               	movlb	0	; () banked
 34471  00231E  5190               	movf	AESEncode@i& (0+255),w,b
 34472  002320  0D01               	mullw	1
 34473  002322  0E76               	movlw	low AESEncode@key
 34474  002324  24F3               	addwf	prodl,w,c
 34475  002326  6ED9               	movwf	fsr2l,c
 34476  002328  0E00               	movlw	high AESEncode@key
 34477  00232A  20F4               	addwfc	prodh,w,c
 34478  00232C  6EDA               	movwf	fsr2h,c
 34479  00232E  50DF               	movf	indf2,w,c
 34480  002330  0100               	movlb	0	; () banked
 34481  002332  6F6E               	movwf	??_AESEncode& (0+255),b
 34482  002334  0100               	movlb	0	; () banked
 34483  002336  5190               	movf	AESEncode@i& (0+255),w,b
 34484  002338  0D01               	mullw	1
 34485  00233A  50F3               	movf	prodl,w,c
 34486  00233C  0100               	movlb	0	; () banked
 34487  00233E  256A               	addwf	AESEncode@block& (0+255),w,b
 34488  002340  6ED9               	movwf	fsr2l,c
 34489  002342  50F4               	movf	prodh,w,c
 34490  002344  0100               	movlb	0	; () banked
 34491  002346  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34492  002348  6EDA               	movwf	fsr2h,c
 34493  00234A  0100               	movlb	0	; () banked
 34494  00234C  516E               	movf	??_AESEncode& (0+255),w,b
 34495  00234E  1ADF               	xorwf	indf2,f,c
 34496                           
 34497                           ; BSR set to: 0
 34498  002350  0100               	movlb	0	; () banked
 34499  002352  2B90               	incf	AESEncode@i& (0+255),f,b
 34500  002354  D7DE               	goto	l13305
 34501  002356                     l13315:
 34502                           
 34503                           ; BSR set to: 0
 34504                           ;AES.c: 259: {
 34505                           ;AES.c: 261: for(i=0;i<16;i++)
 34506  002356  0E00               	movlw	0
 34507  002358  0100               	movlb	0	; () banked
 34508  00235A  6F90               	movwf	AESEncode@i& (0+255),b
 34509  00235C                     l13317:
 34510                           
 34511                           ; BSR set to: 0
 34512  00235C  0E0F               	movlw	15
 34513  00235E  0100               	movlb	0	; () banked
 34514  002360  6590               	cpfsgt	AESEncode@i& (0+255),b
 34515  002362  D001               	goto	l13321
 34516  002364  D02B               	goto	l13327
 34517  002366                     l13321:
 34518                           
 34519                           ; BSR set to: 0
 34520                           ;AES.c: 262: {
 34521                           ;AES.c: 263: block[i]=STable[block[i]];
 34522  002366  0100               	movlb	0	; () banked
 34523  002368  5190               	movf	AESEncode@i& (0+255),w,b
 34524  00236A  0D01               	mullw	1
 34525  00236C  50F3               	movf	prodl,w,c
 34526  00236E  0100               	movlb	0	; () banked
 34527  002370  256A               	addwf	AESEncode@block& (0+255),w,b
 34528  002372  6ED9               	movwf	fsr2l,c
 34529  002374  50F4               	movf	prodh,w,c
 34530  002376  0100               	movlb	0	; () banked
 34531  002378  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34532  00237A  6EDA               	movwf	fsr2h,c
 34533  00237C  50DF               	movf	indf2,w,c
 34534  00237E  0100               	movlb	0	; () banked
 34535  002380  6F6E               	movwf	??_AESEncode& (0+255),b
 34536  002382  0100               	movlb	0	; () banked
 34537  002384  516E               	movf	??_AESEncode& (0+255),w,b
 34538  002386  0D01               	mullw	1
 34539  002388  0E67               	movlw	low _STable
 34540  00238A  24F3               	addwf	prodl,w,c
 34541  00238C  6EF6               	movwf	tblptrl,c
 34542  00238E  0EFE               	movlw	high _STable
 34543  002390  20F4               	addwfc	prodh,w,c
 34544  002392  6EF7               	movwf	tblptrh,c
 34545  002394                     	if	1	;There are 3 active tblptr bytes
 34546  002394  6AF8               	clrf	tblptru,c
 34547  002396  0E00               	movlw	low (__mediumconst shr (0+16))
 34548  002398  22F8               	addwfc	tblptru,f,c
 34549  00239A                     	endif
 34550  00239A  0100               	movlb	0	; () banked
 34551  00239C  5190               	movf	AESEncode@i& (0+255),w,b
 34552  00239E  0D01               	mullw	1
 34553  0023A0  50F3               	movf	prodl,w,c
 34554  0023A2  0100               	movlb	0	; () banked
 34555  0023A4  256A               	addwf	AESEncode@block& (0+255),w,b
 34556  0023A6  6ED9               	movwf	fsr2l,c
 34557  0023A8  50F4               	movf	prodh,w,c
 34558  0023AA  0100               	movlb	0	; () banked
 34559  0023AC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34560  0023AE  6EDA               	movwf	fsr2h,c
 34561  0023B0  0008               	tblrd		*
 34562  0023B2  CFF5 FFDF          	movff	tablat,indf2
 34563                           
 34564                           ; BSR set to: 0
 34565  0023B6  0100               	movlb	0	; () banked
 34566  0023B8  2B90               	incf	AESEncode@i& (0+255),f,b
 34567  0023BA  D7D0               	goto	l13317
 34568  0023BC                     l13327:
 34569                           
 34570                           ; BSR set to: 0
 34571                           ;AES.c: 264: }
 34572                           ;AES.c: 267: EncodeShiftRow(block);
 34573  0023BC  C06A  F064         	movff	AESEncode@block,EncodeShiftRow@stateTable
 34574  0023C0  C06B  F065         	movff	AESEncode@block+1,EncodeShiftRow@stateTable+1
 34575  0023C4  ECE8  F02C         	call	_EncodeShiftRow	;wreg free
 34576                           
 34577                           ;AES.c: 270: if(_roundCounter != 1)
 34578  0023C8  044B               	decf	__roundCounter,w,c
 34579  0023CA  B4D8               	btfsc	status,2,c
 34580  0023CC  D1C5               	goto	l13369
 34581                           
 34582                           ;AES.c: 271: {
 34583                           ;AES.c: 272: unsigned char aux,aux1,aux2,aux3;
 34584                           ;AES.c: 274: for(i=0;i<16;i+=4)
 34585  0023CE  0E00               	movlw	0
 34586  0023D0  0100               	movlb	0	; () banked
 34587  0023D2  6F90               	movwf	AESEncode@i& (0+255),b
 34588  0023D4                     l13333:
 34589                           
 34590                           ; BSR set to: 0
 34591  0023D4  0E0F               	movlw	15
 34592  0023D6  0100               	movlb	0	; () banked
 34593  0023D8  6590               	cpfsgt	AESEncode@i& (0+255),b
 34594  0023DA  D001               	goto	l13337
 34595  0023DC  D1BD               	goto	l13369
 34596  0023DE                     l13337:
 34597                           
 34598                           ; BSR set to: 0
 34599                           ;AES.c: 275: {
 34600                           ;AES.c: 276: aux1= block[i+0] ^ block[i+1];
 34601  0023DE  0100               	movlb	0	; () banked
 34602  0023E0  5190               	movf	AESEncode@i& (0+255),w,b
 34603  0023E2  0100               	movlb	0	; () banked
 34604  0023E4  6F6E               	movwf	??_AESEncode& (0+255),b
 34605  0023E6  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34606  0023E8  0E01               	movlw	1
 34607  0023EA  0100               	movlb	0	; () banked
 34608  0023EC  276E               	addwf	??_AESEncode& (0+255),f,b
 34609  0023EE  0E00               	movlw	0
 34610  0023F0  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34611  0023F2  0100               	movlb	0	; () banked
 34612  0023F4  516E               	movf	??_AESEncode& (0+255),w,b
 34613  0023F6  0100               	movlb	0	; () banked
 34614  0023F8  256A               	addwf	AESEncode@block& (0+255),w,b
 34615  0023FA  6ED9               	movwf	fsr2l,c
 34616  0023FC  0100               	movlb	0	; () banked
 34617  0023FE  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34618  002400  0100               	movlb	0	; () banked
 34619  002402  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34620  002404  6EDA               	movwf	fsr2h,c
 34621  002406  50DF               	movf	indf2,w,c
 34622  002408  0100               	movlb	0	; () banked
 34623  00240A  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34624  00240C  0100               	movlb	0	; () banked
 34625  00240E  5190               	movf	AESEncode@i& (0+255),w,b
 34626  002410  0100               	movlb	0	; () banked
 34627  002412  256A               	addwf	AESEncode@block& (0+255),w,b
 34628  002414  6ED9               	movwf	fsr2l,c
 34629  002416  0100               	movlb	0	; () banked
 34630  002418  0E00               	movlw	0
 34631  00241A  0100               	movlb	0	; () banked
 34632  00241C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34633  00241E  6EDA               	movwf	fsr2h,c
 34634  002420  50DF               	movf	indf2,w,c
 34635  002422  0100               	movlb	0	; () banked
 34636  002424  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34637  002426  0100               	movlb	0	; () banked
 34638  002428  6F8E               	movwf	AESEncode@aux1& (0+255),b
 34639                           
 34640                           ;AES.c: 277: aux3= block[i+2]^block[i+3];
 34641  00242A  0100               	movlb	0	; () banked
 34642  00242C  5190               	movf	AESEncode@i& (0+255),w,b
 34643  00242E  0100               	movlb	0	; () banked
 34644  002430  6F6E               	movwf	??_AESEncode& (0+255),b
 34645  002432  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34646  002434  0E03               	movlw	3
 34647  002436  0100               	movlb	0	; () banked
 34648  002438  276E               	addwf	??_AESEncode& (0+255),f,b
 34649  00243A  0E00               	movlw	0
 34650  00243C  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34651  00243E  0100               	movlb	0	; () banked
 34652  002440  516E               	movf	??_AESEncode& (0+255),w,b
 34653  002442  0100               	movlb	0	; () banked
 34654  002444  256A               	addwf	AESEncode@block& (0+255),w,b
 34655  002446  6ED9               	movwf	fsr2l,c
 34656  002448  0100               	movlb	0	; () banked
 34657  00244A  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34658  00244C  0100               	movlb	0	; () banked
 34659  00244E  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34660  002450  6EDA               	movwf	fsr2h,c
 34661  002452  50DF               	movf	indf2,w,c
 34662  002454  0100               	movlb	0	; () banked
 34663  002456  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34664  002458  0100               	movlb	0	; () banked
 34665  00245A  5190               	movf	AESEncode@i& (0+255),w,b
 34666  00245C  0100               	movlb	0	; () banked
 34667  00245E  6F71               	movwf	(??_AESEncode+3)& (0+255),b
 34668  002460  6B72               	clrf	(??_AESEncode+4)& (0+255),b
 34669  002462  0E02               	movlw	2
 34670  002464  0100               	movlb	0	; () banked
 34671  002466  2771               	addwf	(??_AESEncode+3)& (0+255),f,b
 34672  002468  0E00               	movlw	0
 34673  00246A  2372               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34674  00246C  0100               	movlb	0	; () banked
 34675  00246E  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34676  002470  0100               	movlb	0	; () banked
 34677  002472  256A               	addwf	AESEncode@block& (0+255),w,b
 34678  002474  6ED9               	movwf	fsr2l,c
 34679  002476  0100               	movlb	0	; () banked
 34680  002478  5172               	movf	(??_AESEncode+4)& (0+255),w,b
 34681  00247A  0100               	movlb	0	; () banked
 34682  00247C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34683  00247E  6EDA               	movwf	fsr2h,c
 34684  002480  50DF               	movf	indf2,w,c
 34685  002482  0100               	movlb	0	; () banked
 34686  002484  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34687  002486  0100               	movlb	0	; () banked
 34688  002488  6F8F               	movwf	AESEncode@aux3& (0+255),b
 34689                           
 34690                           ; BSR set to: 0
 34691                           ;AES.c: 278: aux = aux1 ^ aux3;
 34692  00248A  0100               	movlb	0	; () banked
 34693  00248C  518E               	movf	AESEncode@aux1& (0+255),w,b
 34694  00248E  0100               	movlb	0	; () banked
 34695  002490  198F               	xorwf	AESEncode@aux3& (0+255),w,b
 34696  002492  0100               	movlb	0	; () banked
 34697  002494  6F8C               	movwf	AESEncode@aux& (0+255),b
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;AES.c: 279: aux2= block[i+2]^block[i+1];
 34701  002496  0100               	movlb	0	; () banked
 34702  002498  5190               	movf	AESEncode@i& (0+255),w,b
 34703  00249A  0100               	movlb	0	; () banked
 34704  00249C  6F6E               	movwf	??_AESEncode& (0+255),b
 34705  00249E  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34706  0024A0  0E01               	movlw	1
 34707  0024A2  0100               	movlb	0	; () banked
 34708  0024A4  276E               	addwf	??_AESEncode& (0+255),f,b
 34709  0024A6  0E00               	movlw	0
 34710  0024A8  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34711  0024AA  0100               	movlb	0	; () banked
 34712  0024AC  516E               	movf	??_AESEncode& (0+255),w,b
 34713  0024AE  0100               	movlb	0	; () banked
 34714  0024B0  256A               	addwf	AESEncode@block& (0+255),w,b
 34715  0024B2  6ED9               	movwf	fsr2l,c
 34716  0024B4  0100               	movlb	0	; () banked
 34717  0024B6  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34718  0024B8  0100               	movlb	0	; () banked
 34719  0024BA  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34720  0024BC  6EDA               	movwf	fsr2h,c
 34721  0024BE  50DF               	movf	indf2,w,c
 34722  0024C0  0100               	movlb	0	; () banked
 34723  0024C2  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34724  0024C4  0100               	movlb	0	; () banked
 34725  0024C6  5190               	movf	AESEncode@i& (0+255),w,b
 34726  0024C8  0100               	movlb	0	; () banked
 34727  0024CA  6F71               	movwf	(??_AESEncode+3)& (0+255),b
 34728  0024CC  6B72               	clrf	(??_AESEncode+4)& (0+255),b
 34729  0024CE  0E02               	movlw	2
 34730  0024D0  0100               	movlb	0	; () banked
 34731  0024D2  2771               	addwf	(??_AESEncode+3)& (0+255),f,b
 34732  0024D4  0E00               	movlw	0
 34733  0024D6  2372               	addwfc	(??_AESEncode+4)& (0+255),f,b
 34734  0024D8  0100               	movlb	0	; () banked
 34735  0024DA  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34736  0024DC  0100               	movlb	0	; () banked
 34737  0024DE  256A               	addwf	AESEncode@block& (0+255),w,b
 34738  0024E0  6ED9               	movwf	fsr2l,c
 34739  0024E2  0100               	movlb	0	; () banked
 34740  0024E4  5172               	movf	(??_AESEncode+4)& (0+255),w,b
 34741  0024E6  0100               	movlb	0	; () banked
 34742  0024E8  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34743  0024EA  6EDA               	movwf	fsr2h,c
 34744  0024EC  50DF               	movf	indf2,w,c
 34745  0024EE  0100               	movlb	0	; () banked
 34746  0024F0  1970               	xorwf	(??_AESEncode+2)& (0+255),w,b
 34747  0024F2  0100               	movlb	0	; () banked
 34748  0024F4  6F8D               	movwf	AESEncode@aux2& (0+255),b
 34749                           
 34750                           ;AES.c: 281: aux1 = (((aux1)<0x80)?(aux1)<<1:(((aux1)<<1)^0x1b) );
 34751  0024F6  0E7F               	movlw	127
 34752  0024F8  0100               	movlb	0	; () banked
 34753  0024FA  658E               	cpfsgt	AESEncode@aux1& (0+255),b
 34754  0024FC  D012               	goto	l13345
 34755                           
 34756                           ; BSR set to: 0
 34757  0024FE  0E1B               	movlw	27
 34758  002500  C08E  F06E         	movff	AESEncode@aux1,??_AESEncode
 34759  002504  0100               	movlb	0	; () banked
 34760  002506  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34761  002508  90D8               	bcf	status,0,c
 34762  00250A  0100               	movlb	0	; () banked
 34763  00250C  376E               	rlcf	??_AESEncode& (0+255),f,b
 34764  00250E  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34765  002510  0100               	movlb	0	; () banked
 34766  002512  196E               	xorwf	??_AESEncode& (0+255),w,b
 34767  002514  0100               	movlb	0	; () banked
 34768  002516  6F86               	movwf	_AESEncode$3867& (0+255),b
 34769  002518  0100               	movlb	0	; () banked
 34770  00251A  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34771  00251C  0100               	movlb	0	; () banked
 34772  00251E  6F87               	movwf	(_AESEncode$3867+1)& (0+255),b
 34773  002520  D009               	goto	l13347
 34774  002522                     l13345:
 34775                           
 34776                           ; BSR set to: 0
 34777  002522  90D8               	bcf	status,0,c
 34778  002524  0100               	movlb	0	; () banked
 34779  002526  358E               	rlcf	AESEncode@aux1& (0+255),w,b
 34780  002528  0100               	movlb	0	; () banked
 34781  00252A  6F86               	movwf	_AESEncode$3867& (0+255),b
 34782  00252C  0100               	movlb	0	; () banked
 34783  00252E  6B87               	clrf	(_AESEncode$3867+1)& (0+255),b
 34784  002530  0100               	movlb	0	; () banked
 34785  002532  3787               	rlcf	(_AESEncode$3867+1)& (0+255),f,b
 34786  002534                     l13347:
 34787                           
 34788                           ; BSR set to: 0
 34789  002534  C086  F08E         	movff	_AESEncode$3867,AESEncode@aux1
 34790                           
 34791                           ;AES.c: 282: aux2 = (((aux2)<0x80)?(aux2)<<1:(((aux2)<<1)^0x1b) );
 34792  002538  0E7F               	movlw	127
 34793  00253A  0100               	movlb	0	; () banked
 34794  00253C  658D               	cpfsgt	AESEncode@aux2& (0+255),b
 34795  00253E  D012               	goto	l13351
 34796                           
 34797                           ; BSR set to: 0
 34798  002540  0E1B               	movlw	27
 34799  002542  C08D  F06E         	movff	AESEncode@aux2,??_AESEncode
 34800  002546  0100               	movlb	0	; () banked
 34801  002548  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34802  00254A  90D8               	bcf	status,0,c
 34803  00254C  0100               	movlb	0	; () banked
 34804  00254E  376E               	rlcf	??_AESEncode& (0+255),f,b
 34805  002550  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34806  002552  0100               	movlb	0	; () banked
 34807  002554  196E               	xorwf	??_AESEncode& (0+255),w,b
 34808  002556  0100               	movlb	0	; () banked
 34809  002558  6F88               	movwf	_AESEncode$3868& (0+255),b
 34810  00255A  0100               	movlb	0	; () banked
 34811  00255C  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34812  00255E  0100               	movlb	0	; () banked
 34813  002560  6F89               	movwf	(_AESEncode$3868+1)& (0+255),b
 34814  002562  D009               	goto	l13353
 34815  002564                     l13351:
 34816                           
 34817                           ; BSR set to: 0
 34818  002564  90D8               	bcf	status,0,c
 34819  002566  0100               	movlb	0	; () banked
 34820  002568  358D               	rlcf	AESEncode@aux2& (0+255),w,b
 34821  00256A  0100               	movlb	0	; () banked
 34822  00256C  6F88               	movwf	_AESEncode$3868& (0+255),b
 34823  00256E  0100               	movlb	0	; () banked
 34824  002570  6B89               	clrf	(_AESEncode$3868+1)& (0+255),b
 34825  002572  0100               	movlb	0	; () banked
 34826  002574  3789               	rlcf	(_AESEncode$3868+1)& (0+255),f,b
 34827  002576                     l13353:
 34828                           
 34829                           ; BSR set to: 0
 34830  002576  C088  F08D         	movff	_AESEncode$3868,AESEncode@aux2
 34831                           
 34832                           ;AES.c: 283: aux3 = (((aux3)<0x80)?(aux3)<<1:(((aux3)<<1)^0x1b) );
 34833  00257A  0E7F               	movlw	127
 34834  00257C  0100               	movlb	0	; () banked
 34835  00257E  658F               	cpfsgt	AESEncode@aux3& (0+255),b
 34836  002580  D012               	goto	l13357
 34837                           
 34838                           ; BSR set to: 0
 34839  002582  0E1B               	movlw	27
 34840  002584  C08F  F06E         	movff	AESEncode@aux3,??_AESEncode
 34841  002588  0100               	movlb	0	; () banked
 34842  00258A  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34843  00258C  90D8               	bcf	status,0,c
 34844  00258E  0100               	movlb	0	; () banked
 34845  002590  376E               	rlcf	??_AESEncode& (0+255),f,b
 34846  002592  376F               	rlcf	(??_AESEncode+1)& (0+255),f,b
 34847  002594  0100               	movlb	0	; () banked
 34848  002596  196E               	xorwf	??_AESEncode& (0+255),w,b
 34849  002598  0100               	movlb	0	; () banked
 34850  00259A  6F8A               	movwf	_AESEncode$3869& (0+255),b
 34851  00259C  0100               	movlb	0	; () banked
 34852  00259E  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34853  0025A0  0100               	movlb	0	; () banked
 34854  0025A2  6F8B               	movwf	(_AESEncode$3869+1)& (0+255),b
 34855  0025A4  D009               	goto	l13359
 34856  0025A6                     l13357:
 34857                           
 34858                           ; BSR set to: 0
 34859  0025A6  90D8               	bcf	status,0,c
 34860  0025A8  0100               	movlb	0	; () banked
 34861  0025AA  358F               	rlcf	AESEncode@aux3& (0+255),w,b
 34862  0025AC  0100               	movlb	0	; () banked
 34863  0025AE  6F8A               	movwf	_AESEncode$3869& (0+255),b
 34864  0025B0  0100               	movlb	0	; () banked
 34865  0025B2  6B8B               	clrf	(_AESEncode$3869+1)& (0+255),b
 34866  0025B4  0100               	movlb	0	; () banked
 34867  0025B6  378B               	rlcf	(_AESEncode$3869+1)& (0+255),f,b
 34868  0025B8                     l13359:
 34869                           
 34870                           ; BSR set to: 0
 34871  0025B8  C08A  F08F         	movff	_AESEncode$3869,AESEncode@aux3
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;AES.c: 285: block[i+0]= aux^aux1^block[i+0];
 34875  0025BC  0100               	movlb	0	; () banked
 34876  0025BE  5190               	movf	AESEncode@i& (0+255),w,b
 34877  0025C0  0100               	movlb	0	; () banked
 34878  0025C2  256A               	addwf	AESEncode@block& (0+255),w,b
 34879  0025C4  6ED9               	movwf	fsr2l,c
 34880  0025C6  0100               	movlb	0	; () banked
 34881  0025C8  0E00               	movlw	0
 34882  0025CA  0100               	movlb	0	; () banked
 34883  0025CC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34884  0025CE  6EDA               	movwf	fsr2h,c
 34885  0025D0  0100               	movlb	0	; () banked
 34886  0025D2  5190               	movf	AESEncode@i& (0+255),w,b
 34887  0025D4  0100               	movlb	0	; () banked
 34888  0025D6  256A               	addwf	AESEncode@block& (0+255),w,b
 34889  0025D8  6EE9               	movwf	fsr0l,c
 34890  0025DA  0100               	movlb	0	; () banked
 34891  0025DC  0E00               	movlw	0
 34892  0025DE  0100               	movlb	0	; () banked
 34893  0025E0  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34894  0025E2  6EEA               	movwf	fsr0h,c
 34895  0025E4  50EF               	movf	indf0,w,c
 34896  0025E6  0100               	movlb	0	; () banked
 34897  0025E8  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34898  0025EA  0100               	movlb	0	; () banked
 34899  0025EC  198E               	xorwf	AESEncode@aux1& (0+255),w,b
 34900  0025EE  6EDF               	movwf	indf2,c
 34901                           
 34902                           ; BSR set to: 0
 34903                           ;AES.c: 286: block[i+1]= aux^aux2^block[i+1];
 34904  0025F0  0100               	movlb	0	; () banked
 34905  0025F2  5190               	movf	AESEncode@i& (0+255),w,b
 34906  0025F4  0100               	movlb	0	; () banked
 34907  0025F6  6F6E               	movwf	??_AESEncode& (0+255),b
 34908  0025F8  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34909  0025FA  0E01               	movlw	1
 34910  0025FC  0100               	movlb	0	; () banked
 34911  0025FE  276E               	addwf	??_AESEncode& (0+255),f,b
 34912  002600  0E00               	movlw	0
 34913  002602  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34914  002604  0100               	movlb	0	; () banked
 34915  002606  516E               	movf	??_AESEncode& (0+255),w,b
 34916  002608  0100               	movlb	0	; () banked
 34917  00260A  256A               	addwf	AESEncode@block& (0+255),w,b
 34918  00260C  6ED9               	movwf	fsr2l,c
 34919  00260E  0100               	movlb	0	; () banked
 34920  002610  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34921  002612  0100               	movlb	0	; () banked
 34922  002614  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34923  002616  6EDA               	movwf	fsr2h,c
 34924  002618  0100               	movlb	0	; () banked
 34925  00261A  5190               	movf	AESEncode@i& (0+255),w,b
 34926  00261C  0100               	movlb	0	; () banked
 34927  00261E  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34928  002620  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 34929  002622  0E01               	movlw	1
 34930  002624  0100               	movlb	0	; () banked
 34931  002626  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 34932  002628  0E00               	movlw	0
 34933  00262A  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34934  00262C  0100               	movlb	0	; () banked
 34935  00262E  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 34936  002630  0100               	movlb	0	; () banked
 34937  002632  256A               	addwf	AESEncode@block& (0+255),w,b
 34938  002634  6EE9               	movwf	fsr0l,c
 34939  002636  0100               	movlb	0	; () banked
 34940  002638  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34941  00263A  0100               	movlb	0	; () banked
 34942  00263C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34943  00263E  6EEA               	movwf	fsr0h,c
 34944  002640  50EF               	movf	indf0,w,c
 34945  002642  0100               	movlb	0	; () banked
 34946  002644  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34947  002646  0100               	movlb	0	; () banked
 34948  002648  198D               	xorwf	AESEncode@aux2& (0+255),w,b
 34949  00264A  6EDF               	movwf	indf2,c
 34950                           
 34951                           ; BSR set to: 0
 34952                           ;AES.c: 287: block[i+2]= aux^aux3^block[i+2];
 34953  00264C  0100               	movlb	0	; () banked
 34954  00264E  5190               	movf	AESEncode@i& (0+255),w,b
 34955  002650  0100               	movlb	0	; () banked
 34956  002652  6F6E               	movwf	??_AESEncode& (0+255),b
 34957  002654  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 34958  002656  0E02               	movlw	2
 34959  002658  0100               	movlb	0	; () banked
 34960  00265A  276E               	addwf	??_AESEncode& (0+255),f,b
 34961  00265C  0E00               	movlw	0
 34962  00265E  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 34963  002660  0100               	movlb	0	; () banked
 34964  002662  516E               	movf	??_AESEncode& (0+255),w,b
 34965  002664  0100               	movlb	0	; () banked
 34966  002666  256A               	addwf	AESEncode@block& (0+255),w,b
 34967  002668  6ED9               	movwf	fsr2l,c
 34968  00266A  0100               	movlb	0	; () banked
 34969  00266C  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 34970  00266E  0100               	movlb	0	; () banked
 34971  002670  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34972  002672  6EDA               	movwf	fsr2h,c
 34973  002674  0100               	movlb	0	; () banked
 34974  002676  5190               	movf	AESEncode@i& (0+255),w,b
 34975  002678  0100               	movlb	0	; () banked
 34976  00267A  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 34977  00267C  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 34978  00267E  0E02               	movlw	2
 34979  002680  0100               	movlb	0	; () banked
 34980  002682  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 34981  002684  0E00               	movlw	0
 34982  002686  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 34983  002688  0100               	movlb	0	; () banked
 34984  00268A  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 34985  00268C  0100               	movlb	0	; () banked
 34986  00268E  256A               	addwf	AESEncode@block& (0+255),w,b
 34987  002690  6EE9               	movwf	fsr0l,c
 34988  002692  0100               	movlb	0	; () banked
 34989  002694  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 34990  002696  0100               	movlb	0	; () banked
 34991  002698  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 34992  00269A  6EEA               	movwf	fsr0h,c
 34993  00269C  50EF               	movf	indf0,w,c
 34994  00269E  0100               	movlb	0	; () banked
 34995  0026A0  198C               	xorwf	AESEncode@aux& (0+255),w,b
 34996  0026A2  0100               	movlb	0	; () banked
 34997  0026A4  198F               	xorwf	AESEncode@aux3& (0+255),w,b
 34998  0026A6  6EDF               	movwf	indf2,c
 34999                           
 35000                           ; BSR set to: 0
 35001                           ;AES.c: 288: block[i+3]= block[i+0]^block[i+1]^block[i+2]^aux;
 35002  0026A8  0100               	movlb	0	; () banked
 35003  0026AA  5190               	movf	AESEncode@i& (0+255),w,b
 35004  0026AC  0100               	movlb	0	; () banked
 35005  0026AE  6F6E               	movwf	??_AESEncode& (0+255),b
 35006  0026B0  6B6F               	clrf	(??_AESEncode+1)& (0+255),b
 35007  0026B2  0E03               	movlw	3
 35008  0026B4  0100               	movlb	0	; () banked
 35009  0026B6  276E               	addwf	??_AESEncode& (0+255),f,b
 35010  0026B8  0E00               	movlw	0
 35011  0026BA  236F               	addwfc	(??_AESEncode+1)& (0+255),f,b
 35012  0026BC  0100               	movlb	0	; () banked
 35013  0026BE  516E               	movf	??_AESEncode& (0+255),w,b
 35014  0026C0  0100               	movlb	0	; () banked
 35015  0026C2  256A               	addwf	AESEncode@block& (0+255),w,b
 35016  0026C4  6ED9               	movwf	fsr2l,c
 35017  0026C6  0100               	movlb	0	; () banked
 35018  0026C8  516F               	movf	(??_AESEncode+1)& (0+255),w,b
 35019  0026CA  0100               	movlb	0	; () banked
 35020  0026CC  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35021  0026CE  6EDA               	movwf	fsr2h,c
 35022  0026D0  0100               	movlb	0	; () banked
 35023  0026D2  5190               	movf	AESEncode@i& (0+255),w,b
 35024  0026D4  0100               	movlb	0	; () banked
 35025  0026D6  6F70               	movwf	(??_AESEncode+2)& (0+255),b
 35026  0026D8  6B71               	clrf	(??_AESEncode+3)& (0+255),b
 35027  0026DA  0E02               	movlw	2
 35028  0026DC  0100               	movlb	0	; () banked
 35029  0026DE  2770               	addwf	(??_AESEncode+2)& (0+255),f,b
 35030  0026E0  0E00               	movlw	0
 35031  0026E2  2371               	addwfc	(??_AESEncode+3)& (0+255),f,b
 35032  0026E4  0100               	movlb	0	; () banked
 35033  0026E6  5170               	movf	(??_AESEncode+2)& (0+255),w,b
 35034  0026E8  0100               	movlb	0	; () banked
 35035  0026EA  256A               	addwf	AESEncode@block& (0+255),w,b
 35036  0026EC  6EE9               	movwf	fsr0l,c
 35037  0026EE  0100               	movlb	0	; () banked
 35038  0026F0  5171               	movf	(??_AESEncode+3)& (0+255),w,b
 35039  0026F2  0100               	movlb	0	; () banked
 35040  0026F4  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35041  0026F6  6EEA               	movwf	fsr0h,c
 35042  0026F8  50EF               	movf	indf0,w,c
 35043  0026FA  0100               	movlb	0	; () banked
 35044  0026FC  6F72               	movwf	(??_AESEncode+4)& (0+255),b
 35045  0026FE  0100               	movlb	0	; () banked
 35046  002700  5190               	movf	AESEncode@i& (0+255),w,b
 35047  002702  0100               	movlb	0	; () banked
 35048  002704  6F73               	movwf	(??_AESEncode+5)& (0+255),b
 35049  002706  6B74               	clrf	(??_AESEncode+6)& (0+255),b
 35050  002708  0E01               	movlw	1
 35051  00270A  0100               	movlb	0	; () banked
 35052  00270C  2773               	addwf	(??_AESEncode+5)& (0+255),f,b
 35053  00270E  0E00               	movlw	0
 35054  002710  2374               	addwfc	(??_AESEncode+6)& (0+255),f,b
 35055  002712  0100               	movlb	0	; () banked
 35056  002714  5173               	movf	(??_AESEncode+5)& (0+255),w,b
 35057  002716  0100               	movlb	0	; () banked
 35058  002718  256A               	addwf	AESEncode@block& (0+255),w,b
 35059  00271A  6EE9               	movwf	fsr0l,c
 35060  00271C  0100               	movlb	0	; () banked
 35061  00271E  5174               	movf	(??_AESEncode+6)& (0+255),w,b
 35062  002720  0100               	movlb	0	; () banked
 35063  002722  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35064  002724  6EEA               	movwf	fsr0h,c
 35065  002726  50EF               	movf	indf0,w,c
 35066  002728  0100               	movlb	0	; () banked
 35067  00272A  6F75               	movwf	(??_AESEncode+7)& (0+255),b
 35068  00272C  0100               	movlb	0	; () banked
 35069  00272E  5190               	movf	AESEncode@i& (0+255),w,b
 35070  002730  0100               	movlb	0	; () banked
 35071  002732  256A               	addwf	AESEncode@block& (0+255),w,b
 35072  002734  6EE9               	movwf	fsr0l,c
 35073  002736  0100               	movlb	0	; () banked
 35074  002738  0E00               	movlw	0
 35075  00273A  0100               	movlb	0	; () banked
 35076  00273C  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35077  00273E  6EEA               	movwf	fsr0h,c
 35078  002740  50EF               	movf	indf0,w,c
 35079  002742  0100               	movlb	0	; () banked
 35080  002744  1975               	xorwf	(??_AESEncode+7)& (0+255),w,b
 35081  002746  0100               	movlb	0	; () banked
 35082  002748  1972               	xorwf	(??_AESEncode+4)& (0+255),w,b
 35083  00274A  0100               	movlb	0	; () banked
 35084  00274C  198C               	xorwf	AESEncode@aux& (0+255),w,b
 35085  00274E  6EDF               	movwf	indf2,c
 35086  002750  0E04               	movlw	4
 35087  002752  0100               	movlb	0	; () banked
 35088  002754  2790               	addwf	AESEncode@i& (0+255),f,b
 35089  002756  D63E               	goto	l13333
 35090  002758                     l13369:
 35091                           
 35092                           ;AES.c: 289: }
 35093                           ;AES.c: 290: }
 35094                           ;AES.c: 292: EncKeySchedule(key);
 35095  002758  0E76               	movlw	low AESEncode@key
 35096  00275A  0100               	movlb	0	; () banked
 35097  00275C  6F64               	movwf	EncKeySchedule@key& (0+255),b
 35098  00275E  0E00               	movlw	high AESEncode@key
 35099  002760  0100               	movlb	0	; () banked
 35100  002762  6F65               	movwf	(EncKeySchedule@key+1)& (0+255),b
 35101  002764  EC9B  F01D         	call	_EncKeySchedule	;wreg free
 35102                           
 35103                           ;AES.c: 294: for(i=0;i<16;i++)
 35104  002768  0E00               	movlw	0
 35105  00276A  0100               	movlb	0	; () banked
 35106  00276C  6F90               	movwf	AESEncode@i& (0+255),b
 35107  00276E                     l13373:
 35108                           
 35109                           ; BSR set to: 0
 35110  00276E  0E0F               	movlw	15
 35111  002770  0100               	movlb	0	; () banked
 35112  002772  6590               	cpfsgt	AESEncode@i& (0+255),b
 35113  002774  D001               	goto	l13377
 35114  002776  D01D               	goto	l13383
 35115  002778                     l13377:
 35116                           
 35117                           ; BSR set to: 0
 35118                           ;AES.c: 295: {
 35119                           ;AES.c: 296: block[i] ^= key[i];
 35120  002778  0100               	movlb	0	; () banked
 35121  00277A  5190               	movf	AESEncode@i& (0+255),w,b
 35122  00277C  0D01               	mullw	1
 35123  00277E  0E76               	movlw	low AESEncode@key
 35124  002780  24F3               	addwf	prodl,w,c
 35125  002782  6ED9               	movwf	fsr2l,c
 35126  002784  0E00               	movlw	high AESEncode@key
 35127  002786  20F4               	addwfc	prodh,w,c
 35128  002788  6EDA               	movwf	fsr2h,c
 35129  00278A  50DF               	movf	indf2,w,c
 35130  00278C  0100               	movlb	0	; () banked
 35131  00278E  6F6E               	movwf	??_AESEncode& (0+255),b
 35132  002790  0100               	movlb	0	; () banked
 35133  002792  5190               	movf	AESEncode@i& (0+255),w,b
 35134  002794  0D01               	mullw	1
 35135  002796  50F3               	movf	prodl,w,c
 35136  002798  0100               	movlb	0	; () banked
 35137  00279A  256A               	addwf	AESEncode@block& (0+255),w,b
 35138  00279C  6ED9               	movwf	fsr2l,c
 35139  00279E  50F4               	movf	prodh,w,c
 35140  0027A0  0100               	movlb	0	; () banked
 35141  0027A2  216B               	addwfc	(AESEncode@block+1)& (0+255),w,b
 35142  0027A4  6EDA               	movwf	fsr2h,c
 35143  0027A6  0100               	movlb	0	; () banked
 35144  0027A8  516E               	movf	??_AESEncode& (0+255),w,b
 35145  0027AA  1ADF               	xorwf	indf2,f,c
 35146                           
 35147                           ; BSR set to: 0
 35148  0027AC  0100               	movlb	0	; () banked
 35149  0027AE  2B90               	incf	AESEncode@i& (0+255),f,b
 35150  0027B0  D7DE               	goto	l13373
 35151  0027B2                     l13383:
 35152                           
 35153                           ; BSR set to: 0
 35154                           ;AES.c: 297: }
 35155                           ;AES.c: 299: _roundCounter--;
 35156  0027B2  064B               	decf	__roundCounter,f,c
 35157                           
 35158                           ; BSR set to: 0
 35159                           ;AES.c: 300: }
 35160                           ;AES.c: 301: while(_roundCounter !=0);
 35161  0027B4  504B               	movf	__roundCounter,w,c
 35162  0027B6  B4D8               	btfsc	status,2,c
 35163  0027B8  0012               	return	
 35164  0027BA  D5CD               	goto	l13315
 35165  0027BC                     __end_of_AESEncode:
 35166                           	opt stack 0
 35167                           tosu	equ	0xFFF
 35168                           tosh	equ	0xFFE
 35169                           tosl	equ	0xFFD
 35170                           pclath	equ	0xFFA
 35171                           tblptru	equ	0xFF8
 35172                           tblptrh	equ	0xFF7
 35173                           tblptrl	equ	0xFF6
 35174                           tablat	equ	0xFF5
 35175                           prodh	equ	0xFF4
 35176                           prodl	equ	0xFF3
 35177                           intcon	equ	0xFF2
 35178                           intcon2	equ	0xFF1
 35179                           intcon3	equ	0xFF0
 35180                           indf0	equ	0xFEF
 35181                           postinc0	equ	0xFEE
 35182                           plusw0	equ	0xFEB
 35183                           fsr0h	equ	0xFEA
 35184                           fsr0l	equ	0xFE9
 35185                           wreg	equ	0xFE8
 35186                           postinc1	equ	0xFE6
 35187                           postdec1	equ	0xFE5
 35188                           plusw1	equ	0xFE3
 35189                           fsr1h	equ	0xFE2
 35190                           fsr1l	equ	0xFE1
 35191                           indf2	equ	0xFDF
 35192                           postinc2	equ	0xFDE
 35193                           postdec2	equ	0xFDD
 35194                           plusw2	equ	0xFDB
 35195                           fsr2h	equ	0xFDA
 35196                           fsr2l	equ	0xFD9
 35197                           status	equ	0xFD8
 35198                           
 35199 ;; *************** function _EncodeShiftRow *****************
 35200 ;; Defined at:
 35201 ;;		line 205 in file "mcc_generated_files/LoRaWAN/AES.c"
 35202 ;; Parameters:    Size  Location     Type
 35203 ;;  stateTable      2    4[BANK0 ] PTR unsigned char 
 35204 ;;		 -> aesBuffer(16), LORAWAN_RxDone@hdr(2), GenerateSubkey@l(16), AESCmac@y(16), 
 35205 ;;		 -> AESCmac@x(16), loRa.activationParameters(105), radioBuffer(271), loRa(245), 
 35206 ;; Auto vars:     Size  Location     Type
 35207 ;;  temp            1    6[BANK0 ] unsigned char 
 35208 ;; Return value:  Size  Location     Type
 35209 ;;                  1    wreg      void 
 35210 ;; Registers used:
 35211 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0
 35212 ;; Tracked objects:
 35213 ;;		On entry : 0/0
 35214 ;;		On exit  : 0/0
 35215 ;;		Unchanged: 0/0
 35216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35217 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35218 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35220 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35221 ;;Total ram usage:        3 bytes
 35222 ;; Hardware stack levels used:    1
 35223 ;; Hardware stack levels required when called:    7
 35224 ;; This function calls:
 35225 ;;		Nothing
 35226 ;; This function is called by:
 35227 ;;		_AESEncode
 35228 ;; This function uses a non-reentrant model
 35229 ;;
 35230                           
 35231                           	psect	text156
 35232  0059D0                     __ptext156:
 35233                           	opt stack 0
 35234  0059D0                     _EncodeShiftRow:
 35235                           	opt stack 17
 35236                           
 35237                           ;AES.c: 207: unsigned char temp;
 35238                           ;AES.c: 212: temp=stateTable[1];
 35239                           
 35240                           ; BSR set to: 0
 35241                           ;incstack = 0
 35242  0059D0  0100               	movlb	0	; () banked
 35243  0059D2  EE20 F001          	lfsr	2,1
 35244  0059D6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35245  0059D8  26D9               	addwf	fsr2l,f,c
 35246  0059DA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35247  0059DC  22DA               	addwfc	fsr2h,f,c
 35248  0059DE  50DF               	movf	indf2,w,c
 35249  0059E0  0100               	movlb	0	; () banked
 35250  0059E2  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35251                           
 35252                           ; BSR set to: 0
 35253                           ;AES.c: 213: stateTable[1]=stateTable[5];
 35254  0059E4  0100               	movlb	0	; () banked
 35255  0059E6  EE20 F005          	lfsr	2,5
 35256  0059EA  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35257  0059EC  26D9               	addwf	fsr2l,f,c
 35258  0059EE  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35259  0059F0  22DA               	addwfc	fsr2h,f,c
 35260  0059F2  0100               	movlb	0	; () banked
 35261  0059F4  EE00 F001          	lfsr	0,1
 35262  0059F8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35263  0059FA  26E9               	addwf	fsr0l,f,c
 35264  0059FC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35265  0059FE  22EA               	addwfc	fsr0h,f,c
 35266  005A00  CFDF FFEF          	movff	indf2,indf0
 35267                           
 35268                           ; BSR set to: 0
 35269                           ;AES.c: 214: stateTable[5]=stateTable[9];
 35270  005A04  0100               	movlb	0	; () banked
 35271  005A06  EE20 F009          	lfsr	2,9
 35272  005A0A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35273  005A0C  26D9               	addwf	fsr2l,f,c
 35274  005A0E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35275  005A10  22DA               	addwfc	fsr2h,f,c
 35276  005A12  0100               	movlb	0	; () banked
 35277  005A14  EE00 F005          	lfsr	0,5
 35278  005A18  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35279  005A1A  26E9               	addwf	fsr0l,f,c
 35280  005A1C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35281  005A1E  22EA               	addwfc	fsr0h,f,c
 35282  005A20  CFDF FFEF          	movff	indf2,indf0
 35283                           
 35284                           ; BSR set to: 0
 35285                           ;AES.c: 215: stateTable[9]=stateTable[13];
 35286  005A24  0100               	movlb	0	; () banked
 35287  005A26  EE20 F00D          	lfsr	2,13
 35288  005A2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35289  005A2C  26D9               	addwf	fsr2l,f,c
 35290  005A2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35291  005A30  22DA               	addwfc	fsr2h,f,c
 35292  005A32  0100               	movlb	0	; () banked
 35293  005A34  EE00 F009          	lfsr	0,9
 35294  005A38  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35295  005A3A  26E9               	addwf	fsr0l,f,c
 35296  005A3C  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35297  005A3E  22EA               	addwfc	fsr0h,f,c
 35298  005A40  CFDF FFEF          	movff	indf2,indf0
 35299                           
 35300                           ; BSR set to: 0
 35301                           ;AES.c: 216: stateTable[13]=temp;
 35302  005A44  0100               	movlb	0	; () banked
 35303  005A46  EE20 F00D          	lfsr	2,13
 35304  005A4A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35305  005A4C  26D9               	addwf	fsr2l,f,c
 35306  005A4E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35307  005A50  22DA               	addwfc	fsr2h,f,c
 35308  005A52  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35309                           
 35310                           ; BSR set to: 0
 35311                           ;AES.c: 219: temp=stateTable[2];
 35312  005A56  0100               	movlb	0	; () banked
 35313  005A58  EE20 F002          	lfsr	2,2
 35314  005A5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35315  005A5E  26D9               	addwf	fsr2l,f,c
 35316  005A60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35317  005A62  22DA               	addwfc	fsr2h,f,c
 35318  005A64  50DF               	movf	indf2,w,c
 35319  005A66  0100               	movlb	0	; () banked
 35320  005A68  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35321                           
 35322                           ; BSR set to: 0
 35323                           ;AES.c: 220: stateTable[2]=stateTable[10];
 35324  005A6A  0100               	movlb	0	; () banked
 35325  005A6C  EE20 F00A          	lfsr	2,10
 35326  005A70  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35327  005A72  26D9               	addwf	fsr2l,f,c
 35328  005A74  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35329  005A76  22DA               	addwfc	fsr2h,f,c
 35330  005A78  0100               	movlb	0	; () banked
 35331  005A7A  EE00 F002          	lfsr	0,2
 35332  005A7E  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35333  005A80  26E9               	addwf	fsr0l,f,c
 35334  005A82  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35335  005A84  22EA               	addwfc	fsr0h,f,c
 35336  005A86  CFDF FFEF          	movff	indf2,indf0
 35337                           
 35338                           ;AES.c: 221: stateTable[10]=temp;
 35339  005A8A  0100               	movlb	0	; () banked
 35340  005A8C  EE20 F00A          	lfsr	2,10
 35341  005A90  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35342  005A92  26D9               	addwf	fsr2l,f,c
 35343  005A94  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35344  005A96  22DA               	addwfc	fsr2h,f,c
 35345  005A98  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35346                           
 35347                           ;AES.c: 222: temp=stateTable[14];
 35348  005A9C  0100               	movlb	0	; () banked
 35349  005A9E  EE20 F00E          	lfsr	2,14
 35350  005AA2  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35351  005AA4  26D9               	addwf	fsr2l,f,c
 35352  005AA6  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35353  005AA8  22DA               	addwfc	fsr2h,f,c
 35354  005AAA  50DF               	movf	indf2,w,c
 35355  005AAC  0100               	movlb	0	; () banked
 35356  005AAE  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35357                           
 35358                           ; BSR set to: 0
 35359                           ;AES.c: 223: stateTable[14]=stateTable[6];
 35360  005AB0  0100               	movlb	0	; () banked
 35361  005AB2  EE20 F006          	lfsr	2,6
 35362  005AB6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35363  005AB8  26D9               	addwf	fsr2l,f,c
 35364  005ABA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35365  005ABC  22DA               	addwfc	fsr2h,f,c
 35366  005ABE  0100               	movlb	0	; () banked
 35367  005AC0  EE00 F00E          	lfsr	0,14
 35368  005AC4  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35369  005AC6  26E9               	addwf	fsr0l,f,c
 35370  005AC8  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35371  005ACA  22EA               	addwfc	fsr0h,f,c
 35372  005ACC  CFDF FFEF          	movff	indf2,indf0
 35373                           
 35374                           ; BSR set to: 0
 35375                           ;AES.c: 224: stateTable[6]=temp;
 35376  005AD0  0100               	movlb	0	; () banked
 35377  005AD2  EE20 F006          	lfsr	2,6
 35378  005AD6  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35379  005AD8  26D9               	addwf	fsr2l,f,c
 35380  005ADA  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35381  005ADC  22DA               	addwfc	fsr2h,f,c
 35382  005ADE  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35383                           
 35384                           ; BSR set to: 0
 35385                           ;AES.c: 227: temp=stateTable[3];
 35386  005AE2  0100               	movlb	0	; () banked
 35387  005AE4  EE20 F003          	lfsr	2,3
 35388  005AE8  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35389  005AEA  26D9               	addwf	fsr2l,f,c
 35390  005AEC  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35391  005AEE  22DA               	addwfc	fsr2h,f,c
 35392  005AF0  50DF               	movf	indf2,w,c
 35393  005AF2  0100               	movlb	0	; () banked
 35394  005AF4  6F66               	movwf	EncodeShiftRow@temp& (0+255),b
 35395                           
 35396                           ; BSR set to: 0
 35397                           ;AES.c: 228: stateTable[3]=stateTable[15];
 35398  005AF6  0100               	movlb	0	; () banked
 35399  005AF8  EE20 F00F          	lfsr	2,15
 35400  005AFC  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35401  005AFE  26D9               	addwf	fsr2l,f,c
 35402  005B00  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35403  005B02  22DA               	addwfc	fsr2h,f,c
 35404  005B04  0100               	movlb	0	; () banked
 35405  005B06  EE00 F003          	lfsr	0,3
 35406  005B0A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35407  005B0C  26E9               	addwf	fsr0l,f,c
 35408  005B0E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35409  005B10  22EA               	addwfc	fsr0h,f,c
 35410  005B12  CFDF FFEF          	movff	indf2,indf0
 35411                           
 35412                           ; BSR set to: 0
 35413                           ;AES.c: 229: stateTable[15]=stateTable[11];
 35414  005B16  0100               	movlb	0	; () banked
 35415  005B18  EE20 F00B          	lfsr	2,11
 35416  005B1C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35417  005B1E  26D9               	addwf	fsr2l,f,c
 35418  005B20  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35419  005B22  22DA               	addwfc	fsr2h,f,c
 35420  005B24  0100               	movlb	0	; () banked
 35421  005B26  EE00 F00F          	lfsr	0,15
 35422  005B2A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35423  005B2C  26E9               	addwf	fsr0l,f,c
 35424  005B2E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35425  005B30  22EA               	addwfc	fsr0h,f,c
 35426  005B32  CFDF FFEF          	movff	indf2,indf0
 35427                           
 35428                           ; BSR set to: 0
 35429                           ;AES.c: 230: stateTable[11]=stateTable[7];
 35430  005B36  0100               	movlb	0	; () banked
 35431  005B38  EE20 F007          	lfsr	2,7
 35432  005B3C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35433  005B3E  26D9               	addwf	fsr2l,f,c
 35434  005B40  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35435  005B42  22DA               	addwfc	fsr2h,f,c
 35436  005B44  0100               	movlb	0	; () banked
 35437  005B46  EE00 F00B          	lfsr	0,11
 35438  005B4A  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35439  005B4C  26E9               	addwf	fsr0l,f,c
 35440  005B4E  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35441  005B50  22EA               	addwfc	fsr0h,f,c
 35442  005B52  CFDF FFEF          	movff	indf2,indf0
 35443                           
 35444                           ;AES.c: 231: stateTable[7]=temp;
 35445  005B56  0100               	movlb	0	; () banked
 35446  005B58  EE20 F007          	lfsr	2,7
 35447  005B5C  5164               	movf	EncodeShiftRow@stateTable& (0+255),w,b
 35448  005B5E  26D9               	addwf	fsr2l,f,c
 35449  005B60  5165               	movf	(EncodeShiftRow@stateTable+1)& (0+255),w,b
 35450  005B62  22DA               	addwfc	fsr2h,f,c
 35451  005B64  C066  FFDF         	movff	EncodeShiftRow@temp,indf2
 35452                           
 35453                           ; BSR set to: 0
 35454  005B68  0012               	return		;funcret
 35455  005B6A                     __end_of_EncodeShiftRow:
 35456                           	opt stack 0
 35457                           tosu	equ	0xFFF
 35458                           tosh	equ	0xFFE
 35459                           tosl	equ	0xFFD
 35460                           pclath	equ	0xFFA
 35461                           tblptru	equ	0xFF8
 35462                           tblptrh	equ	0xFF7
 35463                           tblptrl	equ	0xFF6
 35464                           tablat	equ	0xFF5
 35465                           prodh	equ	0xFF4
 35466                           prodl	equ	0xFF3
 35467                           intcon	equ	0xFF2
 35468                           intcon2	equ	0xFF1
 35469                           intcon3	equ	0xFF0
 35470                           indf0	equ	0xFEF
 35471                           postinc0	equ	0xFEE
 35472                           plusw0	equ	0xFEB
 35473                           fsr0h	equ	0xFEA
 35474                           fsr0l	equ	0xFE9
 35475                           wreg	equ	0xFE8
 35476                           postinc1	equ	0xFE6
 35477                           postdec1	equ	0xFE5
 35478                           plusw1	equ	0xFE3
 35479                           fsr1h	equ	0xFE2
 35480                           fsr1l	equ	0xFE1
 35481                           indf2	equ	0xFDF
 35482                           postinc2	equ	0xFDE
 35483                           postdec2	equ	0xFDD
 35484                           plusw2	equ	0xFDB
 35485                           fsr2h	equ	0xFDA
 35486                           fsr2l	equ	0xFD9
 35487                           status	equ	0xFD8
 35488                           
 35489 ;; *************** function _EncKeySchedule *****************
 35490 ;; Defined at:
 35491 ;;		line 160 in file "mcc_generated_files/LoRaWAN/AES.c"
 35492 ;; Parameters:    Size  Location     Type
 35493 ;;  key             2    4[BANK0 ] PTR unsigned char 
 35494 ;;		 -> AESEncode@key(16), 
 35495 ;; Auto vars:     Size  Location     Type
 35496 ;;		None
 35497 ;; Return value:  Size  Location     Type
 35498 ;;                  1    wreg      void 
 35499 ;; Registers used:
 35500 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 35501 ;; Tracked objects:
 35502 ;;		On entry : 0/0
 35503 ;;		On exit  : 0/0
 35504 ;;		Unchanged: 0/0
 35505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 35506 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35507 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35508 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35509 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 35510 ;;Total ram usage:        6 bytes
 35511 ;; Hardware stack levels used:    1
 35512 ;; Hardware stack levels required when called:    7
 35513 ;; This function calls:
 35514 ;;		Nothing
 35515 ;; This function is called by:
 35516 ;;		_AESEncode
 35517 ;; This function uses a non-reentrant model
 35518 ;;
 35519                           
 35520                           	psect	text157
 35521  003B36                     __ptext157:
 35522                           	opt stack 0
 35523  003B36                     _EncKeySchedule:
 35524                           	opt stack 17
 35525                           
 35526                           ;AES.c: 163: key[0]^=STable[key[13]];
 35527                           
 35528                           ; BSR set to: 0
 35529                           ;incstack = 0
 35530  003B36  0100               	movlb	0	; () banked
 35531  003B38  EE20 F00D          	lfsr	2,13
 35532  003B3C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35533  003B3E  26D9               	addwf	fsr2l,f,c
 35534  003B40  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35535  003B42  22DA               	addwfc	fsr2h,f,c
 35536  003B44  50DF               	movf	indf2,w,c
 35537  003B46  0100               	movlb	0	; () banked
 35538  003B48  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35539  003B4A  0100               	movlb	0	; () banked
 35540  003B4C  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35541  003B4E  0D01               	mullw	1
 35542  003B50  0E67               	movlw	low _STable
 35543  003B52  24F3               	addwf	prodl,w,c
 35544  003B54  6EF6               	movwf	tblptrl,c
 35545  003B56  0EFE               	movlw	high _STable
 35546  003B58  20F4               	addwfc	prodh,w,c
 35547  003B5A  6EF7               	movwf	tblptrh,c
 35548  003B5C                     	if	1	;There are 3 active tblptr bytes
 35549  003B5C  6AF8               	clrf	tblptru,c
 35550  003B5E  0E00               	movlw	low (__mediumconst shr (0+16))
 35551  003B60  22F8               	addwfc	tblptru,f,c
 35552  003B62                     	endif
 35553  003B62  0008               	tblrd		*
 35554  003B64  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35555  003B68  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35556  003B6C  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35557  003B70  0100               	movlb	0	; () banked
 35558  003B72  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35559  003B74  1ADF               	xorwf	indf2,f,c
 35560                           
 35561                           ;AES.c: 164: key[1]^=STable[key[14]];
 35562  003B76  0100               	movlb	0	; () banked
 35563  003B78  EE20 F00E          	lfsr	2,14
 35564  003B7C  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35565  003B7E  26D9               	addwf	fsr2l,f,c
 35566  003B80  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35567  003B82  22DA               	addwfc	fsr2h,f,c
 35568  003B84  50DF               	movf	indf2,w,c
 35569  003B86  0100               	movlb	0	; () banked
 35570  003B88  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35571  003B8A  0100               	movlb	0	; () banked
 35572  003B8C  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35573  003B8E  0D01               	mullw	1
 35574  003B90  0E67               	movlw	low _STable
 35575  003B92  24F3               	addwf	prodl,w,c
 35576  003B94  6EF6               	movwf	tblptrl,c
 35577  003B96  0EFE               	movlw	high _STable
 35578  003B98  20F4               	addwfc	prodh,w,c
 35579  003B9A  6EF7               	movwf	tblptrh,c
 35580  003B9C                     	if	1	;There are 3 active tblptr bytes
 35581  003B9C  6AF8               	clrf	tblptru,c
 35582  003B9E  0E00               	movlw	low (__mediumconst shr (0+16))
 35583  003BA0  22F8               	addwfc	tblptru,f,c
 35584  003BA2                     	endif
 35585  003BA2  0008               	tblrd		*
 35586  003BA4  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35587  003BA8  0100               	movlb	0	; () banked
 35588  003BAA  EE20 F001          	lfsr	2,1
 35589  003BAE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35590  003BB0  26D9               	addwf	fsr2l,f,c
 35591  003BB2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35592  003BB4  22DA               	addwfc	fsr2h,f,c
 35593  003BB6  0100               	movlb	0	; () banked
 35594  003BB8  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35595  003BBA  1ADF               	xorwf	indf2,f,c
 35596                           
 35597                           ;AES.c: 165: key[2]^=STable[key[15]];
 35598  003BBC  0100               	movlb	0	; () banked
 35599  003BBE  EE20 F00F          	lfsr	2,15
 35600  003BC2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35601  003BC4  26D9               	addwf	fsr2l,f,c
 35602  003BC6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35603  003BC8  22DA               	addwfc	fsr2h,f,c
 35604  003BCA  50DF               	movf	indf2,w,c
 35605  003BCC  0100               	movlb	0	; () banked
 35606  003BCE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35607  003BD0  0100               	movlb	0	; () banked
 35608  003BD2  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35609  003BD4  0D01               	mullw	1
 35610  003BD6  0E67               	movlw	low _STable
 35611  003BD8  24F3               	addwf	prodl,w,c
 35612  003BDA  6EF6               	movwf	tblptrl,c
 35613  003BDC  0EFE               	movlw	high _STable
 35614  003BDE  20F4               	addwfc	prodh,w,c
 35615  003BE0  6EF7               	movwf	tblptrh,c
 35616  003BE2                     	if	1	;There are 3 active tblptr bytes
 35617  003BE2  6AF8               	clrf	tblptru,c
 35618  003BE4  0E00               	movlw	low (__mediumconst shr (0+16))
 35619  003BE6  22F8               	addwfc	tblptru,f,c
 35620  003BE8                     	endif
 35621  003BE8  0008               	tblrd		*
 35622  003BEA  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35623  003BEE  0100               	movlb	0	; () banked
 35624  003BF0  EE20 F002          	lfsr	2,2
 35625  003BF4  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35626  003BF6  26D9               	addwf	fsr2l,f,c
 35627  003BF8  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35628  003BFA  22DA               	addwfc	fsr2h,f,c
 35629  003BFC  0100               	movlb	0	; () banked
 35630  003BFE  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35631  003C00  1ADF               	xorwf	indf2,f,c
 35632                           
 35633                           ;AES.c: 166: key[3]^=STable[key[12]];
 35634  003C02  0100               	movlb	0	; () banked
 35635  003C04  EE20 F00C          	lfsr	2,12
 35636  003C08  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35637  003C0A  26D9               	addwf	fsr2l,f,c
 35638  003C0C  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35639  003C0E  22DA               	addwfc	fsr2h,f,c
 35640  003C10  50DF               	movf	indf2,w,c
 35641  003C12  0100               	movlb	0	; () banked
 35642  003C14  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35643  003C16  0100               	movlb	0	; () banked
 35644  003C18  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35645  003C1A  0D01               	mullw	1
 35646  003C1C  0E67               	movlw	low _STable
 35647  003C1E  24F3               	addwf	prodl,w,c
 35648  003C20  6EF6               	movwf	tblptrl,c
 35649  003C22  0EFE               	movlw	high _STable
 35650  003C24  20F4               	addwfc	prodh,w,c
 35651  003C26  6EF7               	movwf	tblptrh,c
 35652  003C28                     	if	1	;There are 3 active tblptr bytes
 35653  003C28  6AF8               	clrf	tblptru,c
 35654  003C2A  0E00               	movlw	low (__mediumconst shr (0+16))
 35655  003C2C  22F8               	addwfc	tblptru,f,c
 35656  003C2E                     	endif
 35657  003C2E  0008               	tblrd		*
 35658  003C30  CFF5 F067          	movff	tablat,??_EncKeySchedule+1
 35659  003C34  0100               	movlb	0	; () banked
 35660  003C36  EE20 F003          	lfsr	2,3
 35661  003C3A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35662  003C3C  26D9               	addwf	fsr2l,f,c
 35663  003C3E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35664  003C40  22DA               	addwfc	fsr2h,f,c
 35665  003C42  0100               	movlb	0	; () banked
 35666  003C44  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35667  003C46  1ADF               	xorwf	indf2,f,c
 35668                           
 35669                           ; BSR set to: 0
 35670                           ;AES.c: 168: key[0]^=_rcon;
 35671  003C48  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35672  003C4C  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35673  003C50  504A               	movf	__rcon,w,c
 35674  003C52  1ADF               	xorwf	indf2,f,c
 35675                           
 35676                           ; BSR set to: 0
 35677                           ;AES.c: 169: _rcon = (((_rcon)<0x80)?(_rcon)<<1:(((_rcon)<<1)^0x1b) );
 35678  003C54  0E7F               	movlw	127
 35679  003C56  644A               	cpfsgt	__rcon,c
 35680  003C58  D012               	goto	l13159
 35681                           
 35682                           ; BSR set to: 0
 35683  003C5A  0E1B               	movlw	27
 35684  003C5C  C04A  F066         	movff	__rcon,??_EncKeySchedule
 35685  003C60  0100               	movlb	0	; () banked
 35686  003C62  6B67               	clrf	(??_EncKeySchedule+1)& (0+255),b
 35687  003C64  90D8               	bcf	status,0,c
 35688  003C66  0100               	movlb	0	; () banked
 35689  003C68  3766               	rlcf	??_EncKeySchedule& (0+255),f,b
 35690  003C6A  3767               	rlcf	(??_EncKeySchedule+1)& (0+255),f,b
 35691  003C6C  0100               	movlb	0	; () banked
 35692  003C6E  1966               	xorwf	??_EncKeySchedule& (0+255),w,b
 35693  003C70  0100               	movlb	0	; () banked
 35694  003C72  6F68               	movwf	_EncKeySchedule$3853& (0+255),b
 35695  003C74  0100               	movlb	0	; () banked
 35696  003C76  5167               	movf	(??_EncKeySchedule+1)& (0+255),w,b
 35697  003C78  0100               	movlb	0	; () banked
 35698  003C7A  6F69               	movwf	(_EncKeySchedule$3853+1)& (0+255),b
 35699  003C7C  D008               	goto	l13161
 35700  003C7E                     l13159:
 35701                           
 35702                           ; BSR set to: 0
 35703  003C7E  90D8               	bcf	status,0,c
 35704  003C80  344A               	rlcf	__rcon,w,c
 35705  003C82  0100               	movlb	0	; () banked
 35706  003C84  6F68               	movwf	_EncKeySchedule$3853& (0+255),b
 35707  003C86  0100               	movlb	0	; () banked
 35708  003C88  6B69               	clrf	(_EncKeySchedule$3853+1)& (0+255),b
 35709  003C8A  0100               	movlb	0	; () banked
 35710  003C8C  3769               	rlcf	(_EncKeySchedule$3853+1)& (0+255),f,b
 35711  003C8E                     l13161:
 35712                           
 35713                           ; BSR set to: 0
 35714  003C8E  C068  F04A         	movff	_EncKeySchedule$3853,__rcon
 35715                           
 35716                           ; BSR set to: 0
 35717                           ;AES.c: 172: key[4]^=key[0];
 35718  003C92  C064  FFD9         	movff	EncKeySchedule@key,fsr2l
 35719  003C96  C065  FFDA         	movff	EncKeySchedule@key+1,fsr2h
 35720  003C9A  50DF               	movf	indf2,w,c
 35721  003C9C  0100               	movlb	0	; () banked
 35722  003C9E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35723  003CA0  0100               	movlb	0	; () banked
 35724  003CA2  EE20 F004          	lfsr	2,4
 35725  003CA6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35726  003CA8  26D9               	addwf	fsr2l,f,c
 35727  003CAA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35728  003CAC  22DA               	addwfc	fsr2h,f,c
 35729  003CAE  0100               	movlb	0	; () banked
 35730  003CB0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35731  003CB2  1ADF               	xorwf	indf2,f,c
 35732                           
 35733                           ; BSR set to: 0
 35734                           ;AES.c: 173: key[5]^=key[1];
 35735  003CB4  0100               	movlb	0	; () banked
 35736  003CB6  EE20 F001          	lfsr	2,1
 35737  003CBA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35738  003CBC  26D9               	addwf	fsr2l,f,c
 35739  003CBE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35740  003CC0  22DA               	addwfc	fsr2h,f,c
 35741  003CC2  50DF               	movf	indf2,w,c
 35742  003CC4  0100               	movlb	0	; () banked
 35743  003CC6  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35744  003CC8  0100               	movlb	0	; () banked
 35745  003CCA  EE20 F005          	lfsr	2,5
 35746  003CCE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35747  003CD0  26D9               	addwf	fsr2l,f,c
 35748  003CD2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35749  003CD4  22DA               	addwfc	fsr2h,f,c
 35750  003CD6  0100               	movlb	0	; () banked
 35751  003CD8  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35752  003CDA  1ADF               	xorwf	indf2,f,c
 35753                           
 35754                           ; BSR set to: 0
 35755                           ;AES.c: 174: key[6]^=key[2];
 35756  003CDC  0100               	movlb	0	; () banked
 35757  003CDE  EE20 F002          	lfsr	2,2
 35758  003CE2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35759  003CE4  26D9               	addwf	fsr2l,f,c
 35760  003CE6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35761  003CE8  22DA               	addwfc	fsr2h,f,c
 35762  003CEA  50DF               	movf	indf2,w,c
 35763  003CEC  0100               	movlb	0	; () banked
 35764  003CEE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35765  003CF0  0100               	movlb	0	; () banked
 35766  003CF2  EE20 F006          	lfsr	2,6
 35767  003CF6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35768  003CF8  26D9               	addwf	fsr2l,f,c
 35769  003CFA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35770  003CFC  22DA               	addwfc	fsr2h,f,c
 35771  003CFE  0100               	movlb	0	; () banked
 35772  003D00  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35773  003D02  1ADF               	xorwf	indf2,f,c
 35774                           
 35775                           ; BSR set to: 0
 35776                           ;AES.c: 175: key[7]^=key[3];
 35777  003D04  0100               	movlb	0	; () banked
 35778  003D06  EE20 F003          	lfsr	2,3
 35779  003D0A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35780  003D0C  26D9               	addwf	fsr2l,f,c
 35781  003D0E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35782  003D10  22DA               	addwfc	fsr2h,f,c
 35783  003D12  50DF               	movf	indf2,w,c
 35784  003D14  0100               	movlb	0	; () banked
 35785  003D16  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35786  003D18  0100               	movlb	0	; () banked
 35787  003D1A  EE20 F007          	lfsr	2,7
 35788  003D1E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35789  003D20  26D9               	addwf	fsr2l,f,c
 35790  003D22  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35791  003D24  22DA               	addwfc	fsr2h,f,c
 35792  003D26  0100               	movlb	0	; () banked
 35793  003D28  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35794  003D2A  1ADF               	xorwf	indf2,f,c
 35795                           
 35796                           ; BSR set to: 0
 35797                           ;AES.c: 178: key[8]^=key[4];
 35798  003D2C  0100               	movlb	0	; () banked
 35799  003D2E  EE20 F004          	lfsr	2,4
 35800  003D32  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35801  003D34  26D9               	addwf	fsr2l,f,c
 35802  003D36  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35803  003D38  22DA               	addwfc	fsr2h,f,c
 35804  003D3A  50DF               	movf	indf2,w,c
 35805  003D3C  0100               	movlb	0	; () banked
 35806  003D3E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35807  003D40  0100               	movlb	0	; () banked
 35808  003D42  EE20 F008          	lfsr	2,8
 35809  003D46  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35810  003D48  26D9               	addwf	fsr2l,f,c
 35811  003D4A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35812  003D4C  22DA               	addwfc	fsr2h,f,c
 35813  003D4E  0100               	movlb	0	; () banked
 35814  003D50  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35815  003D52  1ADF               	xorwf	indf2,f,c
 35816                           
 35817                           ; BSR set to: 0
 35818                           ;AES.c: 179: key[9]^=key[5];
 35819  003D54  0100               	movlb	0	; () banked
 35820  003D56  EE20 F005          	lfsr	2,5
 35821  003D5A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35822  003D5C  26D9               	addwf	fsr2l,f,c
 35823  003D5E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35824  003D60  22DA               	addwfc	fsr2h,f,c
 35825  003D62  50DF               	movf	indf2,w,c
 35826  003D64  0100               	movlb	0	; () banked
 35827  003D66  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35828  003D68  0100               	movlb	0	; () banked
 35829  003D6A  EE20 F009          	lfsr	2,9
 35830  003D6E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35831  003D70  26D9               	addwf	fsr2l,f,c
 35832  003D72  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35833  003D74  22DA               	addwfc	fsr2h,f,c
 35834  003D76  0100               	movlb	0	; () banked
 35835  003D78  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35836  003D7A  1ADF               	xorwf	indf2,f,c
 35837                           
 35838                           ; BSR set to: 0
 35839                           ;AES.c: 180: key[10]^=key[6];
 35840  003D7C  0100               	movlb	0	; () banked
 35841  003D7E  EE20 F006          	lfsr	2,6
 35842  003D82  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35843  003D84  26D9               	addwf	fsr2l,f,c
 35844  003D86  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35845  003D88  22DA               	addwfc	fsr2h,f,c
 35846  003D8A  50DF               	movf	indf2,w,c
 35847  003D8C  0100               	movlb	0	; () banked
 35848  003D8E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35849  003D90  0100               	movlb	0	; () banked
 35850  003D92  EE20 F00A          	lfsr	2,10
 35851  003D96  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35852  003D98  26D9               	addwf	fsr2l,f,c
 35853  003D9A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35854  003D9C  22DA               	addwfc	fsr2h,f,c
 35855  003D9E  0100               	movlb	0	; () banked
 35856  003DA0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35857  003DA2  1ADF               	xorwf	indf2,f,c
 35858                           
 35859                           ; BSR set to: 0
 35860                           ;AES.c: 181: key[11]^=key[7];
 35861  003DA4  0100               	movlb	0	; () banked
 35862  003DA6  EE20 F007          	lfsr	2,7
 35863  003DAA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35864  003DAC  26D9               	addwf	fsr2l,f,c
 35865  003DAE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35866  003DB0  22DA               	addwfc	fsr2h,f,c
 35867  003DB2  50DF               	movf	indf2,w,c
 35868  003DB4  0100               	movlb	0	; () banked
 35869  003DB6  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35870  003DB8  0100               	movlb	0	; () banked
 35871  003DBA  EE20 F00B          	lfsr	2,11
 35872  003DBE  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35873  003DC0  26D9               	addwf	fsr2l,f,c
 35874  003DC2  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35875  003DC4  22DA               	addwfc	fsr2h,f,c
 35876  003DC6  0100               	movlb	0	; () banked
 35877  003DC8  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35878  003DCA  1ADF               	xorwf	indf2,f,c
 35879                           
 35880                           ; BSR set to: 0
 35881                           ;AES.c: 184: key[12]^=key[8];
 35882  003DCC  0100               	movlb	0	; () banked
 35883  003DCE  EE20 F008          	lfsr	2,8
 35884  003DD2  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35885  003DD4  26D9               	addwf	fsr2l,f,c
 35886  003DD6  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35887  003DD8  22DA               	addwfc	fsr2h,f,c
 35888  003DDA  50DF               	movf	indf2,w,c
 35889  003DDC  0100               	movlb	0	; () banked
 35890  003DDE  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35891  003DE0  0100               	movlb	0	; () banked
 35892  003DE2  EE20 F00C          	lfsr	2,12
 35893  003DE6  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35894  003DE8  26D9               	addwf	fsr2l,f,c
 35895  003DEA  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35896  003DEC  22DA               	addwfc	fsr2h,f,c
 35897  003DEE  0100               	movlb	0	; () banked
 35898  003DF0  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35899  003DF2  1ADF               	xorwf	indf2,f,c
 35900                           
 35901                           ; BSR set to: 0
 35902                           ;AES.c: 185: key[13]^=key[9];
 35903  003DF4  0100               	movlb	0	; () banked
 35904  003DF6  EE20 F009          	lfsr	2,9
 35905  003DFA  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35906  003DFC  26D9               	addwf	fsr2l,f,c
 35907  003DFE  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35908  003E00  22DA               	addwfc	fsr2h,f,c
 35909  003E02  50DF               	movf	indf2,w,c
 35910  003E04  0100               	movlb	0	; () banked
 35911  003E06  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35912  003E08  0100               	movlb	0	; () banked
 35913  003E0A  EE20 F00D          	lfsr	2,13
 35914  003E0E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35915  003E10  26D9               	addwf	fsr2l,f,c
 35916  003E12  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35917  003E14  22DA               	addwfc	fsr2h,f,c
 35918  003E16  0100               	movlb	0	; () banked
 35919  003E18  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35920  003E1A  1ADF               	xorwf	indf2,f,c
 35921                           
 35922                           ; BSR set to: 0
 35923                           ;AES.c: 186: key[14]^=key[10];
 35924  003E1C  0100               	movlb	0	; () banked
 35925  003E1E  EE20 F00A          	lfsr	2,10
 35926  003E22  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35927  003E24  26D9               	addwf	fsr2l,f,c
 35928  003E26  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35929  003E28  22DA               	addwfc	fsr2h,f,c
 35930  003E2A  50DF               	movf	indf2,w,c
 35931  003E2C  0100               	movlb	0	; () banked
 35932  003E2E  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35933  003E30  0100               	movlb	0	; () banked
 35934  003E32  EE20 F00E          	lfsr	2,14
 35935  003E36  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35936  003E38  26D9               	addwf	fsr2l,f,c
 35937  003E3A  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35938  003E3C  22DA               	addwfc	fsr2h,f,c
 35939  003E3E  0100               	movlb	0	; () banked
 35940  003E40  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35941  003E42  1ADF               	xorwf	indf2,f,c
 35942                           
 35943                           ; BSR set to: 0
 35944                           ;AES.c: 187: key[15]^=key[11];
 35945  003E44  0100               	movlb	0	; () banked
 35946  003E46  EE20 F00B          	lfsr	2,11
 35947  003E4A  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35948  003E4C  26D9               	addwf	fsr2l,f,c
 35949  003E4E  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35950  003E50  22DA               	addwfc	fsr2h,f,c
 35951  003E52  50DF               	movf	indf2,w,c
 35952  003E54  0100               	movlb	0	; () banked
 35953  003E56  6F66               	movwf	??_EncKeySchedule& (0+255),b
 35954  003E58  0100               	movlb	0	; () banked
 35955  003E5A  EE20 F00F          	lfsr	2,15
 35956  003E5E  5164               	movf	EncKeySchedule@key& (0+255),w,b
 35957  003E60  26D9               	addwf	fsr2l,f,c
 35958  003E62  5165               	movf	(EncKeySchedule@key+1)& (0+255),w,b
 35959  003E64  22DA               	addwfc	fsr2h,f,c
 35960  003E66  0100               	movlb	0	; () banked
 35961  003E68  5166               	movf	??_EncKeySchedule& (0+255),w,b
 35962  003E6A  1ADF               	xorwf	indf2,f,c
 35963                           
 35964                           ; BSR set to: 0
 35965  003E6C  0012               	return		;funcret
 35966  003E6E                     __end_of_EncKeySchedule:
 35967                           	opt stack 0
 35968                           tosu	equ	0xFFF
 35969                           tosh	equ	0xFFE
 35970                           tosl	equ	0xFFD
 35971                           pclath	equ	0xFFA
 35972                           tblptru	equ	0xFF8
 35973                           tblptrh	equ	0xFF7
 35974                           tblptrl	equ	0xFF6
 35975                           tablat	equ	0xFF5
 35976                           prodh	equ	0xFF4
 35977                           prodl	equ	0xFF3
 35978                           intcon	equ	0xFF2
 35979                           intcon2	equ	0xFF1
 35980                           intcon3	equ	0xFF0
 35981                           indf0	equ	0xFEF
 35982                           postinc0	equ	0xFEE
 35983                           plusw0	equ	0xFEB
 35984                           fsr0h	equ	0xFEA
 35985                           fsr0l	equ	0xFE9
 35986                           wreg	equ	0xFE8
 35987                           postinc1	equ	0xFE6
 35988                           postdec1	equ	0xFE5
 35989                           plusw1	equ	0xFE3
 35990                           fsr1h	equ	0xFE2
 35991                           fsr1l	equ	0xFE1
 35992                           indf2	equ	0xFDF
 35993                           postinc2	equ	0xFDE
 35994                           postdec2	equ	0xFDD
 35995                           plusw2	equ	0xFDB
 35996                           fsr2h	equ	0xFDA
 35997                           fsr2l	equ	0xFD9
 35998                           status	equ	0xFD8
 35999                           
 36000 ;; *************** function _LORAWAN_Init *****************
 36001 ;; Defined at:
 36002 ;;		line 123 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36003 ;; Parameters:    Size  Location     Type
 36004 ;;  RxPayload       2   86[BANK0 ] PTR FTN(PTR unsigned cha
 36005 ;;		 -> RxDataDone(1), 
 36006 ;;  RxJoinRespon    2   88[BANK0 ] PTR FTN(unsigned char ,)
 36007 ;;		 -> RxJoinResponse(1), 
 36008 ;; Auto vars:     Size  Location     Type
 36009 ;;		None
 36010 ;; Return value:  Size  Location     Type
 36011 ;;                  1    wreg      void 
 36012 ;; Registers used:
 36013 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36014 ;; Tracked objects:
 36015 ;;		On entry : 0/0
 36016 ;;		On exit  : 0/0
 36017 ;;		Unchanged: 0/0
 36018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36019 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36022 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36023 ;;Total ram usage:        4 bytes
 36024 ;; Hardware stack levels used:    1
 36025 ;; Hardware stack levels required when called:   13
 36026 ;; This function calls:
 36027 ;;		_CreateAllSoftwareTimers
 36028 ;;		_LORAWAN_Reset
 36029 ;;		_RADIO_Init
 36030 ;;		_RADIO_ReadRandom
 36031 ;;		_SetCallbackSoftwareTimers
 36032 ;;		_StopAllSoftwareTimers
 36033 ;;		_srand
 36034 ;; This function is called by:
 36035 ;;		_main
 36036 ;; This function uses a non-reentrant model
 36037 ;;
 36038                           
 36039                           	psect	text158
 36040  009080                     __ptext158:
 36041                           	opt stack 0
 36042  009080                     _LORAWAN_Init:
 36043                           	opt stack 17
 36044                           
 36045                           ;lorawan_eu.c: 126: if (loRa.macInitialized == 0)
 36046                           
 36047                           ; BSR set to: 0
 36048                           ;incstack = 0
 36049  009080  0102               	movlb	2	; () banked
 36050  009082  51F0               	movf	(_loRa+240)& (0+255),w,b
 36051  009084  A4D8               	btfss	status,2,c
 36052  009086  D008               	goto	l17127
 36053                           
 36054                           ; BSR set to: 2
 36055                           ;lorawan_eu.c: 127: {
 36056                           ;lorawan_eu.c: 128: CreateAllSoftwareTimers ();
 36057  009088  ECC3  F04A         	call	_CreateAllSoftwareTimers	;wreg free
 36058                           
 36059                           ;lorawan_eu.c: 129: SetCallbackSoftwareTimers ();
 36060  00908C  EC5D  F038         	call	_SetCallbackSoftwareTimers	;wreg free
 36061                           
 36062                           ;lorawan_eu.c: 130: loRa.macInitialized = 1;
 36063  009090  0E01               	movlw	1
 36064  009092  0102               	movlb	2	; () banked
 36065  009094  6FF0               	movwf	(_loRa+240)& (0+255),b
 36066                           
 36067                           ;lorawan_eu.c: 131: }
 36068  009096  D002               	goto	l17129
 36069  009098                     l17127:
 36070                           
 36071                           ; BSR set to: 2
 36072                           ;lorawan_eu.c: 132: else
 36073                           ;lorawan_eu.c: 133: {
 36074                           ;lorawan_eu.c: 134: StopAllSoftwareTimers ();
 36075  009098  EC9A  F04A         	call	_StopAllSoftwareTimers	;wreg free
 36076  00909C                     l17129:
 36077                           
 36078                           ;lorawan_eu.c: 135: }
 36079                           ;lorawan_eu.c: 137: rxPayload.RxAppData = RxPayload;
 36080  00909C  C0B6  F186         	movff	LORAWAN_Init@RxPayload,_rxPayload
 36081  0090A0  C0B7  F187         	movff	LORAWAN_Init@RxPayload+1,_rxPayload+1
 36082                           
 36083                           ;lorawan_eu.c: 138: rxPayload.RxJoinResponse = RxJoinResponse;
 36084  0090A4  C0B8  F188         	movff	LORAWAN_Init@RxJoinResponse,_rxPayload+2
 36085  0090A8  C0B9  F189         	movff	LORAWAN_Init@RxJoinResponse+1,_rxPayload+3
 36086                           
 36087                           ;lorawan_eu.c: 140: RADIO_Init(&radioBuffer[16], (868100000));
 36088  0090AC  0EFF               	movlw	low (_radioBuffer+16)
 36089  0090AE  0100               	movlb	0	; () banked
 36090  0090B0  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36091  0090B2  0E05               	movlw	high (_radioBuffer+16)
 36092  0090B4  0100               	movlb	0	; () banked
 36093  0090B6  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36094  0090B8  0EA0               	movlw	160
 36095  0090BA  0100               	movlb	0	; () banked
 36096  0090BC  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 36097  0090BE  0E27               	movlw	39
 36098  0090C0  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36099  0090C2  0EBE               	movlw	190
 36100  0090C4  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36101  0090C6  0E33               	movlw	51
 36102  0090C8  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36103  0090CA  EC17  F028         	call	_RADIO_Init	;wreg free
 36104                           
 36105                           ;lorawan_eu.c: 142: srand (RADIO_ReadRandom ());
 36106  0090CE  ECF7  F03F         	call	_RADIO_ReadRandom	;wreg free
 36107  0090D2  C070  F076         	movff	?_RADIO_ReadRandom,srand@x
 36108  0090D6  C071  F077         	movff	?_RADIO_ReadRandom+1,srand@x+1
 36109  0090DA  EC7A  F051         	call	_srand	;wreg free
 36110                           
 36111                           ;lorawan_eu.c: 144: LORAWAN_Reset (ISM_EU868);
 36112  0090DE  0E00               	movlw	0
 36113  0090E0  EC04  F027         	call	_LORAWAN_Reset
 36114  0090E4  0012               	return		;funcret
 36115  0090E6                     __end_of_LORAWAN_Init:
 36116                           	opt stack 0
 36117                           tosu	equ	0xFFF
 36118                           tosh	equ	0xFFE
 36119                           tosl	equ	0xFFD
 36120                           pclath	equ	0xFFA
 36121                           tblptru	equ	0xFF8
 36122                           tblptrh	equ	0xFF7
 36123                           tblptrl	equ	0xFF6
 36124                           tablat	equ	0xFF5
 36125                           prodh	equ	0xFF4
 36126                           prodl	equ	0xFF3
 36127                           intcon	equ	0xFF2
 36128                           intcon2	equ	0xFF1
 36129                           intcon3	equ	0xFF0
 36130                           indf0	equ	0xFEF
 36131                           postinc0	equ	0xFEE
 36132                           plusw0	equ	0xFEB
 36133                           fsr0h	equ	0xFEA
 36134                           fsr0l	equ	0xFE9
 36135                           wreg	equ	0xFE8
 36136                           postinc1	equ	0xFE6
 36137                           postdec1	equ	0xFE5
 36138                           plusw1	equ	0xFE3
 36139                           fsr1h	equ	0xFE2
 36140                           fsr1l	equ	0xFE1
 36141                           indf2	equ	0xFDF
 36142                           postinc2	equ	0xFDE
 36143                           postdec2	equ	0xFDD
 36144                           plusw2	equ	0xFDB
 36145                           fsr2h	equ	0xFDA
 36146                           fsr2l	equ	0xFD9
 36147                           status	equ	0xFD8
 36148                           
 36149 ;; *************** function _srand *****************
 36150 ;; Defined at:
 36151 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\rand.c"
 36152 ;; Parameters:    Size  Location     Type
 36153 ;;  x               2   22[BANK0 ] unsigned int 
 36154 ;; Auto vars:     Size  Location     Type
 36155 ;;		None
 36156 ;; Return value:  Size  Location     Type
 36157 ;;                  1    wreg      void 
 36158 ;; Registers used:
 36159 ;;		status,2
 36160 ;; Tracked objects:
 36161 ;;		On entry : 0/0
 36162 ;;		On exit  : 0/0
 36163 ;;		Unchanged: 0/0
 36164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36165 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36166 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36167 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36168 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36169 ;;Total ram usage:        2 bytes
 36170 ;; Hardware stack levels used:    1
 36171 ;; Hardware stack levels required when called:    7
 36172 ;; This function calls:
 36173 ;;		Nothing
 36174 ;; This function is called by:
 36175 ;;		_LORAWAN_Init
 36176 ;; This function uses a non-reentrant model
 36177 ;;
 36178                           
 36179                           	psect	text159
 36180  00A2F4                     __ptext159:
 36181                           	opt stack 0
 36182  00A2F4                     _srand:
 36183                           	opt stack 22
 36184                           
 36185                           ;incstack = 0
 36186  00A2F4  C076  F1E8         	movff	srand@x,_randx
 36187  00A2F8  C077  F1E9         	movff	srand@x+1,_randx+1
 36188  00A2FC  0101               	movlb	1	; () banked
 36189  00A2FE  6BEA               	clrf	(_randx+2)& (0+255),b
 36190  00A300  6BEB               	clrf	(_randx+3)& (0+255),b
 36191                           
 36192                           ; BSR set to: 1
 36193  00A302  0012               	return		;funcret
 36194  00A304                     __end_of_srand:
 36195                           	opt stack 0
 36196                           tosu	equ	0xFFF
 36197                           tosh	equ	0xFFE
 36198                           tosl	equ	0xFFD
 36199                           pclath	equ	0xFFA
 36200                           tblptru	equ	0xFF8
 36201                           tblptrh	equ	0xFF7
 36202                           tblptrl	equ	0xFF6
 36203                           tablat	equ	0xFF5
 36204                           prodh	equ	0xFF4
 36205                           prodl	equ	0xFF3
 36206                           intcon	equ	0xFF2
 36207                           intcon2	equ	0xFF1
 36208                           intcon3	equ	0xFF0
 36209                           indf0	equ	0xFEF
 36210                           postinc0	equ	0xFEE
 36211                           plusw0	equ	0xFEB
 36212                           fsr0h	equ	0xFEA
 36213                           fsr0l	equ	0xFE9
 36214                           wreg	equ	0xFE8
 36215                           postinc1	equ	0xFE6
 36216                           postdec1	equ	0xFE5
 36217                           plusw1	equ	0xFE3
 36218                           fsr1h	equ	0xFE2
 36219                           fsr1l	equ	0xFE1
 36220                           indf2	equ	0xFDF
 36221                           postinc2	equ	0xFDE
 36222                           postdec2	equ	0xFDD
 36223                           plusw2	equ	0xFDB
 36224                           fsr2h	equ	0xFDA
 36225                           fsr2l	equ	0xFD9
 36226                           status	equ	0xFD8
 36227                           
 36228 ;; *************** function _SetCallbackSoftwareTimers *****************
 36229 ;; Defined at:
 36230 ;;		line 951 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36231 ;; Parameters:    Size  Location     Type
 36232 ;;		None
 36233 ;; Auto vars:     Size  Location     Type
 36234 ;;		None
 36235 ;; Return value:  Size  Location     Type
 36236 ;;                  1    wreg      void 
 36237 ;; Registers used:
 36238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 36239 ;; Tracked objects:
 36240 ;;		On entry : 0/0
 36241 ;;		On exit  : 0/0
 36242 ;;		Unchanged: 0/0
 36243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36247 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36248 ;;Total ram usage:        0 bytes
 36249 ;; Hardware stack levels used:    1
 36250 ;; Hardware stack levels required when called:    8
 36251 ;; This function calls:
 36252 ;;		_SwTimerSetCallback
 36253 ;; This function is called by:
 36254 ;;		_LORAWAN_Init
 36255 ;; This function uses a non-reentrant model
 36256 ;;
 36257                           
 36258                           	psect	text160
 36259  0070BA                     __ptext160:
 36260                           	opt stack 0
 36261  0070BA                     _SetCallbackSoftwareTimers:
 36262                           	opt stack 21
 36263                           
 36264                           ;lorawan_eu.c: 953: SwTimerSetCallback(loRa.joinAccept1TimerId, LORAWAN_ReceiveWindow1Ca
      +                          llback, 0);
 36265                           
 36266                           ; BSR set to: 1
 36267                           ;incstack = 0
 36268  0070BA  0E78               	movlw	low _LORAWAN_ReceiveWindow1Callback
 36269  0070BC  0100               	movlb	0	; () banked
 36270  0070BE  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36271  0070C0  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 36272  0070C2  0100               	movlb	0	; () banked
 36273  0070C4  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36274  0070C6  0E00               	movlw	0
 36275  0070C8  0100               	movlb	0	; () banked
 36276  0070CA  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36277  0070CC  0102               	movlb	2	; () banked
 36278  0070CE  51E2               	movf	(_loRa+226)& (0+255),w,b
 36279  0070D0  ECED  F04B         	call	_SwTimerSetCallback
 36280                           
 36281                           ;lorawan_eu.c: 954: SwTimerSetCallback(loRa.joinAccept2TimerId, LORAWAN_ReceiveWindow2Ca
      +                          llback, 0);
 36282  0070D4  0EA8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 36283  0070D6  0100               	movlb	0	; () banked
 36284  0070D8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36285  0070DA  0E79               	movlw	high _LORAWAN_ReceiveWindow2Callback
 36286  0070DC  0100               	movlb	0	; () banked
 36287  0070DE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36288  0070E0  0E00               	movlw	0
 36289  0070E2  0100               	movlb	0	; () banked
 36290  0070E4  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36291  0070E6  0102               	movlb	2	; () banked
 36292  0070E8  51E3               	movf	(_loRa+227)& (0+255),w,b
 36293  0070EA  ECED  F04B         	call	_SwTimerSetCallback
 36294                           
 36295                           ;lorawan_eu.c: 955: SwTimerSetCallback(loRa.linkCheckTimerId, LORAWAN_LinkCheckCallback,
      +                           0);
 36296  0070EE  0EF2               	movlw	low _LORAWAN_LinkCheckCallback
 36297  0070F0  0100               	movlb	0	; () banked
 36298  0070F2  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36299  0070F4  0E5C               	movlw	high _LORAWAN_LinkCheckCallback
 36300  0070F6  0100               	movlb	0	; () banked
 36301  0070F8  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36302  0070FA  0E00               	movlw	0
 36303  0070FC  0100               	movlb	0	; () banked
 36304  0070FE  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36305  007100  0102               	movlb	2	; () banked
 36306  007102  51E7               	movf	(_loRa+231)& (0+255),w,b
 36307  007104  ECED  F04B         	call	_SwTimerSetCallback
 36308                           
 36309                           ;lorawan_eu.c: 956: SwTimerSetCallback(loRa.receiveWindow1TimerId, LORAWAN_ReceiveWindow
      +                          1Callback, 0);
 36310  007108  0E78               	movlw	low _LORAWAN_ReceiveWindow1Callback
 36311  00710A  0100               	movlb	0	; () banked
 36312  00710C  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36313  00710E  0E7B               	movlw	high _LORAWAN_ReceiveWindow1Callback
 36314  007110  0100               	movlb	0	; () banked
 36315  007112  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36316  007114  0E00               	movlw	0
 36317  007116  0100               	movlb	0	; () banked
 36318  007118  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36319  00711A  0102               	movlb	2	; () banked
 36320  00711C  51E4               	movf	(_loRa+228)& (0+255),w,b
 36321  00711E  ECED  F04B         	call	_SwTimerSetCallback
 36322                           
 36323                           ;lorawan_eu.c: 957: SwTimerSetCallback(loRa.receiveWindow2TimerId, LORAWAN_ReceiveWindow
      +                          2Callback, 0);
 36324  007122  0EA8               	movlw	low _LORAWAN_ReceiveWindow2Callback
 36325  007124  0100               	movlb	0	; () banked
 36326  007126  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36327  007128  0E79               	movlw	high _LORAWAN_ReceiveWindow2Callback
 36328  00712A  0100               	movlb	0	; () banked
 36329  00712C  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36330  00712E  0E00               	movlw	0
 36331  007130  0100               	movlb	0	; () banked
 36332  007132  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36333  007134  0102               	movlb	2	; () banked
 36334  007136  51E5               	movf	(_loRa+229)& (0+255),w,b
 36335  007138  ECED  F04B         	call	_SwTimerSetCallback
 36336                           
 36337                           ;lorawan_eu.c: 958: SwTimerSetCallback(loRa.ackTimeoutTimerId, AckRetransmissionCallback
      +                          , 0);
 36338  00713C  0E9C               	movlw	low _AckRetransmissionCallback
 36339  00713E  0100               	movlb	0	; () banked
 36340  007140  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36341  007142  0E69               	movlw	high _AckRetransmissionCallback
 36342  007144  0100               	movlb	0	; () banked
 36343  007146  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36344  007148  0E00               	movlw	0
 36345  00714A  0100               	movlb	0	; () banked
 36346  00714C  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36347  00714E  0102               	movlb	2	; () banked
 36348  007150  51E8               	movf	(_loRa+232)& (0+255),w,b
 36349  007152  ECED  F04B         	call	_SwTimerSetCallback
 36350                           
 36351                           ;lorawan_eu.c: 959: SwTimerSetCallback(loRa.automaticReplyTimerId, AutomaticReplyCallbac
      +                          k, 0);
 36352  007156  0EC4               	movlw	low _AutomaticReplyCallback
 36353  007158  0100               	movlb	0	; () banked
 36354  00715A  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36355  00715C  0E9D               	movlw	high _AutomaticReplyCallback
 36356  00715E  0100               	movlb	0	; () banked
 36357  007160  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36358  007162  0E00               	movlw	0
 36359  007164  0100               	movlb	0	; () banked
 36360  007166  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36361  007168  0102               	movlb	2	; () banked
 36362  00716A  51E6               	movf	(_loRa+230)& (0+255),w,b
 36363  00716C  ECED  F04B         	call	_SwTimerSetCallback
 36364                           
 36365                           ;lorawan_eu.c: 960: SwTimerSetCallback(loRa.unconfirmedRetransmisionTimerId, Unconfirmed
      +                          TransmissionCallback, 0);
 36366  007170  0E84               	movlw	low _UnconfirmedTransmissionCallback
 36367  007172  0100               	movlb	0	; () banked
 36368  007174  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36369  007176  0E8A               	movlw	high _UnconfirmedTransmissionCallback
 36370  007178  0100               	movlb	0	; () banked
 36371  00717A  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36372  00717C  0E00               	movlw	0
 36373  00717E  0100               	movlb	0	; () banked
 36374  007180  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36375  007182  0102               	movlb	2	; () banked
 36376  007184  51EA               	movf	(_loRa+234)& (0+255),w,b
 36377  007186  ECED  F04B         	call	_SwTimerSetCallback
 36378                           
 36379                           ;lorawan_eu.c: 961: SwTimerSetCallback(loRa.abpJoinTimerId, UpdateJoinSuccessState, 0);
 36380  00718A  0EB0               	movlw	low _UpdateJoinSuccessState
 36381  00718C  0100               	movlb	0	; () banked
 36382  00718E  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36383  007190  0E65               	movlw	high _UpdateJoinSuccessState
 36384  007192  0100               	movlb	0	; () banked
 36385  007194  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36386  007196  0E00               	movlw	0
 36387  007198  0100               	movlb	0	; () banked
 36388  00719A  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36389  00719C  0102               	movlb	2	; () banked
 36390  00719E  51F3               	movf	(_loRa+243)& (0+255),w,b
 36391  0071A0  ECED  F04B         	call	_SwTimerSetCallback
 36392                           
 36393                           ;lorawan_eu.c: 962: SwTimerSetCallback (loRa.dutyCycleTimerId, DutyCycleCallback, 0);
 36394  0071A4  0E6E               	movlw	low _DutyCycleCallback
 36395  0071A6  0100               	movlb	0	; () banked
 36396  0071A8  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 36397  0071AA  0E3E               	movlw	high _DutyCycleCallback
 36398  0071AC  0100               	movlb	0	; () banked
 36399  0071AE  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 36400  0071B0  0E00               	movlw	0
 36401  0071B2  0100               	movlb	0	; () banked
 36402  0071B4  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 36403  0071B6  0102               	movlb	2	; () banked
 36404  0071B8  51E9               	movf	(_loRa+233)& (0+255),w,b
 36405  0071BA  ECED  F04B         	call	_SwTimerSetCallback
 36406  0071BE  0012               	return		;funcret
 36407  0071C0                     __end_of_SetCallbackSoftwareTimers:
 36408                           	opt stack 0
 36409                           tosu	equ	0xFFF
 36410                           tosh	equ	0xFFE
 36411                           tosl	equ	0xFFD
 36412                           pclath	equ	0xFFA
 36413                           tblptru	equ	0xFF8
 36414                           tblptrh	equ	0xFF7
 36415                           tblptrl	equ	0xFF6
 36416                           tablat	equ	0xFF5
 36417                           prodh	equ	0xFF4
 36418                           prodl	equ	0xFF3
 36419                           intcon	equ	0xFF2
 36420                           intcon2	equ	0xFF1
 36421                           intcon3	equ	0xFF0
 36422                           indf0	equ	0xFEF
 36423                           postinc0	equ	0xFEE
 36424                           plusw0	equ	0xFEB
 36425                           fsr0h	equ	0xFEA
 36426                           fsr0l	equ	0xFE9
 36427                           wreg	equ	0xFE8
 36428                           postinc1	equ	0xFE6
 36429                           postdec1	equ	0xFE5
 36430                           plusw1	equ	0xFE3
 36431                           fsr1h	equ	0xFE2
 36432                           fsr1l	equ	0xFE1
 36433                           indf2	equ	0xFDF
 36434                           postinc2	equ	0xFDE
 36435                           postdec2	equ	0xFDD
 36436                           plusw2	equ	0xFDB
 36437                           fsr2h	equ	0xFDA
 36438                           fsr2l	equ	0xFD9
 36439                           status	equ	0xFD8
 36440                           
 36441 ;; *************** function _RADIO_ReadRandom *****************
 36442 ;; Defined at:
 36443 ;;		line 1367 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 36444 ;; Parameters:    Size  Location     Type
 36445 ;;		None
 36446 ;; Auto vars:     Size  Location     Type
 36447 ;;  retVal          2   19[BANK0 ] unsigned int 
 36448 ;;  i               1   21[BANK0 ] unsigned char 
 36449 ;; Return value:  Size  Location     Type
 36450 ;;                  2   16[BANK0 ] unsigned int 
 36451 ;; Registers used:
 36452 ;;		wreg, status,2, status,0, cstack
 36453 ;; Tracked objects:
 36454 ;;		On entry : 0/0
 36455 ;;		On exit  : 0/0
 36456 ;;		Unchanged: 0/0
 36457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36458 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36459 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36460 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36461 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36462 ;;Total ram usage:        6 bytes
 36463 ;; Hardware stack levels used:    1
 36464 ;; Hardware stack levels required when called:   11
 36465 ;; This function calls:
 36466 ;;		_RADIO_RegisterRead
 36467 ;;		_RADIO_RegisterWrite
 36468 ;;		_RADIO_WriteMode
 36469 ;;		_SystemBlockingWaitMs
 36470 ;; This function is called by:
 36471 ;;		_LORAWAN_Init
 36472 ;; This function uses a non-reentrant model
 36473 ;;
 36474                           
 36475                           	psect	text161
 36476  007FEE                     __ptext161:
 36477                           	opt stack 0
 36478  007FEE                     _RADIO_ReadRandom:
 36479                           	opt stack 18
 36480                           
 36481                           ;radio_driver_SX1276.c: 1369: uint8_t i;
 36482                           ;radio_driver_SX1276.c: 1370: uint16_t retVal;
 36483                           ;radio_driver_SX1276.c: 1371: retVal = 0;
 36484                           
 36485                           ;incstack = 0
 36486  007FEE  0E00               	movlw	0
 36487  007FF0  0100               	movlb	0	; () banked
 36488  007FF2  6F74               	movwf	(RADIO_ReadRandom@retVal+1)& (0+255),b
 36489  007FF4  0E00               	movlw	0
 36490  007FF6  6F73               	movwf	RADIO_ReadRandom@retVal& (0+255),b
 36491                           
 36492                           ; BSR set to: 0
 36493                           ;radio_driver_SX1276.c: 1373: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 36494  007FF8  0E01               	movlw	1
 36495  007FFA  0100               	movlb	0	; () banked
 36496  007FFC  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36497  007FFE  0E01               	movlw	1
 36498  008000  0100               	movlb	0	; () banked
 36499  008002  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36500  008004  0E00               	movlw	0
 36501  008006  EC70  F035         	call	_RADIO_WriteMode
 36502                           
 36503                           ;radio_driver_SX1276.c: 1374: RADIO_RegisterWrite(0x11, 0xFF);
 36504  00800A  0EFF               	movlw	255
 36505  00800C  0100               	movlb	0	; () banked
 36506  00800E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36507  008010  0E11               	movlw	17
 36508  008012  EC36  F050         	call	_RADIO_RegisterWrite
 36509                           
 36510                           ;radio_driver_SX1276.c: 1375: RADIO_WriteMode(MODE_RXCONT, MODULATION_LORA, 1);
 36511  008016  0E01               	movlw	1
 36512  008018  0100               	movlb	0	; () banked
 36513  00801A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36514  00801C  0E01               	movlw	1
 36515  00801E  0100               	movlb	0	; () banked
 36516  008020  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36517  008022  0E05               	movlw	5
 36518  008024  EC70  F035         	call	_RADIO_WriteMode
 36519                           
 36520                           ;radio_driver_SX1276.c: 1376: for (i = 0; i < 16; i++)
 36521  008028  0E00               	movlw	0
 36522  00802A  0100               	movlb	0	; () banked
 36523  00802C  6F75               	movwf	RADIO_ReadRandom@i& (0+255),b
 36524  00802E                     l16873:
 36525                           
 36526                           ; BSR set to: 0
 36527  00802E  0E0F               	movlw	15
 36528  008030  0100               	movlb	0	; () banked
 36529  008032  6575               	cpfsgt	RADIO_ReadRandom@i& (0+255),b
 36530  008034  D001               	goto	l16877
 36531  008036  D01E               	goto	l16885
 36532  008038                     l16877:
 36533                           
 36534                           ; BSR set to: 0
 36535                           ;radio_driver_SX1276.c: 1377: {
 36536                           ;radio_driver_SX1276.c: 1378: SystemBlockingWaitMs(1);
 36537  008038  0E01               	movlw	1
 36538  00803A  0100               	movlb	0	; () banked
 36539  00803C  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 36540  00803E  0E00               	movlw	0
 36541  008040  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 36542  008042  0E00               	movlw	0
 36543  008044  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 36544  008046  0E00               	movlw	0
 36545  008048  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 36546  00804A  ECBC  F04D         	call	_SystemBlockingWaitMs	;wreg free
 36547                           
 36548                           ;radio_driver_SX1276.c: 1379: retVal <<= (1);
 36549  00804E  0100               	movlb	0	; () banked
 36550  008050  90D8               	bcf	status,0,c
 36551  008052  3773               	rlcf	RADIO_ReadRandom@retVal& (0+255),f,b
 36552  008054  3774               	rlcf	(RADIO_ReadRandom@retVal+1)& (0+255),f,b
 36553                           
 36554                           ; BSR set to: 0
 36555                           ;radio_driver_SX1276.c: 1380: retVal |= RADIO_RegisterRead(0x2C) & 0x01;
 36556  008056  0E2C               	movlw	44
 36557  008058  EC4D  F04F         	call	_RADIO_RegisterRead
 36558  00805C  0100               	movlb	0	; () banked
 36559  00805E  6F72               	movwf	??_RADIO_ReadRandom& (0+255),b
 36560  008060  0E01               	movlw	1
 36561  008062  0100               	movlb	0	; () banked
 36562  008064  1772               	andwf	??_RADIO_ReadRandom& (0+255),f,b
 36563  008066  0100               	movlb	0	; () banked
 36564  008068  5172               	movf	??_RADIO_ReadRandom& (0+255),w,b
 36565  00806A  0100               	movlb	0	; () banked
 36566  00806C  1373               	iorwf	RADIO_ReadRandom@retVal& (0+255),f,b
 36567  00806E  0100               	movlb	0	; () banked
 36568  008070  2B75               	incf	RADIO_ReadRandom@i& (0+255),f,b
 36569  008072  D7DD               	goto	l16873
 36570  008074                     l16885:
 36571                           
 36572                           ; BSR set to: 0
 36573                           ;radio_driver_SX1276.c: 1381: }
 36574                           ;radio_driver_SX1276.c: 1384: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 36575  008074  0E01               	movlw	1
 36576  008076  0100               	movlb	0	; () banked
 36577  008078  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 36578  00807A  0E01               	movlw	1
 36579  00807C  0100               	movlb	0	; () banked
 36580  00807E  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 36581  008080  0E00               	movlw	0
 36582  008082  EC70  F035         	call	_RADIO_WriteMode
 36583                           
 36584                           ;radio_driver_SX1276.c: 1386: RADIO_RegisterWrite(0x12, 0xFF);
 36585  008086  0EFF               	movlw	255
 36586  008088  0100               	movlb	0	; () banked
 36587  00808A  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36588  00808C  0E12               	movlw	18
 36589  00808E  EC36  F050         	call	_RADIO_RegisterWrite
 36590                           
 36591                           ;radio_driver_SX1276.c: 1388: RADIO_RegisterWrite(0x11, 0x00);
 36592  008092  0E00               	movlw	0
 36593  008094  0100               	movlb	0	; () banked
 36594  008096  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 36595  008098  0E11               	movlw	17
 36596  00809A  EC36  F050         	call	_RADIO_RegisterWrite
 36597                           
 36598                           ;radio_driver_SX1276.c: 1389: return retVal;
 36599  00809E  C073  F070         	movff	RADIO_ReadRandom@retVal,?_RADIO_ReadRandom
 36600  0080A2  C074  F071         	movff	RADIO_ReadRandom@retVal+1,?_RADIO_ReadRandom+1
 36601  0080A6  0012               	return	
 36602  0080A8                     __end_of_RADIO_ReadRandom:
 36603                           	opt stack 0
 36604                           tosu	equ	0xFFF
 36605                           tosh	equ	0xFFE
 36606                           tosl	equ	0xFFD
 36607                           pclath	equ	0xFFA
 36608                           tblptru	equ	0xFF8
 36609                           tblptrh	equ	0xFF7
 36610                           tblptrl	equ	0xFF6
 36611                           tablat	equ	0xFF5
 36612                           prodh	equ	0xFF4
 36613                           prodl	equ	0xFF3
 36614                           intcon	equ	0xFF2
 36615                           intcon2	equ	0xFF1
 36616                           intcon3	equ	0xFF0
 36617                           indf0	equ	0xFEF
 36618                           postinc0	equ	0xFEE
 36619                           plusw0	equ	0xFEB
 36620                           fsr0h	equ	0xFEA
 36621                           fsr0l	equ	0xFE9
 36622                           wreg	equ	0xFE8
 36623                           postinc1	equ	0xFE6
 36624                           postdec1	equ	0xFE5
 36625                           plusw1	equ	0xFE3
 36626                           fsr1h	equ	0xFE2
 36627                           fsr1l	equ	0xFE1
 36628                           indf2	equ	0xFDF
 36629                           postinc2	equ	0xFDE
 36630                           postdec2	equ	0xFDD
 36631                           plusw2	equ	0xFDB
 36632                           fsr2h	equ	0xFDA
 36633                           fsr2l	equ	0xFD9
 36634                           status	equ	0xFD8
 36635                           
 36636 ;; *************** function _LORAWAN_Reset *****************
 36637 ;; Defined at:
 36638 ;;		line 148 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 36639 ;; Parameters:    Size  Location     Type
 36640 ;;  ismBandNew      1    wreg     enum E8047
 36641 ;; Auto vars:     Size  Location     Type
 36642 ;;  ismBandNew      1   85[BANK0 ] enum E8047
 36643 ;; Return value:  Size  Location     Type
 36644 ;;                  1    wreg      void 
 36645 ;; Registers used:
 36646 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 36647 ;; Tracked objects:
 36648 ;;		On entry : 0/0
 36649 ;;		On exit  : 0/0
 36650 ;;		Unchanged: 0/0
 36651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 36652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36653 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36655 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 36656 ;;Total ram usage:        1 bytes
 36657 ;; Hardware stack levels used:    1
 36658 ;; Hardware stack levels required when called:   12
 36659 ;; This function calls:
 36660 ;;		_InitDefault433Channels
 36661 ;;		_InitDefault868Channels
 36662 ;;		_LORAWAN_LinkCheckConfigure
 36663 ;;		_RADIO_Init
 36664 ;;		_RADIO_SetLoRaSyncWord
 36665 ;;		_StopAllSoftwareTimers
 36666 ;;		_UpdateMinMaxChDataRate
 36667 ;;		_memset
 36668 ;; This function is called by:
 36669 ;;		_LORAWAN_Init
 36670 ;; This function uses a non-reentrant model
 36671 ;;
 36672                           
 36673                           	psect	text162
 36674  004E08                     __ptext162:
 36675                           	opt stack 0
 36676  004E08                     _LORAWAN_Reset:
 36677                           	opt stack 17
 36678                           
 36679                           ;incstack = 0
 36680                           ;LORAWAN_Reset@ismBandNew stored from wreg
 36681  004E08  0100               	movlb	0	; () banked
 36682  004E0A  6FB5               	movwf	LORAWAN_Reset@ismBandNew& (0+255),b
 36683                           
 36684                           ;lorawan_eu.c: 150: if (loRa.macInitialized == 1)
 36685  004E0C  0102               	movlb	2	; () banked
 36686  004E0E  05F0               	decf	(_loRa+240)& (0+255),w,b
 36687  004E10  B4D8               	btfsc	status,2,c
 36688                           
 36689                           ; BSR set to: 2
 36690                           ;lorawan_eu.c: 151: {
 36691                           ;lorawan_eu.c: 152: StopAllSoftwareTimers ();
 36692  004E12  EC9A  F04A         	call	_StopAllSoftwareTimers	;wreg free
 36693                           
 36694                           ;lorawan_eu.c: 153: }
 36695                           ;lorawan_eu.c: 155: loRa.syncWord = 0x34;
 36696  004E16  0E34               	movlw	52
 36697  004E18  0102               	movlb	2	; () banked
 36698  004E1A  6FF4               	movwf	(_loRa+244)& (0+255),b
 36699                           
 36700                           ; BSR set to: 2
 36701                           ;lorawan_eu.c: 156: RADIO_SetLoRaSyncWord(loRa.syncWord);
 36702  004E1C  0102               	movlb	2	; () banked
 36703  004E1E  51F4               	movf	(_loRa+244)& (0+255),w,b
 36704  004E20  EC09  F052         	call	_RADIO_SetLoRaSyncWord
 36705                           
 36706                           ;lorawan_eu.c: 158: loRa.macStatus.value = 0;
 36707  004E24  0E00               	movlw	0
 36708  004E26  0102               	movlb	2	; () banked
 36709  004E28  6F02               	movwf	(_loRa+2)& (0+255),b
 36710  004E2A  0E00               	movlw	0
 36711  004E2C  6F03               	movwf	(_loRa+3)& (0+255),b
 36712  004E2E  0E00               	movlw	0
 36713  004E30  6F04               	movwf	(_loRa+4)& (0+255),b
 36714  004E32  0E00               	movlw	0
 36715  004E34  6F05               	movwf	(_loRa+5)& (0+255),b
 36716                           
 36717                           ; BSR set to: 2
 36718                           ;lorawan_eu.c: 159: loRa.linkCheckMargin = 255;
 36719  004E36  0102               	movlb	2	; () banked
 36720  004E38  69DD               	setf	(_loRa+221)& (0+255),b
 36721                           
 36722                           ; BSR set to: 2
 36723                           ;lorawan_eu.c: 160: loRa.linkCheckGwCnt = 0;
 36724  004E3A  0E00               	movlw	0
 36725  004E3C  0102               	movlb	2	; () banked
 36726  004E3E  6FDE               	movwf	(_loRa+222)& (0+255),b
 36727                           
 36728                           ; BSR set to: 2
 36729                           ;lorawan_eu.c: 161: loRa.lastTimerValue = 0;
 36730  004E40  0E00               	movlw	0
 36731  004E42  0102               	movlb	2	; () banked
 36732  004E44  6FC8               	movwf	(_loRa+200)& (0+255),b
 36733  004E46  0E00               	movlw	0
 36734  004E48  6FC9               	movwf	(_loRa+201)& (0+255),b
 36735  004E4A  0E00               	movlw	0
 36736  004E4C  6FCA               	movwf	(_loRa+202)& (0+255),b
 36737  004E4E  0E00               	movlw	0
 36738  004E50  6FCB               	movwf	(_loRa+203)& (0+255),b
 36739                           
 36740                           ; BSR set to: 2
 36741                           ;lorawan_eu.c: 162: loRa.lastPacketLength = 0;
 36742  004E52  0E00               	movlw	0
 36743  004E54  0102               	movlb	2	; () banked
 36744  004E56  6FD5               	movwf	(_loRa+213)& (0+255),b
 36745  004E58  0E00               	movlw	0
 36746  004E5A  6FD4               	movwf	(_loRa+212)& (0+255),b
 36747                           
 36748                           ; BSR set to: 2
 36749                           ;lorawan_eu.c: 163: loRa.fCntDown.value = 0;
 36750  004E5C  0E00               	movlw	0
 36751  004E5E  0102               	movlb	2	; () banked
 36752  004E60  6F0A               	movwf	(_loRa+10)& (0+255),b
 36753  004E62  0E00               	movlw	0
 36754  004E64  6F0B               	movwf	(_loRa+11)& (0+255),b
 36755  004E66  0E00               	movlw	0
 36756  004E68  6F0C               	movwf	(_loRa+12)& (0+255),b
 36757  004E6A  0E00               	movlw	0
 36758  004E6C  6F0D               	movwf	(_loRa+13)& (0+255),b
 36759                           
 36760                           ; BSR set to: 2
 36761                           ;lorawan_eu.c: 164: loRa.fCntUp.value = 0;
 36762  004E6E  0E00               	movlw	0
 36763  004E70  0102               	movlb	2	; () banked
 36764  004E72  6F06               	movwf	(_loRa+6)& (0+255),b
 36765  004E74  0E00               	movlw	0
 36766  004E76  6F07               	movwf	(_loRa+7)& (0+255),b
 36767  004E78  0E00               	movlw	0
 36768  004E7A  6F08               	movwf	(_loRa+8)& (0+255),b
 36769  004E7C  0E00               	movlw	0
 36770  004E7E  6F09               	movwf	(_loRa+9)& (0+255),b
 36771                           
 36772                           ; BSR set to: 2
 36773                           ;lorawan_eu.c: 165: loRa.devNonce = 0;
 36774  004E80  0E00               	movlw	0
 36775  004E82  0102               	movlb	2	; () banked
 36776  004E84  6FD3               	movwf	(_loRa+211)& (0+255),b
 36777  004E86  0E00               	movlw	0
 36778  004E88  6FD2               	movwf	(_loRa+210)& (0+255),b
 36779                           
 36780                           ; BSR set to: 2
 36781                           ;lorawan_eu.c: 166: loRa.prescaler = 1;
 36782  004E8A  0E00               	movlw	0
 36783  004E8C  0102               	movlb	2	; () banked
 36784  004E8E  6FDC               	movwf	(_loRa+220)& (0+255),b
 36785  004E90  0E01               	movlw	1
 36786  004E92  6FDB               	movwf	(_loRa+219)& (0+255),b
 36787                           
 36788                           ; BSR set to: 2
 36789                           ;lorawan_eu.c: 167: loRa.adrAckCnt = 0;
 36790  004E94  0E00               	movlw	0
 36791  004E96  0102               	movlb	2	; () banked
 36792  004E98  6FD1               	movwf	(_loRa+209)& (0+255),b
 36793  004E9A  0E00               	movlw	0
 36794  004E9C  6FD0               	movwf	(_loRa+208)& (0+255),b
 36795                           
 36796                           ; BSR set to: 2
 36797                           ;lorawan_eu.c: 168: loRa.counterAdrAckDelay = 0;
 36798  004E9E  0E00               	movlw	0
 36799  004EA0  0102               	movlb	2	; () banked
 36800  004EA2  6FEE               	movwf	(_loRa+238)& (0+255),b
 36801                           
 36802                           ; BSR set to: 2
 36803                           ;lorawan_eu.c: 169: loRa.offset = 0;
 36804  004EA4  0E00               	movlw	0
 36805  004EA6  0102               	movlb	2	; () banked
 36806  004EA8  6FEF               	movwf	(_loRa+239)& (0+255),b
 36807                           
 36808                           ; BSR set to: 2
 36809                           ;lorawan_eu.c: 170: loRa.lastTimerValue = 0;
 36810  004EAA  0E00               	movlw	0
 36811  004EAC  0102               	movlb	2	; () banked
 36812  004EAE  6FC8               	movwf	(_loRa+200)& (0+255),b
 36813  004EB0  0E00               	movlw	0
 36814  004EB2  6FC9               	movwf	(_loRa+201)& (0+255),b
 36815  004EB4  0E00               	movlw	0
 36816  004EB6  6FCA               	movwf	(_loRa+202)& (0+255),b
 36817  004EB8  0E00               	movlw	0
 36818  004EBA  6FCB               	movwf	(_loRa+203)& (0+255),b
 36819                           
 36820                           ; BSR set to: 2
 36821                           ;lorawan_eu.c: 173: loRa.macStatus.linkCheck = 0;
 36822  004EBC  0102               	movlb	2	; () banked
 36823  004EBE  9503               	bcf	(_loRa+3)& (0+255),2,b
 36824                           
 36825                           ; BSR set to: 2
 36826                           ;lorawan_eu.c: 176: loRa.macStatus.value = 0;
 36827  004EC0  0E00               	movlw	0
 36828  004EC2  0102               	movlb	2	; () banked
 36829  004EC4  6F02               	movwf	(_loRa+2)& (0+255),b
 36830  004EC6  0E00               	movlw	0
 36831  004EC8  6F03               	movwf	(_loRa+3)& (0+255),b
 36832  004ECA  0E00               	movlw	0
 36833  004ECC  6F04               	movwf	(_loRa+4)& (0+255),b
 36834  004ECE  0E00               	movlw	0
 36835  004ED0  6F05               	movwf	(_loRa+5)& (0+255),b
 36836                           
 36837                           ; BSR set to: 2
 36838                           ;lorawan_eu.c: 177: loRa.lorawanMacStatus.value = 0;
 36839  004ED2  0E00               	movlw	0
 36840  004ED4  0102               	movlb	2	; () banked
 36841  004ED6  6F01               	movwf	(_loRa+1)& (0+255),b
 36842  004ED8  0E00               	movlw	0
 36843  004EDA  6F00               	movwf	_loRa& (0+255),b
 36844                           
 36845                           ; BSR set to: 2
 36846                           ;lorawan_eu.c: 179: loRa.maxRepetitionsConfirmedUplink = 7;
 36847  004EDC  0E07               	movlw	7
 36848  004EDE  0102               	movlb	2	; () banked
 36849  004EE0  6FD7               	movwf	(_loRa+215)& (0+255),b
 36850                           
 36851                           ; BSR set to: 2
 36852                           ;lorawan_eu.c: 180: loRa.maxRepetitionsUnconfirmedUplink = 0;
 36853  004EE2  0E00               	movlw	0
 36854  004EE4  0102               	movlb	2	; () banked
 36855  004EE6  6FD6               	movwf	(_loRa+214)& (0+255),b
 36856                           
 36857                           ; BSR set to: 2
 36858                           ;lorawan_eu.c: 181: loRa.counterRepetitionsConfirmedUplink = 1;
 36859  004EE8  0E01               	movlw	1
 36860  004EEA  0102               	movlb	2	; () banked
 36861  004EEC  6FD9               	movwf	(_loRa+217)& (0+255),b
 36862                           
 36863                           ; BSR set to: 2
 36864                           ;lorawan_eu.c: 182: loRa.counterRepetitionsUnconfirmedUplink = 1;
 36865  004EEE  0E01               	movlw	1
 36866  004EF0  0102               	movlb	2	; () banked
 36867  004EF2  6FD8               	movwf	(_loRa+216)& (0+255),b
 36868                           
 36869                           ; BSR set to: 2
 36870                           ;lorawan_eu.c: 184: loRa.batteryLevel = (0xFF);
 36871  004EF4  0102               	movlb	2	; () banked
 36872  004EF6  69E0               	setf	(_loRa+224)& (0+255),b
 36873                           
 36874                           ; BSR set to: 2
 36875                           ;lorawan_eu.c: 186: loRa.ismBand = ismBandNew;
 36876  004EF8  C0B5  F2A4         	movff	LORAWAN_Reset@ismBandNew,_loRa+164
 36877                           
 36878                           ; BSR set to: 2
 36879                           ;lorawan_eu.c: 188: loRa.deviceClass = CLASS_A;
 36880  004EFC  0E00               	movlw	0
 36881  004EFE  0102               	movlb	2	; () banked
 36882  004F00  6F12               	movwf	(_loRa+18)& (0+255),b
 36883                           
 36884                           ; BSR set to: 2
 36885                           ;lorawan_eu.c: 191: loRa.maxChannels = 16;
 36886  004F02  0E10               	movlw	16
 36887  004F04  0102               	movlb	2	; () banked
 36888  004F06  6FED               	movwf	(_loRa+237)& (0+255),b
 36889                           
 36890                           ; BSR set to: 2
 36891                           ;lorawan_eu.c: 192: if(ISM_EU868 == ismBandNew)
 36892  004F08  0100               	movlb	0	; () banked
 36893  004F0A  51B5               	movf	LORAWAN_Reset@ismBandNew& (0+255),w,b
 36894  004F0C  0100               	movlb	0	; () banked
 36895  004F0E  A4D8               	btfss	status,2,c
 36896  004F10  D01F               	goto	l16963
 36897                           
 36898                           ; BSR set to: 0
 36899                           ;lorawan_eu.c: 193: {
 36900                           ;lorawan_eu.c: 194: RADIO_Init(&radioBuffer[16], (868100000));
 36901  004F12  0EFF               	movlw	low (_radioBuffer+16)
 36902  004F14  0100               	movlb	0	; () banked
 36903  004F16  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36904  004F18  0E05               	movlw	high (_radioBuffer+16)
 36905  004F1A  0100               	movlb	0	; () banked
 36906  004F1C  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36907  004F1E  0EA0               	movlw	160
 36908  004F20  0100               	movlb	0	; () banked
 36909  004F22  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 36910  004F24  0E27               	movlw	39
 36911  004F26  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36912  004F28  0EBE               	movlw	190
 36913  004F2A  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36914  004F2C  0E33               	movlw	51
 36915  004F2E  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36916  004F30  EC17  F028         	call	_RADIO_Init	;wreg free
 36917                           
 36918                           ;lorawan_eu.c: 196: InitDefault868Channels ();
 36919  004F34  EC56  F042         	call	_InitDefault868Channels	;wreg free
 36920                           
 36921                           ;lorawan_eu.c: 198: loRa.receiveWindow2Parameters.dataRate = (0);
 36922  004F38  0E00               	movlw	0
 36923  004F3A  0102               	movlb	2	; () banked
 36924  004F3C  6F1C               	movwf	(_loRa+28)& (0+255),b
 36925                           
 36926                           ; BSR set to: 2
 36927                           ;lorawan_eu.c: 199: loRa.receiveWindow2Parameters.frequency = (869525000);
 36928  004F3E  0E08               	movlw	8
 36929  004F40  0102               	movlb	2	; () banked
 36930  004F42  6F18               	movwf	(_loRa+24)& (0+255),b
 36931  004F44  0EE6               	movlw	230
 36932  004F46  6F19               	movwf	(_loRa+25)& (0+255),b
 36933  004F48  0ED3               	movlw	211
 36934  004F4A  6F1A               	movwf	(_loRa+26)& (0+255),b
 36935  004F4C  0E33               	movlw	51
 36936  004F4E  D01E               	goto	L23
 36937  004F50                     l16963:
 36938                           
 36939                           ;lorawan_eu.c: 201: else
 36940                           ;lorawan_eu.c: 202: {
 36941                           ;lorawan_eu.c: 203: RADIO_Init(&radioBuffer[16], (433300000));
 36942  004F50  0EFF               	movlw	low (_radioBuffer+16)
 36943  004F52  0100               	movlb	0	; () banked
 36944  004F54  6F7D               	movwf	RADIO_Init@radioBuffer& (0+255),b
 36945  004F56  0E05               	movlw	high (_radioBuffer+16)
 36946  004F58  0100               	movlb	0	; () banked
 36947  004F5A  6F7E               	movwf	(RADIO_Init@radioBuffer+1)& (0+255),b
 36948  004F5C  0E20               	movlw	32
 36949  004F5E  0100               	movlb	0	; () banked
 36950  004F60  6F7F               	movwf	RADIO_Init@frequency& (0+255),b
 36951  004F62  0EA2               	movlw	162
 36952  004F64  6F80               	movwf	(RADIO_Init@frequency+1)& (0+255),b
 36953  004F66  0ED3               	movlw	211
 36954  004F68  6F81               	movwf	(RADIO_Init@frequency+2)& (0+255),b
 36955  004F6A  0E19               	movlw	25
 36956  004F6C  6F82               	movwf	(RADIO_Init@frequency+3)& (0+255),b
 36957  004F6E  EC17  F028         	call	_RADIO_Init	;wreg free
 36958                           
 36959                           ;lorawan_eu.c: 205: InitDefault433Channels ();
 36960  004F72  ECA6  F042         	call	_InitDefault433Channels	;wreg free
 36961                           
 36962                           ;lorawan_eu.c: 207: loRa.receiveWindow2Parameters.dataRate = (0);
 36963  004F76  0E00               	movlw	0
 36964  004F78  0102               	movlb	2	; () banked
 36965  004F7A  6F1C               	movwf	(_loRa+28)& (0+255),b
 36966                           
 36967                           ; BSR set to: 2
 36968                           ;lorawan_eu.c: 208: loRa.receiveWindow2Parameters.frequency = (434665000);
 36969  004F7C  0E28               	movlw	40
 36970  004F7E  0102               	movlb	2	; () banked
 36971  004F80  6F18               	movwf	(_loRa+24)& (0+255),b
 36972  004F82  0E76               	movlw	118
 36973  004F84  6F19               	movwf	(_loRa+25)& (0+255),b
 36974  004F86  0EE8               	movlw	232
 36975  004F88  6F1A               	movwf	(_loRa+26)& (0+255),b
 36976  004F8A  0E19               	movlw	25
 36977  004F8C                     L23:
 36978  004F8C  6F1B               	movwf	(_loRa+27)& (0+255),b
 36979                           
 36980                           ; BSR set to: 2
 36981                           ;lorawan_eu.c: 209: }
 36982                           ;lorawan_eu.c: 211: loRa.txPower = 1;
 36983                           
 36984                           ; BSR set to: 2
 36985  004F8E  0E01               	movlw	1
 36986  004F90  0102               	movlb	2	; () banked
 36987  004F92  6FE1               	movwf	(_loRa+225)& (0+255),b
 36988                           
 36989                           ; BSR set to: 2
 36990                           ;lorawan_eu.c: 213: loRa.currentDataRate = 0;
 36991  004F94  0E00               	movlw	0
 36992  004F96  0102               	movlb	2	; () banked
 36993  004F98  6FDF               	movwf	(_loRa+223)& (0+255),b
 36994                           
 36995                           ; BSR set to: 2
 36996                           ;lorawan_eu.c: 215: UpdateMinMaxChDataRate ();
 36997  004F9A  ECE0  F038         	call	_UpdateMinMaxChDataRate	;wreg free
 36998                           
 36999                           ;lorawan_eu.c: 218: loRa.macKeys.value = 0;
 37000  004F9E  0E00               	movlw	0
 37001  004FA0  0102               	movlb	2	; () banked
 37002  004FA2  6FA6               	movwf	(_loRa+166)& (0+255),b
 37003  004FA4  0E00               	movlw	0
 37004  004FA6  6FA5               	movwf	(_loRa+165)& (0+255),b
 37005                           
 37006                           ; BSR set to: 2
 37007                           ;lorawan_eu.c: 219: memset (&loRa.activationParameters, 0, sizeof(loRa.activationParamet
      +                          ers));
 37008  004FA8  0E1D               	movlw	low (_loRa+29)
 37009  004FAA  0100               	movlb	0	; () banked
 37010  004FAC  6F64               	movwf	memset@p1& (0+255),b
 37011  004FAE  0E02               	movlw	high (_loRa+29)
 37012  004FB0  0100               	movlb	0	; () banked
 37013  004FB2  6F65               	movwf	(memset@p1+1)& (0+255),b
 37014  004FB4  0E00               	movlw	0
 37015  004FB6  0100               	movlb	0	; () banked
 37016  004FB8  6F67               	movwf	(memset@c+1)& (0+255),b
 37017  004FBA  0E00               	movlw	0
 37018  004FBC  6F66               	movwf	memset@c& (0+255),b
 37019  004FBE  0E00               	movlw	0
 37020  004FC0  0100               	movlb	0	; () banked
 37021  004FC2  6F69               	movwf	(memset@n+1)& (0+255),b
 37022  004FC4  0E69               	movlw	105
 37023  004FC6  6F68               	movwf	memset@n& (0+255),b
 37024  004FC8  EC0B  F04E         	call	_memset	;wreg free
 37025                           
 37026                           ;lorawan_eu.c: 222: loRa.protocolParameters.receiveDelay1 = 1000UL;
 37027  004FCC  0E03               	movlw	3
 37028  004FCE  0102               	movlb	2	; () banked
 37029  004FD0  6F95               	movwf	(_loRa+149)& (0+255),b
 37030  004FD2  0EE8               	movlw	232
 37031  004FD4  6F94               	movwf	(_loRa+148)& (0+255),b
 37032                           
 37033                           ; BSR set to: 2
 37034                           ;lorawan_eu.c: 223: loRa.protocolParameters.receiveDelay2 = 2000UL;
 37035  004FD6  0E07               	movlw	7
 37036  004FD8  0102               	movlb	2	; () banked
 37037  004FDA  6F97               	movwf	(_loRa+151)& (0+255),b
 37038  004FDC  0ED0               	movlw	208
 37039  004FDE  6F96               	movwf	(_loRa+150)& (0+255),b
 37040                           
 37041                           ; BSR set to: 2
 37042                           ;lorawan_eu.c: 224: loRa.protocolParameters.joinAcceptDelay1 = 5000UL;
 37043  004FE0  0E13               	movlw	19
 37044  004FE2  0102               	movlb	2	; () banked
 37045  004FE4  6F99               	movwf	(_loRa+153)& (0+255),b
 37046  004FE6  0E88               	movlw	136
 37047  004FE8  6F98               	movwf	(_loRa+152)& (0+255),b
 37048                           
 37049                           ; BSR set to: 2
 37050                           ;lorawan_eu.c: 225: loRa.protocolParameters.joinAcceptDelay2 = 6000UL;
 37051  004FEA  0E17               	movlw	23
 37052  004FEC  0102               	movlb	2	; () banked
 37053  004FEE  6F9B               	movwf	(_loRa+155)& (0+255),b
 37054  004FF0  0E70               	movlw	112
 37055  004FF2  6F9A               	movwf	(_loRa+154)& (0+255),b
 37056                           
 37057                           ; BSR set to: 2
 37058                           ;lorawan_eu.c: 226: loRa.protocolParameters.ackTimeout = 2000;
 37059  004FF4  0E07               	movlw	7
 37060  004FF6  0102               	movlb	2	; () banked
 37061  004FF8  6FA1               	movwf	(_loRa+161)& (0+255),b
 37062  004FFA  0ED0               	movlw	208
 37063  004FFC  6FA0               	movwf	(_loRa+160)& (0+255),b
 37064                           
 37065                           ; BSR set to: 2
 37066                           ;lorawan_eu.c: 227: loRa.protocolParameters.adrAckDelay = 32;
 37067  004FFE  0E20               	movlw	32
 37068  005000  0102               	movlb	2	; () banked
 37069  005002  6FA3               	movwf	(_loRa+163)& (0+255),b
 37070                           
 37071                           ; BSR set to: 2
 37072                           ;lorawan_eu.c: 228: loRa.protocolParameters.adrAckLimit = 64;
 37073  005004  0E40               	movlw	64
 37074  005006  0102               	movlb	2	; () banked
 37075  005008  6FA2               	movwf	(_loRa+162)& (0+255),b
 37076                           
 37077                           ; BSR set to: 2
 37078                           ;lorawan_eu.c: 229: loRa.protocolParameters.maxFcntGap = 16384;
 37079  00500A  0E40               	movlw	64
 37080  00500C  0102               	movlb	2	; () banked
 37081  00500E  6F9D               	movwf	(_loRa+157)& (0+255),b
 37082  005010  0E00               	movlw	0
 37083  005012  6F9C               	movwf	(_loRa+156)& (0+255),b
 37084                           
 37085                           ; BSR set to: 2
 37086                           ;lorawan_eu.c: 230: loRa.protocolParameters.maxMultiFcntGap = 16384;
 37087  005014  0E40               	movlw	64
 37088  005016  0102               	movlb	2	; () banked
 37089  005018  6F9F               	movwf	(_loRa+159)& (0+255),b
 37090  00501A  0E00               	movlw	0
 37091  00501C  6F9E               	movwf	(_loRa+158)& (0+255),b
 37092                           
 37093                           ; BSR set to: 2
 37094                           ;lorawan_eu.c: 232: LORAWAN_LinkCheckConfigure (0);
 37095  00501E  0E00               	movlw	0
 37096  005020  0100               	movlb	0	; () banked
 37097  005022  6FAB               	movwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),b
 37098  005024  0E00               	movlw	0
 37099  005026  6FAA               	movwf	LORAWAN_LinkCheckConfigure@period& (0+255),b
 37100  005028  ECBC  F030         	call	_LORAWAN_LinkCheckConfigure	;wreg free
 37101  00502C  0012               	return		;funcret
 37102  00502E                     __end_of_LORAWAN_Reset:
 37103                           	opt stack 0
 37104                           tosu	equ	0xFFF
 37105                           tosh	equ	0xFFE
 37106                           tosl	equ	0xFFD
 37107                           pclath	equ	0xFFA
 37108                           tblptru	equ	0xFF8
 37109                           tblptrh	equ	0xFF7
 37110                           tblptrl	equ	0xFF6
 37111                           tablat	equ	0xFF5
 37112                           prodh	equ	0xFF4
 37113                           prodl	equ	0xFF3
 37114                           intcon	equ	0xFF2
 37115                           intcon2	equ	0xFF1
 37116                           intcon3	equ	0xFF0
 37117                           indf0	equ	0xFEF
 37118                           postinc0	equ	0xFEE
 37119                           plusw0	equ	0xFEB
 37120                           fsr0h	equ	0xFEA
 37121                           fsr0l	equ	0xFE9
 37122                           wreg	equ	0xFE8
 37123                           postinc1	equ	0xFE6
 37124                           postdec1	equ	0xFE5
 37125                           plusw1	equ	0xFE3
 37126                           fsr1h	equ	0xFE2
 37127                           fsr1l	equ	0xFE1
 37128                           indf2	equ	0xFDF
 37129                           postinc2	equ	0xFDE
 37130                           postdec2	equ	0xFDD
 37131                           plusw2	equ	0xFDB
 37132                           fsr2h	equ	0xFDA
 37133                           fsr2l	equ	0xFD9
 37134                           status	equ	0xFD8
 37135                           
 37136 ;; *************** function _UpdateMinMaxChDataRate *****************
 37137 ;; Defined at:
 37138 ;;		line 1063 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 37139 ;; Parameters:    Size  Location     Type
 37140 ;;		None
 37141 ;; Auto vars:     Size  Location     Type
 37142 ;;  i               1    5[BANK0 ] unsigned char 
 37143 ;; Return value:  Size  Location     Type
 37144 ;;                  1    wreg      void 
 37145 ;; Registers used:
 37146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 37147 ;; Tracked objects:
 37148 ;;		On entry : 0/0
 37149 ;;		On exit  : 0/0
 37150 ;;		Unchanged: 0/0
 37151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37153 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37154 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37155 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37156 ;;Total ram usage:        2 bytes
 37157 ;; Hardware stack levels used:    1
 37158 ;; Hardware stack levels required when called:    7
 37159 ;; This function calls:
 37160 ;;		Nothing
 37161 ;; This function is called by:
 37162 ;;		_LORAWAN_Reset
 37163 ;; This function uses a non-reentrant model
 37164 ;;
 37165                           
 37166                           	psect	text163
 37167  0071C0                     __ptext163:
 37168                           	opt stack 0
 37169  0071C0                     _UpdateMinMaxChDataRate:
 37170                           	opt stack 21
 37171                           
 37172                           ;lorawan.c: 1065: uint8_t i;
 37173                           ;lorawan.c: 1068: loRa.minDataRate = 7;
 37174                           
 37175                           ;incstack = 0
 37176  0071C0  0E07               	movlw	7
 37177  0071C2  0102               	movlb	2	; () banked
 37178  0071C4  6FEB               	movwf	(_loRa+235)& (0+255),b
 37179                           
 37180                           ;lorawan.c: 1069: loRa.maxDataRate = 0;
 37181  0071C6  0E00               	movlw	0
 37182  0071C8  0102               	movlb	2	; () banked
 37183  0071CA  6FEC               	movwf	(_loRa+236)& (0+255),b
 37184                           
 37185                           ;lorawan.c: 1071: for (i = 0; i < loRa.maxChannels; i++)
 37186  0071CC  0E00               	movlw	0
 37187  0071CE  0100               	movlb	0	; () banked
 37188  0071D0  6F65               	movwf	UpdateMinMaxChDataRate@i& (0+255),b
 37189  0071D2  D071               	goto	l16471
 37190  0071D4                     l16459:
 37191                           
 37192                           ; BSR set to: 0
 37193                           ;lorawan.c: 1072: {
 37194                           ;lorawan.c: 1073: if ( (Channels[i].dataRange.min < loRa.minDataRate) && (Channels[i].st
      +                          atus == 1) )
 37195  0071D4  0100               	movlb	0	; () banked
 37196  0071D6  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37197  0071D8  0D0E               	mullw	14
 37198  0071DA  0E05               	movlw	5
 37199  0071DC  26F3               	addwf	prodl,f,c
 37200  0071DE  0E00               	movlw	0
 37201  0071E0  22F4               	addwfc	prodh,f,c
 37202  0071E2  0E00               	movlw	low _Channels
 37203  0071E4  24F3               	addwf	prodl,w,c
 37204  0071E6  6ED9               	movwf	fsr2l,c
 37205  0071E8  0E04               	movlw	high _Channels
 37206  0071EA  20F4               	addwfc	prodh,w,c
 37207  0071EC  6EDA               	movwf	fsr2h,c
 37208  0071EE  0104               	movlb	4	; () banked
 37209  0071F0  50DF               	movf	223,w,c
 37210  0071F2  0B0F               	andlw	15
 37211  0071F4  0100               	movlb	0	; () banked
 37212  0071F6  6F64               	movwf	??_UpdateMinMaxChDataRate& (0+255),b
 37213  0071F8  0102               	movlb	2	; () banked
 37214  0071FA  51EB               	movf	(_loRa+235)& (0+255),w,b
 37215  0071FC  0100               	movlb	0	; () banked
 37216  0071FE  5D64               	subwf	??_UpdateMinMaxChDataRate& (0+255),w,b
 37217  007200  B0D8               	btfsc	status,0,c
 37218  007202  D022               	goto	l2043
 37219                           
 37220                           ; BSR set to: 0
 37221  007204  0100               	movlb	0	; () banked
 37222  007206  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37223  007208  0D0E               	mullw	14
 37224  00720A  0E04               	movlw	4
 37225  00720C  26F3               	addwf	prodl,f,c
 37226  00720E  0E00               	movlw	0
 37227  007210  22F4               	addwfc	prodh,f,c
 37228  007212  0E00               	movlw	low _Channels
 37229  007214  24F3               	addwf	prodl,w,c
 37230  007216  6ED9               	movwf	fsr2l,c
 37231  007218  0E04               	movlw	high _Channels
 37232  00721A  20F4               	addwfc	prodh,w,c
 37233  00721C  6EDA               	movwf	fsr2h,c
 37234  00721E  04DE               	decf	postinc2,w,c
 37235  007220  A4D8               	btfss	status,2,c
 37236  007222  D012               	goto	l2043
 37237                           
 37238                           ; BSR set to: 0
 37239                           ;lorawan.c: 1074: {
 37240                           ;lorawan.c: 1075: loRa.minDataRate = Channels[i].dataRange.min;
 37241  007224  0100               	movlb	0	; () banked
 37242  007226  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37243  007228  0D0E               	mullw	14
 37244  00722A  0E05               	movlw	5
 37245  00722C  26F3               	addwf	prodl,f,c
 37246  00722E  0E00               	movlw	0
 37247  007230  22F4               	addwfc	prodh,f,c
 37248  007232  0E00               	movlw	low _Channels
 37249  007234  24F3               	addwf	prodl,w,c
 37250  007236  6ED9               	movwf	fsr2l,c
 37251  007238  0E04               	movlw	high _Channels
 37252  00723A  20F4               	addwfc	prodh,w,c
 37253  00723C  6EDA               	movwf	fsr2h,c
 37254  00723E  0104               	movlb	4	; () banked
 37255  007240  50DF               	movf	223,w,c
 37256  007242  0B0F               	andlw	15
 37257  007244  0102               	movlb	2	; () banked
 37258  007246  6FEB               	movwf	(_loRa+235)& (0+255),b
 37259  007248                     l2043:
 37260                           
 37261                           ;lorawan.c: 1076: }
 37262                           ;lorawan.c: 1077: if ( (Channels[i].dataRange.max > loRa.maxDataRate) && (Channels[i].st
      +                          atus == 1) )
 37263  007248  0100               	movlb	0	; () banked
 37264  00724A  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37265  00724C  0D0E               	mullw	14
 37266  00724E  0E05               	movlw	5
 37267  007250  26F3               	addwf	prodl,f,c
 37268  007252  0E00               	movlw	0
 37269  007254  22F4               	addwfc	prodh,f,c
 37270  007256  0E00               	movlw	low _Channels
 37271  007258  24F3               	addwf	prodl,w,c
 37272  00725A  6ED9               	movwf	fsr2l,c
 37273  00725C  0E04               	movlw	high _Channels
 37274  00725E  20F4               	addwfc	prodh,w,c
 37275  007260  6EDA               	movwf	fsr2h,c
 37276  007262  0104               	movlb	4	; () banked
 37277  007264  38DF               	swapf	223,w,c
 37278  007266  0B0F               	andlw	15
 37279  007268  0102               	movlb	2	; () banked
 37280  00726A  61EC               	cpfslt	(_loRa+236)& (0+255),b
 37281  00726C  D022               	goto	l16469
 37282                           
 37283                           ; BSR set to: 2
 37284  00726E  0100               	movlb	0	; () banked
 37285  007270  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37286  007272  0D0E               	mullw	14
 37287  007274  0E04               	movlw	4
 37288  007276  26F3               	addwf	prodl,f,c
 37289  007278  0E00               	movlw	0
 37290  00727A  22F4               	addwfc	prodh,f,c
 37291  00727C  0E00               	movlw	low _Channels
 37292  00727E  24F3               	addwf	prodl,w,c
 37293  007280  6ED9               	movwf	fsr2l,c
 37294  007282  0E04               	movlw	high _Channels
 37295  007284  20F4               	addwfc	prodh,w,c
 37296  007286  6EDA               	movwf	fsr2h,c
 37297  007288  04DE               	decf	postinc2,w,c
 37298  00728A  A4D8               	btfss	status,2,c
 37299  00728C  D012               	goto	l16469
 37300                           
 37301                           ; BSR set to: 0
 37302                           ;lorawan.c: 1078: {
 37303                           ;lorawan.c: 1079: loRa.maxDataRate = Channels[i].dataRange.max;
 37304  00728E  0100               	movlb	0	; () banked
 37305  007290  5165               	movf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37306  007292  0D0E               	mullw	14
 37307  007294  0E05               	movlw	5
 37308  007296  26F3               	addwf	prodl,f,c
 37309  007298  0E00               	movlw	0
 37310  00729A  22F4               	addwfc	prodh,f,c
 37311  00729C  0E00               	movlw	low _Channels
 37312  00729E  24F3               	addwf	prodl,w,c
 37313  0072A0  6ED9               	movwf	fsr2l,c
 37314  0072A2  0E04               	movlw	high _Channels
 37315  0072A4  20F4               	addwfc	prodh,w,c
 37316  0072A6  6EDA               	movwf	fsr2h,c
 37317  0072A8  0104               	movlb	4	; () banked
 37318  0072AA  38DF               	swapf	223,w,c
 37319  0072AC  0B0F               	andlw	15
 37320  0072AE  0102               	movlb	2	; () banked
 37321  0072B0  6FEC               	movwf	(_loRa+236)& (0+255),b
 37322  0072B2                     l16469:
 37323  0072B2  0100               	movlb	0	; () banked
 37324  0072B4  2B65               	incf	UpdateMinMaxChDataRate@i& (0+255),f,b
 37325  0072B6                     l16471:
 37326                           
 37327                           ; BSR set to: 0
 37328  0072B6  0102               	movlb	2	; () banked
 37329  0072B8  51ED               	movf	(_loRa+237)& (0+255),w,b
 37330  0072BA  0100               	movlb	0	; () banked
 37331  0072BC  5D65               	subwf	UpdateMinMaxChDataRate@i& (0+255),w,b
 37332  0072BE  B0D8               	btfsc	status,0,c
 37333  0072C0  0012               	return	
 37334  0072C2  D788               	goto	l16459
 37335  0072C4                     __end_of_UpdateMinMaxChDataRate:
 37336                           	opt stack 0
 37337                           tosu	equ	0xFFF
 37338                           tosh	equ	0xFFE
 37339                           tosl	equ	0xFFD
 37340                           pclath	equ	0xFFA
 37341                           tblptru	equ	0xFF8
 37342                           tblptrh	equ	0xFF7
 37343                           tblptrl	equ	0xFF6
 37344                           tablat	equ	0xFF5
 37345                           prodh	equ	0xFF4
 37346                           prodl	equ	0xFF3
 37347                           intcon	equ	0xFF2
 37348                           intcon2	equ	0xFF1
 37349                           intcon3	equ	0xFF0
 37350                           indf0	equ	0xFEF
 37351                           postinc0	equ	0xFEE
 37352                           plusw0	equ	0xFEB
 37353                           fsr0h	equ	0xFEA
 37354                           fsr0l	equ	0xFE9
 37355                           wreg	equ	0xFE8
 37356                           postinc1	equ	0xFE6
 37357                           postdec1	equ	0xFE5
 37358                           plusw1	equ	0xFE3
 37359                           fsr1h	equ	0xFE2
 37360                           fsr1l	equ	0xFE1
 37361                           indf2	equ	0xFDF
 37362                           postinc2	equ	0xFDE
 37363                           postdec2	equ	0xFDD
 37364                           plusw2	equ	0xFDB
 37365                           fsr2h	equ	0xFDA
 37366                           fsr2l	equ	0xFD9
 37367                           status	equ	0xFD8
 37368                           
 37369 ;; *************** function _StopAllSoftwareTimers *****************
 37370 ;; Defined at:
 37371 ;;		line 965 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 37372 ;; Parameters:    Size  Location     Type
 37373 ;;		None
 37374 ;; Auto vars:     Size  Location     Type
 37375 ;;		None
 37376 ;; Return value:  Size  Location     Type
 37377 ;;                  1    wreg      void 
 37378 ;; Registers used:
 37379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37380 ;; Tracked objects:
 37381 ;;		On entry : 0/0
 37382 ;;		On exit  : 0/0
 37383 ;;		Unchanged: 0/0
 37384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37389 ;;Total ram usage:        0 bytes
 37390 ;; Hardware stack levels used:    1
 37391 ;; Hardware stack levels required when called:    8
 37392 ;; This function calls:
 37393 ;;		_SwTimerStop
 37394 ;; This function is called by:
 37395 ;;		_LORAWAN_Init
 37396 ;;		_LORAWAN_Reset
 37397 ;; This function uses a non-reentrant model
 37398 ;;
 37399                           
 37400                           	psect	text164
 37401  009534                     __ptext164:
 37402                           	opt stack 0
 37403  009534                     _StopAllSoftwareTimers:
 37404                           	opt stack 21
 37405                           
 37406                           ;lorawan_eu.c: 967: SwTimerStop(loRa.joinAccept1TimerId);
 37407                           
 37408                           ; BSR set to: 0
 37409                           ;incstack = 0
 37410  009534  0102               	movlb	2	; () banked
 37411  009536  51E2               	movf	(_loRa+226)& (0+255),w,b
 37412  009538  EC61  F04F         	call	_SwTimerStop
 37413                           
 37414                           ;lorawan_eu.c: 968: SwTimerStop(loRa.joinAccept2TimerId);
 37415  00953C  0102               	movlb	2	; () banked
 37416  00953E  51E3               	movf	(_loRa+227)& (0+255),w,b
 37417  009540  EC61  F04F         	call	_SwTimerStop
 37418                           
 37419                           ;lorawan_eu.c: 969: SwTimerStop(loRa.linkCheckTimerId);
 37420  009544  0102               	movlb	2	; () banked
 37421  009546  51E7               	movf	(_loRa+231)& (0+255),w,b
 37422  009548  EC61  F04F         	call	_SwTimerStop
 37423                           
 37424                           ;lorawan_eu.c: 970: SwTimerStop(loRa.receiveWindow1TimerId);
 37425  00954C  0102               	movlb	2	; () banked
 37426  00954E  51E4               	movf	(_loRa+228)& (0+255),w,b
 37427  009550  EC61  F04F         	call	_SwTimerStop
 37428                           
 37429                           ;lorawan_eu.c: 971: SwTimerStop(loRa.receiveWindow2TimerId);
 37430  009554  0102               	movlb	2	; () banked
 37431  009556  51E5               	movf	(_loRa+229)& (0+255),w,b
 37432  009558  EC61  F04F         	call	_SwTimerStop
 37433                           
 37434                           ;lorawan_eu.c: 972: SwTimerStop(loRa.ackTimeoutTimerId);
 37435  00955C  0102               	movlb	2	; () banked
 37436  00955E  51E8               	movf	(_loRa+232)& (0+255),w,b
 37437  009560  EC61  F04F         	call	_SwTimerStop
 37438                           
 37439                           ;lorawan_eu.c: 973: SwTimerStop(loRa.automaticReplyTimerId);
 37440  009564  0102               	movlb	2	; () banked
 37441  009566  51E6               	movf	(_loRa+230)& (0+255),w,b
 37442  009568  EC61  F04F         	call	_SwTimerStop
 37443                           
 37444                           ;lorawan_eu.c: 974: SwTimerStop(loRa.unconfirmedRetransmisionTimerId);
 37445  00956C  0102               	movlb	2	; () banked
 37446  00956E  51EA               	movf	(_loRa+234)& (0+255),w,b
 37447  009570  EC61  F04F         	call	_SwTimerStop
 37448                           
 37449                           ;lorawan_eu.c: 975: SwTimerStop(loRa.abpJoinTimerId);
 37450  009574  0102               	movlb	2	; () banked
 37451  009576  51F3               	movf	(_loRa+243)& (0+255),w,b
 37452  009578  EC61  F04F         	call	_SwTimerStop
 37453                           
 37454                           ;lorawan_eu.c: 976: SwTimerStop(loRa.dutyCycleTimerId);
 37455  00957C  0102               	movlb	2	; () banked
 37456  00957E  51E9               	movf	(_loRa+233)& (0+255),w,b
 37457  009580  EC61  F04F         	call	_SwTimerStop
 37458  009584  0012               	return		;funcret
 37459  009586                     __end_of_StopAllSoftwareTimers:
 37460                           	opt stack 0
 37461                           tosu	equ	0xFFF
 37462                           tosh	equ	0xFFE
 37463                           tosl	equ	0xFFD
 37464                           pclath	equ	0xFFA
 37465                           tblptru	equ	0xFF8
 37466                           tblptrh	equ	0xFF7
 37467                           tblptrl	equ	0xFF6
 37468                           tablat	equ	0xFF5
 37469                           prodh	equ	0xFF4
 37470                           prodl	equ	0xFF3
 37471                           intcon	equ	0xFF2
 37472                           intcon2	equ	0xFF1
 37473                           intcon3	equ	0xFF0
 37474                           indf0	equ	0xFEF
 37475                           postinc0	equ	0xFEE
 37476                           plusw0	equ	0xFEB
 37477                           fsr0h	equ	0xFEA
 37478                           fsr0l	equ	0xFE9
 37479                           wreg	equ	0xFE8
 37480                           postinc1	equ	0xFE6
 37481                           postdec1	equ	0xFE5
 37482                           plusw1	equ	0xFE3
 37483                           fsr1h	equ	0xFE2
 37484                           fsr1l	equ	0xFE1
 37485                           indf2	equ	0xFDF
 37486                           postinc2	equ	0xFDE
 37487                           postdec2	equ	0xFDD
 37488                           plusw2	equ	0xFDB
 37489                           fsr2h	equ	0xFDA
 37490                           fsr2l	equ	0xFD9
 37491                           status	equ	0xFD8
 37492                           
 37493 ;; *************** function _RADIO_SetLoRaSyncWord *****************
 37494 ;; Defined at:
 37495 ;;		line 522 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37496 ;; Parameters:    Size  Location     Type
 37497 ;;  syncWord        1    wreg     unsigned char 
 37498 ;; Auto vars:     Size  Location     Type
 37499 ;;  syncWord        1    4[BANK0 ] unsigned char 
 37500 ;; Return value:  Size  Location     Type
 37501 ;;                  1    wreg      void 
 37502 ;; Registers used:
 37503 ;;		wreg
 37504 ;; Tracked objects:
 37505 ;;		On entry : 0/0
 37506 ;;		On exit  : 0/0
 37507 ;;		Unchanged: 0/0
 37508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37509 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37510 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37512 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37513 ;;Total ram usage:        1 bytes
 37514 ;; Hardware stack levels used:    1
 37515 ;; Hardware stack levels required when called:    7
 37516 ;; This function calls:
 37517 ;;		Nothing
 37518 ;; This function is called by:
 37519 ;;		_LORAWAN_Reset
 37520 ;;		_ConfigureRadio
 37521 ;; This function uses a non-reentrant model
 37522 ;;
 37523                           
 37524                           	psect	text165
 37525  00A412                     __ptext165:
 37526                           	opt stack 0
 37527  00A412                     _RADIO_SetLoRaSyncWord:
 37528                           	opt stack 18
 37529                           
 37530                           ;incstack = 0
 37531                           ;RADIO_SetLoRaSyncWord@syncWord stored from wreg
 37532  00A412  0100               	movlb	0	; () banked
 37533  00A414  6F64               	movwf	RADIO_SetLoRaSyncWord@syncWord& (0+255),b
 37534                           
 37535                           ;radio_driver_SX1276.c: 525: RadioConfiguration.syncWordLoRa = syncWord;
 37536  00A416  C064  F19A         	movff	RADIO_SetLoRaSyncWord@syncWord,_RadioConfiguration+14
 37537  00A41A  0012               	return		;funcret
 37538  00A41C                     __end_of_RADIO_SetLoRaSyncWord:
 37539                           	opt stack 0
 37540                           tosu	equ	0xFFF
 37541                           tosh	equ	0xFFE
 37542                           tosl	equ	0xFFD
 37543                           pclath	equ	0xFFA
 37544                           tblptru	equ	0xFF8
 37545                           tblptrh	equ	0xFF7
 37546                           tblptrl	equ	0xFF6
 37547                           tablat	equ	0xFF5
 37548                           prodh	equ	0xFF4
 37549                           prodl	equ	0xFF3
 37550                           intcon	equ	0xFF2
 37551                           intcon2	equ	0xFF1
 37552                           intcon3	equ	0xFF0
 37553                           indf0	equ	0xFEF
 37554                           postinc0	equ	0xFEE
 37555                           plusw0	equ	0xFEB
 37556                           fsr0h	equ	0xFEA
 37557                           fsr0l	equ	0xFE9
 37558                           wreg	equ	0xFE8
 37559                           postinc1	equ	0xFE6
 37560                           postdec1	equ	0xFE5
 37561                           plusw1	equ	0xFE3
 37562                           fsr1h	equ	0xFE2
 37563                           fsr1l	equ	0xFE1
 37564                           indf2	equ	0xFDF
 37565                           postinc2	equ	0xFDE
 37566                           postdec2	equ	0xFDD
 37567                           plusw2	equ	0xFDB
 37568                           fsr2h	equ	0xFDA
 37569                           fsr2l	equ	0xFD9
 37570                           status	equ	0xFD8
 37571                           
 37572 ;; *************** function _RADIO_Init *****************
 37573 ;; Defined at:
 37574 ;;		line 422 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 37575 ;; Parameters:    Size  Location     Type
 37576 ;;  radioBuffer     2   29[BANK0 ] PTR unsigned char 
 37577 ;;		 -> radioBuffer(271), 
 37578 ;;  frequency       4   31[BANK0 ] unsigned long 
 37579 ;; Auto vars:     Size  Location     Type
 37580 ;;		None
 37581 ;; Return value:  Size  Location     Type
 37582 ;;                  1    wreg      void 
 37583 ;; Registers used:
 37584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37585 ;; Tracked objects:
 37586 ;;		On entry : 0/0
 37587 ;;		On exit  : 0/0
 37588 ;;		Unchanged: 0/0
 37589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 37590 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37592 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37593 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 37594 ;;Total ram usage:        7 bytes
 37595 ;; Hardware stack levels used:    1
 37596 ;; Hardware stack levels required when called:   11
 37597 ;; This function calls:
 37598 ;;		_RADIO_RegisterRead
 37599 ;;		_RADIO_RegisterWrite
 37600 ;;		_RADIO_Reset
 37601 ;;		_RADIO_WriteFrequency
 37602 ;;		_RADIO_WriteMode
 37603 ;;		_SwTimerCreate
 37604 ;;		_SwTimerSetCallback
 37605 ;;		_SwTimerStop
 37606 ;; This function is called by:
 37607 ;;		_LORAWAN_Init
 37608 ;;		_LORAWAN_Reset
 37609 ;; This function uses a non-reentrant model
 37610 ;;
 37611                           
 37612                           	psect	text166
 37613  00502E                     __ptext166:
 37614                           	opt stack 0
 37615  00502E                     _RADIO_Init:
 37616                           	opt stack 18
 37617                           
 37618                           ;radio_driver_SX1276.c: 424: RadioConfiguration.frequency = frequency;
 37619                           
 37620                           ;incstack = 0
 37621  00502E  C07F  F18C         	movff	RADIO_Init@frequency,_RadioConfiguration
 37622  005032  C080  F18D         	movff	RADIO_Init@frequency+1,_RadioConfiguration+1
 37623  005036  C081  F18E         	movff	RADIO_Init@frequency+2,_RadioConfiguration+2
 37624  00503A  C082  F18F         	movff	RADIO_Init@frequency+3,_RadioConfiguration+3
 37625                           
 37626                           ;radio_driver_SX1276.c: 425: RadioConfiguration.frequencyDeviation = 25000;
 37627  00503E  0EA8               	movlw	168
 37628  005040  0101               	movlb	1	; () banked
 37629  005042  6F90               	movwf	(_RadioConfiguration+4)& (0+255),b
 37630  005044  0E61               	movlw	97
 37631  005046  6F91               	movwf	(_RadioConfiguration+5)& (0+255),b
 37632  005048  0E00               	movlw	0
 37633  00504A  6F92               	movwf	(_RadioConfiguration+6)& (0+255),b
 37634  00504C  0E00               	movlw	0
 37635  00504E  6F93               	movwf	(_RadioConfiguration+7)& (0+255),b
 37636                           
 37637                           ;radio_driver_SX1276.c: 426: RadioConfiguration.bitRate = 50000;
 37638  005050  0E50               	movlw	80
 37639  005052  0101               	movlb	1	; () banked
 37640  005054  6F94               	movwf	(_RadioConfiguration+8)& (0+255),b
 37641  005056  0EC3               	movlw	195
 37642  005058  6F95               	movwf	(_RadioConfiguration+9)& (0+255),b
 37643  00505A  0E00               	movlw	0
 37644  00505C  6F96               	movwf	(_RadioConfiguration+10)& (0+255),b
 37645  00505E  0E00               	movlw	0
 37646  005060  6F97               	movwf	(_RadioConfiguration+11)& (0+255),b
 37647                           
 37648                           ;radio_driver_SX1276.c: 427: RadioConfiguration.modulation = MODULATION_LORA;
 37649  005062  0E01               	movlw	1
 37650  005064  0101               	movlb	1	; () banked
 37651  005066  6FA4               	movwf	(_RadioConfiguration+24)& (0+255),b
 37652                           
 37653                           ;radio_driver_SX1276.c: 428: RadioConfiguration.bandWidth = BW_125KHZ;
 37654  005068  0E07               	movlw	7
 37655  00506A  0101               	movlb	1	; () banked
 37656  00506C  6FA6               	movwf	(_RadioConfiguration+26)& (0+255),b
 37657                           
 37658                           ;radio_driver_SX1276.c: 429: RadioConfiguration.outputPower = 1;
 37659  00506E  0E01               	movlw	1
 37660  005070  0101               	movlb	1	; () banked
 37661  005072  6FA7               	movwf	(_RadioConfiguration+27)& (0+255),b
 37662                           
 37663                           ;radio_driver_SX1276.c: 430: RadioConfiguration.errorCodingRate = CR_4_5;
 37664  005074  0E01               	movlw	1
 37665  005076  0101               	movlb	1	; () banked
 37666  005078  6FAD               	movwf	(_RadioConfiguration+33)& (0+255),b
 37667                           
 37668                           ;radio_driver_SX1276.c: 431: RadioConfiguration.implicitHeaderMode = 0;
 37669  00507A  0E00               	movlw	0
 37670  00507C  0101               	movlb	1	; () banked
 37671  00507E  6FAE               	movwf	(_RadioConfiguration+34)& (0+255),b
 37672                           
 37673                           ;radio_driver_SX1276.c: 432: RadioConfiguration.preambleLen = 8;
 37674  005080  0E00               	movlw	0
 37675  005082  0101               	movlb	1	; () banked
 37676  005084  6F99               	movwf	(_RadioConfiguration+13)& (0+255),b
 37677  005086  0E08               	movlw	8
 37678  005088  6F98               	movwf	(_RadioConfiguration+12)& (0+255),b
 37679                           
 37680                           ;radio_driver_SX1276.c: 433: RadioConfiguration.dataRate = SF_12;
 37681  00508A  0E0C               	movlw	12
 37682  00508C  0101               	movlb	1	; () banked
 37683  00508E  6FA5               	movwf	(_RadioConfiguration+25)& (0+255),b
 37684                           
 37685                           ;radio_driver_SX1276.c: 434: RadioConfiguration.crcOn = 1;
 37686  005090  0E01               	movlw	1
 37687  005092  0101               	movlb	1	; () banked
 37688  005094  6FA8               	movwf	(_RadioConfiguration+28)& (0+255),b
 37689                           
 37690                           ;radio_driver_SX1276.c: 435: RadioConfiguration.paBoost = 0;
 37691  005096  0E00               	movlw	0
 37692  005098  0101               	movlb	1	; () banked
 37693  00509A  6FA9               	movwf	(_RadioConfiguration+29)& (0+255),b
 37694                           
 37695                           ;radio_driver_SX1276.c: 436: RadioConfiguration.iqInverted = 0;
 37696  00509C  0E00               	movlw	0
 37697  00509E  0101               	movlb	1	; () banked
 37698  0050A0  6FAC               	movwf	(_RadioConfiguration+32)& (0+255),b
 37699                           
 37700                           ;radio_driver_SX1276.c: 437: RadioConfiguration.syncWord[0] = 0xC1;
 37701  0050A2  0EC1               	movlw	193
 37702  0050A4  0101               	movlb	1	; () banked
 37703  0050A6  6F9B               	movwf	(_RadioConfiguration+15)& (0+255),b
 37704                           
 37705                           ;radio_driver_SX1276.c: 438: RadioConfiguration.syncWord[1] = 0x94;
 37706  0050A8  0E94               	movlw	148
 37707  0050AA  0101               	movlb	1	; () banked
 37708  0050AC  6F9C               	movwf	(_RadioConfiguration+16)& (0+255),b
 37709                           
 37710                           ;radio_driver_SX1276.c: 439: RadioConfiguration.syncWord[2] = 0xC1;
 37711  0050AE  0EC1               	movlw	193
 37712  0050B0  0101               	movlb	1	; () banked
 37713  0050B2  6F9D               	movwf	(_RadioConfiguration+17)& (0+255),b
 37714                           
 37715                           ;radio_driver_SX1276.c: 440: RadioConfiguration.syncWordLen = 3;
 37716  0050B4  0E03               	movlw	3
 37717  0050B6  0101               	movlb	1	; () banked
 37718  0050B8  6FA3               	movwf	(_RadioConfiguration+23)& (0+255),b
 37719                           
 37720                           ;radio_driver_SX1276.c: 441: RadioConfiguration.syncWordLoRa = 0x34;
 37721  0050BA  0E34               	movlw	52
 37722  0050BC  0101               	movlb	1	; () banked
 37723  0050BE  6F9A               	movwf	(_RadioConfiguration+14)& (0+255),b
 37724                           
 37725                           ;radio_driver_SX1276.c: 442: RadioConfiguration.flags = 0;
 37726  0050C0  0E00               	movlw	0
 37727  0050C2  0101               	movlb	1	; () banked
 37728  0050C4  6FAF               	movwf	(_RadioConfiguration+35)& (0+255),b
 37729                           
 37730                           ;radio_driver_SX1276.c: 443: RadioConfiguration.dataBufferLen = 0;
 37731  0050C6  0E00               	movlw	0
 37732  0050C8  0101               	movlb	1	; () banked
 37733  0050CA  6FB0               	movwf	(_RadioConfiguration+36)& (0+255),b
 37734                           
 37735                           ; BSR set to: 1
 37736                           ;radio_driver_SX1276.c: 444: RadioConfiguration.dataBuffer = radioBuffer;
 37737  0050CC  C07D  F1B1         	movff	RADIO_Init@radioBuffer,_RadioConfiguration+37
 37738  0050D0  C07E  F1B2         	movff	RADIO_Init@radioBuffer+1,_RadioConfiguration+38
 37739                           
 37740                           ; BSR set to: 1
 37741                           ;radio_driver_SX1276.c: 445: RadioConfiguration.frequencyHopPeriod = 0;
 37742  0050D4  0E00               	movlw	0
 37743  0050D6  0101               	movlb	1	; () banked
 37744  0050D8  6FAB               	movwf	(_RadioConfiguration+31)& (0+255),b
 37745  0050DA  0E00               	movlw	0
 37746  0050DC  6FAA               	movwf	(_RadioConfiguration+30)& (0+255),b
 37747                           
 37748                           ; BSR set to: 1
 37749                           ;radio_driver_SX1276.c: 446: RadioConfiguration.packetSNR = -128;
 37750  0050DE  0E80               	movlw	128
 37751  0050E0  0101               	movlb	1	; () banked
 37752  0050E2  6FBE               	movwf	(_RadioConfiguration+50)& (0+255),b
 37753                           
 37754                           ; BSR set to: 1
 37755                           ;radio_driver_SX1276.c: 447: RadioConfiguration.watchdogTimerTimeout = ((uint32_t)15000)
      +                          ;
 37756  0050E4  0E98               	movlw	152
 37757  0050E6  0101               	movlb	1	; () banked
 37758  0050E8  6FB6               	movwf	(_RadioConfiguration+42)& (0+255),b
 37759  0050EA  0E3A               	movlw	58
 37760  0050EC  6FB7               	movwf	(_RadioConfiguration+43)& (0+255),b
 37761  0050EE  0E00               	movlw	0
 37762  0050F0  6FB8               	movwf	(_RadioConfiguration+44)& (0+255),b
 37763  0050F2  0E00               	movlw	0
 37764  0050F4  6FB9               	movwf	(_RadioConfiguration+45)& (0+255),b
 37765                           
 37766                           ; BSR set to: 1
 37767                           ;radio_driver_SX1276.c: 448: RadioConfiguration.fskDataShaping = FSK_SHAPING_GAUSS_BT_0_
      +                          5;
 37768  0050F6  0E02               	movlw	2
 37769  0050F8  0101               	movlb	1	; () banked
 37770  0050FA  6FBF               	movwf	(_RadioConfiguration+51)& (0+255),b
 37771                           
 37772                           ; BSR set to: 1
 37773                           ;radio_driver_SX1276.c: 449: RadioConfiguration.rxBw = FSKBW_50_0KHZ;
 37774  0050FC  0E0B               	movlw	11
 37775  0050FE  0101               	movlb	1	; () banked
 37776  005100  6FC0               	movwf	(_RadioConfiguration+52)& (0+255),b
 37777                           
 37778                           ; BSR set to: 1
 37779                           ;radio_driver_SX1276.c: 450: RadioConfiguration.afcBw = FSKBW_83_3KHZ;
 37780  005102  0E12               	movlw	18
 37781  005104  0101               	movlb	1	; () banked
 37782  005106  6FC1               	movwf	(_RadioConfiguration+53)& (0+255),b
 37783                           
 37784                           ; BSR set to: 1
 37785                           ;radio_driver_SX1276.c: 451: RadioConfiguration.fhssNextFrequency = (0);
 37786  005108  0E00               	movlw	0
 37787  00510A  0101               	movlb	1	; () banked
 37788  00510C  6FBB               	movwf	(_RadioConfiguration+47)& (0+255),b
 37789  00510E  0E00               	movlw	0
 37790  005110  0101               	movlb	1	; () banked
 37791  005112  6FBC               	movwf	(_RadioConfiguration+48)& (0+255),b
 37792                           
 37793                           ;radio_driver_SX1276.c: 456: if (0 == RadioConfiguration.initialized)
 37794  005114  0101               	movlb	1	; () banked
 37795  005116  51BA               	movf	(_RadioConfiguration+46)& (0+255),w,b
 37796  005118  A4D8               	btfss	status,2,c
 37797  00511A  D02A               	goto	l16227
 37798                           
 37799                           ; BSR set to: 1
 37800                           ;radio_driver_SX1276.c: 457: {
 37801                           ;radio_driver_SX1276.c: 460: RadioConfiguration.timeOnAirTimerId = SwTimerCreate();
 37802  00511C  EC91  F043         	call	_SwTimerCreate	;wreg free
 37803  005120  0101               	movlb	1	; () banked
 37804  005122  6FB3               	movwf	(_RadioConfiguration+39)& (0+255),b
 37805                           
 37806                           ;radio_driver_SX1276.c: 461: RadioConfiguration.fskRxWindowTimerId = SwTimerCreate();
 37807  005124  EC91  F043         	call	_SwTimerCreate	;wreg free
 37808  005128  0101               	movlb	1	; () banked
 37809  00512A  6FB4               	movwf	(_RadioConfiguration+40)& (0+255),b
 37810                           
 37811                           ;radio_driver_SX1276.c: 462: RadioConfiguration.watchdogTimerId = SwTimerCreate();
 37812  00512C  EC91  F043         	call	_SwTimerCreate	;wreg free
 37813  005130  0101               	movlb	1	; () banked
 37814  005132  6FB5               	movwf	(_RadioConfiguration+41)& (0+255),b
 37815                           
 37816                           ;radio_driver_SX1276.c: 463: SwTimerSetCallback(RadioConfiguration.fskRxWindowTimerId, R
      +                          ADIO_RxFSKTimeout, 0);
 37817  005134  0EEA               	movlw	low _RADIO_RxFSKTimeout
 37818  005136  0100               	movlb	0	; () banked
 37819  005138  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 37820  00513A  0E99               	movlw	high _RADIO_RxFSKTimeout
 37821  00513C  0100               	movlb	0	; () banked
 37822  00513E  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37823  005140  0E00               	movlw	0
 37824  005142  0100               	movlb	0	; () banked
 37825  005144  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37826  005146  0101               	movlb	1	; () banked
 37827  005148  51B4               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37828  00514A  ECED  F04B         	call	_SwTimerSetCallback
 37829                           
 37830                           ;radio_driver_SX1276.c: 464: SwTimerSetCallback(RadioConfiguration.watchdogTimerId, RADI
      +                          O_WatchdogTimeout, 0);
 37831  00514E  0ED8               	movlw	low _RADIO_WatchdogTimeout
 37832  005150  0100               	movlb	0	; () banked
 37833  005152  6F64               	movwf	SwTimerSetCallback@callback& (0+255),b
 37834  005154  0E95               	movlw	high _RADIO_WatchdogTimeout
 37835  005156  0100               	movlb	0	; () banked
 37836  005158  6F65               	movwf	(SwTimerSetCallback@callback+1)& (0+255),b
 37837  00515A  0E00               	movlw	0
 37838  00515C  0100               	movlb	0	; () banked
 37839  00515E  6F66               	movwf	SwTimerSetCallback@callbackParameter& (0+255),b
 37840  005160  0101               	movlb	1	; () banked
 37841  005162  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37842  005164  ECED  F04B         	call	_SwTimerSetCallback
 37843                           
 37844                           ;radio_driver_SX1276.c: 465: RadioConfiguration.initialized = 1;
 37845  005168  0E01               	movlw	1
 37846  00516A  0101               	movlb	1	; () banked
 37847  00516C  6FBA               	movwf	(_RadioConfiguration+46)& (0+255),b
 37848                           
 37849                           ;radio_driver_SX1276.c: 466: }
 37850  00516E  D00C               	goto	l16229
 37851  005170                     l16227:
 37852                           
 37853                           ; BSR set to: 1
 37854                           ;radio_driver_SX1276.c: 467: else
 37855                           ;radio_driver_SX1276.c: 468: {
 37856                           ;radio_driver_SX1276.c: 469: SwTimerStop(RadioConfiguration.timeOnAirTimerId);
 37857  005170  0101               	movlb	1	; () banked
 37858  005172  51B3               	movf	(_RadioConfiguration+39)& (0+255),w,b
 37859  005174  EC61  F04F         	call	_SwTimerStop
 37860                           
 37861                           ;radio_driver_SX1276.c: 470: SwTimerStop(RadioConfiguration.fskRxWindowTimerId);
 37862  005178  0101               	movlb	1	; () banked
 37863  00517A  51B4               	movf	(_RadioConfiguration+40)& (0+255),w,b
 37864  00517C  EC61  F04F         	call	_SwTimerStop
 37865                           
 37866                           ;radio_driver_SX1276.c: 471: SwTimerStop(RadioConfiguration.watchdogTimerId);
 37867  005180  0101               	movlb	1	; () banked
 37868  005182  51B5               	movf	(_RadioConfiguration+41)& (0+255),w,b
 37869  005184  EC61  F04F         	call	_SwTimerStop
 37870  005188                     l16229:
 37871                           
 37872                           ;radio_driver_SX1276.c: 472: }
 37873                           ;radio_driver_SX1276.c: 474: RADIO_Reset();
 37874  005188  EC10  F04C         	call	_RADIO_Reset	;wreg free
 37875                           
 37876                           ;radio_driver_SX1276.c: 479: RADIO_WriteMode(MODE_STANDBY, MODULATION_FSK, 1);
 37877  00518C  0E00               	movlw	0
 37878  00518E  0100               	movlb	0	; () banked
 37879  005190  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37880  005192  0E01               	movlw	1
 37881  005194  0100               	movlb	0	; () banked
 37882  005196  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37883  005198  0E01               	movlw	1
 37884  00519A  EC70  F035         	call	_RADIO_WriteMode
 37885                           
 37886                           ;radio_driver_SX1276.c: 482: RADIO_WriteFrequency(RadioConfiguration.frequency);
 37887  00519E  C18C  F071         	movff	_RadioConfiguration,RADIO_WriteFrequency@frequency
 37888  0051A2  C18D  F072         	movff	_RadioConfiguration+1,RADIO_WriteFrequency@frequency+1
 37889  0051A6  C18E  F073         	movff	_RadioConfiguration+2,RADIO_WriteFrequency@frequency+2
 37890  0051AA  C18F  F074         	movff	_RadioConfiguration+3,RADIO_WriteFrequency@frequency+3
 37891  0051AE  EC64  F03A         	call	_RADIO_WriteFrequency	;wreg free
 37892                           
 37893                           ;radio_driver_SX1276.c: 486: RADIO_RegisterWrite(0x3B, 0x42);
 37894  0051B2  0E42               	movlw	66
 37895  0051B4  0100               	movlb	0	; () banked
 37896  0051B6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37897  0051B8  0E3B               	movlw	59
 37898  0051BA  EC36  F050         	call	_RADIO_RegisterWrite
 37899  0051BE                     l16237:
 37900  0051BE  0E3B               	movlw	59
 37901  0051C0  EC4D  F04F         	call	_RADIO_RegisterRead
 37902  0051C4  0100               	movlb	0	; () banked
 37903  0051C6  6F83               	movwf	??_RADIO_Init& (0+255),b
 37904  0051C8  0100               	movlb	0	; () banked
 37905  0051CA  BB83               	btfsc	??_RADIO_Init& (0+255),5,b
 37906  0051CC  D7F8               	goto	l16237
 37907                           
 37908                           ; BSR set to: 0
 37909                           ;radio_driver_SX1276.c: 493: RADIO_RegisterWrite(0x0C, 0x23);
 37910                           
 37911                           ; BSR set to: 0
 37912  0051CE  0E23               	movlw	35
 37913  0051D0  0100               	movlb	0	; () banked
 37914  0051D2  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37915  0051D4  0E0C               	movlw	12
 37916  0051D6  EC36  F050         	call	_RADIO_RegisterWrite
 37917                           
 37918                           ;radio_driver_SX1276.c: 496: RADIO_RegisterWrite(0x0D, 0x1E);
 37919  0051DA  0E1E               	movlw	30
 37920  0051DC  0100               	movlb	0	; () banked
 37921  0051DE  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37922  0051E0  0E0D               	movlw	13
 37923  0051E2  EC36  F050         	call	_RADIO_RegisterWrite
 37924                           
 37925                           ;radio_driver_SX1276.c: 500: RADIO_RegisterWrite(0x1F, 0xAA);
 37926  0051E6  0EAA               	movlw	170
 37927  0051E8  0100               	movlb	0	; () banked
 37928  0051EA  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37929  0051EC  0E1F               	movlw	31
 37930  0051EE  EC36  F050         	call	_RADIO_RegisterWrite
 37931                           
 37932                           ;radio_driver_SX1276.c: 504: RADIO_RegisterWrite(0x35, 0x8F);
 37933  0051F2  0E8F               	movlw	143
 37934  0051F4  0100               	movlb	0	; () banked
 37935  0051F6  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37936  0051F8  0E35               	movlw	53
 37937  0051FA  EC36  F050         	call	_RADIO_RegisterWrite
 37938                           
 37939                           ;radio_driver_SX1276.c: 507: RADIO_RegisterWrite(0x32, 0xFF);
 37940  0051FE  0EFF               	movlw	255
 37941  005200  0100               	movlb	0	; () banked
 37942  005202  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37943  005204  0E32               	movlw	50
 37944  005206  EC36  F050         	call	_RADIO_RegisterWrite
 37945                           
 37946                           ;radio_driver_SX1276.c: 510: RADIO_RegisterWrite(0x31, 1 << (6));
 37947  00520A  0E40               	movlw	64
 37948  00520C  0100               	movlb	0	; () banked
 37949  00520E  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37950  005210  0E31               	movlw	49
 37951  005212  EC36  F050         	call	_RADIO_RegisterWrite
 37952                           
 37953                           ;radio_driver_SX1276.c: 513: RADIO_WriteMode(MODE_SLEEP, MODULATION_LORA, 1);
 37954  005216  0E01               	movlw	1
 37955  005218  0100               	movlb	0	; () banked
 37956  00521A  6F69               	movwf	RADIO_WriteMode@newModulation& (0+255),b
 37957  00521C  0E01               	movlw	1
 37958  00521E  0100               	movlb	0	; () banked
 37959  005220  6F6A               	movwf	RADIO_WriteMode@blocking& (0+255),b
 37960  005222  0E00               	movlw	0
 37961  005224  EC70  F035         	call	_RADIO_WriteMode
 37962                           
 37963                           ;radio_driver_SX1276.c: 517: RADIO_RegisterWrite(0x23, 0xFF);
 37964  005228  0EFF               	movlw	255
 37965  00522A  0100               	movlb	0	; () banked
 37966  00522C  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 37967  00522E  0E23               	movlw	35
 37968  005230  EC36  F050         	call	_RADIO_RegisterWrite
 37969                           
 37970                           ;radio_driver_SX1276.c: 519: RadioConfiguration.regVersion = RADIO_RegisterRead(0x42);
 37971  005234  0E42               	movlw	66
 37972  005236  EC4D  F04F         	call	_RADIO_RegisterRead
 37973  00523A  0101               	movlb	1	; () banked
 37974  00523C  6FBD               	movwf	(_RadioConfiguration+49)& (0+255),b
 37975                           
 37976                           ; BSR set to: 1
 37977  00523E  0012               	return		;funcret
 37978  005240                     __end_of_RADIO_Init:
 37979                           	opt stack 0
 37980                           tosu	equ	0xFFF
 37981                           tosh	equ	0xFFE
 37982                           tosl	equ	0xFFD
 37983                           pclath	equ	0xFFA
 37984                           tblptru	equ	0xFF8
 37985                           tblptrh	equ	0xFF7
 37986                           tblptrl	equ	0xFF6
 37987                           tablat	equ	0xFF5
 37988                           prodh	equ	0xFF4
 37989                           prodl	equ	0xFF3
 37990                           intcon	equ	0xFF2
 37991                           intcon2	equ	0xFF1
 37992                           intcon3	equ	0xFF0
 37993                           indf0	equ	0xFEF
 37994                           postinc0	equ	0xFEE
 37995                           plusw0	equ	0xFEB
 37996                           fsr0h	equ	0xFEA
 37997                           fsr0l	equ	0xFE9
 37998                           wreg	equ	0xFE8
 37999                           postinc1	equ	0xFE6
 38000                           postdec1	equ	0xFE5
 38001                           plusw1	equ	0xFE3
 38002                           fsr1h	equ	0xFE2
 38003                           fsr1l	equ	0xFE1
 38004                           indf2	equ	0xFDF
 38005                           postinc2	equ	0xFDE
 38006                           postdec2	equ	0xFDD
 38007                           plusw2	equ	0xFDB
 38008                           fsr2h	equ	0xFDA
 38009                           fsr2l	equ	0xFD9
 38010                           status	equ	0xFD8
 38011                           
 38012 ;; *************** function _SwTimerSetCallback *****************
 38013 ;; Defined at:
 38014 ;;		line 180 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 38015 ;; Parameters:    Size  Location     Type
 38016 ;;  timerId         1    wreg     unsigned char 
 38017 ;;  callback        2    4[BANK0 ] PTR FTN(unsigned char ,)
 38018 ;;		 -> DutyCycleCallback(1), UpdateJoinSuccessState(1), UnconfirmedTransmissionCallback(1), AutomaticReplyCallback(1), 
 38019 ;;		 -> AckRetransmissionCallback(1), LORAWAN_LinkCheckCallback(1), LORAWAN_ReceiveWindow1Callback(1), LORAWAN_ReceiveWi
      +ndow2Callback(1), 
 38020 ;;		 -> RADIO_WatchdogTimeout(1), RADIO_RxFSKTimeout(1), 
 38021 ;;  callbackPara    1    6[BANK0 ] unsigned char 
 38022 ;; Auto vars:     Size  Location     Type
 38023 ;;  timerId         1    7[BANK0 ] unsigned char 
 38024 ;; Return value:  Size  Location     Type
 38025 ;;                  1    wreg      void 
 38026 ;; Registers used:
 38027 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38028 ;; Tracked objects:
 38029 ;;		On entry : 0/0
 38030 ;;		On exit  : 0/0
 38031 ;;		Unchanged: 0/0
 38032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38033 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38034 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38036 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38037 ;;Total ram usage:        4 bytes
 38038 ;; Hardware stack levels used:    1
 38039 ;; Hardware stack levels required when called:    7
 38040 ;; This function calls:
 38041 ;;		Nothing
 38042 ;; This function is called by:
 38043 ;;		_RADIO_Init
 38044 ;;		_SetCallbackSoftwareTimers
 38045 ;; This function uses a non-reentrant model
 38046 ;;
 38047                           
 38048                           	psect	text167
 38049  0097DA                     __ptext167:
 38050                           	opt stack 0
 38051  0097DA                     _SwTimerSetCallback:
 38052                           	opt stack 21
 38053                           
 38054                           ; BSR set to: 1
 38055                           ;incstack = 0
 38056                           ;SwTimerSetCallback@timerId stored from wreg
 38057  0097DA  0100               	movlb	0	; () banked
 38058  0097DC  6F67               	movwf	SwTimerSetCallback@timerId& (0+255),b
 38059                           
 38060                           ;sw_timer.c: 182: swTimers[timerId].callback = callback;
 38061  0097DE  0100               	movlb	0	; () banked
 38062  0097E0  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 38063  0097E2  0D08               	mullw	8
 38064  0097E4  0E06               	movlw	6
 38065  0097E6  26F3               	addwf	prodl,f,c
 38066  0097E8  0E00               	movlw	0
 38067  0097EA  22F4               	addwfc	prodh,f,c
 38068  0097EC  0E00               	movlw	low _swTimers
 38069  0097EE  24F3               	addwf	prodl,w,c
 38070  0097F0  6ED9               	movwf	fsr2l,c
 38071  0097F2  0E03               	movlw	high _swTimers
 38072  0097F4  20F4               	addwfc	prodh,w,c
 38073  0097F6  6EDA               	movwf	fsr2h,c
 38074  0097F8  C064  FFDE         	movff	SwTimerSetCallback@callback,postinc2	;volatile
 38075  0097FC  C065  FFDD         	movff	SwTimerSetCallback@callback+1,postdec2	;volatile
 38076                           
 38077                           ;sw_timer.c: 183: swTimers[timerId].callbackParameter = callbackParameter;
 38078  009800  0100               	movlb	0	; () banked
 38079  009802  5167               	movf	SwTimerSetCallback@timerId& (0+255),w,b
 38080  009804  0D08               	mullw	8
 38081  009806  0E05               	movlw	5
 38082  009808  26F3               	addwf	prodl,f,c
 38083  00980A  0E00               	movlw	0
 38084  00980C  22F4               	addwfc	prodh,f,c
 38085  00980E  0E00               	movlw	low _swTimers
 38086  009810  24F3               	addwf	prodl,w,c
 38087  009812  6ED9               	movwf	fsr2l,c
 38088  009814  0E03               	movlw	high _swTimers
 38089  009816  20F4               	addwfc	prodh,w,c
 38090  009818  6EDA               	movwf	fsr2h,c
 38091  00981A  C066  FFDF         	movff	SwTimerSetCallback@callbackParameter,indf2
 38092                           
 38093                           ; BSR set to: 0
 38094  00981E  0012               	return		;funcret
 38095  009820                     __end_of_SwTimerSetCallback:
 38096                           	opt stack 0
 38097                           tosu	equ	0xFFF
 38098                           tosh	equ	0xFFE
 38099                           tosl	equ	0xFFD
 38100                           pclath	equ	0xFFA
 38101                           tblptru	equ	0xFF8
 38102                           tblptrh	equ	0xFF7
 38103                           tblptrl	equ	0xFF6
 38104                           tablat	equ	0xFF5
 38105                           prodh	equ	0xFF4
 38106                           prodl	equ	0xFF3
 38107                           intcon	equ	0xFF2
 38108                           intcon2	equ	0xFF1
 38109                           intcon3	equ	0xFF0
 38110                           indf0	equ	0xFEF
 38111                           postinc0	equ	0xFEE
 38112                           plusw0	equ	0xFEB
 38113                           fsr0h	equ	0xFEA
 38114                           fsr0l	equ	0xFE9
 38115                           wreg	equ	0xFE8
 38116                           postinc1	equ	0xFE6
 38117                           postdec1	equ	0xFE5
 38118                           plusw1	equ	0xFE3
 38119                           fsr1h	equ	0xFE2
 38120                           fsr1l	equ	0xFE1
 38121                           indf2	equ	0xFDF
 38122                           postinc2	equ	0xFDE
 38123                           postdec2	equ	0xFDD
 38124                           plusw2	equ	0xFDB
 38125                           fsr2h	equ	0xFDA
 38126                           fsr2l	equ	0xFD9
 38127                           status	equ	0xFD8
 38128                           
 38129 ;; *************** function _RADIO_WriteMode *****************
 38130 ;; Defined at:
 38131 ;;		line 147 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38132 ;; Parameters:    Size  Location     Type
 38133 ;;  newMode         1    wreg     enum E8492
 38134 ;;  newModulatio    1    9[BANK0 ] enum E7751
 38135 ;;  blocking        1   10[BANK0 ] unsigned char 
 38136 ;; Auto vars:     Size  Location     Type
 38137 ;;  newMode         1   14[BANK0 ] enum E8492
 38138 ;;  opMode          1   15[BANK0 ] unsigned char 
 38139 ;;  currentMode     1   13[BANK0 ] enum E8492
 38140 ;;  dioMapping      1   12[BANK0 ] unsigned char 
 38141 ;;  currentModul    1   11[BANK0 ] enum E7751
 38142 ;; Return value:  Size  Location     Type
 38143 ;;                  1    wreg      void 
 38144 ;; Registers used:
 38145 ;;		wreg, status,2, status,0, cstack
 38146 ;; Tracked objects:
 38147 ;;		On entry : 0/0
 38148 ;;		On exit  : 0/0
 38149 ;;		Unchanged: 0/0
 38150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38151 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38152 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38154 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38155 ;;Total ram usage:        7 bytes
 38156 ;; Hardware stack levels used:    1
 38157 ;; Hardware stack levels required when called:   10
 38158 ;; This function calls:
 38159 ;;		_HALDIO5PinValue
 38160 ;;		_RADIO_RegisterRead
 38161 ;;		_RADIO_RegisterWrite
 38162 ;;		_SystemBlockingWaitMs
 38163 ;; This function is called by:
 38164 ;;		_RADIO_Init
 38165 ;;		_RADIO_WriteConfiguration
 38166 ;;		_RADIO_Transmit
 38167 ;;		_RADIO_ReceiveStart
 38168 ;;		_RADIO_ReceiveStop
 38169 ;;		_RADIO_RxDone
 38170 ;;		_RADIO_FSKPayloadReady
 38171 ;;		_RADIO_RxTimeout
 38172 ;;		_RADIO_TxDone
 38173 ;;		_RADIO_FSKPacketSent
 38174 ;;		_RADIO_ReadRandom
 38175 ;;		_RADIO_RxFSKTimeout
 38176 ;;		_RADIO_WatchdogTimeout
 38177 ;;		_RADIO_StopCW
 38178 ;; This function uses a non-reentrant model
 38179 ;;
 38180                           
 38181                           	psect	text168
 38182  006AE0                     __ptext168:
 38183                           	opt stack 0
 38184  006AE0                     _RADIO_WriteMode:
 38185                           	opt stack 17
 38186                           
 38187                           ; BSR set to: 0
 38188                           ;incstack = 0
 38189                           ;RADIO_WriteMode@newMode stored from wreg
 38190  006AE0  0100               	movlb	0	; () banked
 38191  006AE2  6F6E               	movwf	RADIO_WriteMode@newMode& (0+255),b
 38192                           
 38193                           ;radio_driver_SX1276.c: 149: uint8_t opMode;
 38194                           ;radio_driver_SX1276.c: 150: uint8_t dioMapping;
 38195                           ;radio_driver_SX1276.c: 151: RadioModulation_t currentModulation;
 38196                           ;radio_driver_SX1276.c: 152: RadioMode_t currentMode;
 38197                           ;radio_driver_SX1276.c: 154: if ((MODULATION_FSK == newModulation) &&
 38198                           ;radio_driver_SX1276.c: 155: ((MODE_RXSINGLE == newMode) || (MODE_CAD == newMode)))
 38199  006AE4  0100               	movlb	0	; () banked
 38200  006AE6  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38201  006AE8  0100               	movlb	0	; () banked
 38202  006AEA  A4D8               	btfss	status,2,c
 38203  006AEC  D00A               	goto	l13471
 38204                           
 38205                           ; BSR set to: 0
 38206  006AEE  0E06               	movlw	6
 38207  006AF0  0100               	movlb	0	; () banked
 38208  006AF2  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38209  006AF4  B4D8               	btfsc	status,2,c
 38210  006AF6  0012               	return	
 38211                           
 38212                           ; BSR set to: 0
 38213  006AF8  0E07               	movlw	7
 38214  006AFA  0100               	movlb	0	; () banked
 38215  006AFC  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38216  006AFE  B4D8               	btfsc	status,2,c
 38217  006B00  0012               	return	
 38218  006B02                     l13471:
 38219                           
 38220                           ; BSR set to: 0
 38221                           ;radio_driver_SX1276.c: 159: }
 38222                           ;radio_driver_SX1276.c: 162: newMode &= 0x07;
 38223  006B02  0E07               	movlw	7
 38224  006B04  0100               	movlb	0	; () banked
 38225  006B06  176E               	andwf	RADIO_WriteMode@newMode& (0+255),f,b
 38226                           
 38227                           ;radio_driver_SX1276.c: 163: newModulation &= 0x01;
 38228  006B08  0E01               	movlw	1
 38229  006B0A  0100               	movlb	0	; () banked
 38230  006B0C  1769               	andwf	RADIO_WriteMode@newModulation& (0+255),f,b
 38231                           
 38232                           ; BSR set to: 0
 38233                           ;radio_driver_SX1276.c: 165: opMode = RADIO_RegisterRead(0x01);
 38234  006B0E  0E01               	movlw	1
 38235  006B10  EC4D  F04F         	call	_RADIO_RegisterRead
 38236  006B14  0100               	movlb	0	; () banked
 38237  006B16  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 38238                           
 38239                           ; BSR set to: 0
 38240                           ;radio_driver_SX1276.c: 167: if ((opMode & 0x80) != 0)
 38241  006B18  0100               	movlb	0	; () banked
 38242  006B1A  AF6F               	btfss	RADIO_WriteMode@opMode& (0+255),7,b
 38243  006B1C  D002               	goto	l13479
 38244                           
 38245                           ; BSR set to: 0
 38246                           ;radio_driver_SX1276.c: 168: {
 38247                           ;radio_driver_SX1276.c: 169: currentModulation = MODULATION_LORA;
 38248  006B1E  0E01               	movlw	1
 38249  006B20  D001               	goto	L24
 38250  006B22                     l13479:
 38251                           
 38252                           ; BSR set to: 0
 38253                           ;radio_driver_SX1276.c: 171: else
 38254                           ;radio_driver_SX1276.c: 172: {
 38255                           ;radio_driver_SX1276.c: 173: currentModulation = MODULATION_FSK;
 38256  006B22  0E00               	movlw	0
 38257  006B24                     L24:
 38258  006B24  0100               	movlb	0	; () banked
 38259  006B26  6F6B               	movwf	RADIO_WriteMode@currentModulation& (0+255),b
 38260                           
 38261                           ; BSR set to: 0
 38262                           ;radio_driver_SX1276.c: 174: }
 38263                           ;radio_driver_SX1276.c: 176: currentMode = opMode & 0x07;
 38264                           
 38265                           ; BSR set to: 0
 38266  006B28  0100               	movlb	0	; () banked
 38267  006B2A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38268  006B2C  0B07               	andlw	7
 38269  006B2E  0100               	movlb	0	; () banked
 38270  006B30  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 38271                           
 38272                           ; BSR set to: 0
 38273                           ;radio_driver_SX1276.c: 180: if (newModulation != currentModulation)
 38274  006B32  0100               	movlb	0	; () banked
 38275  006B34  516B               	movf	RADIO_WriteMode@currentModulation& (0+255),w,b
 38276  006B36  0100               	movlb	0	; () banked
 38277  006B38  1969               	xorwf	RADIO_WriteMode@newModulation& (0+255),w,b
 38278  006B3A  B4D8               	btfsc	status,2,c
 38279  006B3C  D024               	goto	l13499
 38280                           
 38281                           ; BSR set to: 0
 38282                           ;radio_driver_SX1276.c: 181: {
 38283                           ;radio_driver_SX1276.c: 183: if (MODE_SLEEP != currentMode)
 38284  006B3E  0100               	movlb	0	; () banked
 38285  006B40  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 38286  006B42  0100               	movlb	0	; () banked
 38287  006B44  B4D8               	btfsc	status,2,c
 38288  006B46  D00B               	goto	l13491
 38289                           
 38290                           ; BSR set to: 0
 38291                           ;radio_driver_SX1276.c: 184: {
 38292                           ;radio_driver_SX1276.c: 186: RADIO_RegisterWrite(0x01, opMode & (~0x07));
 38293  006B48  0100               	movlb	0	; () banked
 38294  006B4A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38295  006B4C  0BF8               	andlw	248
 38296  006B4E  0100               	movlb	0	; () banked
 38297  006B50  6F66               	movwf	RADIO_RegisterWrite@value& (0+255),b
 38298  006B52  0E01               	movlw	1
 38299  006B54  EC36  F050         	call	_RADIO_RegisterWrite
 38300                           
 38301                           ;radio_driver_SX1276.c: 187: currentMode = MODE_SLEEP;
 38302  006B58  0E00               	movlw	0
 38303  006B5A  0100               	movlb	0	; () banked
 38304  006B5C  6F6D               	movwf	RADIO_WriteMode@currentMode& (0+255),b
 38305  006B5E                     l13491:
 38306                           
 38307                           ; BSR set to: 0
 38308                           ;radio_driver_SX1276.c: 188: }
 38309                           ;radio_driver_SX1276.c: 190: if (MODULATION_FSK == newModulation)
 38310  006B5E  0100               	movlb	0	; () banked
 38311  006B60  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38312  006B62  0100               	movlb	0	; () banked
 38313  006B64  A4D8               	btfss	status,2,c
 38314  006B66  D004               	goto	l13495
 38315                           
 38316                           ; BSR set to: 0
 38317                           ;radio_driver_SX1276.c: 191: {
 38318                           ;radio_driver_SX1276.c: 193: opMode = opMode & (~0x87);
 38319  006B68  0100               	movlb	0	; () banked
 38320  006B6A  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38321  006B6C  0B78               	andlw	120
 38322  006B6E  D004               	goto	L25
 38323  006B70                     l13495:
 38324                           
 38325                           ; BSR set to: 0
 38326                           ;radio_driver_SX1276.c: 195: else
 38327                           ;radio_driver_SX1276.c: 196: {
 38328                           ;radio_driver_SX1276.c: 198: opMode = 0x80 | (opMode & (~0x87));
 38329  006B70  0100               	movlb	0	; () banked
 38330  006B72  516F               	movf	RADIO_WriteMode@opMode& (0+255),w,b
 38331  006B74  0B78               	andlw	120
 38332  006B76  0980               	iorlw	128
 38333  006B78                     L25:
 38334  006B78  0100               	movlb	0	; () banked
 38335  006B7A  6F6F               	movwf	RADIO_WriteMode@opMode& (0+255),b
 38336                           
 38337                           ; BSR set to: 0
 38338                           ;radio_driver_SX1276.c: 199: }
 38339                           ;radio_driver_SX1276.c: 200: RADIO_RegisterWrite(0x01, opMode);
 38340                           
 38341                           ; BSR set to: 0
 38342  006B7C  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 38343  006B80  0E01               	movlw	1
 38344  006B82  EC36  F050         	call	_RADIO_RegisterWrite
 38345  006B86                     l13499:
 38346                           
 38347                           ;radio_driver_SX1276.c: 201: }
 38348                           ;radio_driver_SX1276.c: 207: if (newMode != currentMode)
 38349  006B86  0100               	movlb	0	; () banked
 38350  006B88  516D               	movf	RADIO_WriteMode@currentMode& (0+255),w,b
 38351  006B8A  0100               	movlb	0	; () banked
 38352  006B8C  196E               	xorwf	RADIO_WriteMode@newMode& (0+255),w,b
 38353  006B8E  B4D8               	btfsc	status,2,c
 38354  006B90  0012               	return	
 38355                           
 38356                           ; BSR set to: 0
 38357                           ;radio_driver_SX1276.c: 208: {
 38358                           ;radio_driver_SX1276.c: 211: if ((MODE_SLEEP != newMode) && (1 == blocking))
 38359  006B92  0100               	movlb	0	; () banked
 38360  006B94  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38361  006B96  0100               	movlb	0	; () banked
 38362  006B98  B4D8               	btfsc	status,2,c
 38363  006B9A  D01A               	goto	l13515
 38364                           
 38365                           ; BSR set to: 0
 38366  006B9C  0100               	movlb	0	; () banked
 38367  006B9E  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 38368  006BA0  A4D8               	btfss	status,2,c
 38369  006BA2  D016               	goto	l13515
 38370                           
 38371                           ; BSR set to: 0
 38372                           ;radio_driver_SX1276.c: 212: {
 38373                           ;radio_driver_SX1276.c: 213: dioMapping = RADIO_RegisterRead(0x41);
 38374  006BA4  0E41               	movlw	65
 38375  006BA6  EC4D  F04F         	call	_RADIO_RegisterRead
 38376  006BAA  0100               	movlb	0	; () banked
 38377  006BAC  6F6C               	movwf	RADIO_WriteMode@dioMapping& (0+255),b
 38378                           
 38379                           ; BSR set to: 0
 38380                           ;radio_driver_SX1276.c: 214: if (MODULATION_FSK == newModulation)
 38381  006BAE  0100               	movlb	0	; () banked
 38382  006BB0  5169               	movf	RADIO_WriteMode@newModulation& (0+255),w,b
 38383  006BB2  0100               	movlb	0	; () banked
 38384  006BB4  A4D8               	btfss	status,2,c
 38385  006BB6  D004               	goto	l13511
 38386                           
 38387                           ; BSR set to: 0
 38388                           ;radio_driver_SX1276.c: 215: {
 38389                           ;radio_driver_SX1276.c: 217: dioMapping |= 0x30;
 38390  006BB8  0E30               	movlw	48
 38391  006BBA  0100               	movlb	0	; () banked
 38392  006BBC  136C               	iorwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 38393                           
 38394                           ;radio_driver_SX1276.c: 218: }
 38395  006BBE  D003               	goto	l13513
 38396  006BC0                     l13511:
 38397                           
 38398                           ; BSR set to: 0
 38399                           ;radio_driver_SX1276.c: 219: else
 38400                           ;radio_driver_SX1276.c: 220: {
 38401                           ;radio_driver_SX1276.c: 222: dioMapping &= ~0x30;
 38402  006BC0  0ECF               	movlw	207
 38403  006BC2  0100               	movlb	0	; () banked
 38404  006BC4  176C               	andwf	RADIO_WriteMode@dioMapping& (0+255),f,b
 38405  006BC6                     l13513:
 38406                           
 38407                           ; BSR set to: 0
 38408                           ;radio_driver_SX1276.c: 223: }
 38409                           ;radio_driver_SX1276.c: 224: RADIO_RegisterWrite(0x41, dioMapping);
 38410  006BC6  C06C  F066         	movff	RADIO_WriteMode@dioMapping,RADIO_RegisterWrite@value
 38411  006BCA  0E41               	movlw	65
 38412  006BCC  EC36  F050         	call	_RADIO_RegisterWrite
 38413  006BD0                     l13515:
 38414                           
 38415                           ;radio_driver_SX1276.c: 225: }
 38416                           ;radio_driver_SX1276.c: 228: opMode &= ~0x07;
 38417  006BD0  0EF8               	movlw	248
 38418  006BD2  0100               	movlb	0	; () banked
 38419  006BD4  176F               	andwf	RADIO_WriteMode@opMode& (0+255),f,b
 38420                           
 38421                           ; BSR set to: 0
 38422                           ;radio_driver_SX1276.c: 229: opMode |= newMode;
 38423  006BD6  0100               	movlb	0	; () banked
 38424  006BD8  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38425  006BDA  0100               	movlb	0	; () banked
 38426  006BDC  136F               	iorwf	RADIO_WriteMode@opMode& (0+255),f,b
 38427                           
 38428                           ; BSR set to: 0
 38429                           ;radio_driver_SX1276.c: 230: RADIO_RegisterWrite(0x01, opMode);
 38430  006BDE  C06F  F066         	movff	RADIO_WriteMode@opMode,RADIO_RegisterWrite@value
 38431  006BE2  0E01               	movlw	1
 38432  006BE4  EC36  F050         	call	_RADIO_RegisterWrite
 38433                           
 38434                           ;radio_driver_SX1276.c: 233: if (1 == blocking)
 38435  006BE8  0100               	movlb	0	; () banked
 38436  006BEA  056A               	decf	RADIO_WriteMode@blocking& (0+255),w,b
 38437  006BEC  A4D8               	btfss	status,2,c
 38438  006BEE  0012               	return	
 38439                           
 38440                           ; BSR set to: 0
 38441                           ;radio_driver_SX1276.c: 234: {
 38442                           ;radio_driver_SX1276.c: 235: if (MODE_SLEEP != newMode)
 38443  006BF0  0100               	movlb	0	; () banked
 38444  006BF2  516E               	movf	RADIO_WriteMode@newMode& (0+255),w,b
 38445  006BF4  0100               	movlb	0	; () banked
 38446  006BF6  B4D8               	btfsc	status,2,c
 38447  006BF8  D006               	goto	l13527
 38448  006BFA                     l13525:
 38449  006BFA  ECAE  F051         	call	_HALDIO5PinValue	;wreg free
 38450  006BFE  0900               	iorlw	0
 38451  006C00  A4D8               	btfss	status,2,c
 38452  006C02  0012               	return	
 38453  006C04  D7FA               	goto	l13525
 38454  006C06                     l13527:
 38455                           
 38456                           ;radio_driver_SX1276.c: 240: else
 38457                           ;radio_driver_SX1276.c: 241: {
 38458                           ;radio_driver_SX1276.c: 242: SystemBlockingWaitMs(1);
 38459  006C06  0E01               	movlw	1
 38460  006C08  0100               	movlb	0	; () banked
 38461  006C0A  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 38462  006C0C  0E00               	movlw	0
 38463  006C0E  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 38464  006C10  0E00               	movlw	0
 38465  006C12  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 38466  006C14  0E00               	movlw	0
 38467  006C16  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 38468  006C18  ECBC  F04D         	call	_SystemBlockingWaitMs	;wreg free
 38469  006C1C  0012               	return	
 38470  006C1E                     __end_of_RADIO_WriteMode:
 38471                           	opt stack 0
 38472                           tosu	equ	0xFFF
 38473                           tosh	equ	0xFFE
 38474                           tosl	equ	0xFFD
 38475                           pclath	equ	0xFFA
 38476                           tblptru	equ	0xFF8
 38477                           tblptrh	equ	0xFF7
 38478                           tblptrl	equ	0xFF6
 38479                           tablat	equ	0xFF5
 38480                           prodh	equ	0xFF4
 38481                           prodl	equ	0xFF3
 38482                           intcon	equ	0xFF2
 38483                           intcon2	equ	0xFF1
 38484                           intcon3	equ	0xFF0
 38485                           indf0	equ	0xFEF
 38486                           postinc0	equ	0xFEE
 38487                           plusw0	equ	0xFEB
 38488                           fsr0h	equ	0xFEA
 38489                           fsr0l	equ	0xFE9
 38490                           wreg	equ	0xFE8
 38491                           postinc1	equ	0xFE6
 38492                           postdec1	equ	0xFE5
 38493                           plusw1	equ	0xFE3
 38494                           fsr1h	equ	0xFE2
 38495                           fsr1l	equ	0xFE1
 38496                           indf2	equ	0xFDF
 38497                           postinc2	equ	0xFDE
 38498                           postdec2	equ	0xFDD
 38499                           plusw2	equ	0xFDB
 38500                           fsr2h	equ	0xFDA
 38501                           fsr2l	equ	0xFD9
 38502                           status	equ	0xFD8
 38503                           
 38504 ;; *************** function _RADIO_RegisterRead *****************
 38505 ;; Defined at:
 38506 ;;		line 134 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38507 ;; Parameters:    Size  Location     Type
 38508 ;;  reg             1    wreg     unsigned char 
 38509 ;; Auto vars:     Size  Location     Type
 38510 ;;  reg             1    6[BANK0 ] unsigned char 
 38511 ;;  readValue       1    7[BANK0 ] unsigned char 
 38512 ;; Return value:  Size  Location     Type
 38513 ;;                  1    wreg      unsigned char 
 38514 ;; Registers used:
 38515 ;;		wreg, status,2, status,0, cstack
 38516 ;; Tracked objects:
 38517 ;;		On entry : 0/0
 38518 ;;		On exit  : 0/0
 38519 ;;		Unchanged: 0/0
 38520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38524 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38525 ;;Total ram usage:        2 bytes
 38526 ;; Hardware stack levels used:    1
 38527 ;; Hardware stack levels required when called:    9
 38528 ;; This function calls:
 38529 ;;		_HALSPICSAssert
 38530 ;;		_HALSPICSDeassert
 38531 ;;		_HALSPISend
 38532 ;; This function is called by:
 38533 ;;		_RADIO_WriteMode
 38534 ;;		_RADIO_WritePower
 38535 ;;		_RADIO_Init
 38536 ;;		_RADIO_WriteConfiguration
 38537 ;;		_RADIO_Transmit
 38538 ;;		_RADIO_RxDone
 38539 ;;		_RADIO_FSKPayloadReady
 38540 ;;		_RADIO_FSKPacketSent
 38541 ;;		_RADIO_FHSSChangeChannel
 38542 ;;		_RADIO_DIO0
 38543 ;;		_RADIO_DIO1
 38544 ;;		_RADIO_DIO2
 38545 ;;		_RADIO_DIO3
 38546 ;;		_RADIO_DIO4
 38547 ;;		_RADIO_DIO5
 38548 ;;		_RADIO_ReadRandom
 38549 ;;		_RADIO_RxFSKTimeout
 38550 ;; This function uses a non-reentrant model
 38551 ;;
 38552                           
 38553                           	psect	text169
 38554  009E9A                     __ptext169:
 38555                           	opt stack 0
 38556  009E9A                     _RADIO_RegisterRead:
 38557                           	opt stack 17
 38558                           
 38559                           ;incstack = 0
 38560                           ;RADIO_RegisterRead@reg stored from wreg
 38561  009E9A  0100               	movlb	0	; () banked
 38562  009E9C  6F66               	movwf	RADIO_RegisterRead@reg& (0+255),b
 38563                           
 38564                           ;radio_driver_SX1276.c: 136: uint8_t readValue;
 38565                           ;radio_driver_SX1276.c: 137: reg &= 0x7F;
 38566  009E9E  0100               	movlb	0	; () banked
 38567  009EA0  9F66               	bcf	RADIO_RegisterRead@reg& (0+255),7,b
 38568                           
 38569                           ; BSR set to: 0
 38570                           ;radio_driver_SX1276.c: 138: HALSPICSAssert();
 38571  009EA2  EC31  F052         	call	_HALSPICSAssert	;wreg free
 38572                           
 38573                           ;radio_driver_SX1276.c: 139: HALSPISend(reg);
 38574  009EA6  0100               	movlb	0	; () banked
 38575  009EA8  5166               	movf	RADIO_RegisterRead@reg& (0+255),w,b
 38576  009EAA  ECA0  F051         	call	_HALSPISend
 38577                           
 38578                           ;radio_driver_SX1276.c: 140: readValue = HALSPISend(0xFF);
 38579  009EAE  0EFF               	movlw	255
 38580  009EB0  ECA0  F051         	call	_HALSPISend
 38581  009EB4  0100               	movlb	0	; () banked
 38582  009EB6  6F67               	movwf	RADIO_RegisterRead@readValue& (0+255),b
 38583                           
 38584                           ; BSR set to: 0
 38585                           ;radio_driver_SX1276.c: 141: HALSPICSDeassert();
 38586  009EB8  EC2F  F052         	call	_HALSPICSDeassert	;wreg free
 38587                           
 38588                           ;radio_driver_SX1276.c: 142: return readValue;
 38589  009EBC  0100               	movlb	0	; () banked
 38590  009EBE  5167               	movf	RADIO_RegisterRead@readValue& (0+255),w,b
 38591  009EC0  0012               	return	
 38592  009EC2                     __end_of_RADIO_RegisterRead:
 38593                           	opt stack 0
 38594                           tosu	equ	0xFFF
 38595                           tosh	equ	0xFFE
 38596                           tosl	equ	0xFFD
 38597                           pclath	equ	0xFFA
 38598                           tblptru	equ	0xFF8
 38599                           tblptrh	equ	0xFF7
 38600                           tblptrl	equ	0xFF6
 38601                           tablat	equ	0xFF5
 38602                           prodh	equ	0xFF4
 38603                           prodl	equ	0xFF3
 38604                           intcon	equ	0xFF2
 38605                           intcon2	equ	0xFF1
 38606                           intcon3	equ	0xFF0
 38607                           indf0	equ	0xFEF
 38608                           postinc0	equ	0xFEE
 38609                           plusw0	equ	0xFEB
 38610                           fsr0h	equ	0xFEA
 38611                           fsr0l	equ	0xFE9
 38612                           wreg	equ	0xFE8
 38613                           postinc1	equ	0xFE6
 38614                           postdec1	equ	0xFE5
 38615                           plusw1	equ	0xFE3
 38616                           fsr1h	equ	0xFE2
 38617                           fsr1l	equ	0xFE1
 38618                           indf2	equ	0xFDF
 38619                           postinc2	equ	0xFDE
 38620                           postdec2	equ	0xFDD
 38621                           plusw2	equ	0xFDB
 38622                           fsr2h	equ	0xFDA
 38623                           fsr2l	equ	0xFD9
 38624                           status	equ	0xFD8
 38625                           
 38626 ;; *************** function _HALDIO5PinValue *****************
 38627 ;; Defined at:
 38628 ;;		line 95 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 38629 ;; Parameters:    Size  Location     Type
 38630 ;;		None
 38631 ;; Auto vars:     Size  Location     Type
 38632 ;;		None
 38633 ;; Return value:  Size  Location     Type
 38634 ;;                  1    wreg      unsigned char 
 38635 ;; Registers used:
 38636 ;;		wreg
 38637 ;; Tracked objects:
 38638 ;;		On entry : 0/0
 38639 ;;		On exit  : 0/0
 38640 ;;		Unchanged: 0/0
 38641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38642 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38643 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38644 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38645 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38646 ;;Total ram usage:        0 bytes
 38647 ;; Hardware stack levels used:    1
 38648 ;; Hardware stack levels required when called:    7
 38649 ;; This function calls:
 38650 ;;		Nothing
 38651 ;; This function is called by:
 38652 ;;		_RADIO_WriteMode
 38653 ;; This function uses a non-reentrant model
 38654 ;;
 38655                           
 38656                           	psect	text170
 38657  00A35C                     __ptext170:
 38658                           	opt stack 0
 38659  00A35C                     _HALDIO5PinValue:
 38660                           	opt stack 19
 38661                           
 38662                           ;radio_driver_hal.c: 97: return PORTBbits.RB0;
 38663                           
 38664                           ; BSR set to: 0
 38665                           ;incstack = 0
 38666  00A35C  A081               	btfss	3969,0,c	;volatile
 38667  00A35E  D002               	goto	u14430
 38668  00A360  0E01               	movlw	1
 38669  00A362  0012               	return	
 38670  00A364                     u14430:
 38671  00A364  0E00               	movlw	0
 38672  00A366  0012               	return	
 38673  00A368                     __end_of_HALDIO5PinValue:
 38674                           	opt stack 0
 38675                           tosu	equ	0xFFF
 38676                           tosh	equ	0xFFE
 38677                           tosl	equ	0xFFD
 38678                           pclath	equ	0xFFA
 38679                           tblptru	equ	0xFF8
 38680                           tblptrh	equ	0xFF7
 38681                           tblptrl	equ	0xFF6
 38682                           tablat	equ	0xFF5
 38683                           prodh	equ	0xFF4
 38684                           prodl	equ	0xFF3
 38685                           intcon	equ	0xFF2
 38686                           intcon2	equ	0xFF1
 38687                           intcon3	equ	0xFF0
 38688                           indf0	equ	0xFEF
 38689                           postinc0	equ	0xFEE
 38690                           plusw0	equ	0xFEB
 38691                           fsr0h	equ	0xFEA
 38692                           fsr0l	equ	0xFE9
 38693                           wreg	equ	0xFE8
 38694                           postinc1	equ	0xFE6
 38695                           postdec1	equ	0xFE5
 38696                           plusw1	equ	0xFE3
 38697                           fsr1h	equ	0xFE2
 38698                           fsr1l	equ	0xFE1
 38699                           indf2	equ	0xFDF
 38700                           postinc2	equ	0xFDE
 38701                           postdec2	equ	0xFDD
 38702                           plusw2	equ	0xFDB
 38703                           fsr2h	equ	0xFDA
 38704                           fsr2l	equ	0xFD9
 38705                           status	equ	0xFD8
 38706                           
 38707 ;; *************** function _RADIO_WriteFrequency *****************
 38708 ;; Defined at:
 38709 ;;		line 262 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 38710 ;; Parameters:    Size  Location     Type
 38711 ;;  frequency       4   17[BANK0 ] unsigned long 
 38712 ;; Auto vars:     Size  Location     Type
 38713 ;;  num             4   25[BANK0 ] unsigned long 
 38714 ;;  num_mod         4   21[BANK0 ] unsigned long 
 38715 ;; Return value:  Size  Location     Type
 38716 ;;                  1    wreg      void 
 38717 ;; Registers used:
 38718 ;;		wreg, status,2, status,0, cstack
 38719 ;; Tracked objects:
 38720 ;;		On entry : 0/0
 38721 ;;		On exit  : 0/0
 38722 ;;		Unchanged: 0/0
 38723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38724 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38725 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38726 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38727 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38728 ;;Total ram usage:       12 bytes
 38729 ;; Hardware stack levels used:    1
 38730 ;; Hardware stack levels required when called:   10
 38731 ;; This function calls:
 38732 ;;		_RADIO_RegisterWrite
 38733 ;;		___lldiv
 38734 ;;		___llmod
 38735 ;; This function is called by:
 38736 ;;		_RADIO_Init
 38737 ;;		_RADIO_WriteConfiguration
 38738 ;;		_RADIO_FHSSChangeChannel
 38739 ;; This function uses a non-reentrant model
 38740 ;;
 38741                           
 38742                           	psect	text171
 38743  0074C8                     __ptext171:
 38744                           	opt stack 0
 38745  0074C8                     _RADIO_WriteFrequency:
 38746                           	opt stack 16
 38747                           
 38748                           ;radio_driver_SX1276.c: 264: uint32_t num, num_mod;
 38749                           ;radio_driver_SX1276.c: 272: num = frequency / 15625;
 38750                           
 38751                           ;incstack = 0
 38752  0074C8  C071  F064         	movff	RADIO_WriteFrequency@frequency,___lldiv@dividend
 38753  0074CC  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___lldiv@dividend+1
 38754  0074D0  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___lldiv@dividend+2
 38755  0074D4  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___lldiv@dividend+3
 38756  0074D8  0E09               	movlw	9
 38757  0074DA  0100               	movlb	0	; () banked
 38758  0074DC  6F68               	movwf	___lldiv@divisor& (0+255),b
 38759  0074DE  0E3D               	movlw	61
 38760  0074E0  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 38761  0074E2  0E00               	movlw	0
 38762  0074E4  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 38763  0074E6  0E00               	movlw	0
 38764  0074E8  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 38765  0074EA  EC99  F03F         	call	___lldiv	;wreg free
 38766  0074EE  C064  F079         	movff	?___lldiv,RADIO_WriteFrequency@num
 38767  0074F2  C065  F07A         	movff	?___lldiv+1,RADIO_WriteFrequency@num+1
 38768  0074F6  C066  F07B         	movff	?___lldiv+2,RADIO_WriteFrequency@num+2
 38769  0074FA  C067  F07C         	movff	?___lldiv+3,RADIO_WriteFrequency@num+3
 38770                           
 38771                           ;radio_driver_SX1276.c: 273: num_mod = frequency % 15625;
 38772  0074FE  C071  F064         	movff	RADIO_WriteFrequency@frequency,___llmod@dividend
 38773  007502  C072  F065         	movff	RADIO_WriteFrequency@frequency+1,___llmod@dividend+1
 38774  007506  C073  F066         	movff	RADIO_WriteFrequency@frequency+2,___llmod@dividend+2
 38775  00750A  C074  F067         	movff	RADIO_WriteFrequency@frequency+3,___llmod@dividend+3
 38776  00750E  0E09               	movlw	9
 38777  007510  0100               	movlb	0	; () banked
 38778  007512  6F68               	movwf	___llmod@divisor& (0+255),b
 38779  007514  0E3D               	movlw	61
 38780  007516  6F69               	movwf	(___llmod@divisor+1)& (0+255),b
 38781  007518  0E00               	movlw	0
 38782  00751A  6F6A               	movwf	(___llmod@divisor+2)& (0+255),b
 38783  00751C  0E00               	movlw	0
 38784  00751E  6F6B               	movwf	(___llmod@divisor+3)& (0+255),b
 38785  007520  EC44  F043         	call	___llmod	;wreg free
 38786  007524  C064  F075         	movff	?___llmod,RADIO_WriteFrequency@num_mod
 38787  007528  C065  F076         	movff	?___llmod+1,RADIO_WriteFrequency@num_mod+1
 38788  00752C  C066  F077         	movff	?___llmod+2,RADIO_WriteFrequency@num_mod+2
 38789  007530  C067  F078         	movff	?___llmod+3,RADIO_WriteFrequency@num_mod+3
 38790                           
 38791                           ;radio_driver_SX1276.c: 277: num <<= (8);
 38792  007534  C07B  F07C         	movff	RADIO_WriteFrequency@num+2,RADIO_WriteFrequency@num+3
 38793  007538  C07A  F07B         	movff	RADIO_WriteFrequency@num+1,RADIO_WriteFrequency@num+2
 38794  00753C  C079  F07A         	movff	RADIO_WriteFrequency@num,RADIO_WriteFrequency@num+1
 38795  007540  0100               	movlb	0	; () banked
 38796  007542  6B79               	clrf	RADIO_WriteFrequency@num& (0+255),b
 38797                           
 38798                           ; BSR set to: 0
 38799                           ;radio_driver_SX1276.c: 278: num_mod <<= (8);
 38800  007544  C077  F078         	movff	RADIO_WriteFrequency@num_mod+2,RADIO_WriteFrequency@num_mod+3
 38801  007548  C076  F077         	movff	RADIO_WriteFrequency@num_mod+1,RADIO_WriteFrequency@num_mod+2
 38802  00754C  C075  F076         	movff	RADIO_WriteFrequency@num_mod,RADIO_WriteFrequency@num_mod+1
 38803  007550  0100               	movlb	0	; () banked
 38804  007552  6B75               	clrf	RADIO_WriteFrequency@num_mod& (0+255),b
 38805                           
 38806                           ;radio_driver_SX1276.c: 282: num_mod = num_mod / 15625;
 38807  007554  C075  F064         	movff	RADIO_WriteFrequency@num_mod,___lldiv@dividend
 38808  007558  C076  F065         	movff	RADIO_WriteFrequency@num_mod+1,___lldiv@dividend+1
 38809  00755C  C077  F066         	movff	RADIO_WriteFrequency@num_mod+2,___lldiv@dividend+2
 38810  007560  C078  F067         	movff	RADIO_WriteFrequency@num_mod+3,___lldiv@dividend+3
 38811  007564  0E09               	movlw	9
 38812  007566  0100               	movlb	0	; () banked
 38813  007568  6F68               	movwf	___lldiv@divisor& (0+255),b
 38814  00756A  0E3D               	movlw	61
 38815  00756C  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 38816  00756E  0E00               	movlw	0
 38817  007570  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 38818  007572  0E00               	movlw	0
 38819  007574  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 38820  007576  EC99  F03F         	call	___lldiv	;wreg free
 38821  00757A  C064  F075         	movff	?___lldiv,RADIO_WriteFrequency@num_mod
 38822  00757E  C065  F076         	movff	?___lldiv+1,RADIO_WriteFrequency@num_mod+1
 38823  007582  C066  F077         	movff	?___lldiv+2,RADIO_WriteFrequency@num_mod+2
 38824  007586  C067  F078         	movff	?___lldiv+3,RADIO_WriteFrequency@num_mod+3
 38825                           
 38826                           ;radio_driver_SX1276.c: 283: num += num_mod;
 38827  00758A  0100               	movlb	0	; () banked
 38828  00758C  5175               	movf	RADIO_WriteFrequency@num_mod& (0+255),w,b
 38829  00758E  0100               	movlb	0	; () banked
 38830  007590  2779               	addwf	RADIO_WriteFrequency@num& (0+255),f,b
 38831  007592  0100               	movlb	0	; () banked
 38832  007594  5176               	movf	(RADIO_WriteFrequency@num_mod+1)& (0+255),w,b
 38833  007596  0100               	movlb	0	; () banked
 38834  007598  237A               	addwfc	(RADIO_WriteFrequency@num+1)& (0+255),f,b
 38835  00759A  0100               	movlb	0	; () banked
 38836  00759C  5177               	movf	(RADIO_WriteFrequency@num_mod+2)& (0+255),w,b
 38837  00759E  0100               	movlb	0	; () banked
 38838  0075A0  237B               	addwfc	(RADIO_WriteFrequency@num+2)& (0+255),f,b
 38839  0075A2  0100               	movlb	0	; () banked
 38840  0075A4  5178               	movf	(RADIO_WriteFrequency@num_mod+3)& (0+255),w,b
 38841  0075A6  0100               	movlb	0	; () banked
 38842  0075A8  237C               	addwfc	(RADIO_WriteFrequency@num+3)& (0+255),f,b
 38843                           
 38844                           ; BSR set to: 0
 38845                           ;radio_driver_SX1276.c: 287: RADIO_RegisterWrite(0x06, (num >> (16)) & 0xFF);
 38846  0075AA  C07B  F066         	movff	RADIO_WriteFrequency@num+2,RADIO_RegisterWrite@value
 38847  0075AE  0E06               	movlw	6
 38848  0075B0  EC36  F050         	call	_RADIO_RegisterWrite
 38849                           
 38850                           ;radio_driver_SX1276.c: 288: RADIO_RegisterWrite(0x07, (num >> (8)) & 0xFF);
 38851  0075B4  C07A  F066         	movff	RADIO_WriteFrequency@num+1,RADIO_RegisterWrite@value
 38852  0075B8  0E07               	movlw	7
 38853  0075BA  EC36  F050         	call	_RADIO_RegisterWrite
 38854                           
 38855                           ;radio_driver_SX1276.c: 289: RADIO_RegisterWrite(0x08, num & 0xFF);
 38856  0075BE  C079  F066         	movff	RADIO_WriteFrequency@num,RADIO_RegisterWrite@value
 38857  0075C2  0E08               	movlw	8
 38858  0075C4  EC36  F050         	call	_RADIO_RegisterWrite
 38859  0075C8  0012               	return		;funcret
 38860  0075CA                     __end_of_RADIO_WriteFrequency:
 38861                           	opt stack 0
 38862                           tosu	equ	0xFFF
 38863                           tosh	equ	0xFFE
 38864                           tosl	equ	0xFFD
 38865                           pclath	equ	0xFFA
 38866                           tblptru	equ	0xFF8
 38867                           tblptrh	equ	0xFF7
 38868                           tblptrl	equ	0xFF6
 38869                           tablat	equ	0xFF5
 38870                           prodh	equ	0xFF4
 38871                           prodl	equ	0xFF3
 38872                           intcon	equ	0xFF2
 38873                           intcon2	equ	0xFF1
 38874                           intcon3	equ	0xFF0
 38875                           indf0	equ	0xFEF
 38876                           postinc0	equ	0xFEE
 38877                           plusw0	equ	0xFEB
 38878                           fsr0h	equ	0xFEA
 38879                           fsr0l	equ	0xFE9
 38880                           wreg	equ	0xFE8
 38881                           postinc1	equ	0xFE6
 38882                           postdec1	equ	0xFE5
 38883                           plusw1	equ	0xFE3
 38884                           fsr1h	equ	0xFE2
 38885                           fsr1l	equ	0xFE1
 38886                           indf2	equ	0xFDF
 38887                           postinc2	equ	0xFDE
 38888                           postdec2	equ	0xFDD
 38889                           plusw2	equ	0xFDB
 38890                           fsr2h	equ	0xFDA
 38891                           fsr2l	equ	0xFD9
 38892                           status	equ	0xFD8
 38893                           
 38894 ;; *************** function ___llmod *****************
 38895 ;; Defined at:
 38896 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 38897 ;; Parameters:    Size  Location     Type
 38898 ;;  dividend        4    4[BANK0 ] unsigned long 
 38899 ;;  divisor         4    8[BANK0 ] unsigned long 
 38900 ;; Auto vars:     Size  Location     Type
 38901 ;;  counter         1   12[BANK0 ] unsigned char 
 38902 ;; Return value:  Size  Location     Type
 38903 ;;                  4    4[BANK0 ] unsigned long 
 38904 ;; Registers used:
 38905 ;;		wreg, status,2, status,0
 38906 ;; Tracked objects:
 38907 ;;		On entry : 0/0
 38908 ;;		On exit  : 0/0
 38909 ;;		Unchanged: 0/0
 38910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 38911 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38912 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38914 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 38915 ;;Total ram usage:        9 bytes
 38916 ;; Hardware stack levels used:    1
 38917 ;; Hardware stack levels required when called:    7
 38918 ;; This function calls:
 38919 ;;		Nothing
 38920 ;; This function is called by:
 38921 ;;		_RADIO_WriteFrequency
 38922 ;; This function uses a non-reentrant model
 38923 ;;
 38924                           
 38925                           	psect	text172
 38926  008688                     __ptext172:
 38927                           	opt stack 0
 38928  008688                     ___llmod:
 38929                           	opt stack 18
 38930                           
 38931                           ;incstack = 0
 38932  008688  0100               	movlb	0	; () banked
 38933  00868A  5168               	movf	___llmod@divisor& (0+255),w,b
 38934  00868C  0100               	movlb	0	; () banked
 38935  00868E  1169               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 38936  008690  0100               	movlb	0	; () banked
 38937  008692  116A               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 38938  008694  0100               	movlb	0	; () banked
 38939  008696  116B               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 38940  008698  B4D8               	btfsc	status,2,c
 38941  00869A  D03A               	goto	l3059
 38942                           
 38943                           ; BSR set to: 0
 38944  00869C  0E01               	movlw	1
 38945  00869E  0100               	movlb	0	; () banked
 38946  0086A0  6F6C               	movwf	___llmod@counter& (0+255),b
 38947  0086A2  D008               	goto	l13425
 38948  0086A4                     l13423:
 38949                           
 38950                           ; BSR set to: 0
 38951  0086A4  0100               	movlb	0	; () banked
 38952  0086A6  90D8               	bcf	status,0,c
 38953  0086A8  3768               	rlcf	___llmod@divisor& (0+255),f,b
 38954  0086AA  3769               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 38955  0086AC  376A               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 38956  0086AE  376B               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 38957  0086B0  0100               	movlb	0	; () banked
 38958  0086B2  2B6C               	incf	___llmod@counter& (0+255),f,b
 38959  0086B4                     l13425:
 38960                           
 38961                           ; BSR set to: 0
 38962  0086B4  0100               	movlb	0	; () banked
 38963  0086B6  AF6B               	btfss	(___llmod@divisor+3)& (0+255),7,b
 38964  0086B8  D7F5               	goto	l13423
 38965  0086BA                     l13427:
 38966                           
 38967                           ; BSR set to: 0
 38968  0086BA  0100               	movlb	0	; () banked
 38969  0086BC  5168               	movf	___llmod@divisor& (0+255),w,b
 38970  0086BE  0100               	movlb	0	; () banked
 38971  0086C0  5D64               	subwf	___llmod@dividend& (0+255),w,b
 38972  0086C2  0100               	movlb	0	; () banked
 38973  0086C4  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 38974  0086C6  0100               	movlb	0	; () banked
 38975  0086C8  5965               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 38976  0086CA  0100               	movlb	0	; () banked
 38977  0086CC  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 38978  0086CE  0100               	movlb	0	; () banked
 38979  0086D0  5966               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 38980  0086D2  0100               	movlb	0	; () banked
 38981  0086D4  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 38982  0086D6  0100               	movlb	0	; () banked
 38983  0086D8  5967               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 38984  0086DA  A0D8               	btfss	status,0,c
 38985  0086DC  D010               	goto	l13431
 38986                           
 38987                           ; BSR set to: 0
 38988  0086DE  0100               	movlb	0	; () banked
 38989  0086E0  5168               	movf	___llmod@divisor& (0+255),w,b
 38990  0086E2  0100               	movlb	0	; () banked
 38991  0086E4  5F64               	subwf	___llmod@dividend& (0+255),f,b
 38992  0086E6  0100               	movlb	0	; () banked
 38993  0086E8  5169               	movf	(___llmod@divisor+1)& (0+255),w,b
 38994  0086EA  0100               	movlb	0	; () banked
 38995  0086EC  5B65               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 38996  0086EE  0100               	movlb	0	; () banked
 38997  0086F0  516A               	movf	(___llmod@divisor+2)& (0+255),w,b
 38998  0086F2  0100               	movlb	0	; () banked
 38999  0086F4  5B66               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 39000  0086F6  0100               	movlb	0	; () banked
 39001  0086F8  516B               	movf	(___llmod@divisor+3)& (0+255),w,b
 39002  0086FA  0100               	movlb	0	; () banked
 39003  0086FC  5B67               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 39004  0086FE                     l13431:
 39005                           
 39006                           ; BSR set to: 0
 39007  0086FE  0100               	movlb	0	; () banked
 39008  008700  90D8               	bcf	status,0,c
 39009  008702  336B               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 39010  008704  336A               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 39011  008706  3369               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 39012  008708  3368               	rrcf	___llmod@divisor& (0+255),f,b
 39013                           
 39014                           ; BSR set to: 0
 39015  00870A  0100               	movlb	0	; () banked
 39016  00870C  2F6C               	decfsz	___llmod@counter& (0+255),f,b
 39017  00870E  D7D5               	goto	l13427
 39018  008710                     l3059:
 39019                           
 39020                           ; BSR set to: 0
 39021  008710  C064  F064         	movff	___llmod@dividend,?___llmod
 39022  008714  C065  F065         	movff	___llmod@dividend+1,?___llmod+1
 39023  008718  C066  F066         	movff	___llmod@dividend+2,?___llmod+2
 39024  00871C  C067  F067         	movff	___llmod@dividend+3,?___llmod+3
 39025                           
 39026                           ; BSR set to: 0
 39027  008720  0012               	return		;funcret
 39028  008722                     __end_of___llmod:
 39029                           	opt stack 0
 39030                           tosu	equ	0xFFF
 39031                           tosh	equ	0xFFE
 39032                           tosl	equ	0xFFD
 39033                           pclath	equ	0xFFA
 39034                           tblptru	equ	0xFF8
 39035                           tblptrh	equ	0xFF7
 39036                           tblptrl	equ	0xFF6
 39037                           tablat	equ	0xFF5
 39038                           prodh	equ	0xFF4
 39039                           prodl	equ	0xFF3
 39040                           intcon	equ	0xFF2
 39041                           intcon2	equ	0xFF1
 39042                           intcon3	equ	0xFF0
 39043                           indf0	equ	0xFEF
 39044                           postinc0	equ	0xFEE
 39045                           plusw0	equ	0xFEB
 39046                           fsr0h	equ	0xFEA
 39047                           fsr0l	equ	0xFE9
 39048                           wreg	equ	0xFE8
 39049                           postinc1	equ	0xFE6
 39050                           postdec1	equ	0xFE5
 39051                           plusw1	equ	0xFE3
 39052                           fsr1h	equ	0xFE2
 39053                           fsr1l	equ	0xFE1
 39054                           indf2	equ	0xFDF
 39055                           postinc2	equ	0xFDE
 39056                           postdec2	equ	0xFDD
 39057                           plusw2	equ	0xFDB
 39058                           fsr2h	equ	0xFDA
 39059                           fsr2l	equ	0xFD9
 39060                           status	equ	0xFD8
 39061                           
 39062 ;; *************** function _RADIO_RegisterWrite *****************
 39063 ;; Defined at:
 39064 ;;		line 126 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 39065 ;; Parameters:    Size  Location     Type
 39066 ;;  reg             1    wreg     unsigned char 
 39067 ;;  value           1    6[BANK0 ] unsigned char 
 39068 ;; Auto vars:     Size  Location     Type
 39069 ;;  reg             1    7[BANK0 ] unsigned char 
 39070 ;; Return value:  Size  Location     Type
 39071 ;;                  1    wreg      void 
 39072 ;; Registers used:
 39073 ;;		wreg, status,2, status,0, cstack
 39074 ;; Tracked objects:
 39075 ;;		On entry : 0/0
 39076 ;;		On exit  : 0/0
 39077 ;;		Unchanged: 0/0
 39078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39079 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39080 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39081 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39082 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39083 ;;Total ram usage:        2 bytes
 39084 ;; Hardware stack levels used:    1
 39085 ;; Hardware stack levels required when called:    9
 39086 ;; This function calls:
 39087 ;;		_HALSPICSAssert
 39088 ;;		_HALSPICSDeassert
 39089 ;;		_HALSPISend
 39090 ;; This function is called by:
 39091 ;;		_RADIO_WriteMode
 39092 ;;		_RADIO_WriteFrequency
 39093 ;;		_RADIO_WriteFSKFrequencyDeviation
 39094 ;;		_RADIO_WriteFSKBitRate
 39095 ;;		_RADIO_WritePower
 39096 ;;		_RADIO_Init
 39097 ;;		_RADIO_WriteConfiguration
 39098 ;;		_RADIO_Transmit
 39099 ;;		_RADIO_ReceiveStart
 39100 ;;		_RADIO_RxDone
 39101 ;;		_RADIO_RxTimeout
 39102 ;;		_RADIO_TxDone
 39103 ;;		_RADIO_UnhandledInterrupt
 39104 ;;		_RADIO_FHSSChangeChannel
 39105 ;;		_RADIO_ReadRandom
 39106 ;;		_RADIO_TransmitCW
 39107 ;; This function uses a non-reentrant model
 39108 ;;
 39109                           
 39110                           	psect	text173
 39111  00A06C                     __ptext173:
 39112                           	opt stack 0
 39113  00A06C                     _RADIO_RegisterWrite:
 39114                           	opt stack 17
 39115                           
 39116                           ; BSR set to: 0
 39117                           ;incstack = 0
 39118                           ;RADIO_RegisterWrite@reg stored from wreg
 39119  00A06C  0100               	movlb	0	; () banked
 39120  00A06E  6F67               	movwf	RADIO_RegisterWrite@reg& (0+255),b
 39121                           
 39122                           ;radio_driver_SX1276.c: 128: HALSPICSAssert();
 39123  00A070  EC31  F052         	call	_HALSPICSAssert	;wreg free
 39124                           
 39125                           ;radio_driver_SX1276.c: 129: HALSPISend(0x80 | reg);
 39126  00A074  0100               	movlb	0	; () banked
 39127  00A076  5167               	movf	RADIO_RegisterWrite@reg& (0+255),w,b
 39128  00A078  0980               	iorlw	128
 39129  00A07A  ECA0  F051         	call	_HALSPISend
 39130                           
 39131                           ;radio_driver_SX1276.c: 130: HALSPISend(value);
 39132  00A07E  0100               	movlb	0	; () banked
 39133  00A080  5166               	movf	RADIO_RegisterWrite@value& (0+255),w,b
 39134  00A082  ECA0  F051         	call	_HALSPISend
 39135                           
 39136                           ;radio_driver_SX1276.c: 131: HALSPICSDeassert();
 39137  00A086  EC2F  F052         	call	_HALSPICSDeassert	;wreg free
 39138  00A08A  0012               	return		;funcret
 39139  00A08C                     __end_of_RADIO_RegisterWrite:
 39140                           	opt stack 0
 39141                           tosu	equ	0xFFF
 39142                           tosh	equ	0xFFE
 39143                           tosl	equ	0xFFD
 39144                           pclath	equ	0xFFA
 39145                           tblptru	equ	0xFF8
 39146                           tblptrh	equ	0xFF7
 39147                           tblptrl	equ	0xFF6
 39148                           tablat	equ	0xFF5
 39149                           prodh	equ	0xFF4
 39150                           prodl	equ	0xFF3
 39151                           intcon	equ	0xFF2
 39152                           intcon2	equ	0xFF1
 39153                           intcon3	equ	0xFF0
 39154                           indf0	equ	0xFEF
 39155                           postinc0	equ	0xFEE
 39156                           plusw0	equ	0xFEB
 39157                           fsr0h	equ	0xFEA
 39158                           fsr0l	equ	0xFE9
 39159                           wreg	equ	0xFE8
 39160                           postinc1	equ	0xFE6
 39161                           postdec1	equ	0xFE5
 39162                           plusw1	equ	0xFE3
 39163                           fsr1h	equ	0xFE2
 39164                           fsr1l	equ	0xFE1
 39165                           indf2	equ	0xFDF
 39166                           postinc2	equ	0xFDE
 39167                           postdec2	equ	0xFDD
 39168                           plusw2	equ	0xFDB
 39169                           fsr2h	equ	0xFDA
 39170                           fsr2l	equ	0xFD9
 39171                           status	equ	0xFD8
 39172                           
 39173 ;; *************** function _HALSPISend *****************
 39174 ;; Defined at:
 39175 ;;		line 73 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39176 ;; Parameters:    Size  Location     Type
 39177 ;;  data            1    wreg     unsigned char 
 39178 ;; Auto vars:     Size  Location     Type
 39179 ;;  data            1    5[BANK0 ] unsigned char 
 39180 ;; Return value:  Size  Location     Type
 39181 ;;                  1    wreg      unsigned char 
 39182 ;; Registers used:
 39183 ;;		wreg, status,2, cstack
 39184 ;; Tracked objects:
 39185 ;;		On entry : 0/0
 39186 ;;		On exit  : 0/0
 39187 ;;		Unchanged: 0/0
 39188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39190 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39191 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39192 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39193 ;;Total ram usage:        1 bytes
 39194 ;; Hardware stack levels used:    1
 39195 ;; Hardware stack levels required when called:    8
 39196 ;; This function calls:
 39197 ;;		_SPI2_Exchange8bit
 39198 ;; This function is called by:
 39199 ;;		_RADIO_RegisterWrite
 39200 ;;		_RADIO_RegisterRead
 39201 ;;		_RADIO_Transmit
 39202 ;;		_RADIO_RxDone
 39203 ;;		_RADIO_FSKPayloadReady
 39204 ;; This function uses a non-reentrant model
 39205 ;;
 39206                           
 39207                           	psect	text174
 39208  00A340                     __ptext174:
 39209                           	opt stack 0
 39210  00A340                     _HALSPISend:
 39211                           	opt stack 17
 39212                           
 39213                           ;incstack = 0
 39214                           ;HALSPISend@data stored from wreg
 39215  00A340  0100               	movlb	0	; () banked
 39216  00A342  6F65               	movwf	HALSPISend@data& (0+255),b
 39217                           
 39218                           ;radio_driver_hal.c: 75: return SPI2_Exchange8bit(data);
 39219  00A344  0100               	movlb	0	; () banked
 39220  00A346  5165               	movf	HALSPISend@data& (0+255),w,b
 39221  00A348  EC71  F051         	call	_SPI2_Exchange8bit
 39222  00A34C  0012               	return	
 39223  00A34E                     __end_of_HALSPISend:
 39224                           	opt stack 0
 39225                           tosu	equ	0xFFF
 39226                           tosh	equ	0xFFE
 39227                           tosl	equ	0xFFD
 39228                           pclath	equ	0xFFA
 39229                           tblptru	equ	0xFF8
 39230                           tblptrh	equ	0xFF7
 39231                           tblptrl	equ	0xFF6
 39232                           tablat	equ	0xFF5
 39233                           prodh	equ	0xFF4
 39234                           prodl	equ	0xFF3
 39235                           intcon	equ	0xFF2
 39236                           intcon2	equ	0xFF1
 39237                           intcon3	equ	0xFF0
 39238                           indf0	equ	0xFEF
 39239                           postinc0	equ	0xFEE
 39240                           plusw0	equ	0xFEB
 39241                           fsr0h	equ	0xFEA
 39242                           fsr0l	equ	0xFE9
 39243                           wreg	equ	0xFE8
 39244                           postinc1	equ	0xFE6
 39245                           postdec1	equ	0xFE5
 39246                           plusw1	equ	0xFE3
 39247                           fsr1h	equ	0xFE2
 39248                           fsr1l	equ	0xFE1
 39249                           indf2	equ	0xFDF
 39250                           postinc2	equ	0xFDE
 39251                           postdec2	equ	0xFDD
 39252                           plusw2	equ	0xFDB
 39253                           fsr2h	equ	0xFDA
 39254                           fsr2l	equ	0xFD9
 39255                           status	equ	0xFD8
 39256                           
 39257 ;; *************** function _SPI2_Exchange8bit *****************
 39258 ;; Defined at:
 39259 ;;		line 77 in file "mcc_generated_files/spi2.c"
 39260 ;; Parameters:    Size  Location     Type
 39261 ;;  data            1    wreg     unsigned char 
 39262 ;; Auto vars:     Size  Location     Type
 39263 ;;  data            1    4[BANK0 ] unsigned char 
 39264 ;; Return value:  Size  Location     Type
 39265 ;;                  1    wreg      unsigned char 
 39266 ;; Registers used:
 39267 ;;		wreg, status,2
 39268 ;; Tracked objects:
 39269 ;;		On entry : 0/0
 39270 ;;		On exit  : 0/0
 39271 ;;		Unchanged: 0/0
 39272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39274 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39276 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39277 ;;Total ram usage:        1 bytes
 39278 ;; Hardware stack levels used:    1
 39279 ;; Hardware stack levels required when called:    7
 39280 ;; This function calls:
 39281 ;;		Nothing
 39282 ;; This function is called by:
 39283 ;;		_HALSPISend
 39284 ;;		_SPI2_Exchange8bitBuffer
 39285 ;; This function uses a non-reentrant model
 39286 ;;
 39287                           
 39288                           	psect	text175
 39289  00A2E2                     __ptext175:
 39290                           	opt stack 0
 39291  00A2E2                     _SPI2_Exchange8bit:
 39292                           	opt stack 17
 39293                           
 39294                           ;incstack = 0
 39295                           ;SPI2_Exchange8bit@data stored from wreg
 39296  00A2E2  0100               	movlb	0	; () banked
 39297  00A2E4  6F64               	movwf	SPI2_Exchange8bit@data& (0+255),b
 39298                           
 39299                           ;spi2.c: 80: SSP2CON1bits.WCOL = 0;
 39300  00A2E6  9E6C               	bcf	3948,7,c	;volatile
 39301                           
 39302                           ;spi2.c: 82: SSP2BUF = data;
 39303  00A2E8  C064  FF6F         	movff	SPI2_Exchange8bit@data,3951	;volatile
 39304  00A2EC                     l192:
 39305  00A2EC  A06D               	btfss	3949,0,c	;volatile
 39306  00A2EE  D7FE               	goto	l192
 39307                           
 39308                           ;spi2.c: 86: }
 39309                           ;spi2.c: 88: return (SSP2BUF);
 39310  00A2F0  506F               	movf	3951,w,c	;volatile
 39311  00A2F2  0012               	return		;funcret
 39312  00A2F4                     __end_of_SPI2_Exchange8bit:
 39313                           	opt stack 0
 39314                           tosu	equ	0xFFF
 39315                           tosh	equ	0xFFE
 39316                           tosl	equ	0xFFD
 39317                           pclath	equ	0xFFA
 39318                           tblptru	equ	0xFF8
 39319                           tblptrh	equ	0xFF7
 39320                           tblptrl	equ	0xFF6
 39321                           tablat	equ	0xFF5
 39322                           prodh	equ	0xFF4
 39323                           prodl	equ	0xFF3
 39324                           intcon	equ	0xFF2
 39325                           intcon2	equ	0xFF1
 39326                           intcon3	equ	0xFF0
 39327                           indf0	equ	0xFEF
 39328                           postinc0	equ	0xFEE
 39329                           plusw0	equ	0xFEB
 39330                           fsr0h	equ	0xFEA
 39331                           fsr0l	equ	0xFE9
 39332                           wreg	equ	0xFE8
 39333                           postinc1	equ	0xFE6
 39334                           postdec1	equ	0xFE5
 39335                           plusw1	equ	0xFE3
 39336                           fsr1h	equ	0xFE2
 39337                           fsr1l	equ	0xFE1
 39338                           indf2	equ	0xFDF
 39339                           postinc2	equ	0xFDE
 39340                           postdec2	equ	0xFDD
 39341                           plusw2	equ	0xFDB
 39342                           fsr2h	equ	0xFDA
 39343                           fsr2l	equ	0xFD9
 39344                           status	equ	0xFD8
 39345                           
 39346 ;; *************** function _HALSPICSDeassert *****************
 39347 ;; Defined at:
 39348 ;;		line 68 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39349 ;; Parameters:    Size  Location     Type
 39350 ;;		None
 39351 ;; Auto vars:     Size  Location     Type
 39352 ;;		None
 39353 ;; Return value:  Size  Location     Type
 39354 ;;                  1    wreg      void 
 39355 ;; Registers used:
 39356 ;;		None
 39357 ;; Tracked objects:
 39358 ;;		On entry : 0/0
 39359 ;;		On exit  : 0/0
 39360 ;;		Unchanged: 0/0
 39361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39365 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39366 ;;Total ram usage:        0 bytes
 39367 ;; Hardware stack levels used:    1
 39368 ;; Hardware stack levels required when called:    7
 39369 ;; This function calls:
 39370 ;;		Nothing
 39371 ;; This function is called by:
 39372 ;;		_RADIO_RegisterWrite
 39373 ;;		_RADIO_RegisterRead
 39374 ;;		_RADIO_Transmit
 39375 ;;		_RADIO_RxDone
 39376 ;;		_RADIO_FSKPayloadReady
 39377 ;; This function uses a non-reentrant model
 39378 ;;
 39379                           
 39380                           	psect	text176
 39381  00A45E                     __ptext176:
 39382                           	opt stack 0
 39383  00A45E                     _HALSPICSDeassert:
 39384                           	opt stack 18
 39385                           
 39386                           ;incstack = 0
 39387                           ;radio_driver_hal.c: 70: do { LATD3 = 1; } while(0);
 39388  00A45E  868C               	bsf	3980,3,c	;volatile
 39389  00A460  0012               	return	
 39390  00A462                     __end_of_HALSPICSDeassert:
 39391                           	opt stack 0
 39392                           tosu	equ	0xFFF
 39393                           tosh	equ	0xFFE
 39394                           tosl	equ	0xFFD
 39395                           pclath	equ	0xFFA
 39396                           tblptru	equ	0xFF8
 39397                           tblptrh	equ	0xFF7
 39398                           tblptrl	equ	0xFF6
 39399                           tablat	equ	0xFF5
 39400                           prodh	equ	0xFF4
 39401                           prodl	equ	0xFF3
 39402                           intcon	equ	0xFF2
 39403                           intcon2	equ	0xFF1
 39404                           intcon3	equ	0xFF0
 39405                           indf0	equ	0xFEF
 39406                           postinc0	equ	0xFEE
 39407                           plusw0	equ	0xFEB
 39408                           fsr0h	equ	0xFEA
 39409                           fsr0l	equ	0xFE9
 39410                           wreg	equ	0xFE8
 39411                           postinc1	equ	0xFE6
 39412                           postdec1	equ	0xFE5
 39413                           plusw1	equ	0xFE3
 39414                           fsr1h	equ	0xFE2
 39415                           fsr1l	equ	0xFE1
 39416                           indf2	equ	0xFDF
 39417                           postinc2	equ	0xFDE
 39418                           postdec2	equ	0xFDD
 39419                           plusw2	equ	0xFDB
 39420                           fsr2h	equ	0xFDA
 39421                           fsr2l	equ	0xFD9
 39422                           status	equ	0xFD8
 39423                           
 39424 ;; *************** function _HALSPICSAssert *****************
 39425 ;; Defined at:
 39426 ;;		line 63 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39427 ;; Parameters:    Size  Location     Type
 39428 ;;		None
 39429 ;; Auto vars:     Size  Location     Type
 39430 ;;		None
 39431 ;; Return value:  Size  Location     Type
 39432 ;;                  1    wreg      void 
 39433 ;; Registers used:
 39434 ;;		None
 39435 ;; Tracked objects:
 39436 ;;		On entry : 0/0
 39437 ;;		On exit  : 0/0
 39438 ;;		Unchanged: 0/0
 39439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39441 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39443 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39444 ;;Total ram usage:        0 bytes
 39445 ;; Hardware stack levels used:    1
 39446 ;; Hardware stack levels required when called:    7
 39447 ;; This function calls:
 39448 ;;		Nothing
 39449 ;; This function is called by:
 39450 ;;		_RADIO_RegisterWrite
 39451 ;;		_RADIO_RegisterRead
 39452 ;;		_RADIO_Transmit
 39453 ;;		_RADIO_RxDone
 39454 ;;		_RADIO_FSKPayloadReady
 39455 ;; This function uses a non-reentrant model
 39456 ;;
 39457                           
 39458                           	psect	text177
 39459  00A462                     __ptext177:
 39460                           	opt stack 0
 39461  00A462                     _HALSPICSAssert:
 39462                           	opt stack 18
 39463                           
 39464                           ;incstack = 0
 39465                           ;radio_driver_hal.c: 65: do { LATD3 = 0; } while(0);
 39466  00A462  968C               	bcf	3980,3,c	;volatile
 39467  00A464  0012               	return	
 39468  00A466                     __end_of_HALSPICSAssert:
 39469                           	opt stack 0
 39470                           tosu	equ	0xFFF
 39471                           tosh	equ	0xFFE
 39472                           tosl	equ	0xFFD
 39473                           pclath	equ	0xFFA
 39474                           tblptru	equ	0xFF8
 39475                           tblptrh	equ	0xFF7
 39476                           tblptrl	equ	0xFF6
 39477                           tablat	equ	0xFF5
 39478                           prodh	equ	0xFF4
 39479                           prodl	equ	0xFF3
 39480                           intcon	equ	0xFF2
 39481                           intcon2	equ	0xFF1
 39482                           intcon3	equ	0xFF0
 39483                           indf0	equ	0xFEF
 39484                           postinc0	equ	0xFEE
 39485                           plusw0	equ	0xFEB
 39486                           fsr0h	equ	0xFEA
 39487                           fsr0l	equ	0xFE9
 39488                           wreg	equ	0xFE8
 39489                           postinc1	equ	0xFE6
 39490                           postdec1	equ	0xFE5
 39491                           plusw1	equ	0xFE3
 39492                           fsr1h	equ	0xFE2
 39493                           fsr1l	equ	0xFE1
 39494                           indf2	equ	0xFDF
 39495                           postinc2	equ	0xFDE
 39496                           postdec2	equ	0xFDD
 39497                           plusw2	equ	0xFDB
 39498                           fsr2h	equ	0xFDA
 39499                           fsr2l	equ	0xFD9
 39500                           status	equ	0xFD8
 39501                           
 39502 ;; *************** function _RADIO_Reset *****************
 39503 ;; Defined at:
 39504 ;;		line 249 in file "mcc_generated_files/LoRaWAN/radio_driver_SX1276.c"
 39505 ;; Parameters:    Size  Location     Type
 39506 ;;		None
 39507 ;; Auto vars:     Size  Location     Type
 39508 ;;		None
 39509 ;; Return value:  Size  Location     Type
 39510 ;;                  1    wreg      void 
 39511 ;; Registers used:
 39512 ;;		wreg, status,2, status,0, cstack
 39513 ;; Tracked objects:
 39514 ;;		On entry : 0/0
 39515 ;;		On exit  : 0/0
 39516 ;;		Unchanged: 0/0
 39517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39518 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39519 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39520 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39521 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39522 ;;Total ram usage:        0 bytes
 39523 ;; Hardware stack levels used:    1
 39524 ;; Hardware stack levels required when called:    8
 39525 ;; This function calls:
 39526 ;;		_HALResetPinMakeInput
 39527 ;;		_HALResetPinMakeOutput
 39528 ;;		_HALResetPinOutputValue
 39529 ;;		_SystemBlockingWaitMs
 39530 ;; This function is called by:
 39531 ;;		_RADIO_Init
 39532 ;; This function uses a non-reentrant model
 39533 ;;
 39534                           
 39535                           	psect	text178
 39536  009820                     __ptext178:
 39537                           	opt stack 0
 39538  009820                     _RADIO_Reset:
 39539                           	opt stack 20
 39540                           
 39541                           ;radio_driver_SX1276.c: 251: HALResetPinMakeOutput();
 39542                           
 39543                           ;incstack = 0
 39544  009820  EC33  F052         	call	_HALResetPinMakeOutput	;wreg free
 39545                           
 39546                           ;radio_driver_SX1276.c: 252: HALResetPinOutputValue(0);
 39547  009824  0E00               	movlw	0
 39548  009826  ECB0  F050         	call	_HALResetPinOutputValue
 39549                           
 39550                           ;radio_driver_SX1276.c: 253: SystemBlockingWaitMs(1);
 39551  00982A  0E01               	movlw	1
 39552  00982C  0100               	movlb	0	; () banked
 39553  00982E  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 39554  009830  0E00               	movlw	0
 39555  009832  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 39556  009834  0E00               	movlw	0
 39557  009836  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 39558  009838  0E00               	movlw	0
 39559  00983A  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 39560  00983C  ECBC  F04D         	call	_SystemBlockingWaitMs	;wreg free
 39561                           
 39562                           ;radio_driver_SX1276.c: 254: HALResetPinMakeInput();
 39563  009840  EC35  F052         	call	_HALResetPinMakeInput	;wreg free
 39564                           
 39565                           ;radio_driver_SX1276.c: 255: SystemBlockingWaitMs(10);
 39566  009844  0E0A               	movlw	10
 39567  009846  0100               	movlb	0	; () banked
 39568  009848  6F64               	movwf	SystemBlockingWaitMs@ms& (0+255),b
 39569  00984A  0E00               	movlw	0
 39570  00984C  6F65               	movwf	(SystemBlockingWaitMs@ms+1)& (0+255),b
 39571  00984E  0E00               	movlw	0
 39572  009850  6F66               	movwf	(SystemBlockingWaitMs@ms+2)& (0+255),b
 39573  009852  0E00               	movlw	0
 39574  009854  6F67               	movwf	(SystemBlockingWaitMs@ms+3)& (0+255),b
 39575  009856  ECBC  F04D         	call	_SystemBlockingWaitMs	;wreg free
 39576                           
 39577                           ;radio_driver_SX1276.c: 257: HALResetPinOutputValue(1);
 39578  00985A  0E01               	movlw	1
 39579  00985C  ECB0  F050         	call	_HALResetPinOutputValue
 39580                           
 39581                           ;radio_driver_SX1276.c: 258: HALResetPinMakeOutput();
 39582  009860  EC33  F052         	call	_HALResetPinMakeOutput	;wreg free
 39583  009864  0012               	return		;funcret
 39584  009866                     __end_of_RADIO_Reset:
 39585                           	opt stack 0
 39586                           tosu	equ	0xFFF
 39587                           tosh	equ	0xFFE
 39588                           tosl	equ	0xFFD
 39589                           pclath	equ	0xFFA
 39590                           tblptru	equ	0xFF8
 39591                           tblptrh	equ	0xFF7
 39592                           tblptrl	equ	0xFF6
 39593                           tablat	equ	0xFF5
 39594                           prodh	equ	0xFF4
 39595                           prodl	equ	0xFF3
 39596                           intcon	equ	0xFF2
 39597                           intcon2	equ	0xFF1
 39598                           intcon3	equ	0xFF0
 39599                           indf0	equ	0xFEF
 39600                           postinc0	equ	0xFEE
 39601                           plusw0	equ	0xFEB
 39602                           fsr0h	equ	0xFEA
 39603                           fsr0l	equ	0xFE9
 39604                           wreg	equ	0xFE8
 39605                           postinc1	equ	0xFE6
 39606                           postdec1	equ	0xFE5
 39607                           plusw1	equ	0xFE3
 39608                           fsr1h	equ	0xFE2
 39609                           fsr1l	equ	0xFE1
 39610                           indf2	equ	0xFDF
 39611                           postinc2	equ	0xFDE
 39612                           postdec2	equ	0xFDD
 39613                           plusw2	equ	0xFDB
 39614                           fsr2h	equ	0xFDA
 39615                           fsr2l	equ	0xFD9
 39616                           status	equ	0xFD8
 39617                           
 39618 ;; *************** function _SystemBlockingWaitMs *****************
 39619 ;; Defined at:
 39620 ;;		line 145 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 39621 ;; Parameters:    Size  Location     Type
 39622 ;;  ms              4    4[BANK0 ] unsigned long 
 39623 ;; Auto vars:     Size  Location     Type
 39624 ;;		None
 39625 ;; Return value:  Size  Location     Type
 39626 ;;                  1    wreg      void 
 39627 ;; Registers used:
 39628 ;;		wreg, status,2, status,0
 39629 ;; Tracked objects:
 39630 ;;		On entry : 0/0
 39631 ;;		On exit  : 0/0
 39632 ;;		Unchanged: 0/0
 39633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39634 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39635 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39636 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39637 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39638 ;;Total ram usage:        5 bytes
 39639 ;; Hardware stack levels used:    1
 39640 ;; Hardware stack levels required when called:    7
 39641 ;; This function calls:
 39642 ;;		Nothing
 39643 ;; This function is called by:
 39644 ;;		_RADIO_WriteMode
 39645 ;;		_RADIO_Reset
 39646 ;;		_RADIO_ReadRandom
 39647 ;;		_RADIO_StopCW
 39648 ;; This function uses a non-reentrant model
 39649 ;;
 39650                           
 39651                           	psect	text179
 39652  009B78                     __ptext179:
 39653                           	opt stack 0
 39654  009B78                     _SystemBlockingWaitMs:
 39655                           	opt stack 19
 39656                           
 39657                           ;sw_timer.c: 147: while (ms > 0)
 39658                           
 39659                           ;incstack = 0
 39660  009B78  D00F               	goto	l13253
 39661  009B7A                     l13249:
 39662                           
 39663                           ;sw_timer.c: 148: {
 39664                           ;sw_timer.c: 149: _delay((unsigned long)((1)*(16000000/4000.0)));
 39665  009B7A  0E06               	movlw	6
 39666  009B7C  0100               	movlb	0	; () banked
 39667  009B7E  6F68               	movwf	??_SystemBlockingWaitMs& (0+255),b
 39668  009B80  0E30               	movlw	48
 39669  009B82                     u22607:
 39670  009B82  2EE8               	decfsz	wreg,f,c
 39671  009B84  D7FE               	goto	u22607
 39672  009B86  2F68               	decfsz	??_SystemBlockingWaitMs& (0+255),f,b
 39673  009B88  D7FC               	goto	u22607
 39674  009B8A  D000               	nop2	
 39675                           
 39676                           ;sw_timer.c: 150: ms--;
 39677  009B8C  0100               	movlb	0	; () banked
 39678  009B8E  0764               	decf	SystemBlockingWaitMs@ms& (0+255),f,b
 39679  009B90  0E00               	movlw	0
 39680  009B92  5B65               	subwfb	(SystemBlockingWaitMs@ms+1)& (0+255),f,b
 39681  009B94  5B66               	subwfb	(SystemBlockingWaitMs@ms+2)& (0+255),f,b
 39682  009B96  5B67               	subwfb	(SystemBlockingWaitMs@ms+3)& (0+255),f,b
 39683  009B98                     l13253:
 39684  009B98  0100               	movlb	0	; () banked
 39685  009B9A  5164               	movf	SystemBlockingWaitMs@ms& (0+255),w,b
 39686  009B9C  0100               	movlb	0	; () banked
 39687  009B9E  1165               	iorwf	(SystemBlockingWaitMs@ms+1)& (0+255),w,b
 39688  009BA0  0100               	movlb	0	; () banked
 39689  009BA2  1166               	iorwf	(SystemBlockingWaitMs@ms+2)& (0+255),w,b
 39690  009BA4  0100               	movlb	0	; () banked
 39691  009BA6  1167               	iorwf	(SystemBlockingWaitMs@ms+3)& (0+255),w,b
 39692  009BA8  B4D8               	btfsc	status,2,c
 39693  009BAA  0012               	return	
 39694  009BAC  D7E6               	goto	l13249
 39695  009BAE                     __end_of_SystemBlockingWaitMs:
 39696                           	opt stack 0
 39697                           tosu	equ	0xFFF
 39698                           tosh	equ	0xFFE
 39699                           tosl	equ	0xFFD
 39700                           pclath	equ	0xFFA
 39701                           tblptru	equ	0xFF8
 39702                           tblptrh	equ	0xFF7
 39703                           tblptrl	equ	0xFF6
 39704                           tablat	equ	0xFF5
 39705                           prodh	equ	0xFF4
 39706                           prodl	equ	0xFF3
 39707                           intcon	equ	0xFF2
 39708                           intcon2	equ	0xFF1
 39709                           intcon3	equ	0xFF0
 39710                           indf0	equ	0xFEF
 39711                           postinc0	equ	0xFEE
 39712                           plusw0	equ	0xFEB
 39713                           fsr0h	equ	0xFEA
 39714                           fsr0l	equ	0xFE9
 39715                           wreg	equ	0xFE8
 39716                           postinc1	equ	0xFE6
 39717                           postdec1	equ	0xFE5
 39718                           plusw1	equ	0xFE3
 39719                           fsr1h	equ	0xFE2
 39720                           fsr1l	equ	0xFE1
 39721                           indf2	equ	0xFDF
 39722                           postinc2	equ	0xFDE
 39723                           postdec2	equ	0xFDD
 39724                           plusw2	equ	0xFDB
 39725                           fsr2h	equ	0xFDA
 39726                           fsr2l	equ	0xFD9
 39727                           status	equ	0xFD8
 39728                           
 39729 ;; *************** function _HALResetPinOutputValue *****************
 39730 ;; Defined at:
 39731 ;;		line 55 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39732 ;; Parameters:    Size  Location     Type
 39733 ;;  value           1    wreg     unsigned char 
 39734 ;; Auto vars:     Size  Location     Type
 39735 ;;  value           1    4[BANK0 ] unsigned char 
 39736 ;; Return value:  Size  Location     Type
 39737 ;;                  1    wreg      void 
 39738 ;; Registers used:
 39739 ;;		wreg, status,2, status,0
 39740 ;; Tracked objects:
 39741 ;;		On entry : 0/0
 39742 ;;		On exit  : 0/0
 39743 ;;		Unchanged: 0/0
 39744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39746 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39748 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39749 ;;Total ram usage:        1 bytes
 39750 ;; Hardware stack levels used:    1
 39751 ;; Hardware stack levels required when called:    7
 39752 ;; This function calls:
 39753 ;;		Nothing
 39754 ;; This function is called by:
 39755 ;;		_RADIO_Reset
 39756 ;; This function uses a non-reentrant model
 39757 ;;
 39758                           
 39759                           	psect	text180
 39760  00A160                     __ptext180:
 39761                           	opt stack 0
 39762  00A160                     _HALResetPinOutputValue:
 39763                           	opt stack 20
 39764                           
 39765                           ; BSR set to: 0
 39766                           ;incstack = 0
 39767                           ;HALResetPinOutputValue@value stored from wreg
 39768  00A160  0100               	movlb	0	; () banked
 39769  00A162  6F64               	movwf	HALResetPinOutputValue@value& (0+255),b
 39770                           
 39771                           ;radio_driver_hal.c: 57: if (value == 0)
 39772  00A164  0100               	movlb	0	; () banked
 39773  00A166  5164               	movf	HALResetPinOutputValue@value& (0+255),w,b
 39774  00A168  0100               	movlb	0	; () banked
 39775  00A16A  A4D8               	btfss	status,2,c
 39776  00A16C  D002               	goto	l15205
 39777                           
 39778                           ; BSR set to: 0
 39779                           
 39780                           ;radio_driver_hal.c: 58: do { LATC2 = 0; } while(0);
 39781  00A16E  948B               	bcf	3979,2,c	;volatile
 39782                           
 39783                           ; BSR set to: 0
 39784  00A170  0012               	return	
 39785  00A172                     l15205:
 39786                           
 39787                           ; BSR set to: 0
 39788                           ;radio_driver_hal.c: 59: else if (value == 1)
 39789  00A172  0100               	movlb	0	; () banked
 39790  00A174  0564               	decf	HALResetPinOutputValue@value& (0+255),w,b
 39791  00A176  A4D8               	btfss	status,2,c
 39792  00A178  0012               	return	
 39793                           
 39794                           ; BSR set to: 0
 39795                           
 39796                           ;radio_driver_hal.c: 60: do { LATC2 = 1; } while(0);
 39797  00A17A  848B               	bsf	3979,2,c	;volatile
 39798                           
 39799                           ; BSR set to: 0
 39800                           
 39801                           ; BSR set to: 0
 39802  00A17C  0012               	return	
 39803  00A17E                     __end_of_HALResetPinOutputValue:
 39804                           	opt stack 0
 39805                           tosu	equ	0xFFF
 39806                           tosh	equ	0xFFE
 39807                           tosl	equ	0xFFD
 39808                           pclath	equ	0xFFA
 39809                           tblptru	equ	0xFF8
 39810                           tblptrh	equ	0xFF7
 39811                           tblptrl	equ	0xFF6
 39812                           tablat	equ	0xFF5
 39813                           prodh	equ	0xFF4
 39814                           prodl	equ	0xFF3
 39815                           intcon	equ	0xFF2
 39816                           intcon2	equ	0xFF1
 39817                           intcon3	equ	0xFF0
 39818                           indf0	equ	0xFEF
 39819                           postinc0	equ	0xFEE
 39820                           plusw0	equ	0xFEB
 39821                           fsr0h	equ	0xFEA
 39822                           fsr0l	equ	0xFE9
 39823                           wreg	equ	0xFE8
 39824                           postinc1	equ	0xFE6
 39825                           postdec1	equ	0xFE5
 39826                           plusw1	equ	0xFE3
 39827                           fsr1h	equ	0xFE2
 39828                           fsr1l	equ	0xFE1
 39829                           indf2	equ	0xFDF
 39830                           postinc2	equ	0xFDE
 39831                           postdec2	equ	0xFDD
 39832                           plusw2	equ	0xFDB
 39833                           fsr2h	equ	0xFDA
 39834                           fsr2l	equ	0xFD9
 39835                           status	equ	0xFD8
 39836                           
 39837 ;; *************** function _HALResetPinMakeOutput *****************
 39838 ;; Defined at:
 39839 ;;		line 45 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39840 ;; Parameters:    Size  Location     Type
 39841 ;;		None
 39842 ;; Auto vars:     Size  Location     Type
 39843 ;;		None
 39844 ;; Return value:  Size  Location     Type
 39845 ;;                  1    wreg      void 
 39846 ;; Registers used:
 39847 ;;		None
 39848 ;; Tracked objects:
 39849 ;;		On entry : 0/0
 39850 ;;		On exit  : 0/0
 39851 ;;		Unchanged: 0/0
 39852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39857 ;;Total ram usage:        0 bytes
 39858 ;; Hardware stack levels used:    1
 39859 ;; Hardware stack levels required when called:    7
 39860 ;; This function calls:
 39861 ;;		Nothing
 39862 ;; This function is called by:
 39863 ;;		_RADIO_Reset
 39864 ;; This function uses a non-reentrant model
 39865 ;;
 39866                           
 39867                           	psect	text181
 39868  00A466                     __ptext181:
 39869                           	opt stack 0
 39870  00A466                     _HALResetPinMakeOutput:
 39871                           	opt stack 20
 39872                           
 39873                           ; BSR set to: 0
 39874                           ;incstack = 0
 39875                           ;radio_driver_hal.c: 47: do { TRISC2 = 0; } while(0);
 39876  00A466  9494               	bcf	3988,2,c	;volatile
 39877  00A468  0012               	return	
 39878  00A46A                     __end_of_HALResetPinMakeOutput:
 39879                           	opt stack 0
 39880                           tosu	equ	0xFFF
 39881                           tosh	equ	0xFFE
 39882                           tosl	equ	0xFFD
 39883                           pclath	equ	0xFFA
 39884                           tblptru	equ	0xFF8
 39885                           tblptrh	equ	0xFF7
 39886                           tblptrl	equ	0xFF6
 39887                           tablat	equ	0xFF5
 39888                           prodh	equ	0xFF4
 39889                           prodl	equ	0xFF3
 39890                           intcon	equ	0xFF2
 39891                           intcon2	equ	0xFF1
 39892                           intcon3	equ	0xFF0
 39893                           indf0	equ	0xFEF
 39894                           postinc0	equ	0xFEE
 39895                           plusw0	equ	0xFEB
 39896                           fsr0h	equ	0xFEA
 39897                           fsr0l	equ	0xFE9
 39898                           wreg	equ	0xFE8
 39899                           postinc1	equ	0xFE6
 39900                           postdec1	equ	0xFE5
 39901                           plusw1	equ	0xFE3
 39902                           fsr1h	equ	0xFE2
 39903                           fsr1l	equ	0xFE1
 39904                           indf2	equ	0xFDF
 39905                           postinc2	equ	0xFDE
 39906                           postdec2	equ	0xFDD
 39907                           plusw2	equ	0xFDB
 39908                           fsr2h	equ	0xFDA
 39909                           fsr2l	equ	0xFD9
 39910                           status	equ	0xFD8
 39911                           
 39912 ;; *************** function _HALResetPinMakeInput *****************
 39913 ;; Defined at:
 39914 ;;		line 50 in file "mcc_generated_files/LoRaWAN/radio_driver_hal.c"
 39915 ;; Parameters:    Size  Location     Type
 39916 ;;		None
 39917 ;; Auto vars:     Size  Location     Type
 39918 ;;		None
 39919 ;; Return value:  Size  Location     Type
 39920 ;;                  1    wreg      void 
 39921 ;; Registers used:
 39922 ;;		None
 39923 ;; Tracked objects:
 39924 ;;		On entry : 0/0
 39925 ;;		On exit  : 0/0
 39926 ;;		Unchanged: 0/0
 39927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 39928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 39932 ;;Total ram usage:        0 bytes
 39933 ;; Hardware stack levels used:    1
 39934 ;; Hardware stack levels required when called:    7
 39935 ;; This function calls:
 39936 ;;		Nothing
 39937 ;; This function is called by:
 39938 ;;		_RADIO_Reset
 39939 ;; This function uses a non-reentrant model
 39940 ;;
 39941                           
 39942                           	psect	text182
 39943  00A46A                     __ptext182:
 39944                           	opt stack 0
 39945  00A46A                     _HALResetPinMakeInput:
 39946                           	opt stack 20
 39947                           
 39948                           ;incstack = 0
 39949                           ;radio_driver_hal.c: 52: do { TRISC2 = 1; } while(0);
 39950  00A46A  8494               	bsf	3988,2,c	;volatile
 39951  00A46C  0012               	return	
 39952  00A46E                     __end_of_HALResetPinMakeInput:
 39953                           	opt stack 0
 39954                           tosu	equ	0xFFF
 39955                           tosh	equ	0xFFE
 39956                           tosl	equ	0xFFD
 39957                           pclath	equ	0xFFA
 39958                           tblptru	equ	0xFF8
 39959                           tblptrh	equ	0xFF7
 39960                           tblptrl	equ	0xFF6
 39961                           tablat	equ	0xFF5
 39962                           prodh	equ	0xFF4
 39963                           prodl	equ	0xFF3
 39964                           intcon	equ	0xFF2
 39965                           intcon2	equ	0xFF1
 39966                           intcon3	equ	0xFF0
 39967                           indf0	equ	0xFEF
 39968                           postinc0	equ	0xFEE
 39969                           plusw0	equ	0xFEB
 39970                           fsr0h	equ	0xFEA
 39971                           fsr0l	equ	0xFE9
 39972                           wreg	equ	0xFE8
 39973                           postinc1	equ	0xFE6
 39974                           postdec1	equ	0xFE5
 39975                           plusw1	equ	0xFE3
 39976                           fsr1h	equ	0xFE2
 39977                           fsr1l	equ	0xFE1
 39978                           indf2	equ	0xFDF
 39979                           postinc2	equ	0xFDE
 39980                           postdec2	equ	0xFDD
 39981                           plusw2	equ	0xFDB
 39982                           fsr2h	equ	0xFDA
 39983                           fsr2l	equ	0xFD9
 39984                           status	equ	0xFD8
 39985                           
 39986 ;; *************** function _LORAWAN_LinkCheckConfigure *****************
 39987 ;; Defined at:
 39988 ;;		line 755 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 39989 ;; Parameters:    Size  Location     Type
 39990 ;;  period          2   74[BANK0 ] unsigned int 
 39991 ;; Auto vars:     Size  Location     Type
 39992 ;;  iCtr            1   84[BANK0 ] unsigned char 
 39993 ;; Return value:  Size  Location     Type
 39994 ;;                  1    wreg      void 
 39995 ;; Registers used:
 39996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39997 ;; Tracked objects:
 39998 ;;		On entry : 0/0
 39999 ;;		On exit  : 0/0
 40000 ;;		Unchanged: 0/0
 40001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40002 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40003 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40004 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40005 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40006 ;;Total ram usage:       11 bytes
 40007 ;; Hardware stack levels used:    1
 40008 ;; Hardware stack levels required when called:   11
 40009 ;; This function calls:
 40010 ;;		_SwTimerSetTimeout
 40011 ;;		_SwTimerStart
 40012 ;;		_SwTimerStop
 40013 ;;		___lldiv
 40014 ;;		___lmul
 40015 ;; This function is called by:
 40016 ;;		_LORAWAN_Reset
 40017 ;; This function uses a non-reentrant model
 40018 ;;
 40019                           
 40020                           	psect	text183
 40021  006178                     __ptext183:
 40022                           	opt stack 0
 40023  006178                     _LORAWAN_LinkCheckConfigure:
 40024                           	opt stack 17
 40025                           
 40026                           ;lorawan.c: 757: uint8_t iCtr;
 40027                           ;lorawan.c: 759: loRa.periodForLinkCheck = period * 1000UL;
 40028                           
 40029                           ;incstack = 0
 40030  006178  C0AA  F09E         	movff	LORAWAN_LinkCheckConfigure@period,___lmul@multiplier
 40031  00617C  C0AB  F09F         	movff	LORAWAN_LinkCheckConfigure@period+1,___lmul@multiplier+1
 40032  006180  0100               	movlb	0	; () banked
 40033  006182  6BA0               	clrf	(___lmul@multiplier+2)& (0+255),b
 40034  006184  6BA1               	clrf	(___lmul@multiplier+3)& (0+255),b
 40035  006186  0EE8               	movlw	232
 40036  006188  0100               	movlb	0	; () banked
 40037  00618A  6FA2               	movwf	___lmul@multiplicand& (0+255),b
 40038  00618C  0E03               	movlw	3
 40039  00618E  6FA3               	movwf	(___lmul@multiplicand+1)& (0+255),b
 40040  006190  0E00               	movlw	0
 40041  006192  6FA4               	movwf	(___lmul@multiplicand+2)& (0+255),b
 40042  006194  0E00               	movlw	0
 40043  006196  6FA5               	movwf	(___lmul@multiplicand+3)& (0+255),b
 40044  006198  ECBF  F046         	call	___lmul	;wreg free
 40045  00619C  C09E  F2CC         	movff	?___lmul,_loRa+204
 40046  0061A0  C09F  F2CD         	movff	?___lmul+1,_loRa+205
 40047  0061A4  C0A0  F2CE         	movff	?___lmul+2,_loRa+206
 40048  0061A8  C0A1  F2CF         	movff	?___lmul+3,_loRa+207
 40049                           
 40050                           ;lorawan.c: 761: if (period == 0)
 40051  0061AC  0100               	movlb	0	; () banked
 40052  0061AE  51AA               	movf	LORAWAN_LinkCheckConfigure@period& (0+255),w,b
 40053  0061B0  0100               	movlb	0	; () banked
 40054  0061B2  11AB               	iorwf	(LORAWAN_LinkCheckConfigure@period+1)& (0+255),w,b
 40055  0061B4  A4D8               	btfss	status,2,c
 40056  0061B6  D02D               	goto	l1941
 40057                           
 40058                           ; BSR set to: 0
 40059                           ;lorawan.c: 762: {
 40060                           ;lorawan.c: 763: SwTimerStop(loRa.linkCheckTimerId);
 40061  0061B8  0102               	movlb	2	; () banked
 40062  0061BA  51E7               	movf	(_loRa+231)& (0+255),w,b
 40063  0061BC  EC61  F04F         	call	_SwTimerStop
 40064                           
 40065                           ;lorawan.c: 764: loRa.macStatus.linkCheck = 0;
 40066  0061C0  0102               	movlb	2	; () banked
 40067  0061C2  9503               	bcf	(_loRa+3)& (0+255),2,b
 40068                           
 40069                           ; BSR set to: 2
 40070                           ;lorawan.c: 765: for(iCtr = 0; iCtr < loRa.crtMacCmdIndex; iCtr ++)
 40071  0061C4  0E00               	movlw	0
 40072  0061C6  0100               	movlb	0	; () banked
 40073  0061C8  6FB4               	movwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),b
 40074  0061CA  D01C               	goto	l16491
 40075  0061CC                     l16483:
 40076                           
 40077                           ; BSR set to: 0
 40078                           ;lorawan.c: 766: {
 40079                           ;lorawan.c: 767: if(loRa.macCommands[iCtr].receivedCid == LINK_CHECK_CID)
 40080  0061CC  0100               	movlb	0	; () banked
 40081  0061CE  51B4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 40082  0061D0  0D02               	mullw	2
 40083  0061D2  0EA8               	movlw	low (_loRa+168)
 40084  0061D4  24F3               	addwf	prodl,w,c
 40085  0061D6  6ED9               	movwf	fsr2l,c
 40086  0061D8  0E02               	movlw	high (_loRa+168)
 40087  0061DA  20F4               	addwfc	prodh,w,c
 40088  0061DC  6EDA               	movwf	fsr2h,c
 40089  0061DE  0E02               	movlw	2
 40090  0061E0  18DE               	xorwf	postinc2,w,c
 40091  0061E2  A4D8               	btfss	status,2,c
 40092  0061E4  D00D               	goto	l16489
 40093                           
 40094                           ; BSR set to: 0
 40095                           ;lorawan.c: 768: {
 40096                           ;lorawan.c: 771: loRa.macCommands[iCtr].receivedCid = 0xFF;
 40097  0061E6  0100               	movlb	0	; () banked
 40098  0061E8  51B4               	movf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 40099  0061EA  0D02               	mullw	2
 40100  0061EC  0EA8               	movlw	low (_loRa+168)
 40101  0061EE  24F3               	addwf	prodl,w,c
 40102  0061F0  6ED9               	movwf	fsr2l,c
 40103  0061F2  0E02               	movlw	high (_loRa+168)
 40104  0061F4  20F4               	addwfc	prodh,w,c
 40105  0061F6  6EDA               	movwf	fsr2h,c
 40106  0061F8  0EFF               	movlw	255
 40107  0061FA  6EDF               	movwf	indf2,c
 40108                           
 40109                           ; BSR set to: 0
 40110                           ;lorawan.c: 772: loRa.crtMacCmdIndex --;
 40111  0061FC  0102               	movlb	2	; () banked
 40112  0061FE  07A7               	decf	(_loRa+167)& (0+255),f,b
 40113  006200                     l16489:
 40114  006200  0100               	movlb	0	; () banked
 40115  006202  2BB4               	incf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),f,b
 40116  006204                     l16491:
 40117                           
 40118                           ; BSR set to: 0
 40119  006204  0102               	movlb	2	; () banked
 40120  006206  51A7               	movf	(_loRa+167)& (0+255),w,b
 40121  006208  0100               	movlb	0	; () banked
 40122  00620A  5DB4               	subwf	LORAWAN_LinkCheckConfigure@iCtr& (0+255),w,b
 40123  00620C  B0D8               	btfsc	status,0,c
 40124  00620E  0012               	return	
 40125  006210  D7DD               	goto	l16483
 40126  006212                     l1941:
 40127                           
 40128                           ; BSR set to: 0
 40129                           ;lorawan.c: 776: else
 40130                           ;lorawan.c: 777: {
 40131                           ;lorawan.c: 778: loRa.macStatus.linkCheck = 1;
 40132  006212  0102               	movlb	2	; () banked
 40133  006214  8503               	bsf	(_loRa+3)& (0+255),2,b
 40134                           
 40135                           ;lorawan.c: 781: if (loRa.macStatus.networkJoined == 1)
 40136  006216  0102               	movlb	2	; () banked
 40137  006218  A902               	btfss	(_loRa+2)& (0+255),4,b
 40138  00621A  0012               	return	
 40139                           
 40140                           ; BSR set to: 2
 40141                           ;lorawan.c: 782: {
 40142                           ;lorawan.c: 783: SwTimerSetTimeout(loRa.linkCheckTimerId, ((loRa.periodForLinkCheck) < 0
      +                          x000FFFFFUL ? ( (((uint32_t)(loRa.periodForLinkCheck)) << (12)) / 125UL ) : ( (((uint32_
      +                          t)(loRa.periodForLinkCheck)) / 125UL) << (12) ) ));
 40143  00621C  0102               	movlb	2	; () banked
 40144  00621E  51CF               	movf	(_loRa+207)& (0+255),w,b
 40145  006220  E10A               	bnz	u19750
 40146  006222  0102               	movlb	2	; () banked
 40147  006224  29CC               	incf	(_loRa+204)& (0+255),w,b
 40148  006226  0EFF               	movlw	255
 40149  006228  0102               	movlb	2	; () banked
 40150  00622A  59CD               	subwfb	(_loRa+205)& (0+255),w,b
 40151  00622C  0E0F               	movlw	15
 40152  00622E  0102               	movlb	2	; () banked
 40153  006230  59CE               	subwfb	(_loRa+206)& (0+255),w,b
 40154  006232  A0D8               	btfss	status,0,c
 40155  006234  D020               	goto	l16497
 40156  006236                     u19750:
 40157                           
 40158                           ; BSR set to: 2
 40159  006236  C2CC  F064         	movff	_loRa+204,___lldiv@dividend
 40160  00623A  C2CD  F065         	movff	_loRa+205,___lldiv@dividend+1
 40161  00623E  C2CE  F066         	movff	_loRa+206,___lldiv@dividend+2
 40162  006242  C2CF  F067         	movff	_loRa+207,___lldiv@dividend+3
 40163  006246  0E7D               	movlw	125
 40164  006248  0100               	movlb	0	; () banked
 40165  00624A  6F68               	movwf	___lldiv@divisor& (0+255),b
 40166  00624C  0E00               	movlw	0
 40167  00624E  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 40168  006250  0E00               	movlw	0
 40169  006252  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 40170  006254  0E00               	movlw	0
 40171  006256  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 40172  006258  EC99  F03F         	call	___lldiv	;wreg free
 40173  00625C  0E0C               	movlw	12
 40174  00625E                     u19765:
 40175  00625E  90D8               	bcf	status,0,c
 40176  006260  0100               	movlb	0	; () banked
 40177  006262  3764               	rlcf	?___lldiv& (0+255),f,b
 40178  006264  0100               	movlb	0	; () banked
 40179  006266  3765               	rlcf	(?___lldiv+1)& (0+255),f,b
 40180  006268  0100               	movlb	0	; () banked
 40181  00626A  3766               	rlcf	(?___lldiv+2)& (0+255),f,b
 40182  00626C  0100               	movlb	0	; () banked
 40183  00626E  3767               	rlcf	(?___lldiv+3)& (0+255),f,b
 40184  006270  2EE8               	decfsz	wreg,f,c
 40185  006272  D7F5               	goto	u19765
 40186  006274  D024               	goto	L26
 40187  006276                     l16497:
 40188  006276  C2CC  F0AC         	movff	_loRa+204,??_LORAWAN_LinkCheckConfigure
 40189  00627A  C2CD  F0AD         	movff	_loRa+205,??_LORAWAN_LinkCheckConfigure+1
 40190  00627E  C2CE  F0AE         	movff	_loRa+206,??_LORAWAN_LinkCheckConfigure+2
 40191  006282  C2CF  F0AF         	movff	_loRa+207,??_LORAWAN_LinkCheckConfigure+3
 40192  006286  0E0C               	movlw	12
 40193  006288                     u19775:
 40194  006288  90D8               	bcf	status,0,c
 40195  00628A  0100               	movlb	0	; () banked
 40196  00628C  37AC               	rlcf	??_LORAWAN_LinkCheckConfigure& (0+255),f,b
 40197  00628E  37AD               	rlcf	(??_LORAWAN_LinkCheckConfigure+1)& (0+255),f,b
 40198  006290  37AE               	rlcf	(??_LORAWAN_LinkCheckConfigure+2)& (0+255),f,b
 40199  006292  37AF               	rlcf	(??_LORAWAN_LinkCheckConfigure+3)& (0+255),f,b
 40200  006294  2EE8               	decfsz	wreg,f,c
 40201  006296  D7F8               	goto	u19775
 40202  006298  C0AC  F064         	movff	??_LORAWAN_LinkCheckConfigure,___lldiv@dividend
 40203  00629C  C0AD  F065         	movff	??_LORAWAN_LinkCheckConfigure+1,___lldiv@dividend+1
 40204  0062A0  C0AE  F066         	movff	??_LORAWAN_LinkCheckConfigure+2,___lldiv@dividend+2
 40205  0062A4  C0AF  F067         	movff	??_LORAWAN_LinkCheckConfigure+3,___lldiv@dividend+3
 40206  0062A8  0E7D               	movlw	125
 40207  0062AA  0100               	movlb	0	; () banked
 40208  0062AC  6F68               	movwf	___lldiv@divisor& (0+255),b
 40209  0062AE  0E00               	movlw	0
 40210  0062B0  6F69               	movwf	(___lldiv@divisor+1)& (0+255),b
 40211  0062B2  0E00               	movlw	0
 40212  0062B4  6F6A               	movwf	(___lldiv@divisor+2)& (0+255),b
 40213  0062B6  0E00               	movlw	0
 40214  0062B8  6F6B               	movwf	(___lldiv@divisor+3)& (0+255),b
 40215  0062BA  EC99  F03F         	call	___lldiv	;wreg free
 40216  0062BE                     L26:
 40217  0062BE  C064  F0B0         	movff	?___lldiv,_LORAWAN_LinkCheckConfigure$3273
 40218  0062C2  C065  F0B1         	movff	?___lldiv+1,_LORAWAN_LinkCheckConfigure$3273+1
 40219  0062C6  C066  F0B2         	movff	?___lldiv+2,_LORAWAN_LinkCheckConfigure$3273+2
 40220  0062CA  C067  F0B3         	movff	?___lldiv+3,_LORAWAN_LinkCheckConfigure$3273+3
 40221  0062CE  C0B0  F071         	movff	_LORAWAN_LinkCheckConfigure$3273,SwTimerSetTimeout@timeout
 40222  0062D2  C0B1  F072         	movff	_LORAWAN_LinkCheckConfigure$3273+1,SwTimerSetTimeout@timeout+1
 40223  0062D6  C0B2  F073         	movff	_LORAWAN_LinkCheckConfigure$3273+2,SwTimerSetTimeout@timeout+2
 40224  0062DA  C0B3  F074         	movff	_LORAWAN_LinkCheckConfigure$3273+3,SwTimerSetTimeout@timeout+3
 40225  0062DE  0102               	movlb	2	; () banked
 40226  0062E0  51E7               	movf	(_loRa+231)& (0+255),w,b
 40227  0062E2  EC70  F04A         	call	_SwTimerSetTimeout
 40228                           
 40229                           ;lorawan.c: 784: SwTimerStart(loRa.linkCheckTimerId);
 40230  0062E6  0102               	movlb	2	; () banked
 40231  0062E8  51E7               	movf	(_loRa+231)& (0+255),w,b
 40232  0062EA  EC06  F042         	call	_SwTimerStart
 40233  0062EE  0012               	return	
 40234  0062F0                     __end_of_LORAWAN_LinkCheckConfigure:
 40235                           	opt stack 0
 40236                           tosu	equ	0xFFF
 40237                           tosh	equ	0xFFE
 40238                           tosl	equ	0xFFD
 40239                           pclath	equ	0xFFA
 40240                           tblptru	equ	0xFF8
 40241                           tblptrh	equ	0xFF7
 40242                           tblptrl	equ	0xFF6
 40243                           tablat	equ	0xFF5
 40244                           prodh	equ	0xFF4
 40245                           prodl	equ	0xFF3
 40246                           intcon	equ	0xFF2
 40247                           intcon2	equ	0xFF1
 40248                           intcon3	equ	0xFF0
 40249                           indf0	equ	0xFEF
 40250                           postinc0	equ	0xFEE
 40251                           plusw0	equ	0xFEB
 40252                           fsr0h	equ	0xFEA
 40253                           fsr0l	equ	0xFE9
 40254                           wreg	equ	0xFE8
 40255                           postinc1	equ	0xFE6
 40256                           postdec1	equ	0xFE5
 40257                           plusw1	equ	0xFE3
 40258                           fsr1h	equ	0xFE2
 40259                           fsr1l	equ	0xFE1
 40260                           indf2	equ	0xFDF
 40261                           postinc2	equ	0xFDE
 40262                           postdec2	equ	0xFDD
 40263                           plusw2	equ	0xFDB
 40264                           fsr2h	equ	0xFDA
 40265                           fsr2l	equ	0xFD9
 40266                           status	equ	0xFD8
 40267                           
 40268 ;; *************** function ___lmul *****************
 40269 ;; Defined at:
 40270 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 40271 ;; Parameters:    Size  Location     Type
 40272 ;;  multiplier      4   62[BANK0 ] unsigned long 
 40273 ;;  multiplicand    4   66[BANK0 ] unsigned long 
 40274 ;; Auto vars:     Size  Location     Type
 40275 ;;  product         4   70[BANK0 ] unsigned long 
 40276 ;; Return value:  Size  Location     Type
 40277 ;;                  4   62[BANK0 ] unsigned long 
 40278 ;; Registers used:
 40279 ;;		wreg, status,2, status,0
 40280 ;; Tracked objects:
 40281 ;;		On entry : 0/0
 40282 ;;		On exit  : 0/0
 40283 ;;		Unchanged: 0/0
 40284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40285 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40286 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40288 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40289 ;;Total ram usage:       12 bytes
 40290 ;; Hardware stack levels used:    1
 40291 ;; Hardware stack levels required when called:    7
 40292 ;; This function calls:
 40293 ;;		Nothing
 40294 ;; This function is called by:
 40295 ;;		_RADIO_WriteConfiguration
 40296 ;;		_RADIO_TxDone
 40297 ;;		_RADIO_FSKPacketSent
 40298 ;;		_LORAWAN_TxDone
 40299 ;;		_ExecuteNewChannel
 40300 ;;		_ExecuteRxParamSetupReq
 40301 ;;		_UpdateCfList
 40302 ;;		_LORAWAN_LinkCheckConfigure
 40303 ;;		_rand
 40304 ;;		_LORAWAN_Pause
 40305 ;; This function uses a non-reentrant model
 40306 ;;
 40307                           
 40308                           	psect	text184
 40309  008D7E                     __ptext184:
 40310                           	opt stack 0
 40311  008D7E                     ___lmul:
 40312                           	opt stack 17
 40313                           
 40314                           ;incstack = 0
 40315  008D7E  0E00               	movlw	0
 40316  008D80  0100               	movlb	0	; () banked
 40317  008D82  6FA6               	movwf	___lmul@product& (0+255),b
 40318  008D84  0E00               	movlw	0
 40319  008D86  6FA7               	movwf	(___lmul@product+1)& (0+255),b
 40320  008D88  0E00               	movlw	0
 40321  008D8A  6FA8               	movwf	(___lmul@product+2)& (0+255),b
 40322  008D8C  0E00               	movlw	0
 40323  008D8E  6FA9               	movwf	(___lmul@product+3)& (0+255),b
 40324  008D90                     l13389:
 40325                           
 40326                           ; BSR set to: 0
 40327  008D90  0100               	movlb	0	; () banked
 40328  008D92  A19E               	btfss	___lmul@multiplier& (0+255),0,b
 40329  008D94  D010               	goto	l13393
 40330                           
 40331                           ; BSR set to: 0
 40332  008D96  0100               	movlb	0	; () banked
 40333  008D98  51A2               	movf	___lmul@multiplicand& (0+255),w,b
 40334  008D9A  0100               	movlb	0	; () banked
 40335  008D9C  27A6               	addwf	___lmul@product& (0+255),f,b
 40336  008D9E  0100               	movlb	0	; () banked
 40337  008DA0  51A3               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 40338  008DA2  0100               	movlb	0	; () banked
 40339  008DA4  23A7               	addwfc	(___lmul@product+1)& (0+255),f,b
 40340  008DA6  0100               	movlb	0	; () banked
 40341  008DA8  51A4               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 40342  008DAA  0100               	movlb	0	; () banked
 40343  008DAC  23A8               	addwfc	(___lmul@product+2)& (0+255),f,b
 40344  008DAE  0100               	movlb	0	; () banked
 40345  008DB0  51A5               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 40346  008DB2  0100               	movlb	0	; () banked
 40347  008DB4  23A9               	addwfc	(___lmul@product+3)& (0+255),f,b
 40348  008DB6                     l13393:
 40349                           
 40350                           ; BSR set to: 0
 40351  008DB6  0100               	movlb	0	; () banked
 40352  008DB8  90D8               	bcf	status,0,c
 40353  008DBA  37A2               	rlcf	___lmul@multiplicand& (0+255),f,b
 40354  008DBC  37A3               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 40355  008DBE  37A4               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 40356  008DC0  37A5               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 40357                           
 40358                           ; BSR set to: 0
 40359  008DC2  0100               	movlb	0	; () banked
 40360  008DC4  90D8               	bcf	status,0,c
 40361  008DC6  33A1               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 40362  008DC8  33A0               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 40363  008DCA  339F               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 40364  008DCC  339E               	rrcf	___lmul@multiplier& (0+255),f,b
 40365  008DCE  0100               	movlb	0	; () banked
 40366  008DD0  519E               	movf	___lmul@multiplier& (0+255),w,b
 40367  008DD2  0100               	movlb	0	; () banked
 40368  008DD4  119F               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 40369  008DD6  0100               	movlb	0	; () banked
 40370  008DD8  11A0               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 40371  008DDA  0100               	movlb	0	; () banked
 40372  008DDC  11A1               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 40373  008DDE  A4D8               	btfss	status,2,c
 40374  008DE0  D7D7               	goto	l13389
 40375                           
 40376                           ; BSR set to: 0
 40377  008DE2  C0A6  F09E         	movff	___lmul@product,?___lmul
 40378  008DE6  C0A7  F09F         	movff	___lmul@product+1,?___lmul+1
 40379  008DEA  C0A8  F0A0         	movff	___lmul@product+2,?___lmul+2
 40380  008DEE  C0A9  F0A1         	movff	___lmul@product+3,?___lmul+3
 40381                           
 40382                           ; BSR set to: 0
 40383  008DF2  0012               	return		;funcret
 40384  008DF4                     __end_of___lmul:
 40385                           	opt stack 0
 40386                           tosu	equ	0xFFF
 40387                           tosh	equ	0xFFE
 40388                           tosl	equ	0xFFD
 40389                           pclath	equ	0xFFA
 40390                           tblptru	equ	0xFF8
 40391                           tblptrh	equ	0xFF7
 40392                           tblptrl	equ	0xFF6
 40393                           tablat	equ	0xFF5
 40394                           prodh	equ	0xFF4
 40395                           prodl	equ	0xFF3
 40396                           intcon	equ	0xFF2
 40397                           intcon2	equ	0xFF1
 40398                           intcon3	equ	0xFF0
 40399                           indf0	equ	0xFEF
 40400                           postinc0	equ	0xFEE
 40401                           plusw0	equ	0xFEB
 40402                           fsr0h	equ	0xFEA
 40403                           fsr0l	equ	0xFE9
 40404                           wreg	equ	0xFE8
 40405                           postinc1	equ	0xFE6
 40406                           postdec1	equ	0xFE5
 40407                           plusw1	equ	0xFE3
 40408                           fsr1h	equ	0xFE2
 40409                           fsr1l	equ	0xFE1
 40410                           indf2	equ	0xFDF
 40411                           postinc2	equ	0xFDE
 40412                           postdec2	equ	0xFDD
 40413                           plusw2	equ	0xFDB
 40414                           fsr2h	equ	0xFDA
 40415                           fsr2l	equ	0xFD9
 40416                           status	equ	0xFD8
 40417                           
 40418 ;; *************** function ___lldiv *****************
 40419 ;; Defined at:
 40420 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 40421 ;; Parameters:    Size  Location     Type
 40422 ;;  dividend        4    4[BANK0 ] unsigned long 
 40423 ;;  divisor         4    8[BANK0 ] unsigned long 
 40424 ;; Auto vars:     Size  Location     Type
 40425 ;;  quotient        4   12[BANK0 ] unsigned long 
 40426 ;;  counter         1   16[BANK0 ] unsigned char 
 40427 ;; Return value:  Size  Location     Type
 40428 ;;                  4    4[BANK0 ] unsigned long 
 40429 ;; Registers used:
 40430 ;;		wreg, status,2, status,0
 40431 ;; Tracked objects:
 40432 ;;		On entry : 0/0
 40433 ;;		On exit  : 0/0
 40434 ;;		Unchanged: 0/0
 40435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40436 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40437 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40439 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40440 ;;Total ram usage:       13 bytes
 40441 ;; Hardware stack levels used:    1
 40442 ;; Hardware stack levels required when called:    7
 40443 ;; This function calls:
 40444 ;;		Nothing
 40445 ;; This function is called by:
 40446 ;;		_RADIO_WriteFrequency
 40447 ;;		_RADIO_WriteFSKFrequencyDeviation
 40448 ;;		_RADIO_WriteFSKBitRate
 40449 ;;		_RADIO_Transmit
 40450 ;;		_RADIO_ReceiveStart
 40451 ;;		_LORAWAN_TxDone
 40452 ;;		_LORAWAN_RxTimeout
 40453 ;;		_StartReTxTimer
 40454 ;;		_DutyCycleCallback
 40455 ;;		_LORAWAN_LinkCheckConfigure
 40456 ;;		_LORAWAN_LinkCheckCallback
 40457 ;;		_UpdateRetransmissionAckTimeoutState
 40458 ;;		_UpdateJoinSuccessState
 40459 ;; This function uses a non-reentrant model
 40460 ;;
 40461                           
 40462                           	psect	text185
 40463  007F32                     __ptext185:
 40464                           	opt stack 0
 40465  007F32                     ___lldiv:
 40466                           	opt stack 20
 40467                           
 40468                           ; BSR set to: 0
 40469                           ;incstack = 0
 40470  007F32  0E00               	movlw	0
 40471  007F34  0100               	movlb	0	; () banked
 40472  007F36  6F6C               	movwf	___lldiv@quotient& (0+255),b
 40473  007F38  0E00               	movlw	0
 40474  007F3A  6F6D               	movwf	(___lldiv@quotient+1)& (0+255),b
 40475  007F3C  0E00               	movlw	0
 40476  007F3E  6F6E               	movwf	(___lldiv@quotient+2)& (0+255),b
 40477  007F40  0E00               	movlw	0
 40478  007F42  6F6F               	movwf	(___lldiv@quotient+3)& (0+255),b
 40479                           
 40480                           ; BSR set to: 0
 40481  007F44  0100               	movlb	0	; () banked
 40482  007F46  5168               	movf	___lldiv@divisor& (0+255),w,b
 40483  007F48  0100               	movlb	0	; () banked
 40484  007F4A  1169               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 40485  007F4C  0100               	movlb	0	; () banked
 40486  007F4E  116A               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 40487  007F50  0100               	movlb	0	; () banked
 40488  007F52  116B               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 40489  007F54  B4D8               	btfsc	status,2,c
 40490  007F56  D042               	goto	l3049
 40491                           
 40492                           ; BSR set to: 0
 40493  007F58  0E01               	movlw	1
 40494  007F5A  0100               	movlb	0	; () banked
 40495  007F5C  6F70               	movwf	___lldiv@counter& (0+255),b
 40496  007F5E  D008               	goto	l13405
 40497  007F60                     l13403:
 40498                           
 40499                           ; BSR set to: 0
 40500  007F60  0100               	movlb	0	; () banked
 40501  007F62  90D8               	bcf	status,0,c
 40502  007F64  3768               	rlcf	___lldiv@divisor& (0+255),f,b
 40503  007F66  3769               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 40504  007F68  376A               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 40505  007F6A  376B               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 40506  007F6C  0100               	movlb	0	; () banked
 40507  007F6E  2B70               	incf	___lldiv@counter& (0+255),f,b
 40508  007F70                     l13405:
 40509                           
 40510                           ; BSR set to: 0
 40511  007F70  0100               	movlb	0	; () banked
 40512  007F72  AF6B               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 40513  007F74  D7F5               	goto	l13403
 40514  007F76                     l13407:
 40515                           
 40516                           ; BSR set to: 0
 40517  007F76  0100               	movlb	0	; () banked
 40518  007F78  90D8               	bcf	status,0,c
 40519  007F7A  376C               	rlcf	___lldiv@quotient& (0+255),f,b
 40520  007F7C  376D               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 40521  007F7E  376E               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 40522  007F80  376F               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 40523                           
 40524                           ; BSR set to: 0
 40525  007F82  0100               	movlb	0	; () banked
 40526  007F84  5168               	movf	___lldiv@divisor& (0+255),w,b
 40527  007F86  0100               	movlb	0	; () banked
 40528  007F88  5D64               	subwf	___lldiv@dividend& (0+255),w,b
 40529  007F8A  0100               	movlb	0	; () banked
 40530  007F8C  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 40531  007F8E  0100               	movlb	0	; () banked
 40532  007F90  5965               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 40533  007F92  0100               	movlb	0	; () banked
 40534  007F94  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 40535  007F96  0100               	movlb	0	; () banked
 40536  007F98  5966               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 40537  007F9A  0100               	movlb	0	; () banked
 40538  007F9C  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 40539  007F9E  0100               	movlb	0	; () banked
 40540  007FA0  5967               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 40541  007FA2  A0D8               	btfss	status,0,c
 40542  007FA4  D012               	goto	l13415
 40543                           
 40544                           ; BSR set to: 0
 40545  007FA6  0100               	movlb	0	; () banked
 40546  007FA8  5168               	movf	___lldiv@divisor& (0+255),w,b
 40547  007FAA  0100               	movlb	0	; () banked
 40548  007FAC  5F64               	subwf	___lldiv@dividend& (0+255),f,b
 40549  007FAE  0100               	movlb	0	; () banked
 40550  007FB0  5169               	movf	(___lldiv@divisor+1)& (0+255),w,b
 40551  007FB2  0100               	movlb	0	; () banked
 40552  007FB4  5B65               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 40553  007FB6  0100               	movlb	0	; () banked
 40554  007FB8  516A               	movf	(___lldiv@divisor+2)& (0+255),w,b
 40555  007FBA  0100               	movlb	0	; () banked
 40556  007FBC  5B66               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 40557  007FBE  0100               	movlb	0	; () banked
 40558  007FC0  516B               	movf	(___lldiv@divisor+3)& (0+255),w,b
 40559  007FC2  0100               	movlb	0	; () banked
 40560  007FC4  5B67               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 40561                           
 40562                           ; BSR set to: 0
 40563  007FC6  0100               	movlb	0	; () banked
 40564  007FC8  816C               	bsf	___lldiv@quotient& (0+255),0,b
 40565  007FCA                     l13415:
 40566                           
 40567                           ; BSR set to: 0
 40568  007FCA  0100               	movlb	0	; () banked
 40569  007FCC  90D8               	bcf	status,0,c
 40570  007FCE  336B               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 40571  007FD0  336A               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 40572  007FD2  3369               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 40573  007FD4  3368               	rrcf	___lldiv@divisor& (0+255),f,b
 40574                           
 40575                           ; BSR set to: 0
 40576  007FD6  0100               	movlb	0	; () banked
 40577  007FD8  2F70               	decfsz	___lldiv@counter& (0+255),f,b
 40578  007FDA  D7CD               	goto	l13407
 40579  007FDC                     l3049:
 40580                           
 40581                           ; BSR set to: 0
 40582  007FDC  C06C  F064         	movff	___lldiv@quotient,?___lldiv
 40583  007FE0  C06D  F065         	movff	___lldiv@quotient+1,?___lldiv+1
 40584  007FE4  C06E  F066         	movff	___lldiv@quotient+2,?___lldiv+2
 40585  007FE8  C06F  F067         	movff	___lldiv@quotient+3,?___lldiv+3
 40586                           
 40587                           ; BSR set to: 0
 40588  007FEC  0012               	return		;funcret
 40589  007FEE                     __end_of___lldiv:
 40590                           	opt stack 0
 40591                           tosu	equ	0xFFF
 40592                           tosh	equ	0xFFE
 40593                           tosl	equ	0xFFD
 40594                           pclath	equ	0xFFA
 40595                           tblptru	equ	0xFF8
 40596                           tblptrh	equ	0xFF7
 40597                           tblptrl	equ	0xFF6
 40598                           tablat	equ	0xFF5
 40599                           prodh	equ	0xFF4
 40600                           prodl	equ	0xFF3
 40601                           intcon	equ	0xFF2
 40602                           intcon2	equ	0xFF1
 40603                           intcon3	equ	0xFF0
 40604                           indf0	equ	0xFEF
 40605                           postinc0	equ	0xFEE
 40606                           plusw0	equ	0xFEB
 40607                           fsr0h	equ	0xFEA
 40608                           fsr0l	equ	0xFE9
 40609                           wreg	equ	0xFE8
 40610                           postinc1	equ	0xFE6
 40611                           postdec1	equ	0xFE5
 40612                           plusw1	equ	0xFE3
 40613                           fsr1h	equ	0xFE2
 40614                           fsr1l	equ	0xFE1
 40615                           indf2	equ	0xFDF
 40616                           postinc2	equ	0xFDE
 40617                           postdec2	equ	0xFDD
 40618                           plusw2	equ	0xFDB
 40619                           fsr2h	equ	0xFDA
 40620                           fsr2l	equ	0xFD9
 40621                           status	equ	0xFD8
 40622                           
 40623 ;; *************** function _SwTimerStop *****************
 40624 ;; Defined at:
 40625 ;;		line 233 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40626 ;; Parameters:    Size  Location     Type
 40627 ;;  timerId         1    wreg     unsigned char 
 40628 ;; Auto vars:     Size  Location     Type
 40629 ;;  timerId         1    4[BANK0 ] unsigned char 
 40630 ;; Return value:  Size  Location     Type
 40631 ;;                  1    wreg      void 
 40632 ;; Registers used:
 40633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 40634 ;; Tracked objects:
 40635 ;;		On entry : 0/0
 40636 ;;		On exit  : 0/0
 40637 ;;		Unchanged: 0/0
 40638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40639 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40640 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40642 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40643 ;;Total ram usage:        1 bytes
 40644 ;; Hardware stack levels used:    1
 40645 ;; Hardware stack levels required when called:    7
 40646 ;; This function calls:
 40647 ;;		Nothing
 40648 ;; This function is called by:
 40649 ;;		_RADIO_Init
 40650 ;;		_RADIO_Transmit
 40651 ;;		_RADIO_RxDone
 40652 ;;		_RADIO_FSKPayloadReady
 40653 ;;		_RADIO_RxTimeout
 40654 ;;		_RADIO_TxDone
 40655 ;;		_RADIO_FSKPacketSent
 40656 ;;		_RADIO_RxFSKTimeout
 40657 ;;		_LORAWAN_TxDone
 40658 ;;		_StopAllSoftwareTimers
 40659 ;;		_LORAWAN_LinkCheckConfigure
 40660 ;;		_LORAWAN_RxDone
 40661 ;; This function uses a non-reentrant model
 40662 ;;
 40663                           
 40664                           	psect	text186
 40665  009EC2                     __ptext186:
 40666                           	opt stack 0
 40667  009EC2                     _SwTimerStop:
 40668                           	opt stack 20
 40669                           
 40670                           ; BSR set to: 0
 40671                           ;incstack = 0
 40672                           ;SwTimerStop@timerId stored from wreg
 40673  009EC2  0100               	movlb	0	; () banked
 40674  009EC4  6F64               	movwf	SwTimerStop@timerId& (0+255),b
 40675                           
 40676                           ;sw_timer.c: 235: (INTCONbits.GIE = 0);
 40677  009EC6  9EF2               	bcf	intcon,7,c	;volatile
 40678                           
 40679                           ;sw_timer.c: 236: swTimers[timerId].running = 0;
 40680  009EC8  0100               	movlb	0	; () banked
 40681  009ECA  5164               	movf	SwTimerStop@timerId& (0+255),w,b
 40682  009ECC  0D08               	mullw	8
 40683  009ECE  0E04               	movlw	4
 40684  009ED0  26F3               	addwf	prodl,f,c
 40685  009ED2  0E00               	movlw	0
 40686  009ED4  22F4               	addwfc	prodh,f,c
 40687  009ED6  0E00               	movlw	low _swTimers
 40688  009ED8  24F3               	addwf	prodl,w,c
 40689  009EDA  6ED9               	movwf	fsr2l,c
 40690  009EDC  0E03               	movlw	high _swTimers
 40691  009EDE  20F4               	addwfc	prodh,w,c
 40692  009EE0  6EDA               	movwf	fsr2h,c
 40693  009EE2  0E00               	movlw	0
 40694  009EE4  6EDF               	movwf	indf2,c
 40695                           
 40696                           ; BSR set to: 0
 40697                           ;sw_timer.c: 237: (INTCONbits.GIE = 1);
 40698  009EE6  8EF2               	bsf	intcon,7,c	;volatile
 40699                           
 40700                           ; BSR set to: 0
 40701  009EE8  0012               	return		;funcret
 40702  009EEA                     __end_of_SwTimerStop:
 40703                           	opt stack 0
 40704                           tosu	equ	0xFFF
 40705                           tosh	equ	0xFFE
 40706                           tosl	equ	0xFFD
 40707                           pclath	equ	0xFFA
 40708                           tblptru	equ	0xFF8
 40709                           tblptrh	equ	0xFF7
 40710                           tblptrl	equ	0xFF6
 40711                           tablat	equ	0xFF5
 40712                           prodh	equ	0xFF4
 40713                           prodl	equ	0xFF3
 40714                           intcon	equ	0xFF2
 40715                           intcon2	equ	0xFF1
 40716                           intcon3	equ	0xFF0
 40717                           indf0	equ	0xFEF
 40718                           postinc0	equ	0xFEE
 40719                           plusw0	equ	0xFEB
 40720                           fsr0h	equ	0xFEA
 40721                           fsr0l	equ	0xFE9
 40722                           wreg	equ	0xFE8
 40723                           postinc1	equ	0xFE6
 40724                           postdec1	equ	0xFE5
 40725                           plusw1	equ	0xFE3
 40726                           fsr1h	equ	0xFE2
 40727                           fsr1l	equ	0xFE1
 40728                           indf2	equ	0xFDF
 40729                           postinc2	equ	0xFDE
 40730                           postdec2	equ	0xFDD
 40731                           plusw2	equ	0xFDB
 40732                           fsr2h	equ	0xFDA
 40733                           fsr2l	equ	0xFD9
 40734                           status	equ	0xFD8
 40735                           
 40736 ;; *************** function _SwTimerStart *****************
 40737 ;; Defined at:
 40738 ;;		line 218 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40739 ;; Parameters:    Size  Location     Type
 40740 ;;  timerId         1    wreg     unsigned char 
 40741 ;; Auto vars:     Size  Location     Type
 40742 ;;  timerId         1   61[BANK0 ] unsigned char 
 40743 ;;  ticksRemaini    4   57[BANK0 ] unsigned long 
 40744 ;; Return value:  Size  Location     Type
 40745 ;;                  1    wreg      void 
 40746 ;; Registers used:
 40747 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 40748 ;; Tracked objects:
 40749 ;;		On entry : 0/0
 40750 ;;		On exit  : 0/0
 40751 ;;		Unchanged: 0/0
 40752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40754 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40755 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40756 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40757 ;;Total ram usage:        9 bytes
 40758 ;; Hardware stack levels used:    1
 40759 ;; Hardware stack levels required when called:   10
 40760 ;; This function calls:
 40761 ;;		_SwTimersInterrupt
 40762 ;;		_TMR_OverrideRemaining
 40763 ;; This function is called by:
 40764 ;;		_RADIO_Transmit
 40765 ;;		_RADIO_ReceiveStart
 40766 ;;		_LORAWAN_TxDone
 40767 ;;		_LORAWAN_RxTimeout
 40768 ;;		_StartReTxTimer
 40769 ;;		_DutyCycleCallback
 40770 ;;		_LORAWAN_Join
 40771 ;;		_LORAWAN_LinkCheckConfigure
 40772 ;;		_LORAWAN_LinkCheckCallback
 40773 ;;		_UpdateRetransmissionAckTimeoutState
 40774 ;;		_UpdateJoinSuccessState
 40775 ;; This function uses a non-reentrant model
 40776 ;;
 40777                           
 40778                           	psect	text187
 40779  00840C                     __ptext187:
 40780                           	opt stack 0
 40781  00840C                     _SwTimerStart:
 40782                           	opt stack 17
 40783                           
 40784                           ; BSR set to: 0
 40785                           ;incstack = 0
 40786                           ;SwTimerStart@timerId stored from wreg
 40787  00840C  0100               	movlb	0	; () banked
 40788  00840E  6F9D               	movwf	SwTimerStart@timerId& (0+255),b
 40789                           
 40790                           ;sw_timer.c: 220: uint32_t ticksRemaining;
 40791                           ;sw_timer.c: 222: (INTCONbits.GIE = 0);
 40792  008410  9EF2               	bcf	intcon,7,c	;volatile
 40793                           
 40794                           ;sw_timer.c: 223: ticksRemaining = SwTimersInterrupt();
 40795  008412  EC3C  F037         	call	_SwTimersInterrupt	;wreg free
 40796  008416  C084  F099         	movff	?_SwTimersInterrupt,SwTimerStart@ticksRemaining
 40797  00841A  C085  F09A         	movff	?_SwTimersInterrupt+1,SwTimerStart@ticksRemaining+1
 40798  00841E  C086  F09B         	movff	?_SwTimersInterrupt+2,SwTimerStart@ticksRemaining+2
 40799  008422  C087  F09C         	movff	?_SwTimersInterrupt+3,SwTimerStart@ticksRemaining+3
 40800                           
 40801                           ;sw_timer.c: 224: if (swTimers[timerId].ticksRemaining < ticksRemaining)
 40802  008426  0100               	movlb	0	; () banked
 40803  008428  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40804  00842A  0D08               	mullw	8
 40805  00842C  0E00               	movlw	low _swTimers
 40806  00842E  24F3               	addwf	prodl,w,c
 40807  008430  6ED9               	movwf	fsr2l,c
 40808  008432  0E03               	movlw	high _swTimers
 40809  008434  20F4               	addwfc	prodh,w,c
 40810  008436  6EDA               	movwf	fsr2h,c
 40811  008438  0100               	movlb	0	; () banked
 40812  00843A  5199               	movf	SwTimerStart@ticksRemaining& (0+255),w,b
 40813  00843C  5CDE               	subwf	postinc2,w,c
 40814  00843E  0100               	movlb	0	; () banked
 40815  008440  519A               	movf	(SwTimerStart@ticksRemaining+1)& (0+255),w,b
 40816  008442  58DE               	subwfb	postinc2,w,c
 40817  008444  0100               	movlb	0	; () banked
 40818  008446  519B               	movf	(SwTimerStart@ticksRemaining+2)& (0+255),w,b
 40819  008448  58DE               	subwfb	postinc2,w,c
 40820  00844A  0100               	movlb	0	; () banked
 40821  00844C  519C               	movf	(SwTimerStart@ticksRemaining+3)& (0+255),w,b
 40822  00844E  58DE               	subwfb	postinc2,w,c
 40823  008450  B0D8               	btfsc	status,0,c
 40824  008452  D011               	goto	l13757
 40825                           
 40826                           ; BSR set to: 0
 40827                           ;sw_timer.c: 225: {
 40828                           ;sw_timer.c: 226: ticksRemaining = swTimers[timerId].ticksRemaining;
 40829  008454  0100               	movlb	0	; () banked
 40830  008456  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40831  008458  0D08               	mullw	8
 40832  00845A  0E00               	movlw	low _swTimers
 40833  00845C  24F3               	addwf	prodl,w,c
 40834  00845E  6ED9               	movwf	fsr2l,c
 40835  008460  0E03               	movlw	high _swTimers
 40836  008462  20F4               	addwfc	prodh,w,c
 40837  008464  6EDA               	movwf	fsr2h,c
 40838  008466  CFDE F099          	movff	postinc2,SwTimerStart@ticksRemaining
 40839  00846A  CFDE F09A          	movff	postinc2,SwTimerStart@ticksRemaining+1
 40840  00846E  CFDE F09B          	movff	postinc2,SwTimerStart@ticksRemaining+2
 40841  008472  CFDE F09C          	movff	postinc2,SwTimerStart@ticksRemaining+3
 40842  008476                     l13757:
 40843                           
 40844                           ; BSR set to: 0
 40845                           ;sw_timer.c: 227: }
 40846                           ;sw_timer.c: 228: TMR_OverrideRemaining(ticksRemaining);
 40847  008476  C099  F06E         	movff	SwTimerStart@ticksRemaining,TMR_OverrideRemaining@ticksRemaining
 40848  00847A  C09A  F06F         	movff	SwTimerStart@ticksRemaining+1,TMR_OverrideRemaining@ticksRemaining+1
 40849  00847E  C09B  F070         	movff	SwTimerStart@ticksRemaining+2,TMR_OverrideRemaining@ticksRemaining+2
 40850  008482  C09C  F071         	movff	SwTimerStart@ticksRemaining+3,TMR_OverrideRemaining@ticksRemaining+3
 40851  008486  EC61  F041         	call	_TMR_OverrideRemaining	;wreg free
 40852                           
 40853                           ;sw_timer.c: 229: swTimers[timerId].running = 1;
 40854  00848A  0100               	movlb	0	; () banked
 40855  00848C  519D               	movf	SwTimerStart@timerId& (0+255),w,b
 40856  00848E  0D08               	mullw	8
 40857  008490  0E04               	movlw	4
 40858  008492  26F3               	addwf	prodl,f,c
 40859  008494  0E00               	movlw	0
 40860  008496  22F4               	addwfc	prodh,f,c
 40861  008498  0E00               	movlw	low _swTimers
 40862  00849A  24F3               	addwf	prodl,w,c
 40863  00849C  6ED9               	movwf	fsr2l,c
 40864  00849E  0E03               	movlw	high _swTimers
 40865  0084A0  20F4               	addwfc	prodh,w,c
 40866  0084A2  6EDA               	movwf	fsr2h,c
 40867  0084A4  0E01               	movlw	1
 40868  0084A6  6EDF               	movwf	indf2,c
 40869                           
 40870                           ; BSR set to: 0
 40871                           ;sw_timer.c: 230: (INTCONbits.GIE = 1);
 40872  0084A8  8EF2               	bsf	intcon,7,c	;volatile
 40873                           
 40874                           ; BSR set to: 0
 40875  0084AA  0012               	return		;funcret
 40876  0084AC                     __end_of_SwTimerStart:
 40877                           	opt stack 0
 40878                           tosu	equ	0xFFF
 40879                           tosh	equ	0xFFE
 40880                           tosl	equ	0xFFD
 40881                           pclath	equ	0xFFA
 40882                           tblptru	equ	0xFF8
 40883                           tblptrh	equ	0xFF7
 40884                           tblptrl	equ	0xFF6
 40885                           tablat	equ	0xFF5
 40886                           prodh	equ	0xFF4
 40887                           prodl	equ	0xFF3
 40888                           intcon	equ	0xFF2
 40889                           intcon2	equ	0xFF1
 40890                           intcon3	equ	0xFF0
 40891                           indf0	equ	0xFEF
 40892                           postinc0	equ	0xFEE
 40893                           plusw0	equ	0xFEB
 40894                           fsr0h	equ	0xFEA
 40895                           fsr0l	equ	0xFE9
 40896                           wreg	equ	0xFE8
 40897                           postinc1	equ	0xFE6
 40898                           postdec1	equ	0xFE5
 40899                           plusw1	equ	0xFE3
 40900                           fsr1h	equ	0xFE2
 40901                           fsr1l	equ	0xFE1
 40902                           indf2	equ	0xFDF
 40903                           postinc2	equ	0xFDE
 40904                           postdec2	equ	0xFDD
 40905                           plusw2	equ	0xFDB
 40906                           fsr2h	equ	0xFDA
 40907                           fsr2l	equ	0xFD9
 40908                           status	equ	0xFD8
 40909                           
 40910 ;; *************** function _TMR_OverrideRemaining *****************
 40911 ;; Defined at:
 40912 ;;		line 65 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 40913 ;; Parameters:    Size  Location     Type
 40914 ;;  ticksRemaini    4   14[BANK0 ] unsigned long 
 40915 ;; Auto vars:     Size  Location     Type
 40916 ;;  oldReloadVal    2   22[BANK0 ] unsigned int 
 40917 ;;  tmrVal          2   20[BANK0 ] unsigned int 
 40918 ;; Return value:  Size  Location     Type
 40919 ;;                  1    wreg      void 
 40920 ;; Registers used:
 40921 ;;		wreg, status,2, status,0, cstack
 40922 ;; Tracked objects:
 40923 ;;		On entry : 0/0
 40924 ;;		On exit  : 0/0
 40925 ;;		Unchanged: 0/0
 40926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 40927 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40928 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40929 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40930 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 40931 ;;Total ram usage:       10 bytes
 40932 ;; Hardware stack levels used:    1
 40933 ;; Hardware stack levels required when called:    9
 40934 ;; This function calls:
 40935 ;;		_TMR_SwapTimer
 40936 ;; This function is called by:
 40937 ;;		_SwTimerStart
 40938 ;; This function uses a non-reentrant model
 40939 ;;
 40940                           
 40941                           	psect	text188
 40942  0082C2                     __ptext188:
 40943                           	opt stack 0
 40944  0082C2                     _TMR_OverrideRemaining:
 40945                           	opt stack 17
 40946                           
 40947                           ;sw_timer.c: 67: uint16_t tmrVal;
 40948                           ;sw_timer.c: 68: uint16_t oldReloadVal;
 40949                           ;sw_timer.c: 71: if (ticksToScheduledInterrupt > 10)
 40950                           
 40951                           ; BSR set to: 0
 40952                           ;incstack = 0
 40953  0082C2  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40954  0082C4  105C               	iorwf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40955  0082C6  105B               	iorwf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40956  0082C8  E104               	bnz	u14690
 40957  0082CA  0E0B               	movlw	11
 40958  0082CC  5C5A               	subwf	_ticksToScheduledInterrupt,w,c	;volatile
 40959  0082CE  A0D8               	btfss	status,0,c
 40960  0082D0  0012               	return	
 40961  0082D2                     u14690:
 40962                           
 40963                           ;sw_timer.c: 72: {
 40964                           ;sw_timer.c: 73: if (ticksRemaining < ticksToScheduledInterrupt)
 40965  0082D2  505A               	movf	_ticksToScheduledInterrupt,w,c	;volatile
 40966  0082D4  0100               	movlb	0	; () banked
 40967  0082D6  5D6E               	subwf	TMR_OverrideRemaining@ticksRemaining& (0+255),w,b
 40968  0082D8  505B               	movf	_ticksToScheduledInterrupt+1,w,c	;volatile
 40969  0082DA  0100               	movlb	0	; () banked
 40970  0082DC  596F               	subwfb	(TMR_OverrideRemaining@ticksRemaining+1)& (0+255),w,b
 40971  0082DE  505C               	movf	_ticksToScheduledInterrupt+2,w,c	;volatile
 40972  0082E0  0100               	movlb	0	; () banked
 40973  0082E2  5970               	subwfb	(TMR_OverrideRemaining@ticksRemaining+2)& (0+255),w,b
 40974  0082E4  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 40975  0082E6  0100               	movlb	0	; () banked
 40976  0082E8  5971               	subwfb	(TMR_OverrideRemaining@ticksRemaining+3)& (0+255),w,b
 40977  0082EA  B0D8               	btfsc	status,0,c
 40978  0082EC  0012               	return	
 40979                           
 40980                           ; BSR set to: 0
 40981                           ;sw_timer.c: 74: {
 40982                           ;sw_timer.c: 75: ticksToScheduledInterrupt = ticksRemaining;
 40983  0082EE  C06E  F05A         	movff	TMR_OverrideRemaining@ticksRemaining,_ticksToScheduledInterrupt	;volatile
 40984  0082F2  C06F  F05B         	movff	TMR_OverrideRemaining@ticksRemaining+1,_ticksToScheduledInterrupt+1	;volatile
 40985  0082F6  C070  F05C         	movff	TMR_OverrideRemaining@ticksRemaining+2,_ticksToScheduledInterrupt+2	;volatile
 40986  0082FA  C071  F05D         	movff	TMR_OverrideRemaining@ticksRemaining+3,_ticksToScheduledInterrupt+3	;volatile
 40987                           
 40988                           ;sw_timer.c: 76: oldReloadVal = reloadVal;
 40989  0082FE  C0F9  F076         	movff	_reloadVal,TMR_OverrideRemaining@oldReloadVal	;volatile
 40990  008302  C0FA  F077         	movff	_reloadVal+1,TMR_OverrideRemaining@oldReloadVal+1	;volatile
 40991                           
 40992                           ;sw_timer.c: 78: reloadVal = ((uint32_t)0x10000) - ticksRemaining;
 40993  008306  C06E  F072         	movff	TMR_OverrideRemaining@ticksRemaining,??_TMR_OverrideRemaining
 40994  00830A  C06F  F073         	movff	TMR_OverrideRemaining@ticksRemaining+1,??_TMR_OverrideRemaining+1
 40995  00830E  0100               	movlb	0	; () banked
 40996  008310  1F72               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 40997  008312  1F73               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 40998  008314  4B72               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 40999  008316  2B73               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 41000  008318  C072  F0F9         	movff	??_TMR_OverrideRemaining,_reloadVal	;volatile
 41001  00831C  C073  F0FA         	movff	??_TMR_OverrideRemaining+1,_reloadVal+1	;volatile
 41002                           
 41003                           ; BSR set to: 0
 41004                           ;sw_timer.c: 79: tmrVal = TMR_SwapTimer(reloadVal);
 41005  008320  C0F9  F06C         	movff	_reloadVal,TMR_SwapTimer@timerVal	;volatile
 41006  008324  C0FA  F06D         	movff	_reloadVal+1,TMR_SwapTimer@timerVal+1	;volatile
 41007  008328  EC33  F04C         	call	_TMR_SwapTimer	;wreg free
 41008  00832C  C06C  F074         	movff	?_TMR_SwapTimer,TMR_OverrideRemaining@tmrVal
 41009  008330  C06D  F075         	movff	?_TMR_SwapTimer+1,TMR_OverrideRemaining@tmrVal+1
 41010                           
 41011                           ;sw_timer.c: 80: ticksAdded += tmrVal - oldReloadVal;
 41012  008334  C076  F072         	movff	TMR_OverrideRemaining@oldReloadVal,??_TMR_OverrideRemaining
 41013  008338  C077  F073         	movff	TMR_OverrideRemaining@oldReloadVal+1,??_TMR_OverrideRemaining+1
 41014  00833C  0100               	movlb	0	; () banked
 41015  00833E  1F72               	comf	??_TMR_OverrideRemaining& (0+255),f,b
 41016  008340  1F73               	comf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 41017  008342  4B72               	infsnz	??_TMR_OverrideRemaining& (0+255),f,b
 41018  008344  2B73               	incf	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 41019  008346  0100               	movlb	0	; () banked
 41020  008348  5174               	movf	TMR_OverrideRemaining@tmrVal& (0+255),w,b
 41021  00834A  0100               	movlb	0	; () banked
 41022  00834C  2772               	addwf	??_TMR_OverrideRemaining& (0+255),f,b
 41023  00834E  0100               	movlb	0	; () banked
 41024  008350  5175               	movf	(TMR_OverrideRemaining@tmrVal+1)& (0+255),w,b
 41025  008352  0100               	movlb	0	; () banked
 41026  008354  2373               	addwfc	(??_TMR_OverrideRemaining+1)& (0+255),f,b
 41027  008356  0100               	movlb	0	; () banked
 41028  008358  5172               	movf	??_TMR_OverrideRemaining& (0+255),w,b
 41029  00835A  2640               	addwf	_ticksAdded,f,c	;volatile
 41030  00835C  0100               	movlb	0	; () banked
 41031  00835E  5173               	movf	(??_TMR_OverrideRemaining+1)& (0+255),w,b
 41032  008360  2241               	addwfc	_ticksAdded+1,f,c	;volatile
 41033  008362  0E00               	movlw	0
 41034  008364  2242               	addwfc	_ticksAdded+2,f,c	;volatile
 41035  008366  0E00               	movlw	0
 41036  008368  2243               	addwfc	_ticksAdded+3,f,c	;volatile
 41037                           
 41038                           ; BSR set to: 0
 41039  00836A  0012               	return	
 41040  00836C                     __end_of_TMR_OverrideRemaining:
 41041                           	opt stack 0
 41042                           tosu	equ	0xFFF
 41043                           tosh	equ	0xFFE
 41044                           tosl	equ	0xFFD
 41045                           pclath	equ	0xFFA
 41046                           tblptru	equ	0xFF8
 41047                           tblptrh	equ	0xFF7
 41048                           tblptrl	equ	0xFF6
 41049                           tablat	equ	0xFF5
 41050                           prodh	equ	0xFF4
 41051                           prodl	equ	0xFF3
 41052                           intcon	equ	0xFF2
 41053                           intcon2	equ	0xFF1
 41054                           intcon3	equ	0xFF0
 41055                           indf0	equ	0xFEF
 41056                           postinc0	equ	0xFEE
 41057                           plusw0	equ	0xFEB
 41058                           fsr0h	equ	0xFEA
 41059                           fsr0l	equ	0xFE9
 41060                           wreg	equ	0xFE8
 41061                           postinc1	equ	0xFE6
 41062                           postdec1	equ	0xFE5
 41063                           plusw1	equ	0xFE3
 41064                           fsr1h	equ	0xFE2
 41065                           fsr1l	equ	0xFE1
 41066                           indf2	equ	0xFDF
 41067                           postinc2	equ	0xFDE
 41068                           postdec2	equ	0xFDD
 41069                           plusw2	equ	0xFDB
 41070                           fsr2h	equ	0xFDA
 41071                           fsr2l	equ	0xFD9
 41072                           status	equ	0xFD8
 41073                           
 41074 ;; *************** function _TMR_SwapTimer *****************
 41075 ;; Defined at:
 41076 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41077 ;; Parameters:    Size  Location     Type
 41078 ;;  timerVal        2   12[BANK0 ] unsigned int 
 41079 ;; Auto vars:     Size  Location     Type
 41080 ;;		None
 41081 ;; Return value:  Size  Location     Type
 41082 ;;                  2   12[BANK0 ] unsigned int 
 41083 ;; Registers used:
 41084 ;;		wreg, status,2, status,0, cstack
 41085 ;; Tracked objects:
 41086 ;;		On entry : 0/0
 41087 ;;		On exit  : 0/0
 41088 ;;		Unchanged: 0/0
 41089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41090 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41093 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41094 ;;Total ram usage:        2 bytes
 41095 ;; Hardware stack levels used:    1
 41096 ;; Hardware stack levels required when called:    8
 41097 ;; This function calls:
 41098 ;;		_TMR1_ReadTimer
 41099 ;;		_TMR1_WriteTimer
 41100 ;; This function is called by:
 41101 ;;		_TMR_OverrideRemaining
 41102 ;; This function uses a non-reentrant model
 41103 ;;
 41104                           
 41105                           	psect	text189
 41106  009866                     __ptext189:
 41107                           	opt stack 0
 41108  009866                     _TMR_SwapTimer:
 41109                           	opt stack 17
 41110                           
 41111                           ;sw_timer.c: 114: static uint16_t oldVal;
 41112                           ;sw_timer.c: 115: static uint16_t retVal;
 41113                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 41114                           
 41115                           ;incstack = 0
 41116  009866  EC75  F04F         	call	_TMR1_ReadTimer	;wreg free
 41117  00986A  C064  F046         	movff	?_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 41118  00986E  C065  F047         	movff	?_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 41119  009872                     l13215:
 41120  009872  EC75  F04F         	call	_TMR1_ReadTimer	;wreg free
 41121  009876  5046               	movf	TMR_SwapTimer@oldVal,w,c
 41122  009878  0100               	movlb	0	; () banked
 41123  00987A  1964               	xorwf	?_TMR1_ReadTimer& (0+255),w,b
 41124  00987C  E105               	bnz	l13217
 41125  00987E  5047               	movf	TMR_SwapTimer@oldVal+1,w,c
 41126  009880  0100               	movlb	0	; () banked
 41127  009882  1965               	xorwf	(?_TMR1_ReadTimer+1)& (0+255),w,b
 41128  009884  B4D8               	btfsc	status,2,c
 41129  009886  D7F5               	goto	l13215
 41130  009888                     l13217:
 41131                           
 41132                           ; BSR set to: 0
 41133                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 41134  009888  C06C  F064         	movff	TMR_SwapTimer@timerVal,TMR1_WriteTimer@timerVal
 41135  00988C  C06D  F065         	movff	TMR_SwapTimer@timerVal+1,TMR1_WriteTimer@timerVal+1
 41136  009890  EC46  F050         	call	_TMR1_WriteTimer	;wreg free
 41137                           
 41138                           ;sw_timer.c: 128: oldVal++;
 41139  009894  4A46               	infsnz	TMR_SwapTimer@oldVal,f,c
 41140  009896  2A47               	incf	TMR_SwapTimer@oldVal+1,f,c
 41141                           
 41142                           ;sw_timer.c: 130: retVal = oldVal;
 41143  009898  C046  F048         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 41144  00989C  C047  F049         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 41145                           
 41146                           ;sw_timer.c: 132: return retVal;
 41147  0098A0  C048  F06C         	movff	TMR_SwapTimer@retVal,?_TMR_SwapTimer
 41148  0098A4  C049  F06D         	movff	TMR_SwapTimer@retVal+1,?_TMR_SwapTimer+1
 41149  0098A8  0012               	return	
 41150  0098AA                     __end_of_TMR_SwapTimer:
 41151                           	opt stack 0
 41152                           tosu	equ	0xFFF
 41153                           tosh	equ	0xFFE
 41154                           tosl	equ	0xFFD
 41155                           pclath	equ	0xFFA
 41156                           tblptru	equ	0xFF8
 41157                           tblptrh	equ	0xFF7
 41158                           tblptrl	equ	0xFF6
 41159                           tablat	equ	0xFF5
 41160                           prodh	equ	0xFF4
 41161                           prodl	equ	0xFF3
 41162                           intcon	equ	0xFF2
 41163                           intcon2	equ	0xFF1
 41164                           intcon3	equ	0xFF0
 41165                           indf0	equ	0xFEF
 41166                           postinc0	equ	0xFEE
 41167                           plusw0	equ	0xFEB
 41168                           fsr0h	equ	0xFEA
 41169                           fsr0l	equ	0xFE9
 41170                           wreg	equ	0xFE8
 41171                           postinc1	equ	0xFE6
 41172                           postdec1	equ	0xFE5
 41173                           plusw1	equ	0xFE3
 41174                           fsr1h	equ	0xFE2
 41175                           fsr1l	equ	0xFE1
 41176                           indf2	equ	0xFDF
 41177                           postinc2	equ	0xFDE
 41178                           postdec2	equ	0xFDD
 41179                           plusw2	equ	0xFDB
 41180                           fsr2h	equ	0xFDA
 41181                           fsr2l	equ	0xFD9
 41182                           status	equ	0xFD8
 41183                           
 41184 ;; *************** function _TMR1_WriteTimer *****************
 41185 ;; Defined at:
 41186 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 41187 ;; Parameters:    Size  Location     Type
 41188 ;;  timerVal        2    4[BANK0 ] unsigned int 
 41189 ;; Auto vars:     Size  Location     Type
 41190 ;;		None
 41191 ;; Return value:  Size  Location     Type
 41192 ;;                  1    wreg      void 
 41193 ;; Registers used:
 41194 ;;		wreg, status,2
 41195 ;; Tracked objects:
 41196 ;;		On entry : 0/0
 41197 ;;		On exit  : 0/0
 41198 ;;		Unchanged: 0/0
 41199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41200 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41201 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41202 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41203 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41204 ;;Total ram usage:        2 bytes
 41205 ;; Hardware stack levels used:    1
 41206 ;; Hardware stack levels required when called:    7
 41207 ;; This function calls:
 41208 ;;		Nothing
 41209 ;; This function is called by:
 41210 ;;		_TMR_SwapTimer
 41211 ;; This function uses a non-reentrant model
 41212 ;;
 41213                           
 41214                           	psect	text190
 41215  00A08C                     __ptext190:
 41216                           	opt stack 0
 41217  00A08C                     _TMR1_WriteTimer:
 41218                           	opt stack 17
 41219                           
 41220                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 41221                           
 41222                           ;incstack = 0
 41223  00A08C  A4CD               	btfss	4045,2,c	;volatile
 41224  00A08E  D008               	goto	l13143
 41225                           
 41226                           ;tmr1.c: 123: {
 41227                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 41228  00A090  90CD               	bcf	4045,0,c	;volatile
 41229                           
 41230                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 41231  00A092  0100               	movlb	0	; () banked
 41232  00A094  5165               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 41233  00A096  6ECF               	movwf	4047,c	;volatile
 41234                           
 41235                           ; BSR set to: 0
 41236                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 41237  00A098  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 41238                           
 41239                           ; BSR set to: 0
 41240                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 41241  00A09C  80CD               	bsf	4045,0,c	;volatile
 41242                           
 41243                           ;tmr1.c: 133: }
 41244  00A09E  0012               	return	
 41245  00A0A0                     l13143:
 41246                           
 41247                           ;tmr1.c: 134: else
 41248                           ;tmr1.c: 135: {
 41249                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 41250  00A0A0  0100               	movlb	0	; () banked
 41251  00A0A2  5165               	movf	(TMR1_WriteTimer@timerVal+1)& (0+255),w,b
 41252  00A0A4  6ECF               	movwf	4047,c	;volatile
 41253                           
 41254                           ; BSR set to: 0
 41255                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 41256  00A0A6  C064  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
 41257  00A0AA  0012               	return	
 41258  00A0AC                     __end_of_TMR1_WriteTimer:
 41259                           	opt stack 0
 41260                           tosu	equ	0xFFF
 41261                           tosh	equ	0xFFE
 41262                           tosl	equ	0xFFD
 41263                           pclath	equ	0xFFA
 41264                           tblptru	equ	0xFF8
 41265                           tblptrh	equ	0xFF7
 41266                           tblptrl	equ	0xFF6
 41267                           tablat	equ	0xFF5
 41268                           prodh	equ	0xFF4
 41269                           prodl	equ	0xFF3
 41270                           intcon	equ	0xFF2
 41271                           intcon2	equ	0xFF1
 41272                           intcon3	equ	0xFF0
 41273                           indf0	equ	0xFEF
 41274                           postinc0	equ	0xFEE
 41275                           plusw0	equ	0xFEB
 41276                           fsr0h	equ	0xFEA
 41277                           fsr0l	equ	0xFE9
 41278                           wreg	equ	0xFE8
 41279                           postinc1	equ	0xFE6
 41280                           postdec1	equ	0xFE5
 41281                           plusw1	equ	0xFE3
 41282                           fsr1h	equ	0xFE2
 41283                           fsr1l	equ	0xFE1
 41284                           indf2	equ	0xFDF
 41285                           postinc2	equ	0xFDE
 41286                           postdec2	equ	0xFDD
 41287                           plusw2	equ	0xFDB
 41288                           fsr2h	equ	0xFDA
 41289                           fsr2l	equ	0xFD9
 41290                           status	equ	0xFD8
 41291                           
 41292 ;; *************** function _SwTimersInterrupt *****************
 41293 ;; Defined at:
 41294 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41295 ;; Parameters:    Size  Location     Type
 41296 ;;		None
 41297 ;; Auto vars:     Size  Location     Type
 41298 ;;  ticksToNextT    4   48[BANK0 ] unsigned long 
 41299 ;;  timeElapsed     4   44[BANK0 ] unsigned long 
 41300 ;;  i               1   52[BANK0 ] unsigned char 
 41301 ;; Return value:  Size  Location     Type
 41302 ;;                  4   36[BANK0 ] unsigned long 
 41303 ;; Registers used:
 41304 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41305 ;; Tracked objects:
 41306 ;;		On entry : 0/0
 41307 ;;		On exit  : 0/0
 41308 ;;		Unchanged: 0/0
 41309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41311 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41312 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41313 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41314 ;;Total ram usage:       17 bytes
 41315 ;; Hardware stack levels used:    1
 41316 ;; Hardware stack levels required when called:    9
 41317 ;; This function calls:
 41318 ;;		_TMR_GetDeltaTime
 41319 ;; This function is called by:
 41320 ;;		_SwTimerReadValue
 41321 ;;		_SwTimerStart
 41322 ;;		_SwTimersCanSleep
 41323 ;; This function uses a non-reentrant model
 41324 ;;
 41325                           
 41326                           	psect	text191
 41327  006E78                     __ptext191:
 41328                           	opt stack 0
 41329  006E78                     _SwTimersInterrupt:
 41330                           	opt stack 17
 41331                           
 41332                           ;sw_timer.c: 289: uint8_t i;
 41333                           ;sw_timer.c: 290: uint32_t timeElapsed;
 41334                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 41335                           
 41336                           ; BSR set to: 0
 41337                           ;incstack = 0
 41338  006E78  0100               	movlb	0	; () banked
 41339  006E7A  6990               	setf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),b
 41340  006E7C  6991               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),b
 41341  006E7E  6992               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),b
 41342  006E80  6993               	setf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),b
 41343                           
 41344                           ; BSR set to: 0
 41345                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 41346  006E82  EC1F  F02B         	call	_TMR_GetDeltaTime	;wreg free
 41347  006E86  C06C  F08C         	movff	?_TMR_GetDeltaTime,SwTimersInterrupt@timeElapsed
 41348  006E8A  C06D  F08D         	movff	?_TMR_GetDeltaTime+1,SwTimersInterrupt@timeElapsed+1
 41349  006E8E  C06E  F08E         	movff	?_TMR_GetDeltaTime+2,SwTimersInterrupt@timeElapsed+2
 41350  006E92  C06F  F08F         	movff	?_TMR_GetDeltaTime+3,SwTimersInterrupt@timeElapsed+3
 41351                           
 41352                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 41353  006E96  0E00               	movlw	0
 41354  006E98  0100               	movlb	0	; () banked
 41355  006E9A  6F94               	movwf	SwTimersInterrupt@i& (0+255),b
 41356  006E9C  D071               	goto	l13463
 41357  006E9E                     l13451:
 41358                           
 41359                           ; BSR set to: 0
 41360                           ;sw_timer.c: 298: {
 41361                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 41362  006E9E  0100               	movlb	0	; () banked
 41363  006EA0  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41364  006EA2  0D08               	mullw	8
 41365  006EA4  0E04               	movlw	4
 41366  006EA6  26F3               	addwf	prodl,f,c
 41367  006EA8  0E00               	movlw	0
 41368  006EAA  22F4               	addwfc	prodh,f,c
 41369  006EAC  0E00               	movlw	low _swTimers
 41370  006EAE  24F3               	addwf	prodl,w,c
 41371  006EB0  6ED9               	movwf	fsr2l,c
 41372  006EB2  0E03               	movlw	high _swTimers
 41373  006EB4  20F4               	addwfc	prodh,w,c
 41374  006EB6  6EDA               	movwf	fsr2h,c
 41375  006EB8  04DE               	decf	postinc2,w,c
 41376  006EBA  A4D8               	btfss	status,2,c
 41377  006EBC  D05F               	goto	l13461
 41378                           
 41379                           ; BSR set to: 0
 41380                           ;sw_timer.c: 302: {
 41381                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 41382  006EBE  0100               	movlb	0	; () banked
 41383  006EC0  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41384  006EC2  0D08               	mullw	8
 41385  006EC4  0E00               	movlw	low _swTimers
 41386  006EC6  24F3               	addwf	prodl,w,c
 41387  006EC8  6ED9               	movwf	fsr2l,c
 41388  006ECA  0E03               	movlw	high _swTimers
 41389  006ECC  20F4               	addwfc	prodh,w,c
 41390  006ECE  6EDA               	movwf	fsr2h,c
 41391  006ED0  50DE               	movf	postinc2,w,c
 41392  006ED2  0100               	movlb	0	; () banked
 41393  006ED4  5D8C               	subwf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 41394  006ED6  50DE               	movf	postinc2,w,c
 41395  006ED8  0100               	movlb	0	; () banked
 41396  006EDA  598D               	subwfb	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 41397  006EDC  50DE               	movf	postinc2,w,c
 41398  006EDE  0100               	movlb	0	; () banked
 41399  006EE0  598E               	subwfb	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 41400  006EE2  50DE               	movf	postinc2,w,c
 41401  006EE4  0100               	movlb	0	; () banked
 41402  006EE6  598F               	subwfb	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 41403  006EE8  A0D8               	btfss	status,0,c
 41404  006EEA  D00E               	goto	l13457
 41405                           
 41406                           ; BSR set to: 0
 41407                           ;sw_timer.c: 304: {
 41408                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 41409  006EEC  0100               	movlb	0	; () banked
 41410  006EEE  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41411  006EF0  0D08               	mullw	8
 41412  006EF2  0E00               	movlw	low _swTimers
 41413  006EF4  24F3               	addwf	prodl,w,c
 41414  006EF6  6ED9               	movwf	fsr2l,c
 41415  006EF8  0E03               	movlw	high _swTimers
 41416  006EFA  20F4               	addwfc	prodh,w,c
 41417  006EFC  6EDA               	movwf	fsr2h,c
 41418  006EFE  6ADE               	clrf	postinc2,c
 41419  006F00  6ADE               	clrf	postinc2,c
 41420  006F02  6ADE               	clrf	postinc2,c
 41421  006F04  6ADD               	clrf	postdec2,c
 41422                           
 41423                           ;sw_timer.c: 306: }
 41424  006F06  D03A               	goto	l13461
 41425  006F08                     l13457:
 41426                           
 41427                           ; BSR set to: 0
 41428                           ;sw_timer.c: 307: else
 41429                           ;sw_timer.c: 308: {
 41430                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 41431  006F08  0100               	movlb	0	; () banked
 41432  006F0A  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41433  006F0C  0D08               	mullw	8
 41434  006F0E  0E00               	movlw	low _swTimers
 41435  006F10  24F3               	addwf	prodl,w,c
 41436  006F12  6ED9               	movwf	fsr2l,c
 41437  006F14  0E03               	movlw	high _swTimers
 41438  006F16  20F4               	addwfc	prodh,w,c
 41439  006F18  6EDA               	movwf	fsr2h,c
 41440  006F1A  0100               	movlb	0	; () banked
 41441  006F1C  518C               	movf	SwTimersInterrupt@timeElapsed& (0+255),w,b
 41442  006F1E  5EDE               	subwf	postinc2,f,c
 41443  006F20  518D               	movf	(SwTimersInterrupt@timeElapsed+1)& (0+255),w,b
 41444  006F22  5ADE               	subwfb	postinc2,f,c
 41445  006F24  518E               	movf	(SwTimersInterrupt@timeElapsed+2)& (0+255),w,b
 41446  006F26  5ADE               	subwfb	postinc2,f,c
 41447  006F28  518F               	movf	(SwTimersInterrupt@timeElapsed+3)& (0+255),w,b
 41448  006F2A  5ADE               	subwfb	postinc2,f,c
 41449                           
 41450                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 41451  006F2C  0100               	movlb	0	; () banked
 41452  006F2E  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41453  006F30  0D08               	mullw	8
 41454  006F32  0E00               	movlw	low _swTimers
 41455  006F34  24F3               	addwf	prodl,w,c
 41456  006F36  6ED9               	movwf	fsr2l,c
 41457  006F38  0E03               	movlw	high _swTimers
 41458  006F3A  20F4               	addwfc	prodh,w,c
 41459  006F3C  6EDA               	movwf	fsr2h,c
 41460  006F3E  0100               	movlb	0	; () banked
 41461  006F40  5190               	movf	SwTimersInterrupt@ticksToNextTimerEvent& (0+255),w,b
 41462  006F42  5CDE               	subwf	postinc2,w,c
 41463  006F44  0100               	movlb	0	; () banked
 41464  006F46  5191               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+1)& (0+255),w,b
 41465  006F48  58DE               	subwfb	postinc2,w,c
 41466  006F4A  0100               	movlb	0	; () banked
 41467  006F4C  5192               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+2)& (0+255),w,b
 41468  006F4E  58DE               	subwfb	postinc2,w,c
 41469  006F50  0100               	movlb	0	; () banked
 41470  006F52  5193               	movf	(SwTimersInterrupt@ticksToNextTimerEvent+3)& (0+255),w,b
 41471  006F54  58DE               	subwfb	postinc2,w,c
 41472  006F56  B0D8               	btfsc	status,0,c
 41473  006F58  D011               	goto	l13461
 41474                           
 41475                           ; BSR set to: 0
 41476                           ;sw_timer.c: 313: {
 41477                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 41478  006F5A  0100               	movlb	0	; () banked
 41479  006F5C  5194               	movf	SwTimersInterrupt@i& (0+255),w,b
 41480  006F5E  0D08               	mullw	8
 41481  006F60  0E00               	movlw	low _swTimers
 41482  006F62  24F3               	addwf	prodl,w,c
 41483  006F64  6ED9               	movwf	fsr2l,c
 41484  006F66  0E03               	movlw	high _swTimers
 41485  006F68  20F4               	addwfc	prodh,w,c
 41486  006F6A  6EDA               	movwf	fsr2h,c
 41487  006F6C  CFDE F090          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent
 41488  006F70  CFDE F091          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+1
 41489  006F74  CFDE F092          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+2
 41490  006F78  CFDE F093          	movff	postinc2,SwTimersInterrupt@ticksToNextTimerEvent+3
 41491  006F7C                     l13461:
 41492                           
 41493                           ; BSR set to: 0
 41494  006F7C  0100               	movlb	0	; () banked
 41495  006F7E  2B94               	incf	SwTimersInterrupt@i& (0+255),f,b
 41496  006F80                     l13463:
 41497                           
 41498                           ; BSR set to: 0
 41499  006F80  0100               	movlb	0	; () banked
 41500  006F82  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 41501  006F84  0100               	movlb	0	; () banked
 41502  006F86  5D94               	subwf	SwTimersInterrupt@i& (0+255),w,b
 41503  006F88  A0D8               	btfss	status,0,c
 41504  006F8A  D789               	goto	l13451
 41505                           
 41506                           ; BSR set to: 0
 41507                           ;sw_timer.c: 315: }
 41508                           ;sw_timer.c: 316: }
 41509                           ;sw_timer.c: 317: }
 41510                           ;sw_timer.c: 318: }
 41511                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 41512  006F8C  C090  F084         	movff	SwTimersInterrupt@ticksToNextTimerEvent,?_SwTimersInterrupt
 41513  006F90  C091  F085         	movff	SwTimersInterrupt@ticksToNextTimerEvent+1,?_SwTimersInterrupt+1
 41514  006F94  C092  F086         	movff	SwTimersInterrupt@ticksToNextTimerEvent+2,?_SwTimersInterrupt+2
 41515  006F98  C093  F087         	movff	SwTimersInterrupt@ticksToNextTimerEvent+3,?_SwTimersInterrupt+3
 41516                           
 41517                           ; BSR set to: 0
 41518  006F9C  0012               	return		;funcret
 41519  006F9E                     __end_of_SwTimersInterrupt:
 41520                           	opt stack 0
 41521                           tosu	equ	0xFFF
 41522                           tosh	equ	0xFFE
 41523                           tosl	equ	0xFFD
 41524                           pclath	equ	0xFFA
 41525                           tblptru	equ	0xFF8
 41526                           tblptrh	equ	0xFF7
 41527                           tblptrl	equ	0xFF6
 41528                           tablat	equ	0xFF5
 41529                           prodh	equ	0xFF4
 41530                           prodl	equ	0xFF3
 41531                           intcon	equ	0xFF2
 41532                           intcon2	equ	0xFF1
 41533                           intcon3	equ	0xFF0
 41534                           indf0	equ	0xFEF
 41535                           postinc0	equ	0xFEE
 41536                           plusw0	equ	0xFEB
 41537                           fsr0h	equ	0xFEA
 41538                           fsr0l	equ	0xFE9
 41539                           wreg	equ	0xFE8
 41540                           postinc1	equ	0xFE6
 41541                           postdec1	equ	0xFE5
 41542                           plusw1	equ	0xFE3
 41543                           fsr1h	equ	0xFE2
 41544                           fsr1l	equ	0xFE1
 41545                           indf2	equ	0xFDF
 41546                           postinc2	equ	0xFDE
 41547                           postdec2	equ	0xFDD
 41548                           plusw2	equ	0xFDB
 41549                           fsr2h	equ	0xFDA
 41550                           fsr2l	equ	0xFD9
 41551                           status	equ	0xFD8
 41552                           
 41553 ;; *************** function _TMR_GetDeltaTime *****************
 41554 ;; Defined at:
 41555 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41556 ;; Parameters:    Size  Location     Type
 41557 ;;		None
 41558 ;; Auto vars:     Size  Location     Type
 41559 ;;		None
 41560 ;; Return value:  Size  Location     Type
 41561 ;;                  4   12[BANK0 ] unsigned long 
 41562 ;; Registers used:
 41563 ;;		wreg, status,2, status,0, cstack
 41564 ;; Tracked objects:
 41565 ;;		On entry : 0/0
 41566 ;;		On exit  : 0/0
 41567 ;;		Unchanged: 0/0
 41568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41571 ;;      Temps:          0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41572 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41573 ;;Total ram usage:       24 bytes
 41574 ;; Hardware stack levels used:    1
 41575 ;; Hardware stack levels required when called:    8
 41576 ;; This function calls:
 41577 ;;		_TMR1_ReadTimer
 41578 ;; This function is called by:
 41579 ;;		_SwTimersInterrupt
 41580 ;; This function uses a non-reentrant model
 41581 ;;
 41582                           
 41583                           	psect	text192
 41584  00563E                     __ptext192:
 41585                           	opt stack 0
 41586  00563E                     _TMR_GetDeltaTime:
 41587                           	opt stack 17
 41588                           
 41589                           ;sw_timer.c: 90: static uint32_t retVal;
 41590                           ;sw_timer.c: 91: static uint16_t tmrVal;
 41591                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 41592                           
 41593                           ; BSR set to: 0
 41594                           ;incstack = 0
 41595  00563E  EC75  F04F         	call	_TMR1_ReadTimer	;wreg free
 41596  005642  C064  F044         	movff	?_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 41597  005646  C065  F045         	movff	?_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 41598                           
 41599                           ;sw_timer.c: 95: if (timerOverflow == 1)
 41600  00564A  044D               	decf	_timerOverflow,w,c	;volatile
 41601  00564C  A4D8               	btfss	status,2,c
 41602  00564E  D092               	goto	l13241
 41603                           
 41604                           ;sw_timer.c: 96: {
 41605                           ;sw_timer.c: 97: timerOverflow = 0;
 41606  005650  0E00               	movlw	0
 41607  005652  6E4D               	movwf	_timerOverflow,c	;volatile
 41608                           
 41609                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 41610  005654  C03C  F070         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 41611  005658  C03D  F071         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 41612  00565C  C03E  F072         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 41613  005660  C03F  F073         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 41614  005664  0100               	movlb	0	; () banked
 41615  005666  1F70               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 41616  005668  1F71               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41617  00566A  1F72               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41618  00566C  1F73               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41619  00566E  2B70               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 41620  005670  0E00               	movlw	0
 41621  005672  2371               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41622  005674  2372               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41623  005676  2373               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41624  005678  0100               	movlb	0	; () banked
 41625  00567A  51F9               	movf	_reloadVal& (0+255),w,b	;volatile
 41626  00567C  0100               	movlb	0	; () banked
 41627  00567E  6F74               	movwf	(??_TMR_GetDeltaTime+4)& (0+255),b
 41628  005680  0100               	movlb	0	; () banked
 41629  005682  51FA               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 41630  005684  0100               	movlb	0	; () banked
 41631  005686  6F75               	movwf	(??_TMR_GetDeltaTime+5)& (0+255),b
 41632  005688  0100               	movlb	0	; () banked
 41633  00568A  6B76               	clrf	(??_TMR_GetDeltaTime+6)& (0+255),b
 41634  00568C  0100               	movlb	0	; () banked
 41635  00568E  6B77               	clrf	(??_TMR_GetDeltaTime+7)& (0+255),b
 41636  005690  0100               	movlb	0	; () banked
 41637  005692  1F74               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41638  005694  1F75               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41639  005696  1F76               	comf	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 41640  005698  1F77               	comf	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 41641  00569A  2B74               	incf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41642  00569C  0E00               	movlw	0
 41643  00569E  2375               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41644  0056A0  2376               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),f,b
 41645  0056A2  2377               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),f,b
 41646  0056A4  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 41647  0056A6  0100               	movlb	0	; () banked
 41648  0056A8  2574               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 41649  0056AA  0100               	movlb	0	; () banked
 41650  0056AC  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 41651  0056AE  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 41652  0056B0  0100               	movlb	0	; () banked
 41653  0056B2  2175               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 41654  0056B4  0100               	movlb	0	; () banked
 41655  0056B6  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 41656  0056B8  0E00               	movlw	0
 41657  0056BA  0100               	movlb	0	; () banked
 41658  0056BC  2176               	addwfc	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 41659  0056BE  0100               	movlb	0	; () banked
 41660  0056C0  6F7A               	movwf	(??_TMR_GetDeltaTime+10)& (0+255),b
 41661  0056C2  0E00               	movlw	0
 41662  0056C4  0100               	movlb	0	; () banked
 41663  0056C6  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 41664  0056C8  0100               	movlb	0	; () banked
 41665  0056CA  6F7B               	movwf	(??_TMR_GetDeltaTime+11)& (0+255),b
 41666  0056CC  0100               	movlb	0	; () banked
 41667  0056CE  5170               	movf	??_TMR_GetDeltaTime& (0+255),w,b
 41668  0056D0  0100               	movlb	0	; () banked
 41669  0056D2  2578               	addwf	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 41670  0056D4  0100               	movlb	0	; () banked
 41671  0056D6  6F7C               	movwf	(??_TMR_GetDeltaTime+12)& (0+255),b
 41672  0056D8  0100               	movlb	0	; () banked
 41673  0056DA  5171               	movf	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 41674  0056DC  0100               	movlb	0	; () banked
 41675  0056DE  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 41676  0056E0  0100               	movlb	0	; () banked
 41677  0056E2  6F7D               	movwf	(??_TMR_GetDeltaTime+13)& (0+255),b
 41678  0056E4  0100               	movlb	0	; () banked
 41679  0056E6  5172               	movf	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 41680  0056E8  0100               	movlb	0	; () banked
 41681  0056EA  217A               	addwfc	(??_TMR_GetDeltaTime+10)& (0+255),w,b
 41682  0056EC  0100               	movlb	0	; () banked
 41683  0056EE  6F7E               	movwf	(??_TMR_GetDeltaTime+14)& (0+255),b
 41684  0056F0  0100               	movlb	0	; () banked
 41685  0056F2  5173               	movf	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 41686  0056F4  0100               	movlb	0	; () banked
 41687  0056F6  217B               	addwfc	(??_TMR_GetDeltaTime+11)& (0+255),w,b
 41688  0056F8  0100               	movlb	0	; () banked
 41689  0056FA  6F7F               	movwf	(??_TMR_GetDeltaTime+15)& (0+255),b
 41690  0056FC  5040               	movf	_ticksAdded,w,c	;volatile
 41691  0056FE  0100               	movlb	0	; () banked
 41692  005700  257C               	addwf	(??_TMR_GetDeltaTime+12)& (0+255),w,b
 41693  005702  0100               	movlb	0	; () banked
 41694  005704  6F80               	movwf	(??_TMR_GetDeltaTime+16)& (0+255),b
 41695  005706  5041               	movf	_ticksAdded+1,w,c	;volatile
 41696  005708  0100               	movlb	0	; () banked
 41697  00570A  217D               	addwfc	(??_TMR_GetDeltaTime+13)& (0+255),w,b
 41698  00570C  0100               	movlb	0	; () banked
 41699  00570E  6F81               	movwf	(??_TMR_GetDeltaTime+17)& (0+255),b
 41700  005710  5042               	movf	_ticksAdded+2,w,c	;volatile
 41701  005712  0100               	movlb	0	; () banked
 41702  005714  217E               	addwfc	(??_TMR_GetDeltaTime+14)& (0+255),w,b
 41703  005716  0100               	movlb	0	; () banked
 41704  005718  6F82               	movwf	(??_TMR_GetDeltaTime+18)& (0+255),b
 41705  00571A  5043               	movf	_ticksAdded+3,w,c	;volatile
 41706  00571C  0100               	movlb	0	; () banked
 41707  00571E  217F               	addwfc	(??_TMR_GetDeltaTime+15)& (0+255),w,b
 41708  005720  0100               	movlb	0	; () banked
 41709  005722  6F83               	movwf	(??_TMR_GetDeltaTime+19)& (0+255),b
 41710  005724  0E00               	movlw	0
 41711  005726  0100               	movlb	0	; () banked
 41712  005728  2580               	addwf	(??_TMR_GetDeltaTime+16)& (0+255),w,b
 41713  00572A  0101               	movlb	1	; () banked
 41714  00572C  6F82               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41715  00572E  0E00               	movlw	0
 41716  005730  0100               	movlb	0	; () banked
 41717  005732  2181               	addwfc	(??_TMR_GetDeltaTime+17)& (0+255),w,b
 41718  005734  0101               	movlb	1	; () banked
 41719  005736  6F83               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41720  005738  0E01               	movlw	1
 41721  00573A  0100               	movlb	0	; () banked
 41722  00573C  2182               	addwfc	(??_TMR_GetDeltaTime+18)& (0+255),w,b
 41723  00573E  0101               	movlb	1	; () banked
 41724  005740  6F84               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41725  005742  0E00               	movlw	0
 41726  005744  0100               	movlb	0	; () banked
 41727  005746  2183               	addwfc	(??_TMR_GetDeltaTime+19)& (0+255),w,b
 41728  005748  0101               	movlb	1	; () banked
 41729  00574A  6F85               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41730                           
 41731                           ; BSR set to: 1
 41732                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 41733  00574C  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 41734  005750  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 41735  005754  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 41736  005756  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 41737                           
 41738                           ; BSR set to: 1
 41739                           ;sw_timer.c: 100: ticksAdded = 0;
 41740  005758  0E00               	movlw	0
 41741  00575A  6E40               	movwf	_ticksAdded,c	;volatile
 41742  00575C  0E00               	movlw	0
 41743  00575E  6E41               	movwf	_ticksAdded+1,c	;volatile
 41744  005760  0E00               	movlw	0
 41745  005762  6E42               	movwf	_ticksAdded+2,c	;volatile
 41746  005764  0E00               	movlw	0
 41747  005766  6E43               	movwf	_ticksAdded+3,c	;volatile
 41748                           
 41749                           ; BSR set to: 1
 41750                           ;sw_timer.c: 101: reloadVal = 0;
 41751  005768  0E00               	movlw	0
 41752  00576A  0100               	movlb	0	; () banked
 41753  00576C  6FFA               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 41754  00576E  0E00               	movlw	0
 41755  005770  6FF9               	movwf	_reloadVal& (0+255),b	;volatile
 41756                           
 41757                           ;sw_timer.c: 102: }
 41758  005772  D057               	goto	l13243
 41759  005774                     l13241:
 41760                           
 41761                           ;sw_timer.c: 103: else
 41762                           ;sw_timer.c: 104: {
 41763                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 41764  005774  C03C  F070         	movff	_ticksAccounted,??_TMR_GetDeltaTime	;volatile
 41765  005778  C03D  F071         	movff	_ticksAccounted+1,??_TMR_GetDeltaTime+1	;volatile
 41766  00577C  C03E  F072         	movff	_ticksAccounted+2,??_TMR_GetDeltaTime+2	;volatile
 41767  005780  C03F  F073         	movff	_ticksAccounted+3,??_TMR_GetDeltaTime+3	;volatile
 41768  005784  0100               	movlb	0	; () banked
 41769  005786  1F70               	comf	??_TMR_GetDeltaTime& (0+255),f,b
 41770  005788  1F71               	comf	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41771  00578A  1F72               	comf	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41772  00578C  1F73               	comf	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41773  00578E  2B70               	incf	??_TMR_GetDeltaTime& (0+255),f,b
 41774  005790  0E00               	movlw	0
 41775  005792  2371               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),f,b
 41776  005794  2372               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),f,b
 41777  005796  2373               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),f,b
 41778  005798  C0F9  F074         	movff	_reloadVal,??_TMR_GetDeltaTime+4	;volatile
 41779  00579C  C0FA  F075         	movff	_reloadVal+1,??_TMR_GetDeltaTime+5	;volatile
 41780  0057A0  0100               	movlb	0	; () banked
 41781  0057A2  1F74               	comf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41782  0057A4  1F75               	comf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41783  0057A6  4B74               	infsnz	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41784  0057A8  2B75               	incf	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41785  0057AA  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 41786  0057AC  0100               	movlb	0	; () banked
 41787  0057AE  2774               	addwf	(??_TMR_GetDeltaTime+4)& (0+255),f,b
 41788  0057B0  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 41789  0057B2  0100               	movlb	0	; () banked
 41790  0057B4  2375               	addwfc	(??_TMR_GetDeltaTime+5)& (0+255),f,b
 41791  0057B6  0100               	movlb	0	; () banked
 41792  0057B8  5174               	movf	(??_TMR_GetDeltaTime+4)& (0+255),w,b
 41793  0057BA  0100               	movlb	0	; () banked
 41794  0057BC  2570               	addwf	??_TMR_GetDeltaTime& (0+255),w,b
 41795  0057BE  0100               	movlb	0	; () banked
 41796  0057C0  6F76               	movwf	(??_TMR_GetDeltaTime+6)& (0+255),b
 41797  0057C2  0100               	movlb	0	; () banked
 41798  0057C4  5175               	movf	(??_TMR_GetDeltaTime+5)& (0+255),w,b
 41799  0057C6  0100               	movlb	0	; () banked
 41800  0057C8  2171               	addwfc	(??_TMR_GetDeltaTime+1)& (0+255),w,b
 41801  0057CA  0100               	movlb	0	; () banked
 41802  0057CC  6F77               	movwf	(??_TMR_GetDeltaTime+7)& (0+255),b
 41803  0057CE  0E00               	movlw	0
 41804  0057D0  0100               	movlb	0	; () banked
 41805  0057D2  2172               	addwfc	(??_TMR_GetDeltaTime+2)& (0+255),w,b
 41806  0057D4  0100               	movlb	0	; () banked
 41807  0057D6  6F78               	movwf	(??_TMR_GetDeltaTime+8)& (0+255),b
 41808  0057D8  0E00               	movlw	0
 41809  0057DA  0100               	movlb	0	; () banked
 41810  0057DC  2173               	addwfc	(??_TMR_GetDeltaTime+3)& (0+255),w,b
 41811  0057DE  0100               	movlb	0	; () banked
 41812  0057E0  6F79               	movwf	(??_TMR_GetDeltaTime+9)& (0+255),b
 41813  0057E2  5040               	movf	_ticksAdded,w,c	;volatile
 41814  0057E4  0100               	movlb	0	; () banked
 41815  0057E6  2576               	addwf	(??_TMR_GetDeltaTime+6)& (0+255),w,b
 41816  0057E8  0101               	movlb	1	; () banked
 41817  0057EA  6F82               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 41818  0057EC  5041               	movf	_ticksAdded+1,w,c	;volatile
 41819  0057EE  0100               	movlb	0	; () banked
 41820  0057F0  2177               	addwfc	(??_TMR_GetDeltaTime+7)& (0+255),w,b
 41821  0057F2  0101               	movlb	1	; () banked
 41822  0057F4  6F83               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 41823  0057F6  5042               	movf	_ticksAdded+2,w,c	;volatile
 41824  0057F8  0100               	movlb	0	; () banked
 41825  0057FA  2178               	addwfc	(??_TMR_GetDeltaTime+8)& (0+255),w,b
 41826  0057FC  0101               	movlb	1	; () banked
 41827  0057FE  6F84               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 41828  005800  5043               	movf	_ticksAdded+3,w,c	;volatile
 41829  005802  0100               	movlb	0	; () banked
 41830  005804  2179               	addwfc	(??_TMR_GetDeltaTime+9)& (0+255),w,b
 41831  005806  0101               	movlb	1	; () banked
 41832  005808  6F85               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 41833                           
 41834                           ;sw_timer.c: 106: ticksAccounted += retVal;
 41835  00580A  0101               	movlb	1	; () banked
 41836  00580C  5182               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 41837  00580E  263C               	addwf	_ticksAccounted,f,c	;volatile
 41838  005810  0101               	movlb	1	; () banked
 41839  005812  5183               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 41840  005814  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 41841  005816  0101               	movlb	1	; () banked
 41842  005818  5184               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 41843  00581A  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 41844  00581C  0101               	movlb	1	; () banked
 41845  00581E  5185               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 41846  005820  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 41847  005822                     l13243:
 41848                           
 41849                           ;sw_timer.c: 107: }
 41850                           ;sw_timer.c: 109: return retVal;
 41851  005822  C182  F06C         	movff	TMR_GetDeltaTime@retVal,?_TMR_GetDeltaTime
 41852  005826  C183  F06D         	movff	TMR_GetDeltaTime@retVal+1,?_TMR_GetDeltaTime+1
 41853  00582A  C184  F06E         	movff	TMR_GetDeltaTime@retVal+2,?_TMR_GetDeltaTime+2
 41854  00582E  C185  F06F         	movff	TMR_GetDeltaTime@retVal+3,?_TMR_GetDeltaTime+3
 41855  005832  0012               	return	
 41856  005834                     __end_of_TMR_GetDeltaTime:
 41857                           	opt stack 0
 41858                           tosu	equ	0xFFF
 41859                           tosh	equ	0xFFE
 41860                           tosl	equ	0xFFD
 41861                           pclath	equ	0xFFA
 41862                           tblptru	equ	0xFF8
 41863                           tblptrh	equ	0xFF7
 41864                           tblptrl	equ	0xFF6
 41865                           tablat	equ	0xFF5
 41866                           prodh	equ	0xFF4
 41867                           prodl	equ	0xFF3
 41868                           intcon	equ	0xFF2
 41869                           intcon2	equ	0xFF1
 41870                           intcon3	equ	0xFF0
 41871                           indf0	equ	0xFEF
 41872                           postinc0	equ	0xFEE
 41873                           plusw0	equ	0xFEB
 41874                           fsr0h	equ	0xFEA
 41875                           fsr0l	equ	0xFE9
 41876                           wreg	equ	0xFE8
 41877                           postinc1	equ	0xFE6
 41878                           postdec1	equ	0xFE5
 41879                           plusw1	equ	0xFE3
 41880                           fsr1h	equ	0xFE2
 41881                           fsr1l	equ	0xFE1
 41882                           indf2	equ	0xFDF
 41883                           postinc2	equ	0xFDE
 41884                           postdec2	equ	0xFDD
 41885                           plusw2	equ	0xFDB
 41886                           fsr2h	equ	0xFDA
 41887                           fsr2l	equ	0xFD9
 41888                           status	equ	0xFD8
 41889                           
 41890 ;; *************** function _TMR1_ReadTimer *****************
 41891 ;; Defined at:
 41892 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 41893 ;; Parameters:    Size  Location     Type
 41894 ;;		None
 41895 ;; Auto vars:     Size  Location     Type
 41896 ;;  readVal         2    8[BANK0 ] unsigned int 
 41897 ;;  readValLow      1   11[BANK0 ] unsigned char 
 41898 ;;  readValHigh     1   10[BANK0 ] unsigned char 
 41899 ;; Return value:  Size  Location     Type
 41900 ;;                  2    4[BANK0 ] unsigned int 
 41901 ;; Registers used:
 41902 ;;		wreg, status,2
 41903 ;; Tracked objects:
 41904 ;;		On entry : 0/0
 41905 ;;		On exit  : 0/0
 41906 ;;		Unchanged: 0/0
 41907 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 41908 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41909 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41910 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41911 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 41912 ;;Total ram usage:        8 bytes
 41913 ;; Hardware stack levels used:    1
 41914 ;; Hardware stack levels required when called:    7
 41915 ;; This function calls:
 41916 ;;		Nothing
 41917 ;; This function is called by:
 41918 ;;		_TMR_GetDeltaTime
 41919 ;;		_TMR_SwapTimer
 41920 ;; This function uses a non-reentrant model
 41921 ;;
 41922                           
 41923                           	psect	text193
 41924  009EEA                     __ptext193:
 41925                           	opt stack 0
 41926  009EEA                     _TMR1_ReadTimer:
 41927                           	opt stack 17
 41928                           
 41929                           ;tmr1.c: 108: uint16_t readVal;
 41930                           ;tmr1.c: 109: uint8_t readValHigh;
 41931                           ;tmr1.c: 110: uint8_t readValLow;
 41932                           ;tmr1.c: 112: readValLow = TMR1L;
 41933                           
 41934                           ;incstack = 0
 41935  009EEA  CFCE F06B          	movff	4046,TMR1_ReadTimer@readValLow	;volatile
 41936                           
 41937                           ;tmr1.c: 113: readValHigh = TMR1H;
 41938  009EEE  CFCF F06A          	movff	4047,TMR1_ReadTimer@readValHigh	;volatile
 41939                           
 41940                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 41941  009EF2  0100               	movlb	0	; () banked
 41942  009EF4  516A               	movf	TMR1_ReadTimer@readValHigh& (0+255),w,b
 41943  009EF6  0100               	movlb	0	; () banked
 41944  009EF8  6F66               	movwf	??_TMR1_ReadTimer& (0+255),b
 41945  009EFA  0100               	movlb	0	; () banked
 41946  009EFC  516B               	movf	TMR1_ReadTimer@readValLow& (0+255),w,b
 41947  009EFE  0100               	movlb	0	; () banked
 41948  009F00  6F68               	movwf	TMR1_ReadTimer@readVal& (0+255),b
 41949  009F02  C066  F069         	movff	??_TMR1_ReadTimer,TMR1_ReadTimer@readVal+1
 41950                           
 41951                           ; BSR set to: 0
 41952                           ;tmr1.c: 117: return readVal;
 41953  009F06  C068  F064         	movff	TMR1_ReadTimer@readVal,?_TMR1_ReadTimer
 41954  009F0A  C069  F065         	movff	TMR1_ReadTimer@readVal+1,?_TMR1_ReadTimer+1
 41955  009F0E  0012               	return	
 41956  009F10                     __end_of_TMR1_ReadTimer:
 41957                           	opt stack 0
 41958                           tosu	equ	0xFFF
 41959                           tosh	equ	0xFFE
 41960                           tosl	equ	0xFFD
 41961                           pclath	equ	0xFFA
 41962                           tblptru	equ	0xFF8
 41963                           tblptrh	equ	0xFF7
 41964                           tblptrl	equ	0xFF6
 41965                           tablat	equ	0xFF5
 41966                           prodh	equ	0xFF4
 41967                           prodl	equ	0xFF3
 41968                           intcon	equ	0xFF2
 41969                           intcon2	equ	0xFF1
 41970                           intcon3	equ	0xFF0
 41971                           indf0	equ	0xFEF
 41972                           postinc0	equ	0xFEE
 41973                           plusw0	equ	0xFEB
 41974                           fsr0h	equ	0xFEA
 41975                           fsr0l	equ	0xFE9
 41976                           wreg	equ	0xFE8
 41977                           postinc1	equ	0xFE6
 41978                           postdec1	equ	0xFE5
 41979                           plusw1	equ	0xFE3
 41980                           fsr1h	equ	0xFE2
 41981                           fsr1l	equ	0xFE1
 41982                           indf2	equ	0xFDF
 41983                           postinc2	equ	0xFDE
 41984                           postdec2	equ	0xFDD
 41985                           plusw2	equ	0xFDB
 41986                           fsr2h	equ	0xFDA
 41987                           fsr2l	equ	0xFD9
 41988                           status	equ	0xFD8
 41989                           
 41990 ;; *************** function _SwTimerSetTimeout *****************
 41991 ;; Defined at:
 41992 ;;		line 186 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 41993 ;; Parameters:    Size  Location     Type
 41994 ;;  timerId         1    wreg     unsigned char 
 41995 ;;  timeout         4   17[BANK0 ] unsigned long 
 41996 ;; Auto vars:     Size  Location     Type
 41997 ;;  timerId         1   25[BANK0 ] unsigned char 
 41998 ;; Return value:  Size  Location     Type
 41999 ;;                  1    wreg      void 
 42000 ;; Registers used:
 42001 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42002 ;; Tracked objects:
 42003 ;;		On entry : 0/0
 42004 ;;		On exit  : 0/0
 42005 ;;		Unchanged: 0/0
 42006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42007 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42008 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42009 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42010 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42011 ;;Total ram usage:        9 bytes
 42012 ;; Hardware stack levels used:    1
 42013 ;; Hardware stack levels required when called:    7
 42014 ;; This function calls:
 42015 ;;		Nothing
 42016 ;; This function is called by:
 42017 ;;		_RADIO_Transmit
 42018 ;;		_RADIO_ReceiveStart
 42019 ;;		_LORAWAN_TxDone
 42020 ;;		_LORAWAN_RxTimeout
 42021 ;;		_StartReTxTimer
 42022 ;;		_DutyCycleCallback
 42023 ;;		_LORAWAN_Join
 42024 ;;		_LORAWAN_LinkCheckConfigure
 42025 ;;		_LORAWAN_LinkCheckCallback
 42026 ;;		_UpdateRetransmissionAckTimeoutState
 42027 ;;		_UpdateJoinSuccessState
 42028 ;; This function uses a non-reentrant model
 42029 ;;
 42030                           
 42031                           	psect	text194
 42032  0094E0                     __ptext194:
 42033                           	opt stack 0
 42034  0094E0                     _SwTimerSetTimeout:
 42035                           	opt stack 20
 42036                           
 42037                           ; BSR set to: 0
 42038                           ;incstack = 0
 42039                           ;SwTimerSetTimeout@timerId stored from wreg
 42040  0094E0  0100               	movlb	0	; () banked
 42041  0094E2  6F79               	movwf	SwTimerSetTimeout@timerId& (0+255),b
 42042                           
 42043                           ;sw_timer.c: 188: (INTCONbits.GIE = 0);
 42044  0094E4  9EF2               	bcf	intcon,7,c	;volatile
 42045                           
 42046                           ;sw_timer.c: 189: swTimers[timerId].ticksRemaining = timeout - 32;
 42047  0094E6  0EE0               	movlw	224
 42048  0094E8  0100               	movlb	0	; () banked
 42049  0094EA  2571               	addwf	SwTimerSetTimeout@timeout& (0+255),w,b
 42050  0094EC  0100               	movlb	0	; () banked
 42051  0094EE  6F75               	movwf	??_SwTimerSetTimeout& (0+255),b
 42052  0094F0  0EFF               	movlw	255
 42053  0094F2  0100               	movlb	0	; () banked
 42054  0094F4  2172               	addwfc	(SwTimerSetTimeout@timeout+1)& (0+255),w,b
 42055  0094F6  0100               	movlb	0	; () banked
 42056  0094F8  6F76               	movwf	(??_SwTimerSetTimeout+1)& (0+255),b
 42057  0094FA  0EFF               	movlw	255
 42058  0094FC  0100               	movlb	0	; () banked
 42059  0094FE  2173               	addwfc	(SwTimerSetTimeout@timeout+2)& (0+255),w,b
 42060  009500  0100               	movlb	0	; () banked
 42061  009502  6F77               	movwf	(??_SwTimerSetTimeout+2)& (0+255),b
 42062  009504  0EFF               	movlw	255
 42063  009506  0100               	movlb	0	; () banked
 42064  009508  2174               	addwfc	(SwTimerSetTimeout@timeout+3)& (0+255),w,b
 42065  00950A  0100               	movlb	0	; () banked
 42066  00950C  6F78               	movwf	(??_SwTimerSetTimeout+3)& (0+255),b
 42067  00950E  0100               	movlb	0	; () banked
 42068  009510  5179               	movf	SwTimerSetTimeout@timerId& (0+255),w,b
 42069  009512  0D08               	mullw	8
 42070  009514  0E00               	movlw	low _swTimers
 42071  009516  24F3               	addwf	prodl,w,c
 42072  009518  6ED9               	movwf	fsr2l,c
 42073  00951A  0E03               	movlw	high _swTimers
 42074  00951C  20F4               	addwfc	prodh,w,c
 42075  00951E  6EDA               	movwf	fsr2h,c
 42076  009520  C075  FFDE         	movff	??_SwTimerSetTimeout,postinc2
 42077  009524  C076  FFDE         	movff	??_SwTimerSetTimeout+1,postinc2
 42078  009528  C077  FFDE         	movff	??_SwTimerSetTimeout+2,postinc2
 42079  00952C  C078  FFDE         	movff	??_SwTimerSetTimeout+3,postinc2
 42080                           
 42081                           ; BSR set to: 0
 42082                           ;sw_timer.c: 190: (INTCONbits.GIE = 1);
 42083  009530  8EF2               	bsf	intcon,7,c	;volatile
 42084                           
 42085                           ; BSR set to: 0
 42086  009532  0012               	return		;funcret
 42087  009534                     __end_of_SwTimerSetTimeout:
 42088                           	opt stack 0
 42089                           tosu	equ	0xFFF
 42090                           tosh	equ	0xFFE
 42091                           tosl	equ	0xFFD
 42092                           pclath	equ	0xFFA
 42093                           tblptru	equ	0xFF8
 42094                           tblptrh	equ	0xFF7
 42095                           tblptrl	equ	0xFF6
 42096                           tablat	equ	0xFF5
 42097                           prodh	equ	0xFF4
 42098                           prodl	equ	0xFF3
 42099                           intcon	equ	0xFF2
 42100                           intcon2	equ	0xFF1
 42101                           intcon3	equ	0xFF0
 42102                           indf0	equ	0xFEF
 42103                           postinc0	equ	0xFEE
 42104                           plusw0	equ	0xFEB
 42105                           fsr0h	equ	0xFEA
 42106                           fsr0l	equ	0xFE9
 42107                           wreg	equ	0xFE8
 42108                           postinc1	equ	0xFE6
 42109                           postdec1	equ	0xFE5
 42110                           plusw1	equ	0xFE3
 42111                           fsr1h	equ	0xFE2
 42112                           fsr1l	equ	0xFE1
 42113                           indf2	equ	0xFDF
 42114                           postinc2	equ	0xFDE
 42115                           postdec2	equ	0xFDD
 42116                           plusw2	equ	0xFDB
 42117                           fsr2h	equ	0xFDA
 42118                           fsr2l	equ	0xFD9
 42119                           status	equ	0xFD8
 42120                           
 42121 ;; *************** function _InitDefault868Channels *****************
 42122 ;; Defined at:
 42123 ;;		line 979 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42124 ;; Parameters:    Size  Location     Type
 42125 ;;		None
 42126 ;; Auto vars:     Size  Location     Type
 42127 ;;  i               1   14[BANK0 ] unsigned char 
 42128 ;; Return value:  Size  Location     Type
 42129 ;;                  1    wreg      void 
 42130 ;; Registers used:
 42131 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42132 ;; Tracked objects:
 42133 ;;		On entry : 0/0
 42134 ;;		On exit  : 0/0
 42135 ;;		Unchanged: 0/0
 42136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42138 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42140 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42141 ;;Total ram usage:        1 bytes
 42142 ;; Hardware stack levels used:    1
 42143 ;; Hardware stack levels required when called:    8
 42144 ;; This function calls:
 42145 ;;		_memcpy
 42146 ;;		_memset
 42147 ;; This function is called by:
 42148 ;;		_LORAWAN_Reset
 42149 ;; This function uses a non-reentrant model
 42150 ;;
 42151                           
 42152                           	psect	text195
 42153  0084AC                     __ptext195:
 42154                           	opt stack 0
 42155  0084AC                     _InitDefault868Channels:
 42156                           	opt stack 20
 42157                           
 42158                           ;lorawan_eu.c: 981: uint8_t i;
 42159                           ;lorawan_eu.c: 983: memset (Channels, 0, sizeof(Channels) );
 42160                           
 42161                           ; BSR set to: 0
 42162                           ;incstack = 0
 42163  0084AC  0E00               	movlw	low _Channels
 42164  0084AE  0100               	movlb	0	; () banked
 42165  0084B0  6F64               	movwf	memset@p1& (0+255),b
 42166  0084B2  0E04               	movlw	high _Channels
 42167  0084B4  0100               	movlb	0	; () banked
 42168  0084B6  6F65               	movwf	(memset@p1+1)& (0+255),b
 42169  0084B8  0E00               	movlw	0
 42170  0084BA  0100               	movlb	0	; () banked
 42171  0084BC  6F67               	movwf	(memset@c+1)& (0+255),b
 42172  0084BE  0E00               	movlw	0
 42173  0084C0  6F66               	movwf	memset@c& (0+255),b
 42174  0084C2  0E00               	movlw	0
 42175  0084C4  0100               	movlb	0	; () banked
 42176  0084C6  6F69               	movwf	(memset@n+1)& (0+255),b
 42177  0084C8  0EE0               	movlw	224
 42178  0084CA  6F68               	movwf	memset@n& (0+255),b
 42179  0084CC  EC0B  F04E         	call	_memset	;wreg free
 42180                           
 42181                           ;lorawan_eu.c: 984: memcpy (Channels, DefaultChannels868, sizeof(DefaultChannels868) );
 42182  0084D0  0E00               	movlw	low _Channels
 42183  0084D2  0100               	movlb	0	; () banked
 42184  0084D4  6F64               	movwf	memcpy@d1& (0+255),b
 42185  0084D6  0E04               	movlw	high _Channels
 42186  0084D8  0100               	movlb	0	; () banked
 42187  0084DA  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 42188  0084DC  0ED2               	movlw	low _DefaultChannels868
 42189  0084DE  0100               	movlb	0	; () banked
 42190  0084E0  6F66               	movwf	memcpy@s1& (0+255),b
 42191  0084E2  0EFF               	movlw	high _DefaultChannels868
 42192  0084E4  0100               	movlb	0	; () banked
 42193  0084E6  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 42194  0084E8  0E00               	movlw	0
 42195  0084EA  0100               	movlb	0	; () banked
 42196  0084EC  6F69               	movwf	(memcpy@n+1)& (0+255),b
 42197  0084EE  0E2A               	movlw	42
 42198  0084F0  6F68               	movwf	memcpy@n& (0+255),b
 42199  0084F2  EC07  F049         	call	_memcpy	;wreg free
 42200                           
 42201                           ;lorawan_eu.c: 985: for (i = 3; i < 16; i++)
 42202  0084F6  0E03               	movlw	3
 42203  0084F8  0100               	movlb	0	; () banked
 42204  0084FA  6F6E               	movwf	InitDefault868Channels@i& (0+255),b
 42205  0084FC                     l16431:
 42206                           
 42207                           ; BSR set to: 0
 42208  0084FC  0E0F               	movlw	15
 42209  0084FE  0100               	movlb	0	; () banked
 42210  008500  656E               	cpfsgt	InitDefault868Channels@i& (0+255),b
 42211  008502  D001               	goto	l16435
 42212  008504  0012               	return	
 42213  008506                     l16435:
 42214                           
 42215                           ; BSR set to: 0
 42216                           ;lorawan_eu.c: 986: {
 42217                           ;lorawan_eu.c: 989: Channels[i].dutyCycle = (65535U);
 42218  008506  0100               	movlb	0	; () banked
 42219  008508  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 42220  00850A  0D0E               	mullw	14
 42221  00850C  0E06               	movlw	6
 42222  00850E  26F3               	addwf	prodl,f,c
 42223  008510  0E00               	movlw	0
 42224  008512  22F4               	addwfc	prodh,f,c
 42225  008514  0E00               	movlw	low _Channels
 42226  008516  24F3               	addwf	prodl,w,c
 42227  008518  6ED9               	movwf	fsr2l,c
 42228  00851A  0E04               	movlw	high _Channels
 42229  00851C  20F4               	addwfc	prodh,w,c
 42230  00851E  6EDA               	movwf	fsr2h,c
 42231  008520  0EFF               	movlw	255
 42232  008522  6EDE               	movwf	postinc2,c
 42233  008524  0EFF               	movlw	255
 42234  008526  6EDD               	movwf	postdec2,c
 42235                           
 42236                           ;lorawan_eu.c: 990: Channels[i].dataRange.value = (255);
 42237  008528  0100               	movlb	0	; () banked
 42238  00852A  516E               	movf	InitDefault868Channels@i& (0+255),w,b
 42239  00852C  0D0E               	mullw	14
 42240  00852E  0E05               	movlw	5
 42241  008530  26F3               	addwf	prodl,f,c
 42242  008532  0E00               	movlw	0
 42243  008534  22F4               	addwfc	prodh,f,c
 42244  008536  0E00               	movlw	low _Channels
 42245  008538  24F3               	addwf	prodl,w,c
 42246  00853A  6ED9               	movwf	fsr2l,c
 42247  00853C  0E04               	movlw	high _Channels
 42248  00853E  20F4               	addwfc	prodh,w,c
 42249  008540  6EDA               	movwf	fsr2h,c
 42250  008542  0EFF               	movlw	255
 42251  008544  6EDF               	movwf	indf2,c
 42252                           
 42253                           ; BSR set to: 0
 42254  008546  0100               	movlb	0	; () banked
 42255  008548  2B6E               	incf	InitDefault868Channels@i& (0+255),f,b
 42256  00854A  D7D8               	goto	l16431
 42257  00854C                     __end_of_InitDefault868Channels:
 42258                           	opt stack 0
 42259                           tosu	equ	0xFFF
 42260                           tosh	equ	0xFFE
 42261                           tosl	equ	0xFFD
 42262                           pclath	equ	0xFFA
 42263                           tblptru	equ	0xFF8
 42264                           tblptrh	equ	0xFF7
 42265                           tblptrl	equ	0xFF6
 42266                           tablat	equ	0xFF5
 42267                           prodh	equ	0xFF4
 42268                           prodl	equ	0xFF3
 42269                           intcon	equ	0xFF2
 42270                           intcon2	equ	0xFF1
 42271                           intcon3	equ	0xFF0
 42272                           indf0	equ	0xFEF
 42273                           postinc0	equ	0xFEE
 42274                           plusw0	equ	0xFEB
 42275                           fsr0h	equ	0xFEA
 42276                           fsr0l	equ	0xFE9
 42277                           wreg	equ	0xFE8
 42278                           postinc1	equ	0xFE6
 42279                           postdec1	equ	0xFE5
 42280                           plusw1	equ	0xFE3
 42281                           fsr1h	equ	0xFE2
 42282                           fsr1l	equ	0xFE1
 42283                           indf2	equ	0xFDF
 42284                           postinc2	equ	0xFDE
 42285                           postdec2	equ	0xFDD
 42286                           plusw2	equ	0xFDB
 42287                           fsr2h	equ	0xFDA
 42288                           fsr2l	equ	0xFD9
 42289                           status	equ	0xFD8
 42290                           
 42291 ;; *************** function _InitDefault433Channels *****************
 42292 ;; Defined at:
 42293 ;;		line 994 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42294 ;; Parameters:    Size  Location     Type
 42295 ;;		None
 42296 ;; Auto vars:     Size  Location     Type
 42297 ;;  i               1   14[BANK0 ] unsigned char 
 42298 ;; Return value:  Size  Location     Type
 42299 ;;                  1    wreg      void 
 42300 ;; Registers used:
 42301 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42302 ;; Tracked objects:
 42303 ;;		On entry : 0/0
 42304 ;;		On exit  : 0/0
 42305 ;;		Unchanged: 0/0
 42306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42308 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42310 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42311 ;;Total ram usage:        1 bytes
 42312 ;; Hardware stack levels used:    1
 42313 ;; Hardware stack levels required when called:    8
 42314 ;; This function calls:
 42315 ;;		_memcpy
 42316 ;;		_memset
 42317 ;; This function is called by:
 42318 ;;		_LORAWAN_Reset
 42319 ;; This function uses a non-reentrant model
 42320 ;;
 42321                           
 42322                           	psect	text196
 42323  00854C                     __ptext196:
 42324                           	opt stack 0
 42325  00854C                     _InitDefault433Channels:
 42326                           	opt stack 20
 42327                           
 42328                           ;lorawan_eu.c: 996: uint8_t i;
 42329                           ;lorawan_eu.c: 998: memset (Channels, 0, sizeof(Channels) );
 42330                           
 42331                           ; BSR set to: 0
 42332                           ;incstack = 0
 42333  00854C  0E00               	movlw	low _Channels
 42334  00854E  0100               	movlb	0	; () banked
 42335  008550  6F64               	movwf	memset@p1& (0+255),b
 42336  008552  0E04               	movlw	high _Channels
 42337  008554  0100               	movlb	0	; () banked
 42338  008556  6F65               	movwf	(memset@p1+1)& (0+255),b
 42339  008558  0E00               	movlw	0
 42340  00855A  0100               	movlb	0	; () banked
 42341  00855C  6F67               	movwf	(memset@c+1)& (0+255),b
 42342  00855E  0E00               	movlw	0
 42343  008560  6F66               	movwf	memset@c& (0+255),b
 42344  008562  0E00               	movlw	0
 42345  008564  0100               	movlb	0	; () banked
 42346  008566  6F69               	movwf	(memset@n+1)& (0+255),b
 42347  008568  0EE0               	movlw	224
 42348  00856A  6F68               	movwf	memset@n& (0+255),b
 42349  00856C  EC0B  F04E         	call	_memset	;wreg free
 42350                           
 42351                           ;lorawan_eu.c: 999: memcpy (Channels, DefaultChannels433, sizeof(DefaultChannels433) );
 42352  008570  0E00               	movlw	low _Channels
 42353  008572  0100               	movlb	0	; () banked
 42354  008574  6F64               	movwf	memcpy@d1& (0+255),b
 42355  008576  0E04               	movlw	high _Channels
 42356  008578  0100               	movlb	0	; () banked
 42357  00857A  6F65               	movwf	(memcpy@d1+1)& (0+255),b
 42358  00857C  0EA8               	movlw	low _DefaultChannels433
 42359  00857E  0100               	movlb	0	; () banked
 42360  008580  6F66               	movwf	memcpy@s1& (0+255),b
 42361  008582  0EFF               	movlw	high _DefaultChannels433
 42362  008584  0100               	movlb	0	; () banked
 42363  008586  6F67               	movwf	(memcpy@s1+1)& (0+255),b
 42364  008588  0E00               	movlw	0
 42365  00858A  0100               	movlb	0	; () banked
 42366  00858C  6F69               	movwf	(memcpy@n+1)& (0+255),b
 42367  00858E  0E2A               	movlw	42
 42368  008590  6F68               	movwf	memcpy@n& (0+255),b
 42369  008592  EC07  F049         	call	_memcpy	;wreg free
 42370                           
 42371                           ;lorawan_eu.c: 1000: for (i = 3; i < 16; i++)
 42372  008596  0E03               	movlw	3
 42373  008598  0100               	movlb	0	; () banked
 42374  00859A  6F6E               	movwf	InitDefault433Channels@i& (0+255),b
 42375  00859C                     l16447:
 42376                           
 42377                           ; BSR set to: 0
 42378  00859C  0E0F               	movlw	15
 42379  00859E  0100               	movlb	0	; () banked
 42380  0085A0  656E               	cpfsgt	InitDefault433Channels@i& (0+255),b
 42381  0085A2  D001               	goto	l16451
 42382  0085A4  0012               	return	
 42383  0085A6                     l16451:
 42384                           
 42385                           ; BSR set to: 0
 42386                           ;lorawan_eu.c: 1001: {
 42387                           ;lorawan_eu.c: 1004: Channels[i].dutyCycle = (65535U);
 42388  0085A6  0100               	movlb	0	; () banked
 42389  0085A8  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 42390  0085AA  0D0E               	mullw	14
 42391  0085AC  0E06               	movlw	6
 42392  0085AE  26F3               	addwf	prodl,f,c
 42393  0085B0  0E00               	movlw	0
 42394  0085B2  22F4               	addwfc	prodh,f,c
 42395  0085B4  0E00               	movlw	low _Channels
 42396  0085B6  24F3               	addwf	prodl,w,c
 42397  0085B8  6ED9               	movwf	fsr2l,c
 42398  0085BA  0E04               	movlw	high _Channels
 42399  0085BC  20F4               	addwfc	prodh,w,c
 42400  0085BE  6EDA               	movwf	fsr2h,c
 42401  0085C0  0EFF               	movlw	255
 42402  0085C2  6EDE               	movwf	postinc2,c
 42403  0085C4  0EFF               	movlw	255
 42404  0085C6  6EDD               	movwf	postdec2,c
 42405                           
 42406                           ;lorawan_eu.c: 1005: Channels[i].dataRange.value = (255);
 42407  0085C8  0100               	movlb	0	; () banked
 42408  0085CA  516E               	movf	InitDefault433Channels@i& (0+255),w,b
 42409  0085CC  0D0E               	mullw	14
 42410  0085CE  0E05               	movlw	5
 42411  0085D0  26F3               	addwf	prodl,f,c
 42412  0085D2  0E00               	movlw	0
 42413  0085D4  22F4               	addwfc	prodh,f,c
 42414  0085D6  0E00               	movlw	low _Channels
 42415  0085D8  24F3               	addwf	prodl,w,c
 42416  0085DA  6ED9               	movwf	fsr2l,c
 42417  0085DC  0E04               	movlw	high _Channels
 42418  0085DE  20F4               	addwfc	prodh,w,c
 42419  0085E0  6EDA               	movwf	fsr2h,c
 42420  0085E2  0EFF               	movlw	255
 42421  0085E4  6EDF               	movwf	indf2,c
 42422                           
 42423                           ; BSR set to: 0
 42424  0085E6  0100               	movlb	0	; () banked
 42425  0085E8  2B6E               	incf	InitDefault433Channels@i& (0+255),f,b
 42426  0085EA  D7D8               	goto	l16447
 42427  0085EC                     __end_of_InitDefault433Channels:
 42428                           	opt stack 0
 42429                           tosu	equ	0xFFF
 42430                           tosh	equ	0xFFE
 42431                           tosl	equ	0xFFD
 42432                           pclath	equ	0xFFA
 42433                           tblptru	equ	0xFF8
 42434                           tblptrh	equ	0xFF7
 42435                           tblptrl	equ	0xFF6
 42436                           tablat	equ	0xFF5
 42437                           prodh	equ	0xFF4
 42438                           prodl	equ	0xFF3
 42439                           intcon	equ	0xFF2
 42440                           intcon2	equ	0xFF1
 42441                           intcon3	equ	0xFF0
 42442                           indf0	equ	0xFEF
 42443                           postinc0	equ	0xFEE
 42444                           plusw0	equ	0xFEB
 42445                           fsr0h	equ	0xFEA
 42446                           fsr0l	equ	0xFE9
 42447                           wreg	equ	0xFE8
 42448                           postinc1	equ	0xFE6
 42449                           postdec1	equ	0xFE5
 42450                           plusw1	equ	0xFE3
 42451                           fsr1h	equ	0xFE2
 42452                           fsr1l	equ	0xFE1
 42453                           indf2	equ	0xFDF
 42454                           postinc2	equ	0xFDE
 42455                           postdec2	equ	0xFDD
 42456                           plusw2	equ	0xFDB
 42457                           fsr2h	equ	0xFDA
 42458                           fsr2l	equ	0xFD9
 42459                           status	equ	0xFD8
 42460                           
 42461 ;; *************** function _memset *****************
 42462 ;; Defined at:
 42463 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memset.c"
 42464 ;; Parameters:    Size  Location     Type
 42465 ;;  p1              2    4[BANK0 ] PTR void 
 42466 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 42467 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 42468 ;;  c               2    6[BANK0 ] int 
 42469 ;;  n               2    8[BANK0 ] unsigned int 
 42470 ;; Auto vars:     Size  Location     Type
 42471 ;;  p               2   10[BANK0 ] PTR unsigned char 
 42472 ;;		 -> AssemblePacket@mhdr(1), aesBuffer(16), GenerateSubkey@l(16), AESCmac@x(16), 
 42473 ;;		 -> macBuffer(271), Channels(224), loRa.activationParameters(105), loRa(245), 
 42474 ;; Return value:  Size  Location     Type
 42475 ;;                  2    4[BANK0 ] PTR void 
 42476 ;; Registers used:
 42477 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42478 ;; Tracked objects:
 42479 ;;		On entry : 0/0
 42480 ;;		On exit  : 0/0
 42481 ;;		Unchanged: 0/0
 42482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42483 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42484 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42485 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42486 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42487 ;;Total ram usage:        8 bytes
 42488 ;; Hardware stack levels used:    1
 42489 ;; Hardware stack levels required when called:    7
 42490 ;; This function calls:
 42491 ;;		Nothing
 42492 ;; This function is called by:
 42493 ;;		_LORAWAN_Reset
 42494 ;;		_InitDefault868Channels
 42495 ;;		_InitDefault433Channels
 42496 ;;		_AESCmac
 42497 ;;		_GenerateSubkey
 42498 ;;		_AssemblePacket
 42499 ;;		_PrepareJoinRequestFrame
 42500 ;;		_PrepareSessionKeys
 42501 ;;		_AssembleEncryptionBlock
 42502 ;; This function uses a non-reentrant model
 42503 ;;
 42504                           
 42505                           	psect	text197
 42506  009C16                     __ptext197:
 42507                           	opt stack 0
 42508  009C16                     _memset:
 42509                           	opt stack 20
 42510                           
 42511                           ; BSR set to: 0
 42512                           ;incstack = 0
 42513  009C16  C064  F06A         	movff	memset@p1,memset@p
 42514  009C1A  C065  F06B         	movff	memset@p1+1,memset@p+1
 42515  009C1E  D009               	goto	l13665
 42516  009C20                     l13661:
 42517  009C20  C06A  FFD9         	movff	memset@p,fsr2l
 42518  009C24  C06B  FFDA         	movff	memset@p+1,fsr2h
 42519  009C28  C066  FFDF         	movff	memset@c,indf2
 42520  009C2C  0100               	movlb	0	; () banked
 42521  009C2E  4B6A               	infsnz	memset@p& (0+255),f,b
 42522  009C30  2B6B               	incf	(memset@p+1)& (0+255),f,b
 42523  009C32                     l13665:
 42524  009C32  0100               	movlb	0	; () banked
 42525  009C34  0768               	decf	memset@n& (0+255),f,b
 42526  009C36  A0D8               	btfss	status,0,c
 42527  009C38  0769               	decf	(memset@n+1)& (0+255),f,b
 42528  009C3A  0100               	movlb	0	; () banked
 42529  009C3C  2968               	incf	memset@n& (0+255),w,b
 42530  009C3E  E1F0               	bnz	l13661
 42531  009C40  0100               	movlb	0	; () banked
 42532  009C42  2969               	incf	(memset@n+1)& (0+255),w,b
 42533  009C44  B4D8               	btfsc	status,2,c
 42534  009C46  0012               	return	
 42535  009C48  D7EB               	goto	l13661
 42536  009C4A                     __end_of_memset:
 42537                           	opt stack 0
 42538                           tosu	equ	0xFFF
 42539                           tosh	equ	0xFFE
 42540                           tosl	equ	0xFFD
 42541                           pclath	equ	0xFFA
 42542                           tblptru	equ	0xFF8
 42543                           tblptrh	equ	0xFF7
 42544                           tblptrl	equ	0xFF6
 42545                           tablat	equ	0xFF5
 42546                           prodh	equ	0xFF4
 42547                           prodl	equ	0xFF3
 42548                           intcon	equ	0xFF2
 42549                           intcon2	equ	0xFF1
 42550                           intcon3	equ	0xFF0
 42551                           indf0	equ	0xFEF
 42552                           postinc0	equ	0xFEE
 42553                           plusw0	equ	0xFEB
 42554                           fsr0h	equ	0xFEA
 42555                           fsr0l	equ	0xFE9
 42556                           wreg	equ	0xFE8
 42557                           postinc1	equ	0xFE6
 42558                           postdec1	equ	0xFE5
 42559                           plusw1	equ	0xFE3
 42560                           fsr1h	equ	0xFE2
 42561                           fsr1l	equ	0xFE1
 42562                           indf2	equ	0xFDF
 42563                           postinc2	equ	0xFDE
 42564                           postdec2	equ	0xFDD
 42565                           plusw2	equ	0xFDB
 42566                           fsr2h	equ	0xFDA
 42567                           fsr2l	equ	0xFD9
 42568                           status	equ	0xFD8
 42569                           
 42570 ;; *************** function _memcpy *****************
 42571 ;; Defined at:
 42572 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\memcpy.c"
 42573 ;; Parameters:    Size  Location     Type
 42574 ;;  d1              2    4[BANK0 ] PTR void 
 42575 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 42576 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 42577 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 42578 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 42579 ;;  s1              2    6[BANK0 ] PTR const void 
 42580 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 42581 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 42582 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 42583 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 42584 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 42585 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 42586 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 42587 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 42588 ;;		 -> NULL(0), 
 42589 ;;  n               2    8[BANK0 ] unsigned int 
 42590 ;; Auto vars:     Size  Location     Type
 42591 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 42592 ;;		 -> radioBuffer.cfList(16), LORAWAN_RxDone@hdr.cfList(16), payload(2), appSKey(16), 
 42593 ;;		 -> nwkSKey(16), AssembleEncryptionBlock@frameCounter(4), ComputeSessionKeys@joinAcceptBuffer(2), PrepareJoinRequest
      +Frame@mic(4), 
 42594 ;;		 -> loRa.fCntUp.valueLow(2), aesBuffer(16), LORAWAN_RxDone@hdr(2), loRa.activationParameters.applicationKey(16), 
 42595 ;;		 -> loRa.activationParameters.applicationSessionKey(16), loRa.activationParameters.networkSessionKey(16), loRa.activ
      +ationParameters.deviceAddress(4), loRa.activationParameters.applicationEui(8), 
 42596 ;;		 -> loRa.activationParameters.deviceEui(8), loRa.activationParameters.mcastApplicationSessionKey(16), loRa.activatio
      +nParameters.mcastNetworkSessionKey(16), loRa.activationParameters.mcastDeviceAddress(4), 
 42597 ;;		 -> AESCmac@y(16), FskSyncWordBuff(3), UpdateCfList@joinAccept(2), loRa.activationParameters(105), 
 42598 ;;		 -> loRa.devNonce(2), loRa.fCntUp(4), radioBuffer(271), loRa(245), 
 42599 ;;		 -> DefaultChannels433(42), DefaultChannels868(42), RadioConfiguration.syncWord(8), RadioConfiguration(54), 
 42600 ;;		 -> NULL(0), 
 42601 ;;  d               2   10[BANK0 ] PTR unsigned char 
 42602 ;;		 -> AESEncodeLoRa@useKey(16), ComputeMic@mic(4), ExtractMic@mic(4), aesBuffer(16), 
 42603 ;;		 -> LORAWAN_RxDone@computedMic(4), loRa.activationParameters.applicationEui(8), loRa.activationParameters.deviceEui(
      +8), AESCmac@x(16), 
 42604 ;;		 -> UpdateCfList@frequency(4), macBuffer(271), Channels(224), loRa.activationParameters(105), 
 42605 ;;		 -> radioBuffer(271), loRa(245), RadioConfiguration(54), 
 42606 ;; Return value:  Size  Location     Type
 42607 ;;                  2    4[BANK0 ] PTR void 
 42608 ;; Registers used:
 42609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 42610 ;; Tracked objects:
 42611 ;;		On entry : 0/0
 42612 ;;		On exit  : 0/0
 42613 ;;		Unchanged: 0/0
 42614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42615 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42616 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42618 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42619 ;;Total ram usage:       10 bytes
 42620 ;; Hardware stack levels used:    1
 42621 ;; Hardware stack levels required when called:    7
 42622 ;; This function calls:
 42623 ;;		Nothing
 42624 ;; This function is called by:
 42625 ;;		_RADIO_SetFSKSyncWord
 42626 ;;		_UpdateCfList
 42627 ;;		_InitDefault868Channels
 42628 ;;		_InitDefault433Channels
 42629 ;;		_AESCmac
 42630 ;;		_LORAWAN_SetNetworkSessionKey
 42631 ;;		_LORAWAN_SetApplicationSessionKey
 42632 ;;		_LORAWAN_RxDone
 42633 ;;		_AssemblePacket
 42634 ;;		_PrepareJoinRequestFrame
 42635 ;;		_PrepareSessionKeys
 42636 ;;		_AssembleEncryptionBlock
 42637 ;;		_ExtractMic
 42638 ;;		_ComputeMic
 42639 ;;		_AESEncodeLoRa
 42640 ;;		_RADIO_GetData
 42641 ;;		_RADIO_GetFSKSyncWord
 42642 ;;		_LORAWAN_SetMcastNetworkSessionKey
 42643 ;;		_LORAWAN_SetMcastApplicationSessionKey
 42644 ;;		_LORAWAN_GetMcastApplicationSessionKey
 42645 ;;		_LORAWAN_GetMcastNetworkSessionKey
 42646 ;;		_LORAWAN_SetDeviceEui
 42647 ;;		_LORAWAN_GetDeviceEui
 42648 ;;		_LORAWAN_SetApplicationEui
 42649 ;;		_LORAWAN_GetApplicationEui
 42650 ;;		_LORAWAN_GetNetworkSessionKey
 42651 ;;		_LORAWAN_GetApplicationSessionKey
 42652 ;;		_LORAWAN_SetApplicationKey
 42653 ;;		_LORAWAN_GetApplicationKey
 42654 ;; This function uses a non-reentrant model
 42655 ;;
 42656                           
 42657                           	psect	text198
 42658  00920E                     __ptext198:
 42659                           	opt stack 0
 42660  00920E                     _memcpy:
 42661                           	opt stack 17
 42662                           
 42663                           ; BSR set to: 0
 42664                           ;incstack = 0
 42665  00920E  C066  F06C         	movff	memcpy@s1,memcpy@s
 42666  009212  C067  F06D         	movff	memcpy@s1+1,memcpy@s+1
 42667  009216  C064  F06A         	movff	memcpy@d1,memcpy@d
 42668  00921A  C065  F06B         	movff	memcpy@d1+1,memcpy@d+1
 42669  00921E  D01C               	goto	l13289
 42670  009220                     l13283:
 42671  009220  C06C  FFF6         	movff	memcpy@s,tblptrl
 42672  009224  C06D  FFF7         	movff	memcpy@s+1,tblptrh
 42673  009228  0E00               	movlw	low (__mediumconst shr (0+16))
 42674  00922A  6EF8               	movwf	tblptru,c
 42675  00922C  C06A  FFD9         	movff	memcpy@d,fsr2l
 42676  009230  C06B  FFDA         	movff	memcpy@d+1,fsr2h
 42677  009234  0E0F               	movlw	(high __ramtop+-1)
 42678  009236  64F7               	cpfsgt	tblptrh,c
 42679  009238  D003               	bra	u14447
 42680  00923A  0008               	tblrd		*
 42681  00923C  50F5               	movf	tablat,w,c
 42682  00923E  D005               	bra	u14440
 42683  009240                     u14447:
 42684  009240  CFF6 FFE9          	movff	tblptrl,fsr0l
 42685  009244  CFF7 FFEA          	movff	tblptrh,fsr0h
 42686  009248  50EF               	movf	indf0,w,c
 42687  00924A                     u14440:
 42688  00924A  6EDF               	movwf	indf2,c
 42689  00924C  0100               	movlb	0	; () banked
 42690  00924E  4B6C               	infsnz	memcpy@s& (0+255),f,b
 42691  009250  2B6D               	incf	(memcpy@s+1)& (0+255),f,b
 42692                           
 42693                           ; BSR set to: 0
 42694  009252  0100               	movlb	0	; () banked
 42695  009254  4B6A               	infsnz	memcpy@d& (0+255),f,b
 42696  009256  2B6B               	incf	(memcpy@d+1)& (0+255),f,b
 42697  009258                     l13289:
 42698  009258  0100               	movlb	0	; () banked
 42699  00925A  0768               	decf	memcpy@n& (0+255),f,b
 42700  00925C  A0D8               	btfss	status,0,c
 42701  00925E  0769               	decf	(memcpy@n+1)& (0+255),f,b
 42702  009260  0100               	movlb	0	; () banked
 42703  009262  2968               	incf	memcpy@n& (0+255),w,b
 42704  009264  E1DD               	bnz	l13283
 42705  009266  0100               	movlb	0	; () banked
 42706  009268  2969               	incf	(memcpy@n+1)& (0+255),w,b
 42707  00926A  B4D8               	btfsc	status,2,c
 42708  00926C  0012               	return	
 42709  00926E  D7D8               	goto	l13283
 42710  009270                     __end_of_memcpy:
 42711                           	opt stack 0
 42712                           tosu	equ	0xFFF
 42713                           tosh	equ	0xFFE
 42714                           tosl	equ	0xFFD
 42715                           pclath	equ	0xFFA
 42716                           tblptru	equ	0xFF8
 42717                           tblptrh	equ	0xFF7
 42718                           tblptrl	equ	0xFF6
 42719                           tablat	equ	0xFF5
 42720                           prodh	equ	0xFF4
 42721                           prodl	equ	0xFF3
 42722                           intcon	equ	0xFF2
 42723                           intcon2	equ	0xFF1
 42724                           intcon3	equ	0xFF0
 42725                           indf0	equ	0xFEF
 42726                           postinc0	equ	0xFEE
 42727                           plusw0	equ	0xFEB
 42728                           fsr0h	equ	0xFEA
 42729                           fsr0l	equ	0xFE9
 42730                           wreg	equ	0xFE8
 42731                           postinc1	equ	0xFE6
 42732                           postdec1	equ	0xFE5
 42733                           plusw1	equ	0xFE3
 42734                           fsr1h	equ	0xFE2
 42735                           fsr1l	equ	0xFE1
 42736                           indf2	equ	0xFDF
 42737                           postinc2	equ	0xFDE
 42738                           postdec2	equ	0xFDD
 42739                           plusw2	equ	0xFDB
 42740                           fsr2h	equ	0xFDA
 42741                           fsr2l	equ	0xFD9
 42742                           status	equ	0xFD8
 42743                           
 42744 ;; *************** function _CreateAllSoftwareTimers *****************
 42745 ;; Defined at:
 42746 ;;		line 937 in file "mcc_generated_files/LoRaWAN/lorawan_eu.c"
 42747 ;; Parameters:    Size  Location     Type
 42748 ;;		None
 42749 ;; Auto vars:     Size  Location     Type
 42750 ;;		None
 42751 ;; Return value:  Size  Location     Type
 42752 ;;                  1    wreg      void 
 42753 ;; Registers used:
 42754 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42755 ;; Tracked objects:
 42756 ;;		On entry : 0/0
 42757 ;;		On exit  : 0/0
 42758 ;;		Unchanged: 0/0
 42759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42762 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42763 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42764 ;;Total ram usage:        0 bytes
 42765 ;; Hardware stack levels used:    1
 42766 ;; Hardware stack levels required when called:    8
 42767 ;; This function calls:
 42768 ;;		_SwTimerCreate
 42769 ;; This function is called by:
 42770 ;;		_LORAWAN_Init
 42771 ;; This function uses a non-reentrant model
 42772 ;;
 42773                           
 42774                           	psect	text199
 42775  009586                     __ptext199:
 42776                           	opt stack 0
 42777  009586                     _CreateAllSoftwareTimers:
 42778                           	opt stack 21
 42779                           
 42780                           ;lorawan_eu.c: 939: loRa.joinAccept1TimerId = SwTimerCreate();
 42781                           
 42782                           ; BSR set to: 0
 42783                           ;incstack = 0
 42784  009586  EC91  F043         	call	_SwTimerCreate	;wreg free
 42785  00958A  0102               	movlb	2	; () banked
 42786  00958C  6FE2               	movwf	(_loRa+226)& (0+255),b
 42787                           
 42788                           ;lorawan_eu.c: 940: loRa.joinAccept2TimerId = SwTimerCreate();
 42789  00958E  EC91  F043         	call	_SwTimerCreate	;wreg free
 42790  009592  0102               	movlb	2	; () banked
 42791  009594  6FE3               	movwf	(_loRa+227)& (0+255),b
 42792                           
 42793                           ;lorawan_eu.c: 941: loRa.receiveWindow1TimerId = SwTimerCreate();
 42794  009596  EC91  F043         	call	_SwTimerCreate	;wreg free
 42795  00959A  0102               	movlb	2	; () banked
 42796  00959C  6FE4               	movwf	(_loRa+228)& (0+255),b
 42797                           
 42798                           ;lorawan_eu.c: 942: loRa.receiveWindow2TimerId = SwTimerCreate();
 42799  00959E  EC91  F043         	call	_SwTimerCreate	;wreg free
 42800  0095A2  0102               	movlb	2	; () banked
 42801  0095A4  6FE5               	movwf	(_loRa+229)& (0+255),b
 42802                           
 42803                           ;lorawan_eu.c: 943: loRa.linkCheckTimerId = SwTimerCreate();
 42804  0095A6  EC91  F043         	call	_SwTimerCreate	;wreg free
 42805  0095AA  0102               	movlb	2	; () banked
 42806  0095AC  6FE7               	movwf	(_loRa+231)& (0+255),b
 42807                           
 42808                           ;lorawan_eu.c: 944: loRa.ackTimeoutTimerId = SwTimerCreate();
 42809  0095AE  EC91  F043         	call	_SwTimerCreate	;wreg free
 42810  0095B2  0102               	movlb	2	; () banked
 42811  0095B4  6FE8               	movwf	(_loRa+232)& (0+255),b
 42812                           
 42813                           ;lorawan_eu.c: 945: loRa.automaticReplyTimerId = SwTimerCreate();
 42814  0095B6  EC91  F043         	call	_SwTimerCreate	;wreg free
 42815  0095BA  0102               	movlb	2	; () banked
 42816  0095BC  6FE6               	movwf	(_loRa+230)& (0+255),b
 42817                           
 42818                           ;lorawan_eu.c: 946: loRa.unconfirmedRetransmisionTimerId = SwTimerCreate();
 42819  0095BE  EC91  F043         	call	_SwTimerCreate	;wreg free
 42820  0095C2  0102               	movlb	2	; () banked
 42821  0095C4  6FEA               	movwf	(_loRa+234)& (0+255),b
 42822                           
 42823                           ;lorawan_eu.c: 947: loRa.abpJoinTimerId = SwTimerCreate();
 42824  0095C6  EC91  F043         	call	_SwTimerCreate	;wreg free
 42825  0095CA  0102               	movlb	2	; () banked
 42826  0095CC  6FF3               	movwf	(_loRa+243)& (0+255),b
 42827                           
 42828                           ;lorawan_eu.c: 948: loRa.dutyCycleTimerId = SwTimerCreate();
 42829  0095CE  EC91  F043         	call	_SwTimerCreate	;wreg free
 42830  0095D2  0102               	movlb	2	; () banked
 42831  0095D4  6FE9               	movwf	(_loRa+233)& (0+255),b
 42832                           
 42833                           ; BSR set to: 2
 42834  0095D6  0012               	return		;funcret
 42835  0095D8                     __end_of_CreateAllSoftwareTimers:
 42836                           	opt stack 0
 42837                           tosu	equ	0xFFF
 42838                           tosh	equ	0xFFE
 42839                           tosl	equ	0xFFD
 42840                           pclath	equ	0xFFA
 42841                           tblptru	equ	0xFF8
 42842                           tblptrh	equ	0xFF7
 42843                           tblptrl	equ	0xFF6
 42844                           tablat	equ	0xFF5
 42845                           prodh	equ	0xFF4
 42846                           prodl	equ	0xFF3
 42847                           intcon	equ	0xFF2
 42848                           intcon2	equ	0xFF1
 42849                           intcon3	equ	0xFF0
 42850                           indf0	equ	0xFEF
 42851                           postinc0	equ	0xFEE
 42852                           plusw0	equ	0xFEB
 42853                           fsr0h	equ	0xFEA
 42854                           fsr0l	equ	0xFE9
 42855                           wreg	equ	0xFE8
 42856                           postinc1	equ	0xFE6
 42857                           postdec1	equ	0xFE5
 42858                           plusw1	equ	0xFE3
 42859                           fsr1h	equ	0xFE2
 42860                           fsr1l	equ	0xFE1
 42861                           indf2	equ	0xFDF
 42862                           postinc2	equ	0xFDE
 42863                           postdec2	equ	0xFDD
 42864                           plusw2	equ	0xFDB
 42865                           fsr2h	equ	0xFDA
 42866                           fsr2l	equ	0xFD9
 42867                           status	equ	0xFD8
 42868                           
 42869 ;; *************** function _SwTimerCreate *****************
 42870 ;; Defined at:
 42871 ;;		line 154 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 42872 ;; Parameters:    Size  Location     Type
 42873 ;;		None
 42874 ;; Auto vars:     Size  Location     Type
 42875 ;;  retVal          1    4[BANK0 ] unsigned char 
 42876 ;; Return value:  Size  Location     Type
 42877 ;;                  1    wreg      unsigned char 
 42878 ;; Registers used:
 42879 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 42880 ;; Tracked objects:
 42881 ;;		On entry : 0/0
 42882 ;;		On exit  : 0/0
 42883 ;;		Unchanged: 0/0
 42884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 42885 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42886 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42888 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 42889 ;;Total ram usage:        1 bytes
 42890 ;; Hardware stack levels used:    1
 42891 ;; Hardware stack levels required when called:    7
 42892 ;; This function calls:
 42893 ;;		Nothing
 42894 ;; This function is called by:
 42895 ;;		_RADIO_Init
 42896 ;;		_CreateAllSoftwareTimers
 42897 ;; This function uses a non-reentrant model
 42898 ;;
 42899                           
 42900                           	psect	text200
 42901  008722                     __ptext200:
 42902                           	opt stack 0
 42903  008722                     _SwTimerCreate:
 42904                           	opt stack 21
 42905                           
 42906                           ;sw_timer.c: 156: uint8_t retVal;
 42907                           ;sw_timer.c: 157: if (allocatedTimers < 20)
 42908                           
 42909                           ; BSR set to: 2
 42910                           ;incstack = 0
 42911  008722  0E14               	movlw	20
 42912  008724  0100               	movlb	0	; () banked
 42913  008726  61FB               	cpfslt	_allocatedTimers& (0+255),b	;volatile
 42914  008728  D043               	goto	l126
 42915                           
 42916                           ; BSR set to: 0
 42917                           ;sw_timer.c: 158: {
 42918                           ;sw_timer.c: 159: (INTCONbits.GIE = 0);
 42919  00872A  9EF2               	bcf	intcon,7,c	;volatile
 42920                           
 42921                           ;sw_timer.c: 160: retVal = allocatedTimers;
 42922  00872C  C0FB  F064         	movff	_allocatedTimers,SwTimerCreate@retVal	;volatile
 42923                           
 42924                           ; BSR set to: 0
 42925                           ;sw_timer.c: 161: swTimers[retVal].running = 0;
 42926  008730  0100               	movlb	0	; () banked
 42927  008732  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42928  008734  0D08               	mullw	8
 42929  008736  0E04               	movlw	4
 42930  008738  26F3               	addwf	prodl,f,c
 42931  00873A  0E00               	movlw	0
 42932  00873C  22F4               	addwfc	prodh,f,c
 42933  00873E  0E00               	movlw	low _swTimers
 42934  008740  24F3               	addwf	prodl,w,c
 42935  008742  6ED9               	movwf	fsr2l,c
 42936  008744  0E03               	movlw	high _swTimers
 42937  008746  20F4               	addwfc	prodh,w,c
 42938  008748  6EDA               	movwf	fsr2h,c
 42939  00874A  0E00               	movlw	0
 42940  00874C  6EDF               	movwf	indf2,c
 42941                           
 42942                           ;sw_timer.c: 162: swTimers[retVal].ticksRemaining = 0;
 42943  00874E  0100               	movlb	0	; () banked
 42944  008750  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42945  008752  0D08               	mullw	8
 42946  008754  0E00               	movlw	low _swTimers
 42947  008756  24F3               	addwf	prodl,w,c
 42948  008758  6ED9               	movwf	fsr2l,c
 42949  00875A  0E03               	movlw	high _swTimers
 42950  00875C  20F4               	addwfc	prodh,w,c
 42951  00875E  6EDA               	movwf	fsr2h,c
 42952  008760  6ADE               	clrf	postinc2,c
 42953  008762  6ADE               	clrf	postinc2,c
 42954  008764  6ADE               	clrf	postinc2,c
 42955  008766  6ADD               	clrf	postdec2,c
 42956                           
 42957                           ;sw_timer.c: 163: swTimers[retVal].callbackParameter = 0;
 42958  008768  0100               	movlb	0	; () banked
 42959  00876A  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42960  00876C  0D08               	mullw	8
 42961  00876E  0E05               	movlw	5
 42962  008770  26F3               	addwf	prodl,f,c
 42963  008772  0E00               	movlw	0
 42964  008774  22F4               	addwfc	prodh,f,c
 42965  008776  0E00               	movlw	low _swTimers
 42966  008778  24F3               	addwf	prodl,w,c
 42967  00877A  6ED9               	movwf	fsr2l,c
 42968  00877C  0E03               	movlw	high _swTimers
 42969  00877E  20F4               	addwfc	prodh,w,c
 42970  008780  6EDA               	movwf	fsr2h,c
 42971  008782  0E00               	movlw	0
 42972  008784  6EDF               	movwf	indf2,c
 42973                           
 42974                           ;sw_timer.c: 164: swTimers[retVal].callback = (0);
 42975  008786  0100               	movlb	0	; () banked
 42976  008788  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 42977  00878A  0D08               	mullw	8
 42978  00878C  0E06               	movlw	6
 42979  00878E  26F3               	addwf	prodl,f,c
 42980  008790  0E00               	movlw	0
 42981  008792  22F4               	addwfc	prodh,f,c
 42982  008794  0E00               	movlw	low _swTimers
 42983  008796  24F3               	addwf	prodl,w,c
 42984  008798  6ED9               	movwf	fsr2l,c
 42985  00879A  0E03               	movlw	high _swTimers
 42986  00879C  20F4               	addwfc	prodh,w,c
 42987  00879E  6EDA               	movwf	fsr2h,c
 42988  0087A0  0E00               	movlw	0
 42989  0087A2  6EDE               	movwf	postinc2,c
 42990  0087A4  0E00               	movlw	0
 42991  0087A6  6EDD               	movwf	postdec2,c
 42992                           
 42993                           ; BSR set to: 0
 42994                           ;sw_timer.c: 165: allocatedTimers++;
 42995  0087A8  0100               	movlb	0	; () banked
 42996  0087AA  2BFB               	incf	_allocatedTimers& (0+255),f,b	;volatile
 42997                           
 42998                           ; BSR set to: 0
 42999                           ;sw_timer.c: 166: (INTCONbits.GIE = 1);
 43000  0087AC  8EF2               	bsf	intcon,7,c	;volatile
 43001                           
 43002                           ;sw_timer.c: 167: }
 43003  0087AE  D001               	goto	l15549
 43004  0087B0                     l126:
 43005                           
 43006                           ;sw_timer.c: 171: {
 43007  0087B0  D7FF               	goto	l126
 43008  0087B2                     l15549:
 43009                           
 43010                           ;sw_timer.c: 175: }
 43011                           ;sw_timer.c: 176: }
 43012                           ;sw_timer.c: 177: return retVal;
 43013  0087B2  0100               	movlb	0	; () banked
 43014  0087B4  5164               	movf	SwTimerCreate@retVal& (0+255),w,b
 43015  0087B6  0012               	return	
 43016  0087B8                     __end_of_SwTimerCreate:
 43017                           	opt stack 0
 43018                           tosu	equ	0xFFF
 43019                           tosh	equ	0xFFE
 43020                           tosl	equ	0xFFD
 43021                           pclath	equ	0xFFA
 43022                           tblptru	equ	0xFF8
 43023                           tblptrh	equ	0xFF7
 43024                           tblptrl	equ	0xFF6
 43025                           tablat	equ	0xFF5
 43026                           prodh	equ	0xFF4
 43027                           prodl	equ	0xFF3
 43028                           intcon	equ	0xFF2
 43029                           intcon2	equ	0xFF1
 43030                           intcon3	equ	0xFF0
 43031                           indf0	equ	0xFEF
 43032                           postinc0	equ	0xFEE
 43033                           plusw0	equ	0xFEB
 43034                           fsr0h	equ	0xFEA
 43035                           fsr0l	equ	0xFE9
 43036                           wreg	equ	0xFE8
 43037                           postinc1	equ	0xFE6
 43038                           postdec1	equ	0xFE5
 43039                           plusw1	equ	0xFE3
 43040                           fsr1h	equ	0xFE2
 43041                           fsr1l	equ	0xFE1
 43042                           indf2	equ	0xFDF
 43043                           postinc2	equ	0xFDE
 43044                           postdec2	equ	0xFDD
 43045                           plusw2	equ	0xFDB
 43046                           fsr2h	equ	0xFDA
 43047                           fsr2l	equ	0xFD9
 43048                           status	equ	0xFD8
 43049                           
 43050 ;; *************** function _LORAWAN_GetState *****************
 43051 ;; Defined at:
 43052 ;;		line 2233 in file "mcc_generated_files/LoRaWAN/lorawan.c"
 43053 ;; Parameters:    Size  Location     Type
 43054 ;;		None
 43055 ;; Auto vars:     Size  Location     Type
 43056 ;;		None
 43057 ;; Return value:  Size  Location     Type
 43058 ;;                  1    wreg      unsigned char 
 43059 ;; Registers used:
 43060 ;;		wreg, status,2, status,0
 43061 ;; Tracked objects:
 43062 ;;		On entry : 0/0
 43063 ;;		On exit  : 0/0
 43064 ;;		Unchanged: 0/0
 43065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43069 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43070 ;;Total ram usage:        0 bytes
 43071 ;; Hardware stack levels used:    1
 43072 ;; Hardware stack levels required when called:    7
 43073 ;; This function calls:
 43074 ;;		Nothing
 43075 ;; This function is called by:
 43076 ;;		_main
 43077 ;; This function uses a non-reentrant model
 43078 ;;
 43079                           
 43080                           	psect	text201
 43081  00A424                     __ptext201:
 43082                           	opt stack 0
 43083  00A424                     _LORAWAN_GetState:
 43084                           	opt stack 23
 43085                           
 43086                           ;lorawan.c: 2235: return loRa.macStatus.macState;
 43087                           
 43088                           ; BSR set to: 0
 43089                           ;incstack = 0
 43090  00A424  0102               	movlb	2	; () banked
 43091  00A426  5102               	movf	(_loRa+2)& (0+255),w,b
 43092  00A428  0B0F               	andlw	15
 43093  00A42A  0012               	return	
 43094  00A42C                     __end_of_LORAWAN_GetState:
 43095                           	opt stack 0
 43096                           tosu	equ	0xFFF
 43097                           tosh	equ	0xFFE
 43098                           tosl	equ	0xFFD
 43099                           pclath	equ	0xFFA
 43100                           tblptru	equ	0xFF8
 43101                           tblptrh	equ	0xFF7
 43102                           tblptrl	equ	0xFF6
 43103                           tablat	equ	0xFF5
 43104                           prodh	equ	0xFF4
 43105                           prodl	equ	0xFF3
 43106                           intcon	equ	0xFF2
 43107                           intcon2	equ	0xFF1
 43108                           intcon3	equ	0xFF0
 43109                           indf0	equ	0xFEF
 43110                           postinc0	equ	0xFEE
 43111                           plusw0	equ	0xFEB
 43112                           fsr0h	equ	0xFEA
 43113                           fsr0l	equ	0xFE9
 43114                           wreg	equ	0xFE8
 43115                           postinc1	equ	0xFE6
 43116                           postdec1	equ	0xFE5
 43117                           plusw1	equ	0xFE3
 43118                           fsr1h	equ	0xFE2
 43119                           fsr1l	equ	0xFE1
 43120                           indf2	equ	0xFDF
 43121                           postinc2	equ	0xFDE
 43122                           postdec2	equ	0xFDD
 43123                           plusw2	equ	0xFDB
 43124                           fsr2h	equ	0xFDA
 43125                           fsr2l	equ	0xFD9
 43126                           status	equ	0xFD8
 43127                           
 43128 ;; *************** function _IO_pins_init *****************
 43129 ;; Defined at:
 43130 ;;		line 137 in file "main.c"
 43131 ;; Parameters:    Size  Location     Type
 43132 ;;		None
 43133 ;; Auto vars:     Size  Location     Type
 43134 ;;		None
 43135 ;; Return value:  Size  Location     Type
 43136 ;;                  1    wreg      void 
 43137 ;; Registers used:
 43138 ;;		None
 43139 ;; Tracked objects:
 43140 ;;		On entry : 0/0
 43141 ;;		On exit  : 0/0
 43142 ;;		Unchanged: 0/0
 43143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43144 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43147 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43148 ;;Total ram usage:        0 bytes
 43149 ;; Hardware stack levels used:    1
 43150 ;; Hardware stack levels required when called:    7
 43151 ;; This function calls:
 43152 ;;		Nothing
 43153 ;; This function is called by:
 43154 ;;		_main
 43155 ;; This function uses a non-reentrant model
 43156 ;;
 43157                           
 43158                           	psect	text202
 43159  00A220                     __ptext202:
 43160                           	opt stack 0
 43161  00A220                     _IO_pins_init:
 43162                           	opt stack 23
 43163                           
 43164                           ;main.c: 140: TRISAbits.TRISA4 = 0;
 43165                           
 43166                           ; BSR set to: 2
 43167                           ;incstack = 0
 43168  00A220  9892               	bcf	3986,4,c	;volatile
 43169                           
 43170                           ;main.c: 141: TRISCbits.TRISC0 = 0;
 43171  00A222  9094               	bcf	3988,0,c	;volatile
 43172                           
 43173                           ;main.c: 142: TRISDbits.TRISD2 = 0;
 43174  00A224  9495               	bcf	3989,2,c	;volatile
 43175                           
 43176                           ;main.c: 143: ANSELDbits.ANSD2 = 0;
 43177  00A226  010F               	movlb	15	; () banked
 43178  00A228  953B               	bcf	59,2,b	;volatile
 43179                           
 43180                           ;main.c: 144: TRISCbits.TRISC3 = 1;
 43181  00A22A  8694               	bsf	3988,3,c	;volatile
 43182                           
 43183                           ;main.c: 145: ANSELCbits.ANSC3 = 1;
 43184  00A22C  010F               	movlb	15	; () banked
 43185  00A22E  873A               	bsf	58,3,b	;volatile
 43186                           
 43187                           ;main.c: 146: TRISBbits.TRISB5 = 1;
 43188  00A230  8A93               	bsf	3987,5,c	;volatile
 43189                           
 43190                           ;main.c: 147: ANSELBbits.ANSB5 = 0;
 43191  00A232  010F               	movlb	15	; () banked
 43192  00A234  9B39               	bcf	57,5,b	;volatile
 43193                           
 43194                           ; BSR set to: 15
 43195  00A236  0012               	return		;funcret
 43196  00A238                     __end_of_IO_pins_init:
 43197                           	opt stack 0
 43198                           tosu	equ	0xFFF
 43199                           tosh	equ	0xFFE
 43200                           tosl	equ	0xFFD
 43201                           pclath	equ	0xFFA
 43202                           tblptru	equ	0xFF8
 43203                           tblptrh	equ	0xFF7
 43204                           tblptrl	equ	0xFF6
 43205                           tablat	equ	0xFF5
 43206                           prodh	equ	0xFF4
 43207                           prodl	equ	0xFF3
 43208                           intcon	equ	0xFF2
 43209                           intcon2	equ	0xFF1
 43210                           intcon3	equ	0xFF0
 43211                           indf0	equ	0xFEF
 43212                           postinc0	equ	0xFEE
 43213                           plusw0	equ	0xFEB
 43214                           fsr0h	equ	0xFEA
 43215                           fsr0l	equ	0xFE9
 43216                           wreg	equ	0xFE8
 43217                           postinc1	equ	0xFE6
 43218                           postdec1	equ	0xFE5
 43219                           plusw1	equ	0xFE3
 43220                           fsr1h	equ	0xFE2
 43221                           fsr1l	equ	0xFE1
 43222                           indf2	equ	0xFDF
 43223                           postinc2	equ	0xFDE
 43224                           postdec2	equ	0xFDD
 43225                           plusw2	equ	0xFDB
 43226                           fsr2h	equ	0xFDA
 43227                           fsr2l	equ	0xFD9
 43228                           status	equ	0xFD8
 43229                           
 43230 ;; *************** function _ADC_Init *****************
 43231 ;; Defined at:
 43232 ;;		line 165 in file "main.c"
 43233 ;; Parameters:    Size  Location     Type
 43234 ;;		None
 43235 ;; Auto vars:     Size  Location     Type
 43236 ;;		None
 43237 ;; Return value:  Size  Location     Type
 43238 ;;                  1    wreg      void 
 43239 ;; Registers used:
 43240 ;;		wreg, status,2
 43241 ;; Tracked objects:
 43242 ;;		On entry : 0/0
 43243 ;;		On exit  : 0/0
 43244 ;;		Unchanged: 0/0
 43245 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43246 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43247 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43248 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43249 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43250 ;;Total ram usage:        0 bytes
 43251 ;; Hardware stack levels used:    1
 43252 ;; Hardware stack levels required when called:    7
 43253 ;; This function calls:
 43254 ;;		Nothing
 43255 ;; This function is called by:
 43256 ;;		_main
 43257 ;; This function uses a non-reentrant model
 43258 ;;
 43259                           
 43260                           	psect	text203
 43261  00A34E                     __ptext203:
 43262                           	opt stack 0
 43263  00A34E                     _ADC_Init:
 43264                           	opt stack 23
 43265                           
 43266                           ;main.c: 166: ADCON0bits.GO = 0;
 43267                           
 43268                           ; BSR set to: 15
 43269                           ;incstack = 0
 43270  00A34E  92C2               	bcf	4034,1,c	;volatile
 43271                           
 43272                           ;main.c: 167: ADCON2bits.ADFM = 1;
 43273  00A350  8EC0               	bsf	4032,7,c	;volatile
 43274                           
 43275                           ;main.c: 168: ADCON2bits.ADCS = 3;
 43276  00A352  50C0               	movf	4032,w,c	;volatile
 43277  00A354  0BF8               	andlw	-8
 43278  00A356  0903               	iorlw	3
 43279  00A358  6EC0               	movwf	4032,c	;volatile
 43280  00A35A  0012               	return	
 43281  00A35C                     __end_of_ADC_Init:
 43282                           	opt stack 0
 43283                           tosu	equ	0xFFF
 43284                           tosh	equ	0xFFE
 43285                           tosl	equ	0xFFD
 43286                           pclath	equ	0xFFA
 43287                           tblptru	equ	0xFF8
 43288                           tblptrh	equ	0xFF7
 43289                           tblptrl	equ	0xFF6
 43290                           tablat	equ	0xFF5
 43291                           prodh	equ	0xFF4
 43292                           prodl	equ	0xFF3
 43293                           intcon	equ	0xFF2
 43294                           intcon2	equ	0xFF1
 43295                           intcon3	equ	0xFF0
 43296                           indf0	equ	0xFEF
 43297                           postinc0	equ	0xFEE
 43298                           plusw0	equ	0xFEB
 43299                           fsr0h	equ	0xFEA
 43300                           fsr0l	equ	0xFE9
 43301                           wreg	equ	0xFE8
 43302                           postinc1	equ	0xFE6
 43303                           postdec1	equ	0xFE5
 43304                           plusw1	equ	0xFE3
 43305                           fsr1h	equ	0xFE2
 43306                           fsr1l	equ	0xFE1
 43307                           indf2	equ	0xFDF
 43308                           postinc2	equ	0xFDE
 43309                           postdec2	equ	0xFDD
 43310                           plusw2	equ	0xFDB
 43311                           fsr2h	equ	0xFDA
 43312                           fsr2l	equ	0xFD9
 43313                           status	equ	0xFD8
 43314                           
 43315 ;; *************** function _INTERRUPT_InterruptManager *****************
 43316 ;; Defined at:
 43317 ;;		line 57 in file "mcc_generated_files/interrupt_manager.c"
 43318 ;; Parameters:    Size  Location     Type
 43319 ;;		None
 43320 ;; Auto vars:     Size  Location     Type
 43321 ;;		None
 43322 ;; Return value:  Size  Location     Type
 43323 ;;                  1    wreg      void 
 43324 ;; Registers used:
 43325 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43326 ;; Tracked objects:
 43327 ;;		On entry : 0/0
 43328 ;;		On exit  : 0/0
 43329 ;;		Unchanged: 0/0
 43330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43331 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43332 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43333 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43335 ;;Total ram usage:        8 bytes
 43336 ;; Hardware stack levels used:    1
 43337 ;; Hardware stack levels required when called:    6
 43338 ;; This function calls:
 43339 ;;		_INT1_ISR
 43340 ;;		_INT2_ISR
 43341 ;;		_PIN_MANAGER_IOC
 43342 ;;		_TMR1_ISR
 43343 ;; This function is called by:
 43344 ;;		Interrupt level 2
 43345 ;; This function uses a non-reentrant model
 43346 ;;
 43347                           
 43348                           	psect	intcode
 43349  000008                     __pintcode:
 43350                           	opt stack 0
 43351  000008                     _INTERRUPT_InterruptManager:
 43352                           	opt stack 12
 43353                           
 43354                           ;incstack = 0
 43355  000008  CFFA F034          	movff	pclath,??_INTERRUPT_InterruptManager
 43356  00000C  CFFB F035          	movff	pclatu,??_INTERRUPT_InterruptManager+1
 43357  000010  CFE1 F036          	movff	fsr1l,??_INTERRUPT_InterruptManager+2
 43358  000014  CFE2 F037          	movff	fsr1h,??_INTERRUPT_InterruptManager+3
 43359  000018  CFD9 F038          	movff	fsr2l,??_INTERRUPT_InterruptManager+4
 43360  00001C  CFDA F039          	movff	fsr2h,??_INTERRUPT_InterruptManager+5
 43361  000020  CFF3 F03A          	movff	prodl,??_INTERRUPT_InterruptManager+6
 43362  000024  CFF4 F03B          	movff	prodh,??_INTERRUPT_InterruptManager+7
 43363  000028  EE19  F0BC         	lfsr	1,___inthi_sp
 43364                           
 43365                           ;interrupt_manager.c: 60: if(INTCON3bits.INT1IE == 1 && INTCON3bits.INT1IF == 1)
 43366  00002C  B6F0               	btfsc	intcon3,3,c	;volatile
 43367  00002E  A0F0               	btfss	intcon3,0,c	;volatile
 43368  000030  D003               	goto	i2l2439
 43369                           
 43370                           ;interrupt_manager.c: 61: {
 43371                           ;interrupt_manager.c: 62: INT1_ISR();
 43372  000032  EC1A  F052         	call	_INT1_ISR	;wreg free
 43373                           
 43374                           ;interrupt_manager.c: 63: }
 43375  000036  D013               	goto	i2l2447
 43376  000038                     i2l2439:
 43377                           
 43378                           ;interrupt_manager.c: 64: else if(INTCON3bits.INT2IE == 1 && INTCON3bits.INT2IF == 1)
 43379  000038  B8F0               	btfsc	intcon3,4,c	;volatile
 43380  00003A  A2F0               	btfss	intcon3,1,c	;volatile
 43381  00003C  D003               	goto	i2l2441
 43382                           
 43383                           ;interrupt_manager.c: 65: {
 43384                           ;interrupt_manager.c: 66: INT2_ISR();
 43385  00003E  EC16  F052         	call	_INT2_ISR	;wreg free
 43386                           
 43387                           ;interrupt_manager.c: 67: }
 43388  000042  D00D               	goto	i2l2447
 43389  000044                     i2l2441:
 43390                           
 43391                           ;interrupt_manager.c: 68: else if(INTCONbits.PEIE == 1 && PIE1bits.TMR1IE == 1 && PIR1bi
      +                          ts.TMR1IF == 1)
 43392  000044  BCF2               	btfsc	intcon,6,c	;volatile
 43393  000046  A09D               	btfss	3997,0,c	;volatile
 43394  000048  D005               	goto	i2l2443
 43395  00004A  A09E               	btfss	3998,0,c	;volatile
 43396  00004C  D003               	goto	i2l2443
 43397                           
 43398                           ;interrupt_manager.c: 69: {
 43399                           ;interrupt_manager.c: 70: TMR1_ISR();
 43400  00004E  EC82  F051         	call	_TMR1_ISR	;wreg free
 43401                           
 43402                           ;interrupt_manager.c: 71: }
 43403  000052  D005               	goto	i2l2447
 43404  000054                     i2l2443:
 43405                           
 43406                           ;interrupt_manager.c: 72: else if(INTCONbits.RBIE == 1 && INTCONbits.RBIF == 1)
 43407  000054  B6F2               	btfsc	intcon,3,c	;volatile
 43408  000056  A0F2               	btfss	intcon,0,c	;volatile
 43409  000058  D002               	goto	i2l2447
 43410                           
 43411                           ;interrupt_manager.c: 73: {
 43412                           ;interrupt_manager.c: 74: PIN_MANAGER_IOC();
 43413  00005A  EC8A  F051         	call	_PIN_MANAGER_IOC	;wreg free
 43414  00005E                     i2l2447:
 43415  00005E  C03B  FFF4         	movff	??_INTERRUPT_InterruptManager+7,prodh
 43416  000062  C03A  FFF3         	movff	??_INTERRUPT_InterruptManager+6,prodl
 43417  000066  C039  FFDA         	movff	??_INTERRUPT_InterruptManager+5,fsr2h
 43418  00006A  C038  FFD9         	movff	??_INTERRUPT_InterruptManager+4,fsr2l
 43419  00006E  C037  FFE2         	movff	??_INTERRUPT_InterruptManager+3,fsr1h
 43420  000072  C036  FFE1         	movff	??_INTERRUPT_InterruptManager+2,fsr1l
 43421  000076  C035  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
 43422  00007A  C034  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
 43423  00007E  0011               	retfie		f
 43424  000080                     __end_of_INTERRUPT_InterruptManager:
 43425                           	opt stack 0
 43426                           tosu	equ	0xFFF
 43427                           tosh	equ	0xFFE
 43428                           tosl	equ	0xFFD
 43429                           pclatu	equ	0xFFB
 43430                           pclath	equ	0xFFA
 43431                           tblptru	equ	0xFF8
 43432                           tblptrh	equ	0xFF7
 43433                           tblptrl	equ	0xFF6
 43434                           tablat	equ	0xFF5
 43435                           prodh	equ	0xFF4
 43436                           prodl	equ	0xFF3
 43437                           intcon	equ	0xFF2
 43438                           intcon2	equ	0xFF1
 43439                           intcon3	equ	0xFF0
 43440                           indf0	equ	0xFEF
 43441                           postinc0	equ	0xFEE
 43442                           plusw0	equ	0xFEB
 43443                           fsr0h	equ	0xFEA
 43444                           fsr0l	equ	0xFE9
 43445                           wreg	equ	0xFE8
 43446                           postinc1	equ	0xFE6
 43447                           postdec1	equ	0xFE5
 43448                           plusw1	equ	0xFE3
 43449                           fsr1h	equ	0xFE2
 43450                           fsr1l	equ	0xFE1
 43451                           indf2	equ	0xFDF
 43452                           postinc2	equ	0xFDE
 43453                           postdec2	equ	0xFDD
 43454                           plusw2	equ	0xFDB
 43455                           fsr2h	equ	0xFDA
 43456                           fsr2l	equ	0xFD9
 43457                           status	equ	0xFD8
 43458                           
 43459 ;; *************** function _TMR1_ISR *****************
 43460 ;; Defined at:
 43461 ;;		line 159 in file "mcc_generated_files/tmr1.c"
 43462 ;; Parameters:    Size  Location     Type
 43463 ;;		None
 43464 ;; Auto vars:     Size  Location     Type
 43465 ;;		None
 43466 ;; Return value:  Size  Location     Type
 43467 ;;                  1    wreg      void 
 43468 ;; Registers used:
 43469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43470 ;; Tracked objects:
 43471 ;;		On entry : 0/0
 43472 ;;		On exit  : 0/0
 43473 ;;		Unchanged: 0/0
 43474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43478 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43479 ;;Total ram usage:        0 bytes
 43480 ;; Hardware stack levels used:    1
 43481 ;; Hardware stack levels required when called:    5
 43482 ;; This function calls:
 43483 ;;		_TMR1_CallBack
 43484 ;; This function is called by:
 43485 ;;		_INTERRUPT_InterruptManager
 43486 ;; This function uses a non-reentrant model
 43487 ;;
 43488                           
 43489                           	psect	text205
 43490  00A304                     __ptext205:
 43491                           	opt stack 0
 43492  00A304                     _TMR1_ISR:
 43493                           	opt stack 12
 43494                           
 43495                           ;tmr1.c: 163: PIR1bits.TMR1IF = 0;
 43496                           
 43497                           ;incstack = 0
 43498  00A304  909E               	bcf	3998,0,c	;volatile
 43499                           
 43500                           ;tmr1.c: 166: TMR1H = (timer1ReloadVal >> 8);
 43501  00A306  505F               	movf	_timer1ReloadVal+1,w,c	;volatile
 43502  00A308  6ECF               	movwf	4047,c	;volatile
 43503                           
 43504                           ;tmr1.c: 167: TMR1L = (uint8_t) timer1ReloadVal;
 43505  00A30A  C05E  FFCE         	movff	_timer1ReloadVal,4046	;volatile
 43506                           
 43507                           ;tmr1.c: 171: TMR1_CallBack();
 43508  00A30E  EC9A  F04F         	call	_TMR1_CallBack	;wreg free
 43509  00A312  0012               	return		;funcret
 43510  00A314                     __end_of_TMR1_ISR:
 43511                           	opt stack 0
 43512                           tosu	equ	0xFFF
 43513                           tosh	equ	0xFFE
 43514                           tosl	equ	0xFFD
 43515                           pclatu	equ	0xFFB
 43516                           pclath	equ	0xFFA
 43517                           tblptru	equ	0xFF8
 43518                           tblptrh	equ	0xFF7
 43519                           tblptrl	equ	0xFF6
 43520                           tablat	equ	0xFF5
 43521                           prodh	equ	0xFF4
 43522                           prodl	equ	0xFF3
 43523                           intcon	equ	0xFF2
 43524                           intcon2	equ	0xFF1
 43525                           intcon3	equ	0xFF0
 43526                           indf0	equ	0xFEF
 43527                           postinc0	equ	0xFEE
 43528                           plusw0	equ	0xFEB
 43529                           fsr0h	equ	0xFEA
 43530                           fsr0l	equ	0xFE9
 43531                           wreg	equ	0xFE8
 43532                           postinc1	equ	0xFE6
 43533                           postdec1	equ	0xFE5
 43534                           plusw1	equ	0xFE3
 43535                           fsr1h	equ	0xFE2
 43536                           fsr1l	equ	0xFE1
 43537                           indf2	equ	0xFDF
 43538                           postinc2	equ	0xFDE
 43539                           postdec2	equ	0xFDD
 43540                           plusw2	equ	0xFDB
 43541                           fsr2h	equ	0xFDA
 43542                           fsr2l	equ	0xFD9
 43543                           status	equ	0xFD8
 43544                           
 43545 ;; *************** function _TMR1_CallBack *****************
 43546 ;; Defined at:
 43547 ;;		line 174 in file "mcc_generated_files/tmr1.c"
 43548 ;; Parameters:    Size  Location     Type
 43549 ;;		None
 43550 ;; Auto vars:     Size  Location     Type
 43551 ;;		None
 43552 ;; Return value:  Size  Location     Type
 43553 ;;                  1    wreg      void 
 43554 ;; Registers used:
 43555 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, prodl, prodh, cstack
 43556 ;; Tracked objects:
 43557 ;;		On entry : 0/0
 43558 ;;		On exit  : 0/0
 43559 ;;		Unchanged: 0/0
 43560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43565 ;;Total ram usage:        0 bytes
 43566 ;; Hardware stack levels used:    1
 43567 ;; Hardware stack levels required when called:    4
 43568 ;; This function calls:
 43569 ;;		Absolute function
 43570 ;;		_TMR1_DefaultInterruptHandler
 43571 ;;		_TMR_ISR_lora
 43572 ;; This function is called by:
 43573 ;;		_TMR1_ISR
 43574 ;; This function uses a non-reentrant model
 43575 ;;
 43576                           
 43577                           	psect	text206
 43578  009F34                     __ptext206:
 43579                           	opt stack 0
 43580  009F34                     _TMR1_CallBack:
 43581                           	opt stack 12
 43582                           
 43583                           ;tmr1.c: 177: if(TMR1_InterruptHandler)
 43584                           
 43585                           ;incstack = 0
 43586  009F34  0101               	movlb	1	; () banked
 43587  009F36  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
 43588  009F38  0101               	movlb	1	; () banked
 43589  009F3A  11F8               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 43590  009F3C  B4D8               	btfsc	status,2,c
 43591  009F3E  0012               	return	
 43592                           
 43593                           ; BSR set to: 1
 43594                           ;tmr1.c: 178: {
 43595                           ;tmr1.c: 179: TMR1_InterruptHandler();
 43596  009F40  D801               	call	i2u2229_48
 43597  009F42  0012               	return	
 43598  009F44                     i2u2229_48:
 43599  009F44  0005               	push	
 43600  009F46  6EFA               	movwf	pclath,c
 43601  009F48  0101               	movlb	1	; () banked
 43602  009F4A  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
 43603  009F4C  6EFD               	movwf	tosl,c
 43604  009F4E  51F8               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
 43605  009F50  6EFE               	movwf	tosh,c
 43606  009F52  6AFF               	clrf	tosu,c
 43607  009F54  50FA               	movf	pclath,w,c
 43608  009F56  0012               	return		;indir
 43609  009F58                     __end_of_TMR1_CallBack:
 43610                           	opt stack 0
 43611                           tosu	equ	0xFFF
 43612                           tosh	equ	0xFFE
 43613                           tosl	equ	0xFFD
 43614                           pclatu	equ	0xFFB
 43615                           pclath	equ	0xFFA
 43616                           tblptru	equ	0xFF8
 43617                           tblptrh	equ	0xFF7
 43618                           tblptrl	equ	0xFF6
 43619                           tablat	equ	0xFF5
 43620                           prodh	equ	0xFF4
 43621                           prodl	equ	0xFF3
 43622                           intcon	equ	0xFF2
 43623                           intcon2	equ	0xFF1
 43624                           intcon3	equ	0xFF0
 43625                           indf0	equ	0xFEF
 43626                           postinc0	equ	0xFEE
 43627                           plusw0	equ	0xFEB
 43628                           fsr0h	equ	0xFEA
 43629                           fsr0l	equ	0xFE9
 43630                           wreg	equ	0xFE8
 43631                           postinc1	equ	0xFE6
 43632                           postdec1	equ	0xFE5
 43633                           plusw1	equ	0xFE3
 43634                           fsr1h	equ	0xFE2
 43635                           fsr1l	equ	0xFE1
 43636                           indf2	equ	0xFDF
 43637                           postinc2	equ	0xFDE
 43638                           postdec2	equ	0xFDD
 43639                           plusw2	equ	0xFDB
 43640                           fsr2h	equ	0xFDA
 43641                           fsr2l	equ	0xFD9
 43642                           status	equ	0xFD8
 43643                           
 43644 ;; *************** function _TMR1_DefaultInterruptHandler *****************
 43645 ;; Defined at:
 43646 ;;		line 187 in file "mcc_generated_files/tmr1.c"
 43647 ;; Parameters:    Size  Location     Type
 43648 ;;		None
 43649 ;; Auto vars:     Size  Location     Type
 43650 ;;		None
 43651 ;; Return value:  Size  Location     Type
 43652 ;;                  1    wreg      void 
 43653 ;; Registers used:
 43654 ;;		None
 43655 ;; Tracked objects:
 43656 ;;		On entry : 0/0
 43657 ;;		On exit  : 0/0
 43658 ;;		Unchanged: 0/0
 43659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43664 ;;Total ram usage:        0 bytes
 43665 ;; Hardware stack levels used:    1
 43666 ;; This function calls:
 43667 ;;		Nothing
 43668 ;; This function is called by:
 43669 ;;		_TMR1_Initialize
 43670 ;;		_TMR1_CallBack
 43671 ;; This function uses a non-reentrant model
 43672 ;;
 43673                           
 43674                           	psect	text207
 43675  00A47E                     __ptext207:
 43676                           	opt stack 0
 43677  00A47E                     _TMR1_DefaultInterruptHandler:
 43678                           	opt stack 15
 43679                           
 43680                           ;incstack = 0
 43681  00A47E  0012               	return		;funcret
 43682  00A480                     __end_of_TMR1_DefaultInterruptHandler:
 43683                           	opt stack 0
 43684                           tosu	equ	0xFFF
 43685                           tosh	equ	0xFFE
 43686                           tosl	equ	0xFFD
 43687                           pclatu	equ	0xFFB
 43688                           pclath	equ	0xFFA
 43689                           tblptru	equ	0xFF8
 43690                           tblptrh	equ	0xFF7
 43691                           tblptrl	equ	0xFF6
 43692                           tablat	equ	0xFF5
 43693                           prodh	equ	0xFF4
 43694                           prodl	equ	0xFF3
 43695                           intcon	equ	0xFF2
 43696                           intcon2	equ	0xFF1
 43697                           intcon3	equ	0xFF0
 43698                           indf0	equ	0xFEF
 43699                           postinc0	equ	0xFEE
 43700                           plusw0	equ	0xFEB
 43701                           fsr0h	equ	0xFEA
 43702                           fsr0l	equ	0xFE9
 43703                           wreg	equ	0xFE8
 43704                           postinc1	equ	0xFE6
 43705                           postdec1	equ	0xFE5
 43706                           plusw1	equ	0xFE3
 43707                           fsr1h	equ	0xFE2
 43708                           fsr1l	equ	0xFE1
 43709                           indf2	equ	0xFDF
 43710                           postinc2	equ	0xFDE
 43711                           postdec2	equ	0xFDD
 43712                           plusw2	equ	0xFDB
 43713                           fsr2h	equ	0xFDA
 43714                           fsr2l	equ	0xFD9
 43715                           status	equ	0xFD8
 43716                           
 43717 ;; *************** function _TMR_ISR_lora *****************
 43718 ;; Defined at:
 43719 ;;		line 59 in file "mcc_generated_files/LoRaWAN/tmr_lora_addons.c"
 43720 ;; Parameters:    Size  Location     Type
 43721 ;;		None
 43722 ;; Auto vars:     Size  Location     Type
 43723 ;;		None
 43724 ;; Return value:  Size  Location     Type
 43725 ;;                  1    wreg      void 
 43726 ;; Registers used:
 43727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43728 ;; Tracked objects:
 43729 ;;		On entry : 0/0
 43730 ;;		On exit  : 0/0
 43731 ;;		Unchanged: 0/0
 43732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43735 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43736 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43737 ;;Total ram usage:        2 bytes
 43738 ;; Hardware stack levels used:    1
 43739 ;; Hardware stack levels required when called:    3
 43740 ;; This function calls:
 43741 ;;		i2_SwTimersInterrupt
 43742 ;;		i2_TMR_SwapTimer
 43743 ;; This function is called by:
 43744 ;;		_TMR_ISR_Lora_Init
 43745 ;;		_TMR1_CallBack
 43746 ;; This function uses a non-reentrant model
 43747 ;;
 43748                           
 43749                           	psect	text208
 43750  0093E2                     __ptext208:
 43751                           	opt stack 0
 43752  0093E2                     _TMR_ISR_lora:
 43753                           	opt stack 12
 43754                           
 43755                           ;tmr_lora_addons.c: 61: timerOverflow = 1;
 43756                           
 43757                           ;incstack = 0
 43758  0093E2  0E01               	movlw	1
 43759  0093E4  6E4D               	movwf	_timerOverflow,c	;volatile
 43760                           
 43761                           ;tmr_lora_addons.c: 63: ticksToScheduledInterrupt = SwTimersInterrupt();
 43762  0093E6  ECE5  F03A         	call	i2_SwTimersInterrupt	;wreg free
 43763  0093EA  C021  F05A         	movff	?i2_SwTimersInterrupt,_ticksToScheduledInterrupt	;volatile
 43764  0093EE  C022  F05B         	movff	?i2_SwTimersInterrupt+1,_ticksToScheduledInterrupt+1	;volatile
 43765  0093F2  C023  F05C         	movff	?i2_SwTimersInterrupt+2,_ticksToScheduledInterrupt+2	;volatile
 43766  0093F6  C024  F05D         	movff	?i2_SwTimersInterrupt+3,_ticksToScheduledInterrupt+3	;volatile
 43767                           
 43768                           ;tmr_lora_addons.c: 65: if (ticksToScheduledInterrupt < ((uint32_t)0x10000))
 43769  0093FA  505D               	movf	_ticksToScheduledInterrupt+3,w,c	;volatile
 43770  0093FC  E11C               	bnz	i2l242
 43771  0093FE  045C               	decf	_ticksToScheduledInterrupt+2,w,c	;volatile
 43772  009400  B0D8               	btfsc	status,0,c
 43773  009402  0012               	return	
 43774                           
 43775                           ;tmr_lora_addons.c: 66: {
 43776                           ;tmr_lora_addons.c: 67: reloadVal = ((uint32_t)0x10000) - ticksToScheduledInterrupt;
 43777  009404  C05A  F032         	movff	_ticksToScheduledInterrupt,??_TMR_ISR_lora	;volatile
 43778  009408  C05B  F033         	movff	_ticksToScheduledInterrupt+1,??_TMR_ISR_lora+1	;volatile
 43779  00940C  1E32               	comf	??_TMR_ISR_lora,f,c
 43780  00940E  1E33               	comf	??_TMR_ISR_lora+1,f,c
 43781  009410  4A32               	infsnz	??_TMR_ISR_lora,f,c
 43782  009412  2A33               	incf	??_TMR_ISR_lora+1,f,c
 43783  009414  C032  F0F9         	movff	??_TMR_ISR_lora,_reloadVal	;volatile
 43784  009418  C033  F0FA         	movff	??_TMR_ISR_lora+1,_reloadVal+1	;volatile
 43785                           
 43786                           ;tmr_lora_addons.c: 68: ticksAdded = TMR_SwapTimer(reloadVal);
 43787  00941C  C0F9  F009         	movff	_reloadVal,i2TMR_SwapTimer@timerVal	;volatile
 43788  009420  C0FA  F00A         	movff	_reloadVal+1,i2TMR_SwapTimer@timerVal+1	;volatile
 43789  009424  ECB6  F04C         	call	i2_TMR_SwapTimer	;wreg free
 43790  009428  C009  F040         	movff	?i2_TMR_SwapTimer,_ticksAdded	;volatile
 43791  00942C  C00A  F041         	movff	?i2_TMR_SwapTimer+1,_ticksAdded+1	;volatile
 43792  009430  6A42               	clrf	_ticksAdded+2,c	;volatile
 43793  009432  6A43               	clrf	_ticksAdded+3,c	;volatile
 43794  009434  0012               	return	
 43795  009436                     i2l242:
 43796  009436  0012               	return		;funcret
 43797  009438                     __end_of_TMR_ISR_lora:
 43798                           	opt stack 0
 43799                           tosu	equ	0xFFF
 43800                           tosh	equ	0xFFE
 43801                           tosl	equ	0xFFD
 43802                           pclatu	equ	0xFFB
 43803                           pclath	equ	0xFFA
 43804                           tblptru	equ	0xFF8
 43805                           tblptrh	equ	0xFF7
 43806                           tblptrl	equ	0xFF6
 43807                           tablat	equ	0xFF5
 43808                           prodh	equ	0xFF4
 43809                           prodl	equ	0xFF3
 43810                           intcon	equ	0xFF2
 43811                           intcon2	equ	0xFF1
 43812                           intcon3	equ	0xFF0
 43813                           indf0	equ	0xFEF
 43814                           postinc0	equ	0xFEE
 43815                           plusw0	equ	0xFEB
 43816                           fsr0h	equ	0xFEA
 43817                           fsr0l	equ	0xFE9
 43818                           wreg	equ	0xFE8
 43819                           postinc1	equ	0xFE6
 43820                           postdec1	equ	0xFE5
 43821                           plusw1	equ	0xFE3
 43822                           fsr1h	equ	0xFE2
 43823                           fsr1l	equ	0xFE1
 43824                           indf2	equ	0xFDF
 43825                           postinc2	equ	0xFDE
 43826                           postdec2	equ	0xFDD
 43827                           plusw2	equ	0xFDB
 43828                           fsr2h	equ	0xFDA
 43829                           fsr2l	equ	0xFD9
 43830                           status	equ	0xFD8
 43831                           
 43832 ;; *************** function i2_TMR_SwapTimer *****************
 43833 ;; Defined at:
 43834 ;;		line 112 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 43835 ;; Parameters:    Size  Location     Type
 43836 ;;  timerVal        2    8[COMRAM] unsigned int 
 43837 ;; Auto vars:     Size  Location     Type
 43838 ;;		None
 43839 ;; Return value:  Size  Location     Type
 43840 ;;                  2    8[COMRAM] unsigned int 
 43841 ;; Registers used:
 43842 ;;		wreg, status,2, status,0, cstack
 43843 ;; Tracked objects:
 43844 ;;		On entry : 0/0
 43845 ;;		On exit  : 0/0
 43846 ;;		Unchanged: 0/0
 43847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43852 ;;Total ram usage:        2 bytes
 43853 ;; Hardware stack levels used:    1
 43854 ;; Hardware stack levels required when called:    1
 43855 ;; This function calls:
 43856 ;;		i2_TMR1_ReadTimer
 43857 ;;		i2_TMR1_WriteTimer
 43858 ;; This function is called by:
 43859 ;;		_TMR_ISR_lora
 43860 ;; This function uses a non-reentrant model
 43861 ;;
 43862                           
 43863                           	psect	text209
 43864  00996C                     __ptext209:
 43865                           	opt stack 0
 43866  00996C                     i2_TMR_SwapTimer:
 43867                           	opt stack 13
 43868                           
 43869                           ;sw_timer.c: 114: static uint16_t oldVal;
 43870                           ;sw_timer.c: 115: static uint16_t retVal;
 43871                           ;sw_timer.c: 117: oldVal = TMR1_ReadTimer();
 43872                           
 43873                           ;incstack = 0
 43874  00996C  ECBF  F050         	call	i2_TMR1_ReadTimer	;wreg free
 43875  009970  C001  F046         	movff	?i2_TMR1_ReadTimer,TMR_SwapTimer@oldVal
 43876  009974  C002  F047         	movff	?i2_TMR1_ReadTimer+1,TMR_SwapTimer@oldVal+1
 43877  009978                     i2l11421:
 43878  009978  ECBF  F050         	call	i2_TMR1_ReadTimer	;wreg free
 43879  00997C  5046               	movf	TMR_SwapTimer@oldVal,w,c
 43880  00997E  1801               	xorwf	?i2_TMR1_ReadTimer,w,c
 43881  009980  E104               	bnz	i2l11423
 43882  009982  5047               	movf	TMR_SwapTimer@oldVal+1,w,c
 43883  009984  1802               	xorwf	?i2_TMR1_ReadTimer+1,w,c
 43884  009986  B4D8               	btfsc	status,2,c
 43885  009988  D7F7               	goto	i2l11421
 43886  00998A                     i2l11423:
 43887                           
 43888                           ;sw_timer.c: 125: TMR1_WriteTimer(timerVal);
 43889  00998A  C009  F001         	movff	i2TMR_SwapTimer@timerVal,i2TMR1_WriteTimer@timerVal
 43890  00998E  C00A  F002         	movff	i2TMR_SwapTimer@timerVal+1,i2TMR1_WriteTimer@timerVal+1
 43891  009992  ECDC  F050         	call	i2_TMR1_WriteTimer	;wreg free
 43892                           
 43893                           ;sw_timer.c: 128: oldVal++;
 43894  009996  4A46               	infsnz	TMR_SwapTimer@oldVal,f,c
 43895  009998  2A47               	incf	TMR_SwapTimer@oldVal+1,f,c
 43896                           
 43897                           ;sw_timer.c: 130: retVal = oldVal;
 43898  00999A  C046  F048         	movff	TMR_SwapTimer@oldVal,TMR_SwapTimer@retVal
 43899  00999E  C047  F049         	movff	TMR_SwapTimer@oldVal+1,TMR_SwapTimer@retVal+1
 43900                           
 43901                           ;sw_timer.c: 132: return retVal;
 43902  0099A2  C048  F009         	movff	TMR_SwapTimer@retVal,?i2_TMR_SwapTimer
 43903  0099A6  C049  F00A         	movff	TMR_SwapTimer@retVal+1,?i2_TMR_SwapTimer+1
 43904  0099AA  0012               	return	
 43905  0099AC                     __end_ofi2_TMR_SwapTimer:
 43906                           	opt stack 0
 43907                           tosu	equ	0xFFF
 43908                           tosh	equ	0xFFE
 43909                           tosl	equ	0xFFD
 43910                           pclatu	equ	0xFFB
 43911                           pclath	equ	0xFFA
 43912                           tblptru	equ	0xFF8
 43913                           tblptrh	equ	0xFF7
 43914                           tblptrl	equ	0xFF6
 43915                           tablat	equ	0xFF5
 43916                           prodh	equ	0xFF4
 43917                           prodl	equ	0xFF3
 43918                           intcon	equ	0xFF2
 43919                           intcon2	equ	0xFF1
 43920                           intcon3	equ	0xFF0
 43921                           indf0	equ	0xFEF
 43922                           postinc0	equ	0xFEE
 43923                           plusw0	equ	0xFEB
 43924                           fsr0h	equ	0xFEA
 43925                           fsr0l	equ	0xFE9
 43926                           wreg	equ	0xFE8
 43927                           postinc1	equ	0xFE6
 43928                           postdec1	equ	0xFE5
 43929                           plusw1	equ	0xFE3
 43930                           fsr1h	equ	0xFE2
 43931                           fsr1l	equ	0xFE1
 43932                           indf2	equ	0xFDF
 43933                           postinc2	equ	0xFDE
 43934                           postdec2	equ	0xFDD
 43935                           plusw2	equ	0xFDB
 43936                           fsr2h	equ	0xFDA
 43937                           fsr2l	equ	0xFD9
 43938                           status	equ	0xFD8
 43939                           
 43940 ;; *************** function i2_TMR1_WriteTimer *****************
 43941 ;; Defined at:
 43942 ;;		line 120 in file "mcc_generated_files/tmr1.c"
 43943 ;; Parameters:    Size  Location     Type
 43944 ;;  timerVal        2    0[COMRAM] unsigned int 
 43945 ;; Auto vars:     Size  Location     Type
 43946 ;;		None
 43947 ;; Return value:  Size  Location     Type
 43948 ;;                  1    wreg      void 
 43949 ;; Registers used:
 43950 ;;		wreg, status,2
 43951 ;; Tracked objects:
 43952 ;;		On entry : 0/0
 43953 ;;		On exit  : 0/0
 43954 ;;		Unchanged: 0/0
 43955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 43956 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43959 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 43960 ;;Total ram usage:        2 bytes
 43961 ;; Hardware stack levels used:    1
 43962 ;; This function calls:
 43963 ;;		Nothing
 43964 ;; This function is called by:
 43965 ;;		i2_TMR_SwapTimer
 43966 ;; This function uses a non-reentrant model
 43967 ;;
 43968                           
 43969                           	psect	text210
 43970  00A1B8                     __ptext210:
 43971                           	opt stack 0
 43972  00A1B8                     i2_TMR1_WriteTimer:
 43973                           	opt stack 13
 43974                           
 43975                           ;tmr1.c: 122: if (T1CONbits.T1SYNC == 1)
 43976                           
 43977                           ;incstack = 0
 43978  00A1B8  A4CD               	btfss	4045,2,c	;volatile
 43979  00A1BA  D007               	goto	i2l10749
 43980                           
 43981                           ;tmr1.c: 123: {
 43982                           ;tmr1.c: 125: T1CONbits.TMR1ON = 0;
 43983  00A1BC  90CD               	bcf	4045,0,c	;volatile
 43984                           
 43985                           ;tmr1.c: 128: TMR1H = (timerVal >> 8);
 43986  00A1BE  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 43987  00A1C0  6ECF               	movwf	4047,c	;volatile
 43988                           
 43989                           ;tmr1.c: 129: TMR1L = (uint8_t) timerVal;
 43990  00A1C2  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 43991                           
 43992                           ;tmr1.c: 132: T1CONbits.TMR1ON =1;
 43993  00A1C6  80CD               	bsf	4045,0,c	;volatile
 43994                           
 43995                           ;tmr1.c: 133: }
 43996  00A1C8  0012               	return	
 43997  00A1CA                     i2l10749:
 43998                           
 43999                           ;tmr1.c: 134: else
 44000                           ;tmr1.c: 135: {
 44001                           ;tmr1.c: 137: TMR1H = (timerVal >> 8);
 44002  00A1CA  5002               	movf	i2TMR1_WriteTimer@timerVal+1,w,c
 44003  00A1CC  6ECF               	movwf	4047,c	;volatile
 44004                           
 44005                           ;tmr1.c: 138: TMR1L = (uint8_t) timerVal;
 44006  00A1CE  C001  FFCE         	movff	i2TMR1_WriteTimer@timerVal,4046	;volatile
 44007  00A1D2  0012               	return	
 44008  00A1D4                     __end_ofi2_TMR1_WriteTimer:
 44009                           	opt stack 0
 44010                           tosu	equ	0xFFF
 44011                           tosh	equ	0xFFE
 44012                           tosl	equ	0xFFD
 44013                           pclatu	equ	0xFFB
 44014                           pclath	equ	0xFFA
 44015                           tblptru	equ	0xFF8
 44016                           tblptrh	equ	0xFF7
 44017                           tblptrl	equ	0xFF6
 44018                           tablat	equ	0xFF5
 44019                           prodh	equ	0xFF4
 44020                           prodl	equ	0xFF3
 44021                           intcon	equ	0xFF2
 44022                           intcon2	equ	0xFF1
 44023                           intcon3	equ	0xFF0
 44024                           indf0	equ	0xFEF
 44025                           postinc0	equ	0xFEE
 44026                           plusw0	equ	0xFEB
 44027                           fsr0h	equ	0xFEA
 44028                           fsr0l	equ	0xFE9
 44029                           wreg	equ	0xFE8
 44030                           postinc1	equ	0xFE6
 44031                           postdec1	equ	0xFE5
 44032                           plusw1	equ	0xFE3
 44033                           fsr1h	equ	0xFE2
 44034                           fsr1l	equ	0xFE1
 44035                           indf2	equ	0xFDF
 44036                           postinc2	equ	0xFDE
 44037                           postdec2	equ	0xFDD
 44038                           plusw2	equ	0xFDB
 44039                           fsr2h	equ	0xFDA
 44040                           fsr2l	equ	0xFD9
 44041                           status	equ	0xFD8
 44042                           
 44043 ;; *************** function i2_SwTimersInterrupt *****************
 44044 ;; Defined at:
 44045 ;;		line 287 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 44046 ;; Parameters:    Size  Location     Type
 44047 ;;		None
 44048 ;; Auto vars:     Size  Location     Type
 44049 ;;  SwTimersInte    4   44[COMRAM] unsigned long 
 44050 ;;  SwTimersInte    4   40[COMRAM] unsigned long 
 44051 ;;  SwTimersInte    1   48[COMRAM] unsigned char 
 44052 ;; Return value:  Size  Location     Type
 44053 ;;                  4   32[COMRAM] unsigned long 
 44054 ;; Registers used:
 44055 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44056 ;; Tracked objects:
 44057 ;;		On entry : 0/0
 44058 ;;		On exit  : 0/0
 44059 ;;		Unchanged: 0/0
 44060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44062 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44063 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44064 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44065 ;;Total ram usage:       17 bytes
 44066 ;; Hardware stack levels used:    1
 44067 ;; Hardware stack levels required when called:    2
 44068 ;; This function calls:
 44069 ;;		i2_TMR_GetDeltaTime
 44070 ;; This function is called by:
 44071 ;;		_TMR_ISR_lora
 44072 ;; This function uses a non-reentrant model
 44073 ;;
 44074                           
 44075                           	psect	text211
 44076  0075CA                     __ptext211:
 44077                           	opt stack 0
 44078  0075CA                     i2_SwTimersInterrupt:
 44079                           	opt stack 12
 44080                           
 44081                           ;sw_timer.c: 289: uint8_t i;
 44082                           ;sw_timer.c: 290: uint32_t timeElapsed;
 44083                           ;sw_timer.c: 291: uint32_t ticksToNextTimerEvent = 0xFFFFFFFF;
 44084                           
 44085                           ;incstack = 0
 44086  0075CA  682D               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent,c
 44087  0075CC  682E               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,c
 44088  0075CE  682F               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,c
 44089  0075D0  6830               	setf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,c
 44090                           
 44091                           ;sw_timer.c: 295: timeElapsed = TMR_GetDeltaTime();
 44092  0075D2  EC3C  F02F         	call	i2_TMR_GetDeltaTime	;wreg free
 44093  0075D6  C009  F029         	movff	?i2_TMR_GetDeltaTime,i2SwTimersInterrupt@timeElapsed
 44094  0075DA  C00A  F02A         	movff	?i2_TMR_GetDeltaTime+1,i2SwTimersInterrupt@timeElapsed+1
 44095  0075DE  C00B  F02B         	movff	?i2_TMR_GetDeltaTime+2,i2SwTimersInterrupt@timeElapsed+2
 44096  0075E2  C00C  F02C         	movff	?i2_TMR_GetDeltaTime+3,i2SwTimersInterrupt@timeElapsed+3
 44097                           
 44098                           ;sw_timer.c: 297: for (i = 0; i < allocatedTimers; i++)
 44099  0075E6  0E00               	movlw	0
 44100  0075E8  6E31               	movwf	i2SwTimersInterrupt@i,c
 44101  0075EA  D061               	goto	i2l11451
 44102  0075EC                     i2l11439:
 44103                           
 44104                           ;sw_timer.c: 298: {
 44105                           ;sw_timer.c: 301: if (swTimers[i].running == 1)
 44106  0075EC  5031               	movf	i2SwTimersInterrupt@i,w,c
 44107  0075EE  0D08               	mullw	8
 44108  0075F0  0E04               	movlw	4
 44109  0075F2  26F3               	addwf	prodl,f,c
 44110  0075F4  0E00               	movlw	0
 44111  0075F6  22F4               	addwfc	prodh,f,c
 44112  0075F8  0E00               	movlw	low _swTimers
 44113  0075FA  24F3               	addwf	prodl,w,c
 44114  0075FC  6ED9               	movwf	fsr2l,c
 44115  0075FE  0E03               	movlw	high _swTimers
 44116  007600  20F4               	addwfc	prodh,w,c
 44117  007602  6EDA               	movwf	fsr2h,c
 44118  007604  04DE               	decf	postinc2,w,c
 44119  007606  A4D8               	btfss	status,2,c
 44120  007608  D051               	goto	i2l11449
 44121                           
 44122                           ;sw_timer.c: 302: {
 44123                           ;sw_timer.c: 303: if (swTimers[i].ticksRemaining <= timeElapsed)
 44124  00760A  5031               	movf	i2SwTimersInterrupt@i,w,c
 44125  00760C  0D08               	mullw	8
 44126  00760E  0E00               	movlw	low _swTimers
 44127  007610  24F3               	addwf	prodl,w,c
 44128  007612  6ED9               	movwf	fsr2l,c
 44129  007614  0E03               	movlw	high _swTimers
 44130  007616  20F4               	addwfc	prodh,w,c
 44131  007618  6EDA               	movwf	fsr2h,c
 44132  00761A  50DE               	movf	postinc2,w,c
 44133  00761C  5C29               	subwf	i2SwTimersInterrupt@timeElapsed,w,c
 44134  00761E  50DE               	movf	postinc2,w,c
 44135  007620  582A               	subwfb	i2SwTimersInterrupt@timeElapsed+1,w,c
 44136  007622  50DE               	movf	postinc2,w,c
 44137  007624  582B               	subwfb	i2SwTimersInterrupt@timeElapsed+2,w,c
 44138  007626  50DE               	movf	postinc2,w,c
 44139  007628  582C               	subwfb	i2SwTimersInterrupt@timeElapsed+3,w,c
 44140  00762A  A0D8               	btfss	status,0,c
 44141  00762C  D00D               	goto	i2l11445
 44142                           
 44143                           ;sw_timer.c: 304: {
 44144                           ;sw_timer.c: 305: swTimers[i].ticksRemaining = 0;
 44145  00762E  5031               	movf	i2SwTimersInterrupt@i,w,c
 44146  007630  0D08               	mullw	8
 44147  007632  0E00               	movlw	low _swTimers
 44148  007634  24F3               	addwf	prodl,w,c
 44149  007636  6ED9               	movwf	fsr2l,c
 44150  007638  0E03               	movlw	high _swTimers
 44151  00763A  20F4               	addwfc	prodh,w,c
 44152  00763C  6EDA               	movwf	fsr2h,c
 44153  00763E  6ADE               	clrf	postinc2,c
 44154  007640  6ADE               	clrf	postinc2,c
 44155  007642  6ADE               	clrf	postinc2,c
 44156  007644  6ADD               	clrf	postdec2,c
 44157                           
 44158                           ;sw_timer.c: 306: }
 44159  007646  D032               	goto	i2l11449
 44160  007648                     i2l11445:
 44161                           
 44162                           ;sw_timer.c: 307: else
 44163                           ;sw_timer.c: 308: {
 44164                           ;sw_timer.c: 309: swTimers[i].ticksRemaining -= timeElapsed;
 44165  007648  5031               	movf	i2SwTimersInterrupt@i,w,c
 44166  00764A  0D08               	mullw	8
 44167  00764C  0E00               	movlw	low _swTimers
 44168  00764E  24F3               	addwf	prodl,w,c
 44169  007650  6ED9               	movwf	fsr2l,c
 44170  007652  0E03               	movlw	high _swTimers
 44171  007654  20F4               	addwfc	prodh,w,c
 44172  007656  6EDA               	movwf	fsr2h,c
 44173  007658  5029               	movf	i2SwTimersInterrupt@timeElapsed,w,c
 44174  00765A  5EDE               	subwf	postinc2,f,c
 44175  00765C  502A               	movf	i2SwTimersInterrupt@timeElapsed+1,w,c
 44176  00765E  5ADE               	subwfb	postinc2,f,c
 44177  007660  502B               	movf	i2SwTimersInterrupt@timeElapsed+2,w,c
 44178  007662  5ADE               	subwfb	postinc2,f,c
 44179  007664  502C               	movf	i2SwTimersInterrupt@timeElapsed+3,w,c
 44180  007666  5ADE               	subwfb	postinc2,f,c
 44181                           
 44182                           ;sw_timer.c: 312: if (swTimers[i].ticksRemaining < ticksToNextTimerEvent)
 44183  007668  5031               	movf	i2SwTimersInterrupt@i,w,c
 44184  00766A  0D08               	mullw	8
 44185  00766C  0E00               	movlw	low _swTimers
 44186  00766E  24F3               	addwf	prodl,w,c
 44187  007670  6ED9               	movwf	fsr2l,c
 44188  007672  0E03               	movlw	high _swTimers
 44189  007674  20F4               	addwfc	prodh,w,c
 44190  007676  6EDA               	movwf	fsr2h,c
 44191  007678  502D               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent,w,c
 44192  00767A  5CDE               	subwf	postinc2,w,c
 44193  00767C  502E               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+1,w,c
 44194  00767E  58DE               	subwfb	postinc2,w,c
 44195  007680  502F               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+2,w,c
 44196  007682  58DE               	subwfb	postinc2,w,c
 44197  007684  5030               	movf	i2SwTimersInterrupt@ticksToNextTimerEvent+3,w,c
 44198  007686  58DE               	subwfb	postinc2,w,c
 44199  007688  B0D8               	btfsc	status,0,c
 44200  00768A  D010               	goto	i2l11449
 44201                           
 44202                           ;sw_timer.c: 313: {
 44203                           ;sw_timer.c: 314: ticksToNextTimerEvent = swTimers[i].ticksRemaining;
 44204  00768C  5031               	movf	i2SwTimersInterrupt@i,w,c
 44205  00768E  0D08               	mullw	8
 44206  007690  0E00               	movlw	low _swTimers
 44207  007692  24F3               	addwf	prodl,w,c
 44208  007694  6ED9               	movwf	fsr2l,c
 44209  007696  0E03               	movlw	high _swTimers
 44210  007698  20F4               	addwfc	prodh,w,c
 44211  00769A  6EDA               	movwf	fsr2h,c
 44212  00769C  CFDE F02D          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent
 44213  0076A0  CFDE F02E          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+1
 44214  0076A4  CFDE F02F          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+2
 44215  0076A8  CFDE F030          	movff	postinc2,i2SwTimersInterrupt@ticksToNextTimerEvent+3
 44216  0076AC                     i2l11449:
 44217  0076AC  2A31               	incf	i2SwTimersInterrupt@i,f,c
 44218  0076AE                     i2l11451:
 44219  0076AE  0100               	movlb	0	; () banked
 44220  0076B0  51FB               	movf	_allocatedTimers& (0+255),w,b	;volatile
 44221  0076B2  5C31               	subwf	i2SwTimersInterrupt@i,w,c
 44222  0076B4  A0D8               	btfss	status,0,c
 44223  0076B6  D79A               	goto	i2l11439
 44224                           
 44225                           ; BSR set to: 0
 44226                           ;sw_timer.c: 315: }
 44227                           ;sw_timer.c: 316: }
 44228                           ;sw_timer.c: 317: }
 44229                           ;sw_timer.c: 318: }
 44230                           ;sw_timer.c: 320: return ticksToNextTimerEvent;
 44231  0076B8  C02D  F021         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent,?i2_SwTimersInterrupt
 44232  0076BC  C02E  F022         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+1,?i2_SwTimersInterrupt+1
 44233  0076C0  C02F  F023         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+2,?i2_SwTimersInterrupt+2
 44234  0076C4  C030  F024         	movff	i2SwTimersInterrupt@ticksToNextTimerEvent+3,?i2_SwTimersInterrupt+3
 44235                           
 44236                           ; BSR set to: 0
 44237  0076C8  0012               	return		;funcret
 44238  0076CA                     __end_ofi2_SwTimersInterrupt:
 44239                           	opt stack 0
 44240                           tosu	equ	0xFFF
 44241                           tosh	equ	0xFFE
 44242                           tosl	equ	0xFFD
 44243                           pclatu	equ	0xFFB
 44244                           pclath	equ	0xFFA
 44245                           tblptru	equ	0xFF8
 44246                           tblptrh	equ	0xFF7
 44247                           tblptrl	equ	0xFF6
 44248                           tablat	equ	0xFF5
 44249                           prodh	equ	0xFF4
 44250                           prodl	equ	0xFF3
 44251                           intcon	equ	0xFF2
 44252                           intcon2	equ	0xFF1
 44253                           intcon3	equ	0xFF0
 44254                           indf0	equ	0xFEF
 44255                           postinc0	equ	0xFEE
 44256                           plusw0	equ	0xFEB
 44257                           fsr0h	equ	0xFEA
 44258                           fsr0l	equ	0xFE9
 44259                           wreg	equ	0xFE8
 44260                           postinc1	equ	0xFE6
 44261                           postdec1	equ	0xFE5
 44262                           plusw1	equ	0xFE3
 44263                           fsr1h	equ	0xFE2
 44264                           fsr1l	equ	0xFE1
 44265                           indf2	equ	0xFDF
 44266                           postinc2	equ	0xFDE
 44267                           postdec2	equ	0xFDD
 44268                           plusw2	equ	0xFDB
 44269                           fsr2h	equ	0xFDA
 44270                           fsr2l	equ	0xFD9
 44271                           status	equ	0xFD8
 44272                           
 44273 ;; *************** function i2_TMR_GetDeltaTime *****************
 44274 ;; Defined at:
 44275 ;;		line 88 in file "mcc_generated_files/LoRaWAN/sw_timer.c"
 44276 ;; Parameters:    Size  Location     Type
 44277 ;;		None
 44278 ;; Auto vars:     Size  Location     Type
 44279 ;;		None
 44280 ;; Return value:  Size  Location     Type
 44281 ;;                  4    8[COMRAM] unsigned long 
 44282 ;; Registers used:
 44283 ;;		wreg, status,2, status,0, cstack
 44284 ;; Tracked objects:
 44285 ;;		On entry : 0/0
 44286 ;;		On exit  : 0/0
 44287 ;;		Unchanged: 0/0
 44288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44289 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44290 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44291 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44292 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44293 ;;Total ram usage:       24 bytes
 44294 ;; Hardware stack levels used:    1
 44295 ;; Hardware stack levels required when called:    1
 44296 ;; This function calls:
 44297 ;;		i2_TMR1_ReadTimer
 44298 ;; This function is called by:
 44299 ;;		i2_SwTimersInterrupt
 44300 ;; This function uses a non-reentrant model
 44301 ;;
 44302                           
 44303                           	psect	text212
 44304  005E78                     __ptext212:
 44305                           	opt stack 0
 44306  005E78                     i2_TMR_GetDeltaTime:
 44307                           	opt stack 12
 44308                           
 44309                           ;sw_timer.c: 90: static uint32_t retVal;
 44310                           ;sw_timer.c: 91: static uint16_t tmrVal;
 44311                           ;sw_timer.c: 93: tmrVal = TMR1_ReadTimer();
 44312                           
 44313                           ; BSR set to: 0
 44314                           ;incstack = 0
 44315  005E78  ECBF  F050         	call	i2_TMR1_ReadTimer	;wreg free
 44316  005E7C  C001  F044         	movff	?i2_TMR1_ReadTimer,TMR_GetDeltaTime@tmrVal
 44317  005E80  C002  F045         	movff	?i2_TMR1_ReadTimer+1,TMR_GetDeltaTime@tmrVal+1
 44318                           
 44319                           ;sw_timer.c: 95: if (timerOverflow == 1)
 44320  005E84  044D               	decf	_timerOverflow,w,c	;volatile
 44321  005E86  A4D8               	btfss	status,2,c
 44322  005E88  D06C               	goto	i2l10733
 44323                           
 44324                           ;sw_timer.c: 96: {
 44325                           ;sw_timer.c: 97: timerOverflow = 0;
 44326  005E8A  0E00               	movlw	0
 44327  005E8C  6E4D               	movwf	_timerOverflow,c	;volatile
 44328                           
 44329                           ;sw_timer.c: 98: retVal = ((uint32_t)0x10000) - reloadVal + tmrVal - ticksAccounted + ti
      +                          cksAdded;
 44330  005E8E  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 44331  005E92  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 44332  005E96  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 44333  005E9A  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 44334  005E9E  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 44335  005EA0  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 44336  005EA2  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 44337  005EA4  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 44338  005EA6  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 44339  005EA8  0E00               	movlw	0
 44340  005EAA  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 44341  005EAC  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 44342  005EAE  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 44343  005EB0  0100               	movlb	0	; () banked
 44344  005EB2  51F9               	movf	_reloadVal& (0+255),w,b	;volatile
 44345  005EB4  6E11               	movwf	(??i2_TMR_GetDeltaTime+4)& (0+255),c
 44346  005EB6  0100               	movlb	0	; () banked
 44347  005EB8  51FA               	movf	(_reloadVal+1)& (0+255),w,b	;volatile
 44348  005EBA  6E12               	movwf	(??i2_TMR_GetDeltaTime+5)& (0+255),c
 44349  005EBC  6A13               	clrf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 44350  005EBE  6A14               	clrf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 44351  005EC0  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 44352  005EC2  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 44353  005EC4  1E13               	comf	??i2_TMR_GetDeltaTime+6,f,c
 44354  005EC6  1E14               	comf	??i2_TMR_GetDeltaTime+7,f,c
 44355  005EC8  2A11               	incf	??i2_TMR_GetDeltaTime+4,f,c
 44356  005ECA  0E00               	movlw	0
 44357  005ECC  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 44358  005ECE  2213               	addwfc	??i2_TMR_GetDeltaTime+6,f,c
 44359  005ED0  2214               	addwfc	??i2_TMR_GetDeltaTime+7,f,c
 44360  005ED2  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 44361  005ED4  2411               	addwf	??i2_TMR_GetDeltaTime+4,w,c
 44362  005ED6  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 44363  005ED8  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 44364  005EDA  2012               	addwfc	??i2_TMR_GetDeltaTime+5,w,c
 44365  005EDC  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 44366  005EDE  0E00               	movlw	0
 44367  005EE0  2013               	addwfc	??i2_TMR_GetDeltaTime+6,w,c
 44368  005EE2  6E17               	movwf	(??i2_TMR_GetDeltaTime+10)& (0+255),c
 44369  005EE4  0E00               	movlw	0
 44370  005EE6  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 44371  005EE8  6E18               	movwf	(??i2_TMR_GetDeltaTime+11)& (0+255),c
 44372  005EEA  500D               	movf	??i2_TMR_GetDeltaTime,w,c
 44373  005EEC  2415               	addwf	??i2_TMR_GetDeltaTime+8,w,c
 44374  005EEE  6E19               	movwf	(??i2_TMR_GetDeltaTime+12)& (0+255),c
 44375  005EF0  500E               	movf	??i2_TMR_GetDeltaTime+1,w,c
 44376  005EF2  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 44377  005EF4  6E1A               	movwf	(??i2_TMR_GetDeltaTime+13)& (0+255),c
 44378  005EF6  500F               	movf	??i2_TMR_GetDeltaTime+2,w,c
 44379  005EF8  2017               	addwfc	??i2_TMR_GetDeltaTime+10,w,c
 44380  005EFA  6E1B               	movwf	(??i2_TMR_GetDeltaTime+14)& (0+255),c
 44381  005EFC  5010               	movf	??i2_TMR_GetDeltaTime+3,w,c
 44382  005EFE  2018               	addwfc	??i2_TMR_GetDeltaTime+11,w,c
 44383  005F00  6E1C               	movwf	(??i2_TMR_GetDeltaTime+15)& (0+255),c
 44384  005F02  5040               	movf	_ticksAdded,w,c	;volatile
 44385  005F04  2419               	addwf	??i2_TMR_GetDeltaTime+12,w,c
 44386  005F06  6E1D               	movwf	(??i2_TMR_GetDeltaTime+16)& (0+255),c
 44387  005F08  5041               	movf	_ticksAdded+1,w,c	;volatile
 44388  005F0A  201A               	addwfc	??i2_TMR_GetDeltaTime+13,w,c
 44389  005F0C  6E1E               	movwf	(??i2_TMR_GetDeltaTime+17)& (0+255),c
 44390  005F0E  5042               	movf	_ticksAdded+2,w,c	;volatile
 44391  005F10  201B               	addwfc	??i2_TMR_GetDeltaTime+14,w,c
 44392  005F12  6E1F               	movwf	(??i2_TMR_GetDeltaTime+18)& (0+255),c
 44393  005F14  5043               	movf	_ticksAdded+3,w,c	;volatile
 44394  005F16  201C               	addwfc	??i2_TMR_GetDeltaTime+15,w,c
 44395  005F18  6E20               	movwf	(??i2_TMR_GetDeltaTime+19)& (0+255),c
 44396  005F1A  0E00               	movlw	0
 44397  005F1C  241D               	addwf	??i2_TMR_GetDeltaTime+16,w,c
 44398  005F1E  0101               	movlb	1	; () banked
 44399  005F20  6F82               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 44400  005F22  0E00               	movlw	0
 44401  005F24  201E               	addwfc	??i2_TMR_GetDeltaTime+17,w,c
 44402  005F26  0101               	movlb	1	; () banked
 44403  005F28  6F83               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 44404  005F2A  0E01               	movlw	1
 44405  005F2C  201F               	addwfc	??i2_TMR_GetDeltaTime+18,w,c
 44406  005F2E  0101               	movlb	1	; () banked
 44407  005F30  6F84               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 44408  005F32  0E00               	movlw	0
 44409  005F34  2020               	addwfc	??i2_TMR_GetDeltaTime+19,w,c
 44410  005F36  0101               	movlb	1	; () banked
 44411  005F38  6F85               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 44412                           
 44413                           ; BSR set to: 1
 44414                           ;sw_timer.c: 99: ticksAccounted = tmrVal;
 44415  005F3A  C044  F03C         	movff	TMR_GetDeltaTime@tmrVal,_ticksAccounted	;volatile
 44416  005F3E  C045  F03D         	movff	TMR_GetDeltaTime@tmrVal+1,_ticksAccounted+1	;volatile
 44417  005F42  6A3E               	clrf	_ticksAccounted+2,c	;volatile
 44418  005F44  6A3F               	clrf	_ticksAccounted+3,c	;volatile
 44419                           
 44420                           ; BSR set to: 1
 44421                           ;sw_timer.c: 100: ticksAdded = 0;
 44422  005F46  0E00               	movlw	0
 44423  005F48  6E40               	movwf	_ticksAdded,c	;volatile
 44424  005F4A  0E00               	movlw	0
 44425  005F4C  6E41               	movwf	_ticksAdded+1,c	;volatile
 44426  005F4E  0E00               	movlw	0
 44427  005F50  6E42               	movwf	_ticksAdded+2,c	;volatile
 44428  005F52  0E00               	movlw	0
 44429  005F54  6E43               	movwf	_ticksAdded+3,c	;volatile
 44430                           
 44431                           ; BSR set to: 1
 44432                           ;sw_timer.c: 101: reloadVal = 0;
 44433  005F56  0E00               	movlw	0
 44434  005F58  0100               	movlb	0	; () banked
 44435  005F5A  6FFA               	movwf	(_reloadVal+1)& (0+255),b	;volatile
 44436  005F5C  0E00               	movlw	0
 44437  005F5E  6FF9               	movwf	_reloadVal& (0+255),b	;volatile
 44438                           
 44439                           ;sw_timer.c: 102: }
 44440  005F60  D045               	goto	i2l10735
 44441  005F62                     i2l10733:
 44442                           
 44443                           ;sw_timer.c: 103: else
 44444                           ;sw_timer.c: 104: {
 44445                           ;sw_timer.c: 105: retVal = tmrVal - reloadVal - ticksAccounted + ticksAdded;
 44446  005F62  C03C  F00D         	movff	_ticksAccounted,??i2_TMR_GetDeltaTime	;volatile
 44447  005F66  C03D  F00E         	movff	_ticksAccounted+1,??i2_TMR_GetDeltaTime+1	;volatile
 44448  005F6A  C03E  F00F         	movff	_ticksAccounted+2,??i2_TMR_GetDeltaTime+2	;volatile
 44449  005F6E  C03F  F010         	movff	_ticksAccounted+3,??i2_TMR_GetDeltaTime+3	;volatile
 44450  005F72  1E0D               	comf	??i2_TMR_GetDeltaTime,f,c
 44451  005F74  1E0E               	comf	??i2_TMR_GetDeltaTime+1,f,c
 44452  005F76  1E0F               	comf	??i2_TMR_GetDeltaTime+2,f,c
 44453  005F78  1E10               	comf	??i2_TMR_GetDeltaTime+3,f,c
 44454  005F7A  2A0D               	incf	??i2_TMR_GetDeltaTime,f,c
 44455  005F7C  0E00               	movlw	0
 44456  005F7E  220E               	addwfc	??i2_TMR_GetDeltaTime+1,f,c
 44457  005F80  220F               	addwfc	??i2_TMR_GetDeltaTime+2,f,c
 44458  005F82  2210               	addwfc	??i2_TMR_GetDeltaTime+3,f,c
 44459  005F84  C0F9  F011         	movff	_reloadVal,??i2_TMR_GetDeltaTime+4	;volatile
 44460  005F88  C0FA  F012         	movff	_reloadVal+1,??i2_TMR_GetDeltaTime+5	;volatile
 44461  005F8C  1E11               	comf	??i2_TMR_GetDeltaTime+4,f,c
 44462  005F8E  1E12               	comf	??i2_TMR_GetDeltaTime+5,f,c
 44463  005F90  4A11               	infsnz	??i2_TMR_GetDeltaTime+4,f,c
 44464  005F92  2A12               	incf	??i2_TMR_GetDeltaTime+5,f,c
 44465  005F94  5044               	movf	TMR_GetDeltaTime@tmrVal,w,c
 44466  005F96  2611               	addwf	??i2_TMR_GetDeltaTime+4,f,c
 44467  005F98  5045               	movf	TMR_GetDeltaTime@tmrVal+1,w,c
 44468  005F9A  2212               	addwfc	??i2_TMR_GetDeltaTime+5,f,c
 44469  005F9C  5011               	movf	??i2_TMR_GetDeltaTime+4,w,c
 44470  005F9E  240D               	addwf	??i2_TMR_GetDeltaTime,w,c
 44471  005FA0  6E13               	movwf	(??i2_TMR_GetDeltaTime+6)& (0+255),c
 44472  005FA2  5012               	movf	??i2_TMR_GetDeltaTime+5,w,c
 44473  005FA4  200E               	addwfc	??i2_TMR_GetDeltaTime+1,w,c
 44474  005FA6  6E14               	movwf	(??i2_TMR_GetDeltaTime+7)& (0+255),c
 44475  005FA8  0E00               	movlw	0
 44476  005FAA  200F               	addwfc	??i2_TMR_GetDeltaTime+2,w,c
 44477  005FAC  6E15               	movwf	(??i2_TMR_GetDeltaTime+8)& (0+255),c
 44478  005FAE  0E00               	movlw	0
 44479  005FB0  2010               	addwfc	??i2_TMR_GetDeltaTime+3,w,c
 44480  005FB2  6E16               	movwf	(??i2_TMR_GetDeltaTime+9)& (0+255),c
 44481  005FB4  5040               	movf	_ticksAdded,w,c	;volatile
 44482  005FB6  2413               	addwf	??i2_TMR_GetDeltaTime+6,w,c
 44483  005FB8  0101               	movlb	1	; () banked
 44484  005FBA  6F82               	movwf	TMR_GetDeltaTime@retVal& (0+255),b
 44485  005FBC  5041               	movf	_ticksAdded+1,w,c	;volatile
 44486  005FBE  2014               	addwfc	??i2_TMR_GetDeltaTime+7,w,c
 44487  005FC0  0101               	movlb	1	; () banked
 44488  005FC2  6F83               	movwf	(TMR_GetDeltaTime@retVal+1)& (0+255),b
 44489  005FC4  5042               	movf	_ticksAdded+2,w,c	;volatile
 44490  005FC6  2015               	addwfc	??i2_TMR_GetDeltaTime+8,w,c
 44491  005FC8  0101               	movlb	1	; () banked
 44492  005FCA  6F84               	movwf	(TMR_GetDeltaTime@retVal+2)& (0+255),b
 44493  005FCC  5043               	movf	_ticksAdded+3,w,c	;volatile
 44494  005FCE  2016               	addwfc	??i2_TMR_GetDeltaTime+9,w,c
 44495  005FD0  0101               	movlb	1	; () banked
 44496  005FD2  6F85               	movwf	(TMR_GetDeltaTime@retVal+3)& (0+255),b
 44497                           
 44498                           ;sw_timer.c: 106: ticksAccounted += retVal;
 44499  005FD4  0101               	movlb	1	; () banked
 44500  005FD6  5182               	movf	TMR_GetDeltaTime@retVal& (0+255),w,b
 44501  005FD8  263C               	addwf	_ticksAccounted,f,c	;volatile
 44502  005FDA  0101               	movlb	1	; () banked
 44503  005FDC  5183               	movf	(TMR_GetDeltaTime@retVal+1)& (0+255),w,b
 44504  005FDE  223D               	addwfc	_ticksAccounted+1,f,c	;volatile
 44505  005FE0  0101               	movlb	1	; () banked
 44506  005FE2  5184               	movf	(TMR_GetDeltaTime@retVal+2)& (0+255),w,b
 44507  005FE4  223E               	addwfc	_ticksAccounted+2,f,c	;volatile
 44508  005FE6  0101               	movlb	1	; () banked
 44509  005FE8  5185               	movf	(TMR_GetDeltaTime@retVal+3)& (0+255),w,b
 44510  005FEA  223F               	addwfc	_ticksAccounted+3,f,c	;volatile
 44511  005FEC                     i2l10735:
 44512                           
 44513                           ;sw_timer.c: 107: }
 44514                           ;sw_timer.c: 109: return retVal;
 44515  005FEC  C182  F009         	movff	TMR_GetDeltaTime@retVal,?i2_TMR_GetDeltaTime
 44516  005FF0  C183  F00A         	movff	TMR_GetDeltaTime@retVal+1,?i2_TMR_GetDeltaTime+1
 44517  005FF4  C184  F00B         	movff	TMR_GetDeltaTime@retVal+2,?i2_TMR_GetDeltaTime+2
 44518  005FF8  C185  F00C         	movff	TMR_GetDeltaTime@retVal+3,?i2_TMR_GetDeltaTime+3
 44519  005FFC  0012               	return	
 44520  005FFE                     __end_ofi2_TMR_GetDeltaTime:
 44521                           	opt stack 0
 44522                           tosu	equ	0xFFF
 44523                           tosh	equ	0xFFE
 44524                           tosl	equ	0xFFD
 44525                           pclatu	equ	0xFFB
 44526                           pclath	equ	0xFFA
 44527                           tblptru	equ	0xFF8
 44528                           tblptrh	equ	0xFF7
 44529                           tblptrl	equ	0xFF6
 44530                           tablat	equ	0xFF5
 44531                           prodh	equ	0xFF4
 44532                           prodl	equ	0xFF3
 44533                           intcon	equ	0xFF2
 44534                           intcon2	equ	0xFF1
 44535                           intcon3	equ	0xFF0
 44536                           indf0	equ	0xFEF
 44537                           postinc0	equ	0xFEE
 44538                           plusw0	equ	0xFEB
 44539                           fsr0h	equ	0xFEA
 44540                           fsr0l	equ	0xFE9
 44541                           wreg	equ	0xFE8
 44542                           postinc1	equ	0xFE6
 44543                           postdec1	equ	0xFE5
 44544                           plusw1	equ	0xFE3
 44545                           fsr1h	equ	0xFE2
 44546                           fsr1l	equ	0xFE1
 44547                           indf2	equ	0xFDF
 44548                           postinc2	equ	0xFDE
 44549                           postdec2	equ	0xFDD
 44550                           plusw2	equ	0xFDB
 44551                           fsr2h	equ	0xFDA
 44552                           fsr2l	equ	0xFD9
 44553                           status	equ	0xFD8
 44554                           
 44555 ;; *************** function i2_TMR1_ReadTimer *****************
 44556 ;; Defined at:
 44557 ;;		line 106 in file "mcc_generated_files/tmr1.c"
 44558 ;; Parameters:    Size  Location     Type
 44559 ;;		None
 44560 ;; Auto vars:     Size  Location     Type
 44561 ;;  TMR1_ReadTim    2    4[COMRAM] unsigned int 
 44562 ;;  TMR1_ReadTim    1    7[COMRAM] unsigned char 
 44563 ;;  TMR1_ReadTim    1    6[COMRAM] unsigned char 
 44564 ;; Return value:  Size  Location     Type
 44565 ;;                  2    0[COMRAM] unsigned int 
 44566 ;; Registers used:
 44567 ;;		wreg, status,2
 44568 ;; Tracked objects:
 44569 ;;		On entry : 0/0
 44570 ;;		On exit  : 0/0
 44571 ;;		Unchanged: 0/0
 44572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44574 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44575 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44576 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44577 ;;Total ram usage:        8 bytes
 44578 ;; Hardware stack levels used:    1
 44579 ;; This function calls:
 44580 ;;		Nothing
 44581 ;; This function is called by:
 44582 ;;		i2_TMR_GetDeltaTime
 44583 ;;		i2_TMR_SwapTimer
 44584 ;; This function uses a non-reentrant model
 44585 ;;
 44586                           
 44587                           	psect	text213
 44588  00A17E                     __ptext213:
 44589                           	opt stack 0
 44590  00A17E                     i2_TMR1_ReadTimer:
 44591                           	opt stack 13
 44592                           
 44593                           ;tmr1.c: 108: uint16_t readVal;
 44594                           ;tmr1.c: 109: uint8_t readValHigh;
 44595                           ;tmr1.c: 110: uint8_t readValLow;
 44596                           ;tmr1.c: 112: readValLow = TMR1L;
 44597                           
 44598                           ;incstack = 0
 44599  00A17E  CFCE F008          	movff	4046,i2TMR1_ReadTimer@readValLow	;volatile
 44600                           
 44601                           ;tmr1.c: 113: readValHigh = TMR1H;
 44602  00A182  CFCF F007          	movff	4047,i2TMR1_ReadTimer@readValHigh	;volatile
 44603                           
 44604                           ;tmr1.c: 115: readVal = ((uint16_t)readValHigh << 8) | readValLow;
 44605  00A186  5007               	movf	i2TMR1_ReadTimer@readValHigh,w,c
 44606  00A188  6E03               	movwf	??i2_TMR1_ReadTimer& (0+255),c
 44607  00A18A  5008               	movf	i2TMR1_ReadTimer@readValLow,w,c
 44608  00A18C  6E05               	movwf	i2TMR1_ReadTimer@readVal,c
 44609  00A18E  C003  F006         	movff	??i2_TMR1_ReadTimer,i2TMR1_ReadTimer@readVal+1
 44610                           
 44611                           ;tmr1.c: 117: return readVal;
 44612  00A192  C005  F001         	movff	i2TMR1_ReadTimer@readVal,?i2_TMR1_ReadTimer
 44613  00A196  C006  F002         	movff	i2TMR1_ReadTimer@readVal+1,?i2_TMR1_ReadTimer+1
 44614  00A19A  0012               	return	
 44615  00A19C                     __end_ofi2_TMR1_ReadTimer:
 44616                           	opt stack 0
 44617                           tosu	equ	0xFFF
 44618                           tosh	equ	0xFFE
 44619                           tosl	equ	0xFFD
 44620                           pclatu	equ	0xFFB
 44621                           pclath	equ	0xFFA
 44622                           tblptru	equ	0xFF8
 44623                           tblptrh	equ	0xFF7
 44624                           tblptrl	equ	0xFF6
 44625                           tablat	equ	0xFF5
 44626                           prodh	equ	0xFF4
 44627                           prodl	equ	0xFF3
 44628                           intcon	equ	0xFF2
 44629                           intcon2	equ	0xFF1
 44630                           intcon3	equ	0xFF0
 44631                           indf0	equ	0xFEF
 44632                           postinc0	equ	0xFEE
 44633                           plusw0	equ	0xFEB
 44634                           fsr0h	equ	0xFEA
 44635                           fsr0l	equ	0xFE9
 44636                           wreg	equ	0xFE8
 44637                           postinc1	equ	0xFE6
 44638                           postdec1	equ	0xFE5
 44639                           plusw1	equ	0xFE3
 44640                           fsr1h	equ	0xFE2
 44641                           fsr1l	equ	0xFE1
 44642                           indf2	equ	0xFDF
 44643                           postinc2	equ	0xFDE
 44644                           postdec2	equ	0xFDD
 44645                           plusw2	equ	0xFDB
 44646                           fsr2h	equ	0xFDA
 44647                           fsr2l	equ	0xFD9
 44648                           status	equ	0xFD8
 44649                           
 44650 ;; *************** function _PIN_MANAGER_IOC *****************
 44651 ;; Defined at:
 44652 ;;		line 106 in file "mcc_generated_files/pin_manager.c"
 44653 ;; Parameters:    Size  Location     Type
 44654 ;;		None
 44655 ;; Auto vars:     Size  Location     Type
 44656 ;;		None
 44657 ;; Return value:  Size  Location     Type
 44658 ;;                  1    wreg      void 
 44659 ;; Registers used:
 44660 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44661 ;; Tracked objects:
 44662 ;;		On entry : 0/0
 44663 ;;		On exit  : 0/0
 44664 ;;		Unchanged: 0/0
 44665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44670 ;;Total ram usage:        0 bytes
 44671 ;; Hardware stack levels used:    1
 44672 ;; Hardware stack levels required when called:    2
 44673 ;; This function calls:
 44674 ;;		_IOCB4_ISR
 44675 ;;		_IOCB5_ISR
 44676 ;; This function is called by:
 44677 ;;		_INTERRUPT_InterruptManager
 44678 ;; This function uses a non-reentrant model
 44679 ;;
 44680                           
 44681                           	psect	text214
 44682  00A314                     __ptext214:
 44683                           	opt stack 0
 44684  00A314                     _PIN_MANAGER_IOC:
 44685                           	opt stack 15
 44686                           
 44687                           ;pin_manager.c: 109: if(IOCBbits.IOCB4 == 1)
 44688                           
 44689                           ;incstack = 0
 44690  00A314  B862               	btfsc	3938,4,c	;volatile
 44691                           
 44692                           ;pin_manager.c: 110: {
 44693                           ;pin_manager.c: 111: IOCB4_ISR();
 44694  00A316  ECBE  F04F         	call	_IOCB4_ISR	;wreg free
 44695                           
 44696                           ;pin_manager.c: 112: }
 44697                           ;pin_manager.c: 114: if(IOCBbits.IOCB5 == 1)
 44698  00A31A  BA62               	btfsc	3938,5,c	;volatile
 44699                           
 44700                           ;pin_manager.c: 115: {
 44701                           ;pin_manager.c: 116: IOCB5_ISR();
 44702  00A31C  ECAC  F04F         	call	_IOCB5_ISR	;wreg free
 44703                           
 44704                           ;pin_manager.c: 117: }
 44705                           ;pin_manager.c: 120: INTCONbits.RBIF = 0;
 44706  00A320  90F2               	bcf	intcon,0,c	;volatile
 44707  00A322  0012               	return		;funcret
 44708  00A324                     __end_of_PIN_MANAGER_IOC:
 44709                           	opt stack 0
 44710                           tosu	equ	0xFFF
 44711                           tosh	equ	0xFFE
 44712                           tosl	equ	0xFFD
 44713                           pclatu	equ	0xFFB
 44714                           pclath	equ	0xFFA
 44715                           tblptru	equ	0xFF8
 44716                           tblptrh	equ	0xFF7
 44717                           tblptrl	equ	0xFF6
 44718                           tablat	equ	0xFF5
 44719                           prodh	equ	0xFF4
 44720                           prodl	equ	0xFF3
 44721                           intcon	equ	0xFF2
 44722                           intcon2	equ	0xFF1
 44723                           intcon3	equ	0xFF0
 44724                           indf0	equ	0xFEF
 44725                           postinc0	equ	0xFEE
 44726                           plusw0	equ	0xFEB
 44727                           fsr0h	equ	0xFEA
 44728                           fsr0l	equ	0xFE9
 44729                           wreg	equ	0xFE8
 44730                           postinc1	equ	0xFE6
 44731                           postdec1	equ	0xFE5
 44732                           plusw1	equ	0xFE3
 44733                           fsr1h	equ	0xFE2
 44734                           fsr1l	equ	0xFE1
 44735                           indf2	equ	0xFDF
 44736                           postinc2	equ	0xFDE
 44737                           postdec2	equ	0xFDD
 44738                           plusw2	equ	0xFDB
 44739                           fsr2h	equ	0xFDA
 44740                           fsr2l	equ	0xFD9
 44741                           status	equ	0xFD8
 44742                           
 44743 ;; *************** function _IOCB5_ISR *****************
 44744 ;; Defined at:
 44745 ;;		line 156 in file "mcc_generated_files/pin_manager.c"
 44746 ;; Parameters:    Size  Location     Type
 44747 ;;		None
 44748 ;; Auto vars:     Size  Location     Type
 44749 ;;		None
 44750 ;; Return value:  Size  Location     Type
 44751 ;;                  1    wreg      void 
 44752 ;; Registers used:
 44753 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44754 ;; Tracked objects:
 44755 ;;		On entry : 0/0
 44756 ;;		On exit  : 0/0
 44757 ;;		Unchanged: 0/0
 44758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44763 ;;Total ram usage:        0 bytes
 44764 ;; Hardware stack levels used:    1
 44765 ;; Hardware stack levels required when called:    1
 44766 ;; This function calls:
 44767 ;;		Absolute function
 44768 ;;		_IOCB5_DefaultInterruptHandler
 44769 ;; This function is called by:
 44770 ;;		_PIN_MANAGER_IOC
 44771 ;; This function uses a non-reentrant model
 44772 ;;
 44773                           
 44774                           	psect	text215
 44775  009F58                     __ptext215:
 44776                           	opt stack 0
 44777  009F58                     _IOCB5_ISR:
 44778                           	opt stack 15
 44779                           
 44780                           ;pin_manager.c: 161: if(IOCB5_InterruptHandler)
 44781                           
 44782                           ;incstack = 0
 44783  009F58  0101               	movlb	1	; () banked
 44784  009F5A  51F5               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 44785  009F5C  0101               	movlb	1	; () banked
 44786  009F5E  11F6               	iorwf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 44787  009F60  B4D8               	btfsc	status,2,c
 44788  009F62  0012               	return	
 44789                           
 44790                           ; BSR set to: 1
 44791                           ;pin_manager.c: 162: {
 44792                           ;pin_manager.c: 163: IOCB5_InterruptHandler();
 44793  009F64  D801               	call	i2u2233_48
 44794  009F66  0012               	return	
 44795  009F68                     i2u2233_48:
 44796  009F68  0005               	push	
 44797  009F6A  6EFA               	movwf	pclath,c
 44798  009F6C  0101               	movlb	1	; () banked
 44799  009F6E  51F5               	movf	_IOCB5_InterruptHandler& (0+255),w,b
 44800  009F70  6EFD               	movwf	tosl,c
 44801  009F72  51F6               	movf	(_IOCB5_InterruptHandler+1)& (0+255),w,b
 44802  009F74  6EFE               	movwf	tosh,c
 44803  009F76  6AFF               	clrf	tosu,c
 44804  009F78  50FA               	movf	pclath,w,c
 44805  009F7A  0012               	return		;indir
 44806  009F7C                     __end_of_IOCB5_ISR:
 44807                           	opt stack 0
 44808                           tosu	equ	0xFFF
 44809                           tosh	equ	0xFFE
 44810                           tosl	equ	0xFFD
 44811                           pclatu	equ	0xFFB
 44812                           pclath	equ	0xFFA
 44813                           tblptru	equ	0xFF8
 44814                           tblptrh	equ	0xFF7
 44815                           tblptrl	equ	0xFF6
 44816                           tablat	equ	0xFF5
 44817                           prodh	equ	0xFF4
 44818                           prodl	equ	0xFF3
 44819                           intcon	equ	0xFF2
 44820                           intcon2	equ	0xFF1
 44821                           intcon3	equ	0xFF0
 44822                           indf0	equ	0xFEF
 44823                           postinc0	equ	0xFEE
 44824                           plusw0	equ	0xFEB
 44825                           fsr0h	equ	0xFEA
 44826                           fsr0l	equ	0xFE9
 44827                           wreg	equ	0xFE8
 44828                           postinc1	equ	0xFE6
 44829                           postdec1	equ	0xFE5
 44830                           plusw1	equ	0xFE3
 44831                           fsr1h	equ	0xFE2
 44832                           fsr1l	equ	0xFE1
 44833                           indf2	equ	0xFDF
 44834                           postinc2	equ	0xFDE
 44835                           postdec2	equ	0xFDD
 44836                           plusw2	equ	0xFDB
 44837                           fsr2h	equ	0xFDA
 44838                           fsr2l	equ	0xFD9
 44839                           status	equ	0xFD8
 44840                           
 44841 ;; *************** function _IOCB5_DefaultInterruptHandler *****************
 44842 ;; Defined at:
 44843 ;;		line 177 in file "mcc_generated_files/pin_manager.c"
 44844 ;; Parameters:    Size  Location     Type
 44845 ;;		None
 44846 ;; Auto vars:     Size  Location     Type
 44847 ;;		None
 44848 ;; Return value:  Size  Location     Type
 44849 ;;                  1    wreg      void 
 44850 ;; Registers used:
 44851 ;;		None
 44852 ;; Tracked objects:
 44853 ;;		On entry : 0/0
 44854 ;;		On exit  : 0/0
 44855 ;;		Unchanged: 0/0
 44856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44861 ;;Total ram usage:        0 bytes
 44862 ;; Hardware stack levels used:    1
 44863 ;; This function calls:
 44864 ;;		Nothing
 44865 ;; This function is called by:
 44866 ;;		_PIN_MANAGER_Initialize
 44867 ;;		_IOCB5_ISR
 44868 ;; This function uses a non-reentrant model
 44869 ;;
 44870                           
 44871                           	psect	text216
 44872  00A480                     __ptext216:
 44873                           	opt stack 0
 44874  00A480                     _IOCB5_DefaultInterruptHandler:
 44875                           	opt stack 15
 44876                           
 44877                           ;incstack = 0
 44878  00A480  0012               	return		;funcret
 44879  00A482                     __end_of_IOCB5_DefaultInterruptHandler:
 44880                           	opt stack 0
 44881                           tosu	equ	0xFFF
 44882                           tosh	equ	0xFFE
 44883                           tosl	equ	0xFFD
 44884                           pclatu	equ	0xFFB
 44885                           pclath	equ	0xFFA
 44886                           tblptru	equ	0xFF8
 44887                           tblptrh	equ	0xFF7
 44888                           tblptrl	equ	0xFF6
 44889                           tablat	equ	0xFF5
 44890                           prodh	equ	0xFF4
 44891                           prodl	equ	0xFF3
 44892                           intcon	equ	0xFF2
 44893                           intcon2	equ	0xFF1
 44894                           intcon3	equ	0xFF0
 44895                           indf0	equ	0xFEF
 44896                           postinc0	equ	0xFEE
 44897                           plusw0	equ	0xFEB
 44898                           fsr0h	equ	0xFEA
 44899                           fsr0l	equ	0xFE9
 44900                           wreg	equ	0xFE8
 44901                           postinc1	equ	0xFE6
 44902                           postdec1	equ	0xFE5
 44903                           plusw1	equ	0xFE3
 44904                           fsr1h	equ	0xFE2
 44905                           fsr1l	equ	0xFE1
 44906                           indf2	equ	0xFDF
 44907                           postinc2	equ	0xFDE
 44908                           postdec2	equ	0xFDD
 44909                           plusw2	equ	0xFDB
 44910                           fsr2h	equ	0xFDA
 44911                           fsr2l	equ	0xFD9
 44912                           status	equ	0xFD8
 44913                           
 44914 ;; *************** function _IOCB4_ISR *****************
 44915 ;; Defined at:
 44916 ;;		line 127 in file "mcc_generated_files/pin_manager.c"
 44917 ;; Parameters:    Size  Location     Type
 44918 ;;		None
 44919 ;; Auto vars:     Size  Location     Type
 44920 ;;		None
 44921 ;; Return value:  Size  Location     Type
 44922 ;;                  1    wreg      void 
 44923 ;; Registers used:
 44924 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 44925 ;; Tracked objects:
 44926 ;;		On entry : 0/0
 44927 ;;		On exit  : 0/0
 44928 ;;		Unchanged: 0/0
 44929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 44930 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44931 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44932 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44933 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 44934 ;;Total ram usage:        0 bytes
 44935 ;; Hardware stack levels used:    1
 44936 ;; Hardware stack levels required when called:    1
 44937 ;; This function calls:
 44938 ;;		Absolute function
 44939 ;;		_DIO2_ISR_Lora
 44940 ;;		_IOCB4_DefaultInterruptHandler
 44941 ;; This function is called by:
 44942 ;;		_PIN_MANAGER_IOC
 44943 ;; This function uses a non-reentrant model
 44944 ;;
 44945                           
 44946                           	psect	text217
 44947  009F7C                     __ptext217:
 44948                           	opt stack 0
 44949  009F7C                     _IOCB4_ISR:
 44950                           	opt stack 15
 44951                           
 44952                           ;pin_manager.c: 132: if(IOCB4_InterruptHandler)
 44953                           
 44954                           ;incstack = 0
 44955  009F7C  0101               	movlb	1	; () banked
 44956  009F7E  51F3               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 44957  009F80  0101               	movlb	1	; () banked
 44958  009F82  11F4               	iorwf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 44959  009F84  B4D8               	btfsc	status,2,c
 44960  009F86  0012               	return	
 44961                           
 44962                           ; BSR set to: 1
 44963                           ;pin_manager.c: 133: {
 44964                           ;pin_manager.c: 134: IOCB4_InterruptHandler();
 44965  009F88  D801               	call	i2u2231_48
 44966  009F8A  0012               	return	
 44967  009F8C                     i2u2231_48:
 44968  009F8C  0005               	push	
 44969  009F8E  6EFA               	movwf	pclath,c
 44970  009F90  0101               	movlb	1	; () banked
 44971  009F92  51F3               	movf	_IOCB4_InterruptHandler& (0+255),w,b
 44972  009F94  6EFD               	movwf	tosl,c
 44973  009F96  51F4               	movf	(_IOCB4_InterruptHandler+1)& (0+255),w,b
 44974  009F98  6EFE               	movwf	tosh,c
 44975  009F9A  6AFF               	clrf	tosu,c
 44976  009F9C  50FA               	movf	pclath,w,c
 44977  009F9E  0012               	return		;indir
 44978  009FA0                     __end_of_IOCB4_ISR:
 44979                           	opt stack 0
 44980                           tosu	equ	0xFFF
 44981                           tosh	equ	0xFFE
 44982                           tosl	equ	0xFFD
 44983                           pclatu	equ	0xFFB
 44984                           pclath	equ	0xFFA
 44985                           tblptru	equ	0xFF8
 44986                           tblptrh	equ	0xFF7
 44987                           tblptrl	equ	0xFF6
 44988                           tablat	equ	0xFF5
 44989                           prodh	equ	0xFF4
 44990                           prodl	equ	0xFF3
 44991                           intcon	equ	0xFF2
 44992                           intcon2	equ	0xFF1
 44993                           intcon3	equ	0xFF0
 44994                           indf0	equ	0xFEF
 44995                           postinc0	equ	0xFEE
 44996                           plusw0	equ	0xFEB
 44997                           fsr0h	equ	0xFEA
 44998                           fsr0l	equ	0xFE9
 44999                           wreg	equ	0xFE8
 45000                           postinc1	equ	0xFE6
 45001                           postdec1	equ	0xFE5
 45002                           plusw1	equ	0xFE3
 45003                           fsr1h	equ	0xFE2
 45004                           fsr1l	equ	0xFE1
 45005                           indf2	equ	0xFDF
 45006                           postinc2	equ	0xFDE
 45007                           postdec2	equ	0xFDD
 45008                           plusw2	equ	0xFDB
 45009                           fsr2h	equ	0xFDA
 45010                           fsr2l	equ	0xFD9
 45011                           status	equ	0xFD8
 45012                           
 45013 ;; *************** function _DIO2_ISR_Lora *****************
 45014 ;; Defined at:
 45015 ;;		line 73 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 45016 ;; Parameters:    Size  Location     Type
 45017 ;;		None
 45018 ;; Auto vars:     Size  Location     Type
 45019 ;;		None
 45020 ;; Return value:  Size  Location     Type
 45021 ;;                  1    wreg      void 
 45022 ;; Registers used:
 45023 ;;		status,2, status,0
 45024 ;; Tracked objects:
 45025 ;;		On entry : 0/0
 45026 ;;		On exit  : 0/0
 45027 ;;		Unchanged: 0/0
 45028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45032 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45033 ;;Total ram usage:        0 bytes
 45034 ;; Hardware stack levels used:    1
 45035 ;; This function calls:
 45036 ;;		Nothing
 45037 ;; This function is called by:
 45038 ;;		_DIO2_ISR_Lora_Init
 45039 ;;		_IOCB4_ISR
 45040 ;; This function uses a non-reentrant model
 45041 ;;
 45042                           
 45043                           	psect	text218
 45044  00A46E                     __ptext218:
 45045                           	opt stack 0
 45046  00A46E                     _DIO2_ISR_Lora:
 45047                           	opt stack 15
 45048                           
 45049                           ;interrupt_manager_lora_addons.c: 75: dioStatus |= 0x04;
 45050                           
 45051                           ;incstack = 0
 45052  00A46E  844C               	bsf	_dioStatus,2,c	;volatile
 45053  00A470  0012               	return		;funcret
 45054  00A472                     __end_of_DIO2_ISR_Lora:
 45055                           	opt stack 0
 45056                           tosu	equ	0xFFF
 45057                           tosh	equ	0xFFE
 45058                           tosl	equ	0xFFD
 45059                           pclatu	equ	0xFFB
 45060                           pclath	equ	0xFFA
 45061                           tblptru	equ	0xFF8
 45062                           tblptrh	equ	0xFF7
 45063                           tblptrl	equ	0xFF6
 45064                           tablat	equ	0xFF5
 45065                           prodh	equ	0xFF4
 45066                           prodl	equ	0xFF3
 45067                           intcon	equ	0xFF2
 45068                           intcon2	equ	0xFF1
 45069                           intcon3	equ	0xFF0
 45070                           indf0	equ	0xFEF
 45071                           postinc0	equ	0xFEE
 45072                           plusw0	equ	0xFEB
 45073                           fsr0h	equ	0xFEA
 45074                           fsr0l	equ	0xFE9
 45075                           wreg	equ	0xFE8
 45076                           postinc1	equ	0xFE6
 45077                           postdec1	equ	0xFE5
 45078                           plusw1	equ	0xFE3
 45079                           fsr1h	equ	0xFE2
 45080                           fsr1l	equ	0xFE1
 45081                           indf2	equ	0xFDF
 45082                           postinc2	equ	0xFDE
 45083                           postdec2	equ	0xFDD
 45084                           plusw2	equ	0xFDB
 45085                           fsr2h	equ	0xFDA
 45086                           fsr2l	equ	0xFD9
 45087                           status	equ	0xFD8
 45088                           
 45089 ;; *************** function _IOCB4_DefaultInterruptHandler *****************
 45090 ;; Defined at:
 45091 ;;		line 148 in file "mcc_generated_files/pin_manager.c"
 45092 ;; Parameters:    Size  Location     Type
 45093 ;;		None
 45094 ;; Auto vars:     Size  Location     Type
 45095 ;;		None
 45096 ;; Return value:  Size  Location     Type
 45097 ;;                  1    wreg      void 
 45098 ;; Registers used:
 45099 ;;		None
 45100 ;; Tracked objects:
 45101 ;;		On entry : 0/0
 45102 ;;		On exit  : 0/0
 45103 ;;		Unchanged: 0/0
 45104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45109 ;;Total ram usage:        0 bytes
 45110 ;; Hardware stack levels used:    1
 45111 ;; This function calls:
 45112 ;;		Nothing
 45113 ;; This function is called by:
 45114 ;;		_PIN_MANAGER_Initialize
 45115 ;;		_IOCB4_ISR
 45116 ;; This function uses a non-reentrant model
 45117 ;;
 45118                           
 45119                           	psect	text219
 45120  00A482                     __ptext219:
 45121                           	opt stack 0
 45122  00A482                     _IOCB4_DefaultInterruptHandler:
 45123                           	opt stack 15
 45124                           
 45125                           ;incstack = 0
 45126  00A482  0012               	return		;funcret
 45127  00A484                     __end_of_IOCB4_DefaultInterruptHandler:
 45128                           	opt stack 0
 45129                           tosu	equ	0xFFF
 45130                           tosh	equ	0xFFE
 45131                           tosl	equ	0xFFD
 45132                           pclatu	equ	0xFFB
 45133                           pclath	equ	0xFFA
 45134                           tblptru	equ	0xFF8
 45135                           tblptrh	equ	0xFF7
 45136                           tblptrl	equ	0xFF6
 45137                           tablat	equ	0xFF5
 45138                           prodh	equ	0xFF4
 45139                           prodl	equ	0xFF3
 45140                           intcon	equ	0xFF2
 45141                           intcon2	equ	0xFF1
 45142                           intcon3	equ	0xFF0
 45143                           indf0	equ	0xFEF
 45144                           postinc0	equ	0xFEE
 45145                           plusw0	equ	0xFEB
 45146                           fsr0h	equ	0xFEA
 45147                           fsr0l	equ	0xFE9
 45148                           wreg	equ	0xFE8
 45149                           postinc1	equ	0xFE6
 45150                           postdec1	equ	0xFE5
 45151                           plusw1	equ	0xFE3
 45152                           fsr1h	equ	0xFE2
 45153                           fsr1l	equ	0xFE1
 45154                           indf2	equ	0xFDF
 45155                           postinc2	equ	0xFDE
 45156                           postdec2	equ	0xFDD
 45157                           plusw2	equ	0xFDB
 45158                           fsr2h	equ	0xFDA
 45159                           fsr2l	equ	0xFD9
 45160                           status	equ	0xFD8
 45161                           
 45162 ;; *************** function _INT2_ISR *****************
 45163 ;; Defined at:
 45164 ;;		line 86 in file "mcc_generated_files/ext_int.c"
 45165 ;; Parameters:    Size  Location     Type
 45166 ;;		None
 45167 ;; Auto vars:     Size  Location     Type
 45168 ;;		None
 45169 ;; Return value:  Size  Location     Type
 45170 ;;                  1    wreg      void 
 45171 ;; Registers used:
 45172 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45173 ;; Tracked objects:
 45174 ;;		On entry : 0/0
 45175 ;;		On exit  : 0/0
 45176 ;;		Unchanged: 0/0
 45177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45182 ;;Total ram usage:        0 bytes
 45183 ;; Hardware stack levels used:    1
 45184 ;; Hardware stack levels required when called:    2
 45185 ;; This function calls:
 45186 ;;		_INT2_CallBack
 45187 ;; This function is called by:
 45188 ;;		_INTERRUPT_InterruptManager
 45189 ;; This function uses a non-reentrant model
 45190 ;;
 45191                           
 45192                           	psect	text220
 45193  00A42C                     __ptext220:
 45194                           	opt stack 0
 45195  00A42C                     _INT2_ISR:
 45196                           	opt stack 15
 45197                           
 45198                           ;ext_int.c: 92: (INTCON3bits.INT2IF = 0);
 45199                           
 45200                           ;incstack = 0
 45201  00A42C  92F0               	bcf	intcon3,1,c	;volatile
 45202                           
 45203                           ;ext_int.c: 95: INT2_CallBack();
 45204  00A42E  ECD0  F04F         	call	_INT2_CallBack	;wreg free
 45205  00A432  0012               	return		;funcret
 45206  00A434                     __end_of_INT2_ISR:
 45207                           	opt stack 0
 45208                           tosu	equ	0xFFF
 45209                           tosh	equ	0xFFE
 45210                           tosl	equ	0xFFD
 45211                           pclatu	equ	0xFFB
 45212                           pclath	equ	0xFFA
 45213                           tblptru	equ	0xFF8
 45214                           tblptrh	equ	0xFF7
 45215                           tblptrl	equ	0xFF6
 45216                           tablat	equ	0xFF5
 45217                           prodh	equ	0xFF4
 45218                           prodl	equ	0xFF3
 45219                           intcon	equ	0xFF2
 45220                           intcon2	equ	0xFF1
 45221                           intcon3	equ	0xFF0
 45222                           indf0	equ	0xFEF
 45223                           postinc0	equ	0xFEE
 45224                           plusw0	equ	0xFEB
 45225                           fsr0h	equ	0xFEA
 45226                           fsr0l	equ	0xFE9
 45227                           wreg	equ	0xFE8
 45228                           postinc1	equ	0xFE6
 45229                           postdec1	equ	0xFE5
 45230                           plusw1	equ	0xFE3
 45231                           fsr1h	equ	0xFE2
 45232                           fsr1l	equ	0xFE1
 45233                           indf2	equ	0xFDF
 45234                           postinc2	equ	0xFDE
 45235                           postdec2	equ	0xFDD
 45236                           plusw2	equ	0xFDB
 45237                           fsr2h	equ	0xFDA
 45238                           fsr2l	equ	0xFD9
 45239                           status	equ	0xFD8
 45240                           
 45241 ;; *************** function _INT2_CallBack *****************
 45242 ;; Defined at:
 45243 ;;		line 101 in file "mcc_generated_files/ext_int.c"
 45244 ;; Parameters:    Size  Location     Type
 45245 ;;		None
 45246 ;; Auto vars:     Size  Location     Type
 45247 ;;		None
 45248 ;; Return value:  Size  Location     Type
 45249 ;;                  1    wreg      void 
 45250 ;; Registers used:
 45251 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45252 ;; Tracked objects:
 45253 ;;		On entry : 0/0
 45254 ;;		On exit  : 0/0
 45255 ;;		Unchanged: 0/0
 45256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45258 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45260 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45261 ;;Total ram usage:        0 bytes
 45262 ;; Hardware stack levels used:    1
 45263 ;; Hardware stack levels required when called:    1
 45264 ;; This function calls:
 45265 ;;		Absolute function
 45266 ;;		_DIO1_ISR_Lora
 45267 ;;		_INT2_DefaultInterruptHandler
 45268 ;; This function is called by:
 45269 ;;		_INT2_ISR
 45270 ;; This function uses a non-reentrant model
 45271 ;;
 45272                           
 45273                           	psect	text221
 45274  009FA0                     __ptext221:
 45275                           	opt stack 0
 45276  009FA0                     _INT2_CallBack:
 45277                           	opt stack 15
 45278                           
 45279                           ;ext_int.c: 104: if(INT2_InterruptHandler)
 45280                           
 45281                           ;incstack = 0
 45282  009FA0  0101               	movlb	1	; () banked
 45283  009FA2  51F1               	movf	_INT2_InterruptHandler& (0+255),w,b
 45284  009FA4  0101               	movlb	1	; () banked
 45285  009FA6  11F2               	iorwf	(_INT2_InterruptHandler+1)& (0+255),w,b
 45286  009FA8  B4D8               	btfsc	status,2,c
 45287  009FAA  0012               	return	
 45288                           
 45289                           ; BSR set to: 1
 45290                           ;ext_int.c: 105: {
 45291                           ;ext_int.c: 106: INT2_InterruptHandler();
 45292  009FAC  D801               	call	i2u2222_48
 45293  009FAE  0012               	return	
 45294  009FB0                     i2u2222_48:
 45295  009FB0  0005               	push	
 45296  009FB2  6EFA               	movwf	pclath,c
 45297  009FB4  0101               	movlb	1	; () banked
 45298  009FB6  51F1               	movf	_INT2_InterruptHandler& (0+255),w,b
 45299  009FB8  6EFD               	movwf	tosl,c
 45300  009FBA  51F2               	movf	(_INT2_InterruptHandler+1)& (0+255),w,b
 45301  009FBC  6EFE               	movwf	tosh,c
 45302  009FBE  6AFF               	clrf	tosu,c
 45303  009FC0  50FA               	movf	pclath,w,c
 45304  009FC2  0012               	return		;indir
 45305  009FC4                     __end_of_INT2_CallBack:
 45306                           	opt stack 0
 45307                           tosu	equ	0xFFF
 45308                           tosh	equ	0xFFE
 45309                           tosl	equ	0xFFD
 45310                           pclatu	equ	0xFFB
 45311                           pclath	equ	0xFFA
 45312                           tblptru	equ	0xFF8
 45313                           tblptrh	equ	0xFF7
 45314                           tblptrl	equ	0xFF6
 45315                           tablat	equ	0xFF5
 45316                           prodh	equ	0xFF4
 45317                           prodl	equ	0xFF3
 45318                           intcon	equ	0xFF2
 45319                           intcon2	equ	0xFF1
 45320                           intcon3	equ	0xFF0
 45321                           indf0	equ	0xFEF
 45322                           postinc0	equ	0xFEE
 45323                           plusw0	equ	0xFEB
 45324                           fsr0h	equ	0xFEA
 45325                           fsr0l	equ	0xFE9
 45326                           wreg	equ	0xFE8
 45327                           postinc1	equ	0xFE6
 45328                           postdec1	equ	0xFE5
 45329                           plusw1	equ	0xFE3
 45330                           fsr1h	equ	0xFE2
 45331                           fsr1l	equ	0xFE1
 45332                           indf2	equ	0xFDF
 45333                           postinc2	equ	0xFDE
 45334                           postdec2	equ	0xFDD
 45335                           plusw2	equ	0xFDB
 45336                           fsr2h	equ	0xFDA
 45337                           fsr2l	equ	0xFD9
 45338                           status	equ	0xFD8
 45339                           
 45340 ;; *************** function _DIO1_ISR_Lora *****************
 45341 ;; Defined at:
 45342 ;;		line 68 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 45343 ;; Parameters:    Size  Location     Type
 45344 ;;		None
 45345 ;; Auto vars:     Size  Location     Type
 45346 ;;		None
 45347 ;; Return value:  Size  Location     Type
 45348 ;;                  1    wreg      void 
 45349 ;; Registers used:
 45350 ;;		status,2, status,0
 45351 ;; Tracked objects:
 45352 ;;		On entry : 0/0
 45353 ;;		On exit  : 0/0
 45354 ;;		Unchanged: 0/0
 45355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45360 ;;Total ram usage:        0 bytes
 45361 ;; Hardware stack levels used:    1
 45362 ;; This function calls:
 45363 ;;		Nothing
 45364 ;; This function is called by:
 45365 ;;		_DIO1_ISR_Lora_Init
 45366 ;;		_INT2_CallBack
 45367 ;; This function uses a non-reentrant model
 45368 ;;
 45369                           
 45370                           	psect	text222
 45371  00A472                     __ptext222:
 45372                           	opt stack 0
 45373  00A472                     _DIO1_ISR_Lora:
 45374                           	opt stack 15
 45375                           
 45376                           ;interrupt_manager_lora_addons.c: 70: dioStatus |= 0x02;
 45377                           
 45378                           ;incstack = 0
 45379  00A472  824C               	bsf	_dioStatus,1,c	;volatile
 45380  00A474  0012               	return		;funcret
 45381  00A476                     __end_of_DIO1_ISR_Lora:
 45382                           	opt stack 0
 45383                           tosu	equ	0xFFF
 45384                           tosh	equ	0xFFE
 45385                           tosl	equ	0xFFD
 45386                           pclatu	equ	0xFFB
 45387                           pclath	equ	0xFFA
 45388                           tblptru	equ	0xFF8
 45389                           tblptrh	equ	0xFF7
 45390                           tblptrl	equ	0xFF6
 45391                           tablat	equ	0xFF5
 45392                           prodh	equ	0xFF4
 45393                           prodl	equ	0xFF3
 45394                           intcon	equ	0xFF2
 45395                           intcon2	equ	0xFF1
 45396                           intcon3	equ	0xFF0
 45397                           indf0	equ	0xFEF
 45398                           postinc0	equ	0xFEE
 45399                           plusw0	equ	0xFEB
 45400                           fsr0h	equ	0xFEA
 45401                           fsr0l	equ	0xFE9
 45402                           wreg	equ	0xFE8
 45403                           postinc1	equ	0xFE6
 45404                           postdec1	equ	0xFE5
 45405                           plusw1	equ	0xFE3
 45406                           fsr1h	equ	0xFE2
 45407                           fsr1l	equ	0xFE1
 45408                           indf2	equ	0xFDF
 45409                           postinc2	equ	0xFDE
 45410                           postdec2	equ	0xFDD
 45411                           plusw2	equ	0xFDB
 45412                           fsr2h	equ	0xFDA
 45413                           fsr2l	equ	0xFD9
 45414                           status	equ	0xFD8
 45415                           
 45416 ;; *************** function _INT2_DefaultInterruptHandler *****************
 45417 ;; Defined at:
 45418 ;;		line 120 in file "mcc_generated_files/ext_int.c"
 45419 ;; Parameters:    Size  Location     Type
 45420 ;;		None
 45421 ;; Auto vars:     Size  Location     Type
 45422 ;;		None
 45423 ;; Return value:  Size  Location     Type
 45424 ;;                  1    wreg      void 
 45425 ;; Registers used:
 45426 ;;		None
 45427 ;; Tracked objects:
 45428 ;;		On entry : 0/0
 45429 ;;		On exit  : 0/0
 45430 ;;		Unchanged: 0/0
 45431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45436 ;;Total ram usage:        0 bytes
 45437 ;; Hardware stack levels used:    1
 45438 ;; This function calls:
 45439 ;;		Nothing
 45440 ;; This function is called by:
 45441 ;;		_EXT_INT_Initialize
 45442 ;;		_INT2_CallBack
 45443 ;; This function uses a non-reentrant model
 45444 ;;
 45445                           
 45446                           	psect	text223
 45447  00A484                     __ptext223:
 45448                           	opt stack 0
 45449  00A484                     _INT2_DefaultInterruptHandler:
 45450                           	opt stack 15
 45451                           
 45452                           ;incstack = 0
 45453  00A484  0012               	return		;funcret
 45454  00A486                     __end_of_INT2_DefaultInterruptHandler:
 45455                           	opt stack 0
 45456                           tosu	equ	0xFFF
 45457                           tosh	equ	0xFFE
 45458                           tosl	equ	0xFFD
 45459                           pclatu	equ	0xFFB
 45460                           pclath	equ	0xFFA
 45461                           tblptru	equ	0xFF8
 45462                           tblptrh	equ	0xFF7
 45463                           tblptrl	equ	0xFF6
 45464                           tablat	equ	0xFF5
 45465                           prodh	equ	0xFF4
 45466                           prodl	equ	0xFF3
 45467                           intcon	equ	0xFF2
 45468                           intcon2	equ	0xFF1
 45469                           intcon3	equ	0xFF0
 45470                           indf0	equ	0xFEF
 45471                           postinc0	equ	0xFEE
 45472                           plusw0	equ	0xFEB
 45473                           fsr0h	equ	0xFEA
 45474                           fsr0l	equ	0xFE9
 45475                           wreg	equ	0xFE8
 45476                           postinc1	equ	0xFE6
 45477                           postdec1	equ	0xFE5
 45478                           plusw1	equ	0xFE3
 45479                           fsr1h	equ	0xFE2
 45480                           fsr1l	equ	0xFE1
 45481                           indf2	equ	0xFDF
 45482                           postinc2	equ	0xFDE
 45483                           postdec2	equ	0xFDD
 45484                           plusw2	equ	0xFDB
 45485                           fsr2h	equ	0xFDA
 45486                           fsr2l	equ	0xFD9
 45487                           status	equ	0xFD8
 45488                           
 45489 ;; *************** function _INT1_ISR *****************
 45490 ;; Defined at:
 45491 ;;		line 45 in file "mcc_generated_files/ext_int.c"
 45492 ;; Parameters:    Size  Location     Type
 45493 ;;		None
 45494 ;; Auto vars:     Size  Location     Type
 45495 ;;		None
 45496 ;; Return value:  Size  Location     Type
 45497 ;;                  1    wreg      void 
 45498 ;; Registers used:
 45499 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45500 ;; Tracked objects:
 45501 ;;		On entry : 0/0
 45502 ;;		On exit  : 0/0
 45503 ;;		Unchanged: 0/0
 45504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45509 ;;Total ram usage:        0 bytes
 45510 ;; Hardware stack levels used:    1
 45511 ;; Hardware stack levels required when called:    2
 45512 ;; This function calls:
 45513 ;;		_INT1_CallBack
 45514 ;; This function is called by:
 45515 ;;		_INTERRUPT_InterruptManager
 45516 ;; This function uses a non-reentrant model
 45517 ;;
 45518                           
 45519                           	psect	text224
 45520  00A434                     __ptext224:
 45521                           	opt stack 0
 45522  00A434                     _INT1_ISR:
 45523                           	opt stack 15
 45524                           
 45525                           ;ext_int.c: 51: (INTCON3bits.INT1IF = 0);
 45526                           
 45527                           ;incstack = 0
 45528  00A434  90F0               	bcf	intcon3,0,c	;volatile
 45529                           
 45530                           ;ext_int.c: 54: INT1_CallBack();
 45531  00A436  ECE2  F04F         	call	_INT1_CallBack	;wreg free
 45532  00A43A  0012               	return		;funcret
 45533  00A43C                     __end_of_INT1_ISR:
 45534                           	opt stack 0
 45535                           tosu	equ	0xFFF
 45536                           tosh	equ	0xFFE
 45537                           tosl	equ	0xFFD
 45538                           pclatu	equ	0xFFB
 45539                           pclath	equ	0xFFA
 45540                           tblptru	equ	0xFF8
 45541                           tblptrh	equ	0xFF7
 45542                           tblptrl	equ	0xFF6
 45543                           tablat	equ	0xFF5
 45544                           prodh	equ	0xFF4
 45545                           prodl	equ	0xFF3
 45546                           intcon	equ	0xFF2
 45547                           intcon2	equ	0xFF1
 45548                           intcon3	equ	0xFF0
 45549                           indf0	equ	0xFEF
 45550                           postinc0	equ	0xFEE
 45551                           plusw0	equ	0xFEB
 45552                           fsr0h	equ	0xFEA
 45553                           fsr0l	equ	0xFE9
 45554                           wreg	equ	0xFE8
 45555                           postinc1	equ	0xFE6
 45556                           postdec1	equ	0xFE5
 45557                           plusw1	equ	0xFE3
 45558                           fsr1h	equ	0xFE2
 45559                           fsr1l	equ	0xFE1
 45560                           indf2	equ	0xFDF
 45561                           postinc2	equ	0xFDE
 45562                           postdec2	equ	0xFDD
 45563                           plusw2	equ	0xFDB
 45564                           fsr2h	equ	0xFDA
 45565                           fsr2l	equ	0xFD9
 45566                           status	equ	0xFD8
 45567                           
 45568 ;; *************** function _INT1_CallBack *****************
 45569 ;; Defined at:
 45570 ;;		line 60 in file "mcc_generated_files/ext_int.c"
 45571 ;; Parameters:    Size  Location     Type
 45572 ;;		None
 45573 ;; Auto vars:     Size  Location     Type
 45574 ;;		None
 45575 ;; Return value:  Size  Location     Type
 45576 ;;                  1    wreg      void 
 45577 ;; Registers used:
 45578 ;;		wreg, status,2, status,0, pclat, tosl, cstack
 45579 ;; Tracked objects:
 45580 ;;		On entry : 0/0
 45581 ;;		On exit  : 0/0
 45582 ;;		Unchanged: 0/0
 45583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45588 ;;Total ram usage:        0 bytes
 45589 ;; Hardware stack levels used:    1
 45590 ;; Hardware stack levels required when called:    1
 45591 ;; This function calls:
 45592 ;;		Absolute function
 45593 ;;		_DIO0_ISR_Lora
 45594 ;;		_INT1_DefaultInterruptHandler
 45595 ;; This function is called by:
 45596 ;;		_INT1_ISR
 45597 ;; This function uses a non-reentrant model
 45598 ;;
 45599                           
 45600                           	psect	text225
 45601  009FC4                     __ptext225:
 45602                           	opt stack 0
 45603  009FC4                     _INT1_CallBack:
 45604                           	opt stack 15
 45605                           
 45606                           ;ext_int.c: 63: if(INT1_InterruptHandler)
 45607                           
 45608                           ;incstack = 0
 45609  009FC4  0101               	movlb	1	; () banked
 45610  009FC6  51EF               	movf	_INT1_InterruptHandler& (0+255),w,b
 45611  009FC8  0101               	movlb	1	; () banked
 45612  009FCA  11F0               	iorwf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45613  009FCC  B4D8               	btfsc	status,2,c
 45614  009FCE  0012               	return	
 45615                           
 45616                           ; BSR set to: 1
 45617                           ;ext_int.c: 64: {
 45618                           ;ext_int.c: 65: INT1_InterruptHandler();
 45619  009FD0  D801               	call	i2u2220_48
 45620  009FD2  0012               	return	
 45621  009FD4                     i2u2220_48:
 45622  009FD4  0005               	push	
 45623  009FD6  6EFA               	movwf	pclath,c
 45624  009FD8  0101               	movlb	1	; () banked
 45625  009FDA  51EF               	movf	_INT1_InterruptHandler& (0+255),w,b
 45626  009FDC  6EFD               	movwf	tosl,c
 45627  009FDE  51F0               	movf	(_INT1_InterruptHandler+1)& (0+255),w,b
 45628  009FE0  6EFE               	movwf	tosh,c
 45629  009FE2  6AFF               	clrf	tosu,c
 45630  009FE4  50FA               	movf	pclath,w,c
 45631  009FE6  0012               	return		;indir
 45632  009FE8                     __end_of_INT1_CallBack:
 45633                           	opt stack 0
 45634                           tosu	equ	0xFFF
 45635                           tosh	equ	0xFFE
 45636                           tosl	equ	0xFFD
 45637                           pclatu	equ	0xFFB
 45638                           pclath	equ	0xFFA
 45639                           tblptru	equ	0xFF8
 45640                           tblptrh	equ	0xFF7
 45641                           tblptrl	equ	0xFF6
 45642                           tablat	equ	0xFF5
 45643                           prodh	equ	0xFF4
 45644                           prodl	equ	0xFF3
 45645                           intcon	equ	0xFF2
 45646                           intcon2	equ	0xFF1
 45647                           intcon3	equ	0xFF0
 45648                           indf0	equ	0xFEF
 45649                           postinc0	equ	0xFEE
 45650                           plusw0	equ	0xFEB
 45651                           fsr0h	equ	0xFEA
 45652                           fsr0l	equ	0xFE9
 45653                           wreg	equ	0xFE8
 45654                           postinc1	equ	0xFE6
 45655                           postdec1	equ	0xFE5
 45656                           plusw1	equ	0xFE3
 45657                           fsr1h	equ	0xFE2
 45658                           fsr1l	equ	0xFE1
 45659                           indf2	equ	0xFDF
 45660                           postinc2	equ	0xFDE
 45661                           postdec2	equ	0xFDD
 45662                           plusw2	equ	0xFDB
 45663                           fsr2h	equ	0xFDA
 45664                           fsr2l	equ	0xFD9
 45665                           status	equ	0xFD8
 45666                           
 45667 ;; *************** function _DIO0_ISR_Lora *****************
 45668 ;; Defined at:
 45669 ;;		line 63 in file "mcc_generated_files/LoRaWAN/interrupt_manager_lora_addons.c"
 45670 ;; Parameters:    Size  Location     Type
 45671 ;;		None
 45672 ;; Auto vars:     Size  Location     Type
 45673 ;;		None
 45674 ;; Return value:  Size  Location     Type
 45675 ;;                  1    wreg      void 
 45676 ;; Registers used:
 45677 ;;		status,2, status,0
 45678 ;; Tracked objects:
 45679 ;;		On entry : 0/0
 45680 ;;		On exit  : 0/0
 45681 ;;		Unchanged: 0/0
 45682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45687 ;;Total ram usage:        0 bytes
 45688 ;; Hardware stack levels used:    1
 45689 ;; This function calls:
 45690 ;;		Nothing
 45691 ;; This function is called by:
 45692 ;;		_DIO0_ISR_Lora_Init
 45693 ;;		_INT1_CallBack
 45694 ;; This function uses a non-reentrant model
 45695 ;;
 45696                           
 45697                           	psect	text226
 45698  00A476                     __ptext226:
 45699                           	opt stack 0
 45700  00A476                     _DIO0_ISR_Lora:
 45701                           	opt stack 15
 45702                           
 45703                           ;interrupt_manager_lora_addons.c: 65: dioStatus |= 0x01;
 45704                           
 45705                           ;incstack = 0
 45706  00A476  804C               	bsf	_dioStatus,0,c	;volatile
 45707  00A478  0012               	return		;funcret
 45708  00A47A                     __end_of_DIO0_ISR_Lora:
 45709                           	opt stack 0
 45710                           tosu	equ	0xFFF
 45711                           tosh	equ	0xFFE
 45712                           tosl	equ	0xFFD
 45713                           pclatu	equ	0xFFB
 45714                           pclath	equ	0xFFA
 45715                           tblptru	equ	0xFF8
 45716                           tblptrh	equ	0xFF7
 45717                           tblptrl	equ	0xFF6
 45718                           tablat	equ	0xFF5
 45719                           prodh	equ	0xFF4
 45720                           prodl	equ	0xFF3
 45721                           intcon	equ	0xFF2
 45722                           intcon2	equ	0xFF1
 45723                           intcon3	equ	0xFF0
 45724                           indf0	equ	0xFEF
 45725                           postinc0	equ	0xFEE
 45726                           plusw0	equ	0xFEB
 45727                           fsr0h	equ	0xFEA
 45728                           fsr0l	equ	0xFE9
 45729                           wreg	equ	0xFE8
 45730                           postinc1	equ	0xFE6
 45731                           postdec1	equ	0xFE5
 45732                           plusw1	equ	0xFE3
 45733                           fsr1h	equ	0xFE2
 45734                           fsr1l	equ	0xFE1
 45735                           indf2	equ	0xFDF
 45736                           postinc2	equ	0xFDE
 45737                           postdec2	equ	0xFDD
 45738                           plusw2	equ	0xFDB
 45739                           fsr2h	equ	0xFDA
 45740                           fsr2l	equ	0xFD9
 45741                           status	equ	0xFD8
 45742                           
 45743 ;; *************** function _INT1_DefaultInterruptHandler *****************
 45744 ;; Defined at:
 45745 ;;		line 79 in file "mcc_generated_files/ext_int.c"
 45746 ;; Parameters:    Size  Location     Type
 45747 ;;		None
 45748 ;; Auto vars:     Size  Location     Type
 45749 ;;		None
 45750 ;; Return value:  Size  Location     Type
 45751 ;;                  1    wreg      void 
 45752 ;; Registers used:
 45753 ;;		None
 45754 ;; Tracked objects:
 45755 ;;		On entry : 0/0
 45756 ;;		On exit  : 0/0
 45757 ;;		Unchanged: 0/0
 45758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 45759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 45763 ;;Total ram usage:        0 bytes
 45764 ;; Hardware stack levels used:    1
 45765 ;; This function calls:
 45766 ;;		Nothing
 45767 ;; This function is called by:
 45768 ;;		_EXT_INT_Initialize
 45769 ;;		_INT1_CallBack
 45770 ;; This function uses a non-reentrant model
 45771 ;;
 45772                           
 45773                           	psect	text227
 45774  00A486                     __ptext227:
 45775                           	opt stack 0
 45776  00A486                     _INT1_DefaultInterruptHandler:
 45777                           	opt stack 15
 45778                           
 45779                           ;incstack = 0
 45780  00A486  0012               	return		;funcret
 45781  00A488                     __end_of_INT1_DefaultInterruptHandler:
 45782                           	opt stack 0
 45783                           tosu	equ	0xFFF
 45784                           tosh	equ	0xFFE
 45785                           tosl	equ	0xFFD
 45786                           pclatu	equ	0xFFB
 45787                           pclath	equ	0xFFA
 45788                           tblptru	equ	0xFF8
 45789                           tblptrh	equ	0xFF7
 45790                           tblptrl	equ	0xFF6
 45791                           tablat	equ	0xFF5
 45792                           prodh	equ	0xFF4
 45793                           prodl	equ	0xFF3
 45794                           intcon	equ	0xFF2
 45795                           intcon2	equ	0xFF1
 45796                           intcon3	equ	0xFF0
 45797                           indf0	equ	0xFEF
 45798                           postinc0	equ	0xFEE
 45799                           plusw0	equ	0xFEB
 45800                           fsr0h	equ	0xFEA
 45801                           fsr0l	equ	0xFE9
 45802                           wreg	equ	0xFE8
 45803                           postinc1	equ	0xFE6
 45804                           postdec1	equ	0xFE5
 45805                           plusw1	equ	0xFE3
 45806                           fsr1h	equ	0xFE2
 45807                           fsr1l	equ	0xFE1
 45808                           indf2	equ	0xFDF
 45809                           postinc2	equ	0xFDE
 45810                           postdec2	equ	0xFDD
 45811                           plusw2	equ	0xFDB
 45812                           fsr2h	equ	0xFDA
 45813                           fsr2l	equ	0xFD9
 45814                           status	equ	0xFD8
 45815                           tosu	equ	0xFFF
 45816                           tosh	equ	0xFFE
 45817                           tosl	equ	0xFFD
 45818                           pclatu	equ	0xFFB
 45819                           pclath	equ	0xFFA
 45820                           tblptru	equ	0xFF8
 45821                           tblptrh	equ	0xFF7
 45822                           tblptrl	equ	0xFF6
 45823                           tablat	equ	0xFF5
 45824                           prodh	equ	0xFF4
 45825                           prodl	equ	0xFF3
 45826                           intcon	equ	0xFF2
 45827                           intcon2	equ	0xFF1
 45828                           intcon3	equ	0xFF0
 45829                           indf0	equ	0xFEF
 45830                           postinc0	equ	0xFEE
 45831                           plusw0	equ	0xFEB
 45832                           fsr0h	equ	0xFEA
 45833                           fsr0l	equ	0xFE9
 45834                           wreg	equ	0xFE8
 45835                           postinc1	equ	0xFE6
 45836                           postdec1	equ	0xFE5
 45837                           plusw1	equ	0xFE3
 45838                           fsr1h	equ	0xFE2
 45839                           fsr1l	equ	0xFE1
 45840                           indf2	equ	0xFDF
 45841                           postinc2	equ	0xFDE
 45842                           postdec2	equ	0xFDD
 45843                           plusw2	equ	0xFDB
 45844                           fsr2h	equ	0xFDA
 45845                           fsr2l	equ	0xFD9
 45846                           status	equ	0xFD8
 45847                           
 45848                           	psect	text228
 45849  000000                     __ptext228:
 45850                           	opt stack 0
 45851                           tosu	equ	0xFFF
 45852                           tosh	equ	0xFFE
 45853                           tosl	equ	0xFFD
 45854                           pclatu	equ	0xFFB
 45855                           pclath	equ	0xFFA
 45856                           tblptru	equ	0xFF8
 45857                           tblptrh	equ	0xFF7
 45858                           tblptrl	equ	0xFF6
 45859                           tablat	equ	0xFF5
 45860                           prodh	equ	0xFF4
 45861                           prodl	equ	0xFF3
 45862                           intcon	equ	0xFF2
 45863                           intcon2	equ	0xFF1
 45864                           intcon3	equ	0xFF0
 45865                           indf0	equ	0xFEF
 45866                           postinc0	equ	0xFEE
 45867                           plusw0	equ	0xFEB
 45868                           fsr0h	equ	0xFEA
 45869                           fsr0l	equ	0xFE9
 45870                           wreg	equ	0xFE8
 45871                           postinc1	equ	0xFE6
 45872                           postdec1	equ	0xFE5
 45873                           plusw1	equ	0xFE3
 45874                           fsr1h	equ	0xFE2
 45875                           fsr1l	equ	0xFE1
 45876                           indf2	equ	0xFDF
 45877                           postinc2	equ	0xFDE
 45878                           postdec2	equ	0xFDD
 45879                           plusw2	equ	0xFDB
 45880                           fsr2h	equ	0xFDA
 45881                           fsr2l	equ	0xFD9
 45882                           status	equ	0xFD8
 45883                           
 45884                           	psect	rparam
 45885  0000                     tosu	equ	0xFFF
 45886                           tosh	equ	0xFFE
 45887                           tosl	equ	0xFFD
 45888                           pclatu	equ	0xFFB
 45889                           pclath	equ	0xFFA
 45890                           tblptru	equ	0xFF8
 45891                           tblptrh	equ	0xFF7
 45892                           tblptrl	equ	0xFF6
 45893                           tablat	equ	0xFF5
 45894                           prodh	equ	0xFF4
 45895                           prodl	equ	0xFF3
 45896                           intcon	equ	0xFF2
 45897                           intcon2	equ	0xFF1
 45898                           intcon3	equ	0xFF0
 45899                           indf0	equ	0xFEF
 45900                           postinc0	equ	0xFEE
 45901                           plusw0	equ	0xFEB
 45902                           fsr0h	equ	0xFEA
 45903                           fsr0l	equ	0xFE9
 45904                           wreg	equ	0xFE8
 45905                           postinc1	equ	0xFE6
 45906                           postdec1	equ	0xFE5
 45907                           plusw1	equ	0xFE3
 45908                           fsr1h	equ	0xFE2
 45909                           fsr1l	equ	0xFE1
 45910                           indf2	equ	0xFDF
 45911                           postinc2	equ	0xFDE
 45912                           postdec2	equ	0xFDD
 45913                           plusw2	equ	0xFDB
 45914                           fsr2h	equ	0xFDA
 45915                           fsr2l	equ	0xFD9
 45916                           status	equ	0xFD8
 45917                           
 45918                           	psect	temp
 45919  00004E                     btemp:
 45920                           	opt stack 0
 45921  00004E                     	ds	12
 45922                           tosu	equ	0xFFF
 45923                           tosh	equ	0xFFE
 45924                           tosl	equ	0xFFD
 45925                           pclatu	equ	0xFFB
 45926                           pclath	equ	0xFFA
 45927                           tblptru	equ	0xFF8
 45928                           tblptrh	equ	0xFF7
 45929                           tblptrl	equ	0xFF6
 45930                           tablat	equ	0xFF5
 45931                           prodh	equ	0xFF4
 45932                           prodl	equ	0xFF3
 45933                           intcon	equ	0xFF2
 45934                           intcon2	equ	0xFF1
 45935                           intcon3	equ	0xFF0
 45936                           indf0	equ	0xFEF
 45937                           postinc0	equ	0xFEE
 45938                           plusw0	equ	0xFEB
 45939                           fsr0h	equ	0xFEA
 45940                           fsr0l	equ	0xFE9
 45941                           wreg	equ	0xFE8
 45942                           postinc1	equ	0xFE6
 45943                           postdec1	equ	0xFE5
 45944                           plusw1	equ	0xFE3
 45945                           fsr1h	equ	0xFE2
 45946                           fsr1l	equ	0xFE1
 45947                           indf2	equ	0xFDF
 45948                           postinc2	equ	0xFDE
 45949                           postdec2	equ	0xFDD
 45950                           plusw2	equ	0xFDB
 45951                           fsr2h	equ	0xFDA
 45952                           fsr2l	equ	0xFD9
 45953                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    408
    Data        61
    BSS         1274
    Persistent  14
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           83     59      83
    BANK0           160    153     156
    BANK1           256    130     249
    BANK2           256      0     245
    BANK3           256      0     192
    BANK4           256      0     224
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           56      0       0

Pointer List with Targets:

    RxPayload$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    S1654$0$0	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    memset@p1	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memset@p	PTR unsigned char  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    memcpy@d1	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    memcpy@s1	PTR const void  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 271
		 -> radioBuffer.cfList(COMRAM[16]), LORAWAN_RxDone@hdr.cfList(COMRAM[16]), payload(BANK1[2]), appSKey(BANK3[16]), 
		 -> nwkSKey(BANK3[16]), AssembleEncryptionBlock@frameCounter(BANK0[4]), ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), PrepareJoinRequestFrame@mic(BANK0[4]), 
		 -> loRa.fCntUp.valueLow(BANK2[2]), aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), loRa.activationParameters.applicationKey(BANK2[16]), 
		 -> loRa.activationParameters.applicationSessionKey(BANK2[16]), loRa.activationParameters.networkSessionKey(BANK2[16]), loRa.activationParameters.deviceAddress(BANK2[4]), loRa.activationParameters.applicationEui(BANK2[8]), 
		 -> loRa.activationParameters.deviceEui(BANK2[8]), loRa.activationParameters.mcastApplicationSessionKey(BANK2[16]), loRa.activationParameters.mcastNetworkSessionKey(BANK2[16]), loRa.activationParameters.mcastDeviceAddress(BANK2[4]), 
		 -> AESCmac@y(BANK1[16]), FskSyncWordBuff(CODE[3]), UpdateCfList@joinAccept(BANK0[2]), loRa.activationParameters(BANK2[105]), 
		 -> loRa.devNonce(BANK2[2]), loRa.fCntUp(BANK2[4]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 
		 -> DefaultChannels433(CODE[42]), DefaultChannels868(CODE[42]), RadioConfiguration.syncWord(BANK1[8]), RadioConfiguration(BANK1[54]), 
		 -> NULL(NULL[0]), 

    RxDataDone@pData	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    AESEncode@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncode@masterKey	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncodeLoRa@useKey(BANK0[16]), 

    EncodeShiftRow@stateTable	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    EncKeySchedule@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESEncode@key(BANK0[16]), 

    AESEncodeLoRa@block	PTR unsigned char  size(2) Largest target is 271
		 -> aesBuffer(BANK1[16]), LORAWAN_RxDone@hdr(BANK1[2]), GenerateSubkey@l(BANK0[16]), AESCmac@y(BANK1[16]), 
		 -> AESCmac@x(BANK1[16]), loRa.activationParameters(BANK2[105]), radioBuffer(BIGRAM[271]), loRa(BANK2[245]), 

    AESEncodeLoRa@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    EncryptFRMPayload@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> payload(BANK1[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    EncryptFRMPayload@bufferToBeEncrypted	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    EncryptFRMPayload@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ComputeMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    ComputeMic@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    ExtractMic@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckMcastFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    CheckFlags@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ComputeSessionKeys@joinAcceptBuffer	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@networkId	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@appNonce	PTR unsigned char  size(2) Largest target is 2
		 -> ComputeSessionKeys@joinAcceptBuffer(BANK0[2]), LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    PrepareSessionKeys@sessionKey	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    IncludeMacCommandsResponse@macBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    IncludeMacCommandsResponse@pBufferIndex	PTR unsigned char  size(2) Largest target is 1
		 -> AssemblePacket@macCmdIdx(BANK0[1]), AssemblePacket@bufferIndex(BANK0[1]), 

    AssemblePacket@buffer	PTR unsigned char  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    ExecuteRxTimingSetup@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkCheck@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteRxTimingSetup	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkCheck	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    MacExecuteCommands@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__MacExecuteCommands	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@packet	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    LORAWAN_RxDone@hdr	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_RxDone@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> appSKey(BANK3[16]), 

    LORAWAN_SetNetworkSessionKey@networkSessionKeyNew	PTR unsigned char  size(2) Largest target is 16
		 -> nwkSKey(BANK3[16]), 

    LORAWAN_Send@buffer	PTR void  size(2) Largest target is 2
		 -> payload(BANK1[2]), NULL(NULL[0]), 

    IOCB5_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), 

    IOCB5_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> IOCB5_DefaultInterruptHandler(), Absolute function(), 

    IOCB4_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), 

    IOCB4_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO2_ISR_Lora(), IOCB4_DefaultInterruptHandler(), Absolute function(), 

    FillSubKey@source	PTR unsigned char  size(2) Largest target is 16
		 -> GenerateSubkey@l(BANK0[16]), AESCmac@k1(BANK1[16]), 

    FillSubKey@key	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), AESCmac@k1(BANK1[16]), 

    GenerateSubkey@k2	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k2(BANK1[16]), 

    GenerateSubkey@k1	PTR unsigned char  size(2) Largest target is 16
		 -> AESCmac@k1(BANK1[16]), 

    GenerateSubkey@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@output	PTR unsigned char  size(2) Largest target is 16
		 -> aesBuffer(BANK1[16]), 

    AESCmac@input	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), 

    AESCmac@key	PTR unsigned char  size(2) Largest target is 245
		 -> loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    AESCmac@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), macBuffer(BIGRAM[271]), radioBuffer(BIGRAM[271]), NULL(NULL[0]), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), TMR_ISR_lora(), Absolute function(), 

    UpdateCfList@joinAccept	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    SearchAvailableChannel@channelIndex	PTR unsigned char  size(2) Largest target is 1
		 -> LORAWAN_RxDone@channelIndex(BANK1[1]), SelectChannelForTransmission@channelIndex(BANK0[1]), 

    sp__ExecuteRxParamSetupReq	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteRxParamSetupReq@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteNewChannel	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteNewChannel@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDevStatus	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDevStatus@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteLinkAdr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@redundancy	PTR struct . size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteLinkAdr@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__ExecuteDutyCycle	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    ExecuteDutyCycle@ptr	PTR unsigned char  size(2) Largest target is 271
		 -> LORAWAN_RxDone@hdr(BANK1[2]), radioBuffer(BIGRAM[271]), 

    sp__memset	PTR void  size(2) Largest target is 271
		 -> AssemblePacket@mhdr(BANK0[1]), aesBuffer(BANK1[16]), GenerateSubkey@l(BANK0[16]), AESCmac@x(BANK1[16]), 
		 -> macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), loRa(BANK2[245]), 

    LORAWAN_Init@RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    LORAWAN_Init@RxPayload	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    S1654$RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    rxPayload.RxJoinResponse	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> RxJoinResponse(), 

    S1654$RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    rxPayload.RxAppData	PTR FTN(PTR unsigned char ,unsigned char ,enum E8031,)void  size(2) Largest target is 1
		 -> RxDataDone(), 

    RADIO_SetFSKSyncWord@syncWord	PTR unsigned char  size(2) Largest target is 3
		 -> FskSyncWordBuff(CODE[3]), 

    sp__memcpy	PTR void  size(2) Largest target is 271
		 -> AESEncodeLoRa@useKey(BANK0[16]), ComputeMic@mic(BANK0[4]), ExtractMic@mic(BANK0[4]), aesBuffer(BANK1[16]), 
		 -> LORAWAN_RxDone@computedMic(BANK1[4]), loRa.activationParameters.applicationEui(BANK2[8]), loRa.activationParameters.deviceEui(BANK2[8]), AESCmac@x(BANK1[16]), 
		 -> UpdateCfList@frequency(BANK0[4]), macBuffer(BIGRAM[271]), Channels(BANK4[224]), loRa.activationParameters(BANK2[105]), 
		 -> radioBuffer(BIGRAM[271]), loRa(BANK2[245]), RadioConfiguration(BANK1[54]), 

    RADIO_Transmit@buffer	PTR unsigned char  size(2) Largest target is 271
		 -> macBuffer(BIGRAM[271]), 

    RADIO_Init@radioBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    S979$fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    RadioConfiguration.fhssNextFrequency	PTR FTN()unsigned long  size(2) Largest target is 1
		 -> Absolute function(), 

    S979$dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    RadioConfiguration.dataBuffer	PTR unsigned char  size(2) Largest target is 271
		 -> radioBuffer(BIGRAM[271]), 

    SwTimerSetCallback@callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), 

    S214$callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    swTimers.callback	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> DutyCycleCallback(), UpdateJoinSuccessState(), UnconfirmedTransmissionCallback(), AutomaticReplyCallback(), 
		 -> AckRetransmissionCallback(), LORAWAN_LinkCheckCallback(), LORAWAN_ReceiveWindow1Callback(), LORAWAN_ReceiveWindow2Callback(), 
		 -> RADIO_WatchdogTimeout(), RADIO_RxFSKTimeout(), Absolute function(), 

    INT0_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), 

    INT0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO5_ISR_Lora(), INT0_DefaultInterruptHandler(), Absolute function(), 

    INT2_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), 

    INT2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO1_ISR_Lora(), INT2_DefaultInterruptHandler(), Absolute function(), 

    INT1_SetInterruptHandler@InterruptHandler	PTR void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), 

    INT1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> DIO0_ISR_Lora(), INT1_DefaultInterruptHandler(), Absolute function(), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_CallBack->_TMR_ISR_lora
    _TMR_ISR_lora->i2_SwTimersInterrupt
    i2_TMR_SwapTimer->i2_TMR1_ReadTimer
    i2_SwTimersInterrupt->i2_TMR_GetDeltaTime
    i2_TMR_GetDeltaTime->i2_TMR1_ReadTimer

Critical Paths under _main in BANK0

    _readAndSend->_LORAWAN_Send
    _ADC_Read->_ADC_SelChannel
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB4_SetInterruptHandler
    _PIN_MANAGER_Initialize->_IOCB5_SetInterruptHandler
    _TMR_ISR_Lora_Init->_TMR1_SetInterruptHandler
    _DIO5_ISR_Lora_Init->_INT0_SetInterruptHandler
    _DIO2_ISR_Lora_Init->_IOCB4_SetInterruptHandler
    _DIO1_ISR_Lora_Init->_INT2_SetInterruptHandler
    _DIO0_ISR_Lora_Init->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT0_SetInterruptHandler
    _EXT_INT_Initialize->_INT1_SetInterruptHandler
    _EXT_INT_Initialize->_INT2_SetInterruptHandler
    _LORAWAN_SetNetworkSessionKey->_memcpy
    _LORAWAN_SetApplicationSessionKey->_memcpy
    _UnconfirmedTransmissionCallback->_RADIO_Transmit
    _RADIO_WatchdogTimeout->_RADIO_WriteMode
    _RADIO_RxFSKTimeout->_RADIO_WriteMode
    _LORAWAN_ReceiveWindow1Callback->_RADIO_ReceiveStart
    _LORAWAN_LinkCheckCallback->_SwTimerStart
    _DutyCycleCallback->_SwTimerStart
    _AutomaticReplyCallback->_LORAWAN_Send
    _AckRetransmissionCallback->_RADIO_Transmit
    _RADIO_DIO5->_RADIO_UnhandledInterrupt
    _RADIO_DIO4->_RADIO_UnhandledInterrupt
    _RADIO_DIO3->_RADIO_UnhandledInterrupt
    _RADIO_DIO2->_RADIO_FHSSChangeChannel
    _RADIO_RxTimeout->_LORAWAN_RxTimeout
    _RADIO_FHSSChangeChannel->_RADIO_WriteFrequency
    _RADIO_DIO0->_RADIO_FSKPayloadReady
    _RADIO_DIO0->_RADIO_RxDone
    _RADIO_UnhandledInterrupt->_RADIO_RegisterWrite
    _RADIO_TxDone->_LORAWAN_TxDone
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxTimeout->_RADIO_Transmit
    _LORAWAN_ReceiveWindow2Callback->_RADIO_ReceiveStart
    _LORAWAN_RxDone->_LORAWAN_Send
    _UpdateRetransmissionAckTimeoutState->_SwTimerStart
    _UpdateJoinSuccessState->_SwTimerStart
    _UpdateCfList->___lmul
    _StartReTxTimer->_SwTimerStart
    _MacExecuteCommands->_ExecuteNewChannel
    _ExecuteRxTimingSetup->_UpdateReceiveDelays
    _UpdateReceiveDelays->___wmul
    _ExecuteRxParamSetupReq->___lmul
    _ExecuteNewChannel->___lmul
    _ValidateDataRange->_ValidateDataRate
    _LORAWAN_SetChannelIdStatus->_UpdateChannelIdStatus
    _ExecuteLinkAdr->_EnableChannels
    _EnableChannels->_EnableChannels1
    _EnableChannels1->_UpdateChannelIdStatus
    _LORAWAN_Send->_AssemblePacket
    _LORAWAN_GetMaxPayloadSize->_CountfOptsLength
    _AssemblePacket->_AESCmac
    _EncryptFRMPayload->_AESEncodeLoRa
    _AssembleEncryptionBlock->_memcpy
    _ExtractMic->_memcpy
    _ComputeSessionKeys->_AESEncodeLoRa
    _PrepareSessionKeys->_memcpy
    _RADIO_FSKPacketSent->_LORAWAN_TxDone
    _SwTimerReadValue->_SwTimersInterrupt
    _LORAWAN_EnterContinuousReceive->_RADIO_ReceiveStart
    _RxDataDone->_LORAWAN_SetCurrentDataRate
    _LORAWAN_SetCurrentDataRate->_ValidateDataRate
    _RADIO_ReceiveStop->_RADIO_WriteMode
    _RADIO_ReceiveStart->_RADIO_WriteConfiguration
    _ConfigureRadioRx->_ConfigureRadio
    _LORAWAN_Join->_PrepareJoinRequestFrame
    _SelectChannelForTransmission->_SearchAvailableChannel
    _SearchAvailableChannel->_Random
    _ConfigureRadioTx->_ConfigureRadio
    _ConfigureRadio->_RADIO_SetFSKSyncWord
    _RADIO_SetFSKSyncWord->_memcpy
    _RADIO_Transmit->_RADIO_WriteConfiguration
    _RADIO_WriteConfiguration->___lmul
    _RADIO_WritePower->_RADIO_RegisterRead
    _RADIO_WritePower->_RADIO_RegisterWrite
    _RADIO_WriteFSKFrequencyDeviation->___lldiv
    _RADIO_WriteFSKBitRate->___lldiv
    _PrepareJoinRequestFrame->_ComputeMic
    _Random->___lwmod
    _rand->___lmul
    ___lwmod->_rand
    _ComputeMic->_AESCmac
    _AESCmac->_GenerateSubkey
    _GenerateSubkey->_AESEncodeLoRa
    _AESEncodeLoRa->_AESEncode
    _AESEncode->_EncKeySchedule
    _LORAWAN_Init->_LORAWAN_Reset
    _srand->_RADIO_ReadRandom
    _SetCallbackSoftwareTimers->_SwTimerSetCallback
    _RADIO_ReadRandom->_RADIO_WriteMode
    _LORAWAN_Reset->_LORAWAN_LinkCheckConfigure
    _StopAllSoftwareTimers->_SwTimerStop
    _RADIO_Init->_RADIO_WriteFrequency
    _RADIO_WriteMode->_SystemBlockingWaitMs
    _RADIO_RegisterRead->_HALSPISend
    _RADIO_WriteFrequency->___lldiv
    _RADIO_RegisterWrite->_HALSPISend
    _HALSPISend->_SPI2_Exchange8bit
    _RADIO_Reset->_SystemBlockingWaitMs
    _LORAWAN_LinkCheckConfigure->___lmul
    ___lmul->_SwTimerReadValue
    _SwTimerStart->_SwTimersInterrupt
    _TMR_OverrideRemaining->_TMR_SwapTimer
    _TMR_SwapTimer->_TMR1_ReadTimer
    _SwTimersInterrupt->_TMR_GetDeltaTime
    _TMR_GetDeltaTime->_TMR1_ReadTimer
    _SwTimerSetTimeout->___lldiv
    _InitDefault868Channels->_memcpy
    _InitDefault433Channels->_memcpy
    _CreateAllSoftwareTimers->_SwTimerCreate

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _LORAWAN_Mainloop->_RADIO_DIO0
    _RADIO_RxDone->_LORAWAN_RxDone
    _RADIO_FSKPayloadReady->_LORAWAN_RxDone
    _LORAWAN_RxDone->_AESCmac
    _AssemblePacket->_AESCmac
    _ComputeMic->_AESCmac

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0 6897413
                                            152 BANK0      1     1      0
                                            126 BANK1      4     4      0
                           _ADC_Init
                       _IO_pins_init
                   _LORAWAN_GetState
                       _LORAWAN_Init
                       _LORAWAN_Join
                   _LORAWAN_Mainloop
   _LORAWAN_SetApplicationSessionKey
           _LORAWAN_SetDeviceAddress
       _LORAWAN_SetNetworkSessionKey
                          _LoRaSleep
                         _LoRaWakeUp
                  _SYSTEM_Initialize
                     _SysConfigSleep
                        _readAndSend
 ---------------------------------------------------------------------------------
 (1) _readAndSend                                          0     0      0  327590
                           _ADC_Read
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             7     5      2      99
                                              6 BANK0      7     5      2
                     _ADC_SelChannel
 ---------------------------------------------------------------------------------
 (3) _ADC_SelChannel                                       2     2      0      31
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _SysConfigSleep                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0    2525
                 _EXT_INT_Initialize
               _INTERRUPT_Initialize
               _LORAWAN_PlatformInit
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _SPI2_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     239
           _TMR1_SetInterruptHandler
                    _TMR1_StartTimer
 ---------------------------------------------------------------------------------
 (3) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0     374
          _IOCB4_SetInterruptHandler
          _IOCB5_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB5_SetInterruptHandler                            2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_PlatformInit                                 0     0      0    1195
                 _DIO0_ISR_Lora_Init
                 _DIO1_ISR_Lora_Init
                 _DIO2_ISR_Lora_Init
                 _DIO3_ISR_Lora_Init
                 _DIO4_ISR_Lora_Init
                 _DIO5_ISR_Lora_Init
                    _SystemTimerInit
                  _TMR_ISR_Lora_Init
 ---------------------------------------------------------------------------------
 (3) _TMR_ISR_Lora_Init                                    0     0      0     239
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _SystemTimerInit                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO5_ISR_Lora_Init                                   0     0      0     239
           _INT0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO4_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO3_ISR_Lora_Init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _DIO2_ISR_Lora_Init                                   0     0      0     239
          _IOCB4_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _IOCB4_SetInterruptHandler                            2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _DIO1_ISR_Lora_Init                                   0     0      0     239
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _DIO0_ISR_Lora_Init                                   0     0      0     239
           _INT1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EXT_INT_Initialize                                   0     0      0     717
           _INT0_SetInterruptHandler
           _INT1_SetInterruptHandler
           _INT2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (4) _INT2_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT1_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _INT0_SetInterruptHandler                             2     0      2     239
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _LoRaWakeUp                                           0     0      0       0
                    _SPI2_Initialize
 ---------------------------------------------------------------------------------
 (2) _SPI2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LoRaSleep                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetNetworkSessionKey                         2     0      2   14068
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetDeviceAddress                             4     0      4     135
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_SetApplicationSessionKey                     2     0      2   14068
                                             14 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Mainloop                                     0     0      0 6097347
             _INTERRUPT_GetDioStatus
                         _RADIO_DIO0
                         _RADIO_DIO1
                         _RADIO_DIO2
                         _RADIO_DIO3
                         _RADIO_DIO4
                         _RADIO_DIO5
                    _SwTimersExecute
 ---------------------------------------------------------------------------------
 (2) _SwTimersExecute                                      5     5      0 2366341
                                            142 BANK0      5     5      0
                   Absolute function *
          _AckRetransmissionCallback *
             _AutomaticReplyCallback *
                  _DutyCycleCallback *
          _LORAWAN_LinkCheckCallback *
     _LORAWAN_ReceiveWindow1Callback *
     _LORAWAN_ReceiveWindow2Callback *
                 _RADIO_RxFSKTimeout *
              _RADIO_WatchdogTimeout *
    _UnconfirmedTransmissionCallback *
             _UpdateJoinSuccessState *
 ---------------------------------------------------------------------------------
 (3) _UnconfirmedTransmissionCallback                      1     0      1  156243
                     _RADIO_Transmit
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _RADIO_WatchdogTimeout                                1     0      1  693904
                  _LORAWAN_RxTimeout
                     _LORAWAN_TxDone
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxFSKTimeout                                   2     1      1  508599
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_ReceiveWindow1Callback                       5     4      1  158240
                   _ConfigureRadioRx
                         _GetRx1Freq
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
 ---------------------------------------------------------------------------------
 (4) _GetRx1Freq                                           4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckCallback                            6     5      1    9348
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _DutyCycleCallback                                   11    10      1    9791
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _AutomaticReplyCallback                               1     0      1  327491
                       _LORAWAN_Send
 ---------------------------------------------------------------------------------
 (3) _AckRetransmissionCallback                            2     1      1  166213
               _FindSmallestDataRate
          _LORAWAN_GetMaxPayloadSize
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
                         _RxDataDone *
       _SelectChannelForTransmission
_UpdateRetransmissionAckTimeoutState
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO5                                           2     2      0    9960
                                              9 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO4                                           3     3      0    9960
                                              9 BANK0      3     3      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO3                                           2     2      0    9960
                                              9 BANK0      2     2      0
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO2                                           3     3      0   36563
                                             30 BANK0      3     3      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO1                                           2     2      0  554822
                                            111 BANK0      2     2      0
            _RADIO_FHSSChangeChannel
                 _RADIO_RegisterRead
                    _RADIO_RxTimeout
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxTimeout                                      0     0      0  518231
                  _LORAWAN_RxTimeout
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _RADIO_FHSSChangeChannel                              1     1      0   26569
                                             29 BANK0      1     1      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _RADIO_WriteFrequency
 ---------------------------------------------------------------------------------
 (2) _RADIO_DIO0                                           4     4      0 3109707
                                            122 BANK1      4     4      0
                _RADIO_FSKPacketSent
              _RADIO_FSKPayloadReady
                 _RADIO_RegisterRead
                       _RADIO_RxDone
                       _RADIO_TxDone
           _RADIO_UnhandledInterrupt
 ---------------------------------------------------------------------------------
 (3) _RADIO_UnhandledInterrupt                             1     1      0    9827
                                              8 BANK0      1     1      0
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (3) _RADIO_TxDone                                        12    12      0  217548
                                            135 BANK0     12    12      0
                     _LORAWAN_TxDone
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (3) _RADIO_RxDone                                         2     2      0 1096006
                                            150 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
                        _SwTimerStop
                            ___abdiv
 ---------------------------------------------------------------------------------
 (4) ___abdiv                                              7     6      1     549
                                              4 BANK0      7     6      1
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPayloadReady                                2     2      0 1578116
                                            150 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                     _LORAWAN_RxDone
                  _LORAWAN_RxTimeout
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxTimeout                                    9     9      0  492489
                                            102 BANK0      9     9      0
     _LORAWAN_ReceiveWindow2Callback
                     _RADIO_Transmit
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
       _SelectChannelForTransmission
                   _SetJoinFailState
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_ReceiveWindow2Callback                       1     0      1  326746
                   _ConfigureRadioRx
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_RxDone                                      28    25      3 1069356
                                            142 BANK0      8     5      3
                                            102 BANK1     20    20      0
                            _AESCmac
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                         _CheckFlags
                    _CheckMcastFlags
                         _ComputeMic
                 _ComputeSessionKeys
                  _EncryptFRMPayload
                         _ExtractMic
     _LORAWAN_EnterContinuousReceive
                       _LORAWAN_Send
                 _MacExecuteCommands
                    _RADIO_GetStatus
                  _RADIO_ReleaseData
                         _RxDataDone *
             _SearchAvailableChannel
                   _SetJoinFailState
             _SetReceptionNotOkState
                     _StartReTxTimer
                        _SwTimerStop
                       _UpdateCfList
                   _UpdateDLSettings
             _UpdateJoinSuccessState
                _UpdateReceiveDelays
_UpdateRetransmissionAckTimeoutState
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _UpdateRetransmissionAckTimeoutState                  4     4      0    9209
                                             62 BANK0      4     4      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) _UpdateJoinSuccessState                               5     4      1    9246
                     _RxJoinResponse *
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _UpdateDLSettings                                     2     1      1     228
                                              4 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _UpdateCfList                                         9     7      2   25139
                                             74 BANK0      9     7      2
         _LORAWAN_SetChannelIdStatus
                  _ValidateFrequency
                             ___lmul
                             ___wmul
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _StartReTxTimer                                       9     9      0    9500
                                             62 BANK0      9     9      0
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _SetReceptionNotOkState                               0     0      0  168540
     _LORAWAN_EnterContinuousReceive
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (5) _SetJoinFailState                                     0     0      0       0
                     _RxJoinResponse *
 ---------------------------------------------------------------------------------
 (4) _RxJoinResponse                                       1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _MacExecuteCommands                                   8     5      3   27672
                                             84 BANK0      8     5      3
                   _ExecuteDevStatus
                   _ExecuteDutyCycle
                     _ExecuteLinkAdr
                   _ExecuteLinkCheck
                  _ExecuteNewChannel
             _ExecuteRxParamSetupReq
               _ExecuteRxTimingSetup
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxTimingSetup                                 3     1      2    1745
                                             11 BANK0      3     1      2
                _UpdateReceiveDelays
 ---------------------------------------------------------------------------------
 (5) _UpdateReceiveDelays                                  1     1      0    1542
                                             10 BANK0      1     1      0
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4    1480
                                              4 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (6) _ExecuteRxParamSetupReq                               9     7      2    7473
                                             74 BANK0      9     7      2
     _UpdateReceiveWindow2Parameters
                   _ValidateDataRate
                  _ValidateFrequency
                   _ValidateRxOffset
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) _ValidateRxOffset                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _UpdateReceiveWindow2Parameters                       5     0      5     478
                                              4 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (6) _ExecuteNewChannel                                   10     8      2   13487
                                             74 BANK0     10     8      2
         _LORAWAN_SetChannelIdStatus
              _UpdateChannelIdStatus
                    _UpdateDataRange
                    _UpdateDutyCycle
                    _UpdateFrequency
                  _ValidateChannelId
                  _ValidateDataRange
                  _ValidateFrequency
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) _ValidateFrequency                                    5     1      4     684
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _ValidateDataRange                                    4     4      0     297
                                              6 BANK0      4     4      0
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (7) _UpdateFrequency                                      5     1      4     405
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) _UpdateDutyCycle                                      3     1      2     405
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _UpdateDataRange                                      4     3      1     628
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _LORAWAN_SetChannelIdStatus                           3     2      1    2489
                                              8 BANK0      3     2      1
              _UpdateChannelIdStatus
                  _ValidateChannelId
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelId                                    3     2      1     962
                                              4 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkCheck                                     2     0      2     203
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteLinkAdr                                      10     8      2    3388
                                             19 BANK0     10     8      2
                     _EnableChannels
              _UpdateCurrentDataRate
                      _UpdateTxPower
                _ValidateChannelMask
            _ValidateChannelMaskCntl
                   _ValidateDataRate
                    _ValidateTxPower
 ---------------------------------------------------------------------------------
 (7) _ValidateTxPower                                      2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMaskCntl                              2     2      0      99
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (7) _ValidateChannelMask                                  5     3      2     302
                                              4 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (7) _UpdateTxPower                                        1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (7) _EnableChannels                                       3     0      3    2075
                                             16 BANK0      3     0      3
                    _EnableChannels1
 ---------------------------------------------------------------------------------
 (8) _EnableChannels1                                      8     3      5    1805
                                              8 BANK0      8     3      5
              _UpdateChannelIdStatus
 ---------------------------------------------------------------------------------
 (7) _UpdateChannelIdStatus                                4     3      1     971
                                              4 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (6) _ExecuteDutyCycle                                     6     4      2     265
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (6) _ExecuteDevStatus                                     2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Send                                         7     3      4  327491
                                            135 BANK0      7     3      4
                     _AssemblePacket
          _LORAWAN_GetMaxPayloadSize
                  _RADIO_ReceiveStop
                     _RADIO_Transmit
       _SelectChannelForTransmission
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_GetMaxPayloadSize                            3     3      0     272
                                             12 BANK0      3     3      0
                   _CountfOptsLength
 ---------------------------------------------------------------------------------
 (3) _AssemblePacket                                      12     7      5  158691
                                            123 BANK0     12     7      5
                            _AESCmac
            _AssembleEncryptionBlock
                   _CountfOptsLength
                  _EncryptFRMPayload
               _FindSmallestDataRate
         _IncludeMacCommandsResponse
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _IncludeMacCommandsResponse                          15    10      5    2532
                                              4 BANK0     15    10      5
                 _RADIO_GetPacketSnr
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetPacketSnr                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _FindSmallestDataRate                                 4     4      0     455
                                              4 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (4) _EncryptFRMPayload                                   22     8     14   46616
                                             69 BANK0     22     8     14
                      _AESEncodeLoRa
            _AssembleEncryptionBlock
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     653
                                              4 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) _AssembleEncryptionBlock                              9     2      7   20040
                                             14 BANK0      9     2      7
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _CountfOptsLength                                     8     8      0     198
                                              4 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (5) _ExtractMic                                          12     8      4   14659
                                             14 BANK0     12     8      4
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _ComputeSessionKeys                                   2     0      2   39507
                                             69 BANK0      2     0      2
                      _AESEncodeLoRa
                 _PrepareSessionKeys
 ---------------------------------------------------------------------------------
 (6) _PrepareSessionKeys                                   7     1      6   18479
                                             14 BANK0      7     1      6
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _CheckMcastFlags                                      2     0      2     290
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _CheckFlags                                           2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _RADIO_FSKPacketSent                                 13    13      0  207916
                                            135 BANK0     13    13      0
                     _LORAWAN_TxDone
                 _RADIO_RegisterRead
                    _RADIO_WriteMode
                   _SwTimerReadValue
                        _SwTimerStop
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) _LORAWAN_TxDone                                      44    42      2  185500
                                             95 BANK0     40    38      2
     _LORAWAN_EnterContinuousReceive
                    _RADIO_GetStatus
                         _RxDataDone *
                   _SwTimerIsRunning
                   _SwTimerReadValue
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _SwTimerReadValue                                     9     5      4     523
                                             53 BANK0      9     5      4
                  _SwTimersInterrupt
 ---------------------------------------------------------------------------------
 (5) _SwTimerIsRunning                                     2     2      0      65
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_GetStatus                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_EnterContinuousReceive                       0     0      0  163373
                   _ConfigureRadioRx
                 _RADIO_ReceiveStart
                  _RADIO_ReceiveStop
                  _RADIO_ReleaseData
_ResetParametersForConfirmedTransmis
_ResetParametersForUnconfirmedTransm
                         _RxDataDone *
 ---------------------------------------------------------------------------------
 (4) _RxDataDone                                           5     1      4    5167
                                              7 BANK0      5     1      4
         _LORAWAN_SetCurrentDataRate
 ---------------------------------------------------------------------------------
 (5) _LORAWAN_SetCurrentDataRate                           1     1      0     223
                                              6 BANK0      1     1      0
              _UpdateCurrentDataRate
                   _ValidateDataRate
 ---------------------------------------------------------------------------------
 (6) _ValidateDataRate                                     2     2      0      68
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (6) _UpdateCurrentDataRate                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _ResetParametersForUnconfirmedTransmission            0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ResetParametersForConfirmedTransmission              0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReleaseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_ReceiveStop                                    0     0      0   15915
                    _RADIO_WriteMode
 ---------------------------------------------------------------------------------
 (6) _RADIO_ReceiveStart                                  10     8      2  126779
                                             85 BANK0     10     8      2
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                            ___lldiv
 ---------------------------------------------------------------------------------
 (6) _ConfigureRadioRx                                     5     1      4   15512
                                             22 BANK0      5     1      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_GetDioStatus                               1     1      0      34
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Join                                         3     3      0  263755
                                            143 BANK0      3     3      0
            _PrepareJoinRequestFrame
                     _RADIO_Transmit
       _SelectChannelForTransmission
                  _SwTimerSetTimeout
                       _SwTimerStart
               _UpdateJoinInProgress
 ---------------------------------------------------------------------------------
 (2) _UpdateJoinInProgress                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _SelectChannelForTransmission                         3     3      0   23170
                                             95 BANK0      3     3      0
                   _ConfigureRadioTx
             _SearchAvailableChannel
 ---------------------------------------------------------------------------------
 (4) _SearchAvailableChannel                              12     9      3    7600
                                             83 BANK0     12     9      3
                             _Random
 ---------------------------------------------------------------------------------
 (4) _ConfigureRadioTx                                     6     2      4   15372
                                             22 BANK0      6     2      4
                     _ConfigureRadio
                       _RADIO_SetCRC
                _RADIO_SetIQInverted
               _RADIO_SetOutputPower
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetOutputPower                                 1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetIQInverted                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _RADIO_SetCRC                                         1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (5) _ConfigureRadio                                       5     1      4   15076
                                             17 BANK0      5     1      4
                 _RADIO_SetBandwidth
          _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
        _RADIO_SetFrequencyHopPeriod
              _RADIO_SetLoRaSyncWord
                _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetSpreadingFactor                             1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetModulation                                  1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFrequencyHopPeriod                          2     0      2     135
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetFSKSyncWord                                 3     1      2   14133
                                             14 BANK0      3     1      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetChannelFrequency                            4     0      4     321
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetBandwidth                                   1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Transmit                                      17    14      3  127906
                                             85 BANK0     17    14      3
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
           _RADIO_WriteConfiguration
                    _RADIO_WriteMode
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteConfiguration                            11     9      2   91386
                                             74 BANK0     11     9      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
              _RADIO_WriteFSKBitRate
   _RADIO_WriteFSKFrequencyDeviation
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                   _RADIO_WritePower
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) _RADIO_WritePower                                     3     3      0   10383
                                              8 BANK0      3     3      0
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKFrequencyDeviation                     8     4      4   15890
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFSKBitRate                                8     4      4   15887
                                             17 BANK0      8     4      4
                _RADIO_RegisterWrite
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) _PrepareJoinRequestFrame                             11    11      0  109159
                                            132 BANK0     11    11      0
                         _ComputeMic
                             _Random
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _Random                                               2     0      2    6391
                                             81 BANK0      2     0      2
                            ___lwmod
                               _rand
 ---------------------------------------------------------------------------------
 (6) _rand                                                 2     0      2    5712
                                             74 BANK0      2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     440
                                             76 BANK0      5     1      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (5) _ComputeMic                                           9     4      5   84601
                                            123 BANK0      9     4      5
                            _AESCmac
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _AESCmac                                            116   109      7   69911
                                            109 BANK0     14     7      7
                                              0 BANK1    102   102      0
                      _AESEncodeLoRa
                     _GenerateSubkey
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (5) _GenerateSubkey                                      40    34      6   27279
                                             69 BANK0     40    34      6
                      _AESEncodeLoRa
                         _FillSubKey
                             _memset
 ---------------------------------------------------------------------------------
 (6) _FillSubKey                                           8     3      5    1539
                                              4 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _AESEncodeLoRa                                       20    16      4   20797
                                             49 BANK0     20    16      4
                          _AESEncode
                             _memcpy
 ---------------------------------------------------------------------------------
 (6) _AESEncode                                           39    35      4    5098
                                             10 BANK0     39    35      4
                     _EncKeySchedule
                     _EncodeShiftRow
 ---------------------------------------------------------------------------------
 (7) _EncodeShiftRow                                       3     1      2     984
                                              4 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (7) _EncKeySchedule                                       6     4      2    1164
                                              4 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_Init                                         4     0      4  177585
                                             86 BANK0      4     0      4
            _CreateAllSoftwareTimers
                      _LORAWAN_Reset
                         _RADIO_Init
                   _RADIO_ReadRandom
          _SetCallbackSoftwareTimers
              _StopAllSoftwareTimers
                              _srand
 ---------------------------------------------------------------------------------
 (2) _srand                                                2     0      2     135
                                             22 BANK0      2     0      2
                   _RADIO_ReadRandom (ARG)
 ---------------------------------------------------------------------------------
 (2) _SetCallbackSoftwareTimers                            0     0      0    2620
                 _SwTimerSetCallback
 ---------------------------------------------------------------------------------
 (2) _RADIO_ReadRandom                                     6     4      2   26607
                                             16 BANK0      6     4      2
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                    _RADIO_WriteMode
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (2) _LORAWAN_Reset                                        1     1      0  101068
                                             85 BANK0      1     1      0
             _InitDefault433Channels
             _InitDefault868Channels
         _LORAWAN_LinkCheckConfigure
                         _RADIO_Init
              _RADIO_SetLoRaSyncWord
              _StopAllSoftwareTimers
             _UpdateMinMaxChDataRate
                             _memset
 ---------------------------------------------------------------------------------
 (3) _UpdateMinMaxChDataRate                               2     2      0     223
                                              4 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _StopAllSoftwareTimers                                0     0      0      31
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (6) _RADIO_SetLoRaSyncWord                                1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _RADIO_Init                                           7     1      6   46696
                                             29 BANK0      7     1      6
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
                        _RADIO_Reset
               _RADIO_WriteFrequency
                    _RADIO_WriteMode
                      _SwTimerCreate
                 _SwTimerSetCallback
                        _SwTimerStop
 ---------------------------------------------------------------------------------
 (3) _SwTimerSetCallback                                   4     1      3    2620
                                              4 BANK0      4     1      3
 ---------------------------------------------------------------------------------
 (4) _RADIO_WriteMode                                      7     5      2   15915
                                              9 BANK0      7     5      2
                    _HALDIO5PinValue
                 _RADIO_RegisterRead
                _RADIO_RegisterWrite
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterRead                                   2     2      0     130
                                              6 BANK0      2     2      0
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (5) _HALDIO5PinValue                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _RADIO_WriteFrequency                                12     8      4   16640
                                             17 BANK0     12     8      4
                _RADIO_RegisterWrite
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     440
                                              4 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (5) _RADIO_RegisterWrite                                  2     1      1    9796
                                              6 BANK0      2     1      1
                     _HALSPICSAssert
                   _HALSPICSDeassert
                         _HALSPISend
 ---------------------------------------------------------------------------------
 (6) _HALSPISend                                           1     1      0      62
                                              5 BANK0      1     1      0
                  _SPI2_Exchange8bit
 ---------------------------------------------------------------------------------
 (7) _SPI2_Exchange8bit                                    1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSDeassert                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _HALSPICSAssert                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _RADIO_Reset                                          0     0      0     720
               _HALResetPinMakeInput
              _HALResetPinMakeOutput
             _HALResetPinOutputValue
               _SystemBlockingWaitMs
 ---------------------------------------------------------------------------------
 (5) _SystemBlockingWaitMs                                 5     1      4     658
                                              4 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (4) _HALResetPinOutputValue                               1     1      0      62
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeOutput                                0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _HALResetPinMakeInput                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LORAWAN_LinkCheckConfigure                          11     9      2   15254
                                             74 BANK0     11     9      2
                  _SwTimerSetTimeout
                       _SwTimerStart
                        _SwTimerStop
                            ___lldiv
                             ___lmul
 ---------------------------------------------------------------------------------
 (7) ___lmul                                              12     4      8    5712
                                             62 BANK0     12     4      8
                   _SwTimerReadValue (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    5857
                                              4 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) _SwTimerStop                                          1     1      0      31
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _SwTimerStart                                         9     9      0    1418
                                             53 BANK0      9     9      0
                  _SwTimersInterrupt
              _TMR_OverrideRemaining
 ---------------------------------------------------------------------------------
 (5) _TMR_OverrideRemaining                               10     6      4     799
                                             14 BANK0     10     6      4
                      _TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (6) _TMR_SwapTimer                                        2     0      2     534
                                             12 BANK0      2     0      2
                     _TMR1_ReadTimer
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_WriteTimer                                      2     0      2     228
                                              4 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _SwTimersInterrupt                                   17    13      4     458
                                             36 BANK0     17    13      4
                   _TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (6) _TMR_GetDeltaTime                                    24    20      4     102
                                             12 BANK0     24    20      4
                     _TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (7) _TMR1_ReadTimer                                       8     6      2     102
                                              4 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _SwTimerSetTimeout                                    9     5      4    1934
                                             17 BANK0      9     5      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _InitDefault868Channels                               1     1      0   17601
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (3) _InitDefault433Channels                               1     1      0   17601
                                             14 BANK0      1     1      0
                             _memcpy
                             _memset
 ---------------------------------------------------------------------------------
 (4) _memset                                               8     2      6    3569
                                              4 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              10     4      6   13902
                                              4 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (2) _CreateAllSoftwareTimers                              0     0      0     158
                      _SwTimerCreate
 ---------------------------------------------------------------------------------
 (3) _SwTimerCreate                                        1     1      0     158
                                              4 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _LORAWAN_GetState                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _IO_pins_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _INTERRUPT_InterruptManager                          8     8      0     547
                                             51 COMRAM     8     8      0
                           _INT1_ISR
                           _INT2_ISR
                    _PIN_MANAGER_IOC
                           _TMR1_ISR
 ---------------------------------------------------------------------------------
 (14) _TMR1_ISR                                            0     0      0     547
                      _TMR1_CallBack
 ---------------------------------------------------------------------------------
 (15) _TMR1_CallBack                                       0     0      0     547
                   Absolute function *
       _TMR1_DefaultInterruptHandler *
                       _TMR_ISR_lora *
 ---------------------------------------------------------------------------------
 (16) _TMR_ISR_lora                                        2     2      0     547
                                             49 COMRAM     2     2      0
                i2_SwTimersInterrupt
                    i2_TMR_SwapTimer
 ---------------------------------------------------------------------------------
 (17) i2_TMR_SwapTimer                                     2     0      2     231
                                              8 COMRAM     2     0      2
                   i2_TMR1_ReadTimer
                  i2_TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_WriteTimer                                   2     0      2     114
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (17) i2_SwTimersInterrupt                                17    13      4     316
                                             32 COMRAM    17    13      4
                 i2_TMR_GetDeltaTime
 ---------------------------------------------------------------------------------
 (18) i2_TMR_GetDeltaTime                                 24    20      4      69
                                              8 COMRAM    24    20      4
                   i2_TMR1_ReadTimer
 ---------------------------------------------------------------------------------
 (18) i2_TMR1_ReadTimer                                    8     6      2      69
                                              0 COMRAM     8     6      2
 ---------------------------------------------------------------------------------
 (16) _TMR1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _PIN_MANAGER_IOC                                     0     0      0       0
                          _IOCB4_ISR
                          _IOCB5_ISR
 ---------------------------------------------------------------------------------
 (15) _IOCB5_ISR                                           0     0      0       0
                   Absolute function *
      _IOCB5_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB5_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _IOCB4_ISR                                           0     0      0       0
                   Absolute function *
                      _DIO2_ISR_Lora *
      _IOCB4_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _IOCB4_DefaultInterruptHandler                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO2_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT2_ISR                                            0     0      0       0
                      _INT2_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT2_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT2_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO1_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _INT1_ISR                                            0     0      0       0
                      _INT1_CallBack
 ---------------------------------------------------------------------------------
 (15) _INT1_CallBack                                       0     0      0       0
                   Absolute function *
                      _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (16) _INT1_DefaultInterruptHandler                        0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _DIO0_ISR_Lora                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (16) Absolute function(Fake)                              4     0      4       0
                                              4 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _IO_pins_init
   _LORAWAN_GetState
   _LORAWAN_Init
     _CreateAllSoftwareTimers
       _SwTimerCreate
     _LORAWAN_Reset
       _InitDefault433Channels
         _memcpy
         _memset
       _InitDefault868Channels
         _memcpy
         _memset
       _LORAWAN_LinkCheckConfigure
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_Init
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_Reset
           _HALResetPinMakeInput
           _HALResetPinMakeOutput
           _HALResetPinOutputValue
           _SystemBlockingWaitMs
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerCreate
         _SwTimerSetCallback
         _SwTimerStop
       _RADIO_SetLoRaSyncWord
       _StopAllSoftwareTimers
         _SwTimerStop
       _UpdateMinMaxChDataRate
       _memset
     _RADIO_Init
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_Reset
         _HALResetPinMakeInput
         _HALResetPinMakeOutput
         _HALResetPinOutputValue
         _SystemBlockingWaitMs
       _RADIO_WriteFrequency
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         ___lldiv
         ___llmod
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerCreate
       _SwTimerSetCallback
       _SwTimerStop
     _RADIO_ReadRandom
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SystemBlockingWaitMs
     _SetCallbackSoftwareTimers
       _SwTimerSetCallback
     _StopAllSoftwareTimers
       _SwTimerStop
     _srand
       _RADIO_ReadRandom (ARG)
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SystemBlockingWaitMs
   _LORAWAN_Join
     _PrepareJoinRequestFrame
       _ComputeMic
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _memcpy
       _Random
         ___lwmod
           _rand (ARG)
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
         _rand
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
       _memcpy
       _memset
     _RADIO_Transmit
       _HALSPICSAssert
       _HALSPICSDeassert
       _HALSPISend
         _SPI2_Exchange8bit
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RegisterWrite
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_WriteConfiguration
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFSKBitRate
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFSKFrequencyDeviation
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _RADIO_WritePower
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_WriteMode
         _HALDIO5PinValue
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _SystemBlockingWaitMs
       _SwTimerSetTimeout
         ___lldiv (ARG)
       _SwTimerStart
         _SwTimersInterrupt
           _TMR_GetDeltaTime
             _TMR1_ReadTimer
         _TMR_OverrideRemaining
           _TMR_SwapTimer
             _TMR1_ReadTimer
             _TMR1_WriteTimer
       _SwTimerStop
       ___lldiv
     _SelectChannelForTransmission
       _ConfigureRadioTx
         _ConfigureRadio
           _RADIO_SetBandwidth
           _RADIO_SetChannelFrequency
           _RADIO_SetFSKSyncWord
             _memcpy
           _RADIO_SetFrequencyHopPeriod
           _RADIO_SetLoRaSyncWord
           _RADIO_SetModulation
           _RADIO_SetSpreadingFactor
         _RADIO_SetCRC
         _RADIO_SetIQInverted
         _RADIO_SetOutputPower
       _SearchAvailableChannel
         _Random
           ___lwmod
             _rand (ARG)
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
           _rand
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
     _SwTimerSetTimeout
       ___lldiv (ARG)
     _SwTimerStart
       _SwTimersInterrupt
         _TMR_GetDeltaTime
           _TMR1_ReadTimer
       _TMR_OverrideRemaining
         _TMR_SwapTimer
           _TMR1_ReadTimer
           _TMR1_WriteTimer
     _UpdateJoinInProgress
   _LORAWAN_Mainloop
     _INTERRUPT_GetDioStatus
     _RADIO_DIO0
       _RADIO_FSKPacketSent
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_FSKPayloadReady
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxDone
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _LORAWAN_RxDone
           _AESCmac
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _GenerateSubkey
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _FillSubKey
               _memset
             _memcpy
             _memset
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           _CheckFlags
           _CheckMcastFlags
           _ComputeMic
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _memcpy
           _ComputeSessionKeys
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _PrepareSessionKeys
               _memcpy
               _memset
           _EncryptFRMPayload
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _AssembleEncryptionBlock
               _memcpy
               _memset
             ___awdiv
           _ExtractMic
             _memcpy
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _LORAWAN_Send
             _AssemblePacket
               _AESCmac
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _GenerateSubkey
                   _AESEncodeLoRa
                     _AESEncode
                       _EncKeySchedule
                       _EncodeShiftRow
                     _memcpy
                   _FillSubKey
                   _memset
                 _memcpy
                 _memset
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               _CountfOptsLength
               _EncryptFRMPayload
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _AssembleEncryptionBlock
                   _memcpy
                   _memset
                 ___awdiv
               _FindSmallestDataRate
               _IncludeMacCommandsResponse
                 _RADIO_GetPacketSnr
               _memcpy
               _memset
             _LORAWAN_GetMaxPayloadSize
               _CountfOptsLength
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_Transmit
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               _SwTimerStop
               ___lldiv
             _SelectChannelForTransmission
               _ConfigureRadioTx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
                 _RADIO_SetOutputPower
               _SearchAvailableChannel
                 _Random
                   ___lwmod
                     _rand (ARG)
                       ___lmul
                         _SwTimerReadValue (ARG)
                           _SwTimersInterrupt
                             _TMR_GetDeltaTime
                               _TMR1_ReadTimer
                   _rand
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
           _MacExecuteCommands
             _ExecuteDevStatus
             _ExecuteDutyCycle
             _ExecuteLinkAdr
               _EnableChannels
                 _EnableChannels1
                   _UpdateChannelIdStatus
               _UpdateCurrentDataRate
               _UpdateTxPower
               _ValidateChannelMask
               _ValidateChannelMaskCntl
               _ValidateDataRate
               _ValidateTxPower
             _ExecuteLinkCheck
             _ExecuteNewChannel
               _LORAWAN_SetChannelIdStatus
                 _UpdateChannelIdStatus
                 _ValidateChannelId
               _UpdateChannelIdStatus
               _UpdateDataRange
               _UpdateDutyCycle
               _UpdateFrequency
               _ValidateChannelId
               _ValidateDataRange
                 _ValidateDataRate
               _ValidateFrequency
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxParamSetupReq
               _UpdateReceiveWindow2Parameters
               _ValidateDataRate
               _ValidateFrequency
               _ValidateRxOffset
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _ExecuteRxTimingSetup
               _UpdateReceiveDelays
                 ___wmul
           _RADIO_GetStatus
           _RADIO_ReleaseData
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SearchAvailableChannel *
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SetReceptionNotOkState *
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _StartReTxTimer *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _SwTimerStop *
           _UpdateCfList *
             _LORAWAN_SetChannelIdStatus
               _UpdateChannelIdStatus
               _ValidateChannelId
             _ValidateFrequency
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
             ___wmul
             _memcpy
           _UpdateDLSettings *
           _UpdateJoinSuccessState *
             _RxJoinResponse *
             _SwTimerSetTimeout *
               ___lldiv (ARG)
             _SwTimerStart *
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv *
           _UpdateReceiveDelays *
             ___wmul
           _UpdateRetransmissionAckTimeoutState *
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _memcpy *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
         ___abdiv
       _RADIO_TxDone
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerReadValue
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
         _SwTimerStop
         ___lmul
           _SwTimerReadValue (ARG)
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO1
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_RxTimeout
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO2
       _RADIO_FHSSChangeChannel
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteFrequency
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           ___lldiv
           ___llmod
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO3
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO4
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _RADIO_DIO5
       _RADIO_RegisterRead
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
       _RADIO_UnhandledInterrupt
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
     _SwTimersExecute
       Absolute function(Fake) *
       _AckRetransmissionCallback *
         _FindSmallestDataRate
         _LORAWAN_GetMaxPayloadSize
           _CountfOptsLength
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForConfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
         _UpdateRetransmissionAckTimeoutState *
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
       _AutomaticReplyCallback *
         _LORAWAN_Send
           _AssemblePacket
             _AESCmac
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _GenerateSubkey
                 _AESEncodeLoRa
                   _AESEncode
                     _EncKeySchedule
                     _EncodeShiftRow
                   _memcpy
                 _FillSubKey
                 _memset
               _memcpy
               _memset
             _AssembleEncryptionBlock
               _memcpy
               _memset
             _CountfOptsLength
             _EncryptFRMPayload
               _AESEncodeLoRa
                 _AESEncode
                   _EncKeySchedule
                   _EncodeShiftRow
                 _memcpy
               _AssembleEncryptionBlock
                 _memcpy
                 _memset
               ___awdiv
             _FindSmallestDataRate
             _IncludeMacCommandsResponse
               _RADIO_GetPacketSnr
             _memcpy
             _memset
           _LORAWAN_GetMaxPayloadSize
             _CountfOptsLength
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _SelectChannelForTransmission
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
       _DutyCycleCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_LinkCheckCallback *
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv
       _LORAWAN_ReceiveWindow1Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _GetRx1Freq
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
       _LORAWAN_ReceiveWindow2Callback *
         _ConfigureRadioRx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
         _LORAWAN_EnterContinuousReceive
           _ConfigureRadioRx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
           _RADIO_ReceiveStart
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             ___lldiv
           _RADIO_ReceiveStop
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
           _RADIO_ReleaseData
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
         _RADIO_GetStatus
         _RADIO_ReceiveStart
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv
         _RADIO_ReceiveStop
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
         _RADIO_ReleaseData
         _ResetParametersForConfirmedTransmission
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
       _RADIO_RxFSKTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerStop
       _RADIO_WatchdogTimeout *
         _LORAWAN_RxTimeout
           _LORAWAN_ReceiveWindow2Callback
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _LORAWAN_EnterContinuousReceive
               _ConfigureRadioRx
                 _ConfigureRadio
                   _RADIO_SetBandwidth
                   _RADIO_SetChannelFrequency
                   _RADIO_SetFSKSyncWord
                     _memcpy
                   _RADIO_SetFrequencyHopPeriod
                   _RADIO_SetLoRaSyncWord
                   _RADIO_SetModulation
                   _RADIO_SetSpreadingFactor
                 _RADIO_SetCRC
                 _RADIO_SetIQInverted
               _RADIO_ReceiveStart
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteConfiguration
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_WriteFSKBitRate
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFSKFrequencyDeviation
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                   _RADIO_WriteFrequency
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     ___lldiv
                     ___llmod
                   _RADIO_WriteMode
                     _HALDIO5PinValue
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _SystemBlockingWaitMs
                   _RADIO_WritePower
                     _RADIO_RegisterRead
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                     _RADIO_RegisterWrite
                       _HALSPICSAssert
                       _HALSPICSDeassert
                       _HALSPISend
                         _SPI2_Exchange8bit
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _SwTimerSetTimeout
                   ___lldiv (ARG)
                 _SwTimerStart
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
                   _TMR_OverrideRemaining
                     _TMR_SwapTimer
                       _TMR1_ReadTimer
                       _TMR1_WriteTimer
                 ___lldiv
               _RADIO_ReceiveStop
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
               _RADIO_ReleaseData
               _ResetParametersForConfirmedTransmission
               _ResetParametersForUnconfirmedTransmission
               _RxDataDone *
                 _LORAWAN_SetCurrentDataRate
                   _UpdateCurrentDataRate
                   _ValidateDataRate
             _RADIO_GetStatus
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_Transmit
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteConfiguration
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteFSKBitRate
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFSKFrequencyDeviation
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
               _RADIO_WriteFrequency
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 ___lldiv
                 ___llmod
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _RADIO_WritePower
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _SwTimerSetTimeout
               ___lldiv (ARG)
             _SwTimerStart
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
               _TMR_OverrideRemaining
                 _TMR_SwapTimer
                   _TMR1_ReadTimer
                   _TMR1_WriteTimer
             _SwTimerStop
             ___lldiv
           _ResetParametersForConfirmedTransmission
           _ResetParametersForUnconfirmedTransmission
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SelectChannelForTransmission *
             _ConfigureRadioTx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
               _RADIO_SetOutputPower
             _SearchAvailableChannel
               _Random
                 ___lwmod
                   _rand (ARG)
                     ___lmul
                       _SwTimerReadValue (ARG)
                         _SwTimersInterrupt
                           _TMR_GetDeltaTime
                             _TMR1_ReadTimer
                 _rand
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
           _SetJoinFailState *
             _RxJoinResponse *
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           ___lldiv *
         _LORAWAN_TxDone
           _LORAWAN_EnterContinuousReceive
             _ConfigureRadioRx
               _ConfigureRadio
                 _RADIO_SetBandwidth
                 _RADIO_SetChannelFrequency
                 _RADIO_SetFSKSyncWord
                   _memcpy
                 _RADIO_SetFrequencyHopPeriod
                 _RADIO_SetLoRaSyncWord
                 _RADIO_SetModulation
                 _RADIO_SetSpreadingFactor
               _RADIO_SetCRC
               _RADIO_SetIQInverted
             _RADIO_ReceiveStart
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_WriteConfiguration
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_WriteFSKBitRate
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFSKFrequencyDeviation
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                 _RADIO_WriteFrequency
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   ___lldiv
                   ___llmod
                 _RADIO_WriteMode
                   _HALDIO5PinValue
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _SystemBlockingWaitMs
                 _RADIO_WritePower
                   _RADIO_RegisterRead
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                   _RADIO_RegisterWrite
                     _HALSPICSAssert
                     _HALSPICSDeassert
                     _HALSPISend
                       _SPI2_Exchange8bit
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
               _SwTimerSetTimeout
                 ___lldiv (ARG)
               _SwTimerStart
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
                 _TMR_OverrideRemaining
                   _TMR_SwapTimer
                     _TMR1_ReadTimer
                     _TMR1_WriteTimer
               ___lldiv
             _RADIO_ReceiveStop
               _RADIO_WriteMode
                 _HALDIO5PinValue
                 _RADIO_RegisterRead
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _RADIO_RegisterWrite
                   _HALSPICSAssert
                   _HALSPICSDeassert
                   _HALSPISend
                     _SPI2_Exchange8bit
                 _SystemBlockingWaitMs
             _RADIO_ReleaseData
             _ResetParametersForConfirmedTransmission
             _ResetParametersForUnconfirmedTransmission
             _RxDataDone *
               _LORAWAN_SetCurrentDataRate
                 _UpdateCurrentDataRate
                 _ValidateDataRate
           _RADIO_GetStatus
           _RxDataDone *
             _LORAWAN_SetCurrentDataRate
               _UpdateCurrentDataRate
               _ValidateDataRate
           _SwTimerIsRunning *
           _SwTimerReadValue *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
           _SwTimerSetTimeout *
             ___lldiv (ARG)
           _SwTimerStart *
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop *
           ___lldiv *
           ___lmul *
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _UnconfirmedTransmissionCallback *
         _RADIO_Transmit
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteConfiguration
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_WriteFSKBitRate
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFSKFrequencyDeviation
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
             _RADIO_WriteFrequency
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               ___lldiv
               ___llmod
             _RADIO_WriteMode
               _HALDIO5PinValue
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _SystemBlockingWaitMs
             _RADIO_WritePower
               _RADIO_RegisterRead
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
               _RADIO_RegisterWrite
                 _HALSPICSAssert
                 _HALSPICSDeassert
                 _HALSPISend
                   _SPI2_Exchange8bit
             ___lmul
               _SwTimerReadValue (ARG)
                 _SwTimersInterrupt
                   _TMR_GetDeltaTime
                     _TMR1_ReadTimer
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _SwTimerSetTimeout
             ___lldiv (ARG)
           _SwTimerStart
             _SwTimersInterrupt
               _TMR_GetDeltaTime
                 _TMR1_ReadTimer
             _TMR_OverrideRemaining
               _TMR_SwapTimer
                 _TMR1_ReadTimer
                 _TMR1_WriteTimer
           _SwTimerStop
           ___lldiv
         _ResetParametersForUnconfirmedTransmission
         _RxDataDone *
           _LORAWAN_SetCurrentDataRate
             _UpdateCurrentDataRate
             _ValidateDataRate
         _SelectChannelForTransmission *
           _ConfigureRadioTx
             _ConfigureRadio
               _RADIO_SetBandwidth
               _RADIO_SetChannelFrequency
               _RADIO_SetFSKSyncWord
                 _memcpy
               _RADIO_SetFrequencyHopPeriod
               _RADIO_SetLoRaSyncWord
               _RADIO_SetModulation
               _RADIO_SetSpreadingFactor
             _RADIO_SetCRC
             _RADIO_SetIQInverted
             _RADIO_SetOutputPower
           _SearchAvailableChannel
             _Random
               ___lwmod
                 _rand (ARG)
                   ___lmul
                     _SwTimerReadValue (ARG)
                       _SwTimersInterrupt
                         _TMR_GetDeltaTime
                           _TMR1_ReadTimer
               _rand
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
       _UpdateJoinSuccessState *
         _RxJoinResponse *
         _SwTimerSetTimeout *
           ___lldiv (ARG)
         _SwTimerStart *
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         ___lldiv *
   _LORAWAN_SetApplicationSessionKey
     _memcpy
   _LORAWAN_SetDeviceAddress
   _LORAWAN_SetNetworkSessionKey
     _memcpy
   _LoRaSleep
   _LoRaWakeUp
     _SPI2_Initialize
   _SYSTEM_Initialize
     _EXT_INT_Initialize
       _INT0_SetInterruptHandler
       _INT1_SetInterruptHandler
       _INT2_SetInterruptHandler
     _INTERRUPT_Initialize
     _LORAWAN_PlatformInit
       _DIO0_ISR_Lora_Init
         _INT1_SetInterruptHandler
       _DIO1_ISR_Lora_Init
         _INT2_SetInterruptHandler
       _DIO2_ISR_Lora_Init
         _IOCB4_SetInterruptHandler
       _DIO3_ISR_Lora_Init
       _DIO4_ISR_Lora_Init
       _DIO5_ISR_Lora_Init
         _INT0_SetInterruptHandler
       _SystemTimerInit
       _TMR_ISR_Lora_Init
         _TMR1_SetInterruptHandler
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
       _IOCB4_SetInterruptHandler
       _IOCB5_SetInterruptHandler
     _SPI2_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       _TMR1_StartTimer
   _SysConfigSleep
   _readAndSend
     _ADC_Read
       _ADC_SelChannel
     _LORAWAN_Send
       _AssemblePacket
         _AESCmac
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _GenerateSubkey
             _AESEncodeLoRa
               _AESEncode
                 _EncKeySchedule
                 _EncodeShiftRow
               _memcpy
             _FillSubKey
             _memset
           _memcpy
           _memset
         _AssembleEncryptionBlock
           _memcpy
           _memset
         _CountfOptsLength
         _EncryptFRMPayload
           _AESEncodeLoRa
             _AESEncode
               _EncKeySchedule
               _EncodeShiftRow
             _memcpy
           _AssembleEncryptionBlock
             _memcpy
             _memset
           ___awdiv
         _FindSmallestDataRate
         _IncludeMacCommandsResponse
           _RADIO_GetPacketSnr
         _memcpy
         _memset
       _LORAWAN_GetMaxPayloadSize
         _CountfOptsLength
       _RADIO_ReceiveStop
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
       _RADIO_Transmit
         _HALSPICSAssert
         _HALSPICSDeassert
         _HALSPISend
           _SPI2_Exchange8bit
         _RADIO_RegisterRead
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_RegisterWrite
           _HALSPICSAssert
           _HALSPICSDeassert
           _HALSPISend
             _SPI2_Exchange8bit
         _RADIO_WriteConfiguration
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_WriteFSKBitRate
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFSKFrequencyDeviation
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
           _RADIO_WriteFrequency
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             ___lldiv
             ___llmod
           _RADIO_WriteMode
             _HALDIO5PinValue
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _SystemBlockingWaitMs
           _RADIO_WritePower
             _RADIO_RegisterRead
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
             _RADIO_RegisterWrite
               _HALSPICSAssert
               _HALSPICSDeassert
               _HALSPISend
                 _SPI2_Exchange8bit
           ___lmul
             _SwTimerReadValue (ARG)
               _SwTimersInterrupt
                 _TMR_GetDeltaTime
                   _TMR1_ReadTimer
         _RADIO_WriteMode
           _HALDIO5PinValue
           _RADIO_RegisterRead
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _RADIO_RegisterWrite
             _HALSPICSAssert
             _HALSPICSDeassert
             _HALSPISend
               _SPI2_Exchange8bit
           _SystemBlockingWaitMs
         _SwTimerSetTimeout
           ___lldiv (ARG)
         _SwTimerStart
           _SwTimersInterrupt
             _TMR_GetDeltaTime
               _TMR1_ReadTimer
           _TMR_OverrideRemaining
             _TMR_SwapTimer
               _TMR1_ReadTimer
               _TMR1_WriteTimer
         _SwTimerStop
         ___lldiv
       _SelectChannelForTransmission
         _ConfigureRadioTx
           _ConfigureRadio
             _RADIO_SetBandwidth
             _RADIO_SetChannelFrequency
             _RADIO_SetFSKSyncWord
               _memcpy
             _RADIO_SetFrequencyHopPeriod
             _RADIO_SetLoRaSyncWord
             _RADIO_SetModulation
             _RADIO_SetSpreadingFactor
           _RADIO_SetCRC
           _RADIO_SetIQInverted
           _RADIO_SetOutputPower
         _SearchAvailableChannel
           _Random
             ___lwmod
               _rand (ARG)
                 ___lmul
                   _SwTimerReadValue (ARG)
                     _SwTimersInterrupt
                       _TMR_GetDeltaTime
                         _TMR1_ReadTimer
             _rand
               ___lmul
                 _SwTimerReadValue (ARG)
                   _SwTimersInterrupt
                     _TMR_GetDeltaTime
                       _TMR1_ReadTimer

 _INTERRUPT_InterruptManager (ROOT)
   _INT1_ISR
     _INT1_CallBack
       Absolute function(Fake) *
       _DIO0_ISR_Lora *
       _INT1_DefaultInterruptHandler *
   _INT2_ISR
     _INT2_CallBack
       Absolute function(Fake) *
       _DIO1_ISR_Lora *
       _INT2_DefaultInterruptHandler *
   _PIN_MANAGER_IOC
     _IOCB4_ISR
       Absolute function(Fake) *
       _DIO2_ISR_Lora *
       _IOCB4_DefaultInterruptHandler *
     _IOCB5_ISR
       Absolute function(Fake) *
       _IOCB5_DefaultInterruptHandler *
   _TMR1_ISR
     _TMR1_CallBack
       Absolute function(Fake) *
       _TMR1_DefaultInterruptHandler *
       _TMR_ISR_lora *
         i2_SwTimersInterrupt
           i2_TMR_GetDeltaTime
             i2_TMR1_ReadTimer
         i2_TMR_SwapTimer
           i2_TMR1_ReadTimer
           i2_TMR1_WriteTimer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F37      0     21E      37       13.9%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      E0      14       87.5%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      F5       9       95.7%
BITBANK1           100      0       0       6        0.0%
BANK1              100     82      F9       7       97.3%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     99      9C       5       97.5%
BITCOMRAM           53      0       0       0        0.0%
COMRAM              53     3B      53       1      100.0%
BITBANK15           38      0       0      35        0.0%
BANK15              38      0       0      36        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       2       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     47D      12        0.0%
DATA                 0      0     69D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Sep 22 10:46:00 2022

                                        ??_LORAWAN_TxDone 00C1  
                              __end_of_DIO3_ISR_Lora_Init A47E  
                                      ?_LORAWAN_RxTimeout 0001  
                        __size_of_RADIO_FHSSChangeChannel 0046  
                                          HALSPISend@data 0065  
                         __end_of_ValidateChannelMaskCntl 9E70  
                                            ___awdiv@sign 0069  
                         __size_of_UpdateJoinSuccessState 0154  
                                     ___wmul@multiplicand 0066  
                      __size_of_IOCB4_SetInterruptHandler 000A  
                                            _TMR_ISR_lora 93E2  
                                   __end_of_AESEncodeLoRa 9A62  
                                             ?_RADIO_DIO0 0001  
                                             ?_RADIO_DIO1 0001  
                                             ?_RADIO_DIO2 0001  
                                             ?_RADIO_DIO3 0001  
                                             ?_RADIO_DIO4 0001  
                                             ?_RADIO_DIO5 0001  
                              ?_IOCB4_SetInterruptHandler 0064  
                                            __CFG_CP0$OFF 000000  
                                            __CFG_CP1$OFF 000000  
                                            __CFG_CP2$OFF 000000  
                                            __CFG_CP3$OFF 000000  
                                             __CFG_LVP$ON 000000  
                                     ??_LORAWAN_RxTimeout 00C6  
                                                     l126 87B0  
                                                     l192 A2EC  
                                                     l464 1C5C  
                                                     l458 19FE  
                                                     l477 1D4C  
                                             ?_RADIO_Init 007D  
                                                     l590 9740  
                                                     l671 960C  
                                                     l674 9622  
                                                     l668 9A20  
                                                     l688 814E  
                                         ??_UpdateTxPower 0064  
                                            __CFG_CPB$OFF 000000  
                                            __CFG_CPD$OFF 000000  
                    __end_of_SelectChannelForTransmission 8D7E  
                   __size_of_SelectChannelForTransmission 0076  
                            _SelectChannelForTransmission 8D08  
                                  _ExecuteRxParamSetupReq 4464  
                              ??_INT0_SetInterruptHandler 0066  
                                      _DIO2_ISR_Lora_Init A288  
                                      __size_of_AESEncode 04FA  
                                         _timer1ReloadVal 005E  
                                         ?_EncKeySchedule 0064  
                                          _SysConfigSleep 87B8  
                                   _RADIO_SetLoRaSyncWord A412  
                                                     prod 000FF3  
                                                     tosl 000FFD  
                                                     wreg 000FE8  
                                         __end_of_AESCmac 3084  
                                 __end_of_SwTimersExecute 77C2  
                                  SystemBlockingWaitMs@ms 0064  
                                 LORAWAN_Join@bufferIndex 00EF  
                                __size_of_RADIO_GetStatus 0006  
                                   ?_SystemBlockingWaitMs 0064  
                                    ??i2_TMR_GetDeltaTime 000D  
                                ??_SearchAvailableChannel 00B6  
                            __end_of_FindSmallestDataRate 73C6  
                     __end_of_RADIO_SetFrequencyHopPeriod A408  
                             _RADIO_SetFrequencyHopPeriod A3FE  
                                              _CheckFlags 90E6  
                                  ?_TMR_OverrideRemaining 006E  
                                           _INT1_CallBack 9FC4  
                                ?_AssembleEncryptionBlock 006E  
                                     ?_DIO2_ISR_Lora_Init 0001  
                                       ??_UpdateFrequency 0068  
                                      __size_of_IOCB4_ISR 0024  
                                      __size_of_IOCB5_ISR 0024  
                                                    l1020 125C  
                                                    l1202 63B8  
                                                    l2011 6ADA  
                                                    l1108 42F6  
                                                    l1052 30D4  
                                                    l1029 15E6  
                                                    l1213 60DE  
                                                    l1221 A100  
                                                    l1125 45EA  
                                                    l1134 6552  
                                                    l1150 493A  
                                                    l1047 30C8  
                                                    l1144 65AA  
                                                    l1081 9D08  
                                                    l2017 8B04  
                                                    l1242 9CD8  
                                                    l2043 7248  
                                                    l2220 1FFE  
                                                    l1236 9486  
                                                    l2124 0E06  
                                                    l1077 A13C  
                                                    l2221 2056  
                                                    l1229 8B86  
                                                    l1262 8E16  
                                                    l2038 66FA  
                                                    l2231 222E  
                                                    l2215 1ED6  
                                                    l3112 9204  
                                                    l2216 1F2E  
                                                    l1248 9E6A  
                                                    l1089 9196  
                                                    l1097 3954  
                                                    l2067 012A  
                                                    l2180 2962  
                                                    l2229 21D4  
                                                    l1277 89B0  
                                                    l2255 886C  
                                                    l1295 4178  
                                                    l2192 2988  
                                                    l2184 295C  
                                                    l3049 7FDC  
                                                    l3059 8710  
                                                    l2179 285A  
                                                    l2189 2970  
                   RADIO_WriteConfiguration@symbolTimeout 00AA  
                                                    l1666 7EF6  
                                                    l1941 6212  
                                                    l1694 78AA  
                                                    l1960 7BAC  
                                                    l1962 7C32  
                                                    l2684 9640  
                                                    l1965 7A78  
                                                    l1974 7A8E  
                                                    l1989 5E6E  
                                        _RADIO_WritePower 6F9E  
                            ??_LORAWAN_SetCurrentDataRate 0066  
                            ??_LORAWAN_SetChannelIdStatus 0069  
                                 _PrepareJoinRequestFrame 5240  
                                                    _LATA 000F89  
                                                    _LATB 000F8A  
                                                    _LATC 000F8B  
                                                    _LATD 000F8C  
                                                    _LATE 000F8D  
                                     _RADIO_Transmit$1190 00BC  
                                     _RADIO_Transmit$1192 00C0  
                                            ?_RADIO_Reset 0001  
                              __size_of_RADIO_ReceiveStop 0020  
                                                    _TMR1 000FCE  
                                       ??_UpdateDutyCycle 0066  
                                                    _WPUB 000F61  
                                  ??_LORAWAN_PlatformInit 0066  
                                           _INT2_CallBack 9FA0  
                                ??_InitDefault433Channels 006E  
                                ExecuteNewChannel@drRange 00AE  
                                      _PrepareSessionKeys 7A92  
                                                    _loRa 0200  
                                                    _main 6D52  
                                                    _rand 932E  
                          __end_of_UpdateMinMaxChDataRate 72C4  
                                                    fsr0h 000FEA  
                                                    fsr1h 000FE2  
                                                    indf0 000FEF  
                                                    fsr0l 000FE9  
                                                    fsr2h 000FDA  
                                                    fsr1l 000FE1  
                                                    indf2 000FDF  
                                                    fsr2l 000FD9  
                                 __size_of_RADIO_Transmit 0262  
                                                    btemp 004E  
                                           __CFG_BORV$190 000000  
                          __size_of_StopAllSoftwareTimers 0052  
                                           ComputeMic@mic 00E0  
                                           ComputeMic@key 00DB  
                               __end_of_LORAWAN_RxTimeout 3456  
                               __size_of_ConfigureRadioRx 002A  
                               __size_of_ConfigureRadioTx 0054  
                       __size_of_INT2_SetInterruptHandler 000A  
                                        __end_of_ADC_Init A35C  
                                        __end_of_ADC_Read 9672  
                                                    pclat 000FFA  
                           __end_of_StopAllSoftwareTimers 9586  
                               ?_INT2_SetInterruptHandler 0064  
                                                    prodh 000FF4  
                                                    prodl 000FF3  
                                                    start 0080  
                                           __CFG_IESO$OFF 000000  
                                __end_of_CountfOptsLength 74C8  
                                   ExecuteLinkAdr@txPower 0079  
                                     __size_of_HALSPISend 000E  
                              ??_TMR1_SetInterruptHandler 0066  
                              EnableChannels1@channelMask 0068  
                                            ?_readAndSend 0001  
                                        ??_AssemblePacket 00E0  
                                  ?_HALResetPinMakeOutput 0001  
                                     ?_PrepareSessionKeys 006E  
                                  __size_of_TMR_SwapTimer 0044  
                              __end_of_RADIO_GetPacketSnr A442  
                                            ___param_bank 000010  
                                              _GetRx1Freq A2BE  
                              __size_of_RADIO_ReleaseData 0006  
                                    ??_DIO2_ISR_Lora_Init 0066  
                         __end_of_CreateAllSoftwareTimers 95D8  
                  SearchAvailableChannel@transmissionType 00B3  
                         __size_of_HALResetPinOutputValue 001E  
                                   MacExecuteCommands@ptr 00BA  
                                   _RADIO_WriteFSKBitRate 9018  
                                __size_of_SystemTimerInit 0008  
                                        __end_of_INT1_ISR A43C  
                                        __end_of_INT2_ISR A434  
                          __size_of_OSCILLATOR_Initialize 000E  
                                  ExecuteLinkAdr@dataRate 007C  
                           __end_of_OSCILLATOR_Initialize A332  
                      __size_of_LORAWAN_LinkCheckCallback 0186  
                                                   l14001 5BE4  
                                         __end_of___abdiv 8688  
                                                   l14005 5C08  
                                                   l14101 7E14  
                                                   l13143 A0A0  
                                                   l13215 9872  
                                                   l13303 2304  
                                                   l14023 5C96  
                                                   l14015 5C4C  
                                                   l14111 7E4A  
                                                   l14103 7E1A  
                                                   l13241 5774  
                                                   l13217 9888  
                                                   l13161 3C8E  
                                                   l13321 2366  
                                                   l13305 2312  
                                                   l14009 5C12  
                                                   l13243 5822  
                                                   l13403 7F60  
                                                   l13315 2356  
                                                   l14027 5CA0  
                                                   l14019 5C76  
                                                   l14115 7E58  
                                                   l14203 8B48  
                                                   l15011 46D0  
                                                   l13405 7F70  
                                                   l13253 9B98  
                                                   l13333 23D4  
                                                   l13317 235C  
                                                   l13309 231C  
                                                   l14141 496C  
                                                   l13415 7FCA  
                                                   l13407 7F76  
                                                   l13431 86FE  
                                                   l13423 86A4  
                                                   l13511 6BC0  
                                                   l13159 3C7E  
                                                   l13351 2564  
                                                   l13327 23BC  
                                                   l14151 49C2  
                                                   l14135 4952  
                                                   l14063 6CC2  
                                                   l14119 7E6C  
                                                   l15023 8FE6  
                                                   l14207 8B80  
                                                   l13249 9B7A  
                                                   l13425 86B4  
                                                   l13513 6BC6  
                                                   l13353 2576  
                                                   l13345 2522  
                                                   l13337 23DE  
                                                   l13601 7050  
                                                   l14161 4A16  
                                                   l14153 49EE  
                                                   l14145 4988  
                                                   l14065 6CF2  
                                                   l15113 2A36  
                                                   l15025 9012  
                                                   l14225 9480  
                                                   l13283 9220  
                                                   l13451 6E9E  
                                                   l13427 86BA  
                                                   l13515 6BD0  
                                                   l13347 2534  
                                                   l14171 4AB4  
                                                   l14147 4994  
                                                   l15123 2AD8  
                                                   l15043 2850  
                                                   l14315 8E0C  
                                                   l16003 3168  
                                                   l13461 6F7C  
                                                   l15205 A172  
                                                   l13525 6BFA  
                                                   l13373 276E  
                                                   l13357 25A6  
                                                   l13293 22C8  
                                                   l14501 2FFE  
                                                   l13621 7094  
                                                   l14165 4A32  
                                                   l16101 1492  
                                                   l14093 7DEA  
                                                   l14333 8E60  
                                                   l14237 6344  
                                                   l16021 31FA  
                                                   l13463 6F80  
                                                   l13527 6C06  
                                                   l13471 6B02  
                                                   l13383 27B2  
                                                   l13359 25B8  
                                                   l14423 2CB0  
                                                   l13615 7086  
                                                   l14183 4B9A  
                                                   l16111 15C4  
                                                   l14087 7DD4  
                                                   l14327 8E44  
                                                   l14247 6422  
                                                   l13289 9258  
                                                   l13457 6F08  
                                                   l13393 8DB6  
                                                   l13377 2778  
                                                   l13369 2758  
                                                   l13297 22D2  
                                                   l13713 8B9E  
                                                   l14441 2DCC  
                                                   l13801 19E0  
                                                   l14361 6476  
                                                   l14177 4B22  
                                                   l14601 5626  
                                                   l15129 2B5A  
                                                   l15073 290E  
                                                   l15321 77EC  
                                                   l14265 9296  
                                                   l14249 6426  
                                                   l16041 3348  
                                                   l16009 31A8  
                                                   l15233 7A70  
                                                   l13491 6B5E  
                                                   l14507 3048  
                                                   l14435 2D34  
                                                   l13731 91C0  
                                                   l13635 80E0  
                                                   l14363 647E  
                                                   l16131 16EA  
                                                   l16123 1678  
                                                   l14611 74B2  
                                                   l14099 7E08  
                                                   l14523 72E2  
                                                   l15075 2914  
                                                   l14339 8E64  
                                                   l16043 334C  
                                                   l16027 323A  
                                                   l13661 9C20  
                                                   l13389 8D90  
                                                   l13717 8C02  
                                                   l14461 2E56  
                                                   l14453 2E34  
                                                   l14445 2DD6  
                                                   l14429 2CE4  
                                                   l14437 2D7E  
                                                   l13733 91CC  
                                                   l13573 6FCE  
                                                   l13805 19F4  
                                                   l15421 891E  
                                                   l14605 73D4  
                                                   l14613 74B6  
                                                   l14533 7372  
                                                   l14525 72EA  
                                                   l14293 9CFA  
                                                   l14269 92C8  
                                                   l15501 36A8  
                                                   l15253 46FE  
                                                   l16029 3242  
                                                   l16053 341A  
                                                   l15237 7A86  
                                                   l15229 7A60  
                                                   l13495 6B70  
                                                   l13479 6B22  
                                                   l14455 2E4A  
                                                   l14471 2EAA  
                                                   l13735 91D2  
                                                   l13807 19FA  
                                                   l13639 8118  
                                                   l13655 9B1C  
                                                   l14383 656C  
                                                   l16119 1672  
                                                   l16143 177C  
                                                   l14615 74C2  
                                                   l14535 7376  
                                                   l14543 73A0  
                                                   l14551 73C0  
                                                   l14703 2238  
                                                   l14711 22A4  
                                                   l15335 7834  
                                                   l14295 9D02  
                                                   l15503 36BE  
                                                   l16047 33DA  
                                                   l16303 7D58  
                                                   l13665 9C32  
                                                   l14481 2EE6  
                                                   l14465 2E60  
                                                   l14449 2E10  
                                                   l17033 52AA  
                                                   l13593 702E  
                                                   l13569 6FBC  
                                                   l13913 1CF4  
                                                   l14801 4D84  
                                                   l14393 65A4  
                                                   l14377 654E  
                                                   l16137 1762  
                                                   l15433 8940  
                                                   l15425 8922  
                                                   l14609 7460  
                                                   l14537 7382  
                                                   l14633 1E46  
                                                   l14625 1D82  
                                                   l14713 22A8  
                                                   l15097 2994  
                                                   l15329 7820  
                                                   l13681 606A  
                                                   l14561 96A8  
                                                   l15513 3720  
                                                   l15505 36D4  
                                                   l15249 46F4  
                                                   l16321 7D96  
                                                   l13499 6B86  
                                                   l16227 5170  
                                                   l14475 2ED6  
                                                   l14459 2E50  
                                                   l13739 91F6  
                                                   l17043 5316  
                                                   l13587 700A  
                                                   l13923 1D40  
                                                   l13827 1A56  
                                                   l14379 6556  
                                                   l14387 6580  
                                                   l16147 17BA  
                                                   l16091 13E2  
                                                   l15443 896C  
                                                   l15427 893C  
                                                   l14547 73B6  
                                                   l14715 22B4  
                                                   l15099 29AC  
                                                   l13691 6148  
                                                   l15507 36EA  
                                                   l15267 4922  
                                                   l15603 01D6  
                                                   l16323 7D9A  
                                                   l16163 8606  
                                                   l13757 8476  
                                                   l16237 51BE  
                                                   l16229 5188  
                                                   l14477 2EDC  
                                                   l14493 2F9E  
                                                   l17053 537C  
                                                   l17029 52A0  
                                                   l13597 703E  
                                                   l13589 701C  
                                                   l13917 1D1A  
                                                   l13909 1CE2  
                                                   l13837 1A86  
                                                   l13845 1AA8  
                                                   l13773 18C0  
                                                   l14389 658A  
                                                   l16077 1120  
                                                   l14573 54C0  
                                                   l14661 2094  
                                                   l14709 2266  
                                                   l13693 614C  
                                                   l15509 3700  
                                                   l15517 3738  
                                                   l15525 3798  
                                                   l15461 88C2  
                                                   l15285 5846  
                                                   l15269 4934  
                                                   l15277 A0DA  
                                                   l16181 864A  
                                                   l16431 84FC  
                                                   l17127 9098  
                                                   l14487 2F5C  
                                                   l17047 5320  
                                                   l17039 5306  
                                                   l13775 18E8  
                                                   l13783 195C  
                                                   l14807 4DFC  
                                                   l14743 4BEE  
                                                   l14735 4BD2  
                                                   l16095 1482  
                                                   l13679 6062  
                                                   l13943 9CD2  
                                                   l15519 3774  
                                                   l15463 88C6  
                                                   l15711 061A  
                                                   l15607 01EA  
                                                   l16327 7DB2  
                                                   l16175 862E  
                                                   l16191 8674  
                                                   l16263 792A  
                                                   l16255 7902  
                                                   l15383 66D4  
                                                   l17129 909C  
                                                   l14497 2FF4  
                                                   l13777 1910  
                                                   l13785 1974  
                                                   l14761 4C5E  
                                                   l14729 4BB8  
                                                   l16097 1488  
                                                   l15481 912E  
                                                   l15473 90FE  
                                                   l14585 5564  
                                                   l14577 54CA  
                                                   l14569 547C  
                                                   l14665 20B0  
                                                   l14649 1F6E  
                                                   l14913 3A58  
                                                   l15529 37D0  
                                                   l15297 594C  
                                                   l15721 0648  
                                                   l15705 05C4  
                                                   l15633 02BE  
                                                   l16169 8616  
                                                   l16353 68EE  
                                                   l15377 6638  
                                                   l16521 3F70  
                                                   l16513 3EA6  
                                                   l18201 76D4  
                                                   l16451 85A6  
                                                   l16435 8506  
                                                   l13779 1948  
                                                   l13787 1992  
                                                   l14763 4C76  
                                                   l13963 82AE  
                                                   l14595 55C8  
                                                   l14587 5568  
                                                   l14683 2144  
                                                   l14675 2104  
                                                   l15299 5950  
                                                   l15651 032E  
                                                   l16195 8682  
                                                   l16187 8668  
                                                   l16179 8638  
                                                   l16267 794C  
                                                   l16603 5DD2  
                                                   l16523 3F8A  
                                                   l16531 4026  
                                                   l18211 77AC  
                                                   l15549 87B2  
                                                   l13789 19A4  
                                                   l14773 4C9A  
                                                   l14845 8D78  
                                                   l15477 9116  
                                                   l14677 211E  
                                                   l14861 91A2  
                                                   l13981 89C6  
                                                   l13973 8992  
                                                   l14917 3A78  
                                                   l15493 3666  
                                                   l15805 09F6  
                                                   l15821 0A30  
                                                   l15741 0736  
                                                   l15725 065C  
                                                   l15717 062A  
                                                   l15629 02A0  
                                                   l16277 797E  
                                                   l18213 77AE  
                                                   l16447 859C  
                                                   l16471 72B6  
                                                   l13895 1C44  
                                                   l13887 1C0C  
                                                   l13879 1BB0  
                                                   l14767 4C88  
                                                   l16375 67A0  
                                                   l14679 2124  
                                                   l13983 89D4  
                                                   l13975 89A0  
                                                   l14919 3B2C  
                                                   l14951 42AC  
                                                   l16279 7982  
                                                   l16543 40D4  
                                                   l18215 77B2  
                                  __end_of_SysConfigSleep 884C  
                                                   l13889 1C18  
                                                   l13897 1C6A  
                                                   l14777 4CBA  
                                                   l13969 8980  
                                                   l15497 367C  
                                                   l15489 3466  
                                                   l15753 078C  
                                                   l15585 0124  
                                                   l16801 83F0  
                                                   l16633 6A50  
                                                   l16483 61CC  
                                                   l16491 6204  
                                                   l16459 71D4  
                                                   l13987 89EE  
                                                   l14971 4456  
                                                   l14963 43D4  
                                                   l15499 3692  
                                                   l15851 0AC8  
                                                   l15819 0A18  
                                                   l15771 07EA  
                                                   l15579 00BE  
                                                   l16299 7D36  
                                                   l16387 9BC8  
                                                   l16803 83F8  
                                                   l16563 7BB0  
                                                   l16643 6A84  
                                                   l16469 72B2  
                                                   l14893 390A  
                                                   l14885 38A8  
                                                   l14965 43E4  
                                                   l14973 445A  
                                                   l14949 4270  
                                                   l15933 0DFA  
                                                   l15917 0D9E  
                                                   l15829 0A72  
                                                   l15677 051A  
                                                   l15685 052A  
                                                   l15669 0470  
                                                   l16813 93B4  
                                                   l16821 93C8  
                                                   l16581 5D0C  
                                                   l16637 6A56  
                                                   l16653 6AD6  
                                                   l18341 6DAE  
                                                   l18333 6D8A  
                                                   l15951 0E62  
                                                   l15943 0E4A  
                                                   l15927 0DBA  
                                                   l15935 0E00  
                                                   l15863 0B42  
                                                   l15855 0ADC  
                                                   l15839 0A90  
                                                   l15695 0578  
                                                   l15687 0542  
                                                   l15759 079C  
                                                   l15599 01D0  
                                                   l16807 8400  
                                                   l16815 93BA  
                                                   l16831 9308  
                                                   l16663 8AC4  
                                                   l16497 6276  
                                                   l16489 6200  
                                                   l14969 4446  
                                                   l14993 4552  
                                                   l15881 0C50  
                                                   l15865 0B56  
                                                   l15793 093A  
                                                   l16817 93C0  
                                                   l16825 93DA  
                                                   l16833 930E  
                                                   l18345 6DC8  
                                                   l18337 6D98  
                                                   l18329 6D74  
                                                   l15955 0EA0  
                                                   l15891 0D16  
                                                   l15699 05B4  
                                                   l16587 5D2A  
                                                   l18363 6E2E  
                                                   l14997 459E  
                                                   l15957 0EA6  
                                                   l15965 0EC4  
                                                   l16837 9316  
                                                   l16589 5D3A  
                                                   l16597 5D6A  
                                                   l18373 6E4A  
                                                   l18349 6DD0  
                                                   l15975 0F0E  
                                                   l15959 0EAA  
                                                   l15895 0D1E  
                                                   l16783 83A4  
                                                   l16791 83B8  
                                                   l16873 802E  
                                                   l15889 0D08  
                                                   l15969 0ECA  
                                                   l16793 83CA  
                                                   l16785 83AA  
                                                   l16963 4F50  
                                                   l15987 30B4  
                                                   l16787 83B0  
                                                   l16885 8074  
                                                   l16877 8038  
                                                   l16797 83E0  
                                                   l18399 6E74  
                                                   ?_main 0001  
                                                   ?_rand 00AA  
                                         __end_of___awdiv 7E76  
                                              _FillSubKey 8B8C  
                                                   _ANSD0 0079D8  
                                                   _ANSD1 0079D9  
                                         _TMR1_StartTimer A452  
                                                   _ANSD3 0079DB  
                                                   _ANSD4 0079DC  
                       __end_of_IOCB4_SetInterruptHandler A386  
                                           ?_RADIO_SetCRC 0001  
                                         __end_of___lldiv 7FEE  
                                         RADIO_Transmit@i 00C5  
                                                   u20005 5DE4  
                                                   _IDLEN 007E9F  
                                                   u20108 6A82  
                                         ___awdiv@divisor 0066  
                                                   u20080 6A4A  
                                                   _T1CON 000FCD  
                                         __end_of___llmod 8722  
                                                   u20148 6AC2  
                                                   u20355 99BC  
                                                   u20188 8AF0  
                                       ??_EnableChannels1 006D  
                                                   u20285 837C  
                                                   _LATD0 007C60  
                                                   _LATC2 007C5A  
                                                   _LATD1 007C61  
                                    RxJoinResponse@status 0001  
                                                   _LATD3 007C63  
                                                   u15140 8BFC  
                                                   _LATD4 007C64  
                                                   u14430 A364  
                                                   u15150 8BFE  
                                                   u15230 198A  
                                                   u14440 924A  
                       __end_of_AckRetransmissionCallback 6AE0  
                  SearchAvailableChannel@randomNumberCopy 00BA  
                                                   u15235 197E  
                                                   u22268 7798  
                                                   u14447 9240  
                                                   u22607 9B82  
                                                   u15335 1ACA  
                                                   u16260 2CC2  
                                                   u16245 2C88  
                                                   u16270 2CC4  
                                                   u15551 5B7A  
                                                   u15800 4AE2  
                                                   u14690 82D2  
                                                   u19100 13B6  
                                                   u16620 1E44  
                                                   u18060 01B0  
                                                   u18141 0304  
                                                   u22597 6DB6  
                                                   u19110 141A  
                                                   u18310 06B4  
                                          __CFG_DEBUG$OFF 000000  
                                                   u15815 4B0A  
                                                   u19008 3442  
                                                   u15825 4B34  
                                                   u19105 13AA  
                                                   u19210 16AA  
                                                   u18218 0506  
                                                   u18170 0460  
                                                   u17418 7A4C  
                                                   u19115 140C  
                                                   u19035 0FC0  
                                                   u18500 0B9A  
                                                   u18340 07CC  
                                                   u19045 1052  
                                                   u16830 4D44  
                                                   u19055 1164  
                                                   u17448 9AF4  
                                                   u18360 091C  
                                                   u15785 4A5E  
                                                   u19225 16D2  
                                                   u19065 11F6  
                                                   u19090 1396  
                                                   u16914 9184  
                                                   u18418 09E2  
                                                   u18338 0778  
                                                   u18258 05A0  
                                                   u19235 16FC  
                                                   u16915 917C  
                                                   u19500 692E  
                                                   u17740 65F0  
                                                   u16845 4D6C  
                                                   u17725 8C34  
                                                   u16855 4D96  
                                                   u18288 0606  
                                                   u17585 5978  
                                                   u19505 6920  
                                                   u19530 675A  
                                                   u17755 6628  
                                                   u19268 17A6  
                                                   u19540 6774  
                                                   u17908 88AE  
                                                   u17765 664A  
                                                   u19550 67E0  
                                                   u18638 0E36  
                                                   u16888 8A70  
                                                   u19288 17E2  
                                                   u18728 0EFA  
                                                   u18568 0D8A  
                                                   u19480 68A8  
                                                   u19545 6766  
                                                   u18825 3110  
                                                   u18738 0F24  
                                                   u19490 68C2  
                                                   u19555 67D2  
                                                   u17788 66E4  
                                                   u19750 6236  
                                                   u19495 68B4  
                                                   u18848 3194  
                                                   u19850 407E  
                                                   u19765 625E  
                                                   u18965 336A  
                                                   u19775 6288  
                                         __end_of___lwmod 920E  
                                                   u19865 40C4  
                                                   u18898 3226  
                                                   u19875 40EE  
                                                   u18988 3406  
                                                   u19980 5D8A  
                                                   i2l242 9436  
                                                   u19995 5DC2  
                                           ?_RADIO_RxDone 0001  
                                         ___awdiv@counter 0068  
                     __size_of_LORAWAN_SetCurrentDataRate 0034  
                             __size_of_RADIO_ReceiveStart 0266  
                     __size_of_LORAWAN_SetChannelIdStatus 0060  
                                           ?_RADIO_TxDone 0001  
                                                   _TMR1H 000FCF  
                                                   _TMR1L 000FCE  
                                                   _TRISA 000F92  
                                                   _TRISB 000F93  
                                                   _TRISC 000F94  
                                                   _TRISD 000F95  
                                                   _TRISE 000F96  
                                __size_of_RADIO_RxTimeout 002E  
                                              _LoRaWakeUp A3A4  
                                           __CFG_WRT0$OFF 000000  
                                           __CFG_WRT1$OFF 000000  
                           ?_SelectChannelForTransmission 0001  
                                           __CFG_WRT2$OFF 000000  
                                     ___lmul@multiplicand 00A2  
                                           __CFG_WRT3$OFF 000000  
                                          _RxJoinResponse A45A  
                                 ?_SetReceptionNotOkState 0001  
                                          __CFG_EBTR0$OFF 000000  
                                          __CFG_FCMEN$OFF 000000  
                                          __CFG_EBTR1$OFF 000000  
                                          __CFG_EBTR2$OFF 000000  
                                          __CFG_EBTR3$OFF 000000  
                                    ??_PrepareSessionKeys 0074  
                                        __end_of_TMR1_ISR A314  
                               FindSmallestDataRate@found 0065  
                                           __CFG_WRTB$OFF 000000  
                                           __CFG_WRTC$OFF 000000  
                                           __CFG_WRTD$OFF 000000  
                                          ?_INT1_CallBack 0001  
                                  LORAWAN_RxTimeout@minim 00CA  
                             __size_of_RADIO_SetBandwidth 000A  
                                          __CFG_EBTRB$OFF 000000  
                          __size_of_RADIO_WatchdogTimeout 004E  
                                                   __rcon 004A  
                                 __end_of_PIN_MANAGER_IOC A324  
                            ??_IncludeMacCommandsResponse 0069  
                           __end_of_RADIO_WatchdogTimeout 9626  
      RADIO_WriteFSKFrequencyDeviation@frequencyDeviation 0071  
                          ??_INT1_DefaultInterruptHandler 0001  
                               __size_of_ValidateDataRate 001E  
                                                   _randx 01E8  
                          LORAWAN_RxDone@frmPayloadLength 0177  
                           ValidateChannelMaskCntl@result 0064  
                                      __CFG_MCLRE$EXTMCLR 000000  
                                                   _srand A2F4  
                                        UpdateDataRange@i 0067  
                                LORAWAN_RxDone@joinAccept 0175  
                                                   main@i 017E  
                                                   main@j 0180  
                                  _UpdateJoinSuccessState 65B0  
                                          ?_INT2_CallBack 0001  
                                _INT1_SetInterruptHandler A390  
                                              _ComputeMic 8ED6  
                                 __end_of_TMR1_Initialize 9C7C  
                                  UpdateCfList@joinAccept 00AA  
                                                   pclath 000FFA  
                                                   tablat 000FF5  
                                 RADIO_WriteFrequency@num 0079  
                          __size_of_UpdateCurrentDataRate 000A  
                          __size_of_UpdateChannelIdStatus 017A  
                              PrepareSessionKeys@appNonce 0070  
                                  UpdateChannelIdStatus@i 0067  
                           __end_of_UpdateCurrentDataRate A3CC  
                            __size_of_RADIO_FSKPacketSent 0152  
                           __end_of_UpdateChannelIdStatus 6178  
                                                   plusw0 000FEB  
                                                   plusw1 000FE3  
                                                   plusw2 000FDB  
                                UpdateFrequency@channelId 0068  
                                                   status 000FD8  
                                      _MacExecuteCommands 3456  
                                          __CFG_HFOFST$ON 000000  
                                UpdateCfList@channelIndex 00B1  
                                     __size_of_RADIO_DIO0 00A0  
                                     __size_of_RADIO_DIO1 0056  
                                     __size_of_RADIO_DIO2 005E  
                                     __size_of_RADIO_DIO3 0024  
                                     __size_of_RADIO_DIO4 003E  
                                     __size_of_RADIO_DIO5 002E  
                      PrepareJoinRequestFrame@bufferIndex 00EE  
                                         _TMR1_WriteTimer A08C  
                       TMR_OverrideRemaining@oldReloadVal 0076  
                                     LORAWAN_RxDone@fPort 0166  
                                __size_of_RADIO_WriteMode 013E  
                                       __end_of_AESEncode 27BC  
                                          __CFG_PBADEN$ON 000000  
                                     __size_of_RADIO_Init 0212  
                        __end_of_RADIO_WriteConfiguration 1D66  
                         ??_IOCB4_DefaultInterruptHandler 0001  
                            __size_of_RADIO_SetIQInverted 000A  
                               __size_ofi2_TMR1_ReadTimer 001E  
                               RADIO_WriteMode@dioMapping 006C  
                                         __initialization 7C3C  
                            __size_ofi2_SwTimersInterrupt 0100  
                                        LORAWAN_Send@port 00E7  
                             __size_of_DIO1_ISR_Lora_Init 0012  
                                     ?_MacExecuteCommands 00B4  
                                       _SPI2_Exchange8bit A2E2  
                                            __end_of_main 6E78  
                              AssembleEncryptionBlock@dir 0075  
                                            __end_of_rand 938C  
                                       ?_TMR_GetDeltaTime 006C  
                                           AESCmac@padded 0130  
                                __end_of_RADIO_ReadRandom 80A8  
                                        _SetJoinFailState 9AD2  
                                 RADIO_WriteMode@blocking 006A  
                                    _UpdateJoinInProgress A142  
                                    _ExecuteRxTimingSetup 9DF0  
                                       __end_of_IOCB4_ISR 9FA0  
                                       __end_of_IOCB5_ISR 9F7C  
                               __size_of_UpdateDLSettings 001E  
                                      ?_SPI2_Exchange8bit 0001  
                               __size_of_ValidateRxOffset 001E  
                             ?_INTERRUPT_InterruptManager 0001  
                                      ??_TMR_GetDeltaTime 0070  
                                           AESCmac@output 00CF  
                              i2TMR1_ReadTimer@readValLow 0008  
                            __end_of_RADIO_SetOutputPower A3D6  
                                               ??_AESCmac 00D4  
                                          ??_RADIO_SetCRC 0064  
                                  MacExecuteCommands@done 00B9  
                                         ?_SysConfigSleep 0001  
                                 InitDefault868Channels@i 006E  
                                                  ??_main 00F8  
                                                  ??_rand 00AC  
                                          ??_RADIO_RxDone 00F6  
                                          ??_RADIO_TxDone 00E7  
                                           __activetblptr 000003  
                                  ?_RADIO_SetLoRaSyncWord 0001  
                                  __end_of_RxJoinResponse A45E  
                       __end_of_LORAWAN_LinkCheckCallback 5E78  
                          __end_of_SetReceptionNotOkState 88E0  
                             __end_of_UpdateReceiveDelays 96BE  
                         __end_of_AssembleEncryptionBlock 6D52  
                                __size_of_SPI2_Initialize 000E  
                                  ??_SystemBlockingWaitMs 0068  
                                        ??_StartReTxTimer 009E  
                                     ??_SPI2_Exchange8bit 0064  
                        CountfOptsLength@macCommandLength 006A  
                                      EncodeShiftRow@temp 0066  
                                ??_InitDefault868Channels 006E  
                             __size_of_RADIO_RegisterRead 0028  
                                       ?_HALSPICSDeassert 0001  
                                        ?_SwTimersExecute 0001  
                                           _TMR_SwapTimer 9866  
                                              _RxDataDone 96BE  
                                          _EnableChannels A106  
                                      __size_of_LoRaSleep 002A  
                               ??_PrepareJoinRequestFrame 00E4  
                                          _HALSPICSAssert A462  
                                    ??_MacExecuteCommands 00B7  
                                             ?_CheckFlags 0064  
                                 LORAWAN_TxDone@timeOnAir 00BF  
                                              _ExtractMic 8C8C  
                         __size_of_SearchAvailableChannel 015E  
                                                  _CCP1MD 0079F0  
                                                  _CCP2MD 0079F1  
                                                  _CCP3MD 0079F2  
                                                  _CCP4MD 0079F3  
                                                  _CCP5MD 0079F4  
                                      ??_HALSPICSDeassert 0064  
                                  _HALResetPinOutputValue A160  
                                        ___llmod@dividend 0064  
                                                  _ADRESH 000FC4  
                                                  _ADRESL 000FC3  
                                        ___awdiv@dividend 0064  
                                                  _CMP1MD 0079E9  
                                                  _CMP2MD 0079EA  
                                                  ?_srand 0076  
                  __end_of_LORAWAN_ReceiveWindow1Callback 7C3C  
                 __size_of_LORAWAN_ReceiveWindow1Callback 00C4  
                          _LORAWAN_ReceiveWindow1Callback 7B78  
                                _RADIO_FSKPacketSent$1211 00EF  
                                                  _ANSELA 000F38  
                                                  _ANSELB 000F39  
                                                  _ANSELC 000F3A  
                                                  _ANSELD 000F3B  
                                                  _ANSELE 000F3C  
                                         _ValidateTxPower 9CDE  
                          ?_IOCB5_DefaultInterruptHandler 0001  
                                                  _T1GCON 000FCC  
                                 SwTimerReadValue@timerId 009D  
                                                  _CTMUMD 0079EB  
                                 TMR1_WriteTimer@timerVal 0064  
                                          _ExecuteLinkAdr 37DA  
                  __end_of_LORAWAN_ReceiveWindow2Callback 7A92  
                 __size_of_LORAWAN_ReceiveWindow2Callback 00EA  
                          _LORAWAN_ReceiveWindow2Callback 79A8  
                                                  i2l2441 0044  
                                                  i2l2443 0054  
                                                  i2l2447 005E  
                                                  i2l2439 0038  
                           __size_of_RADIO_SetFSKSyncWord 0038  
                                                  _OSCCON 000FD3  
                                       ??_RADIO_GetStatus 0064  
                        __size_of_ValidateChannelMaskCntl 002A  
                                                  _TMR2MD 0079F9  
                                                  _TMR4MD 0079FB  
                                                  _TMR1ON 007E68  
                                                  _TMR5MD 0079FC  
                                                  _TMR6MD 0079FD  
                         __size_of_InitDefault433Channels 00A0  
                                                  _TRISD0 007CA8  
                                                  _TRISC2 007CA2  
                                                  _TRISD1 007CA9  
                                                  _TRISD3 007CAB  
                                                  _TRISD4 007CAC  
                                           ?_LORAWAN_Init 00B6  
                                           ?_LORAWAN_Join 0001  
                        AssembleEncryptionBlock@firstByte 0073  
                                           ?_LORAWAN_Send 00E7  
                         __size_of_AutomaticReplyCallback 002C  
                              __size_of_LORAWAN_RxTimeout 03D2  
                                       ?_ExecuteDevStatus 0064  
                              __end_of_DIO0_ISR_Lora_Init A2BE  
                                __size_ofi2_TMR_SwapTimer 0040  
                                       ExecuteLinkAdr@ptr 0073  
                           __size_of_RADIO_WriteFrequency 0102  
                                                  _STable FE67  
                             RADIO_WriteFrequency@num_mod 0075  
                                     LORAWAN_TxDone@delta 00D6  
                             __size_of_ComputeSessionKeys 00B6  
                                               AESCmac@k1 0110  
                                               AESCmac@k2 0100  
                               __end_of_SPI2_Exchange8bit A2F4  
                                     LORAWAN_TxDone@found 00D5  
                                         _CheckMcastFlags 88E0  
                                     LORAWAN_TxDone@minim 00E2  
                                      ??_ExecuteDevStatus 0066  
                                                  _Random A00A  
                                          __CFG_XINST$OFF 000000  
                                     LORAWAN_TxDone@ticks 00DE  
                                              _TimeToSend 018A  
                      SearchAvailableChannel@randomNumber 00BD  
                    __end_of_TMR1_DefaultInterruptHandler A480  
                   __size_of_TMR1_DefaultInterruptHandler 0002  
                            _TMR1_DefaultInterruptHandler A47E  
                                             ?_GetRx1Freq 0064  
                           ValidateDataRange@dataRangeNew 0067  
                                 _RADIO_FHSSChangeChannel 9708  
                                               ??___abdiv 0065  
                                                  ___lmul 8D7E  
                                  ?_RADIO_WriteFSKBitRate 0071  
                                 __end_of_TMR1_StartTimer A456  
                                   ?_UpdateJoinInProgress 0001  
                                                  ___wmul 9B42  
                             ?_LORAWAN_LinkCheckConfigure 00AA  
                                   ?_ExecuteRxTimingSetup 006B  
                                               ??___awdiv 0068  
                                          __CFG_STVREN$ON 000000  
                                    _FindSmallestDataRate 72C4  
                                               ??___lldiv 006C  
                                               ??___llmod 006C  
                                               ??___lwmod 00B0  
                      RADIO_SetChannelFrequency@frequency 0064  
                                         StartReTxTimer@i 00A6  
                                         ADC_Read@channel 006A  
                               ExecuteRxParamSetupReq@ptr 00AA  
                                  __size_of_LORAWAN_Reset 0226  
                                                  _memcpy 920E  
                                                  _memset 9C16  
                                                  clear_0 7CA4  
                                                  clear_1 7CB6  
                                                  clear_2 7CC2  
                                                  clear_3 7CCE  
                                                  clear_4 7CDA  
                                                  clear_5 7CEE  
                                 SwTimerIsRunning@timerId 0064  
                                        ___awdiv@quotient 006A  
                             __size_of_DIO5_ISR_Lora_Init 0012  
                                             ?_FillSubKey 0064  
                                       ?_SwTimerIsRunning 0001  
                                       ?_ExecuteLinkCheck 0064  
                                         ?_RxJoinResponse 0001  
                                 __size_of_EncodeShiftRow 019A  
                                  __end_of_EnableChannels A124  
                              ??_RADIO_UnhandledInterrupt 0068  
                                            ??_HALSPISend 0065  
                    __end_of_INT2_DefaultInterruptHandler A486  
                   __size_of_INT2_DefaultInterruptHandler 0002  
                            _INT2_DefaultInterruptHandler A484  
                                            __pdataCOMRAM 005A  
                                  __end_of_HALSPICSAssert A466  
                       __size_of_RADIO_SetSpreadingFactor 000A  
                            __size_of_ValidateChannelMask 0074  
                                           ??_SwTimerStop 0064  
                                         ??_INT1_CallBack 0001  
                                       ??_SystemTimerInit 0064  
                                             ?_LoRaWakeUp 0001  
                               ?_RADIO_SetSpreadingFactor 0001  
                                               ?_ADC_Init 0001  
                                       ?_SwTimerReadValue 0095  
                                               ?_ADC_Read 0066  
                                      ??_SwTimerIsRunning 0064  
                                          ?_TMR_SwapTimer 006C  
                         RADIO_FHSSChangeChannel@irqFlags 007D  
                                       ?_ExecuteDutyCycle 0064  
                                      ??_ExecuteLinkCheck 0066  
                                            __mediumconst FE66  
                                                  tblptrh 000FF7  
                                                  tblptrl 000FF6  
                                                  tblptru 000FF8  
                                                  srand@x 0076  
                                         ??_INT2_CallBack 0001  
                                      ??_SwTimerReadValue 0099  
                                         _UpdateDataRange 62F0  
                                  __end_of_ExecuteLinkAdr 3B36  
                                      ??_ExecuteDutyCycle 0066  
                      __end_of_LORAWAN_SetCurrentDataRate 9C16  
                              _LORAWAN_SetCurrentDataRate 9BE2  
               IOCB5_SetInterruptHandler@InterruptHandler 0064  
               IOCB4_SetInterruptHandler@InterruptHandler 0064  
                TMR1_SetInterruptHandler@InterruptHandler 0064  
                INT0_SetInterruptHandler@InterruptHandler 0064  
                INT2_SetInterruptHandler@InterruptHandler 0064  
                INT1_SetInterruptHandler@InterruptHandler 0064  
                      __end_of_LORAWAN_SetChannelIdStatus 92D0  
                              _LORAWAN_SetChannelIdStatus 9270  
                                        ?_PIN_MANAGER_IOC 0001  
                                           AESEncode@aux1 008E  
                                           AESEncode@aux2 008D  
                                           AESEncode@aux3 008F  
                                 __end_of_TMR1_WriteTimer A0AC  
                                   __end_of_SwTimerCreate 87B8  
                          ??_SelectChannelForTransmission 00BF  
                                             ?_ComputeMic 00DB  
                           __size_of_INTERRUPT_Initialize 0004  
                                   __end_of_TMR1_CallBack 9F58  
                               ExecuteDutyCycle@maxDCycle 0069  
                                       ??_RADIO_RxTimeout 00CF  
                                        ?_TMR1_Initialize 0001  
                             UpdateFrequency@frequencyNew 0064  
                                       _SYSTEM_Initialize A0AC  
                        __size_of_CreateAllSoftwareTimers 0052  
                                 __size_of_GenerateSubkey 0188  
                                          ??_LORAWAN_Init 00BA  
                                          ??_LORAWAN_Join 00EF  
                                          ??_LORAWAN_Send 00EB  
                          __size_of_RADIO_FSKPayloadReady 00BE  
                                              __accesstop 0060  
                                 __end_of__initialization 7CF4  
                           __end_of_RADIO_FSKPayloadReady 7DB8  
                                          _RADIO_Transmit 4BA6  
                                               ?_INT1_ISR 0001  
                                               ?_INT2_ISR 0001  
                                    LORAWAN_RxDone@buffer 00EE  
                                  RADIO_ReadRandom@retVal 0073  
                                        _ConfigureRadioRx 9E70  
                                    __size_of_RADIO_Reset 0046  
                                        _ConfigureRadioTx 948C  
                                     ExecuteDevStatus@ptr 0064  
                        ??_UpdateReceiveWindow2Parameters 0069  
                         ?_UpdateReceiveWindow2Parameters 0064  
                                      ?_SYSTEM_Initialize 0001  
                                    LORAWAN_RxDone@packet 016F  
                                          _maxPayloadSize FF67  
                           RADIO_SetLoRaSyncWord@syncWord 0064  
                                           ___rparam_used 000001  
                              ValidateChannelId@channelId 0066  
                               ExecuteLinkAdr@channelMask 0077  
                               __size_of_LORAWAN_GetState 0008  
                                      __end_of_HALSPISend A34E  
                                          __pcstackCOMRAM 0001  
                                       __end_of_LoRaSleep 9E46  
                                              ___inthi_sp 09BC  
                                  _SearchAvailableChannel 6452  
                                 ValidateChannelId@result 0065  
                                   ?_FindSmallestDataRate 0001  
                                            __pidataBANK1 A1EE  
                                            __pidataBANK3 A02C  
                                     ??_SYSTEM_Initialize 0066  
                              __end_of_DIO4_ISR_Lora_Init A47C  
                                               ?_TMR1_ISR 0001  
                                     __size_of_CheckFlags 0064  
                           ?_TMR1_DefaultInterruptHandler 0001  
                                _RADIO_WriteConfiguration 17F6  
                                    __size_of_readAndSend 002C  
                                       ??_RADIO_WriteMode 006B  
                                         _spreadingFactor FF95  
                               __size_of_LORAWAN_Mainloop 0040  
                                        ??_EncKeySchedule 0066  
                   __end_of_IOCB4_DefaultInterruptHandler A484  
                  __size_of_IOCB4_DefaultInterruptHandler 0002  
                           _IOCB4_DefaultInterruptHandler A482  
                                __end_of_RADIO_WritePower 70BA  
                                 ?_ExecuteRxParamSetupReq 00AA  
                                           __end_of_srand A304  
                                       LORAWAN_RxDone@hdr 0178  
                                            ??_RADIO_DIO0 017A  
                                            ??_RADIO_DIO1 00CF  
                                            ??_RADIO_DIO2 007E  
                                            ??_RADIO_DIO3 0069  
                                            ??_RADIO_DIO4 0069  
                                            ??_RADIO_DIO5 0069  
                                  _InitDefault433Channels 854C  
                                         _UpdateFrequency 974E  
                                  _AutomaticReplyCallback 9DC4  
                                         ADC_SelChannel@c 0065  
                             ??_IOCB4_SetInterruptHandler 0066  
                                ??_INTERRUPT_GetDioStatus 0064  
                                            ??_RADIO_Init 0083  
                               SwTimerSetCallback@timerId 0067  
                              LORAWAN_RxDone@channelIndex 0167  
                          AssembleEncryptionBlock@blockId 0072  
                             __size_of_EXT_INT_Initialize 0042  
                                         _UpdateDutyCycle 9794  
                                         ?_EnableChannels 0070  
                                 ??_TMR_OverrideRemaining 0072  
                                 __end_of_ValidateTxPower 9D0E  
                                         ?_HALSPICSAssert 0001  
                                      _DIO3_ISR_Lora_Init A47C  
                                              ??_ADC_Init 0064  
                                              ??_ADC_Read 0068  
                            __end_of_HALResetPinMakeInput A46E  
                                 __size_of_TMR1_ReadTimer 0026  
                        __end_of_INT2_SetInterruptHandler A390  
                                        RADIO_DIO0@opMode 017D  
                             RADIO_RegisterRead@readValue 0067  
                                             ?_RxDataDone 0067  
                      __end_of_IncludeMacCommandsResponse 22C2  
                              _IncludeMacCommandsResponse 1D66  
                           ?_INT2_DefaultInterruptHandler 0001  
                         __size_of_InitDefault868Channels 00A0  
                                UpdateCfList@bufferLength 00AC  
                                        RADIO_DIO2@opMode 007F  
                                   LORAWAN_Send@confirmed 00ED  
                                             ?_ExtractMic 006E  
                                         ?_ExecuteLinkAdr 0073  
                                        _ValidateDataRate A124  
                         LORAWAN_GetMaxPayloadSize@result 006E  
                                     __size_of_GetRx1Freq 0012  
                               __end_of_SYSTEM_Initialize A0CA  
                      __size_of_RADIO_SetChannelFrequency 00B8  
                                                 ??_srand 0078  
                                  __end_of_RADIO_Transmit 4E08  
                                       ??_SPI2_Initialize 0064  
                                     ?_DIO3_ISR_Lora_Init 0001  
                                           _LORAWAN_Reset 4E08  
                              ?_RADIO_SetChannelFrequency 0064  
                                              __pbssBANK0 00F9  
                                              __pbssBANK1 0182  
                                              __pbssBANK2 0200  
                                              __pbssBANK3 0300  
                                              __pbssBANK4 0400  
                                     __end_of_SwTimerStop 9EEA  
                              ?_SetCallbackSoftwareTimers 0001  
                                 __end_of_CheckMcastFlags 8970  
                                         __CFG_PLLCFG$OFF 000000  
                                  __end_of_maxPayloadSize FF6F  
                                   _INT0_InterruptHandler 01ED  
                                              ??_INT1_ISR 0001  
                                              ??_INT2_ISR 0001  
                                      SwTimersInterrupt@i 0094  
                                    _RADIO_SetOutputPower A3CC  
                                              __pnvCOMRAM 005E  
                                    __end_of_RADIO_SetCRC A3EA  
                                  __size_of_DIO0_ISR_Lora 0004  
                                 ??_HALResetPinMakeOutput 0064  
                                    __end_of_RADIO_RxDone 79A8  
                              __end_of_RADIO_RxFSKTimeout 9A26  
                                    __end_of_RADIO_TxDone 699C  
                                     __size_of_FillSubKey 0084  
                                      __end_of_RADIO_DIO0 840C  
                                      __end_of_RADIO_DIO1 93E2  
                                      __end_of_RADIO_DIO2 932E  
                                      __end_of_RADIO_DIO3 9F34  
                                      __end_of_RADIO_DIO4 99EA  
                                      __end_of_RADIO_DIO5 9D3C  
                               ??_RADIO_FHSSChangeChannel 007D  
                             __size_of_SwTimerSetCallback 0046  
                               RADIO_SetOutputPower@power 0064  
                              __size_of_SPI2_Exchange8bit 0012  
                                      __end_of_RADIO_Init 5240  
                       __size_of_LORAWAN_SetDeviceAddress 001A  
                         ?_LORAWAN_EnterContinuousReceive 0001  
                        ??_LORAWAN_EnterContinuousReceive 00BF  
                                                 ?_Random 00B1  
                                       ?_CountfOptsLength 0001  
                                  __size_of_DIO1_ISR_Lora 0004  
                               ?_LORAWAN_SetDeviceAddress 0064  
                                        i2_TMR1_ReadTimer A17E  
                                      __CFG_CCP2MX$PORTC1 000000  
                                          FillSubKey@size 0068  
                                         _EnableChannels1 8970  
                                __size_of_HALDIO5PinValue 000C  
                            __size_of_RADIO_RegisterWrite 0020  
                                     __size_of_LoRaWakeUp 000A  
                                  ??_UpdateJoinInProgress 0064  
                        __size_of_AssembleEncryptionBlock 0134  
                                  ??_ExecuteRxTimingSetup 006D  
                                        FillSubKey@source 0064  
            SelectChannelForTransmission@transmissionType 00BF  
                                                 ?___lmul 009E  
                  AssembleEncryptionBlock@multicastStatus 0074  
                          __end_of_ExecuteRxParamSetupReq 46DA  
                                      ??_CountfOptsLength 0064  
                                                 ?___wmul 0064  
                                  __size_of_DIO2_ISR_Lora 0004  
                                        ?_TMR1_StartTimer 0001  
                                      EncryptFRMPayload@i 00B9  
                                      EncryptFRMPayload@j 00BA  
                                      EncryptFRMPayload@k 00B8  
                                              ??_TMR1_ISR 0034  
                                      __CFG_CCP3MX$PORTB5 000000  
                                       ??i2_TMR_SwapTimer 000B  
                                    ??_DIO3_ISR_Lora_Init 0064  
                                        _UpdateDLSettings A0CA  
                                        _ValidateRxOffset A0E8  
                                                 ?_memcpy 0064  
                                                 ?_memset 0064  
                                          ___lmul@product 00A6  
                                       _TMR_ISR_Lora_Init A264  
                      __size_of_IOCB5_SetInterruptHandler 000A  
                                  RADIO_RegisterWrite@reg 0067  
                                     __size_of_ComputeMic 006E  
                                  RADIO_Transmit@regValue 00C4  
                            __size_of_RADIO_SetModulation 000A  
                                     _RADIO_FSKPacketSent 6704  
                                                 _AESCmac 2C26  
                              ?_IOCB5_SetInterruptHandler 0064  
                                  ComputeMic@bufferLength 00DF  
                                 __size_of_ADC_SelChannel 001C  
                                 __end_of_UpdateDataRange 6452  
                                         ??_TMR_SwapTimer 006E  
                                RADIO_WriteFSKBitRate@num 0075  
                                      ?_TMR_ISR_Lora_Init 0001  
                              ??_INT1_SetInterruptHandler 0066  
                                                 i2l11421 9978  
                                                 i2l11423 998A  
                                                 i2l11451 76AE  
                                                 i2l10733 5F62  
                                                 i2l11445 7648  
                                                 i2l10735 5FEC  
                                                 i2l11439 75EC  
                                                 i2l11449 76AC  
                                                 i2l10749 A1CA  
                                    EncryptFRMPayload@dir 00A8  
                                      _RADIO_GetPacketSnr A43C  
                                    EncryptFRMPayload@key 00AD  
                                   __end_of_UpdateTxPower A3B8  
                                     _RADIO_SetIQInverted A3D6  
                                                 _OSCCON2 000FD2  
                                 __size_of_ConfigureRadio 00AC  
                                                 _UART1MD 0079FE  
                                                 _UART2MD 0079FF  
                                                 _MSSP1MD 0079F6  
                                                 _MSSP2MD 0079F7  
                                                 _OSCTUNE 000F9B  
                             __size_ofi2_TMR_GetDeltaTime 0186  
                                     i2_SwTimersInterrupt 75CA  
                                                 _SSP2ADD 000F6E  
                                                 _SSP2BUF 000F6F  
                                     ??_TMR_ISR_Lora_Init 0066  
                                       __end_of_bandwidth FF8E  
                  UpdateReceiveWindow2Parameters@dataRate 0068  
                                __end_of_SetJoinFailState 9B0A  
                                          ?_LORAWAN_Reset 0001  
                            RADIO_WriteMode@newModulation 0069  
                                  ValidateDataRate@result 0065  
                                        ?_TMR1_WriteTimer 0064  
                                     ?_RADIO_GetPacketSnr 0001  
                                         ___abdiv@divisor 0064  
                                         ?_RADIO_Transmit 00B5  
                                 _ValidateChannelMaskCntl 9E46  
                                         ___abdiv@counter 0067  
                                     StartReTxTimer@minim 00A2  
                              AssemblePacket@bufferLength 00DE  
                            PrepareSessionKeys@sessionKey 006E  
                                    ?_RADIO_FSKPacketSent 0001  
                                   TMR_SwapTimer@timerVal 006C  
                       __end_of_RADIO_SetChannelFrequency 8160  
                             PrepareJoinRequestFrame@iCtr 00ED  
                               _IOCB4_SetInterruptHandler A37C  
                       __end_of_SetCallbackSoftwareTimers 71C0  
                                   ?_RADIO_SetOutputPower 0001  
                               _AckRetransmissionCallback 699C  
                             PrepareJoinRequestFrame@mhdr 00EC  
                                  __size_of_AESEncodeLoRa 003C  
                       __size_of_INT0_SetInterruptHandler 000A  
                           __size_of_LORAWAN_PlatformInit 0022  
                               ?_INT0_SetInterruptHandler 0064  
                                          _ticksAccounted 003C  
                                           ?_SwTimerStart 0001  
                                              AESCmac@key 00CD  
                                              AESCmac@ptr 0160  
                                 __end_of_spreadingFactor FF9C  
                                         __CFG_PWRTEN$OFF 000000  
                           UpdateCurrentDataRate@valueNew 0064  
                                                 __Hparam 0000  
                                    ?_RADIO_SetIQInverted 0001  
                              PrepareJoinRequestFrame@mic 00E8  
                                  _InitDefault868Channels 84AC  
                                RADIO_RegisterWrite@value 0066  
                                                 __Lparam 0000  
                                  ??_FindSmallestDataRate 0064  
                                LORAWAN_Send@bufferLength 00EA  
                                   _StopAllSoftwareTimers 9534  
                                         __size_of_Random 0022  
                                    ?i2_SwTimersInterrupt 0021  
                                 __end_of_UpdateFrequency 9794  
                                     AssemblePacket@fCtrl 00E4  
                                                 ___abdiv 85EC  
                                        ??_SysConfigSleep 0064  
                                     __size_of_RxDataDone 004A  
                                              AESEncode@i 0090  
                                               _AESEncode 22C2  
                                  ValidateRxOffset@result 0065  
                               __end_of_TMR_ISR_Lora_Init A276  
                                                 ___awdiv 7DB8  
                                         __size_of___lmul 0076  
                             __size_of_DIO2_ISR_Lora_Init 0012  
                                 __end_of_UpdateDutyCycle 97DA  
                                                 ___lldiv 7F32  
                                     __size_of_ExtractMic 007C  
                                         __size_of___wmul 0036  
                                    ??_RADIO_GetPacketSnr 0064  
                                                 ___llmod 8688  
                                       ?_RADIO_ReadRandom 0070  
                                                 ___lwmod 91AC  
                               SwTimerIsRunning@isRunning 0065  
                                 ??_RADIO_SetLoRaSyncWord 0064  
                                                 _devAddr 01E4  
                                    ValidateChannelMask@i 0068  
                                                 __pcinit 7C3C  
                      __size_of_LORAWAN_GetMaxPayloadSize 0068  
                                                 _appSKey 03A0  
                                         __size_of_memcpy 0062  
                              __end_of_RADIO_ReceiveStart 4BA6  
                                   RADIO_Init@radioBuffer 007D  
                                         __size_of_memset 0034  
                                                 __ramtop 1000  
                                TMR1_ReadTimer@readValLow 006B  
                        EncryptFRMPayload@multicastStatus 00B2  
                                      ??_RADIO_ReadRandom 0072  
                              ?_LORAWAN_GetMaxPayloadSize 0001  
           RADIO_SetFrequencyHopPeriod@frequencyHopPeriod 0064  
                                                 __ptext0 6D52  
                                                 __ptext1 9D98  
                                                 __ptext2 9626  
                                                 __ptext3 A19C  
                                                 __ptext4 87B8  
                                                 __ptext5 A0AC  
                                                 __ptext6 9C4A  
                                                 __ptext7 A452  
                                                 __ptext8 8E68  
                                                 __ptext9 A368  
                                    __end_of_LORAWAN_Init 90E6  
                                    __end_of_LORAWAN_Join 7F32  
                                    __end_of_LORAWAN_Send 78BA  
                                           _DIO0_ISR_Lora A476  
                          ??_TMR1_DefaultInterruptHandler 0001  
                       __end_of_IOCB5_SetInterruptHandler A372  
                         RADIO_SetFSKSyncWord@syncWordLen 0070  
                                          _EncodeShiftRow 59D0  
                                               _IOCB4_ISR 9F7C  
                              ExecuteNewChannel@frequency 00AF  
                                               _IOCB5_ISR 9F58  
                               TMR1_ReadTimer@readValHigh 006A  
                         __size_of_INTERRUPT_GetDioStatus 0012  
                                               _T1CONbits 000FCD  
                      SelectChannelForTransmission@result 00C0  
                                 __size_of_LORAWAN_RxDone 0EB0  
                                   _OSCILLATOR_Initialize A324  
                          __end_of_UpdateJoinSuccessState 6704  
                                 __size_of_LORAWAN_TxDone 08BE  
                              __end_of_RADIO_SetBandwidth A412  
                                         _RADIO_GetStatus A442  
                                        ?_ValidateTxPower 0001  
                                 ?_HALResetPinOutputValue 0001  
                            __end_of_macEndDevCmdReplyLen FF95  
                       __size_of_TMR1_SetInterruptHandler 000A  
                                           _DIO1_ISR_Lora A472  
                                             _SwTimerStop 9EC2  
                                                 _payload 01D2  
                                ??_PIN_MANAGER_Initialize 0066  
                               ?_TMR1_SetInterruptHandler 0064  
                                                 _nwkSKey 03B0  
                             IncludeMacCommandsResponse@i 0071  
                                           ?_UpdateCfList 00AA  
                                       _ExecuteNewChannel 4182  
                             __size_of_PrepareSessionKeys 00E6  
                                            ??_CheckFlags 0066  
                           RADIO_SetModulation@modulation 0064  
                                 UpdateDLSettings@dlRx2Dr 0065  
                               __size_of_TMR_GetDeltaTime 01F6  
                                           _DIO2_ISR_Lora A46E  
                              __size_of_SYSTEM_Initialize 001E  
                    __end_of_LORAWAN_SetNetworkSessionKey 9A9A  
                   __size_of_LORAWAN_SetNetworkSessionKey 0038  
                            _LORAWAN_SetNetworkSessionKey 9A62  
                                      ?_ExecuteNewChannel 00AA  
                              RADIO_WriteMode@currentMode 006D  
                                        ComputeMic@buffer 00DD  
                                    end_of_initialization 7CF4  
                                 _CreateAllSoftwareTimers 9586  
                                     SwTimerCreate@retVal 0064  
                                _INT2_SetInterruptHandler A386  
                                   ??_RADIO_FSKPacketSent 00E7  
                                          _GenerateSubkey 5B6A  
                                   _RADIO_WatchdogTimeout 95D8  
                          ??_INT2_DefaultInterruptHandler 0001  
                                              _modulation FF6F  
                                        ?_CheckMcastFlags 0064  
                                  ExtractMic@bufferLength 0070  
                                                 memcpy@d 006A  
                                                 memcpy@n 0068  
                                                 memcpy@s 006C  
                                 __end_of_EnableChannels1 89FC  
                                                 memset@c 0066  
                                                 memset@n 0068  
                                                 memset@p 006A  
                               _LORAWAN_LinkCheckCallback 5CF2  
                                          ??_SwTimerStart 0095  
                                               i2u2220_48 9FD4  
                                     ??_ExecuteNewChannel 00AC  
                                               i2u2222_48 9FB0  
                                               i2u2231_48 9F8C  
                                               i2u2233_48 9F68  
                                               i2u2229_48 9F44  
                                   _UpdateCurrentDataRate A3C2  
                                   _UpdateChannelIdStatus 5FFE  
                                 ??_RADIO_WriteFSKBitRate 0075  
                                   ??_RADIO_SetIQInverted 0064  
                              __end_of_DIO1_ISR_Lora_Init A2AC  
                                         ___lldiv@divisor 0068  
                                     _ValidateChannelMask 8DF4  
                                              _ticksAdded 0040  
                             HALResetPinOutputValue@value 0064  
                                EncodeShiftRow@stateTable 0064  
                               __size_of_HALSPICSDeassert 0004  
                                ValidateDataRate@dataRate 0064  
                                         ___lldiv@counter 0070  
                                           _DIO5_ISR_Lora 000000  
                             TMR_OverrideRemaining@tmrVal 0074  
                                   ??i2_SwTimersInterrupt 0025  
                                ExecuteLinkAdr@redundancy 007A  
                                       GenerateSubkey@key 00A5  
                                        _LORAWAN_GetState A424  
                                    _HALResetPinMakeInput A46A  
                                            ??_GetRx1Freq 0068  
                           UpdateDLSettings@dlRx1DrOffset 0064  
                              LORAWAN_Init@RxJoinResponse 00B8  
                              LORAWAN_RxDone@bufferLength 00F0  
                        __end_of_RADIO_SetSpreadingFactor A3F4  
                      AssembleEncryptionBlock@bufferIndex 0076  
                                                 postdec1 000FE5  
                                                 postdec2 000FDD  
                                              ?_AESEncode 006A  
                         ??_IOCB5_DefaultInterruptHandler 0001  
                                         _SystemTimerInit A41C  
                                                 postinc0 000FEE  
                                                 postinc1 000FE6  
                                                 postinc2 000FDE  
                                        ??_RxJoinResponse 0064  
                                        _LORAWAN_Mainloop 98EC  
                            __end_of_RADIO_SetFSKSyncWord 9B42  
                                      LORAWAN_Join@result 00F0  
                                      __end_of_CheckFlags 914A  
                               ValidateTxPower@txPowerNew 0065  
                                          AESEncode@block 006A  
                       SearchAvailableChannel@maxChannels 00BC  
                                  __end_of_EncodeShiftRow 5B6A  
                                      _DIO0_ISR_Lora_Init A2AC  
                                       ??_HALDIO5PinValue 0064  
                                          ?_DIO0_ISR_Lora 0001  
                                               _PORTAbits 000F80  
                                   _INT1_InterruptHandler 01EF  
                                               _PORTBbits 000F81  
                                               _PORTCbits 000F82  
                                        RxDataDone@status 006A  
                                            ??_FillSubKey 0069  
                            SwTimersInterrupt@timeElapsed 008C  
                                               _PORTDbits 000F83  
                                           _AESEncodeLoRa 9A26  
                               __size_of_ExecuteDevStatus 000A  
                            __end_of_RADIO_WriteFrequency 75CA  
                              __end_of_RADIO_RegisterRead 9EC2  
                       __end_of_LORAWAN_GetMaxPayloadSize 9018  
                          __end_of_HALResetPinOutputValue A17E  
                                              ?_IOCB4_ISR 0001  
                                        ?_UpdateDataRange 0064  
                                __end_of_ConfigureRadioRx 9E9A  
                                __end_of_ConfigureRadioTx 94E0  
                                              ?_IOCB5_ISR 0001  
                                              _portNumber 01EC  
                                         _RADIO_RxTimeout 9D3C  
                          UpdateChannelIdStatus@channelId 0066  
                               __end_of_ExecuteNewChannel 4464  
                                        EnableChannels1@i 006F  
                                 __size_of_AssemblePacket 046A  
                                          ?_DIO1_ISR_Lora 0001  
                                    ?_ValidateChannelMask 0064  
                                            ??_LoRaWakeUp 0064  
                                       _SwTimerSetTimeout 94E0  
                                          _TMR1_ReadTimer 9EEA  
                                          ??_UpdateCfList 00AC  
                                              _txPower433 FF9C  
                                              _txPower868 FFA2  
                                               _TRISAbits 000F92  
                                     ?_DIO0_ISR_Lora_Init 0001  
                                               _TRISBbits 000F93  
                                               _TRISCbits 000F94  
                                               _TRISDbits 000F95  
                                               _TRISEbits 000F96  
                                         ??_LORAWAN_Reset 00B5  
                                          ?_DIO2_ISR_Lora 0001  
                           __size_of_SystemBlockingWaitMs 0036  
                               ??_ValidateChannelMaskCntl 0064  
                                      ?_SwTimerSetTimeout 0071  
                                           ?_IO_pins_init 0001  
                             __size_of_MacExecuteCommands 0384  
                                    ExecuteNewChannel@ptr 00AA  
                                ??_UpdateMinMaxChDataRate 0064  
                                  __end_of_GenerateSubkey 5CF2  
                                       __size_of_ADC_Init 000E  
                                       __size_of_ADC_Read 004C  
                                           RADIO_RxDone@i 00F7  
                                   __size_of_RADIO_SetCRC 000A  
                             ?_LORAWAN_SetCurrentDataRate 0001  
                                 AssemblePacket@macCmdIdx 00E5  
                             ?_LORAWAN_SetChannelIdStatus 0068  
                                          _localDioStatus 018B  
                                      __end_of_GetRx1Freq A2D0  
                                   __size_of_RADIO_RxDone 00EE  
                                            ??_ComputeMic 00E0  
                            __size_of_UpdateReceiveDelays 004C  
                                   __size_of_RADIO_TxDone 0146  
                                  ??_RADIO_SetOutputPower 0064  
                         EncryptFRMPayload@macBufferIndex 00AF  
                           ?_LORAWAN_SetNetworkSessionKey 006E  
                                 UpdateMinMaxChDataRate@i 0065  
                                 LORAWAN_Reset@ismBandNew 00B5  
                               __size_of_SwTimerIsRunning 002E  
                              __end_of_ComputeSessionKeys 8216  
                                     ??_SwTimerSetTimeout 0075  
                                __size_of_SwTimersExecute 00F8  
                               __size_of_ExecuteLinkCheck 0032  
                                  _INTERRUPT_GetDioStatus A2D0  
                                         _RADIO_WriteMode 6AE0  
                              ??_RADIO_WriteConfiguration 00AC  
                                   SPI2_Exchange8bit@data 0064  
                                 ?_SearchAvailableChannel 00B3  
                               __size_of_SwTimerReadValue 0040  
                             RADIO_FSKPacketSent@irqFlags 00F3  
                               __size_of_ExecuteDutyCycle 0062  
                                  ?_StopAllSoftwareTimers 0001  
                                 AssemblePacket@confirmed 00E2  
                                      __end_of_FillSubKey 8C10  
                                 _AssembleEncryptionBlock 6C1E  
                                       __size_of_INT1_ISR 0008  
                                       __size_of_INT2_ISR 0008  
                                    ??_DIO0_ISR_Lora_Init 0066  
                                   ?_HALResetPinMakeInput 0001  
                                          __end_of_STable FF67  
                                     AESEncodeLoRa@useKey 0095  
                              SwTimerSetCallback@callback 0064  
                LORAWAN_SetDeviceAddress@deviceAddressNew 0064  
                                        ?_UpdateFrequency 0064  
                                      __end_of_LoRaWakeUp A3AE  
                                      LORAWAN_Send@buffer 00E8  
                                          __end_of_Random A02C  
                                 ?_InitDefault433Channels 0001  
                              __size_of_TMR_ISR_Lora_Init 0012  
                                __end_of_ValidateDataRate A142  
                            __end_of_INTERRUPT_Initialize A45A  
                          EnableChannels1@channelMaskCntl 006A  
                          EnableChannels1@channelIndexMax 006C  
                          EnableChannels1@channelIndexMin 006B  
                     LORAWAN_SetChannelIdStatus@channelId 006A  
                                        ?_UpdateDutyCycle 0064  
                            _INT0_DefaultInterruptHandler 000000  
                              __end_of_DIO5_ISR_Lora_Init A288  
                                 __end_of_RADIO_GetStatus A448  
                                          __end_of___lmul 8DF4  
                                      LORAWAN_Send@result 00EC  
                                        ??_EnableChannels 0073  
                               i2TMR1_WriteTimer@timerVal 0001  
                                          __end_of___wmul 9B78  
                                           ?_TMR_ISR_lora 0001  
                                        ??_HALSPICSAssert 0064  
                     TMR_OverrideRemaining@ticksRemaining 006E  
                                       ?_RADIO_WritePower 0001  
                                               _LoRaSleep 9E1C  
                                           __pidataCOMRAM A44E  
                                         ?_EncodeShiftRow 0064  
                                          ?_AESEncodeLoRa 0091  
                                       __size_of_TMR1_ISR 0010  
                                          _ADC_SelChannel A19C  
                                      __end_of_ComputeMic 8F44  
                                               Random@max 00B1  
                                          __end_of_memcpy 9270  
                                  ?_OSCILLATOR_Initialize 0001  
                               __end_of_SwTimerSetTimeout 9534  
                                  __end_of_TMR1_ReadTimer 9F10  
                                          __end_of_memset 9C4A  
                                         _SPI2_Initialize A332  
                        LORAWAN_SetChannelIdStatus@result 0069  
                                ?_PrepareJoinRequestFrame 0001  
                                      ??_RADIO_WritePower 0068  
                                            _RADIO_SetCRC A3E0  
                                   ??_ValidateChannelMask 0066  
                                        ??_ExecuteLinkAdr 0075  
                                   UpdateCfList@frequency 00AD  
                                            _RADIO_RxDone 78BA  
                                            _RADIO_TxDone 6856  
LORAWAN_SetApplicationSessionKey@applicationSessionKeyNew 006E  
                                     start_initialization 7C3C  
                                          _ConfigureRadio 8216  
                                      LORAWAN_RxDone@mhdr 0168  
                                      LORAWAN_RxDone@temp 016E  
                                            ??_RxDataDone 006B  
                                      _DIO4_ISR_Lora_Init A47A  
                                          ??_IO_pins_init 0064  
                                __end_ofi2_TMR1_ReadTimer A19C  
                          __size_of_TMR_OverrideRemaining 00AA  
                                     _RADIO_RegisterWrite A06C  
                                            AESCmac@mLast 0120  
                               ??_CreateAllSoftwareTimers 0065  
                                    RxDataDone@dataLength 0069  
                         __size_of_PIN_MANAGER_Initialize 006E  
                           __end_of_TMR_OverrideRemaining 836C  
                             ?_IncludeMacCommandsResponse 0064  
                                   __end_of_INT1_CallBack 9FE8  
                                            ??_ExtractMic 0072  
                    EncryptFRMPayload@bufferToBeEncrypted 00B0  
                                            AESCmac@input 00D1  
                        __end_of_LORAWAN_SetDeviceAddress A1EE  
                                         ?_GenerateSubkey 00A5  
                            ?_RADIO_SetFrequencyHopPeriod 0064  
                                         LORAWAN_TxDone@i 00E6  
                                   LORAWAN_Init@RxPayload 00B6  
                     AssembleEncryptionBlock@frameCounter 006E  
                                 i2TMR_SwapTimer@timerVal 0009  
                                   __end_of_INT2_CallBack 9FC4  
                                           ??_RADIO_Reset 0069  
                                __end_of_UpdateDLSettings A0E8  
                              SwTimerStart@ticksRemaining 0099  
                                  RADIO_WriteMode@newMode 006E  
                                __end_of_ValidateRxOffset A106  
                             ??_RADIO_SetChannelFrequency 0068  
                             ??_SetCallbackSoftwareTimers 0068  
                                     ?_DIO4_ISR_Lora_Init 0001  
                                     _RADIO_SetModulation A3F4  
                           ExecuteNewChannel@channelIndex 00B3  
                          __end_of_SearchAvailableChannel 65B0  
                                        ?_EnableChannels1 0068  
                                         i2_TMR_SwapTimer 996C  
                                 __size_of_StartReTxTimer 019C  
                                  ?_UpdateCurrentDataRate 0001  
                                  ?_UpdateChannelIdStatus 0064  
                                         ___llmod@divisor 0068  
                              MacExecuteCommands@fOptsLen 00B6  
                                 __end_of_SystemTimerInit A424  
                          UpdateChannelIdStatus@statusNew 0064  
                       __size_of_RADIO_UnhandledInterrupt 0034  
                                         ___llmod@counter 006C  
                                     TMR_SwapTimer@oldVal 0046  
                               ?_RADIO_UnhandledInterrupt 0001  
                                __size_of_PIN_MANAGER_IOC 0010  
                                     TMR_SwapTimer@retVal 0048  
                                   _RADIO_FSKPayloadReady 7CFA  
                          __size_of_HALResetPinMakeOutput 0004  
                           __end_of_HALResetPinMakeOutput A46A  
                                                ??_Random 00B3  
                                                AESCmac@i 0165  
                                                AESCmac@j 0164  
                                                AESCmac@n 0163  
                                           ??_readAndSend 00EE  
                                                AESCmac@x 0150  
                                                AESCmac@y 0140  
                              SwTimerReadValue@ticksCount 0099  
                                    ?_RADIO_RegisterWrite 0066  
                          __end_of_InitDefault433Channels 85EC  
                          __end_of_AutomaticReplyCallback 9DF0  
                                     RADIO_Init@frequency 007F  
                                __size_of_TMR1_Initialize 0032  
                                    _macEndDevCmdReplyLen FF8E  
                                                ??___lmul 00A6  
                                             ??_AESEncode 006E  
                       RADIO_WriteConfiguration@tempValue 00B0  
                                   __size_of_LORAWAN_Init 0066  
                      __size_of_AckRetransmissionCallback 0144  
                                   __size_of_LORAWAN_Join 00BC  
                                                ??___wmul 0068  
                                   __size_of_LORAWAN_Send 00F8  
                                 __end_of_RADIO_RxTimeout 9D6A  
                                MacExecuteCommands@buffer 00B4  
                                      __end_of_RxDataDone 9708  
                                ??_SetReceptionNotOkState 00BF  
                                          ??_TMR_ISR_lora 0032  
                                  __end_of_ADC_SelChannel A1B8  
                                         ??_DIO0_ISR_Lora 0001  
                                             __pdataBANK1 01D4  
                                             __pdataBANK3 03A0  
                                       _ValidateDataRange 9438  
                                      __end_of_ExtractMic 8D08  
                i2SwTimersInterrupt@ticksToNextTimerEvent 002D  
                  SwTimersInterrupt@ticksToNextTimerEvent 0090  
                                                ??_memcpy 006A  
                                  __size_of_SwTimerCreate 0096  
                                                ??_memset 006A  
                                    ??_DIO4_ISR_Lora_Init 0064  
                              __end_of_EXT_INT_Initialize 98EC  
                                              ?_LoRaSleep 0001  
                                       _ValidateChannelId 9CAE  
                                    ?_RADIO_SetModulation 0001  
                                          ADC_Read@result 006B  
                                _RADIO_SetSpreadingFactor A3EA  
                                      _RADIO_RxFSKTimeout 99EA  
                                                ?_AESCmac 00CD  
                                  __size_of_TMR1_CallBack 0024  
                                         ??_DIO1_ISR_Lora 0001  
                                      ?_ValidateDataRange 0001  
                   __end_of_IOCB5_DefaultInterruptHandler A482  
                  __size_of_IOCB5_DefaultInterruptHandler 0002  
                           _IOCB5_DefaultInterruptHandler A480  
                             ??_IOCB5_SetInterruptHandler 0066  
                                ValidateRxOffset@rxOffset 0064  
                                            AESEncode@aux 008C  
                                            AESEncode@key 0076  
                                  TMR_GetDeltaTime@retVal 0182  
                                         ?_TMR1_ReadTimer 0064  
                                             ??_IOCB4_ISR 0001  
                                             ??_IOCB5_ISR 0001  
                                  __end_of_ConfigureRadio 82C2  
                                          _LORAWAN_RxDone 0088  
                                      ?_ValidateChannelId 0064  
                                  TMR_GetDeltaTime@tmrVal 0044  
                                          _LORAWAN_TxDone 0F38  
                              __size_of_ExecuteNewChannel 02E2  
              LORAWAN_GetMaxPayloadSize@macCommandsLength 006D  
                                    __end_of_SwTimerStart 84AC  
                  __end_of_LORAWAN_EnterContinuousReceive 8A84  
                 __size_of_LORAWAN_EnterContinuousReceive 0088  
                          _LORAWAN_EnterContinuousReceive 89FC  
                                             __pbssBIGRAM 04E0  
                                         ??_DIO2_ISR_Lora 0001  
                               __size_of_CountfOptsLength 0102  
                                       CountfOptsLength@i 006B  
                                             __pbssCOMRAM 003C  
                              __end_of_DefaultChannels433 FFD2  
                              __end_of_DefaultChannels868 FFFC  
                                        ??_RADIO_Transmit 00B8  
                        __end_of_INT0_SetInterruptHandler A3A4  
                                      LORAWAN_RxTimeout@i 00CE  
                                           __pcstackBANK0 0060  
                                           __pcstackBANK1 0100  
                                     ??_ValidateDataRange 0066  
                                        _TMR_GetDeltaTime 563E  
                           EnableChannels@channelMaskCntl 0072  
                                 __end_of_RADIO_WriteMode 6C1E  
                 __end_of_UnconfirmedTransmissionCallback 8B08  
                __size_of_UnconfirmedTransmissionCallback 0084  
                         _UnconfirmedTransmissionCallback 8A84  
                                 SearchAvailableChannel@i 00BE  
                                     ??_ValidateChannelId 0065  
                                   RADIO_RegisterRead@reg 0066  
                         __size_of_UpdateMinMaxChDataRate 0104  
                                 _RADIO_ReceiveStart$1195 00BB  
                     LORAWAN_SetChannelIdStatus@statusNew 0068  
                                               _aesBuffer 01C2  
                                 INTERRUPT_GetDioStatus@a 0064  
                                       ?_SetJoinFailState 0001  
                                     SwTimerStart@timerId 009D  
                           ??_RADIO_SetFrequencyHopPeriod 0066  
                                    _RADIO_SetFSKSyncWord 9B0A  
                             RADIO_SetBandwidth@bandwidth 0064  
                              __end_of_SwTimerSetCallback 9820  
       __end_of_ResetParametersForUnconfirmedTransmission A220  
      __size_of_ResetParametersForUnconfirmedTransmission 0018  
              ?_ResetParametersForUnconfirmedTransmission 0001  
             ??_ResetParametersForUnconfirmedTransmission 0064  
               _ResetParametersForUnconfirmedTransmission A208  
                               ??_AssembleEncryptionBlock 0075  
                                   _INT2_InterruptHandler 01F1  
                                               _bandwidth FF87  
                                      ??_SetJoinFailState 0064  
                                 ?_InitDefault868Channels 0001  
                                            _LORAWAN_Init 9080  
                                            _LORAWAN_Join 7E76  
                                            _LORAWAN_Send 77C2  
                                  RADIO_FSKPayloadReady@i 00F7  
                                       _ValidateFrequency 8B08  
                                               __pnvBANK1 01ED  
                                  ??_HALResetPinMakeInput 0064  
                                    _RADIO_WriteFrequency 74C8  
                                         FillSubKey@carry 006A  
                                        _HALSPICSDeassert A45E  
                          ??_LORAWAN_SetNetworkSessionKey 0070  
                                     __end_of_RADIO_Reset 9866  
                                   ??_RADIO_RegisterWrite 0067  
                                  _PIN_MANAGER_Initialize 8E68  
                                           FillSubKey@key 0066  
                                      ?_ValidateFrequency 0064  
                                    __end_of_UpdateCfList 4940  
                     RADIO_WriteFSKFrequencyDeviation@num 0075  
                               EnableChannels@channelMask 0070  
                                               _macBuffer 04E0  
                                               _dioStatus 004C  
                               __end_of_ValidateDataRange 948C  
                           RADIO_FSKPayloadReady@irqFlags 00F6  
                                       _SwTimersInterrupt 6E78  
                                       ??_SwTimersExecute 00EE  
                                               __pintcode 0008  
                                                ?___abdiv 0064  
                        __end_of_TMR1_SetInterruptHandler A37C  
                                           __pmediumconst FE66  
                                 RADIO_Transmit@bufferLen 00B7  
                                 __end_of_SPI2_Initialize A340  
                                                ?___awdiv 0064  
                                               __ptext100 5444  
                                               __ptext101 7DB8  
                                               __ptext110 0F38  
                                               __ptext102 6C1E  
                               __end_of_ValidateChannelId 9CDE  
                                               __ptext111 992C  
                                               __ptext103 73C6  
                                               __ptext200 8722  
                                               __ptext120 A24E  
                                               __ptext112 9D6A  
                                               __ptext104 8C8C  
                                               __ptext201 A424  
                                               __ptext121 A448  
                                               __ptext113 A442  
                                               __ptext105 8160  
                                               __ptext210 A1B8  
                                               __ptext202 A220  
                                               __ptext130 948C  
                                               __ptext122 A04C  
                                               __ptext114 89FC  
                                               __ptext106 7A92  
                                               __ptext211 75CA  
                                               __ptext203 A34E  
                                               __ptext131 A3CC  
                                               __ptext123 4940  
                                               __ptext115 96BE  
                                               __ptext107 88E0  
                                               __ptext220 A42C  
                                               __ptext212 5E78  
                                               __ptext140 A408  
                                               __ptext132 A3D6  
                                               __ptext124 9E70  
                                               __ptext116 9BE2  
                                               __ptext108 90E6  
                                               __ptext221 9FA0  
                                               __ptext213 A17E  
                                               __ptext205 A304  
                                               __ptext141 4BA6  
                                               __ptext133 A3E0  
                                               __ptext125 A2D0  
                                               __ptext117 A124  
                                               __ptext109 6704  
                                               __ptext222 A472  
                                               __ptext214 A314  
                                               __ptext206 9F34  
                                               __ptext150 8ED6  
                                               __ptext142 17F6  
                                               __ptext134 8216  
                                               __ptext126 7E76  
                                               __ptext118 A3C2  
                                               __ptext223 A484  
                                               __ptext215 9F58  
                                               __ptext207 A47E  
                                               __ptext151 2C26  
                                               __ptext143 6F9E  
                                               __ptext135 A3EA  
                                               __ptext127 A142  
                                               __ptext119 A208  
                                               __ptext224 A434  
                                               __ptext216 A480  
                                               __ptext208 93E2  
                                               __ptext160 70BA  
                                               __ptext152 5B6A  
                                               __ptext144 8F44  
                                               __ptext136 A3F4  
                                               __ptext128 8D08  
                                               __ptext225 9FC4  
                                               __ptext217 9F7C  
                                               __ptext209 996C  
                                               __ptext161 7FEE  
                                               __ptext153 8B8C  
                                               __ptext145 9018  
                                               __ptext137 A3FE  
                                               __ptext129 6452  
                                               __ptext226 A476  
                                               __ptext218 A46E  
                                               __ptext170 A35C  
                                               __ptext162 4E08  
                                               __ptext154 9A26  
                                               __ptext146 5240  
                                               __ptext138 9B0A  
                                               __ptext227 A486  
                                               __ptext219 A482  
                                               __ptext171 74C8  
                                               __ptext163 71C0  
                                               __ptext155 22C2  
                                               __ptext147 A00A  
                                               __ptext139 80A8  
                                               __ptext228 0000  
                                               __ptext180 A160  
                                               __ptext172 8688  
                                               __ptext164 9534  
                                               __ptext156 59D0  
                                               __ptext148 932E  
                                               __ptext181 A466  
                                               __ptext173 A06C  
                                               __ptext165 A412  
                                               __ptext157 3B36  
                                               __ptext149 91AC  
                                               __ptext190 A08C  
                                               __ptext182 A46A  
                                               __ptext174 A340  
                                               __ptext166 502E  
                                               __ptext158 9080  
                                               __ptext191 6E78  
                                               __ptext183 6178  
                                               __ptext175 A2E2  
                                               __ptext167 97DA  
                                               __ptext159 A2F4  
                                               __ptext192 563E  
                                               __ptext184 8D7E  
                                               __ptext176 A45E  
                                               __ptext168 6AE0  
                                               __ptext193 9EEA  
                                               __ptext185 7F32  
                                               __ptext177 A462  
                                               __ptext169 9E9A  
                                               __ptext194 94E0  
                                               __ptext186 9EC2  
                                               __ptext178 9820  
                                               __ptext195 84AC  
                                               __ptext187 840C  
                                               __ptext179 9B78  
                                               __ptext196 854C  
                                               __ptext188 82C2  
                                               __ptext197 9C16  
                                               __ptext189 9866  
                                               __ptext198 920E  
                                               __ptext199 9586  
                                       _EncryptFRMPayload 5444  
                                                ?___lldiv 0064  
                            RADIO_FSKPacketSent@timeOnAir 00EB  
                           __size_of_UpdateJoinInProgress 001E  
                                                ?___llmod 0064  
                           __size_of_ExecuteRxTimingSetup 002C  
                                         ??_AESEncodeLoRa 0095  
                SelectChannelForTransmission@channelIndex 00C1  
                         __end_of_PrepareJoinRequestFrame 5444  
                                                ?___lwmod 00AC  
                                         ?_ADC_SelChannel 0001  
                                      ?_SwTimersInterrupt 0084  
                               _RADIO_SetChannelFrequency 80A8  
                             __size_of_DIO3_ISR_Lora_Init 0002  
                   IncludeMacCommandsResponse@bufferIndex 0072  
                               _SetCallbackSoftwareTimers 70BA  
                                      ConfigureRadio@freq 0071  
                                   ??_RADIO_SetModulation 0064  
                                        ?_RADIO_GetStatus 0001  
                                  __end_of_LORAWAN_RxDone 0F38  
                                     ??_ValidateFrequency 0068  
                                  __end_of_LORAWAN_TxDone 17F6  
                                      ?_EncryptFRMPayload 00A5  
                                     __end_of_readAndSend 9DC4  
                            ??_INTERRUPT_InterruptManager 0034  
                                        __CFG_PRICLKEN$ON 000000  
                            __end_of_LORAWAN_PlatformInit A00A  
                          __size_of_RADIO_SetLoRaSyncWord 000A  
                                        _ExecuteDevStatus A3B8  
                           __end_of_RADIO_SetLoRaSyncWord A41C  
                  IncludeMacCommandsResponse@pBufferIndex 0066  
                              __size_of_SwTimerSetTimeout 0054  
                             ??_LORAWAN_GetMaxPayloadSize 006C  
                          LORAWAN_LinkCheckConfigure@iCtr 00B4  
                        ExecuteRxParamSetupReq@dlSettings 00B2  
                                          _AssemblePacket 27BC  
                                         ?_ConfigureRadio 0071  
                               AssemblePacket@bufferIndex 00E6  
                              ??_INT2_SetInterruptHandler 0066  
                              __end_ofi2_TMR_GetDeltaTime 5FFE  
                                __size_of_TMR1_StartTimer 0004  
                                     ??_SwTimersInterrupt 0088  
                                    RADIO_DIO0@dioMapping 017C  
                                       _DutyCycleCallback 3E6E  
                                 InitDefault433Channels@i 006E  
                                   __end_of_TMR_SwapTimer 98AA  
                                                _ADC_Init A34E  
                                                _ADC_Read 9626  
                                            ?_SwTimerStop 0001  
                                     ??_EncryptFRMPayload 00B3  
                                __end_of_LORAWAN_GetState A42C  
                                 __end_ofi2_TMR_SwapTimer 99AC  
                                 __size_of_EncKeySchedule 0338  
                                      AssemblePacket@mhdr 00E3  
                                      AssemblePacket@port 00DB  
                               __size_of_RADIO_ReadRandom 00BA  
                                ConfigureRadioRx@dataRate 007A  
                                      _RADIO_ReceiveStart 4940  
                                          __size_of_srand 0010  
                                __end_of_LORAWAN_Mainloop 992C  
                                   ?_RADIO_SetFSKSyncWord 006E  
                                    _INTERRUPT_Initialize A456  
                                           _SwTimerCreate 8722  
                          __end_of_InitDefault868Channels 854C  
                     IncludeMacCommandsResponse@macBuffer 0064  
                                ?_RADIO_FHSSChangeChannel 0001  
                           ValidateFrequency@frequencyNew 0064  
                                           _TMR1_CallBack 9F34  
                      LORAWAN_SetCurrentDataRate@valueNew 0066  
                               __end_of_ValidateFrequency 8B8C  
                               _IOCB5_SetInterruptHandler A368  
                                        _SwTimerIsRunning 9D6A  
                                        _ExecuteLinkCheck 9C7C  
                                    i2SwTimersInterrupt@i 0031  
                                                _INT1_ISR A434  
                                _LORAWAN_SetDeviceAddress A1D4  
                                                _INT2_ISR A42C  
                                       EncKeySchedule@key 0064  
                                          ___wmul@product 0068  
                                                _IOCBbits 000F62  
                                      _RADIO_SetBandwidth A408  
                                                _LATBbits 000F8A  
                                                _LATCbits 000F8B  
                                                _LATDbits 000F8C  
                                                _LATEbits 000F8D  
                                  ?_RADIO_FSKPayloadReady 0001  
                                        __CFG_WDTEN$NOSLP 000000  
                       __size_of_INT1_SetInterruptHandler 000A  
                                    __end_of_rxWindowSize FF87  
                                   ?_RADIO_WriteFrequency 0071  
                               ?_INT1_SetInterruptHandler 0064  
                                        ?_SystemTimerInit 0001  
                                               _reloadVal 00F9  
                                     ?_RADIO_ReceiveStart 00B5  
                                        _SwTimerReadValue 992C  
                                                _PIE1bits 000F9D  
                                        _ExecuteDutyCycle 914A  
                                         _HALDIO5PinValue A35C  
                                    RADIO_DIO1@dioMapping 00D0  
                               __end_of_SwTimersInterrupt 6F9E  
                                __size_of_TMR1_WriteTimer 0020  
                                      AESEncode@masterKey 006C  
                     __size_of_INTERRUPT_InterruptManager 0078  
                              __end_of_DIO2_ISR_Lora_Init A29A  
                                                _PIR1bits 000F9E  
                                        GenerateSubkey@k1 00A7  
                                        GenerateSubkey@k2 00A9  
                                    ConfigureRadioRx@freq 0076  
                               __end_of_EncryptFRMPayload 563E  
                          __size_of_RADIO_WriteFSKBitRate 0068  
                                UpdateReceiveDelays@delay 006A  
                               LORAWAN_RxDone@bufferIndex 016D  
                                  __size_of_UpdateTxPower 000A  
                           __end_of_RADIO_WriteFSKBitRate 9080  
                                    ConfigureRadioTx@freq 0076  
                                         RxDataDone@pData 0067  
                             UpdateDataRange@dataRangeNew 0064  
                                                _RCONbits 000FD0  
                                     ?_RADIO_SetBandwidth 0001  
                      SearchAvailableChannel@channelIndex 00B4  
                                               _rxPayload 0186  
                                    __end_of_IO_pins_init A238  
                                        __CFG_WDTPS$32768 000000  
                                  _UpdateMinMaxChDataRate 71C0  
                           EncryptFRMPayload@bufferLength 00A7  
                                 ValidateDataRange@result 0066  
                                                _SSP2CON1 000F6C  
                             UpdateDutyCycle@dutyCycleNew 0064  
              ValidateChannelId@allowedForDefaultChannels 0064  
                           __size_of_FindSmallestDataRate 0102  
                                                _TMR1_ISR A304  
                                ConfigureRadioTx@dataRate 007A  
                    __size_of_RADIO_SetFrequencyHopPeriod 000A  
                                   ValidateTxPower@result 0064  
                                        ?_RADIO_RxTimeout 0001  
                     __size_of_IncludeMacCommandsResponse 055C  
                                                _SSP2STAT 000F6D  
                            ??_LORAWAN_LinkCheckConfigure 00AC  
                                       ??_PIN_MANAGER_IOC 0001  
                             __size_of_RADIO_GetPacketSnr 0006  
                                     _UpdateReceiveDelays 9672  
                         __size_of_SetReceptionNotOkState 0094  
                                             ??_LoRaSleep 0064  
                                  __end_of_AssemblePacket 2C26  
                                         ?_LORAWAN_RxDone 00EE  
                                         ?_LORAWAN_TxDone 00BF  
                                       ??_TMR1_Initialize 0066  
                                              _ADCON0bits 000FC2  
                                        ___abdiv@dividend 006A  
                                              _ADCON2bits 000FC0  
                                      _DIO1_ISR_Lora_Init A29A  
                               __end_of_DutyCycleCallback 4182  
                                       ___wmul@multiplier 0064  
                                        __size_of_AESCmac 045E  
                                    ??_RADIO_ReceiveStart 00B7  
                                 ValidateFrequency@result 0068  
                              __end_of_PrepareSessionKeys 7B78  
                                       ?_ConfigureRadioRx 0076  
                                       ?_ConfigureRadioTx 0076  
                                    RADIO_DIO2@dioMapping 0080  
                                      AESEncodeLoRa@block 0091  
                                                _Channels 0400  
                             __end_of_RADIO_FSKPacketSent 6856  
                 RADIO_SetSpreadingFactor@spreadingFactor 0064  
                                      ??_ConfigureRadioRx 007A  
                                      ??_ConfigureRadioTx 007A  
                                    ??_RADIO_SetBandwidth 0064  
                                     ?_DIO1_ISR_Lora_Init 0001  
                           RADIO_SetIQInverted@iqInverted 0064  
                                        ?_RADIO_WriteMode 0069  
                               LORAWAN_RxDone@computedMic 0171  
                                       ___lmul@multiplier 009E  
                                             _INTCON2bits 000FF1  
                                             _INTCON3bits 000FF0  
                                          ?_SwTimerCreate 0001  
                                               copy_data0 7C50  
                                               copy_data1 7C70  
                                               copy_data2 7C90  
                                   ?_INTERRUPT_Initialize 0001  
                                 ?_INTERRUPT_GetDioStatus 0001  
                                    ?_UpdateReceiveDelays 0001  
                                     _EncKeySchedule$3853 0068  
                                _INT0_SetInterruptHandler A39A  
                             __end_of_RADIO_SetIQInverted A3E0  
                                          ?_TMR1_CallBack 0001  
                                    __end_of_TMR_ISR_lora 9438  
                                             _RADIO_Reset 9820  
                                     ExecuteLinkCheck@ptr 0064  
                          i2SwTimersInterrupt@timeElapsed 0029  
                                      _RADIO_RegisterRead 9E9A  
                                __size_of_ValidateTxPower 0030  
                                 ??_StopAllSoftwareTimers 0065  
                                          _StartReTxTimer 5834  
                             __end_ofi2_SwTimersInterrupt 76CA  
                               _LORAWAN_GetMaxPayloadSize 8FB0  
                              LORAWAN_RxDone@extractedMic 0169  
                                             AESCmac@flag 0162  
                           EncryptFRMPayload@frameCounter 00A9  
                                      CheckMcastFlags@hdr 0064  
                                             AESCmac@size 00D3  
                                SwTimerSetTimeout@timerId 0079  
                                SwTimerSetTimeout@timeout 0071  
                                   RADIO_WriteMode@opMode 006F  
                                ??_ExecuteRxParamSetupReq 00AC  
                     __size_of_LORAWAN_LinkCheckConfigure 0178  
                                        ___abdiv@quotient 0069  
                 UpdateReceiveWindow2Parameters@frequency 0064  
                                    RADIO_DIO3@dioMapping 006A  
                                                __Hrparam 0000  
                                     ?_RADIO_RegisterRead 0001  
                            __end_of_SystemBlockingWaitMs 9BAE  
                  ValidateChannelMaskCntl@channelMaskCntl 0065  
                                       i2_TMR1_WriteTimer A1B8  
                                                __Lrparam 0000  
                                        ??_EncodeShiftRow 0066  
                                             _readAndSend 9D98  
                                    ??_DIO1_ISR_Lora_Init 0066  
                                __size_of_CheckMcastFlags 0090  
                                      __CFG_BOREN$SBORDIS 000000  
                                   TMR1_ReadTimer@readVal 0068  
                              __size_of_ValidateDataRange 0054  
                               _ticksToScheduledInterrupt 005A  
                                       __CFG_P2BMX$PORTD2 000000  
                            ValidateDataRange@dataRateMax 0068  
                            ValidateDataRange@dataRateMin 0069  
                              __size_of_ValidateChannelId 0030  
                                        ?_SPI2_Initialize 0001  
                                      ?i2_TMR1_WriteTimer 0001  
                                        __size_of___abdiv 009C  
                                 ??_OSCILLATOR_Initialize 0064  
                                       ?_ValidateDataRate 0001  
                                        __size_of___awdiv 00BE  
                                      _ComputeSessionKeys 8160  
                                   __size_of_SwTimerStart 00A0  
                                        __size_of___lldiv 00BC  
                                        __size_of___llmod 009A  
                                        __size_of___lwmod 0062  
                                         ?_AssemblePacket 00DB  
                                    AssemblePacket@buffer 00DC  
                                        SwTimersExecute@i 00F2  
                                      ??_ValidateDataRate 0064  
                                _TMR1_SetInterruptHandler A372  
                                  _IOCB4_InterruptHandler 01F3  
                                              _ANSELBbits 000F39  
                                              _ANSELCbits 000F3A  
                                              _ANSELDbits 000F3B  
                                             _radioBuffer 05EF  
                                     ??i2_TMR1_WriteTimer 0003  
         __end_of_ResetParametersForConfirmedTransmission A264  
        __size_of_ResetParametersForConfirmedTransmission 0016  
                ?_ResetParametersForConfirmedTransmission 0001  
               ??_ResetParametersForConfirmedTransmission 0064  
                 _ResetParametersForConfirmedTransmission A24E  
                                   _TMR1_InterruptHandler 01F7  
                                        ??_GenerateSubkey 00AB  
                                        _CountfOptsLength 73C6  
                                              _HALSPISend A340  
                                     ?_ComputeSessionKeys 00A5  
                                          _rxWindowOffset FF77  
                      RADIO_UnhandledInterrupt@modulation 0068  
                              __end_of_MacExecuteCommands 37DA  
                                 __size_of_SysConfigSleep 0094  
                                    ??_RADIO_RegisterRead 0066  
                                    RADIO_DIO4@dioMapping 006B  
                        __end_of_RADIO_UnhandledInterrupt 9BE2  
                                           _UpdateTxPower A3AE  
                                    RADIO_Transmit@buffer 00B5  
                         __end_of_RADIO_FHSSChangeChannel 974E  
                                         _allocatedTimers 00FB  
                          ?_IOCB4_DefaultInterruptHandler 0001  
                          __end_of_INTERRUPT_GetDioStatus A2E2  
                                       ?i2_TMR1_ReadTimer 0001  
                                      _DIO5_ISR_Lora_Init A276  
                                                __ptext10 A324  
                                                __ptext11 9FE8  
                                                __ptext20 A29A  
                                                __ptext12 A264  
                                                __ptext21 A2AC  
                                                __ptext13 A372  
                                              _T1GCONbits 000FCC  
                                                __ptext30 9A62  
                                                __ptext22 A456  
                                                __ptext14 A41C  
                                                __ptext31 A1D4  
                                                __ptext23 98AA  
                                                __ptext15 A276  
                                                __ptext40 7B78  
                                                __ptext32 9A9A  
                                                __ptext24 A386  
                                                __ptext16 A47A  
                                                __ptext41 79A8  
                                                __ptext33 98EC  
                                                __ptext25 A390  
                                                __ptext17 A47C  
                                                __ptext50 938C  
                                                __ptext42 95D8  
                                                __ptext34 76CA  
                                                __ptext26 A39A  
                                                __ptext18 A288  
                                                __ptext51 9D3C  
                                                __ptext43 99EA  
                                                __ptext35 3E6E  
                                                __ptext27 A3A4  
                                                __ptext19 A37C  
                                                __ptext60 0088  
                                                __ptext52 9708  
                                                __ptext44 8A84  
                                                __ptext36 65B0  
                                                __ptext28 A332  
                                                __ptext61 8C10  
                                                __ptext53 836C  
                                                __ptext45 A2BE  
                                                __ptext37 9DC4  
                                                __ptext29 9E1C  
                                                __ptext70 9672  
                                                __ptext62 A0CA  
                                                __ptext54 9BAE  
                                                __ptext46 9D0E  
                                                __ptext38 699C  
                                        ?i2_TMR_SwapTimer 0009  
                                                __ptext71 9B42  
                                                __ptext63 46DA  
                                                __ptext55 6856  
                                                __ptext47 99AC  
                                                __ptext39 5CF2  
                                                __ptext80 62F0  
                                                __ptext72 4464  
                                                __ptext64 5834  
                                                __ptext56 78BA  
                                                __ptext48 9F10  
                                                __ptext81 9270  
                                                __ptext73 A0E8  
                                                __ptext65 884C  
                                                __ptext57 85EC  
                                                __ptext49 92D0  
                                                __ptext90 8970  
                                                __ptext82 9CAE  
                                                __ptext74 A238  
                                                __ptext66 9AD2  
                                                __ptext58 7CFA  
                                                __ptext91 5FFE  
                                                __ptext83 9C7C  
                                                __ptext75 4182  
                                                __ptext67 A45A  
                                                __ptext59 3084  
                                                __ptext92 914A  
                                                __ptext84 37DA  
                                                __ptext76 8B08  
                                                __ptext68 3456  
                                                __ptext93 A3B8  
                                                __ptext85 9CDE  
                                                __ptext77 9438  
                                                __ptext69 9DF0  
                                                __ptext94 77C2  
                                                __ptext86 9E46  
                                                __ptext78 974E  
                                                __ptext95 8FB0  
                                                __ptext87 8DF4  
                                                __ptext79 9794  
                                                __ptext96 27BC  
                                                __ptext88 A3AE  
                                                __ptext97 1D66  
                                                __ptext89 A106  
                                                __ptext98 A43C  
                                                __ptext99 72C4  
                                 ExecuteRxTimingSetup@ptr 006B  
                                  ??_RADIO_SetFSKSyncWord 0070  
                                   ??_UpdateReceiveDelays 006A  
                                   __end_of_LORAWAN_Reset 502E  
                                  __end_of_StartReTxTimer 59D0  
                                 ??_UpdateCurrentDataRate 0064  
                                 ??_UpdateChannelIdStatus 0065  
                                __size_of_UpdateDataRange 0162  
                                  _SetReceptionNotOkState 884C  
                                            _SSP2CON1bits 000F6C  
                                       ??_TMR1_StartTimer 0064  
                                     GenerateSubkey@F7870 01D4  
                                      ??i2_TMR1_ReadTimer 0003  
                               __size_of_RADIO_WritePower 011C  
                                 __end_of_HALDIO5PinValue A368  
                                       ?_UpdateDLSettings 0064  
                                  ConfigureRadio@dataRate 0075  
                                       ?_ValidateRxOffset 0001  
                              __size_of_ValidateFrequency 0084  
                        __size_of_PrepareJoinRequestFrame 0204  
                                           CheckFlags@hdr 0064  
                                  ??_RADIO_WriteFrequency 0075  
                                   __size_of_UpdateCfList 0266  
                                     ?_DIO5_ISR_Lora_Init 0001  
                           __size_of_RADIO_SetOutputPower 000A  
                                           __size_of_main 0126  
                                           __size_of_rand 005E  
                                       _RADIO_ReceiveStop A04C  
                                      ??_UpdateDLSettings 0065  
                                    _LORAWAN_PlatformInit 9FE8  
                                         _FskSyncWordBuff FFFC  
                                      ??_ValidateRxOffset 0064  
                               __end_ofi2_TMR1_WriteTimer A1D4  
               IncludeMacCommandsResponse@bIncludeInFopts 0068  
                                    ??_ComputeSessionKeys 00A7  
                                           _timerOverflow 004D  
                                            _SwTimerStart 840C  
                              __size_of_SwTimersInterrupt 0126  
                                      ?_RADIO_ReceiveStop 0001  
                              ??_RADIO_SetSpreadingFactor 0064  
                                    RADIO_DIO5@dioMapping 006A  
                                   RADIO_TxDone@timeOnAir 00EB  
                          ValidateChannelMask@channelMask 0064  
                             __size_of_DIO0_ISR_Lora_Init 0012  
                              __size_of_EncryptFRMPayload 01FA  
                                         GenerateSubkey@i 00CC  
                                         GenerateSubkey@l 00BC  
                                 PrepareSessionKeys@index 0074  
                                __end_of_TMR_GetDeltaTime 5834  
                                      SwTimerStop@timerId 0064  
                                                _swTimers 0300  
                                        ??_TMR1_ReadTimer 0066  
        LORAWAN_SetNetworkSessionKey@networkSessionKeyNew 006E  
                                    RADIO_RxDone@irqFlags 00F6  
                             __end_of_ValidateChannelMask 8E68  
                                           UpdateCfList@i 00B2  
                      __end_of_INTERRUPT_InterruptManager 0080  
                              _INTERRUPT_InterruptManager 0008  
                                     ??_RADIO_ReceiveStop 0070  
                             PrepareSessionKeys@networkId 0072  
                                       _RADIO_ReleaseData A448  
                                       ??_TMR1_WriteTimer 0066  
                                              _RADIO_DIO0 836C  
                                              _RADIO_DIO1 938C  
                                              _RADIO_DIO2 92D0  
                                              _RADIO_DIO3 9F10  
                                              _RADIO_DIO4 99AC  
                                              _RADIO_DIO5 9D0E  
                                            _SSP2STATbits 000F6D  
                                    ??_DIO5_ISR_Lora_Init 0066  
                    __end_of_INT1_DefaultInterruptHandler A488  
                   __size_of_INT1_DefaultInterruptHandler 0002  
                            _INT1_DefaultInterruptHandler A486  
                       __size_of_RADIO_WriteConfiguration 0570  
                                  __end_of_rxWindowOffset FF7F  
                             i2TMR1_ReadTimer@readValHigh 0007  
                              __size_of_DutyCycleCallback 0314  
                                 EncryptFRMPayload@buffer 00A5  
                                      ?_RADIO_ReleaseData 0001  
                               ?_RADIO_WriteConfiguration 00AA  
                                      __end_of_modulation FF77  
                                              _RADIO_Init 502E  
                         ExecuteRxParamSetupReq@frequency 00AE  
                                __size_of_UpdateFrequency 0046  
                                ?_ValidateChannelMaskCntl 0001  
                                           __roundCounter 004B  
                                              _INTCONbits 000FF2  
                                 ConfigureRadioTx@txPower 007B  
                                __end_of_HALSPICSDeassert A462  
                                __size_of_UpdateDutyCycle 0046  
                                          ?_UpdateTxPower 0001  
                                                memcpy@d1 0064  
                                                memcpy@s1 0066  
                                          _EncKeySchedule 3B36  
                      __size_of_SetCallbackSoftwareTimers 0106  
                                 __size_of_RxJoinResponse 0004  
                                         ??_SwTimerCreate 0064  
                                     ExecuteDutyCycle@ptr 0064  
                                            _UpdateCfList 46DA  
                                     ??_RADIO_ReleaseData 0064  
                                  ??_INTERRUPT_Initialize 0064  
                                                memset@p1 0064  
                                         ??_TMR1_CallBack 0034  
                                    __size_of_SwTimerStop 0028  
                                        _RADIO_ReadRandom 7FEE  
                                       _RADIO_TxDone$1207 00EF  
                                      _EXT_INT_Initialize 98AA  
                                         ?_StartReTxTimer 0001  
                                   _TMR_OverrideRemaining 82C2  
                                                intlevel2 0000  
                          RADIO_ReceiveStart@rxWindowSize 00B5  
                               __end_of_RADIO_ReceiveStop A06C  
                                         _SwTimersExecute 76CA  
                     SwTimerSetCallback@callbackParameter 0066  
                                             FillSubKey@i 006B  
                           RADIO_WriteFrequency@frequency 0071  
                                        ___lwmod@dividend 00AC  
                                   ?_LORAWAN_PlatformInit 0001  
                                        ___lldiv@dividend 0064  
                                __end_of_ExecuteDevStatus A3C2  
                                 ?_PIN_MANAGER_Initialize 0001  
                                      _DefaultChannels433 FFA8  
                                   __size_of_IO_pins_init 0018  
                                      _DefaultChannels868 FFD2  
                                     ?_EXT_INT_Initialize 0001  
                                            ___abdiv@sign 0068  
                                UpdateDutyCycle@channelId 0066  
                                  GenerateSubkey@const_Rb 00AC  
                         __size_of_ExecuteRxParamSetupReq 0276  
                                        ??_ADC_SelChannel 0064  
                               UpdateJoinInProgress@state 0064  
                                       ??_ValidateTxPower 0064  
                                     _LORAWAN_TxDone$2088 00CD  
                                     _LORAWAN_TxDone$2089 00D1  
                                     _LORAWAN_TxDone$6297 00DA  
                      __end_of_LORAWAN_LinkCheckConfigure 62F0  
                               __end_of_RADIO_ReleaseData A44E  
                              _LORAWAN_LinkCheckConfigure 6178  
                                      __end_of_txPower433 FFA2  
                                __size_of_EnableChannels1 008C  
                                      __end_of_txPower868 FFA8  
                                   _HALResetPinMakeOutput A466  
                                ??_HALResetPinOutputValue 0064  
                                  __size_of_INT1_CallBack 0024  
                               RADIO_WriteConfiguration@i 00AF  
                               ExecuteRxTimingSetup@delay 006D  
                                        AESEncodeLoRa@key 0093  
                               __size_of_SetJoinFailState 0038  
                        LORAWAN_LinkCheckConfigure@period 00AA  
                                        ??_ConfigureRadio 0075  
                                      _SwTimerSetCallback 97DA  
             __end_of_UpdateRetransmissionAckTimeoutState 8C8C  
            __size_of_UpdateRetransmissionAckTimeoutState 007C  
                    ?_UpdateRetransmissionAckTimeoutState 0001  
                   ??_UpdateRetransmissionAckTimeoutState 009E  
                     _UpdateRetransmissionAckTimeoutState 8C10  
                                       RADIO_ReadRandom@i 0075  
                            SearchAvailableChannel@result 00BB  
                                   RADIO_WritePower@paDac 0069  
                                  __size_of_INT2_CallBack 0024  
                             __size_of_DIO4_ISR_Lora_Init 0002  
                                          _AESEncode$3867 0086  
                                          _AESEncode$3868 0088  
                                          _AESEncode$3869 008A  
                                   __end_of_DIO0_ISR_Lora A47A  
                                __end_of_SwTimerIsRunning 9D98  
                                       ??_CheckMcastFlags 0066  
                                __end_of_ExecuteLinkCheck 9CAE  
                                   RADIO_WritePower@power 006A  
                                ?_CreateAllSoftwareTimers 0001  
                        RADIO_WriteMode@currentModulation 006B  
                                    ??_EXT_INT_Initialize 0066  
                            RADIO_SetFSKSyncWord@syncWord 006E  
                                            _rxWindowSize FF7F  
                                  __end_of_EncKeySchedule 3E6E  
                           ?_INT1_DefaultInterruptHandler 0001  
                                   __end_of_DIO1_ISR_Lora A476  
                                     ?_SwTimerSetCallback 0064  
                                __end_of_SwTimerReadValue 996C  
                                        ___lldiv@quotient 006C  
                                             ?_HALSPISend 0001  
                                __end_of_ExecuteDutyCycle 91AC  
                                         ___lwmod@divisor 00AE  
                  __end_of_UpdateReceiveWindow2Parameters A24E  
                 __size_of_UpdateReceiveWindow2Parameters 0016  
                          _UpdateReceiveWindow2Parameters A238  
                                 UpdateTxPower@txPowerNew 0064  
                                         ___lwmod@counter 00B0  
                         _LORAWAN_LinkCheckConfigure$3273 00B0  
                        __end_of_INT1_SetInterruptHandler A39A  
                            FindSmallestDataRate@dataRate 0067  
                           LORAWAN_Join@activationTypeNew 00F1  
                                   __size_of_TMR_ISR_lora 0056  
                              ??_LORAWAN_SetDeviceAddress 0068  
                                       __CFG_T3CMX$PORTC0 000000  
                                   __end_of_DIO2_ISR_Lora A472  
                                    _SystemBlockingWaitMs 9B78  
                                   FindSmallestDataRate@i 0066  
                      ComputeSessionKeys@joinAcceptBuffer 00A5  
                                 __size_of_EnableChannels 001E  
                                       ?_LORAWAN_GetState 0001  
                            __end_of_UpdateJoinInProgress A160  
                            __end_of_ExecuteRxTimingSetup 9E1C  
                                 __size_of_HALSPICSAssert 0004  
                                            _IO_pins_init A220  
                                 __end_of_FskSyncWordBuff FFFF  
                __end_of_RADIO_WriteFSKFrequencyDeviation 8FB0  
               __size_of_RADIO_WriteFSKFrequencyDeviation 006C  
                      ??_RADIO_WriteFSKFrequencyDeviation 0075  
                       ?_RADIO_WriteFSKFrequencyDeviation 0071  
                        _RADIO_WriteFSKFrequencyDeviation 8F44  
                __end_of_LORAWAN_SetApplicationSessionKey 9AD2  
               __size_of_LORAWAN_SetApplicationSessionKey 0038  
                      ??_LORAWAN_SetApplicationSessionKey 0070  
                       ?_LORAWAN_SetApplicationSessionKey 006E  
                        _LORAWAN_SetApplicationSessionKey 9A9A  
                                        ExtractMic@buffer 006E  
                                 ??_RADIO_FSKPayloadReady 00F6  
                                UpdateDataRange@channelId 0066  
                                      ??_LORAWAN_GetState 0064  
                                _RADIO_UnhandledInterrupt 9BAE  
                                        ?_HALDIO5PinValue 0001  
                          __end_of_PIN_MANAGER_Initialize 8ED6  
                                       ?_LORAWAN_Mainloop 0001  
                             __end_of_RADIO_RegisterWrite A08C  
                                 __size_of_ExecuteLinkAdr 035C  
                            RADIO_WriteFSKBitRate@bitRate 0071  
                                      i2_TMR_GetDeltaTime 5E78  
                                         RADIO_SetCRC@crc 0064  
                                       __CFG_FOSC$INTIO67 000000  
                                  _IOCB5_InterruptHandler 01F5  
                                         _PIN_MANAGER_IOC A314  
                                     RADIO_WritePower@ocp 0068  
                                      ??_LORAWAN_Mainloop 00F8  
                              __size_ofi2_TMR1_WriteTimer 001C  
                                    ??_SwTimerSetCallback 0067  
                                       ??_UpdateDataRange 0065  
                                 ?_UpdateMinMaxChDataRate 0001  
                                         _TMR1_Initialize 9C4A  
                        RADIO_WriteConfiguration@regValue 00B4  
                                 i2TMR1_ReadTimer@readVal 0005  
                                      _RadioConfiguration 018C  
                                           ExtractMic@mic 0076  
                                       _LORAWAN_RxTimeout 3084  
                             __end_of_RADIO_SetModulation A3FE  
                           __size_of_HALResetPinMakeInput 0004  
                             __size_of_RADIO_RxFSKTimeout 003C  
                                        ??_LORAWAN_RxDone 00F1  
                                     ?i2_TMR_GetDeltaTime 0009  
